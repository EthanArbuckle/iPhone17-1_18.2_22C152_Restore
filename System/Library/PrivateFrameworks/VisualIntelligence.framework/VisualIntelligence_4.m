uint64_t sub_1DCF5171C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1DD0490A8();
  v8 = -1 << *(unsigned char *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1DCF53554(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1DCF51818(unsigned char *a1, uint64_t a2)
{
  v3 = v2;
  uint64_t v6 = *v2;
  sub_1DD0490B8();
  sub_1DCD9C35C(a2);
  swift_bridgeObjectRetain();
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1DD049108();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_86:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v3;
    void *v3 = 0x8000000000000000;
    sub_1DCF53678(a2, v9, isUniquelyReferenced_nonNull_native);
    void *v3 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_90;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    unint64_t v11 = 0xE300000000000000;
    uint64_t v12 = 7631457;
    switch(*(unsigned char *)(*(void *)(v6 + 48) + v9))
    {
      case 1:
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v12 = 0x4C6C61727574616ELL;
        unint64_t v11 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1802465122;
        break;
      case 6:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1937006947;
        break;
      case 8:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1936158564;
        break;
      case 9:
        unint64_t v11 = 0xE700000000000000;
        unsigned int v13 = 1835626081;
        goto LABEL_17;
      case 0xA:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v11 = 0xE700000000000000;
        unsigned int v13 = 1835884909;
LABEL_17:
        uint64_t v12 = v13 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v12 = 0x726F737365636361;
        unint64_t v11 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1685024614;
        break;
      case 0x11:
        uint64_t v12 = 0x6F726665726F7473;
        unint64_t v11 = 0xEA0000000000746ELL;
        break;
      case 0x12:
        unsigned int v14 = 1852270963;
        goto LABEL_25;
      case 0x13:
        unint64_t v11 = 0x80000001DD066AB0;
        uint64_t v12 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v14 = 1869903201;
LABEL_25:
        uint64_t v12 = v14 | 0x626D795300000000;
        unint64_t v11 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v12 = 0x676F4C646E617262;
        unint64_t v11 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v12 = 0x727574706C756373;
        unint64_t v11 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v15 = 0xE300000000000000;
    uint64_t v16 = 7631457;
    switch((char)a2)
    {
      case 1:
        unint64_t v15 = 0xE600000000000000;
        if (v12 == 0x65727574616ELL) {
          goto LABEL_80;
        }
        goto LABEL_81;
      case 2:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x6B72616D646E616CLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 3:
        unint64_t v15 = 0xEF6B72616D646E61;
        if (v12 != 0x4C6C61727574616ELL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 4:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x616964656DLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 5:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1802465122) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 6:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x6D75626C61) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 7:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1937006947) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 8:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1936158564) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 9:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v17 = 1835626081;
        goto LABEL_55;
      case 10:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x7364726962) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 11:
        unint64_t v15 = 0xE700000000000000;
        unint64_t v18 = 0x746365736E69;
        goto LABEL_56;
      case 12:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x73656C6974706572) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 13:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v17 = 1835884909;
LABEL_55:
        unint64_t v18 = v17 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_56:
        if (v12 != (v18 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 14:
        unint64_t v15 = 0xE700000000000000;
        if (v12 != 0x6C657261707061) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 15:
        unint64_t v15 = 0xEB00000000736569;
        if (v12 != 0x726F737365636361) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 16:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1685024614) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 17:
        unint64_t v15 = 0xEA0000000000746ELL;
        if (v12 != 0x6F726665726F7473) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 18:
        unsigned int v19 = 1852270963;
        goto LABEL_70;
      case 19:
        unint64_t v15 = 0x80000001DD066AB0;
        if (v12 != 0xD000000000000011) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 20:
        unsigned int v19 = 1869903201;
LABEL_70:
        unint64_t v15 = 0xEA00000000006C6FLL;
        if (v12 != (v19 | 0x626D795300000000)) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 21:
        unint64_t v15 = 0xEF6C6F626D79536FLL;
        if (v12 != 0x676F4C646E617262) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 22:
        unint64_t v15 = 0xE700000000000000;
        if (v12 != 0x65646F63726162) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 23:
        unint64_t v15 = 0xE900000000000065;
        if (v12 != 0x727574706C756373) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 24:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x656E696C796B73;
        goto LABEL_79;
      case 25:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x44327463656A626FLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      default:
LABEL_79:
        if (v12 != v16) {
          goto LABEL_81;
        }
LABEL_80:
        if (v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_89;
        }
LABEL_81:
        char v20 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_89:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v9);
LABEL_90:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1DCF52014(unint64_t *a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1DD0490B8();
  uint64_t result = a2 + HIDWORD(a2);
  if (!__CFADD__(a2, HIDWORD(a2)))
  {
    sub_1DD0490C8();
    uint64_t v7 = sub_1DD049108();
    uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v9 = v7 & ~v8;
    if ((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
    {
      uint64_t v10 = *(void *)(v5 + 48);
      if (*(void *)(v10 + 8 * v9) == a2)
      {
LABEL_7:
        uint64_t result = 0;
        a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v9);
LABEL_9:
        *a1 = a2;
        return result;
      }
      uint64_t v11 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v11;
        if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * v9) == a2) {
          goto LABEL_7;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1DCF53E6C(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF5213C(double *a1, double a2, double a3, double a4)
{
  uint64_t v9 = *v4;
  sub_1DD0490B8();
  sub_1DD0490F8();
  uint64_t v10 = sub_1DD049108();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    while (1)
    {
      unsigned int v14 = (double *)(*(void *)(v9 + 48) + 24 * v12);
      BOOL v15 = *v14 == a2 && v14[1] == a3;
      if (v15 && v14[2] == a4) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_11;
      }
    }
    uint64_t result = 0;
    unsigned int v19 = (double *)(*(void *)(*v4 + 48) + 24 * v12);
    a2 = *v19;
    a3 = v19[1];
    a4 = v19[2];
  }
  else
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_1DCF53FC4(v12, isUniquelyReferenced_nonNull_native, a2, a3, a4);
    uint64_t *v4 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  return result;
}

uint64_t sub_1DCF522B8()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86910);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unsigned int v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1DD0490B8();
      sub_1DD0484F8();
      uint64_t result = sub_1DD049108();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCF52598()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853A8);
  uint64_t result = sub_1DD048B58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1DD0490A8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCF5281C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C0);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1DD0490B8();
      sub_1DCD9C35C(v19);
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DD049108();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCF52AF4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B8);
  uint64_t result = sub_1DD048B58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_40;
        }
        if (v15 >= v10)
        {
LABEL_34:
          uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
          if (v26 > 63) {
            bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v6 = -1 << v26;
          }
          v1 = v0;
          *(void *)(v2 + 16) = 0;
          break;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_34;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_34;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10) {
                goto LABEL_34;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v10) {
                    goto LABEL_34;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1DD0490B8();
      uint64_t result = v18 + HIDWORD(v18);
      if (__CFADD__(v18, HIDWORD(v18)))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      sub_1DD0490C8();
      uint64_t result = sub_1DD049108();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCF52DA8()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B0);
  uint64_t result = sub_1DD048B58();
  uint64_t v3 = result;
  if (*(void *)(v1 + 16))
  {
    int64_t v4 = 0;
    uint64_t v29 = (void *)(v1 + 56);
    uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v1 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v4 << 6);
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v8) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v4;
        if (!v15)
        {
          int64_t v4 = v14 + 1;
          if (v14 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v4];
          if (!v15)
          {
            int64_t v4 = v14 + 2;
            if (v14 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v4];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v1 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v4 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v4 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v4];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v4 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v4 << 6);
      }
      int64_t v17 = (uint64_t *)(*(void *)(v1 + 48) + 24 * v13);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v20 = v17[2];
      sub_1DD0490B8();
      sub_1DD0490F8();
      uint64_t result = sub_1DD049108();
      uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = (void *)(*(void *)(v3 + 48) + 24 * v10);
      *uint64_t v11 = v18;
      v11[1] = v19;
      v11[2] = v20;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_1DCF530B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86900);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 8 * v16;
      char v21 = *(unsigned char *)v20;
      int v22 = *(_DWORD *)(v20 + 4);
      sub_1DD0490B8();
      sub_1DCD9C35C(v21);
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      sub_1DD0490E8();
      uint64_t result = sub_1DD049108();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v10 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 8 * v13;
      *(unsigned char *)uint64_t v14 = v21;
      *(_DWORD *)(v14 + 4) = v22;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1DCF533B8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1DCF522B8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1DCF5415C();
      goto LABEL_22;
    }
    sub_1DCF54B28();
  }
  uint64_t v11 = *v4;
  sub_1DD0490B8();
  sub_1DD0484F8();
  uint64_t result = sub_1DD049108();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1DD048FA8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1DD049018();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1DD048FA8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1DCF53554(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1DCF52598();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1DCF54310();
      goto LABEL_14;
    }
    sub_1DCF54DD8();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1DD0490A8();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1DD049018();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1DCF53678(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1DCF5281C();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (uint64_t)sub_1DCF544A8();
        goto LABEL_93;
      }
      sub_1DCF5503C();
    }
    uint64_t v9 = *v3;
    sub_1DD0490B8();
    sub_1DCD9C35C(v6);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (2)
      {
        unint64_t v12 = 0xE300000000000000;
        uint64_t v13 = 7631457;
        switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0xE600000000000000;
            uint64_t v13 = 0x65727574616ELL;
            break;
          case 2:
            unint64_t v12 = 0xE800000000000000;
            uint64_t v13 = 0x6B72616D646E616CLL;
            break;
          case 3:
            uint64_t v13 = 0x4C6C61727574616ELL;
            unint64_t v12 = 0xEF6B72616D646E61;
            break;
          case 4:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v13 = 0x616964656DLL;
            break;
          case 5:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1802465122;
            break;
          case 6:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v13 = 0x6D75626C61;
            break;
          case 7:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1937006947;
            break;
          case 8:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1936158564;
            break;
          case 9:
            unint64_t v12 = 0xE700000000000000;
            unsigned int v14 = 1835626081;
            goto LABEL_27;
          case 0xA:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v13 = 0x7364726962;
            break;
          case 0xB:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x73746365736E69;
            break;
          case 0xC:
            unint64_t v12 = 0xE800000000000000;
            uint64_t v13 = 0x73656C6974706572;
            break;
          case 0xD:
            unint64_t v12 = 0xE700000000000000;
            unsigned int v14 = 1835884909;
LABEL_27:
            uint64_t v13 = v14 | 0x736C6100000000;
            break;
          case 0xE:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x6C657261707061;
            break;
          case 0xF:
            uint64_t v13 = 0x726F737365636361;
            unint64_t v12 = 0xEB00000000736569;
            break;
          case 0x10:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1685024614;
            break;
          case 0x11:
            unint64_t v12 = 0xEA0000000000746ELL;
            uint64_t v13 = 0x6F726665726F7473;
            break;
          case 0x12:
            unsigned int v15 = 1852270963;
            goto LABEL_34;
          case 0x13:
            unint64_t v12 = 0x80000001DD066AB0;
            uint64_t v13 = 0xD000000000000011;
            break;
          case 0x14:
            unsigned int v15 = 1869903201;
LABEL_34:
            uint64_t v13 = v15 | 0x626D795300000000;
            unint64_t v12 = 0xEA00000000006C6FLL;
            break;
          case 0x15:
            uint64_t v13 = 0x676F4C646E617262;
            unint64_t v12 = 0xEF6C6F626D79536FLL;
            break;
          case 0x16:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x65646F63726162;
            break;
          case 0x17:
            uint64_t v13 = 0x727574706C756373;
            unint64_t v12 = 0xE900000000000065;
            break;
          case 0x18:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x656E696C796B73;
            break;
          case 0x19:
            unint64_t v12 = 0xE800000000000000;
            uint64_t v13 = 0x44327463656A626FLL;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xE300000000000000;
        unint64_t v17 = 7631457;
        switch(v6)
        {
          case 1:
            unint64_t v16 = 0xE600000000000000;
            if (v13 != 0x65727574616ELL) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 2:
            unint64_t v16 = 0xE800000000000000;
            if (v13 != 0x6B72616D646E616CLL) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 3:
            unint64_t v16 = 0xEF6B72616D646E61;
            if (v13 != 0x4C6C61727574616ELL) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 4:
            unint64_t v16 = 0xE500000000000000;
            if (v13 != 0x616964656DLL) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 5:
            unint64_t v16 = 0xE400000000000000;
            if (v13 != 1802465122) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 6:
            unint64_t v16 = 0xE500000000000000;
            if (v13 != 0x6D75626C61) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 7:
            unint64_t v16 = 0xE400000000000000;
            if (v13 != 1937006947) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 8:
            unint64_t v16 = 0xE400000000000000;
            if (v13 != 1936158564) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 9:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v19 = 1835626081;
            goto LABEL_67;
          case 10:
            unint64_t v16 = 0xE500000000000000;
            if (v13 != 0x7364726962) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 11:
            unint64_t v16 = 0xE700000000000000;
            unint64_t v18 = 0x746365736E69;
            goto LABEL_68;
          case 12:
            unint64_t v16 = 0xE800000000000000;
            if (v13 != 0x73656C6974706572) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 13:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v19 = 1835884909;
LABEL_67:
            unint64_t v18 = v19 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_68:
            if (v13 != (v18 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 14:
            unint64_t v16 = 0xE700000000000000;
            if (v13 != 0x6C657261707061) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 15:
            unint64_t v16 = 0xEB00000000736569;
            if (v13 != 0x726F737365636361) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 16:
            unint64_t v16 = 0xE400000000000000;
            if (v13 != 1685024614) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 17:
            unint64_t v16 = 0xEA0000000000746ELL;
            if (v13 != 0x6F726665726F7473) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 18:
            unsigned int v21 = 1852270963;
            goto LABEL_80;
          case 19:
            unint64_t v16 = 0x80000001DD066AB0;
            unint64_t v17 = 0xD000000000000011;
            goto LABEL_86;
          case 20:
            unsigned int v21 = 1869903201;
LABEL_80:
            unint64_t v16 = 0xEA00000000006C6FLL;
            if (v13 != (v21 | 0x626D795300000000)) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 21:
            unint64_t v16 = 0xEF6C6F626D79536FLL;
            if (v13 != 0x676F4C646E617262) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 22:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v20 = 0x646F63726162;
            goto LABEL_83;
          case 23:
            unint64_t v16 = 0xE900000000000065;
            if (v13 != 0x727574706C756373) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 24:
            unint64_t v16 = 0xE700000000000000;
            uint64_t v20 = 0x6E696C796B73;
LABEL_83:
            if (v13 != (v20 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
              goto LABEL_88;
            }
            goto LABEL_87;
          case 25:
            unint64_t v16 = 0xE800000000000000;
            if (v13 != 0x44327463656A626FLL) {
              goto LABEL_88;
            }
            goto LABEL_87;
          default:
LABEL_86:
            if (v13 != v17) {
              goto LABEL_88;
            }
LABEL_87:
            if (v12 == v16) {
              goto LABEL_96;
            }
LABEL_88:
            char v22 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v22) {
              goto LABEL_97;
            }
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_93:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v23 + 48) + a2) = v6;
  uint64_t v24 = *(void *)(v23 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_96:
    swift_bridgeObjectRelease_n();
LABEL_97:
    sub_1DD049018();
    __break(1u);
    JUMPOUT(0x1DCF53D9CLL);
  }
  *(void *)(v23 + 16) = v26;
  return result;
}

uint64_t sub_1DCF53E6C(uint64_t result, unint64_t a2, char a3)
{
  unint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_15;
  }
  if (a3)
  {
    sub_1DCF52AF4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1DCF5463C();
      goto LABEL_15;
    }
    sub_1DCF552E0();
  }
  uint64_t v8 = *v3;
  sub_1DD0490B8();
  uint64_t result = v5 + HIDWORD(v5);
  if (__CFADD__(v5, HIDWORD(v5))) {
    goto LABEL_18;
  }
  sub_1DD0490C8();
  uint64_t result = sub_1DD049108();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_14:
      uint64_t result = sub_1DD049018();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_14;
        }
      }
    }
  }
LABEL_15:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (!v14)
  {
    *(void *)(v12 + 16) = v15;
    return result;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1DCF53FC4(uint64_t result, char a2, double a3, double a4, double a5)
{
  unint64_t v6 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a2 & 1) != 0) {
    goto LABEL_18;
  }
  if (a2)
  {
    sub_1DCF52DA8();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_1DCF547D4();
      goto LABEL_18;
    }
    sub_1DCF55564();
  }
  uint64_t v12 = *v5;
  sub_1DD0490B8();
  sub_1DD0490F8();
  uint64_t result = sub_1DD049108();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v6 = result & ~v13;
  if ((*(void *)(v12 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v14 = ~v13;
    do
    {
      uint64_t v15 = (double *)(*(void *)(v12 + 48) + 24 * v6);
      BOOL v16 = *v15 == a3 && v15[1] == a4;
      if (v16 && v15[2] == a5) {
        goto LABEL_21;
      }
      unint64_t v6 = (v6 + 1) & v14;
    }
    while (((*(void *)(v12 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
LABEL_18:
  uint64_t v18 = *v5;
  *(void *)(*v5 + 8 * (v6 >> 6) + 56) |= 1 << v6;
  uint64_t v19 = (double *)(*(void *)(v18 + 48) + 24 * v6);
  *uint64_t v19 = a3;
  v19[1] = a4;
  v19[2] = a5;
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (!v21)
  {
    *(void *)(v18 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_1DD049018();
  __break(1u);
  return result;
}

void *sub_1DCF5415C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86910);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCF54310()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCF544A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCF5463C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCF547D4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v17;
    *(void *)(v19 + 16) = v18;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCF54980()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86900);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048B48();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    int v18 = *(_DWORD *)(v17 + 4);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(unsigned char *)uint64_t v19 = *(unsigned char *)v17;
    *(_DWORD *)(v19 + 4) = v18;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DCF54B28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86910);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1DD0490B8();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCF54DD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853A8);
  uint64_t result = sub_1DD048B58();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1DD0490A8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCF5503C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C0);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1DD0490B8();
    sub_1DCD9C35C(v19);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCF552E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B8);
  uint64_t result = sub_1DD048B58();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = v2 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v10)
        {
LABEL_34:
          uint64_t result = swift_release();
          uint64_t v1 = v0;
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v15);
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v5);
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_34;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v5);
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10) {
                goto LABEL_34;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_34;
                  }
                  unint64_t v16 = *(void *)(v6 + 8 * v5);
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1DD0490B8();
      uint64_t result = v18 + HIDWORD(v18);
      if (__CFADD__(v18, HIDWORD(v18))) {
        break;
      }
      sub_1DD0490C8();
      uint64_t result = sub_1DD049108();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_release();
LABEL_36:
    uint64_t *v1 = v4;
  }
  return result;
}

uint64_t sub_1DCF55564()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043B0);
  uint64_t result = sub_1DD048B58();
  uint64_t v3 = result;
  if (!*(void *)(v1 + 16))
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t *v0 = v3;
    return result;
  }
  int64_t v4 = 0;
  uint64_t v5 = v1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v1 + 56);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v14 >= v28) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_24:
    int64_t v17 = (uint64_t *)(*(void *)(v1 + 48) + 24 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    sub_1DD0490B8();
    sub_1DD0490F8();
    uint64_t result = sub_1DD049108();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = (void *)(*(void *)(v3 + 48) + 24 * v10);
    *uint64_t v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28) {
    goto LABEL_33;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v28) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1DCF5583C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86900);
  uint64_t v3 = sub_1DD048B58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v15 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v9) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_24:
    uint64_t v20 = *(void *)(v2 + 48) + 8 * v16;
    char v21 = *(unsigned char *)v20;
    int v22 = *(_DWORD *)(v20 + 4);
    sub_1DD0490B8();
    sub_1DCD9C35C(v21);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    sub_1DD0490E8();
    uint64_t result = sub_1DD049108();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v10 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 8 * v13;
    *(unsigned char *)uint64_t v14 = v21;
    *(_DWORD *)(v14 + 4) = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v12 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v12);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCF55B0C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  int64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1DCF55BAC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void *sub_1DCF55C90(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
    int64_t v17 = (char *)v7 + v9;
    unint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1DD047BF8();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v17, v10, v11);
    uint64_t v13 = a3[6];
    *((unsigned char *)v7 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v14 = (char *)v7 + v13;
    unint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *(void *)((char *)v7 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DCF55DE4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
  uint64_t v3 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

void *sub_1DCF55E88(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
  unint64_t v15 = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  uint64_t v9 = sub_1DD047BF8();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v15, v8, v9);
  uint64_t v11 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  int64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)int64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1DCF55F90(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  int64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCF560A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

void *sub_1DCF56174(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCF56268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF5627C);
}

uint64_t sub_1DCF5627C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCF5633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF56350);
}

uint64_t sub_1DCF56350(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DomainPredictionDomainAssignmentRule()
{
  uint64_t result = qword_1EBE85588;
  if (!qword_1EBE85588) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF56458()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCF56504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v85 = a4;
  *(void *)&long long v86 = a1;
  uint64_t v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v5 - 8);
  v81 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DomainPredictionDomainAssignmentRule();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD048068();
  uint64_t v84 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v74 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v74 - v17;
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v74 - v20;
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v74 - v23;
  sub_1DCD32C3C(v86, (uint64_t)v115);
  if (*(unsigned char *)(a2 + 104))
  {
LABEL_16:
    sub_1DCD32C3C((uint64_t)v115, v85);
    return sub_1DCD5D8A8((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  v74 = v21;
  v75 = v12;
  v77 = v15;
  v78 = v9;
  *(void *)&long long v86 = a2;
  uint64_t v25 = (uint64_t)v81;
  v76 = v18;
  uint64_t v79 = v10;
  uint64_t v80 = v7;
  uint64_t v26 = v84;
  uint64_t v27 = v83[2];
  BOOL v28 = v83;
  if (*(void *)(v27 + 16))
  {
    sub_1DCD370D0(v27);
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    if (!v30)
    {
      sub_1DCDB40EC((uint64_t)v24);
      uint64_t v59 = (uint64_t)v74;
      sub_1DCDB4300((uint64_t)v74);
      v60 = *(void (**)(char *, uint64_t))(v26 + 8);
      uint64_t v61 = v79;
      v60(v24, v79);
      v62 = sub_1DD048048();
      os_log_type_t v63 = sub_1DD048848();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v64 = 0;
        _os_log_impl(&dword_1DCCF9000, v62, v63, "No satisified coarse label.", v64, 2u);
        MEMORY[0x1E01B07E0](v64, -1, -1);
      }

      v60((char *)v59, v61);
      goto LABEL_16;
    }
  }
  uint64_t v31 = v86;
  uint64_t v32 = *(void *)(v86 + 56);
  uint64_t v33 = v28[1];
  if (*(void *)(v33 + 16))
  {
    uint64_t v34 = *(uint64_t *)((char *)v28 + *(int *)(v80 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_1DCD973D8(v35, v33, v34);
    uint64_t v31 = v86;
    uint64_t v32 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v37 = (uint64_t)v77;
  uint64_t v38 = (uint64_t)v78;
  sub_1DCDD54CC(*v28, v32, *(void **)(v31 + 64), &v106);
  swift_bridgeObjectRelease();
  if (!(void)v109)
  {
    sub_1DCDB40EC(v37);
    uint64_t v52 = (uint64_t)v75;
    sub_1DCDB4300((uint64_t)v75);
    v53 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    uint64_t v54 = v37;
    uint64_t v55 = v79;
    v53(v54, v79);
    v56 = sub_1DD048048();
    os_log_type_t v57 = sub_1DD048848();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1DCCF9000, v56, v57, "No satisfied domain prediction net results.", v58, 2u);
      MEMORY[0x1E01B07E0](v58, -1, -1);
    }

    v53(v52, v55);
    goto LABEL_16;
  }
  long long v86 = v109;
  v81 = (char *)v110;
  uint64_t v82 = *((void *)&v108 + 1);
  int v39 = DWORD2(v110);
  sub_1DCD5D8A8((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  uint64_t v40 = (uint64_t)v76;
  sub_1DCDB40EC((uint64_t)v76);
  sub_1DCF56E24((uint64_t)v28, v38, (uint64_t (*)(void))type metadata accessor for DomainPredictionDomainAssignmentRule);
  sub_1DCF56E24(v31, v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  v41 = sub_1DD048048();
  os_log_type_t v42 = sub_1DD048848();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (long long *)v25;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(void *)&v100[0] = v45;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v46 = sub_1DCD9C35C(*(unsigned char *)(v38 + *(int *)(v80 + 20)));
    *(void *)&long long v106 = sub_1DCED7FA0(v46, v47, (uint64_t *)v100);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCF56E8C(v38, (uint64_t (*)(void))type metadata accessor for DomainPredictionDomainAssignmentRule);
    *(_WORD *)(v44 + 12) = 2080;
    long long v48 = v43[1];
    long long v106 = *v43;
    long long v107 = v48;
    uint64_t v49 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v106 = sub_1DCED7FA0(v49, v50, (uint64_t *)v100);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCF56E8C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v51 = v80;
    _os_log_impl(&dword_1DCCF9000, v41, v42, "Assign %s to region %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v45, -1, -1);
    MEMORY[0x1E01B07E0](v44, -1, -1);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v76, v79);
  }
  else
  {
    sub_1DCF56E8C(v38, (uint64_t (*)(void))type metadata accessor for DomainPredictionDomainAssignmentRule);
    sub_1DCF56E8C(v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v40, v79);
    uint64_t v51 = v80;
  }
  char v66 = *((unsigned char *)v28 + *(int *)(v51 + 20));
  LOBYTE(v100[0]) = v66;
  *(_OWORD *)((char *)v100 + 8) = 0u;
  *(_OWORD *)((char *)&v100[1] + 8) = 0u;
  BYTE8(v100[2]) = 0;
  long long v101 = 0u;
  long long v102 = 0u;
  *(_OWORD *)((char *)v103 + 8) = v86;
  *(void *)&v103[0] = v82;
  *((void *)&v103[1] + 1) = v81;
  LODWORD(v104) = 0;
  DWORD1(v104) = v39;
  *((void *)&v104 + 1) = 0;
  LOWORD(v105[0]) = 0;
  *(void *)&v105[1] = 0;
  *((void *)&v105[0] + 1) = 0;
  *(void *)((char *)&v105[1] + 5) = 0;
  sub_1DCD32C3C((uint64_t)v115, (uint64_t)&v106);
  if (sub_1DCD32CA4((uint64_t)&v106) == 1) {
    goto LABEL_25;
  }
  uint64_t v67 = sub_1DCD9C35C(v106);
  uint64_t v69 = v68;
  if (v67 != sub_1DCD9C35C(v66) || v69 != v70)
  {
    char v71 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v71) {
      goto LABEL_23;
    }
    sub_1DCD5D8A8((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
LABEL_25:
    long long v95 = v103[1];
    long long v96 = v104;
    v97[0] = v105[0];
    *(_OWORD *)((char *)v97 + 13) = *(_OWORD *)((char *)v105 + 13);
    long long v91 = v100[2];
    long long v92 = v101;
    long long v93 = v102;
    long long v94 = v103[0];
    long long v72 = v100[0];
    long long v73 = v100[1];
    goto LABEL_26;
  }
  swift_bridgeObjectRelease_n();
LABEL_23:
  v98[6] = v112;
  v98[7] = v113;
  v99[0] = v114[0];
  *(_OWORD *)((char *)v99 + 13) = *(_OWORD *)((char *)v114 + 13);
  v98[2] = v108;
  v98[3] = v109;
  v98[4] = v110;
  v98[5] = v111;
  v98[0] = v106;
  v98[1] = v107;
  long long v95 = v103[1];
  long long v96 = v104;
  v97[0] = v105[0];
  *(_OWORD *)((char *)v97 + 13) = *(_OWORD *)((char *)v105 + 13);
  long long v91 = v100[2];
  long long v92 = v101;
  long long v93 = v102;
  long long v94 = v103[0];
  long long v89 = v100[0];
  long long v90 = v100[1];
  sub_1DCF22BB0((uint64_t)v98, &v89, (uint64_t)v87);
  sub_1DCD5D8A8((uint64_t)v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
  sub_1DCD32DD4((uint64_t)v100);
  long long v95 = v87[6];
  long long v96 = v87[7];
  v97[0] = v88[0];
  *(_OWORD *)((char *)v97 + 13) = *(_OWORD *)((char *)v88 + 13);
  long long v91 = v87[2];
  long long v92 = v87[3];
  long long v93 = v87[4];
  long long v94 = v87[5];
  long long v72 = v87[0];
  long long v73 = v87[1];
LABEL_26:
  long long v89 = v72;
  long long v90 = v73;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v89);
  sub_1DCD32C3C((uint64_t)&v89, (uint64_t)v98);
  return sub_1DCD32C3C((uint64_t)v98, v85);
}

uint64_t sub_1DCF56E24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF56E8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1DCF56EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo;
  uint64_t result = sub_1DCFE5704(*(void *)(a1 + 128), v4 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo, 0x6972656767697274, 0xEA0000000000676ELL, 0x74696E676F636572, 0xEB000000006E6F69);
  if (!v5)
  {
    unint64_t v15 = result;
    uint64_t v27 = a4;
    int v26 = *(unsigned __int8 *)(v4 + 16);
    sub_1DCD56CC8(v13, (uint64_t)v12);
    uint64_t v28 = a2;
    if (v15)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_1DCFA34B0(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
    }
    v25[1] = type metadata accessor for DomainModelRequestFactory();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    sub_1DCD8190C(a1, (uint64_t)v30);
    uint64_t v18 = swift_allocObject();
    long long v19 = v30[7];
    *(_OWORD *)(v18 + 136) = v30[6];
    *(_OWORD *)(v18 + 152) = v19;
    *(_OWORD *)(v18 + 168) = v30[8];
    long long v20 = v30[3];
    *(_OWORD *)(v18 + 72) = v30[2];
    *(_OWORD *)(v18 + 88) = v20;
    long long v21 = v30[5];
    *(_OWORD *)(v18 + 104) = v30[4];
    *(_OWORD *)(v18 + 120) = v21;
    long long v22 = v30[1];
    *(_OWORD *)(v18 + 40) = v30[0];
    *(void *)(v18 + 16) = v28;
    *(void *)(v18 + 24) = a3;
    *(void *)(v18 + 32) = v17;
    uint64_t v23 = v31;
    *(_OWORD *)(v18 + 56) = v22;
    *(void *)(v18 + 184) = v23;
    *(void *)(v18 + 192) = v15;
    uint64_t v24 = *(void *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1DCF3B26C(v24);
    sub_1DCFE2DE4((uint64_t)v29);
    if (v26)
    {
      if (v26 == 1) {
        sub_1DCFE4EA0(a1, (uint64_t)v29, 2, v32, (uint64_t)sub_1DCF57C98, v18, v27);
      }
      else {
        sub_1DCFE531C(a1, (uint64_t)v29, 2, (uint64_t)sub_1DCF57C98, v18, v27);
      }
    }
    else
    {
      sub_1DCFE4BD4((double *)a1, (uint64_t)v29, (uint64_t)v12, 2, (uint64_t)sub_1DCF57C98, v18, v27);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    sub_1DCD59AB4((uint64_t)v12);
    swift_release();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DCF5722C(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCE95BF4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    id v9 = v16[0];
    id v11 = v16[0];
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = v17;
    id v10 = v16[0];
    a2(&v11);
  }
  else
  {
    sub_1DCD3A4DC((long long *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCF5732C(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

uint64_t sub_1DCF5732C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void **))
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  sub_1DCD25CD8(*(unsigned __int8 *)(v8 + *(int *)(v9 + 32)), v26);
  uint64_t v10 = *(void *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v26, v10);
  swift_release();
  sub_1DCF574D8(a1, a2, a3, (uint64_t)&v19);
  long long v12 = v19;
  uint64_t v11 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v25 = 0;
  sub_1DCD43350(v19, v20, v21, v22, v23, v24, 0);
  a4(&v19);
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  sub_1DCEA3DA4();
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  return swift_release();
}

uint64_t sub_1DCF574D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v55 = a3;
  uint64_t v53 = a4;
  *(void *)&long long v54 = a2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  long long v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (!v4)
  {
    uint64_t v51 = v12;
    uint64_t v52 = result;
    if (*(void *)(*(void *)(result + 24) + 16) == 2)
    {
      uint64_t v19 = v56;
      uint64_t v20 = v56 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo;
      sub_1DCD56CC8(v56 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo, (uint64_t)v15);
      uint64_t v21 = *(void *)(v19 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_postProcessor);
      if ((void)v55)
      {
        uint64_t v22 = *(void *)(v55 + 16);
        swift_retain();
        if (v22)
        {
          sub_1DCEAD1A4(0x797469746E656469, 0xE800000000000000);
          if (v23) {
            swift_bridgeObjectRetain();
          }
        }
      }
      else
      {
        swift_retain();
      }
      uint64_t v29 = sub_1DCD7F1CC(v52, 0x797469746E656469, 0xE800000000000000, (uint64_t)v15, 1, 0, (uint64_t (*)(uint64_t, id, uint64_t))sub_1DCEC3BFC, v21);
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      sub_1DCD59AB4((uint64_t)v15);
      swift_release();
      uint64_t v49 = v29;
      uint64_t v50 = v33;
      uint64_t v56 = v31;
      swift_bridgeObjectRelease();
      uint64_t v34 = (uint64_t)v51;
      sub_1DCD56CC8(v20, (uint64_t)v51);
      if ((void)v55)
      {
        uint64_t v35 = v53;
        uint64_t v36 = v54;
        if (*(void *)(v55 + 16))
        {
          sub_1DCEAD1A4(0x6E69646465626D65, 0xE900000000000067);
          if (v37) {
            swift_bridgeObjectRetain();
          }
        }
      }
      else
      {
        uint64_t v35 = v53;
        uint64_t v36 = v54;
      }
      uint64_t v38 = sub_1DCFE2268(v52, 0x6E69646465626D65, 0xE900000000000067);
      uint64_t v40 = v39;
      uint64_t v42 = v41;
      sub_1DCD59AB4(v34);
      swift_bridgeObjectRelease();
      long long v55 = *(_OWORD *)(v36 + 72);
      uint64_t v43 = *(void *)(v36 + 88);
      uint64_t v44 = *(void *)(v36 + 96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
      uint64_t v45 = swift_allocObject();
      long long v54 = xmmword_1DD04E910;
      *(_OWORD *)(v45 + 16) = xmmword_1DD04E910;
      *(void *)(v45 + 32) = v38;
      *(void *)(v45 + 40) = v40;
      *(void *)(v45 + 48) = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v54;
      uint64_t v47 = v56;
      *(void *)(v46 + 32) = v49;
      *(void *)(v46 + 40) = v47;
      *(void *)(v46 + 48) = v50;
      uint64_t result = swift_release();
      *(_OWORD *)uint64_t v35 = v55;
      *(void *)(v35 + 16) = v43;
      *(void *)(v35 + 24) = v44;
      *(void *)(v35 + 32) = v45;
      *(void *)(v35 + 40) = v46;
    }
    else
    {
      uint64_t v24 = v6;
      sub_1DCDB40EC((uint64_t)v9);
      char v25 = sub_1DD048048();
      os_log_type_t v26 = sub_1DD048858();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_1DCCF9000, v25, v26, "SignSymbol model expected 2 outputs", v27, 2u);
        MEMORY[0x1E01B07E0](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v28 = 0xD000000000000013;
      *(void *)(v28 + 8) = 0x80000001DD06E450;
      *(unsigned char *)(v28 + 16) = 4;
      swift_willThrow();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DCF579F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCFE5978(a2, a3, v3 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo) & 1;
}

uint64_t sub_1DCF57A2C()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCF57A7C()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF57B00()
{
  return type metadata accessor for SignSymbolModelFactory();
}

uint64_t type metadata accessor for SignSymbolModelFactory()
{
  uint64_t result = qword_1EBE86EE0;
  if (!qword_1EBE86EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF57B54()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCF57C00()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF57C38()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

void sub_1DCF57C98(uint64_t a1)
{
  sub_1DCF5722C(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 192));
}

uint64_t sub_1DCF57CAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a1;
  *(unsigned char *)(a3 + 16) = *a1;
  sub_1DCD56CC8(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_modelInfo);
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for SignSymbolClassificationPostProcessor();
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_postProcessor) = sub_1DCD6D080((uint64_t)v8);
  char v13 = v9;
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  uint64_t v10 = sub_1DCF3D39C(&v13, (uint64_t)v8, 16, 0, 0, 0);
  sub_1DCD59AB4(a2);
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence22SignSymbolModelFactory_coreMLModelProvider) = v10;
  return a3;
}

uint64_t sub_1DCF57DEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v46 = a8;
  id v48 = a4;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v44 = a9;
    uint64_t v45 = result;
    sub_1DCD3A3BC(a3, (uint64_t)v49);
    sub_1DCF5E8D4(a5, (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v47;
    sub_1DCD3A4DC(v49, (uint64_t)(v24 + 3));
    v24[8] = v48;
    sub_1DCF5E93C((uint64_t)v18, (uint64_t)v24 + v20, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    *(void *)((char *)v24 + v21) = a6;
    *(void *)((char *)v24 + v22) = a7;
    char v25 = (void *)((char *)v24 + v23);
    uint64_t v26 = v44;
    *char v25 = v46;
    v25[1] = v26;
    uint64_t v27 = (char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v28 = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v27 + 2) = *(_OWORD *)(a2 + 32);
    *((_OWORD *)v27 + 3) = v28;
    long long v29 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)a2;
    *((_OWORD *)v27 + 1) = v29;
    long long v30 = *(_OWORD *)(a2 + 112);
    *((_OWORD *)v27 + 6) = *(_OWORD *)(a2 + 96);
    *((_OWORD *)v27 + 7) = v30;
    long long v31 = *(_OWORD *)(a2 + 80);
    *((_OWORD *)v27 + 4) = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v27 + 5) = v31;
    *((void *)v27 + 22) = *(void *)(a2 + 176);
    long long v32 = *(_OWORD *)(a2 + 160);
    long long v33 = *(_OWORD *)(a2 + 128);
    *((_OWORD *)v27 + 9) = *(_OWORD *)(a2 + 144);
    *((_OWORD *)v27 + 10) = v32;
    *((_OWORD *)v27 + 8) = v33;
    uint64_t v34 = swift_allocObject();
    long long v35 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v34 + 144) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v34 + 160) = v35;
    *(_OWORD *)(v34 + 176) = *(_OWORD *)(a2 + 160);
    *(void *)(v34 + 192) = *(void *)(a2 + 176);
    long long v36 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v34 + 80) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v34 + 96) = v36;
    long long v37 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v34 + 112) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v34 + 128) = v37;
    long long v38 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v34 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v34 + 32) = v38;
    long long v39 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v34 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v34 + 64) = v39;
    uint64_t v40 = *(void *)(v45 + 48);
    sub_1DCD433F0(a2);
    sub_1DCD433F0(a2);
    id v41 = v48;
    swift_retain();
    id v42 = a7;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCD760CC(v40, v34, (void (*)(void))sub_1DCF5E7DC, v24);
    swift_release();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DCF580CC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_1DCF585D0(a1, a2, a3, a4, "search(): result.userFeedbackIntermediateResults = %s");
}

uint64_t sub_1DCF580D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v46 = a8;
  id v48 = a4;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v44 = a9;
    uint64_t v45 = result;
    sub_1DCD3A3BC(a3, (uint64_t)v49);
    sub_1DCF5E8D4(a5, (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v47;
    sub_1DCD3A4DC(v49, (uint64_t)(v24 + 3));
    v24[8] = v48;
    sub_1DCF5E93C((uint64_t)v18, (uint64_t)v24 + v20, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    *(void *)((char *)v24 + v21) = a6;
    *(void *)((char *)v24 + v22) = a7;
    char v25 = (void *)((char *)v24 + v23);
    uint64_t v26 = v44;
    *char v25 = v46;
    v25[1] = v26;
    uint64_t v27 = (char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v28 = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v27 + 2) = *(_OWORD *)(a2 + 32);
    *((_OWORD *)v27 + 3) = v28;
    long long v29 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)a2;
    *((_OWORD *)v27 + 1) = v29;
    long long v30 = *(_OWORD *)(a2 + 112);
    *((_OWORD *)v27 + 6) = *(_OWORD *)(a2 + 96);
    *((_OWORD *)v27 + 7) = v30;
    long long v31 = *(_OWORD *)(a2 + 80);
    *((_OWORD *)v27 + 4) = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v27 + 5) = v31;
    *((void *)v27 + 22) = *(void *)(a2 + 176);
    long long v32 = *(_OWORD *)(a2 + 160);
    long long v33 = *(_OWORD *)(a2 + 128);
    *((_OWORD *)v27 + 9) = *(_OWORD *)(a2 + 144);
    *((_OWORD *)v27 + 10) = v32;
    *((_OWORD *)v27 + 8) = v33;
    uint64_t v34 = swift_allocObject();
    long long v35 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v34 + 144) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v34 + 160) = v35;
    *(_OWORD *)(v34 + 176) = *(_OWORD *)(a2 + 160);
    *(void *)(v34 + 192) = *(void *)(a2 + 176);
    long long v36 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v34 + 80) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v34 + 96) = v36;
    long long v37 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v34 + 112) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v34 + 128) = v37;
    long long v38 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v34 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v34 + 32) = v38;
    long long v39 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v34 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v34 + 64) = v39;
    uint64_t v40 = *(void *)(v45 + 48);
    sub_1DCD433F0(a2);
    sub_1DCD433F0(a2);
    id v41 = v48;
    swift_retain();
    id v42 = a7;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCD760CC(v40, v34, (void (*)(void))sub_1DCF5CB00, v24);
    swift_release();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DCF583B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    long long v19 = *(_OWORD *)(a1 + 144);
    v26[8] = *(_OWORD *)(a1 + 128);
    v26[9] = v19;
    v26[10] = *(_OWORD *)(a1 + 160);
    uint64_t v27 = *(void *)(a1 + 176);
    long long v20 = *(_OWORD *)(a1 + 80);
    v26[4] = *(_OWORD *)(a1 + 64);
    v26[5] = v20;
    long long v21 = *(_OWORD *)(a1 + 112);
    v26[6] = *(_OWORD *)(a1 + 96);
    v26[7] = v21;
    long long v22 = *(_OWORD *)(a1 + 16);
    v26[0] = *(_OWORD *)a1;
    v26[1] = v22;
    long long v23 = *(_OWORD *)(a1 + 48);
    int64x2_t v26[2] = *(_OWORD *)(a1 + 32);
    v26[3] = v23;
    swift_retain();
    sub_1DCD433F0(a10);
    a11(a3, v26, a4, a5, a6, a7, v18, a8, a9, a10);
    swift_release();
    swift_release();
    return sub_1DCD43B94(a10);
  }
  return result;
}

uint64_t sub_1DCF585C4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  return sub_1DCF585D0(a1, a2, a3, a4, "encryptedSearchPIR(): result.userFeedbackIntermediateResults = %s");
}

uint64_t sub_1DCF585D0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, const char *a5)
{
  id v42 = a5;
  uint64_t v48 = sub_1DD048068();
  uint64_t v46 = *(uint8_t **)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v47 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v40 - v11;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
  MEMORY[0x1F4188790](v41);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v43);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v17);
  uint64_t v44 = (uint64_t)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  long long v21 = (id *)((char *)v40 - v20);
  sub_1DCD2889C(a1, (uint64_t)v40 - v20, (uint64_t *)&unk_1EAB03DC0);
  uint64_t v45 = v17;
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return a2(a1);
  }
  else
  {
    v40[1] = a3;
    v40[0] = a2;
    sub_1DCF5E93C((uint64_t)v21, (uint64_t)v16, type metadata accessor for VisualSearchResultInternal);
    long long v23 = *(_OWORD *)(a4 + 144);
    v50[8] = *(_OWORD *)(a4 + 128);
    v50[9] = v23;
    v50[10] = *(_OWORD *)(a4 + 160);
    uint64_t v51 = *(void *)(a4 + 176);
    long long v24 = *(_OWORD *)(a4 + 80);
    v50[4] = *(_OWORD *)(a4 + 64);
    v50[5] = v24;
    long long v25 = *(_OWORD *)(a4 + 112);
    v50[6] = *(_OWORD *)(a4 + 96);
    v50[7] = v25;
    long long v26 = *(_OWORD *)(a4 + 16);
    v50[0] = *(_OWORD *)a4;
    long long v27 = *(_OWORD *)(a4 + 32);
    long long v28 = *(_OWORD *)(a4 + 48);
    v50[1] = v26;
    v50[2] = v27;
    v50[3] = v28;
    sub_1DCD433F0(a4);
    sub_1DCF35348((uint64_t)v50);
    uint64_t v29 = sub_1DD0477D8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
    uint64_t v30 = v43;
    sub_1DCF5E4A4((uint64_t)v14, (uint64_t)&v16[*(int *)(v43 + 28)]);
    sub_1DCDB40EC((uint64_t)v12);
    sub_1DCDB4300((uint64_t)v47);
    long long v31 = (void (*)(char *, uint64_t))*((void *)v46 + 1);
    v31(v12, v48);
    long long v32 = sub_1DD048048();
    os_log_type_t v33 = sub_1DD048848();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(void *)&v50[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      uint64_t v46 = v34 + 4;
      swift_beginAccess();
      sub_1DCD2889C((uint64_t)&v16[*(int *)(v30 + 28)], (uint64_t)v14, &qword_1EAB028C8);
      uint64_t v36 = sub_1DD048478();
      uint64_t v49 = sub_1DCED7FA0(v36, v37, (uint64_t *)v50);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v32, v33, v42, v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v35, -1, -1);
      MEMORY[0x1E01B07E0](v34, -1, -1);
    }

    v31(v47, v48);
    long long v38 = (void (*)(uint64_t))v40[0];
    swift_beginAccess();
    uint64_t v39 = v44;
    sub_1DCF5E8D4((uint64_t)v16, v44, type metadata accessor for VisualSearchResultInternal);
    swift_storeEnumTagMultiPayload();
    v38(v39);
    sub_1DCD2479C(v39, (uint64_t *)&unk_1EAB03DC0);
    return sub_1DCF5E9A4((uint64_t)v16, type metadata accessor for VisualSearchResultInternal);
  }
}

uint64_t sub_1DCF58B70(uint64_t a1, long long *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v51 = a5;
  uint64_t v47 = a3;
  uint64_t v56 = sub_1DD0481B8();
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  long long v55 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD0481D8();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v13);
  long long v54 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v49 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v49 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = a2[9];
  long long v71 = a2[8];
  long long v72 = v18;
  long long v73 = a2[10];
  uint64_t v74 = *((void *)a2 + 22);
  long long v19 = a2[5];
  long long v67 = a2[4];
  long long v68 = v19;
  long long v20 = a2[7];
  long long v69 = a2[6];
  long long v70 = v20;
  long long v21 = a2[1];
  long long v63 = *a2;
  long long v64 = v21;
  long long v22 = a2[3];
  long long v65 = a2[2];
  long long v66 = v22;
  type metadata accessor for MetricsBucket();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = MEMORY[0x1E4FBC860];
  strcpy((char *)v75, "E2E - Search");
  HIBYTE(v75[6]) = 0;
  v75[7] = -5120;
  v76 = "Search Overall";
  uint64_t v77 = 14;
  char v78 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v48 = sub_1DCEA469C((uint64_t)v75, v23);
  swift_release();
  uint64_t v50 = *(void *)(v8 + 56);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  sub_1DCD2889C(a1, (uint64_t)v62, &qword_1EBE85740);
  sub_1DCF5E8D4(a4, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v25 = (v16 + 263) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  long long v29 = v72;
  *(_OWORD *)(v28 + 152) = v71;
  *(_OWORD *)(v28 + 168) = v29;
  *(_OWORD *)(v28 + 184) = v73;
  long long v30 = v68;
  *(_OWORD *)(v28 + 88) = v67;
  *(_OWORD *)(v28 + 104) = v30;
  long long v31 = v70;
  *(_OWORD *)(v28 + 120) = v69;
  *(_OWORD *)(v28 + 136) = v31;
  long long v32 = v64;
  *(_OWORD *)(v28 + 24) = v63;
  *(_OWORD *)(v28 + 40) = v32;
  long long v33 = v66;
  *(_OWORD *)(v28 + 56) = v65;
  *(void *)(v28 + 16) = v24;
  *(void *)(v28 + 200) = v74;
  *(_OWORD *)(v28 + 72) = v33;
  sub_1DCD43B04((uint64_t)v62, v28 + 208, &qword_1EBE85740);
  uint64_t v34 = v47;
  *(void *)(v28 + 248) = v47;
  sub_1DCF5E93C((uint64_t)v17, v28 + 256, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  *(void *)(v28 + v25) = v48;
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  *(void *)(v28 + v26) = v51;
  *(void *)(v28 + v27) = v23;
  unint64_t v37 = (void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v53;
  *unint64_t v37 = v35;
  v37[1] = v38;
  v61[4] = sub_1DCF5ECB0;
  v61[5] = v28;
  v61[0] = MEMORY[0x1E4F143A8];
  v61[1] = 1107296256;
  v61[2] = sub_1DCEC8CA4;
  v61[3] = &block_descriptor_12;
  uint64_t v39 = _Block_copy(v61);
  swift_retain();
  swift_retain();
  sub_1DCD433F0((uint64_t)&v63);
  id v40 = v34;
  swift_retain();
  id v41 = v36;
  swift_retain();
  id v42 = v54;
  sub_1DD0481C8();
  uint64_t v60 = MEMORY[0x1E4FBC860];
  sub_1DCF5ED50(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCEBF914();
  uint64_t v44 = v55;
  uint64_t v43 = v56;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v42, v44, v39);
  _Block_release(v39);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v43);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v58);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCF590EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v51 = a4;
  uint64_t v52 = a6;
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16 - 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v47 = a9;
    uint64_t v48 = a10;
    uint64_t v50 = result;
    sub_1DCD2889C(a3, (uint64_t)v53, &qword_1EBE85740);
    sub_1DCF5E8D4(a5, (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v45 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v46 = (v18 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = a1;
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a1;
    sub_1DCD43B04((uint64_t)v53, (uint64_t)(v24 + 3), &qword_1EBE85740);
    unint64_t v25 = v51;
    v24[8] = v51;
    sub_1DCF5E93C(v45, (uint64_t)v24 + v20, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    uint64_t v26 = v47;
    *(void *)((char *)v24 + v46) = v52;
    *(void *)((char *)v24 + v21) = a7;
    *(void *)((char *)v24 + v22) = a8;
    unint64_t v27 = (void *)((char *)v24 + v23);
    uint64_t v28 = v48;
    *unint64_t v27 = v26;
    v27[1] = v28;
    long long v29 = (char *)v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v30 = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v29 + 2) = *(_OWORD *)(a2 + 32);
    *((_OWORD *)v29 + 3) = v30;
    long long v31 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)long long v29 = *(_OWORD *)a2;
    *((_OWORD *)v29 + 1) = v31;
    long long v32 = *(_OWORD *)(a2 + 112);
    *((_OWORD *)v29 + 6) = *(_OWORD *)(a2 + 96);
    *((_OWORD *)v29 + 7) = v32;
    long long v33 = *(_OWORD *)(a2 + 80);
    *((_OWORD *)v29 + 4) = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v29 + 5) = v33;
    *((void *)v29 + 22) = *(void *)(a2 + 176);
    long long v34 = *(_OWORD *)(a2 + 160);
    long long v35 = *(_OWORD *)(a2 + 128);
    *((_OWORD *)v29 + 9) = *(_OWORD *)(a2 + 144);
    *((_OWORD *)v29 + 10) = v34;
    *((_OWORD *)v29 + 8) = v35;
    uint64_t v36 = swift_allocObject();
    long long v37 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v36 + 144) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v36 + 160) = v37;
    *(_OWORD *)(v36 + 176) = *(_OWORD *)(a2 + 160);
    *(void *)(v36 + 192) = *(void *)(a2 + 176);
    long long v38 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v36 + 80) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v36 + 96) = v38;
    long long v39 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v36 + 112) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v36 + 128) = v39;
    long long v40 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v36 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v36 + 32) = v40;
    long long v41 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v36 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v36 + 64) = v41;
    uint64_t v42 = *(void *)(v50 + 48);
    sub_1DCD433F0(a2);
    sub_1DCD433F0(a2);
    id v43 = v25;
    swift_retain();
    id v44 = a7;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCD760CC(v42, v36, (void (*)(void))sub_1DCF5F084, v24);
    swift_release();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DCF593F4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, uint64_t a11)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v17);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    long long v20 = *(_OWORD *)(a1 + 144);
    v26[8] = *(_OWORD *)(a1 + 128);
    v26[9] = v20;
    v26[10] = *(_OWORD *)(a1 + 160);
    uint64_t v27 = *(void *)(a1 + 176);
    long long v21 = *(_OWORD *)(a1 + 80);
    v26[4] = *(_OWORD *)(a1 + 64);
    v26[5] = v21;
    long long v22 = *(_OWORD *)(a1 + 112);
    v26[6] = *(_OWORD *)(a1 + 96);
    v26[7] = v22;
    long long v23 = *(_OWORD *)(a1 + 16);
    v26[0] = *(_OWORD *)a1;
    v26[1] = v23;
    long long v24 = *(_OWORD *)(a1 + 48);
    int64x2_t v26[2] = *(_OWORD *)(a1 + 32);
    v26[3] = v24;
    swift_retain();
    sub_1DCD433F0(a11);
    sub_1DCF5F80C(a3, (uint64_t)v26, a4, a5, a6, a7, a8, v19, a9, a10, a11);
    swift_release();
    swift_release();
    return sub_1DCD43B94(a11);
  }
  return result;
}

uint64_t sub_1DCF59610(long long *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  long long v54 = a5;
  uint64_t v55 = a6;
  uint64_t v53 = a4;
  uint64_t v51 = a2;
  uint64_t v58 = sub_1DD0481B8();
  uint64_t v61 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD0481D8();
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v56 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v48 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = a1[8];
  long long v17 = a1[10];
  long long v74 = a1[9];
  long long v75 = v17;
  long long v18 = a1[4];
  long long v19 = a1[6];
  long long v20 = a1[7];
  long long v70 = a1[5];
  long long v71 = v19;
  uint64_t v76 = *((void *)a1 + 22);
  long long v72 = v20;
  long long v73 = v16;
  long long v21 = a1[1];
  long long v65 = *a1;
  long long v66 = v21;
  long long v22 = a1[3];
  long long v67 = a1[2];
  long long v68 = v22;
  long long v69 = v18;
  type metadata accessor for MetricsBucket();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v62 = v23;
  strcpy((char *)v77, "E2E - Search");
  HIBYTE(v77[6]) = 0;
  v77[7] = -5120;
  char v78 = "Search Overall";
  uint64_t v79 = 14;
  char v80 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v49 = sub_1DCEA469C((uint64_t)v77, v23);
  swift_release();
  uint64_t v52 = *(void *)(v7 + 56);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  sub_1DCF5E8D4(a3, (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v25 = (*(unsigned __int8 *)(v14 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  long long v30 = v72;
  *(_OWORD *)(v29 + 152) = v73;
  long long v31 = v75;
  *(_OWORD *)(v29 + 168) = v74;
  *(_OWORD *)(v29 + 184) = v31;
  *(_OWORD *)(v29 + 88) = v69;
  long long v32 = v71;
  *(_OWORD *)(v29 + 104) = v70;
  *(_OWORD *)(v29 + 120) = v32;
  *(_OWORD *)(v29 + 136) = v30;
  long long v33 = v66;
  *(_OWORD *)(v29 + 24) = v65;
  *(_OWORD *)(v29 + 40) = v33;
  long long v34 = v68;
  *(_OWORD *)(v29 + 56) = v67;
  uint64_t v50 = v24;
  *(void *)(v29 + 16) = v24;
  uint64_t v35 = v76;
  *(_OWORD *)(v29 + 72) = v34;
  uint64_t v36 = v51;
  *(void *)(v29 + 200) = v35;
  *(void *)(v29 + 208) = v36;
  sub_1DCF5E93C(v48, v29 + v25, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  *(void *)(v29 + v26) = v49;
  long long v38 = v53;
  long long v37 = v54;
  *(void *)(v29 + v27) = v53;
  *(void *)(v29 + v28) = v62;
  long long v39 = (void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v40 = v55;
  *long long v39 = v37;
  v39[1] = v40;
  v64[4] = sub_1DCF60CD8;
  v64[5] = v29;
  v64[0] = MEMORY[0x1E4F143A8];
  v64[1] = 1107296256;
  v64[2] = sub_1DCEC8CA4;
  v64[3] = &block_descriptor_87;
  long long v54 = _Block_copy(v64);
  swift_retain();
  swift_retain();
  sub_1DCD433F0((uint64_t)&v65);
  id v41 = v36;
  swift_retain();
  id v42 = v38;
  swift_retain();
  id v43 = v56;
  sub_1DD0481C8();
  uint64_t v63 = MEMORY[0x1E4FBC860];
  sub_1DCF5ED50(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCEBF914();
  uint64_t v45 = v57;
  uint64_t v44 = v58;
  sub_1DD048AE8();
  unint64_t v46 = v54;
  MEMORY[0x1E01AE570](0, v43, v45, v54);
  _Block_release(v46);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v44);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCF59B78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v53 = a8;
  long long v54 = a3;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15 - 8);
  long long v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v49 = a9;
    uint64_t v51 = result;
    sub_1DCF5E8D4(a4, (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v47 = a7;
    unint64_t v48 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v55 = a6;
    unint64_t v21 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = a5;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = a1;
    uint64_t v52 = a1;
    unint64_t v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (void *)swift_allocObject();
    int64x2_t v26[2] = v24;
    unint64_t v27 = v54;
    v26[3] = v54;
    sub_1DCF5E93C((uint64_t)v18, (uint64_t)v26 + v20, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    uint64_t v28 = v47;
    *(void *)((char *)v26 + v48) = a5;
    *(void *)((char *)v26 + v21) = v55;
    *(void *)((char *)v26 + v22) = v28;
    uint64_t v29 = (void *)((char *)v26 + v23);
    uint64_t v30 = v49;
    *uint64_t v29 = v53;
    v29[1] = v30;
    long long v31 = (char *)v26 + v25;
    long long v32 = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v31 + 2) = *(_OWORD *)(a2 + 32);
    *((_OWORD *)v31 + 3) = v32;
    long long v33 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)long long v31 = *(_OWORD *)a2;
    *((_OWORD *)v31 + 1) = v33;
    long long v34 = *(_OWORD *)(a2 + 112);
    *((_OWORD *)v31 + 6) = *(_OWORD *)(a2 + 96);
    *((_OWORD *)v31 + 7) = v34;
    long long v35 = *(_OWORD *)(a2 + 80);
    *((_OWORD *)v31 + 4) = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v31 + 5) = v35;
    *((void *)v31 + 22) = *(void *)(a2 + 176);
    long long v36 = *(_OWORD *)(a2 + 160);
    long long v37 = *(_OWORD *)(a2 + 128);
    *((_OWORD *)v31 + 9) = *(_OWORD *)(a2 + 144);
    *((_OWORD *)v31 + 10) = v36;
    *((_OWORD *)v31 + 8) = v37;
    uint64_t v38 = swift_allocObject();
    long long v39 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v38 + 144) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(v38 + 160) = v39;
    *(_OWORD *)(v38 + 176) = *(_OWORD *)(a2 + 160);
    *(void *)(v38 + 192) = *(void *)(a2 + 176);
    long long v40 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v38 + 80) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v38 + 96) = v40;
    long long v41 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v38 + 112) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v38 + 128) = v41;
    long long v42 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v38 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v38 + 32) = v42;
    long long v43 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v38 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v38 + 64) = v43;
    uint64_t v44 = *(void *)(v51 + 48);
    sub_1DCD433F0(a2);
    sub_1DCD433F0(a2);
    id v45 = v27;
    swift_retain();
    id v46 = v55;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCD760CC(v44, v38, (void (*)(void))sub_1DCF61074, v26);
    swift_release();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DCF59E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v15);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    long long v18 = *(_OWORD *)(a1 + 144);
    v25[8] = *(_OWORD *)(a1 + 128);
    v25[9] = v18;
    v25[10] = *(_OWORD *)(a1 + 160);
    uint64_t v26 = *(void *)(a1 + 176);
    long long v19 = *(_OWORD *)(a1 + 80);
    v25[4] = *(_OWORD *)(a1 + 64);
    v25[5] = v19;
    long long v20 = *(_OWORD *)(a1 + 112);
    v25[6] = *(_OWORD *)(a1 + 96);
    v25[7] = v20;
    long long v21 = *(_OWORD *)(a1 + 16);
    v25[0] = *(_OWORD *)a1;
    v25[1] = v21;
    long long v22 = *(_OWORD *)(a1 + 48);
    void v25[2] = *(_OWORD *)(a1 + 32);
    v25[3] = v22;
    swift_retain();
    sub_1DCD433F0(a10);
    sub_1DCF614D4((uint64_t)v25, a3, a4, a5, a6, a7, v17, a8, a9, a10);
    swift_release();
    swift_release();
    return sub_1DCD43B94(a10);
  }
  return result;
}

uint64_t sub_1DCF5A058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *), uint64_t a8)
{
  uint64_t v43 = a6;
  uint64_t v44 = a8;
  uint64_t v45 = a1;
  uint64_t v41 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCEA3DA4();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    long long v40 = a7;
    long long v20 = (long long *)(a4 + 16);
    if (a5)
    {
      swift_beginAccess();
      uint64_t v21 = *(void *)(a5 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    sub_1DCFDF94C(v21);
    swift_endAccess();
    sub_1DCD2889C(v45, (uint64_t)v14, &qword_1EAB043C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v22 = v42;
      sub_1DCF5E93C((uint64_t)v14, v42, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      unint64_t v23 = (uint64_t *)(v22 + *(int *)(v41 + 24));
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      swift_beginAccess();
      *(void *)(a4 + 144) = v25;
      *(void *)(a4 + 152) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      long long v26 = *(_OWORD *)(a4 + 160);
      long long v27 = *(_OWORD *)(a4 + 128);
      long long v55 = *(_OWORD *)(a4 + 144);
      long long v56 = v26;
      long long v28 = *(_OWORD *)(a4 + 160);
      long long v57 = *(_OWORD *)(a4 + 176);
      long long v29 = *(_OWORD *)(a4 + 96);
      long long v30 = *(_OWORD *)(a4 + 64);
      long long v51 = *(_OWORD *)(a4 + 80);
      long long v52 = v29;
      long long v31 = *(_OWORD *)(a4 + 96);
      long long v32 = *(_OWORD *)(a4 + 128);
      long long v53 = *(_OWORD *)(a4 + 112);
      long long v54 = v32;
      long long v33 = *(_OWORD *)(a4 + 32);
      v48[0] = *v20;
      v48[1] = v33;
      long long v34 = *(_OWORD *)(a4 + 64);
      long long v36 = *v20;
      long long v35 = *(_OWORD *)(a4 + 32);
      long long v49 = *(_OWORD *)(a4 + 48);
      long long v50 = v34;
      long long v37 = *(_OWORD *)(a4 + 176);
      v46[9] = v28;
      v46[10] = v37;
      v46[4] = v51;
      v46[5] = v31;
      v46[6] = v53;
      v46[7] = v27;
      v46[8] = v55;
      v46[0] = v36;
      v46[1] = v35;
      uint64_t v58 = *(void *)(a4 + 192);
      uint64_t v47 = *(void *)(a4 + 192);
      v46[2] = v49;
      v46[3] = v30;
      uint64_t v38 = *(void *)(v19 + 64);
      sub_1DCD433F0((uint64_t)v48);
      sub_1DCEE6970(v22, v46, v38, (uint64_t)v17);
      sub_1DCD43B94((uint64_t)v48);
      sub_1DCF5E9A4(v22, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
    }
    v40(v17);
    swift_release();
    return sub_1DCD2479C((uint64_t)v17, (uint64_t *)&unk_1EAB03DC0);
  }
  return result;
}

uint64_t sub_1DCF5A3DC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v73 = a5;
  char v80 = a4;
  id v81 = a3;
  uint64_t v77 = a6;
  char v78 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v76 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v74 = (char *)&v68 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v68 - v13;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v75 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v20 = (char *)&v68 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v68 - v22;
  uint64_t v79 = a1;
  uint64_t v24 = v98;
  uint64_t result = sub_1DCDE4150(a1);
  if (!v24)
  {
    uint64_t v98 = (uint64_t)v23;
    long long v69 = v14;
    long long v70 = v20;
    uint64_t v71 = v15;
    long long v72 = v17;
    uint64_t v26 = *(void *)(v6 + 16);
    id v27 = objc_msgSend(v81, sel_preferredMetalDevice);
    uint64_t v28 = *(void *)(v26 + 16);
    sub_1DCD3A3BC(v79, (uint64_t)v82);
    uint64_t v29 = *(void *)(v26 + 24);
    type metadata accessor for SignalsExtractionProcessor();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1DCD3B28C(v28, v82, v29, (uint64_t)v27);
    long long v30 = v78;
    long long v31 = v78[9];
    v82[8] = v78[8];
    v82[9] = v31;
    v82[10] = v78[10];
    uint64_t v83 = *((void *)v78 + 22);
    long long v32 = v78[5];
    v82[4] = v78[4];
    v82[5] = v32;
    long long v33 = v78[7];
    v82[6] = v78[6];
    v82[7] = v33;
    long long v34 = v78[1];
    v82[0] = *v78;
    v82[1] = v34;
    long long v35 = v78[3];
    v82[2] = v78[2];
    v82[3] = v35;
    long long v36 = v80;
    sub_1DCD3B354((uint64_t)v82, v80, 1, 1, 0, (uint64_t)&v84);
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v79 = 0;
    v96[8] = v92;
    v96[9] = v93;
    v96[10] = v94;
    uint64_t v97 = v95;
    v96[4] = v88;
    v96[5] = v89;
    v96[6] = v90;
    v96[7] = v91;
    v96[0] = v84;
    v96[1] = v85;
    v96[2] = v86;
    v96[3] = v87;
    char v80 = (uint64_t *)((char *)v36 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) + 32));
    uint64_t v37 = (uint64_t)v69;
    sub_1DCD2889C((uint64_t)v80, (uint64_t)v69, &qword_1EAB025B0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
    uint64_t v39 = v71;
    int v40 = v38(v37, 1, v71);
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t v42 = (uint64_t)v70;
    uint64_t v43 = (uint64_t)v74;
    if (v40 == 1)
    {
      unint64_t v44 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
      uint64_t v45 = v41;
      uint64_t v46 = v98;
      *(void *)uint64_t v98 = v44;
      *(void *)(v46 + 8) = v45;
      *(_DWORD *)(v46 + 16) = 0;
      sub_1DD047BE8();
      sub_1DCD2479C(v37, &qword_1EAB025B0);
    }
    else
    {
      uint64_t v46 = v98;
      sub_1DCF5E93C(v37, v98, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    }
    uint64_t v98 = *(int *)(v46 + 16);
    sub_1DCF5E9A4(v46, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    sub_1DCD2889C((uint64_t)v80, v43, &qword_1EAB025B0);
    int v47 = v38(v43, 1, v39);
    uint64_t v48 = MEMORY[0x1E4FBC860];
    if (v47 == 1)
    {
      *(void *)uint64_t v42 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
      *(void *)(v42 + 8) = v48;
      *(_DWORD *)(v42 + 16) = 0;
      sub_1DD047BE8();
      sub_1DCD2479C(v43, &qword_1EAB025B0);
    }
    else
    {
      sub_1DCF5E93C(v43, v42, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    }
    long long v49 = v30[9];
    long long v92 = v30[8];
    long long v93 = v49;
    long long v94 = v30[10];
    uint64_t v95 = *((void *)v30 + 22);
    long long v50 = v30[5];
    long long v88 = v30[4];
    long long v89 = v50;
    long long v51 = v30[7];
    long long v90 = v30[6];
    long long v91 = v51;
    long long v52 = v30[1];
    long long v84 = *v30;
    long long v85 = v52;
    long long v53 = v30[3];
    long long v86 = v30[2];
    long long v87 = v53;
    uint64_t v54 = sub_1DCF22DA4();
    MEMORY[0x1F4188790](v54);
    *(&v68 - 2) = v42;
    uint64_t v55 = v79;
    uint64_t v56 = v42;
    long long v57 = sub_1DCFB351C((void (*)(void *__return_ptr, void))sub_1DCD6335C, (uint64_t)(&v68 - 4), v54);
    uint64_t v79 = v55;
    swift_bridgeObjectRelease();
    unint64_t v58 = sub_1DCF9A540((uint64_t)v57);
    swift_bridgeObjectRelease();
    sub_1DCF5E9A4(v56, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    if ((v58 & 0x100000000) != 0) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = (int)v58;
    }
    uint64_t v60 = v76;
    sub_1DCD2889C((uint64_t)v80, v76, &qword_1EAB025B0);
    int v61 = v38(v60, 1, v39);
    uint64_t v62 = (uint64_t)v72;
    uint64_t v63 = v73;
    uint64_t v64 = (uint64_t)v81;
    if (v61 == 1)
    {
      uint64_t v65 = MEMORY[0x1E4FBC860];
      *(void *)uint64_t v62 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
      *(void *)(v62 + 8) = v65;
      *(_DWORD *)(v62 + 16) = 0;
      sub_1DD047BE8();
      sub_1DCD2479C(v60, &qword_1EAB025B0);
    }
    else
    {
      sub_1DCF5E93C(v60, (uint64_t)v72, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    }
    uint64_t v66 = v62;
    uint64_t v67 = sub_1DD0472D8();
    MEMORY[0x1F4188790](v67);
    *(&v68 - 8) = v64;
    *(&v68 - 7) = v66;
    *(&v68 - 6) = (uint64_t)v96;
    *(&v68 - 5) = v98;
    *((unsigned char *)&v68 - 32) = 0;
    *(&v68 - 3) = v59;
    *((unsigned char *)&v68 - 16) = BYTE4(v58) & 1;
    *(&v68 - 1) = v63;
    sub_1DCF5ED50(&qword_1EAB025C0, MEMORY[0x1E4F894C8]);
    sub_1DD047E78();
    sub_1DCF5E9A4(v66, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    return sub_1DCD43B94((uint64_t)v96);
  }
  return result;
}

uint64_t sub_1DCF5AAC4(unint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v75 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v75 - v16;
  uint64_t v18 = (long long *)(a2 + 16);
  if (a1)
  {
    if (a1 == 1)
    {
      sub_1DCDB40EC((uint64_t)v11);
      uint64_t v19 = sub_1DD048048();
      os_log_type_t v20 = sub_1DD048848();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = v8;
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_1DCCF9000, v19, v20, "Application does not have any allowed domains", v22, 2u);
        unint64_t v23 = v22;
        uint64_t v8 = v21;
        MEMORY[0x1E01B07E0](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      a1 = MEMORY[0x1E4FBC870];
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DCDB40EC((uint64_t)v17);
      sub_1DCD765A8(a1);
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1DD048048();
      os_log_type_t v30 = sub_1DD048848();
      int v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v80 = a4;
        uint64_t v33 = v32;
        uint64_t v79 = swift_slowAlloc();
        *(void *)&long long v104 = v79;
        *(_DWORD *)uint64_t v33 = 134218242;
        *(void *)&long long v92 = *(void *)(a1 + 16);
        v75[2] = (char *)&v92 + 8;
        sub_1DD048A28();
        *(_WORD *)(v33 + 12) = 2080;
        v75[1] = v33 + 14;
        Set<>.toDomainNames()(a1);
        os_log_t v77 = v29;
        uint64_t v34 = MEMORY[0x1E01AE380]();
        uint64_t v78 = v8;
        long long v35 = a3;
        uint64_t v36 = v34;
        int v76 = v31;
        unint64_t v38 = v37;
        swift_bridgeObjectRelease();
        uint64_t v39 = v36;
        a3 = v35;
        *(void *)&long long v92 = sub_1DCED7FA0(v39, v38, (uint64_t *)&v104);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCD74490(a1);
        sub_1DCD74490(a1);
        os_log_t v40 = v77;
        _os_log_impl(&dword_1DCCF9000, v77, (os_log_type_t)v76, "Application can search domain count: %ld, domains: %s", (uint8_t *)v33, 0x16u);
        uint64_t v41 = v79;
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v41, -1, -1);
        MEMORY[0x1E01B07E0](v33, -1, -1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v78);
      }
      else
      {
        sub_1DCD74490(a1);
        sub_1DCD74490(a1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      }
    }
    swift_beginAccess();
    long long v42 = v18[9];
    long long v43 = v18[7];
    long long v88 = v18[8];
    long long v89 = v42;
    long long v44 = v18[9];
    long long v90 = v18[10];
    long long v45 = v18[5];
    long long v46 = v18[3];
    long long v84 = v18[4];
    long long v85 = v45;
    long long v47 = v18[5];
    long long v48 = v18[7];
    long long v86 = v18[6];
    long long v87 = v48;
    long long v49 = v18[1];
    v81[0] = *v18;
    v81[1] = v49;
    long long v50 = v18[3];
    long long v52 = *v18;
    long long v51 = v18[1];
    long long v82 = v18[2];
    long long v83 = v50;
    long long v112 = v88;
    long long v113 = v44;
    long long v114 = v18[10];
    long long v108 = v84;
    long long v109 = v47;
    long long v110 = v86;
    long long v111 = v43;
    long long v104 = v52;
    long long v105 = v51;
    uint64_t v91 = *((void *)v18 + 22);
    uint64_t v115 = *((void *)v18 + 22);
    long long v106 = v82;
    long long v107 = v46;
    sub_1DCD433F0((uint64_t)v81);
    sub_1DCF24A9C(a1, (uint64_t)&v92);
    swift_bridgeObjectRelease();
    sub_1DCD43B94((uint64_t)v81);
    swift_beginAccess();
    long long v53 = v18[9];
    long long v112 = v18[8];
    long long v113 = v53;
    long long v114 = v18[10];
    uint64_t v115 = *((void *)v18 + 22);
    long long v54 = v18[5];
    long long v108 = v18[4];
    long long v109 = v54;
    long long v55 = v18[7];
    long long v110 = v18[6];
    long long v111 = v55;
    long long v56 = v18[1];
    long long v104 = *v18;
    long long v105 = v56;
    long long v57 = v18[3];
    long long v106 = v18[2];
    long long v107 = v57;
    long long v58 = v101;
    v18[8] = v100;
    v18[9] = v58;
    v18[10] = v102;
    *((void *)v18 + 22) = v103;
    long long v59 = v97;
    v18[4] = v96;
    v18[5] = v59;
    long long v60 = v99;
    v18[6] = v98;
    v18[7] = v60;
    long long v61 = v93;
    *uint64_t v18 = v92;
    v18[1] = v61;
    long long v62 = v95;
    v18[2] = v94;
    v18[3] = v62;
    sub_1DCD43B94((uint64_t)&v104);
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v14);
    uint64_t v24 = sub_1DD048048();
    os_log_type_t v25 = sub_1DD048848();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = v8;
      id v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v27 = 0;
      _os_log_impl(&dword_1DCCF9000, v24, v25, "Application can search any domain", v27, 2u);
      uint64_t v28 = v27;
      uint64_t v8 = v26;
      MEMORY[0x1E01B07E0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  swift_beginAccess();
  long long v63 = v18[9];
  long long v64 = v18[7];
  long long v112 = v18[8];
  long long v113 = v63;
  long long v65 = v18[9];
  long long v114 = v18[10];
  long long v66 = v18[5];
  long long v67 = v18[3];
  long long v108 = v18[4];
  long long v109 = v66;
  long long v68 = v18[5];
  long long v69 = v18[7];
  long long v110 = v18[6];
  long long v111 = v69;
  long long v70 = v18[1];
  long long v104 = *v18;
  long long v105 = v70;
  long long v71 = v18[3];
  long long v73 = *v18;
  long long v72 = v18[1];
  long long v106 = v18[2];
  long long v107 = v71;
  long long v100 = v112;
  long long v101 = v65;
  long long v102 = v18[10];
  long long v96 = v108;
  long long v97 = v68;
  long long v98 = v110;
  long long v99 = v64;
  long long v92 = v73;
  long long v93 = v72;
  uint64_t v115 = *((void *)v18 + 22);
  uint64_t v103 = *((void *)v18 + 22);
  long long v94 = v106;
  long long v95 = v67;
  sub_1DCD433F0((uint64_t)&v104);
  a3(&v92);
  return sub_1DCD43B94((uint64_t)&v104);
}

void sub_1DCF5B0C8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v56 = a8;
  uint64_t v53 = a9;
  long long v54 = a4;
  uint64_t v52 = a1;
  uint64_t v14 = sub_1DD048208();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v18 = *(_OWORD *)(a2 + 144);
  long long v91 = *(_OWORD *)(a2 + 128);
  long long v92 = v18;
  long long v93 = *(_OWORD *)(a2 + 160);
  uint64_t v94 = *(void *)(a2 + 176);
  long long v19 = *(_OWORD *)(a2 + 80);
  long long v87 = *(_OWORD *)(a2 + 64);
  long long v88 = v19;
  long long v20 = *(_OWORD *)(a2 + 112);
  long long v89 = *(_OWORD *)(a2 + 96);
  long long v90 = v20;
  long long v21 = *(_OWORD *)(a2 + 16);
  long long v83 = *(_OWORD *)a2;
  long long v84 = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  long long v85 = *(_OWORD *)(a2 + 32);
  long long v86 = v22;
  unint64_t v23 = *(void **)(v9 + 56);
  *uint64_t v17 = v23;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  id v24 = v23;
  LOBYTE(v23) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v23)
  {
    LODWORD(v25) = a6 & 1;
    char v73 = 0;
    long long v71 = 0u;
    unsigned long long v72 = 0u;
    int v51 = a7;
    if (a7)
    {
      long long v67 = v91;
      long long v68 = v92;
      long long v69 = v93;
      uint64_t v70 = v94;
      long long v63 = v87;
      long long v64 = v88;
      long long v65 = v89;
      long long v66 = v90;
      long long v59 = v83;
      long long v60 = v84;
      long long v61 = v85;
      long long v62 = v86;
      id v26 = a3;
      sub_1DCD433F0((uint64_t)&v83);
      sub_1DCFA5E78(a3, &v59, (uint64_t)v74);
      long long v82 = *(_OWORD *)&v74[8];
      sub_1DCD43B04((uint64_t)&v74[24], (uint64_t)&v81, &qword_1EAB043C0);
      sub_1DCD43B04((uint64_t)&v74[32], (uint64_t)&v80, &qword_1EBE82CB8);
      uint64_t v27 = self;
      int v50 = (int)v25;
      os_log_type_t v25 = (void *)v27;
      *((void *)&v60 + 1) = &type metadata for EngagedRegionOfInterestEvent;
      *(void *)&long long v61 = &off_1F383C1F0;
      uint64_t v28 = (_OWORD *)swift_allocObject();
      *(void *)&long long v59 = v28;
      long long v29 = *(_OWORD *)&v74[16];
      v28[1] = *(_OWORD *)v74;
      v28[2] = v29;
      *(_OWORD *)((char *)v28 + 41) = *(_OWORD *)&v74[25];
      os_log_type_t v30 = (objc_class *)type metadata accessor for AnyVIAEvent();
      id v31 = objc_allocWithZone(v30);
      sub_1DCD3A3BC((uint64_t)&v59, (uint64_t)v31 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      sub_1DCD64B20((uint64_t)&v82);
      sub_1DCD64C00(&v81);
      sub_1DCD64C00(&v80);
      sub_1DCD64B20((uint64_t)&v82);
      sub_1DCD64C00(&v81);
      sub_1DCD64C00(&v80);
      v58.receiver = v31;
      v58.super_class = v30;
      id v32 = objc_msgSendSuper2(&v58, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
      objc_msgSend(v25, sel_logEvent_, v32);

      sub_1DCD64B4C((uint64_t)&v82);
      sub_1DCD64C2C(&v81);
      sub_1DCD64C2C(&v80);
      id v33 = v26;
      sub_1DCFA6178(a3, (uint64_t)&v75);
      long long v49 = v75;
      long long v35 = (void *)*((void *)&v76 + 1);
      unint64_t v34 = v76;
      char v36 = v77;

      sub_1DCF5C9E0(v71, *((uint64_t *)&v71 + 1), v72, *((void **)&v72 + 1));
      v78[0] = v75;
      *(void *)&v78[1] = v76;
      long long v79 = *(_OWORD *)((char *)v78 + 8);
      long long v71 = v49;
      unsigned long long v72 = __PAIR128__((unint64_t)v35, v34);
      char v73 = v36;
      *((void *)&v60 + 1) = &type metadata for LocalSearchStartEvent;
      *(void *)&long long v61 = &off_1F383B540;
      uint64_t v37 = swift_allocObject();
      *(void *)&long long v59 = v37;
      long long v38 = v76;
      *(_OWORD *)(v37 + 16) = v75;
      *(_OWORD *)(v37 + 32) = v38;
      *(unsigned char *)(v37 + 48) = v77;
      id v39 = objc_allocWithZone(v30);
      sub_1DCD3A3BC((uint64_t)&v59, (uint64_t)v39 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      sub_1DCD64B20((uint64_t)&v79);
      id v40 = v35;
      sub_1DCD64B20((uint64_t)&v79);
      id v41 = v40;
      sub_1DCD64B20((uint64_t)&v79);
      v57.receiver = v39;
      v57.super_class = v30;
      id v42 = v41;
      id v43 = objc_msgSendSuper2(&v57, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v59);
      long long v44 = v25;
      LOBYTE(v25) = v50;
      objc_msgSend(v44, sel_logEvent_, v43);

      sub_1DCD64B4C((uint64_t)&v82);
      sub_1DCD64C2C(&v81);
      sub_1DCD64C2C(&v80);
      sub_1DCD64B4C((uint64_t)&v79);

      sub_1DCD64B4C((uint64_t)&v79);
      a3 = v33;
    }
    uint64_t v45 = *(void *)(v9 + 16);
    id v46 = objc_msgSend(a3, sel_preferredMetalDevice);
    uint64_t v47 = *(void *)(v45 + 16);
    sub_1DCD3A3BC(v52, (uint64_t)&v59);
    uint64_t v48 = *(void *)(v45 + 24);
    type metadata accessor for SignalsExtractionProcessor();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1DCD3B28C(v47, &v59, v48, (uint64_t)v46);
    long long v67 = v91;
    long long v68 = v92;
    long long v69 = v93;
    uint64_t v70 = v94;
    long long v63 = v87;
    long long v64 = v88;
    long long v65 = v89;
    long long v66 = v90;
    long long v59 = v83;
    long long v60 = v84;
    long long v61 = v85;
    long long v62 = v86;
    sub_1DCD3B354((uint64_t)&v59, v54, v55, (char)v25, v56, v53);
    swift_unknownObjectRelease();
    swift_release();
    sub_1DCF5C830(v51 & 1, (uint64_t)&v71);
    sub_1DCF5C9E0(v71, *((uint64_t *)&v71 + 1), v72, *((void **)&v72 + 1));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DCF5B654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, int a7, void (*a8)(void *), uint64_t a9)
{
  LODWORD(v77) = a7;
  uint64_t v78 = a6;
  uint64_t v75 = a1;
  uint64_t v12 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v12);
  uint64_t v73 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v17);
  uint64_t v72 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  long long v76 = (uint64_t *)((char *)&v68 - v20);
  sub_1DCEA3DA4();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = a4 + 16;
    long long v71 = a8;
    uint64_t v74 = result;
    uint64_t v69 = a5;
    if (a5)
    {
      swift_beginAccess();
      uint64_t v23 = *(void *)(a5 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v23 = MEMORY[0x1E4FBC860];
    }
    uint64_t v70 = a9;
    swift_beginAccess();
    sub_1DCFDF94C(v23);
    swift_endAccess();
    sub_1DCD2889C(v75, (uint64_t)v16, &qword_1EAB043C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v24 = v76;
      void *v76 = *v16;
      swift_storeEnumTagMultiPayload();
      os_log_type_t v25 = v78;
      if ((v77 & 1) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v26 = v73;
      sub_1DCF5E93C((uint64_t)v16, v73, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      uint64_t v27 = (uint64_t *)(v26 + *(int *)(v12 + 24));
      uint64_t v29 = *v27;
      uint64_t v28 = v27[1];
      swift_beginAccess();
      *(void *)(a4 + 144) = v29;
      *(void *)(a4 + 152) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v30 = v74;
      swift_beginAccess();
      long long v31 = *(_OWORD *)(v22 + 144);
      long long v32 = *(_OWORD *)(v22 + 112);
      long long v98 = *(_OWORD *)(v22 + 128);
      long long v99 = v31;
      long long v33 = *(_OWORD *)(v22 + 144);
      long long v100 = *(_OWORD *)(v22 + 160);
      long long v34 = *(_OWORD *)(v22 + 80);
      long long v35 = *(_OWORD *)(v22 + 48);
      long long v94 = *(_OWORD *)(v22 + 64);
      long long v95 = v34;
      long long v36 = *(_OWORD *)(v22 + 80);
      long long v37 = *(_OWORD *)(v22 + 112);
      long long v96 = *(_OWORD *)(v22 + 96);
      long long v97 = v37;
      long long v38 = *(_OWORD *)(v22 + 16);
      long long v90 = *(_OWORD *)v22;
      long long v91 = v38;
      long long v39 = *(_OWORD *)(v22 + 48);
      long long v41 = *(_OWORD *)v22;
      long long v40 = *(_OWORD *)(v22 + 16);
      long long v92 = *(_OWORD *)(v22 + 32);
      long long v93 = v39;
      long long v42 = *(_OWORD *)(v22 + 160);
      long long v87 = v33;
      long long v88 = v42;
      long long v82 = v94;
      long long v83 = v36;
      long long v84 = v96;
      long long v85 = v32;
      long long v86 = v98;
      v79[0] = v41;
      v79[1] = v40;
      uint64_t v101 = *(void *)(v22 + 176);
      uint64_t v89 = *(void *)(v22 + 176);
      long long v80 = v92;
      long long v81 = v35;
      uint64_t v43 = *(void *)(v30 + 64);
      sub_1DCD433F0((uint64_t)&v90);
      id v24 = v76;
      os_log_type_t v25 = v78;
      sub_1DCEE6970(v26, v79, v43, (uint64_t)v76);
      sub_1DCD43B94((uint64_t)&v90);
      sub_1DCF5E9A4(v26, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      if ((v77 & 1) == 0)
      {
LABEL_16:
        v71(v24);
        swift_release();
        return sub_1DCD2479C((uint64_t)v24, (uint64_t *)&unk_1EAB03DC0);
      }
    }
    uint64_t v44 = v72;
    sub_1DCD2889C((uint64_t)v24, v72, (uint64_t *)&unk_1EAB03DC0);
    uint64_t v45 = v25;
    sub_1DCFA643C(v25, v44, (uint64_t)v79);
    v105[0] = *(long long *)((char *)v79 + 8);
    sub_1DCD43B04((uint64_t)&v79[1] + 8, (uint64_t)&v104, &qword_1EBE82CB8);
    id v46 = self;
    *((void *)&v91 + 1) = &type metadata for ResultEvent;
    *(void *)&long long v92 = &off_1F3838800;
    uint64_t v47 = swift_allocObject();
    *(void *)&long long v90 = v47;
    long long v48 = v79[1];
    *(_OWORD *)(v47 + 16) = v79[0];
    *(_OWORD *)(v47 + 32) = v48;
    *(unsigned char *)(v47 + 48) = v80;
    long long v49 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v50 = objc_allocWithZone(v49);
    sub_1DCD3A3BC((uint64_t)&v90, (uint64_t)v50 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)v105);
    sub_1DCD64C00(&v104);
    sub_1DCD64B20((uint64_t)v105);
    sub_1DCD64C00(&v104);
    v103.receiver = v50;
    v103.super_class = v49;
    id v51 = objc_msgSendSuper2(&v103, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
    objc_msgSend(v46, sel_logEvent_, v51);

    sub_1DCD64B4C((uint64_t)v105);
    sub_1DCD64C2C(&v104);
    uint64_t v52 = v69;
    if (v69)
    {
      swift_beginAccess();
      uint64_t v53 = *(void *)(v52 + 16);
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1DCD24E28(v25, 1, v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = MEMORY[0x1E4FBC860];
    }
    uint64_t v75 = v54;
    uint64_t v55 = *(char **)(v54 + 16);
    if (v55)
    {
      uint64_t v56 = (unsigned char *)(v75 + 64);
      char v77 = v46;
      do
      {
        uint64_t v78 = v55;
        uint64_t v57 = *((void *)v56 - 4);
        uint64_t v58 = *((void *)v56 - 3);
        uint64_t v60 = *((void *)v56 - 2);
        long long v59 = (void *)*((void *)v56 - 1);
        char v61 = *v56;
        v56 += 40;
        *((void *)&v91 + 1) = &type metadata for DurationEvent;
        *(void *)&long long v92 = &off_1F3834F98;
        uint64_t v62 = swift_allocObject();
        *(void *)&long long v90 = v62;
        *(void *)(v62 + 16) = v57;
        *(void *)(v62 + 24) = v58;
        *(void *)(v62 + 32) = v60;
        *(void *)(v62 + 40) = v59;
        *(unsigned char *)(v62 + 48) = v61;
        id v63 = objc_allocWithZone(v49);
        sub_1DCD3A3BC((uint64_t)&v90, (uint64_t)v63 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
        v102.receiver = v63;
        v102.super_class = v49;
        swift_bridgeObjectRetain_n();
        id v64 = v59;
        long long v65 = v77;
        id v66 = v64;
        id v67 = objc_msgSendSuper2(&v102, (SEL)&selRef__cachedEventsForBundleID_);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
        objc_msgSend(v65, sel_logEvent_, v67);

        swift_bridgeObjectRelease_n();
        uint64_t v55 = v78 - 1;
      }
      while (v78 != (char *)1);
    }
    swift_bridgeObjectRelease();
    sub_1DCD64B4C((uint64_t)v105);
    sub_1DCD64C2C(&v104);
    id v24 = v76;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1DCF5BCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void (*a7)(void *), uint64_t a8)
{
  uint64_t v54 = a8;
  uint64_t v55 = a7;
  int v53 = a6;
  id v52 = a5;
  uint64_t v11 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void *)((char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v17);
  uint64_t v50 = (uint64_t)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v51 = (void *)((char *)v49 - v20);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1DCEA3DA4();
  }
  uint64_t v22 = Strong;
  v49[1] = a3;
  sub_1DCD2889C(a1, (uint64_t)v16, &qword_1EAB043C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = v51;
    *id v51 = *v16;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1DCF5E93C((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
    os_log_type_t v25 = &v13[*(int *)(v11 + 24)];
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *((void *)v25 + 1);
    swift_beginAccess();
    *(void *)(a4 + 144) = v27;
    *(void *)(a4 + 152) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    long long v28 = *(_OWORD *)(a4 + 160);
    long long v29 = *(_OWORD *)(a4 + 128);
    long long v75 = *(_OWORD *)(a4 + 144);
    long long v76 = v28;
    long long v30 = *(_OWORD *)(a4 + 160);
    long long v77 = *(_OWORD *)(a4 + 176);
    long long v31 = *(_OWORD *)(a4 + 96);
    long long v32 = *(_OWORD *)(a4 + 64);
    long long v71 = *(_OWORD *)(a4 + 80);
    long long v72 = v31;
    long long v33 = *(_OWORD *)(a4 + 96);
    long long v34 = *(_OWORD *)(a4 + 128);
    long long v73 = *(_OWORD *)(a4 + 112);
    long long v74 = v34;
    long long v35 = *(_OWORD *)(a4 + 32);
    long long v67 = *(_OWORD *)(a4 + 16);
    long long v68 = v35;
    long long v36 = *(_OWORD *)(a4 + 64);
    long long v38 = *(_OWORD *)(a4 + 16);
    long long v37 = *(_OWORD *)(a4 + 32);
    long long v69 = *(_OWORD *)(a4 + 48);
    long long v70 = v36;
    long long v63 = v75;
    long long v64 = v30;
    long long v65 = *(_OWORD *)(a4 + 176);
    long long v59 = v71;
    long long v60 = v33;
    long long v61 = v73;
    long long v62 = v29;
    v56[0] = v38;
    v56[1] = v37;
    uint64_t v78 = *(void *)(a4 + 192);
    uint64_t v66 = *(void *)(a4 + 192);
    long long v57 = v69;
    long long v58 = v32;
    uint64_t v39 = *(void *)(v22 + 64);
    sub_1DCD433F0((uint64_t)&v67);
    uint64_t v23 = v51;
    sub_1DCEE6970((uint64_t)v13, v56, v39, (uint64_t)v51);
    sub_1DCD43B94((uint64_t)&v67);
    sub_1DCF5E9A4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
  }
  sub_1DCEA3DA4();
  if (v53)
  {
    uint64_t v40 = v50;
    sub_1DCD2889C((uint64_t)v23, v50, (uint64_t *)&unk_1EAB03DC0);
    id v41 = v52;
    id v42 = v52;
    sub_1DCFA643C(v41, v40, (uint64_t)v56);
    v81[0] = *(long long *)((char *)v56 + 8);
    sub_1DCD43B04((uint64_t)&v56[1] + 8, (uint64_t)&v80, &qword_1EBE82CB8);
    uint64_t v43 = self;
    *((void *)&v68 + 1) = &type metadata for ResultEvent;
    *(void *)&long long v69 = &off_1F3838800;
    uint64_t v44 = swift_allocObject();
    *(void *)&long long v67 = v44;
    long long v45 = v56[1];
    *(_OWORD *)(v44 + 16) = v56[0];
    *(_OWORD *)(v44 + 32) = v45;
    *(unsigned char *)(v44 + 48) = v57;
    id v46 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v47 = objc_allocWithZone(v46);
    sub_1DCD3A3BC((uint64_t)&v67, (uint64_t)v47 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)v81);
    sub_1DCD64C00(&v80);
    sub_1DCD64B20((uint64_t)v81);
    sub_1DCD64C00(&v80);
    v79.receiver = v47;
    v79.super_class = v46;
    id v48 = objc_msgSendSuper2(&v79, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
    objc_msgSend(v43, sel_logEvent_, v48);

    sub_1DCD64B4C((uint64_t)v81);
    sub_1DCD64C2C(&v80);
    sub_1DCD64B4C((uint64_t)v81);
    sub_1DCD64C2C(&v80);
  }
  v55(v23);
  swift_release();
  return sub_1DCD2479C((uint64_t)v23, (uint64_t *)&unk_1EAB03DC0);
}

uint64_t sub_1DCF5C188()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCF5C1D8()
{
  sub_1DCF5C188();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchFlow()
{
  return self;
}

uint64_t sub_1DCF5C230(uint64_t a1, long long *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1DCF5C2D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&unk_1F3842490, (uint64_t)sub_1DCF606CC, (uint64_t)&block_descriptor_73);
}

uint64_t sub_1DCF5C280(uint64_t a1, long long *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1DCF5C2D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&unk_1F38424E0, (uint64_t)sub_1DCF6097C, (uint64_t)&block_descriptor_80);
}

uint64_t sub_1DCF5C2D0(uint64_t a1, long long *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  uint64_t v55 = a5;
  uint64_t v50 = a4;
  uint64_t v58 = a13;
  uint64_t v54 = a12;
  uint64_t v52 = a11;
  uint64_t v60 = sub_1DD0481B8();
  uint64_t v63 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  long long v59 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DD0481D8();
  uint64_t v61 = *(void *)(v18 - 8);
  uint64_t v62 = v18;
  MEMORY[0x1F4188790](v18);
  int v53 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v49 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v49 + 64);
  MEMORY[0x1F4188790](v20 - 8);
  v67[3] = a9;
  v67[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v67);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 16))(boxed_opaque_existential_1, a1, a9);
  long long v23 = a2[9];
  long long v76 = a2[8];
  long long v77 = v23;
  long long v78 = a2[10];
  uint64_t v79 = *((void *)a2 + 22);
  long long v24 = a2[5];
  long long v72 = a2[4];
  long long v73 = v24;
  long long v25 = a2[7];
  long long v74 = a2[6];
  long long v75 = v25;
  long long v26 = a2[1];
  long long v68 = *a2;
  long long v69 = v26;
  long long v27 = a2[3];
  long long v70 = a2[2];
  long long v71 = v27;
  strcpy((char *)v80, "E2E - Search");
  HIBYTE(v80[6]) = 0;
  v80[7] = -5120;
  long long v81 = "Search Overall";
  uint64_t v82 = 14;
  char v83 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v28 = sub_1DCEA469C((uint64_t)v80, 0);
  uint64_t v51 = *(void *)(a8 + 56);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  sub_1DCD3A3BC((uint64_t)v67, (uint64_t)v66);
  sub_1DCF5E8D4(v50, (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v30 = (v21 + 263) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  long long v33 = v77;
  *(_OWORD *)(v32 + 152) = v76;
  *(_OWORD *)(v32 + 168) = v33;
  *(_OWORD *)(v32 + 184) = v78;
  long long v34 = v73;
  *(_OWORD *)(v32 + 88) = v72;
  *(_OWORD *)(v32 + 104) = v34;
  long long v35 = v75;
  *(_OWORD *)(v32 + 120) = v74;
  *(_OWORD *)(v32 + 136) = v35;
  long long v36 = v69;
  *(_OWORD *)(v32 + 24) = v68;
  *(_OWORD *)(v32 + 40) = v36;
  long long v37 = v71;
  *(_OWORD *)(v32 + 56) = v70;
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 200) = v79;
  *(_OWORD *)(v32 + 72) = v37;
  sub_1DCD3A4DC(v66, v32 + 208);
  *(void *)(v32 + 248) = a3;
  sub_1DCF5E93C((uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + 256, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  *(void *)(v32 + v30) = v28;
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  *(void *)(v32 + v31) = v55;
  uint64_t v40 = (void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v41 = v57;
  *uint64_t v40 = v38;
  v40[1] = v41;
  v65[4] = v54;
  v65[5] = v32;
  v65[0] = MEMORY[0x1E4F143A8];
  v65[1] = 1107296256;
  v65[2] = sub_1DCEC8CA4;
  v65[3] = v58;
  id v42 = _Block_copy(v65);
  swift_retain();
  sub_1DCD433F0((uint64_t)&v68);
  id v43 = a3;
  swift_retain();
  id v44 = v39;
  swift_retain();
  long long v45 = v53;
  sub_1DD0481C8();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  sub_1DCF5ED50(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCEBF914();
  id v47 = v59;
  uint64_t v46 = v60;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v45, v47, v42);
  _Block_release(v42);
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v46);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v45, v62);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
}

void sub_1DCF5C830(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(void *)(a2 + 16);
    if (v2)
    {
      uint64_t v3 = *(void **)(a2 + 24);
      uint64_t v5 = *(void *)a2;
      uint64_t v4 = *(void *)(a2 + 8);
      char v6 = *(unsigned char *)(a2 + 32) & 1;
      id v7 = objc_allocWithZone(MEMORY[0x1E4F9A078]);
      sub_1DCF5CA70(v5, v4, v2, v3);
      swift_bridgeObjectRetain();
      id v8 = v3;
      id v9 = objc_msgSend(v7, sel_initWithStartSearch_, v8);
      uint64_t v10 = self;
      v20[3] = &type metadata for LocalSearchEndEvent;
      v20[4] = &off_1F383B1F0;
      uint64_t v11 = swift_allocObject();
      v20[0] = v11;
      *(void *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v5;
      *(void *)(v11 + 32) = v4;
      *(void *)(v11 + 40) = v2;
      *(void *)(v11 + 48) = v8;
      *(unsigned char *)(v11 + 56) = v6;
      *(unsigned char *)(v11 + 57) = 0;
      uint64_t v12 = (objc_class *)type metadata accessor for AnyVIAEvent();
      id v13 = objc_allocWithZone(v12);
      sub_1DCD3A3BC((uint64_t)v20, (uint64_t)v13 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      v19.receiver = v13;
      v19.super_class = v12;
      id v14 = v9;
      swift_bridgeObjectRetain_n();
      id v15 = v8;
      id v16 = v14;
      id v17 = v15;
      id v18 = objc_msgSendSuper2(&v19, sel_init);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      objc_msgSend(v10, sel_logEvent_, v18);

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1DCF5C9E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCF5CA24()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

void sub_1DCF5CA70(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    id v4 = a4;
  }
}

uint64_t sub_1DCF5CAB4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 58, 7);
}

uint64_t sub_1DCF5CB00(uint64_t a1)
{
  return sub_1DCF5E7F4(a1, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCF5DBC4);
}

uint64_t sub_1DCF5CB18()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

uint64_t sub_1DCF5CBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9)
{
  return sub_1DCF5D71C(a1, a2, a3, a4, a5, a6, a7, a8, a9, "search(): result.userFeedbackIntermediateResults = %s");
}

uint64_t sub_1DCF5CBE4(uint64_t a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  long long v109 = a8;
  long long v110 = (uint64_t *)a4;
  long long v105 = a6;
  uint64_t v106 = a5;
  id v111 = a3;
  uint64_t v116 = a10;
  uint64_t v13 = sub_1DD048068();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v102 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v115 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v164 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v114 = (char *)&v96 - v18;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v107);
  long long v108 = (uint64_t *)((char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1DD048208();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  long long v23 = (uint64_t *)((char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v24 = a2[9];
  long long v160 = a2[8];
  long long v161 = v24;
  long long v162 = a2[10];
  uint64_t v163 = *((void *)a2 + 22);
  long long v25 = a2[5];
  long long v156 = a2[4];
  long long v157 = v25;
  long long v26 = a2[7];
  long long v158 = a2[6];
  long long v159 = v26;
  long long v27 = a2[1];
  long long v152 = *a2;
  long long v153 = v27;
  long long v28 = a2[3];
  long long v154 = a2[2];
  long long v155 = v28;
  uint64_t v29 = *(void **)(a7 + 56);
  *long long v23 = v29;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FBCBF0], v20);
  uint64_t v112 = a9;
  swift_retain();
  sub_1DCD433F0(v116);
  id v30 = v29;
  LOBYTE(v29) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  if ((v29 & 1) == 0)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t v32 = v113;
  sub_1DCDE4150(a1);
  if (v32)
  {
    swift_release();
    uint64_t v33 = v116;
    return sub_1DCD43B94(v33);
  }
  uint64_t v139 = MEMORY[0x1E4FBC870];
  sub_1DCF51818(&v130, 2);
  sub_1DCF51818(&v130, 3);
  long long v126 = v160;
  long long v127 = v161;
  long long v128 = v162;
  uint64_t v129 = v163;
  long long v122 = v156;
  long long v123 = v157;
  long long v124 = v158;
  long long v125 = v159;
  long long v118 = v152;
  long long v119 = v153;
  long long v120 = v154;
  long long v121 = v155;
  uint64_t v34 = v139;
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_1DCF24A9C(v35, (uint64_t)&v130);
  swift_bridgeObjectRelease();
  long long v148 = v135;
  long long v149 = v136;
  long long v150 = v137;
  uint64_t v151 = v138;
  long long v144 = v134[0];
  long long v145 = v134[1];
  long long v146 = v134[2];
  long long v147 = v134[3];
  long long v140 = v130;
  long long v141 = v131;
  long long v142 = v132;
  long long v143 = v133;
  uint64_t v36 = *(void *)(sub_1DCF22DA4() + 16);
  swift_bridgeObjectRelease();
  if (!v36)
  {
    swift_bridgeObjectRelease();
    sub_1DCEA3DA4();
    uint64_t v40 = type metadata accessor for VisualSearchResultInternal(0);
    uint64_t v41 = (uint64_t)v108;
    id v42 = (char *)v108 + *(int *)(v40 + 24);
    uint64_t v43 = sub_1DD047488();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
    uint64_t v44 = v41 + *(int *)(v40 + 28);
    uint64_t v45 = sub_1DD0477D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
    long long v46 = v149;
    *(_OWORD *)(v41 + 128) = v148;
    *(_OWORD *)(v41 + 144) = v46;
    *(_OWORD *)(v41 + 160) = v150;
    uint64_t v47 = v151;
    long long v48 = v145;
    *(_OWORD *)(v41 + 64) = v144;
    *(_OWORD *)(v41 + 80) = v48;
    long long v49 = v147;
    *(_OWORD *)(v41 + 96) = v146;
    *(_OWORD *)(v41 + 112) = v49;
    long long v50 = v141;
    *(_OWORD *)uint64_t v41 = v140;
    *(_OWORD *)(v41 + 16) = v50;
    long long v51 = v143;
    *(_OWORD *)(v41 + 32) = v142;
    *(_OWORD *)(v41 + 48) = v51;
    uint64_t v52 = MEMORY[0x1E4FBC860];
    *(void *)(v41 + 176) = v47;
    *(void *)(v41 + 184) = v52;
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v116;
    sub_1DCF585D0(v41, v109, v112, v116, "search(): result.userFeedbackIntermediateResults = %s");
    sub_1DCD2479C(v41, (uint64_t *)&unk_1EAB03DC0);
    swift_release();
    uint64_t v33 = v53;
    return sub_1DCD43B94(v33);
  }
  uint64_t v101 = v34;
  uint64_t v113 = a1;
  uint64_t v37 = *(void *)(a7 + 24);
  swift_retain();
  sub_1DD047938();
  swift_release();
  id v38 = v111;
  uint64_t v100 = v37;
  if (v111) {
    BOOL v39 = objc_msgSend(v111, sel_imageType) != (id)3;
  }
  else {
    BOOL v39 = 1;
  }
  uint64_t v54 = v110;
  uint64_t v55 = swift_allocObject();
  long long v135 = v148;
  long long v136 = v149;
  long long v137 = v150;
  uint64_t v138 = v151;
  v134[0] = v144;
  v134[1] = v145;
  v134[2] = v146;
  v134[3] = v147;
  long long v130 = v140;
  long long v131 = v141;
  long long v132 = v142;
  long long v133 = v143;
  sub_1DCF5B0C8(v113, (uint64_t)&v130, v38, v54, 2, 1, v39, 0, v55 + 16);
  BOOL v97 = v39;
  uint64_t v98 = v55;
  uint64_t v99 = 0;
  uint64_t v96 = a7;
  sub_1DCD43B94((uint64_t)&v140);
  uint64_t v56 = *(void *)(v55 + 16);
  uint64_t v57 = MEMORY[0x1E4FBC860];
  uint64_t v117 = MEMORY[0x1E4FBC860];
  uint64_t v58 = *(void *)(v56 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v113 = v58;
  if (v58)
  {
    unint64_t v59 = 0;
    uint64_t v60 = MEMORY[0x1E4FBC860];
    uint64_t v61 = (uint64_t)v114;
    while (v59 < *(void *)(v56 + 16))
    {
      unint64_t v62 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
      uint64_t v63 = *(void *)(v115 + 72);
      sub_1DCF5E8D4(v56 + v62 + v63 * v59, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (*(void *)(*(void *)(v61 + 56) + 16))
      {
        sub_1DCF5E93C(v61, v164, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DCFC49E8(0, *(void *)(v60 + 16) + 1, 1);
        }
        uint64_t v60 = v117;
        unint64_t v65 = *(void *)(v117 + 16);
        unint64_t v64 = *(void *)(v117 + 24);
        if (v65 >= v64 >> 1)
        {
          sub_1DCFC49E8(v64 > 1, v65 + 1, 1);
          uint64_t v60 = v117;
        }
        *(void *)(v60 + 16) = v65 + 1;
        uint64_t result = sub_1DCF5E93C(v164, v60 + v62 + v65 * v63, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v61 = (uint64_t)v114;
      }
      else
      {
        uint64_t result = sub_1DCF5E9A4(v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      if (v113 == ++v59)
      {
        uint64_t v66 = v117;
        uint64_t v57 = MEMORY[0x1E4FBC860];
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v66 = v57;
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = v98;
  uint64_t v68 = *(void *)(v98 + 24);
  uint64_t v69 = *(void *)(v98 + 32);
  uint64_t v70 = *(void *)(v98 + 40);
  uint64_t v71 = *(void *)(v98 + 48);
  uint64_t v72 = *(void *)(v98 + 56);
  uint64_t v73 = *(void *)(v98 + 64);
  uint64_t v74 = *(void *)(v98 + 72);
  uint64_t v75 = *(void *)(v98 + 80);
  char v76 = *(unsigned char *)(v98 + 136);
  unint64_t v77 = *(void *)(v98 + 160);
  *(void *)&long long v130 = v66;
  *((void *)&v130 + 1) = v68;
  *(void *)&long long v131 = v69;
  *((void *)&v131 + 1) = v70;
  *(void *)&long long v132 = v71;
  *((void *)&v132 + 1) = v72;
  *(void *)&long long v133 = v73;
  *((void *)&v133 + 1) = v74;
  *(void *)&v134[0] = v75;
  *(_OWORD *)((char *)v134 + 8) = *(_OWORD *)(v98 + 88);
  *(_OWORD *)((char *)&v134[1] + 8) = *(_OWORD *)(v98 + 104);
  *(_OWORD *)((char *)&v134[2] + 8) = *(_OWORD *)(v98 + 120);
  BYTE8(v134[3]) = v76;
  *(void *)&long long v135 = 0;
  *((void *)&v135 + 1) = 0xE000000000000000;
  long long v136 = v77;
  long long v137 = 0uLL;
  long long v78 = v105;
  uint64_t v79 = (os_unfair_lock_s *)(*(void *)&v105[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  uint64_t v138 = v57;
  sub_1DCD434B4(v68);
  os_unfair_lock_lock(v79);
  unsigned __int8 v80 = v78[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v79);
  unsigned __int8 v81 = v97;
  if (v80)
  {
    sub_1DCD43B94((uint64_t)&v130);
    uint64_t v82 = v102;
    sub_1DCDB40EC(v102);
    char v83 = sub_1DD048048();
    os_log_type_t v84 = sub_1DD048848();
    if (os_log_type_enabled(v83, v84))
    {
      long long v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v85 = 0;
      _os_log_impl(&dword_1DCCF9000, v83, v84, "performSearch(): canceled", v85, 2u);
      MEMORY[0x1E01B07E0](v85, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v82, v104);
    sub_1DCE6A230();
    uint64_t v86 = swift_allocError();
    *long long v87 = 0;
    uint64_t v88 = (uint64_t)v108;
    *long long v108 = v86;
    swift_storeEnumTagMultiPayload();
    uint64_t v89 = v116;
    sub_1DCF585D0(v88, v109, v112, v116, "search(): result.userFeedbackIntermediateResults = %s");
    sub_1DCD2479C(v88, (uint64_t *)&unk_1EAB03DC0);
    swift_release();
    swift_release();
    uint64_t v33 = v89;
    return sub_1DCD43B94(v33);
  }
  long long v126 = v135;
  long long v127 = v136;
  long long v128 = v137;
  uint64_t v129 = v138;
  long long v122 = v134[0];
  long long v123 = v134[1];
  long long v124 = v134[2];
  long long v125 = v134[3];
  long long v118 = v130;
  long long v119 = v131;
  long long v120 = v132;
  long long v121 = v133;
  uint64_t v90 = swift_allocObject();
  swift_weakInit();
  uint64_t v91 = v112;
  swift_retain();
  uint64_t v92 = v116;
  sub_1DCD433F0(v116);
  id v93 = v111;
  id v94 = v111;
  swift_retain();
  uint64_t v95 = v106;
  swift_retain();
  swift_retain();
  sub_1DCF8B1F8((uint64_t)&v118, v93, (uint64_t)v110, v78, v100, v90, v95, v67, v93, v81, v109, v91, v92);
  sub_1DCD43B94(v92);
  swift_release();
  swift_release();
  sub_1DCD43B94((uint64_t)&v130);
  swift_release();
  swift_release();
  return sub_1DCD43B94(v92);
}

uint64_t sub_1DCF5D6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9)
{
  return sub_1DCF5D71C(a1, a2, a3, a4, a5, a6, a7, a8, a9, "encryptedSearchPIR(): result.userFeedbackIntermediateResults = %s");
}

uint64_t sub_1DCF5D71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9, const char *a10)
{
  uint64_t v58 = a7;
  uint64_t v59 = a8;
  int v57 = a6;
  id v56 = a5;
  uint64_t v13 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (void *)((char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v19);
  uint64_t v54 = (uint64_t)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v55 = (void *)((char *)v51 - v22);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return sub_1DCEA3DA4();
  }
  uint64_t v24 = Strong;
  v51[1] = a3;
  uint64_t v53 = a10;
  uint64_t v52 = a9;
  sub_1DCD2889C(a1, (uint64_t)v18, &qword_1EAB043C8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v25 = v55;
    *uint64_t v55 = *v18;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1DCF5E93C((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
    long long v27 = &v15[*(int *)(v13 + 24)];
    uint64_t v29 = *(void *)v27;
    uint64_t v28 = *((void *)v27 + 1);
    swift_beginAccess();
    *(void *)(a4 + 144) = v29;
    *(void *)(a4 + 152) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    long long v30 = *(_OWORD *)(a4 + 160);
    long long v31 = *(_OWORD *)(a4 + 128);
    long long v79 = *(_OWORD *)(a4 + 144);
    long long v80 = v30;
    long long v32 = *(_OWORD *)(a4 + 160);
    long long v81 = *(_OWORD *)(a4 + 176);
    long long v33 = *(_OWORD *)(a4 + 96);
    long long v34 = *(_OWORD *)(a4 + 64);
    long long v75 = *(_OWORD *)(a4 + 80);
    long long v76 = v33;
    long long v35 = *(_OWORD *)(a4 + 96);
    long long v36 = *(_OWORD *)(a4 + 128);
    long long v77 = *(_OWORD *)(a4 + 112);
    long long v78 = v36;
    long long v37 = *(_OWORD *)(a4 + 32);
    long long v71 = *(_OWORD *)(a4 + 16);
    long long v72 = v37;
    long long v38 = *(_OWORD *)(a4 + 64);
    long long v40 = *(_OWORD *)(a4 + 16);
    long long v39 = *(_OWORD *)(a4 + 32);
    long long v73 = *(_OWORD *)(a4 + 48);
    long long v74 = v38;
    long long v67 = v79;
    long long v68 = v32;
    long long v69 = *(_OWORD *)(a4 + 176);
    long long v63 = v75;
    long long v64 = v35;
    long long v65 = v77;
    long long v66 = v31;
    v60[0] = v40;
    v60[1] = v39;
    uint64_t v82 = *(void *)(a4 + 192);
    uint64_t v70 = *(void *)(a4 + 192);
    long long v61 = v73;
    long long v62 = v34;
    uint64_t v41 = *(void *)(v24 + 64);
    sub_1DCD433F0((uint64_t)&v71);
    long long v25 = v55;
    sub_1DCEE6970((uint64_t)v15, v60, v41, (uint64_t)v55);
    sub_1DCD43B94((uint64_t)&v71);
    sub_1DCF5E9A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
  }
  sub_1DCEA3DA4();
  if (v57)
  {
    uint64_t v42 = v54;
    sub_1DCD2889C((uint64_t)v25, v54, (uint64_t *)&unk_1EAB03DC0);
    id v43 = v56;
    id v44 = v56;
    sub_1DCFA643C(v43, v42, (uint64_t)v60);
    v85[0] = *(long long *)((char *)v60 + 8);
    sub_1DCD43B04((uint64_t)&v60[1] + 8, (uint64_t)&v84, &qword_1EBE82CB8);
    uint64_t v45 = self;
    *((void *)&v72 + 1) = &type metadata for ResultEvent;
    *(void *)&long long v73 = &off_1F3838800;
    uint64_t v46 = swift_allocObject();
    *(void *)&long long v71 = v46;
    long long v47 = v60[1];
    *(_OWORD *)(v46 + 16) = v60[0];
    *(_OWORD *)(v46 + 32) = v47;
    *(unsigned char *)(v46 + 48) = v61;
    long long v48 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v49 = objc_allocWithZone(v48);
    sub_1DCD3A3BC((uint64_t)&v71, (uint64_t)v49 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)v85);
    sub_1DCD64C00(&v84);
    sub_1DCD64B20((uint64_t)v85);
    sub_1DCD64C00(&v84);
    v83.receiver = v49;
    v83.super_class = v48;
    id v50 = objc_msgSendSuper2(&v83, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
    objc_msgSend(v45, sel_logEvent_, v50);

    sub_1DCD64B4C((uint64_t)v85);
    sub_1DCD64C2C(&v84);
    sub_1DCD64B4C((uint64_t)v85);
    sub_1DCD64C2C(&v84);
  }
  sub_1DCF585D0((uint64_t)v25, v58, v59, v52, v53);
  swift_release();
  return sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EAB03DC0);
}

uint64_t sub_1DCF5DBC4(uint64_t a1, long long *a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v90 = a8;
  id v91 = a3;
  uint64_t v86 = a6;
  uint64_t v88 = a5;
  uint64_t v92 = (uint64_t *)a4;
  uint64_t v13 = sub_1DD048068();
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  MEMORY[0x1F4188790](v13);
  objc_super v83 = &v80[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v89);
  long long v87 = (uint64_t *)&v80[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1DD048208();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v80[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v20 = a2[8];
  long long v153 = a2[9];
  long long v154 = a2[10];
  uint64_t v155 = *((void *)a2 + 22);
  long long v21 = a2[5];
  long long v148 = a2[4];
  long long v149 = v21;
  long long v22 = a2[7];
  long long v150 = a2[6];
  long long v151 = v22;
  long long v152 = v20;
  long long v23 = a2[1];
  long long v144 = *a2;
  long long v145 = v23;
  long long v24 = a2[3];
  long long v146 = a2[2];
  long long v147 = v24;
  long long v25 = *(void **)(a7 + 56);
  *uint64_t v19 = v25;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4FBCBF0], v16);
  uint64_t v93 = a9;
  swift_retain();
  uint64_t v94 = a10;
  sub_1DCD433F0(a10);
  id v26 = v25;
  LOBYTE(v25) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v25)
  {
    uint64_t v28 = v95;
    sub_1DCDE4150(a1);
    if (v28)
    {
      swift_release();
      uint64_t v29 = v94;
    }
    else
    {
      uint64_t v156 = MEMORY[0x1E4FBC870];
      sub_1DCF51818(&v120, 17);
      long long v116 = v152;
      long long v117 = v153;
      long long v118 = v154;
      uint64_t v119 = v155;
      long long v112 = v148;
      long long v113 = v149;
      long long v114 = v150;
      long long v115 = v151;
      long long v108 = v144;
      long long v109 = v145;
      long long v110 = v146;
      long long v111 = v147;
      sub_1DCF24A9C(v156, (uint64_t)&v120);
      swift_bridgeObjectRelease();
      long long v140 = v128;
      long long v141 = v129;
      long long v142 = v130;
      uint64_t v143 = v131;
      long long v136 = v124;
      long long v137 = v125;
      long long v138 = v126;
      long long v139 = v127;
      long long v132 = v120;
      long long v133 = v121;
      long long v134 = v122;
      long long v135 = v123;
      uint64_t v30 = *(void *)(sub_1DCF22DA4() + 16);
      swift_bridgeObjectRelease();
      if (v30)
      {
        uint64_t v31 = *(void *)(a7 + 24);
        swift_retain();
        sub_1DD047938();
        swift_release();
        id v32 = v91;
        uint64_t v95 = v31;
        uint64_t v33 = a1;
        if (v91) {
          BOOL v34 = objc_msgSend(v91, sel_imageType) != (id)3;
        }
        else {
          BOOL v34 = 1;
        }
        id v49 = v92;
        uint64_t v50 = swift_allocObject();
        long long v51 = (long long *)(v50 + 16);
        long long v128 = v140;
        long long v129 = v141;
        long long v130 = v142;
        uint64_t v131 = v143;
        long long v124 = v136;
        long long v125 = v137;
        long long v126 = v138;
        long long v127 = v139;
        long long v120 = v132;
        long long v121 = v133;
        long long v122 = v134;
        long long v123 = v135;
        sub_1DCF5B0C8(v33, (uint64_t)&v120, v32, v49, 2, 1, v34, 0, v50 + 16);
        sub_1DCD43B94((uint64_t)&v132);
        BOOL v81 = v34;
        uint64_t v82 = v50;
        uint64_t v52 = v86;
        uint64_t v53 = (os_unfair_lock_s *)(*(void *)&v86[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
        os_unfair_lock_lock(v53);
        unsigned __int8 v54 = v52[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
        os_unfair_lock_unlock(v53);
        if ((v54 & 1) == 0)
        {
          long long v62 = *(_OWORD *)(v50 + 160);
          long long v63 = *(_OWORD *)(v50 + 128);
          long long v116 = *(_OWORD *)(v50 + 144);
          long long v117 = v62;
          long long v64 = *(_OWORD *)(v50 + 160);
          long long v118 = *(_OWORD *)(v50 + 176);
          long long v65 = *(_OWORD *)(v50 + 96);
          long long v66 = *(_OWORD *)(v50 + 64);
          long long v112 = *(_OWORD *)(v50 + 80);
          long long v113 = v65;
          long long v67 = *(_OWORD *)(v50 + 96);
          long long v68 = *(_OWORD *)(v50 + 128);
          long long v114 = *(_OWORD *)(v50 + 112);
          long long v115 = v68;
          long long v69 = *(_OWORD *)(v50 + 32);
          long long v108 = *v51;
          long long v109 = v69;
          long long v70 = *(_OWORD *)(v50 + 64);
          long long v72 = *v51;
          long long v71 = *(_OWORD *)(v50 + 32);
          long long v110 = *(_OWORD *)(v50 + 48);
          long long v111 = v70;
          long long v104 = v116;
          long long v105 = v64;
          long long v106 = *(_OWORD *)(v50 + 176);
          long long v100 = v112;
          long long v101 = v67;
          long long v102 = v114;
          long long v103 = v63;
          long long v96 = v72;
          long long v97 = v71;
          uint64_t v119 = *(void *)(v50 + 192);
          uint64_t v107 = *(void *)(v50 + 192);
          long long v98 = v110;
          long long v99 = v66;
          uint64_t v73 = swift_allocObject();
          swift_weakInit();
          uint64_t v74 = v93;
          swift_retain();
          uint64_t v75 = v94;
          sub_1DCD433F0(v94);
          id v76 = v32;
          swift_retain();
          long long v77 = v32;
          uint64_t v78 = v88;
          swift_retain();
          uint64_t v79 = v82;
          swift_retain();
          sub_1DCD433F0((uint64_t)&v108);
          sub_1DCF8B9DC((uint64_t)&v96, v77, (uint64_t)v92, v52, v95, v73, v78, v79, v77, v81, v90, v74, v75);
          sub_1DCD43B94(v75);
          swift_release();
          long long v128 = v104;
          long long v129 = v105;
          long long v130 = v106;
          uint64_t v131 = v107;
          long long v124 = v100;
          long long v125 = v101;
          long long v126 = v102;
          long long v127 = v103;
          long long v120 = v96;
          long long v121 = v97;
          long long v122 = v98;
          long long v123 = v99;
          sub_1DCD43B94((uint64_t)&v120);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v29 = v75;
          return sub_1DCD43B94(v29);
        }
        uint64_t v55 = v83;
        sub_1DCDB40EC((uint64_t)v83);
        id v56 = sub_1DD048048();
        os_log_type_t v57 = sub_1DD048848();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          _os_log_impl(&dword_1DCCF9000, v56, v57, "performEncryptedSearchPIR(): canceled", v58, 2u);
          MEMORY[0x1E01B07E0](v58, -1, -1);
        }

        (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v55, v85);
        sub_1DCE6A230();
        uint64_t v59 = swift_allocError();
        *uint64_t v60 = 0;
        uint64_t v61 = (uint64_t)v87;
        *long long v87 = v59;
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v94;
        sub_1DCF585D0(v61, v90, v93, v94, "encryptedSearchPIR(): result.userFeedbackIntermediateResults = %s");
        sub_1DCD2479C(v61, (uint64_t *)&unk_1EAB03DC0);
        swift_release();
      }
      else
      {
        sub_1DCEA3DA4();
        uint64_t v35 = type metadata accessor for VisualSearchResultInternal(0);
        uint64_t v36 = (uint64_t)v87;
        long long v37 = (char *)v87 + *(int *)(v35 + 24);
        uint64_t v38 = sub_1DD047488();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
        uint64_t v39 = v36 + *(int *)(v35 + 28);
        uint64_t v40 = sub_1DD0477D8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
        long long v41 = v141;
        *(_OWORD *)(v36 + 128) = v140;
        *(_OWORD *)(v36 + 144) = v41;
        *(_OWORD *)(v36 + 160) = v142;
        uint64_t v42 = v143;
        long long v43 = v137;
        *(_OWORD *)(v36 + 64) = v136;
        *(_OWORD *)(v36 + 80) = v43;
        long long v44 = v139;
        *(_OWORD *)(v36 + 96) = v138;
        *(_OWORD *)(v36 + 112) = v44;
        long long v45 = v133;
        *(_OWORD *)uint64_t v36 = v132;
        *(_OWORD *)(v36 + 16) = v45;
        long long v46 = v135;
        *(_OWORD *)(v36 + 32) = v134;
        *(_OWORD *)(v36 + 48) = v46;
        uint64_t v47 = MEMORY[0x1E4FBC860];
        *(void *)(v36 + 176) = v42;
        *(void *)(v36 + 184) = v47;
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v94;
        sub_1DCF585D0(v36, v90, v93, v94, "encryptedSearchPIR(): result.userFeedbackIntermediateResults = %s");
        sub_1DCD2479C(v36, (uint64_t *)&unk_1EAB03DC0);
      }
      swift_release();
      uint64_t v29 = v48;
    }
    return sub_1DCD43B94(v29);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF5E468()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF5E4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v14 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v14 + 72) & ~v14;
  unint64_t v3 = (((*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v2 + v1[7];
  uint64_t v6 = sub_1DD047BF8();
  id v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v4 + v1[8];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 28), v6);
  }
  unint64_t v10 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v4 + v1[9];
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12)) {
    v7(v11 + *(int *)(v12 + 20), v6);
  }
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v10 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v10 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v10 + 184, v14 | 7);
}

uint64_t sub_1DCF5E7DC(uint64_t a1)
{
  return sub_1DCF5E7F4(a1, (void (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCF5CBE4);
}

uint64_t sub_1DCF5E7F4(uint64_t a1, void (*a2)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCF583B8(a1, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 64), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v8), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), a2);
}

uint64_t sub_1DCF5E8D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF5E93C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF5E9A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCF5EA04()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  int v2 = *(_DWORD *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 232)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  }

  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + 256 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + 256 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  uint64_t v9 = v0 + 256 + v1[9];
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }
  unint64_t v11 = (((v3 + 263) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 & 0xF8 | 7);
}

uint64_t sub_1DCF5ECB0()
{
  unint64_t v1 = (*(void *)(*(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8) + 64) + 263) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCF590EC(*(void *)(v0 + 16), v0 + 24, v0 + 208, *(void **)(v0 + 248), v0 + 256, *(void *)(v0 + v1), *(void **)(v0 + v2), *(void *)(v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1DCF5ED50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF5ED98()
{
  unint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v14 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v14 + 72) & ~v14;
  unint64_t v13 = (((*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  uint64_t v3 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v2 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v3 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  unint64_t v9 = (((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v3 + v1[9];
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v6(v10 + *(int *)(v11 + 20), v5);
  }
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v9 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v9 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v9 + 184, v14 | 7);
}

uint64_t sub_1DCF5F084(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCF593F4(a1, *(void *)(v1 + 16), v1 + 24, *(char **)(v1 + 64), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v7), *(uint64_t (**)(uint64_t))(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1DCF5F164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, int a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  LODWORD(v78) = a7;
  uint64_t v79 = a6;
  uint64_t v76 = a1;
  uint64_t v13 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v13);
  uint64_t v74 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v18);
  uint64_t v73 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  long long v77 = (uint64_t *)((char *)&v69 - v21);
  sub_1DCEA3DA4();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = a4 + 16;
    long long v72 = a8;
    uint64_t v75 = result;
    uint64_t v69 = a5;
    if (a5)
    {
      swift_beginAccess();
      uint64_t v24 = *(void *)(a5 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = MEMORY[0x1E4FBC860];
    }
    uint64_t v71 = a10;
    uint64_t v70 = a9;
    swift_beginAccess();
    sub_1DCFDF94C(v24);
    swift_endAccess();
    sub_1DCD2889C(v76, (uint64_t)v17, &qword_1EAB043C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v25 = v77;
      void *v77 = *v17;
      swift_storeEnumTagMultiPayload();
      id v26 = v79;
      if ((v78 & 1) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v27 = v74;
      sub_1DCF5E93C((uint64_t)v17, v74, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      uint64_t v28 = (uint64_t *)(v27 + *(int *)(v13 + 24));
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      swift_beginAccess();
      *(void *)(a4 + 144) = v30;
      *(void *)(a4 + 152) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = v75;
      swift_beginAccess();
      long long v32 = *(_OWORD *)(v23 + 144);
      long long v33 = *(_OWORD *)(v23 + 112);
      long long v99 = *(_OWORD *)(v23 + 128);
      long long v100 = v32;
      long long v34 = *(_OWORD *)(v23 + 144);
      long long v101 = *(_OWORD *)(v23 + 160);
      long long v35 = *(_OWORD *)(v23 + 80);
      long long v36 = *(_OWORD *)(v23 + 48);
      long long v95 = *(_OWORD *)(v23 + 64);
      long long v96 = v35;
      long long v37 = *(_OWORD *)(v23 + 80);
      long long v38 = *(_OWORD *)(v23 + 112);
      long long v97 = *(_OWORD *)(v23 + 96);
      long long v98 = v38;
      long long v39 = *(_OWORD *)(v23 + 16);
      long long v91 = *(_OWORD *)v23;
      long long v92 = v39;
      long long v40 = *(_OWORD *)(v23 + 48);
      long long v42 = *(_OWORD *)v23;
      long long v41 = *(_OWORD *)(v23 + 16);
      long long v93 = *(_OWORD *)(v23 + 32);
      long long v94 = v40;
      long long v43 = *(_OWORD *)(v23 + 160);
      long long v88 = v34;
      long long v89 = v43;
      long long v83 = v95;
      long long v84 = v37;
      long long v85 = v97;
      long long v86 = v33;
      long long v87 = v99;
      v80[0] = v42;
      v80[1] = v41;
      uint64_t v102 = *(void *)(v23 + 176);
      uint64_t v90 = *(void *)(v23 + 176);
      long long v81 = v93;
      long long v82 = v36;
      uint64_t v44 = *(void *)(v31 + 64);
      sub_1DCD433F0((uint64_t)&v91);
      long long v25 = v77;
      id v26 = v79;
      sub_1DCEE6970(v27, v80, v44, (uint64_t)v77);
      sub_1DCD43B94((uint64_t)&v91);
      sub_1DCF5E9A4(v27, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      if ((v78 & 1) == 0)
      {
LABEL_16:
        sub_1DCF585D0((uint64_t)v25, v72, v70, v71, "search(): result.userFeedbackIntermediateResults = %s");
        swift_release();
        return sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EAB03DC0);
      }
    }
    uint64_t v45 = v73;
    sub_1DCD2889C((uint64_t)v25, v73, (uint64_t *)&unk_1EAB03DC0);
    long long v46 = v26;
    sub_1DCFA643C(v26, v45, (uint64_t)v80);
    v106[0] = *(long long *)((char *)v80 + 8);
    sub_1DCD43B04((uint64_t)&v80[1] + 8, (uint64_t)&v105, &qword_1EBE82CB8);
    uint64_t v47 = self;
    *((void *)&v92 + 1) = &type metadata for ResultEvent;
    *(void *)&long long v93 = &off_1F3838800;
    uint64_t v48 = swift_allocObject();
    *(void *)&long long v91 = v48;
    long long v49 = v80[1];
    *(_OWORD *)(v48 + 16) = v80[0];
    *(_OWORD *)(v48 + 32) = v49;
    *(unsigned char *)(v48 + 48) = v81;
    uint64_t v50 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v51 = objc_allocWithZone(v50);
    sub_1DCD3A3BC((uint64_t)&v91, (uint64_t)v51 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)v106);
    sub_1DCD64C00(&v105);
    sub_1DCD64B20((uint64_t)v106);
    sub_1DCD64C00(&v105);
    v104.receiver = v51;
    v104.super_class = v50;
    id v52 = objc_msgSendSuper2(&v104, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
    objc_msgSend(v47, sel_logEvent_, v52);

    sub_1DCD64B4C((uint64_t)v106);
    sub_1DCD64C2C(&v105);
    uint64_t v53 = v69;
    if (v69)
    {
      swift_beginAccess();
      uint64_t v54 = *(void *)(v53 + 16);
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1DCD24E28(v26, 1, v54);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = MEMORY[0x1E4FBC860];
    }
    uint64_t v76 = v55;
    id v56 = *(char **)(v55 + 16);
    if (v56)
    {
      os_log_type_t v57 = (unsigned char *)(v76 + 64);
      uint64_t v78 = v47;
      do
      {
        uint64_t v79 = v56;
        uint64_t v58 = *((void *)v57 - 4);
        uint64_t v59 = *((void *)v57 - 3);
        uint64_t v61 = *((void *)v57 - 2);
        uint64_t v60 = (void *)*((void *)v57 - 1);
        char v62 = *v57;
        v57 += 40;
        *((void *)&v92 + 1) = &type metadata for DurationEvent;
        *(void *)&long long v93 = &off_1F3834F98;
        uint64_t v63 = swift_allocObject();
        *(void *)&long long v91 = v63;
        *(void *)(v63 + 16) = v58;
        *(void *)(v63 + 24) = v59;
        *(void *)(v63 + 32) = v61;
        *(void *)(v63 + 40) = v60;
        *(unsigned char *)(v63 + 48) = v62;
        id v64 = objc_allocWithZone(v50);
        sub_1DCD3A3BC((uint64_t)&v91, (uint64_t)v64 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
        v103.receiver = v64;
        v103.super_class = v50;
        swift_bridgeObjectRetain_n();
        id v65 = v60;
        long long v66 = v78;
        id v67 = v65;
        id v68 = objc_msgSendSuper2(&v103, (SEL)&selRef__cachedEventsForBundleID_);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
        objc_msgSend(v66, sel_logEvent_, v68);

        swift_bridgeObjectRelease_n();
        id v56 = v79 - 1;
      }
      while (v79 != (char *)1);
    }
    swift_bridgeObjectRelease();
    sub_1DCD64B4C((uint64_t)v106);
    sub_1DCD64C2C(&v105);
    long long v25 = v77;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1DCF5F80C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, uint64_t a11)
{
  long long v134 = (uint64_t *)a4;
  uint64_t v135 = a7;
  uint64_t v138 = a6;
  long long v142 = a3;
  uint64_t v143 = a5;
  uint64_t v141 = a1;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v129);
  long long v130 = (uint64_t *)((char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1DD048068();
  uint64_t v132 = *(void *)(v14 - 8);
  uint64_t v133 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v128 = (uint64_t)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v131 = (char *)&v124 - v17;
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v136);
  long long v137 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DD048208();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  long long v22 = (uint64_t *)((char *)&v124 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = swift_allocObject();
  long long v139 = a9;
  *(void *)(v23 + 16) = a9;
  *(void *)(v23 + 24) = a10;
  uint64_t v24 = a8;
  uint64_t v25 = v23;
  long long v26 = *(_OWORD *)(a11 + 144);
  *(_OWORD *)(v23 + 160) = *(_OWORD *)(a11 + 128);
  *(_OWORD *)(v23 + 176) = v26;
  *(_OWORD *)(v23 + 192) = *(_OWORD *)(a11 + 160);
  *(void *)(v23 + 208) = *(void *)(a11 + 176);
  long long v27 = *(_OWORD *)(a11 + 80);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(a11 + 64);
  *(_OWORD *)(v23 + 112) = v27;
  long long v28 = *(_OWORD *)(a11 + 112);
  *(_OWORD *)(v23 + 128) = *(_OWORD *)(a11 + 96);
  *(_OWORD *)(v23 + 144) = v28;
  long long v29 = *(_OWORD *)(a11 + 16);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)a11;
  *(_OWORD *)(v23 + 48) = v29;
  long long v30 = *(_OWORD *)(a11 + 48);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(a11 + 32);
  *(_OWORD *)(v23 + 80) = v30;
  long long v31 = *(_OWORD *)(a2 + 144);
  long long v191 = *(_OWORD *)(a2 + 128);
  long long v192 = v31;
  long long v193 = *(_OWORD *)(a2 + 160);
  uint64_t v194 = *(void *)(a2 + 176);
  long long v32 = *(_OWORD *)(a2 + 64);
  long long v188 = *(_OWORD *)(a2 + 80);
  long long v33 = *(_OWORD *)(a2 + 112);
  long long v189 = *(_OWORD *)(a2 + 96);
  long long v190 = v33;
  long long v34 = *(_OWORD *)(a2 + 16);
  long long v183 = *(_OWORD *)a2;
  long long v184 = v34;
  long long v35 = *(_OWORD *)(a2 + 48);
  long long v185 = *(_OWORD *)(a2 + 32);
  long long v186 = v35;
  long long v187 = v32;
  long long v36 = *(void **)(v24 + 56);
  *long long v22 = v36;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FBCBF0], v19);
  swift_retain();
  sub_1DCD433F0(a11);
  uint64_t v140 = a10;
  swift_retain();
  sub_1DCD433F0(a11);
  id v37 = v36;
  LOBYTE(v36) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if (v36)
  {
    long long v39 = v142;
    if (v142 && objc_msgSend(v142, sel_imageType) == (id)3)
    {
      uint64_t v40 = v195;
    }
    else
    {
      sub_1DCD2889C(v141, (uint64_t)&v146, &qword_1EBE85740);
      uint64_t v40 = v195;
      if (*((void *)&v147 + 1))
      {
        sub_1DCD3A4DC(&v146, (uint64_t)&v159);
        sub_1DCDE4150((uint64_t)&v159);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
        if (v40) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_1DCD2479C((uint64_t)&v146, &qword_1EBE85740);
      }
    }
    long long v167 = v191;
    long long v168 = v192;
    long long v169 = v193;
    uint64_t v170 = v194;
    long long v163 = v187;
    long long v164 = v188;
    long long v165 = v189;
    long long v166 = v190;
    long long v159 = v183;
    long long v160 = v184;
    long long v161 = v185;
    long long v162 = v186;
    uint64_t v41 = *(void *)(sub_1DCF22DA4() + 16);
    swift_bridgeObjectRelease();
    if (v41)
    {
      uint64_t v126 = *(void *)(v24 + 24);
      swift_retain();
      sub_1DD047938();
      swift_release();
      if (v39)
      {
        BOOL v127 = objc_msgSend(v39, sel_imageType) != (id)3;
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v42 + 16;
        long long v44 = v192;
        *(_OWORD *)(v42 + 144) = v191;
        *(_OWORD *)(v42 + 160) = v44;
        *(_OWORD *)(v42 + 176) = v193;
        *(void *)(v42 + 192) = v194;
        long long v45 = v188;
        *(_OWORD *)(v42 + 80) = v187;
        *(_OWORD *)(v42 + 96) = v45;
        long long v46 = v190;
        *(_OWORD *)(v42 + 112) = v189;
        *(_OWORD *)(v42 + 128) = v46;
        long long v47 = v184;
        *(_OWORD *)(v42 + 16) = v183;
        *(_OWORD *)(v42 + 32) = v47;
        long long v48 = v186;
        *(_OWORD *)(v42 + 48) = v185;
        *(_OWORD *)(v42 + 64) = v48;
        sub_1DCD433F0((uint64_t)&v183);
        if (objc_msgSend(v39, sel_imageType) == (id)3)
        {
          uint64_t v141 = v42;
          uint64_t v125 = v24;
          uint64_t v195 = v40;
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = v42 + 16;
        long long v62 = v192;
        *(_OWORD *)(v42 + 144) = v191;
        *(_OWORD *)(v42 + 160) = v62;
        *(_OWORD *)(v42 + 176) = v193;
        *(void *)(v42 + 192) = v194;
        long long v63 = v188;
        *(_OWORD *)(v42 + 80) = v187;
        *(_OWORD *)(v42 + 96) = v63;
        long long v64 = v190;
        *(_OWORD *)(v42 + 112) = v189;
        *(_OWORD *)(v42 + 128) = v64;
        long long v65 = v184;
        *(_OWORD *)(v42 + 16) = v183;
        *(_OWORD *)(v42 + 32) = v65;
        long long v66 = v186;
        *(_OWORD *)(v42 + 48) = v185;
        *(_OWORD *)(v42 + 64) = v66;
        sub_1DCD433F0((uint64_t)&v183);
        BOOL v127 = 1;
      }
      sub_1DCD2889C(v141, (uint64_t)&v159, &qword_1EBE85740);
      id v67 = v134;
      if (*((void *)&v160 + 1))
      {
        sub_1DCD3A4DC(&v159, (uint64_t)v158);
        long long v154 = v191;
        long long v155 = v192;
        long long v156 = v193;
        uint64_t v157 = v194;
        long long v150 = v187;
        long long v151 = v188;
        long long v152 = v189;
        long long v153 = v190;
        long long v146 = v183;
        long long v147 = v184;
        long long v148 = v185;
        long long v149 = v186;
        sub_1DCF5B0C8((uint64_t)v158, (uint64_t)&v146, v39, v67, 1, 1, v127, v135, (uint64_t)&v159);
        if (v40)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
          swift_release();
          swift_release();
          goto LABEL_31;
        }
        uint64_t v141 = v42;
        uint64_t v125 = v24;
        uint64_t v195 = 0;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
        long long v68 = *(_OWORD *)(v43 + 144);
        v144[8] = *(_OWORD *)(v43 + 128);
        v144[9] = v68;
        v144[10] = *(_OWORD *)(v43 + 160);
        uint64_t v145 = *(void *)(v43 + 176);
        long long v69 = *(_OWORD *)(v43 + 80);
        v144[4] = *(_OWORD *)(v43 + 64);
        v144[5] = v69;
        long long v70 = *(_OWORD *)(v43 + 112);
        v144[6] = *(_OWORD *)(v43 + 96);
        v144[7] = v70;
        long long v71 = *(_OWORD *)(v43 + 16);
        v144[0] = *(_OWORD *)v43;
        v144[1] = v71;
        long long v72 = *(_OWORD *)(v43 + 48);
        v144[2] = *(_OWORD *)(v43 + 32);
        v144[3] = v72;
        long long v73 = v168;
        *(_OWORD *)(v43 + 128) = v167;
        *(_OWORD *)(v43 + 144) = v73;
        *(_OWORD *)(v43 + 160) = v169;
        *(void *)(v43 + 176) = v170;
        long long v74 = v164;
        *(_OWORD *)(v43 + 64) = v163;
        *(_OWORD *)(v43 + 80) = v74;
        long long v75 = v166;
        *(_OWORD *)(v43 + 96) = v165;
        *(_OWORD *)(v43 + 112) = v75;
        long long v76 = v160;
        *(_OWORD *)uint64_t v43 = v159;
        *(_OWORD *)(v43 + 16) = v76;
        long long v77 = v162;
        *(_OWORD *)(v43 + 32) = v161;
        *(_OWORD *)(v43 + 48) = v77;
        sub_1DCD43B94((uint64_t)v144);
      }
      else
      {
        uint64_t v141 = v42;
        uint64_t v125 = v24;
        uint64_t v195 = v40;
        sub_1DCD2479C((uint64_t)&v159, &qword_1EBE85740);
      }
LABEL_21:
      uint64_t v78 = v138;
      uint64_t v79 = (os_unfair_lock_s *)(*(void *)(v138 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
      os_unfair_lock_lock(v79);
      long long v80 = (char *)OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled;
      int v81 = *(unsigned __int8 *)(v78 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
      os_unfair_lock_unlock(v79);
      if (v81 == 1)
      {
        long long v82 = v131;
        sub_1DCDB40EC((uint64_t)v131);
        long long v83 = sub_1DD048048();
        os_log_type_t v84 = sub_1DD048848();
        if (os_log_type_enabled(v83, v84))
        {
          long long v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v85 = 0;
          _os_log_impl(&dword_1DCCF9000, v83, v84, "performSearch(): canceled", v85, 2u);
          MEMORY[0x1E01B07E0](v85, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v132 + 8))(v82, v133);
        sub_1DCE6A230();
        uint64_t v86 = swift_allocError();
        *long long v87 = 0;
        uint64_t v88 = (uint64_t)v137;
        *(void *)long long v137 = v86;
        swift_storeEnumTagMultiPayload();
        sub_1DCF585D0(v88, v139, v140, a11, "search(): result.userFeedbackIntermediateResults = %s");
        sub_1DCD2479C(v88, (uint64_t *)&unk_1EAB03DC0);
        swift_release();
        swift_release();
      }
      else
      {
        long long v89 = *(_OWORD *)v43;
        long long v90 = *(_OWORD *)(v43 + 16);
        long long v91 = *(_OWORD *)(v43 + 48);
        long long v173 = *(_OWORD *)(v43 + 32);
        long long v174 = v91;
        long long v171 = v89;
        long long v172 = v90;
        long long v92 = *(_OWORD *)(v43 + 64);
        long long v93 = *(_OWORD *)(v43 + 80);
        long long v94 = *(_OWORD *)(v43 + 112);
        long long v177 = *(_OWORD *)(v43 + 96);
        long long v178 = v94;
        long long v175 = v92;
        long long v176 = v93;
        long long v95 = *(_OWORD *)(v43 + 128);
        long long v96 = *(_OWORD *)(v43 + 144);
        long long v97 = *(_OWORD *)(v43 + 160);
        uint64_t v182 = *(void *)(v43 + 176);
        long long v180 = v96;
        long long v181 = v97;
        long long v179 = v95;
        uint64_t v98 = swift_allocObject();
        swift_weakInit();
        uint64_t v99 = swift_allocObject();
        long long v100 = v142;
        *(void *)(v99 + 16) = v143;
        *(void *)(v99 + 24) = v98;
        uint64_t v101 = v141;
        long long v137 = v80;
        uint64_t v102 = v135;
        *(void *)(v99 + 32) = v141;
        *(void *)(v99 + 40) = v102;
        *(void *)(v99 + 48) = v100;
        *(unsigned char *)(v99 + 56) = v127;
        *(void *)(v99 + 64) = sub_1DCF621EC;
        *(void *)(v99 + 72) = v25;
        objc_super v103 = v100;
        swift_retain_n();
        swift_retain_n();
        uint64_t v136 = v98;
        uint64_t v104 = v102;
        swift_retain_n();
        uint64_t v141 = v101;
        swift_retain_n();
        swift_retain_n();
        uint64_t v131 = v103;
        sub_1DCD433F0((uint64_t)&v171);
        os_unfair_lock_lock(v79);
        id v105 = (void *)v138;
        LOBYTE(v102) = v137[v138];
        os_unfair_lock_unlock(v79);
        if (v102)
        {
          uint64_t v138 = v99;
          uint64_t v106 = v128;
          sub_1DCDB40EC(v128);
          uint64_t v107 = sub_1DD048048();
          os_log_type_t v108 = sub_1DD048848();
          if (os_log_type_enabled(v107, v108))
          {
            long long v109 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v109 = 0;
            _os_log_impl(&dword_1DCCF9000, v107, v108, "search(): canceled", v109, 2u);
            uint64_t v104 = v135;
            MEMORY[0x1E01B07E0](v109, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v106, v133);
          sub_1DCE6A230();
          uint64_t v110 = swift_allocError();
          *long long v111 = 0;
          uint64_t v112 = (uint64_t)v130;
          *long long v130 = v110;
          swift_storeEnumTagMultiPayload();
          uint64_t v113 = v140;
          swift_retain();
          sub_1DCD433F0(a11);
          sub_1DCF5F164(v112, v143, v136, v141, v104, v142, v127, v139, v113, a11);
          sub_1DCD43B94(a11);
          swift_release();
          sub_1DCD2479C(v112, &qword_1EAB043C8);
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v114 = swift_allocObject();
          *(void *)(v114 + 16) = sub_1DCF60670;
          *(void *)(v114 + 24) = v99;
          long long v139 = *(uint64_t (**)(uint64_t))(v126 + 16);
          long long v167 = v179;
          long long v168 = v180;
          long long v169 = v181;
          uint64_t v170 = v182;
          long long v163 = v175;
          long long v164 = v176;
          long long v165 = v177;
          long long v166 = v178;
          long long v159 = v171;
          long long v160 = v172;
          long long v161 = v173;
          long long v162 = v174;
          long long v115 = v105;
          uint64_t v116 = swift_allocObject();
          long long v117 = v180;
          *(_OWORD *)(v116 + 152) = v179;
          *(_OWORD *)(v116 + 168) = v117;
          *(_OWORD *)(v116 + 184) = v181;
          long long v118 = v176;
          *(_OWORD *)(v116 + 88) = v175;
          *(_OWORD *)(v116 + 104) = v118;
          long long v119 = v178;
          *(_OWORD *)(v116 + 120) = v177;
          *(_OWORD *)(v116 + 136) = v119;
          long long v120 = v172;
          *(_OWORD *)(v116 + 24) = v171;
          *(_OWORD *)(v116 + 40) = v120;
          long long v121 = v174;
          *(_OWORD *)(v116 + 56) = v173;
          long long v122 = v142;
          *(void *)(v116 + 16) = v142;
          uint64_t v123 = v182;
          *(_OWORD *)(v116 + 72) = v121;
          *(void *)(v116 + 200) = v123;
          *(void *)(v116 + 208) = sub_1DCF606A8;
          *(void *)(v116 + 216) = v114;
          long long v137 = v131;
          sub_1DCD433F0((uint64_t)&v171);
          swift_retain();
          swift_retain();
          sub_1DCE5A130(&v159, (uint64_t)v134, v122, v115, v104, (uint64_t)sub_1DCF606B4, v116);
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        sub_1DCD43B94((uint64_t)&v171);
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_31;
    }
    sub_1DCEA3DA4();
    uint64_t v49 = type metadata accessor for VisualSearchResultInternal(0);
    uint64_t v50 = v137;
    id v51 = &v137[*(int *)(v49 + 24)];
    uint64_t v52 = sub_1DD047488();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
    uint64_t v53 = (char *)v50 + *(int *)(v49 + 28);
    uint64_t v54 = sub_1DD0477D8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
    long long v55 = v192;
    v50[8] = v191;
    v50[9] = v55;
    v50[10] = v193;
    uint64_t v56 = v194;
    long long v57 = v188;
    v50[4] = v187;
    v50[5] = v57;
    long long v58 = v190;
    v50[6] = v189;
    v50[7] = v58;
    long long v59 = v184;
    *uint64_t v50 = v183;
    v50[1] = v59;
    long long v60 = v186;
    v50[2] = v185;
    v50[3] = v60;
    uint64_t v61 = MEMORY[0x1E4FBC860];
    *((void *)v50 + 22) = v56;
    *((void *)v50 + 23) = v61;
    swift_storeEnumTagMultiPayload();
    sub_1DCD433F0((uint64_t)&v183);
    sub_1DCF585D0((uint64_t)v50, v139, v140, a11, "search(): result.userFeedbackIntermediateResults = %s");
    sub_1DCD2479C((uint64_t)v50, (uint64_t *)&unk_1EAB03DC0);
LABEL_14:
    swift_release();
LABEL_31:
    swift_release();
    return sub_1DCD43B94(a11);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF60610()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1DCF60670(uint64_t a1)
{
  return sub_1DCF5B654(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(char **)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(void *))(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1DCF606A8(uint64_t a1, uint64_t a2)
{
  return sub_1DCF8AB44(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1DCF606B4(uint64_t a1, uint64_t a2)
{
  return sub_1DCF8AC2C(a1, a2, v2[2], v2 + 3, v2[26], v2[27]);
}

uint64_t sub_1DCF606CC()
{
  return sub_1DCF60994((uint64_t (*)(void, uint64_t, uint64_t, void, uint64_t, void, void, void, void))sub_1DCF580D8);
}

uint64_t objectdestroy_69Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  int v2 = *(_DWORD *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);

  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + 256 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + 256 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  uint64_t v9 = v0 + 256 + v1[9];
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }
  unint64_t v11 = (((v3 + 263) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 & 0xF8 | 7);
}

uint64_t sub_1DCF6097C()
{
  return sub_1DCF60994((uint64_t (*)(void, uint64_t, uint64_t, void, uint64_t, void, void, void, void))sub_1DCF57DEC);
}

uint64_t sub_1DCF60994(uint64_t (*a1)(void, uint64_t, uint64_t, void, uint64_t, void, void, void, void))
{
  unint64_t v3 = (*(void *)(*(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8) + 64) + 263) & 0xFFFFFFFFFFFFFFF8;
  return a1(*(void *)(v1 + 16), v1 + 24, v1 + 208, *(void *)(v1 + 248), v1 + 256, *(void *)(v1 + v3), *(void *)(v1 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DCF60A20()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = (v2 + 216) & ~v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  uint64_t v9 = v0 + v3 + v1[9];
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }
  unint64_t v11 = (((v13 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1DCF60CD8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCF59B78(*(void *)(v0 + 16), v0 + 24, *(void **)(v0 + 208), v0 + v2, *(void *)(v0 + v3), *(void **)(v0 + v4), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DCF60D98()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v14 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v14 + 32) & ~v14;
  unint64_t v3 = (((*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v2 + v1[7];
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v4 + v1[8];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7(v8 + *(int *)(v9 + 28), v6);
  }
  unint64_t v10 = (((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v4 + v1[9];
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12)) {
    v7(v11 + *(int *)(v12 + 20), v6);
  }
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v10 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v10 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v10 + 184, v14 | 7);
}

uint64_t sub_1DCF61074(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCF59E64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(void *)(v1 + v5), *(unsigned char **)(v1 + v6), *(void *)(v1 + v7), *(uint64_t (**)(uint64_t))(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1DCF61148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8, uint64_t a9)
{
  long long v44 = a7;
  uint64_t v45 = a8;
  uint64_t v43 = a6;
  uint64_t v46 = a1;
  uint64_t v41 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCEA3DA4();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v40 = a9;
    uint64_t v20 = (long long *)(a4 + 16);
    if (a5)
    {
      swift_beginAccess();
      uint64_t v21 = *(void *)(a5 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    sub_1DCFDF94C(v21);
    swift_endAccess();
    sub_1DCD2889C(v46, (uint64_t)v14, &qword_1EAB043C8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v17 = *v14;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v22 = (uint64_t)v14;
      uint64_t v23 = v42;
      sub_1DCF5E93C(v22, v42, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
      uint64_t v24 = (uint64_t *)(v23 + *(int *)(v41 + 24));
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      swift_beginAccess();
      *(void *)(a4 + 144) = v26;
      *(void *)(a4 + 152) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      long long v27 = *(_OWORD *)(a4 + 160);
      long long v28 = *(_OWORD *)(a4 + 128);
      long long v56 = *(_OWORD *)(a4 + 144);
      long long v57 = v27;
      long long v29 = *(_OWORD *)(a4 + 160);
      long long v58 = *(_OWORD *)(a4 + 176);
      long long v30 = *(_OWORD *)(a4 + 96);
      long long v31 = *(_OWORD *)(a4 + 64);
      long long v52 = *(_OWORD *)(a4 + 80);
      long long v53 = v30;
      long long v32 = *(_OWORD *)(a4 + 96);
      long long v33 = *(_OWORD *)(a4 + 128);
      long long v54 = *(_OWORD *)(a4 + 112);
      long long v55 = v33;
      long long v34 = *(_OWORD *)(a4 + 32);
      v49[0] = *v20;
      v49[1] = v34;
      long long v35 = *(_OWORD *)(a4 + 64);
      long long v37 = *v20;
      long long v36 = *(_OWORD *)(a4 + 32);
      long long v50 = *(_OWORD *)(a4 + 48);
      long long v51 = v35;
      long long v38 = *(_OWORD *)(a4 + 176);
      v47[9] = v29;
      v47[10] = v38;
      v47[4] = v52;
      v47[5] = v32;
      v47[6] = v54;
      v47[7] = v28;
      v47[8] = v56;
      v47[0] = v37;
      v47[1] = v36;
      uint64_t v59 = *(void *)(a4 + 192);
      uint64_t v48 = *(void *)(a4 + 192);
      v47[2] = v50;
      v47[3] = v31;
      uint64_t v39 = *(void *)(v19 + 64);
      sub_1DCD433F0((uint64_t)v49);
      sub_1DCEE6970(v23, v47, v39, (uint64_t)v17);
      sub_1DCD43B94((uint64_t)v49);
      sub_1DCF5E9A4(v23, (uint64_t (*)(void))type metadata accessor for ServerSearchResult);
    }
    sub_1DCF585D0((uint64_t)v17, v44, v45, v40, "search(): result.userFeedbackIntermediateResults = %s");
    swift_release();
    return sub_1DCD2479C((uint64_t)v17, (uint64_t *)&unk_1EAB03DC0);
  }
  return result;
}

uint64_t sub_1DCF614D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v139 = a7;
  uint64_t v105 = a6;
  uint64_t v106 = (void *)a2;
  long long v111 = a5;
  uint64_t v112 = a4;
  uint64_t v100 = a3;
  uint64_t v110 = a10;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v98);
  uint64_t v99 = (uint64_t *)((char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1DD048068();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v102 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v101 = (uint64_t)&v96 - v16;
  id v107 = (id)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v107);
  uint64_t v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DD048208();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = swift_allocObject();
  os_log_type_t v108 = a8;
  *(void *)(v23 + 16) = a8;
  *(void *)(v23 + 24) = a9;
  uint64_t v24 = v110;
  long long v25 = *(_OWORD *)(v110 + 144);
  *(_OWORD *)(v23 + 160) = *(_OWORD *)(v110 + 128);
  *(_OWORD *)(v23 + 176) = v25;
  *(_OWORD *)(v23 + 192) = *(_OWORD *)(v24 + 160);
  *(void *)(v23 + 208) = *(void *)(v24 + 176);
  long long v26 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v23 + 112) = v26;
  long long v27 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v23 + 128) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v23 + 144) = v27;
  long long v28 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 48) = v28;
  long long v29 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 80) = v29;
  long long v30 = *(_OWORD *)(a1 + 144);
  long long v135 = *(_OWORD *)(a1 + 128);
  long long v136 = v30;
  long long v137 = *(_OWORD *)(a1 + 160);
  uint64_t v138 = *(void *)(a1 + 176);
  long long v31 = *(_OWORD *)(a1 + 80);
  long long v131 = *(_OWORD *)(a1 + 64);
  long long v132 = v31;
  long long v32 = *(_OWORD *)(a1 + 112);
  long long v133 = *(_OWORD *)(a1 + 96);
  long long v134 = v32;
  long long v33 = *(_OWORD *)(a1 + 16);
  long long v127 = *(_OWORD *)a1;
  long long v128 = v33;
  long long v34 = *(_OWORD *)(a1 + 48);
  long long v129 = *(_OWORD *)(a1 + 32);
  long long v130 = v34;
  long long v35 = *(void **)(v139 + 56);
  *uint64_t v22 = v35;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E4FBCBF0], v19);
  swift_retain();
  sub_1DCD433F0(v24);
  uint64_t v109 = a9;
  swift_retain();
  sub_1DCD433F0(v24);
  id v36 = v35;
  LOBYTE(v35) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if (v35)
  {
    long long v123 = v135;
    long long v124 = v136;
    long long v125 = v137;
    uint64_t v126 = v138;
    long long v119 = v131;
    long long v120 = v132;
    long long v121 = v133;
    long long v122 = v134;
    long long v115 = v127;
    long long v116 = v128;
    long long v117 = v129;
    long long v118 = v130;
    uint64_t v38 = *(void *)(sub_1DCF22DA4() + 16);
    swift_bridgeObjectRelease();
    if (v38)
    {
      uint64_t v96 = *(void *)(v139 + 24);
      swift_retain();
      sub_1DD047938();
      swift_release();
      uint64_t v39 = swift_allocObject();
      long long v40 = v136;
      *(_OWORD *)(v39 + 144) = v135;
      *(_OWORD *)(v39 + 160) = v40;
      *(_OWORD *)(v39 + 176) = v137;
      *(void *)(v39 + 192) = v138;
      long long v41 = v132;
      *(_OWORD *)(v39 + 80) = v131;
      *(_OWORD *)(v39 + 96) = v41;
      long long v42 = v134;
      *(_OWORD *)(v39 + 112) = v133;
      *(_OWORD *)(v39 + 128) = v42;
      long long v43 = v128;
      *(_OWORD *)(v39 + 16) = v127;
      *(_OWORD *)(v39 + 32) = v43;
      long long v44 = v130;
      uint64_t v45 = v111;
      uint64_t v46 = (os_unfair_lock_s *)(*(void *)&v111[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
      *(_OWORD *)(v39 + 48) = v129;
      *(_OWORD *)(v39 + 64) = v44;
      sub_1DCD433F0((uint64_t)&v127);
      os_unfair_lock_lock(v46);
      uint64_t v97 = OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled;
      char v47 = v45[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
      os_unfair_lock_unlock(v46);
      if (v47)
      {
        uint64_t v48 = v101;
        sub_1DCDB40EC(v101);
        uint64_t v49 = sub_1DD048048();
        os_log_type_t v50 = sub_1DD048848();
        if (os_log_type_enabled(v49, v50))
        {
          long long v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v51 = 0;
          _os_log_impl(&dword_1DCCF9000, v49, v50, "performSearchForCamera(): canceled", v51, 2u);
          MEMORY[0x1E01B07E0](v51, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v48, v104);
        sub_1DCE6A230();
        uint64_t v52 = swift_allocError();
        *long long v53 = 0;
        *(void *)uint64_t v18 = v52;
        swift_storeEnumTagMultiPayload();
        sub_1DCF585D0((uint64_t)v18, v108, v109, v24, "search(): result.userFeedbackIntermediateResults = %s");
        sub_1DCD2479C((uint64_t)v18, (uint64_t *)&unk_1EAB03DC0);
        swift_release();
        swift_release();
      }
      else
      {
        long long v66 = *(_OWORD *)(v39 + 160);
        long long v123 = *(_OWORD *)(v39 + 144);
        long long v124 = v66;
        long long v125 = *(_OWORD *)(v39 + 176);
        uint64_t v126 = *(void *)(v39 + 192);
        long long v67 = *(_OWORD *)(v39 + 96);
        long long v119 = *(_OWORD *)(v39 + 80);
        long long v120 = v67;
        long long v68 = *(_OWORD *)(v39 + 128);
        long long v121 = *(_OWORD *)(v39 + 112);
        long long v122 = v68;
        long long v69 = *(_OWORD *)(v39 + 32);
        long long v115 = *(_OWORD *)(v39 + 16);
        long long v116 = v69;
        long long v70 = *(_OWORD *)(v39 + 64);
        long long v117 = *(_OWORD *)(v39 + 48);
        long long v118 = v70;
        uint64_t v71 = swift_allocObject();
        swift_weakInit();
        long long v72 = (void *)swift_allocObject();
        v72[2] = v112;
        v72[3] = v71;
        uint64_t v74 = v105;
        long long v73 = v106;
        v72[4] = v39;
        v72[5] = v74;
        v72[6] = v73;
        v72[7] = sub_1DCF62068;
        v72[8] = v23;
        id v75 = v73;
        swift_retain_n();
        swift_retain_n();
        uint64_t v139 = v71;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        id v107 = v75;
        sub_1DCD433F0((uint64_t)&v115);
        os_unfair_lock_lock(v46);
        char v76 = v111[v97];
        os_unfair_lock_unlock(v46);
        if (v76)
        {
          sub_1DCDB40EC(v102);
          long long v77 = sub_1DD048048();
          os_log_type_t v78 = sub_1DD048848();
          BOOL v79 = os_log_type_enabled(v77, v78);
          uint64_t v80 = v112;
          if (v79)
          {
            int v81 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int v81 = 0;
            _os_log_impl(&dword_1DCCF9000, v77, v78, "searchCamera(): canceled", v81, 2u);
            long long v82 = v81;
            uint64_t v80 = v112;
            MEMORY[0x1E01B07E0](v82, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v102, v104);
          sub_1DCE6A230();
          uint64_t v83 = swift_allocError();
          *os_log_type_t v84 = 0;
          uint64_t v85 = (uint64_t)v99;
          *uint64_t v99 = v83;
          swift_storeEnumTagMultiPayload();
          uint64_t v86 = v109;
          swift_retain();
          sub_1DCD433F0(v24);
          sub_1DCF61148(v85, v80, v139, v39, v74, (uint64_t)v106, v108, v86, v24);
          sub_1DCD43B94(v24);
          swift_release();
          sub_1DCD2479C(v85, &qword_1EAB043C8);
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v87 = swift_allocObject();
          *(void *)(v87 + 16) = sub_1DCF620F0;
          *(void *)(v87 + 24) = v72;
          v113[8] = v123;
          v113[9] = v124;
          v113[10] = v125;
          uint64_t v114 = v126;
          v113[4] = v119;
          v113[5] = v120;
          v113[6] = v121;
          v113[7] = v122;
          v113[0] = v115;
          v113[1] = v116;
          v113[2] = v117;
          v113[3] = v118;
          uint64_t v88 = swift_allocObject();
          long long v89 = v124;
          *(_OWORD *)(v88 + 152) = v123;
          *(_OWORD *)(v88 + 168) = v89;
          *(_OWORD *)(v88 + 184) = v125;
          long long v90 = v120;
          *(_OWORD *)(v88 + 88) = v119;
          *(_OWORD *)(v88 + 104) = v90;
          long long v91 = v122;
          *(_OWORD *)(v88 + 120) = v121;
          *(_OWORD *)(v88 + 136) = v91;
          long long v92 = v116;
          *(_OWORD *)(v88 + 24) = v115;
          *(_OWORD *)(v88 + 40) = v92;
          long long v93 = v118;
          *(_OWORD *)(v88 + 56) = v117;
          long long v94 = v106;
          *(void *)(v88 + 16) = v106;
          uint64_t v95 = v126;
          *(_OWORD *)(v88 + 72) = v93;
          *(void *)(v88 + 200) = v95;
          *(void *)(v88 + 208) = sub_1DCF606A8;
          *(void *)(v88 + 216) = v87;
          os_log_type_t v108 = (uint64_t (*)(uint64_t))v107;
          sub_1DCD433F0((uint64_t)&v115);
          swift_retain();
          swift_retain();
          sub_1DCE64D8C(v113, v100, v94, v111, v105, (uint64_t)sub_1DCF606B4, v88);
          swift_release();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        sub_1DCD43B94((uint64_t)&v115);
        swift_release();
        swift_release();
        swift_release();
      }
    }
    else
    {
      sub_1DCEA3DA4();
      uint64_t v54 = type metadata accessor for VisualSearchResultInternal(0);
      long long v55 = &v18[*(int *)(v54 + 24)];
      uint64_t v56 = sub_1DD047488();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
      long long v57 = &v18[*(int *)(v54 + 28)];
      uint64_t v58 = sub_1DD0477D8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
      long long v59 = v136;
      *((_OWORD *)v18 + 8) = v135;
      *((_OWORD *)v18 + 9) = v59;
      *((_OWORD *)v18 + 10) = v137;
      uint64_t v60 = v138;
      long long v61 = v132;
      *((_OWORD *)v18 + 4) = v131;
      *((_OWORD *)v18 + 5) = v61;
      long long v62 = v134;
      *((_OWORD *)v18 + 6) = v133;
      *((_OWORD *)v18 + 7) = v62;
      long long v63 = v128;
      *(_OWORD *)uint64_t v18 = v127;
      *((_OWORD *)v18 + 1) = v63;
      long long v64 = v130;
      *((_OWORD *)v18 + 2) = v129;
      *((_OWORD *)v18 + 3) = v64;
      uint64_t v65 = MEMORY[0x1E4FBC860];
      *((void *)v18 + 22) = v60;
      *((void *)v18 + 23) = v65;
      swift_storeEnumTagMultiPayload();
      sub_1DCD433F0((uint64_t)&v127);
      sub_1DCF585D0((uint64_t)v18, v108, v109, v24, "search(): result.userFeedbackIntermediateResults = %s");
      sub_1DCD2479C((uint64_t)v18, (uint64_t *)&unk_1EAB03DC0);
      swift_release();
    }
    swift_release();
    return sub_1DCD43B94(v24);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t objectdestroy_48Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 216, 7);
}

uint64_t sub_1DCF62068(uint64_t a1)
{
  return sub_1DCF585D0(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), v1 + 32, "search(): result.userFeedbackIntermediateResults = %s");
}

uint64_t sub_1DCF62090()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1DCF620F0(uint64_t a1)
{
  return sub_1DCF5A058(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(void *))(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1DCF62104()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_59Tm()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 224, 7);
}

uint64_t *sub_1DCF6220C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *a1 = *a2;
          *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
          uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
          goto LABEL_13;
        case 2u:
          uint64_t v144 = v8;
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
          uint64_t v17 = *(int *)(v16 + 24);
          long long v134 = (char *)a1 + v17;
          uint64_t v18 = (char *)a2 + v17;
          uint64_t v19 = sub_1DD047BF8();
          uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v127 = v19;
          v20(v134, v18, v19);
          uint64_t v21 = *(int *)(v16 + 28);
          uint64_t v22 = (uint64_t *)((char *)a1 + v21);
          uint64_t v23 = (char *)a2 + v21;
          uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v25 = *(void *)(v24 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
          {
            size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
            long long v27 = v22;
            goto LABEL_35;
          }
          uint64_t v81 = *((void *)v23 + 1);
          *uint64_t v22 = *(void *)v23;
          v22[1] = v81;
          *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
          *((_WORD *)v22 + 10) = *((_WORD *)v23 + 10);
          uint64_t v82 = *(int *)(v24 + 32);
          uint64_t v83 = (char *)v22 + v82;
          os_log_type_t v84 = &v23[v82];
          swift_bridgeObjectRetain();
          v20(v83, v84, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
          break;
        case 3u:
          uint64_t v28 = a2[1];
          *a1 = *a2;
          a1[1] = v28;
          uint64_t v29 = a2[3];
          a1[2] = a2[2];
          a1[3] = v29;
          *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
          uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
          long long v128 = (char *)a2 + v30;
          long long v135 = (char *)a1 + v30;
          uint64_t v31 = sub_1DD047BF8();
          long long v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v122(v135, v128, v31);
          goto LABEL_38;
        case 4u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
          goto LABEL_13;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
LABEL_13:
          long long v142 = (char *)a1 + v15;
          uint64_t v145 = v8;
          long long v32 = (char *)a2 + v15;
          uint64_t v33 = sub_1DD047BF8();
          long long v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          long long v35 = v32;
          uint64_t v8 = v145;
          v34(v142, v35, v33);
          goto LABEL_38;
        case 6u:
          uint64_t v144 = v8;
          *a1 = *a2;
          *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
          uint64_t v36 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
          uint64_t v37 = *(int *)(v36 + 24);
          long long v136 = (char *)a1 + v37;
          uint64_t v38 = (char *)a2 + v37;
          uint64_t v39 = sub_1DD047BF8();
          long long v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          long long v41 = v136;
          uint64_t v137 = v39;
          long long v121 = v40;
          v40(v41, v38, v39);
          uint64_t v129 = v36;
          uint64_t v42 = *(int *)(v36 + 28);
          long long v43 = (uint64_t *)((char *)a1 + v42);
          long long v44 = (uint64_t *)((char *)a2 + v42);
          uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v46 = *(void *)(v45 - 8);
          long long v123 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v46 + 48);
          uint64_t v119 = v46;
          if (v123(v44, 1, v45))
          {
            uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
            uint64_t v48 = v137;
          }
          else
          {
            uint64_t v85 = v44[1];
            void *v43 = *v44;
            v43[1] = v85;
            *((_DWORD *)v43 + 4) = *((_DWORD *)v44 + 4);
            *((_WORD *)v43 + 10) = *((_WORD *)v44 + 10);
            uint64_t v86 = *(int *)(v45 + 32);
            long long v117 = (char *)v43 + v86;
            uint64_t v87 = (char *)v44 + v86;
            swift_bridgeObjectRetain();
            uint64_t v88 = v87;
            uint64_t v48 = v137;
            v40(v117, v88, v137);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          }
          uint64_t v89 = *(int *)(v129 + 32);
          goto LABEL_29;
        case 7u:
          uint64_t v144 = v8;
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
          uint64_t v50 = *(int *)(v49 + 28);
          uint64_t v138 = (char *)a1 + v50;
          long long v51 = (char *)a2 + v50;
          uint64_t v52 = sub_1DD047BF8();
          long long v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v54 = v138;
          uint64_t v139 = v52;
          long long v121 = v53;
          v53(v54, v51, v52);
          uint64_t v130 = v49;
          uint64_t v55 = *(int *)(v49 + 32);
          uint64_t v56 = (uint64_t *)((char *)a1 + v55);
          long long v57 = (uint64_t *)((char *)a2 + v55);
          uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v58 = *(void *)(v45 - 8);
          long long v123 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v58 + 48);
          uint64_t v119 = v58;
          if (v123(v57, 1, v45))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
            uint64_t v48 = v139;
          }
          else
          {
            uint64_t v90 = v57[1];
            void *v56 = *v57;
            v56[1] = v90;
            *((_DWORD *)v56 + 4) = *((_DWORD *)v57 + 4);
            *((_WORD *)v56 + 10) = *((_WORD *)v57 + 10);
            uint64_t v91 = *(int *)(v45 + 32);
            long long v118 = (char *)v56 + v91;
            long long v92 = (char *)v57 + v91;
            swift_bridgeObjectRetain();
            long long v93 = v92;
            uint64_t v48 = v139;
            v53(v118, v93, v139);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v56, 0, 1, v45);
          }
          uint64_t v89 = *(int *)(v130 + 36);
LABEL_29:
          long long v94 = (uint64_t *)((char *)a1 + v89);
          uint64_t v95 = (char *)a2 + v89;
          if (v123((uint64_t *)((char *)a2 + v89), 1, v45))
          {
            size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
            long long v27 = v94;
            uint64_t v96 = v95;
            goto LABEL_36;
          }
          uint64_t v97 = *((void *)v95 + 1);
          *long long v94 = *(void *)v95;
          v94[1] = v97;
          *((_DWORD *)v94 + 4) = *((_DWORD *)v95 + 4);
          *((_WORD *)v94 + 10) = *((_WORD *)v95 + 10);
          uint64_t v98 = *(int *)(v45 + 32);
          uint64_t v99 = (char *)v94 + v98;
          uint64_t v100 = &v95[v98];
          swift_bridgeObjectRetain();
          v121(v99, v100, v48);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v94, 0, 1, v45);
          break;
        case 8u:
          uint64_t v144 = v8;
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
          a1[1] = a2[1];
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v60 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
          uint64_t v61 = *(int *)(v60 + 32);
          long long v62 = (char *)a1 + v61;
          long long v63 = (char *)a2 + v61;
          uint64_t v64 = sub_1DD047BF8();
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v131 = v64;
          v65(v62, v63, v64);
          uint64_t v140 = v60;
          uint64_t v66 = *(int *)(v60 + 36);
          long long v67 = (uint64_t *)((char *)a1 + v66);
          long long v68 = (uint64_t *)((char *)a2 + v66);
          uint64_t v69 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
          uint64_t v70 = *(void *)(v69 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
          {
            uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
            memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            long long v124 = v65;
            uint64_t v101 = *v68;
            unint64_t v120 = v68[1];
            sub_1DCD33F64(*v68, v120);
            *long long v67 = v101;
            uint64_t v65 = v124;
            v67[1] = v120;
            v67[2] = v68[2];
            *((_DWORD *)v67 + 6) = *((_DWORD *)v68 + 6);
            v124((char *)v67 + *(int *)(v69 + 32), (char *)v68 + *(int *)(v69 + 32), v131);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
          }
          uint64_t v102 = *(int *)(v140 + 40);
          uint64_t v103 = (uint64_t *)((char *)a1 + v102);
          uint64_t v23 = (char *)a2 + v102;
          uint64_t v104 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
          uint64_t v105 = *(void *)(v104 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v23, 1, v104))
          {
            size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
            long long v27 = v103;
LABEL_35:
            uint64_t v96 = v23;
LABEL_36:
            memcpy(v27, v96, v26);
          }
          else
          {
            *uint64_t v103 = *(void *)v23;
            uint64_t v114 = *(int *)(v104 + 20);
            long long v125 = v65;
            long long v115 = (char *)v103 + v114;
            long long v116 = &v23[v114];
            swift_bridgeObjectRetain();
            v125(v115, v116, v131);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v103, 0, 1, v104);
          }
          break;
        case 9u:
          uint64_t v72 = a2[1];
          *a1 = *a2;
          a1[1] = v72;
          a1[2] = a2[2];
          uint64_t v73 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
          long long v132 = (char *)a2 + v73;
          uint64_t v141 = (char *)a1 + v73;
          uint64_t v74 = sub_1DD047BF8();
          id v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v75(v141, v132, v74);
          goto LABEL_38;
        case 0xAu:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v76 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
          goto LABEL_23;
        case 0xBu:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v76 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_23:
          uint64_t v77 = *(int *)(v76 + 20);
          os_log_type_t v78 = (char *)a1 + v77;
          BOOL v79 = (char *)a2 + v77;
          uint64_t v80 = sub_1DD047BF8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
          goto LABEL_38;
        default:
          uint64_t v143 = v8;
          uint64_t v11 = a2[1];
          *a1 = *a2;
          a1[1] = v11;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v12 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                       + 32);
          uint64_t v126 = (char *)a2 + v12;
          long long v133 = (char *)a1 + v12;
          uint64_t v13 = sub_1DD047BF8();
          uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v8 = v143;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14(v133, v126, v13);
          goto LABEL_38;
      }
      uint64_t v8 = v144;
LABEL_38:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v106 = *(int *)(a3 + 20);
    uint64_t v107 = *(int *)(a3 + 24);
    os_log_type_t v108 = (char *)a1 + v106;
    uint64_t v109 = (char *)a2 + v106;
    *(void *)os_log_type_t v108 = *(void *)v109;
    v108[8] = v109[8];
    uint64_t v110 = (char *)a1 + v107;
    long long v111 = (char *)a2 + v107;
    uint64_t v112 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
  }
  return a1;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84D40);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84E90);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84E58);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84DA8);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84DF8);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84DD0);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84DC0);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86750);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86768);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86790);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86498);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86430);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86460);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE855B8);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86718);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB043D0);
}

uint64_t sub_1DCF63174(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                    + 32);
        goto LABEL_27;
      case 1u:
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        goto LABEL_27;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v7 = a1 + *(int *)(v6 + 24);
        uint64_t v8 = sub_1DD047BF8();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(v7, v8);
        uint64_t v10 = a1 + *(int *)(v6 + 28);
        uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          v9(v10 + *(int *)(v11 + 32), v8);
        }
        break;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        goto LABEL_27;
      case 4u:
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        goto LABEL_27;
      case 5u:
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        goto LABEL_27;
      case 6u:
        swift_bridgeObjectRelease();
        uint64_t v12 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v13 = a1 + v12[6];
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
        v15(v13, v14);
        uint64_t v16 = a1 + v12[7];
        uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
        if (!v18(v16, 1, v17))
        {
          swift_bridgeObjectRelease();
          v15(v16 + *(int *)(v17 + 32), v14);
        }
        uint64_t v19 = v12[8];
        goto LABEL_16;
      case 7u:
        swift_bridgeObjectRelease();
        uint64_t v20 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v21 = a1 + v20[7];
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
        v15(v21, v14);
        uint64_t v22 = a1 + v20[8];
        uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
        if (!v18(v22, 1, v17))
        {
          swift_bridgeObjectRelease();
          v15(v22 + *(int *)(v17 + 32), v14);
        }
        uint64_t v19 = v20[9];
LABEL_16:
        uint64_t v23 = a1 + v19;
        if (v18(a1 + v19, 1, v17)) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = *(int *)(v17 + 32);
        goto LABEL_22;
      case 8u:
        swift_bridgeObjectRelease();
        uint64_t v25 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v26 = a1 + v25[8];
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
        v15(v26, v14);
        uint64_t v27 = a1 + v25[9];
        uint64_t v28 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
        {
          sub_1DCD21954(*(void *)v27, *(void *)(v27 + 8));
          v15(v27 + *(int *)(v28 + 32), v14);
        }
        uint64_t v23 = a1 + v25[10];
        uint64_t v29 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29)) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = *(int *)(v29 + 20);
LABEL_22:
        v15(v23 + v24, v14);
        break;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        goto LABEL_27;
      case 0xAu:
        uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
        goto LABEL_26;
      case 0xBu:
        uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_26:
        uint64_t v5 = *(int *)(v30 + 20);
LABEL_27:
        uint64_t v31 = a1 + v5;
        uint64_t v32 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
        break;
      default:
        break;
    }
  }
  uint64_t v33 = a1 + *(int *)(a2 + 24);
  uint64_t v34 = sub_1DD047BF8();
  long long v35 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);
  return v35(v33, v34);
}

void *sub_1DCF6378C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        goto LABEL_11;
      case 2u:
        uint64_t v140 = v7;
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v15 = *(int *)(v14 + 24);
        uint64_t v130 = (char *)a1 + v15;
        uint64_t v16 = (char *)a2 + v15;
        uint64_t v17 = sub_1DD047BF8();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v123 = v17;
        v18(v130, v16, v17);
        uint64_t v19 = *(int *)(v14 + 28);
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v25 = v20;
          goto LABEL_33;
        }
        uint64_t v77 = *((void *)v21 + 1);
        *uint64_t v20 = *(void *)v21;
        v20[1] = v77;
        *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
        *((_WORD *)v20 + 10) = *((_WORD *)v21 + 10);
        uint64_t v78 = *(int *)(v22 + 32);
        BOOL v79 = (char *)v20 + v78;
        uint64_t v80 = &v21[v78];
        swift_bridgeObjectRetain();
        v18(v79, v80, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        break;
      case 3u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        uint64_t v27 = a2[3];
        a1[2] = a2[2];
        a1[3] = v27;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        uint64_t v28 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        long long v124 = (char *)a2 + v28;
        uint64_t v131 = (char *)a1 + v28;
        uint64_t v29 = sub_1DD047BF8();
        long long v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v118(v131, v124, v29);
        goto LABEL_36;
      case 4u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        goto LABEL_11;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
LABEL_11:
        uint64_t v138 = (char *)a1 + v13;
        uint64_t v141 = v7;
        uint64_t v30 = (char *)a2 + v13;
        uint64_t v31 = sub_1DD047BF8();
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v33 = v30;
        uint64_t v7 = v141;
        v32(v138, v33, v31);
        goto LABEL_36;
      case 6u:
        uint64_t v140 = v7;
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v35 = *(int *)(v34 + 24);
        long long v132 = (char *)a1 + v35;
        uint64_t v36 = (char *)a2 + v35;
        uint64_t v37 = sub_1DD047BF8();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v125 = v37;
        long long v117 = v38;
        v38(v132, v36, v37);
        uint64_t v133 = v34;
        uint64_t v39 = *(int *)(v34 + 28);
        long long v40 = (void *)((char *)a1 + v39);
        long long v41 = (void *)((char *)a2 + v39);
        uint64_t v42 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v119 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48);
        uint64_t v115 = v43;
        if (v119(v41, 1, v42))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
          uint64_t v45 = v125;
        }
        else
        {
          uint64_t v81 = v41[1];
          *long long v40 = *v41;
          v40[1] = v81;
          *((_DWORD *)v40 + 4) = *((_DWORD *)v41 + 4);
          *((_WORD *)v40 + 10) = *((_WORD *)v41 + 10);
          uint64_t v82 = *(int *)(v42 + 32);
          uint64_t v113 = (char *)v40 + v82;
          uint64_t v83 = (char *)v41 + v82;
          swift_bridgeObjectRetain();
          os_log_type_t v84 = v83;
          uint64_t v45 = v125;
          v38(v113, v84, v125);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        uint64_t v85 = *(int *)(v133 + 32);
        goto LABEL_27;
      case 7u:
        uint64_t v140 = v7;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v46 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v47 = *(int *)(v46 + 28);
        long long v134 = (char *)a1 + v47;
        uint64_t v48 = (char *)a2 + v47;
        uint64_t v49 = sub_1DD047BF8();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v126 = v49;
        long long v117 = v50;
        v50(v134, v48, v49);
        uint64_t v135 = v46;
        uint64_t v51 = *(int *)(v46 + 32);
        uint64_t v52 = (void *)((char *)a1 + v51);
        long long v53 = (void *)((char *)a2 + v51);
        uint64_t v42 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v54 = *(void *)(v42 - 8);
        uint64_t v119 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v115 = v54;
        if (v119(v53, 1, v42))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
          uint64_t v45 = v126;
        }
        else
        {
          uint64_t v86 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v86;
          *((_DWORD *)v52 + 4) = *((_DWORD *)v53 + 4);
          *((_WORD *)v52 + 10) = *((_WORD *)v53 + 10);
          uint64_t v87 = *(int *)(v42 + 32);
          uint64_t v114 = (char *)v52 + v87;
          uint64_t v88 = (char *)v53 + v87;
          swift_bridgeObjectRetain();
          uint64_t v89 = v88;
          uint64_t v45 = v126;
          v50(v114, v89, v126);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v42);
        }
        uint64_t v85 = *(int *)(v135 + 36);
LABEL_27:
        uint64_t v90 = (void *)((char *)a1 + v85);
        uint64_t v91 = (char *)a2 + v85;
        if (v119((void *)((char *)a2 + v85), 1, v42))
        {
          size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v25 = v90;
          long long v92 = v91;
          goto LABEL_34;
        }
        uint64_t v93 = *((void *)v91 + 1);
        *uint64_t v90 = *(void *)v91;
        v90[1] = v93;
        *((_DWORD *)v90 + 4) = *((_DWORD *)v91 + 4);
        *((_WORD *)v90 + 10) = *((_WORD *)v91 + 10);
        uint64_t v94 = *(int *)(v42 + 32);
        uint64_t v95 = (char *)v90 + v94;
        uint64_t v96 = &v91[v94];
        swift_bridgeObjectRetain();
        v117(v95, v96, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v90, 0, 1, v42);
        break;
      case 8u:
        uint64_t v140 = v7;
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v56 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v57 = *(int *)(v56 + 32);
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = sub_1DD047BF8();
        uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v127 = v60;
        v61(v58, v59, v60);
        uint64_t v136 = v56;
        uint64_t v62 = *(int *)(v56 + 36);
        long long v63 = (void *)((char *)a1 + v62);
        uint64_t v64 = (void *)((char *)a2 + v62);
        uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v66 = *(void *)(v65 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          unint64_t v120 = v61;
          uint64_t v97 = *v64;
          unint64_t v116 = v64[1];
          sub_1DCD33F64(*v64, v116);
          *long long v63 = v97;
          uint64_t v61 = v120;
          v63[1] = v116;
          v63[2] = v64[2];
          *((_DWORD *)v63 + 6) = *((_DWORD *)v64 + 6);
          v120((char *)v63 + *(int *)(v65 + 32), (char *)v64 + *(int *)(v65 + 32), v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
        }
        uint64_t v98 = *(int *)(v136 + 40);
        uint64_t v99 = (void *)((char *)a1 + v98);
        uint64_t v21 = (char *)a2 + v98;
        uint64_t v100 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v101 = *(void *)(v100 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v21, 1, v100))
        {
          size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
          uint64_t v25 = v99;
LABEL_33:
          long long v92 = v21;
LABEL_34:
          memcpy(v25, v92, v24);
        }
        else
        {
          *uint64_t v99 = *(void *)v21;
          uint64_t v110 = *(int *)(v100 + 20);
          long long v121 = v61;
          long long v111 = (char *)v99 + v110;
          uint64_t v112 = &v21[v110];
          swift_bridgeObjectRetain();
          v121(v111, v112, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v99, 0, 1, v100);
        }
        break;
      case 9u:
        uint64_t v68 = a2[1];
        *a1 = *a2;
        a1[1] = v68;
        a1[2] = a2[2];
        uint64_t v69 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        long long v128 = (char *)a2 + v69;
        uint64_t v137 = (char *)a1 + v69;
        uint64_t v70 = sub_1DD047BF8();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v71(v137, v128, v70);
        goto LABEL_36;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
        goto LABEL_21;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_21:
        uint64_t v73 = *(int *)(v72 + 20);
        uint64_t v74 = (char *)a1 + v73;
        id v75 = (char *)a2 + v73;
        uint64_t v76 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
        goto LABEL_36;
      default:
        uint64_t v139 = v7;
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                     + 32);
        long long v122 = (char *)a2 + v10;
        uint64_t v129 = (char *)a1 + v10;
        uint64_t v11 = sub_1DD047BF8();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v7 = v139;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12(v129, v122, v11);
        goto LABEL_36;
    }
    uint64_t v7 = v140;
LABEL_36:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v102 = *(int *)(a3 + 20);
  uint64_t v103 = *(int *)(a3 + 24);
  uint64_t v104 = (char *)a1 + v102;
  uint64_t v105 = (char *)a2 + v102;
  *(void *)uint64_t v104 = *(void *)v105;
  v104[8] = v105[8];
  uint64_t v106 = (char *)a1 + v103;
  uint64_t v107 = (char *)a2 + v103;
  uint64_t v108 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
  return a1;
}

uint64_t sub_1DCF644A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
          uint64_t v21 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
          uint64_t v286 = a1 + v21;
          uint64_t v22 = a2 + v21;
          uint64_t v23 = sub_1DD047BF8();
          size_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v286, v22, v23);
          break;
        case 2u:
          uint64_t v287 = a3;
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
          uint64_t v26 = *(int *)(v25 + 24);
          uint64_t v271 = a1 + v26;
          uint64_t v27 = a2 + v26;
          uint64_t v28 = sub_1DD047BF8();
          uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v261 = v28;
          v29(v271, v27, v28);
          uint64_t v30 = *(int *)(v25 + 28);
          uint64_t v31 = (void *)(a1 + v30);
          uint64_t v32 = (void *)(a2 + v30);
          uint64_t v33 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v34 = *(void *)(v33 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            *uint64_t v31 = *v32;
            v31[1] = v32[1];
            *((_DWORD *)v31 + 4) = *((_DWORD *)v32 + 4);
            *((unsigned char *)v31 + 20) = *((unsigned char *)v32 + 20);
            *((unsigned char *)v31 + 21) = *((unsigned char *)v32 + 21);
            uint64_t v170 = *(int *)(v33 + 32);
            long long v171 = (char *)v31 + v170;
            long long v172 = (char *)v32 + v170;
            swift_bridgeObjectRetain();
            v29((uint64_t)v171, (uint64_t)v172, v261);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
          }
          a3 = v287;
          break;
        case 3u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
          uint64_t v36 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
          uint64_t v262 = a2 + v36;
          uint64_t v272 = a1 + v36;
          uint64_t v37 = sub_1DD047BF8();
          v255 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v255(v272, v262, v37);
          break;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v38 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
          uint64_t v288 = a1 + v38;
          uint64_t v39 = a2 + v38;
          uint64_t v40 = sub_1DD047BF8();
          long long v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          v41(v288, v39, v40);
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v42 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
          uint64_t v289 = a1 + v42;
          uint64_t v43 = a2 + v42;
          uint64_t v44 = sub_1DD047BF8();
          uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v45(v289, v43, v44);
          break;
        case 6u:
          uint64_t v290 = a3;
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          uint64_t v46 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
          uint64_t v47 = *(int *)(v46 + 24);
          uint64_t v273 = a1 + v47;
          uint64_t v48 = a2 + v47;
          uint64_t v49 = sub_1DD047BF8();
          uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v273, v48, v49);
          uint64_t v51 = v50;
          uint64_t v274 = v46;
          uint64_t v52 = *(int *)(v46 + 28);
          long long v53 = (void *)(a1 + v52);
          uint64_t v54 = (void *)(a2 + v52);
          uint64_t v55 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v56 = *(void *)(v55 - 8);
          v253 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48);
          uint64_t v246 = v56;
          v250 = (void (*)(char *, char *, uint64_t))v51;
          if (v253(v54, 1, v55))
          {
            uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
            uint64_t v58 = v49;
          }
          else
          {
            *long long v53 = *v54;
            v53[1] = v54[1];
            *((_DWORD *)v53 + 4) = *((_DWORD *)v54 + 4);
            *((unsigned char *)v53 + 20) = *((unsigned char *)v54 + 20);
            *((unsigned char *)v53 + 21) = *((unsigned char *)v54 + 21);
            uint64_t v173 = *(int *)(v55 + 32);
            v244 = (char *)v53 + v173;
            long long v174 = (char *)v54 + v173;
            swift_bridgeObjectRetain();
            long long v175 = v174;
            uint64_t v58 = v49;
            v51((uint64_t)v244, (uint64_t)v175, v49);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
          }
          uint64_t v176 = *(int *)(v274 + 32);
          long long v177 = (void *)(a1 + v176);
          long long v178 = (void *)(a2 + v176);
          if (v253((void *)(a2 + v176), 1, v55))
          {
            uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
          }
          else
          {
            *long long v177 = *v178;
            v177[1] = v178[1];
            *((_DWORD *)v177 + 4) = *((_DWORD *)v178 + 4);
            *((unsigned char *)v177 + 20) = *((unsigned char *)v178 + 20);
            *((unsigned char *)v177 + 21) = *((unsigned char *)v178 + 21);
            uint64_t v195 = *(int *)(v55 + 32);
            uint64_t v196 = v58;
            v197 = (char *)v177 + v195;
            v198 = (char *)v178 + v195;
            swift_bridgeObjectRetain();
            v250(v197, v198, v196);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v177, 0, 1, v55);
          }
          a3 = v290;
          break;
        case 7u:
          uint64_t v291 = a3;
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
          uint64_t v59 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
          uint64_t v60 = *(int *)(v59 + 28);
          uint64_t v275 = a1 + v60;
          uint64_t v61 = a2 + v60;
          uint64_t v62 = sub_1DD047BF8();
          long long v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v63(v275, v61, v62);
          uint64_t v64 = v63;
          uint64_t v276 = v59;
          uint64_t v65 = *(int *)(v59 + 32);
          uint64_t v66 = (void *)(a1 + v65);
          uint64_t v67 = (void *)(a2 + v65);
          uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v69 = *(void *)(v68 - 8);
          v254 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v69 + 48);
          uint64_t v247 = v69;
          v251 = (void (*)(char *, char *, uint64_t))v64;
          if (v254(v67, 1, v68))
          {
            uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
            uint64_t v71 = v62;
          }
          else
          {
            *uint64_t v66 = *v67;
            v66[1] = v67[1];
            *((_DWORD *)v66 + 4) = *((_DWORD *)v67 + 4);
            *((unsigned char *)v66 + 20) = *((unsigned char *)v67 + 20);
            *((unsigned char *)v66 + 21) = *((unsigned char *)v67 + 21);
            uint64_t v180 = *(int *)(v68 + 32);
            v245 = (char *)v66 + v180;
            long long v181 = (char *)v67 + v180;
            swift_bridgeObjectRetain();
            uint64_t v182 = v181;
            uint64_t v71 = v62;
            v64((uint64_t)v245, (uint64_t)v182, v62);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
          }
          uint64_t v183 = *(int *)(v276 + 36);
          long long v184 = (void *)(a1 + v183);
          long long v185 = (void *)(a2 + v183);
          if (v254((void *)(a2 + v183), 1, v68))
          {
            uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
          }
          else
          {
            *long long v184 = *v185;
            v184[1] = v185[1];
            *((_DWORD *)v184 + 4) = *((_DWORD *)v185 + 4);
            *((unsigned char *)v184 + 20) = *((unsigned char *)v185 + 20);
            *((unsigned char *)v184 + 21) = *((unsigned char *)v185 + 21);
            uint64_t v199 = *(int *)(v68 + 32);
            uint64_t v200 = v71;
            v201 = (char *)v184 + v199;
            v202 = (char *)v185 + v199;
            swift_bridgeObjectRetain();
            v251(v201, v202, v200);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v247 + 56))(v184, 0, 1, v68);
          }
          a3 = v291;
          break;
        case 8u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
          uint64_t v73 = *(int *)(v72 + 32);
          v277 = (char *)(a2 + v73);
          v292 = (char *)(a1 + v73);
          uint64_t v74 = sub_1DD047BF8();
          id v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v256 = v75;
          uint64_t v263 = v74;
          v75(v292, v277, v74);
          uint64_t v278 = v72;
          uint64_t v76 = *(int *)(v72 + 36);
          uint64_t v77 = (void *)(a1 + v76);
          uint64_t v78 = (uint64_t *)(a2 + v76);
          uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
          uint64_t v80 = *(void *)(v79 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
          {
            uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
            memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            uint64_t v298 = a3;
            uint64_t v188 = *v78;
            unint64_t v187 = v78[1];
            sub_1DCD33F64(*v78, v187);
            void *v77 = v188;
            v77[1] = v187;
            a3 = v298;
            *((_DWORD *)v77 + 4) = *((_DWORD *)v78 + 4);
            *((_DWORD *)v77 + 5) = *((_DWORD *)v78 + 5);
            *((_DWORD *)v77 + 6) = *((_DWORD *)v78 + 6);
            v256((char *)v77 + *(int *)(v79 + 32), (char *)v78 + *(int *)(v79 + 32), v263);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
          }
          uint64_t v189 = *(int *)(v278 + 40);
          long long v190 = (void *)(a1 + v189);
          long long v191 = (void *)(a2 + v189);
          uint64_t v192 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
          uint64_t v193 = *(void *)(v192 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
          {
            uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
            memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            *long long v190 = *v191;
            uint64_t v203 = *(int *)(v192 + 20);
            v204 = (char *)v190 + v203;
            v205 = (char *)v191 + v203;
            swift_bridgeObjectRetain();
            v256(v204, v205, v263);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
          }
          break;
        case 9u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v82 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
          uint64_t v264 = a2 + v82;
          uint64_t v279 = a1 + v82;
          uint64_t v293 = a3;
          uint64_t v83 = sub_1DD047BF8();
          os_log_type_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v85 = v83;
          a3 = v293;
          v84(v279, v264, v85);
          break;
        case 0xAu:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v86 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
          uint64_t v87 = a1 + v86;
          uint64_t v88 = a2 + v86;
          uint64_t v89 = sub_1DD047BF8();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
          break;
        case 0xBu:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v90 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
          uint64_t v91 = a1 + v90;
          uint64_t v92 = a2 + v90;
          uint64_t v93 = sub_1DD047BF8();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
          break;
        default:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                       + 32);
          uint64_t v260 = a2 + v11;
          uint64_t v269 = a1 + v11;
          uint64_t v284 = a3;
          uint64_t v12 = sub_1DD047BF8();
          uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v14 = v12;
          a3 = v284;
          v13(v269, v260, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_58;
    }
LABEL_7:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_58;
  }
  if (v10)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
        uint64_t v94 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        uint64_t v95 = a1 + v94;
        uint64_t v96 = a2 + v94;
        uint64_t v97 = sub_1DD047BF8();
        uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v95, v96, v97);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v294 = a3;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v99 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v100 = *(int *)(v99 + 24);
        uint64_t v101 = a1 + v100;
        uint64_t v102 = a2 + v100;
        uint64_t v103 = sub_1DD047BF8();
        uint64_t v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v101, v102, v103);
        uint64_t v105 = *(int *)(v99 + 28);
        uint64_t v106 = (void *)(a1 + v105);
        uint64_t v107 = (void *)(a2 + v105);
        uint64_t v108 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v109 = *(void *)(v108 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
        {
          uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          *uint64_t v106 = *v107;
          v106[1] = v107[1];
          *((_DWORD *)v106 + 4) = *((_DWORD *)v107 + 4);
          *((unsigned char *)v106 + 20) = *((unsigned char *)v107 + 20);
          *((unsigned char *)v106 + 21) = *((unsigned char *)v107 + 21);
          uint64_t v215 = *(int *)(v108 + 32);
          v283 = (char *)v106 + v215;
          v216 = (char *)v107 + v215;
          swift_bridgeObjectRetain();
          v104((uint64_t)v283, (uint64_t)v216, v103);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
        }
        goto LABEL_70;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
        uint64_t v111 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        uint64_t v280 = a2 + v111;
        uint64_t v295 = a1 + v111;
        uint64_t v112 = sub_1DD047BF8();
        v265 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v265(v295, v280, v112);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v113 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        uint64_t v114 = a1 + v113;
        uint64_t v115 = a2 + v113;
        uint64_t v116 = sub_1DD047BF8();
        long long v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v117(v114, v115, v116);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v118 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        uint64_t v119 = a1 + v118;
        uint64_t v120 = a2 + v118;
        uint64_t v121 = sub_1DD047BF8();
        long long v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16);
        swift_bridgeObjectRetain();
        v122(v119, v120, v121);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v294 = a3;
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        uint64_t v123 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v124 = *(int *)(v123 + 24);
        uint64_t v125 = a1 + v124;
        uint64_t v126 = a2 + v124;
        uint64_t v127 = sub_1DD047BF8();
        long long v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16);
        swift_bridgeObjectRetain();
        v128(v125, v126, v127);
        uint64_t v266 = v123;
        uint64_t v129 = *(int *)(v123 + 28);
        uint64_t v130 = (void *)(a1 + v129);
        uint64_t v131 = (void *)(a2 + v129);
        uint64_t v132 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v133 = *(void *)(v132 - 8);
        v257 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v133 + 48);
        uint64_t v252 = v133;
        if (v257(v131, 1, v132))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
          uint64_t v135 = v128;
        }
        else
        {
          *uint64_t v130 = *v131;
          v130[1] = v131[1];
          *((_DWORD *)v130 + 4) = *((_DWORD *)v131 + 4);
          *((unsigned char *)v130 + 20) = *((unsigned char *)v131 + 20);
          *((unsigned char *)v130 + 21) = *((unsigned char *)v131 + 21);
          uint64_t v217 = *(int *)(v132 + 32);
          v248 = (char *)v130 + v217;
          v218 = (char *)v131 + v217;
          swift_bridgeObjectRetain();
          v219 = v218;
          uint64_t v135 = v128;
          v128((uint64_t)v248, (uint64_t)v219, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        uint64_t v220 = *(int *)(v266 + 32);
        v221 = (void *)(a1 + v220);
        v222 = (void *)(a2 + v220);
        if (v257((void *)(a2 + v220), 1, v132)) {
          goto LABEL_65;
        }
        goto LABEL_69;
      case 7u:
        uint64_t v294 = a3;
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        uint64_t v136 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v137 = *(int *)(v136 + 28);
        uint64_t v138 = a1 + v137;
        uint64_t v139 = a2 + v137;
        uint64_t v127 = sub_1DD047BF8();
        uint64_t v140 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16);
        swift_bridgeObjectRetain();
        v140(v138, v139, v127);
        uint64_t v267 = v136;
        uint64_t v141 = *(int *)(v136 + 32);
        long long v142 = (void *)(a1 + v141);
        uint64_t v143 = (void *)(a2 + v141);
        uint64_t v132 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v144 = *(void *)(v132 - 8);
        v258 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v144 + 48);
        uint64_t v252 = v144;
        if (v258(v143, 1, v132))
        {
          uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
          uint64_t v135 = v140;
        }
        else
        {
          *long long v142 = *v143;
          v142[1] = v143[1];
          *((_DWORD *)v142 + 4) = *((_DWORD *)v143 + 4);
          *((unsigned char *)v142 + 20) = *((unsigned char *)v143 + 20);
          *((unsigned char *)v142 + 21) = *((unsigned char *)v143 + 21);
          uint64_t v223 = *(int *)(v132 + 32);
          v249 = (char *)v142 + v223;
          v224 = (char *)v143 + v223;
          swift_bridgeObjectRetain();
          v225 = v224;
          uint64_t v135 = v140;
          v140((uint64_t)v249, (uint64_t)v225, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v142, 0, 1, v132);
        }
        uint64_t v226 = *(int *)(v267 + 36);
        v221 = (void *)(a1 + v226);
        v222 = (void *)(a2 + v226);
        if (v258((void *)(a2 + v226), 1, v132))
        {
LABEL_65:
          uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v221, v222, *(void *)(*(void *)(v227 - 8) + 64));
        }
        else
        {
LABEL_69:
          void *v221 = *v222;
          v221[1] = v222[1];
          *((_DWORD *)v221 + 4) = *((_DWORD *)v222 + 4);
          *((unsigned char *)v221 + 20) = *((unsigned char *)v222 + 20);
          *((unsigned char *)v221 + 21) = *((unsigned char *)v222 + 21);
          uint64_t v236 = *(int *)(v132 + 32);
          uint64_t v237 = v127;
          v238 = (void (*)(char *, char *, uint64_t))v135;
          v239 = (char *)v221 + v236;
          v240 = (char *)v222 + v236;
          swift_bridgeObjectRetain();
          v238(v239, v240, v237);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v252 + 56))(v221, 0, 1, v132);
        }
LABEL_70:
        a3 = v294;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v146 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v147 = *(int *)(v146 + 32);
        v296 = (char *)(a1 + v147);
        long long v148 = (char *)(a2 + v147);
        uint64_t v149 = sub_1DD047BF8();
        long long v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        v259 = v150;
        uint64_t v268 = v149;
        v150(v296, v148, v149);
        uint64_t v281 = v146;
        uint64_t v151 = *(int *)(v146 + 36);
        long long v152 = (void *)(a1 + v151);
        long long v153 = (uint64_t *)(a2 + v151);
        uint64_t v154 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v155 = *(void *)(v154 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v155 + 48))(v153, 1, v154))
        {
          uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          uint64_t v299 = a3;
          uint64_t v229 = *v153;
          unint64_t v228 = v153[1];
          sub_1DCD33F64(*v153, v228);
          *long long v152 = v229;
          v152[1] = v228;
          a3 = v299;
          *((_DWORD *)v152 + 4) = *((_DWORD *)v153 + 4);
          *((_DWORD *)v152 + 5) = *((_DWORD *)v153 + 5);
          *((_DWORD *)v152 + 6) = *((_DWORD *)v153 + 6);
          v150((char *)v152 + *(int *)(v154 + 32), (char *)v153 + *(int *)(v154 + 32), v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v155 + 56))(v152, 0, 1, v154);
        }
        uint64_t v230 = *(int *)(v281 + 40);
        v231 = (void *)(a1 + v230);
        v232 = (void *)(a2 + v230);
        uint64_t v233 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v234 = *(void *)(v233 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v234 + 48))(v232, 1, v233))
        {
          uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
          memcpy(v231, v232, *(void *)(*(void *)(v235 - 8) + 64));
        }
        else
        {
          void *v231 = *v232;
          uint64_t v241 = *(int *)(v233 + 20);
          v242 = (char *)v231 + v241;
          v243 = (char *)v232 + v241;
          swift_bridgeObjectRetain();
          v259(v242, v243, v268);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v157 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        uint64_t v282 = a2 + v157;
        uint64_t v297 = a1 + v157;
        uint64_t v158 = a3;
        uint64_t v159 = sub_1DD047BF8();
        long long v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v161 = v159;
        a3 = v158;
        v160(v297, v282, v161);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v162 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
        uint64_t v163 = a1 + v162;
        uint64_t v164 = a2 + v162;
        uint64_t v165 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v166 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
        uint64_t v167 = a1 + v166;
        uint64_t v168 = a2 + v166;
        uint64_t v169 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v16 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                     + 32);
        uint64_t v270 = a2 + v16;
        uint64_t v285 = a1 + v16;
        uint64_t v17 = a3;
        uint64_t v18 = sub_1DD047BF8();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v20 = v18;
        a3 = v17;
        v19(v285, v270, v20);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_58:
  uint64_t v206 = *(int *)(a3 + 20);
  uint64_t v207 = a1 + v206;
  v208 = (uint64_t *)(a2 + v206);
  uint64_t v209 = *v208;
  *(unsigned char *)(v207 + 8) = *((unsigned char *)v208 + 8);
  *(void *)uint64_t v207 = v209;
  uint64_t v210 = *(int *)(a3 + 24);
  uint64_t v211 = a1 + v210;
  uint64_t v212 = a2 + v210;
  uint64_t v213 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v213 - 8) + 24))(v211, v212, v213);
  return a1;
}

void *sub_1DCF66348(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        goto LABEL_21;
      case 2u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v11 = *(int *)(v10 + 24);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        v91(v12, v13, v14);
        uint64_t v15 = *(int *)(v10 + 28);
        uint64_t v16 = (_OWORD *)((char *)a1 + v15);
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v21 = v16;
          goto LABEL_33;
        }
        *uint64_t v16 = *(_OWORD *)v17;
        *((_DWORD *)v16 + 4) = *((_DWORD *)v17 + 4);
        *((_WORD *)v16 + 10) = *((_WORD *)v17 + 10);
        v91((char *)v16 + *(int *)(v18 + 32), &v17[*(int *)(v18 + 32)], v14);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        break;
      case 3u:
        long long v22 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v22;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        goto LABEL_21;
      case 4u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        goto LABEL_21;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        goto LABEL_21;
      case 6u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v24 = *(int *)(v23 + 24);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_1DD047BF8();
        uint64_t v28 = *(void (**)(char *, char *))(*(void *)(v27 - 8) + 32);
        uint64_t v88 = v27;
        v28(v25, v26);
        uint64_t v92 = v23;
        uint64_t v29 = *(int *)(v23 + 28);
        __dst = (_OWORD *)((char *)a1 + v29);
        uint64_t v30 = (_OWORD *)((char *)a2 + v29);
        uint64_t v31 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v87 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v32 + 48);
        uint64_t v82 = v32;
        uint64_t v83 = (void (*)(char *, char *, uint64_t))v28;
        if (v87(v30, 1, v31))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
          uint64_t v34 = v88;
        }
        else
        {
          _OWORD *__dst = *v30;
          *((_DWORD *)__dst + 4) = *((_DWORD *)v30 + 4);
          *((_WORD *)__dst + 10) = *((_WORD *)v30 + 10);
          uint64_t v61 = *(int *)(v31 + 32);
          uint64_t v62 = (char *)v30 + v61;
          uint64_t v34 = v88;
          ((void (*)(char *, char *, uint64_t))v28)((char *)__dst + v61, v62, v88);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
        }
        uint64_t v63 = v31;
        uint64_t v64 = *(int *)(v92 + 32);
        goto LABEL_27;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v36 = *(int *)(v35 + 28);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_1DD047BF8();
        uint64_t v40 = *(void (**)(char *, char *))(*(void *)(v39 - 8) + 32);
        uint64_t v89 = v39;
        v40(v37, v38);
        uint64_t v93 = v35;
        uint64_t v41 = *(int *)(v35 + 32);
        __dsta = (_OWORD *)((char *)a1 + v41);
        uint64_t v42 = (_OWORD *)((char *)a2 + v41);
        uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v44 = *(void *)(v43 - 8);
        uint64_t v87 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v44 + 48);
        uint64_t v82 = v44;
        uint64_t v83 = (void (*)(char *, char *, uint64_t))v40;
        if (v87(v42, 1, v43))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(__dsta, v42, *(void *)(*(void *)(v45 - 8) + 64));
          uint64_t v34 = v89;
        }
        else
        {
          _OWORD *__dsta = *v42;
          *((_DWORD *)__dsta + 4) = *((_DWORD *)v42 + 4);
          *((_WORD *)__dsta + 10) = *((_WORD *)v42 + 10);
          uint64_t v65 = *(int *)(v43 + 32);
          uint64_t v66 = (char *)v42 + v65;
          uint64_t v34 = v89;
          ((void (*)(char *, char *, uint64_t))v40)((char *)__dsta + v65, v66, v89);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v44 + 56))(__dsta, 0, 1, v43);
        }
        uint64_t v63 = v43;
        uint64_t v64 = *(int *)(v93 + 36);
LABEL_27:
        uint64_t v67 = (_OWORD *)((char *)a1 + v64);
        uint64_t v68 = (char *)a2 + v64;
        if (v87((void *)((char *)a2 + v64), 1, v63))
        {
          size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v21 = v67;
          uint64_t v69 = v68;
          goto LABEL_34;
        }
        *uint64_t v67 = *(_OWORD *)v68;
        *((_DWORD *)v67 + 4) = *((_DWORD *)v68 + 4);
        *((_WORD *)v67 + 10) = *((_WORD *)v68 + 10);
        v83((char *)v67 + *(int *)(v63 + 32), &v68[*(int *)(v63 + 32)], v34);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v82 + 56))(v67, 0, 1, v63);
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v46 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v47 = *(int *)(v46 + 32);
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_1DD047BF8();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32);
        v90(v48, v49, v50);
        uint64_t v94 = v46;
        uint64_t v51 = *(int *)(v46 + 36);
        uint64_t v52 = (_OWORD *)((char *)a1 + v51);
        long long v53 = (_OWORD *)((char *)a2 + v51);
        uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v55 = *(void *)(v54 - 8);
        __dstb = (void *)v50;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
        {
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          *uint64_t v52 = *v53;
          *((void *)v52 + 2) = *((void *)v53 + 2);
          *((_DWORD *)v52 + 6) = *((_DWORD *)v53 + 6);
          v90((char *)v52 + *(int *)(v54 + 32), (char *)v53 + *(int *)(v54 + 32), v50);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        uint64_t v70 = *(int *)(v94 + 40);
        uint64_t v71 = (void *)((char *)a1 + v70);
        uint64_t v17 = (char *)a2 + v70;
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v17, 1, v72))
        {
          size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
          uint64_t v21 = v71;
LABEL_33:
          uint64_t v69 = v17;
LABEL_34:
          memcpy(v21, v69, v20);
        }
        else
        {
          *uint64_t v71 = *(void *)v17;
          v90((char *)v71 + *(int *)(v72 + 20), &v17[*(int *)(v72 + 20)], (uint64_t)__dstb);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v71, 0, 1, v72);
        }
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        goto LABEL_21;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v57 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
        goto LABEL_20;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v57 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_20:
        uint64_t v9 = *(int *)(v57 + 20);
        goto LABEL_21;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                    + 32);
LABEL_21:
        uint64_t v58 = (char *)a1 + v9;
        uint64_t v59 = (char *)a2 + v9;
        uint64_t v60 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v74 = *(int *)(a3 + 20);
  uint64_t v75 = *(int *)(a3 + 24);
  uint64_t v76 = (char *)a1 + v74;
  uint64_t v77 = (char *)a2 + v74;
  *(void *)uint64_t v76 = *(void *)v77;
  v76[8] = v77[8];
  uint64_t v78 = (char *)a1 + v75;
  uint64_t v79 = (char *)a2 + v75;
  uint64_t v80 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
  return a1;
}

uint64_t sub_1DCF66E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
          goto LABEL_27;
        case 2u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
          uint64_t v18 = *(int *)(v17 + 24);
          uint64_t v19 = a1 + v18;
          uint64_t v20 = a2 + v18;
          uint64_t v21 = sub_1DD047BF8();
          uint64_t v196 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);
          v196(v19, v20, v21);
          uint64_t v22 = *(int *)(v17 + 28);
          uint64_t v23 = (_OWORD *)(a1 + v22);
          uint64_t v24 = (_OWORD *)(a2 + v22);
          uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v26 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
          {
            size_t v27 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
            uint64_t v28 = v23;
            uint64_t v29 = v24;
            goto LABEL_54;
          }
          *uint64_t v23 = *v24;
          *((_DWORD *)v23 + 4) = *((_DWORD *)v24 + 4);
          *((_WORD *)v23 + 10) = *((_WORD *)v24 + 10);
          v196((uint64_t)v23 + *(int *)(v25 + 32), (uint64_t)v24 + *(int *)(v25 + 32), v21);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          break;
        case 3u:
          long long v30 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_OWORD *)(a1 + 16) = v30;
          *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
          goto LABEL_27;
        case 4u:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
          goto LABEL_27;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
          goto LABEL_27;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
          uint64_t v31 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
          uint64_t v32 = *(int *)(v31 + 24);
          uint64_t v33 = a1 + v32;
          uint64_t v34 = a2 + v32;
          uint64_t v35 = sub_1DD047BF8();
          uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 32);
          uint64_t v193 = v35;
          v36(v33, v34);
          uint64_t v197 = v31;
          uint64_t v37 = *(int *)(v31 + 28);
          __dst = (_OWORD *)(a1 + v37);
          uint64_t v38 = (_OWORD *)(a2 + v37);
          uint64_t v39 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v40 = *(void *)(v39 - 8);
          uint64_t v189 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v40 + 48);
          uint64_t v183 = v40;
          long long v184 = (void (*)(char *, char *, uint64_t))v36;
          if (v189(v38, 1, v39))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(__dst, v38, *(void *)(*(void *)(v41 - 8) + 64));
            uint64_t v42 = v193;
          }
          else
          {
            _OWORD *__dst = *v38;
            *((_DWORD *)__dst + 4) = *((_DWORD *)v38 + 4);
            *((_WORD *)__dst + 10) = *((_WORD *)v38 + 10);
            uint64_t v147 = *(int *)(v39 + 32);
            long long v148 = (char *)v38 + v147;
            uint64_t v42 = v193;
            ((void (*)(char *, char *, uint64_t))v36)((char *)__dst + v147, v148, v193);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
          }
          uint64_t v149 = v39;
          uint64_t v150 = *(int *)(v197 + 32);
          goto LABEL_48;
        case 7u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
          uint64_t v44 = *(int *)(v43 + 28);
          uint64_t v45 = a1 + v44;
          uint64_t v46 = a2 + v44;
          uint64_t v47 = sub_1DD047BF8();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 32);
          uint64_t v194 = v47;
          v48(v45, v46);
          uint64_t v198 = v43;
          uint64_t v49 = *(int *)(v43 + 32);
          __dsta = (_OWORD *)(a1 + v49);
          uint64_t v50 = (_OWORD *)(a2 + v49);
          uint64_t v51 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          uint64_t v52 = *(void *)(v51 - 8);
          uint64_t v189 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v52 + 48);
          uint64_t v183 = v52;
          long long v184 = (void (*)(char *, char *, uint64_t))v48;
          if (v189(v50, 1, v51))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
            memcpy(__dsta, v50, *(void *)(*(void *)(v53 - 8) + 64));
            uint64_t v42 = v194;
          }
          else
          {
            _OWORD *__dsta = *v50;
            *((_DWORD *)__dsta + 4) = *((_DWORD *)v50 + 4);
            *((_WORD *)__dsta + 10) = *((_WORD *)v50 + 10);
            uint64_t v151 = *(int *)(v51 + 32);
            long long v152 = (char *)v50 + v151;
            uint64_t v42 = v194;
            ((void (*)(char *, char *, uint64_t))v48)((char *)__dsta + v151, v152, v194);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v52 + 56))(__dsta, 0, 1, v51);
          }
          uint64_t v149 = v51;
          uint64_t v150 = *(int *)(v198 + 36);
LABEL_48:
          long long v153 = (_OWORD *)(a1 + v150);
          uint64_t v154 = (_OWORD *)(a2 + v150);
          if (v189((_OWORD *)(a2 + v150), 1, v149))
          {
            size_t v27 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
            uint64_t v28 = v153;
            uint64_t v29 = v154;
            goto LABEL_54;
          }
          *long long v153 = *v154;
          *((_DWORD *)v153 + 4) = *((_DWORD *)v154 + 4);
          *((_WORD *)v153 + 10) = *((_WORD *)v154 + 10);
          v184((char *)v153 + *(int *)(v149 + 32), (char *)v154 + *(int *)(v149 + 32), v42);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v183 + 56))(v153, 0, 1, v149);
          break;
        case 8u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
          uint64_t v55 = *(int *)(v54 + 32);
          uint64_t v56 = a1 + v55;
          uint64_t v57 = a2 + v55;
          uint64_t v58 = sub_1DD047BF8();
          uint64_t v195 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32);
          v195(v56, v57, v58);
          uint64_t v199 = v54;
          uint64_t v59 = *(int *)(v54 + 36);
          uint64_t v60 = (_OWORD *)(a1 + v59);
          uint64_t v61 = (_OWORD *)(a2 + v59);
          uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
          uint64_t v63 = *(void *)(v62 - 8);
          __dstb = (void *)v58;
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          {
            uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
            memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            *uint64_t v60 = *v61;
            *((void *)v60 + 2) = *((void *)v61 + 2);
            *((_DWORD *)v60 + 6) = *((_DWORD *)v61 + 6);
            v195((uint64_t)v60 + *(int *)(v62 + 32), (uint64_t)v61 + *(int *)(v62 + 32), v58);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
          }
          uint64_t v155 = *(int *)(v199 + 40);
          uint64_t v156 = (void *)(a1 + v155);
          uint64_t v157 = (void *)(a2 + v155);
          uint64_t v158 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
          uint64_t v159 = *(void *)(v158 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
          {
            size_t v27 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
            uint64_t v28 = v156;
            uint64_t v29 = v157;
LABEL_54:
            memcpy(v28, v29, v27);
          }
          else
          {
            *uint64_t v156 = *v157;
            v195((uint64_t)v156 + *(int *)(v158 + 20), (uint64_t)v157 + *(int *)(v158 + 20), (uint64_t)__dstb);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
          }
          break;
        case 9u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
          goto LABEL_27;
        case 0xAu:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
          goto LABEL_26;
        case 0xBu:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_26:
          uint64_t v11 = *(int *)(v65 + 20);
          goto LABEL_27;
        default:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v11 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                       + 32);
LABEL_27:
          uint64_t v66 = a1 + v11;
          uint64_t v67 = a2 + v11;
          uint64_t v68 = sub_1DD047BF8();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_57;
    }
LABEL_7:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_57;
  }
  if (v10)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
        uint64_t v69 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        uint64_t v70 = a1 + v69;
        uint64_t v71 = a2 + v69;
        uint64_t v72 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v73 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v74 = *(int *)(v73 + 24);
        uint64_t v75 = a1 + v74;
        uint64_t v76 = a2 + v74;
        uint64_t v77 = sub_1DD047BF8();
        uint64_t v78 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 32);
        uint64_t v203 = *v78;
        (*v78)(v75, v76, v77);
        uint64_t v79 = *(int *)(v73 + 28);
        uint64_t v80 = (_OWORD *)(a1 + v79);
        uint64_t v81 = (_OWORD *)(a2 + v79);
        uint64_t v82 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v83 = *(void *)(v82 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        {
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          *uint64_t v80 = *v81;
          *((_DWORD *)v80 + 4) = *((_DWORD *)v81 + 4);
          *((_WORD *)v80 + 10) = *((_WORD *)v81 + 10);
          v203((uint64_t)v80 + *(int *)(v82 + 32), (uint64_t)v81 + *(int *)(v82 + 32), v77);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
        }
        goto LABEL_70;
      case 3u:
        long long v85 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v85;
        *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
        uint64_t v86 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        uint64_t v87 = a1 + v86;
        uint64_t v88 = a2 + v86;
        uint64_t v89 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v90 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        uint64_t v91 = a1 + v90;
        uint64_t v92 = a2 + v90;
        uint64_t v93 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v94 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        uint64_t v95 = a1 + v94;
        uint64_t v96 = a2 + v94;
        uint64_t v97 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        uint64_t v98 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v99 = v98[6];
        uint64_t v100 = a1 + v99;
        uint64_t v101 = a2 + v99;
        uint64_t v102 = sub_1DD047BF8();
        uint64_t v103 = (void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 32);
        uint64_t v200 = *v103;
        uint64_t v204 = v102;
        (*v103)(v100, v101);
        uint64_t v104 = v98[7];
        uint64_t v105 = (_OWORD *)(a1 + v104);
        uint64_t v106 = (_OWORD *)(a2 + v104);
        uint64_t v107 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v108 = *(void *)(v107 - 8);
        long long v190 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v108 + 48);
        uint64_t v185 = v108;
        if (v190(v106, 1, v107))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
          uint64_t v110 = v200;
          uint64_t v111 = v204;
        }
        else
        {
          *uint64_t v105 = *v106;
          *((_DWORD *)v105 + 4) = *((_DWORD *)v106 + 4);
          *((_WORD *)v105 + 10) = *((_WORD *)v106 + 10);
          uint64_t v168 = *(int *)(v107 + 32);
          uint64_t v169 = (char *)v106 + v168;
          uint64_t v110 = v200;
          ((void (*)(char *, char *, uint64_t))v200)((char *)v105 + v168, v169, v204);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
          uint64_t v111 = v204;
        }
        uint64_t v170 = v98[8];
        long long v171 = (_OWORD *)(a1 + v170);
        long long v172 = (_OWORD *)(a2 + v170);
        if (v190((_OWORD *)(a2 + v170), 1, v107)) {
          goto LABEL_64;
        }
        goto LABEL_68;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v112 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v113 = v112[7];
        uint64_t v114 = a1 + v113;
        uint64_t v115 = a2 + v113;
        uint64_t v116 = sub_1DD047BF8();
        long long v117 = (void (**)(uint64_t, uint64_t))(*(void *)(v116 - 8) + 32);
        v201 = *v117;
        uint64_t v205 = v116;
        (*v117)(v114, v115);
        uint64_t v118 = v112[8];
        uint64_t v119 = (_OWORD *)(a1 + v118);
        uint64_t v120 = (_OWORD *)(a2 + v118);
        uint64_t v107 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v121 = *(void *)(v107 - 8);
        long long v191 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v121 + 48);
        uint64_t v185 = v121;
        if (v191(v120, 1, v107))
        {
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
          uint64_t v110 = v201;
          uint64_t v111 = v205;
        }
        else
        {
          *uint64_t v119 = *v120;
          *((_DWORD *)v119 + 4) = *((_DWORD *)v120 + 4);
          *((_WORD *)v119 + 10) = *((_WORD *)v120 + 10);
          uint64_t v173 = *(int *)(v107 + 32);
          long long v174 = (char *)v120 + v173;
          uint64_t v110 = v201;
          ((void (*)(char *, char *, uint64_t))v201)((char *)v119 + v173, v174, v205);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v121 + 56))(v119, 0, 1, v107);
          uint64_t v111 = v205;
        }
        uint64_t v175 = v112[9];
        long long v171 = (_OWORD *)(a1 + v175);
        long long v172 = (_OWORD *)(a2 + v175);
        if (v191((_OWORD *)(a2 + v175), 1, v107))
        {
LABEL_64:
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v171, v172, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
LABEL_68:
          *long long v171 = *v172;
          *((_DWORD *)v171 + 4) = *((_DWORD *)v172 + 4);
          *((_WORD *)v171 + 10) = *((_WORD *)v172 + 10);
          ((void (*)(char *, char *, uint64_t))v110)((char *)v171 + *(int *)(v107 + 32), (char *)v172 + *(int *)(v107 + 32), v111);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v185 + 56))(v171, 0, 1, v107);
        }
        goto LABEL_70;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v123 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v124 = *(int *)(v123 + 32);
        uint64_t v125 = a1 + v124;
        uint64_t v126 = a2 + v124;
        uint64_t v127 = sub_1DD047BF8();
        long long v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 32);
        v128(v125, v126, v127);
        uint64_t v202 = v123;
        uint64_t v129 = *(int *)(v123 + 36);
        uint64_t v130 = (_OWORD *)(a1 + v129);
        uint64_t v131 = (_OWORD *)(a2 + v129);
        uint64_t v132 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v133 = *(void *)(v132 - 8);
        uint64_t v192 = v127;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          *uint64_t v130 = *v131;
          *((void *)v130 + 2) = *((void *)v131 + 2);
          *((_DWORD *)v130 + 6) = *((_DWORD *)v131 + 6);
          v128((uint64_t)v130 + *(int *)(v132 + 32), (uint64_t)v131 + *(int *)(v132 + 32), v127);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v133 + 56))(v130, 0, 1, v132);
        }
        uint64_t v177 = *(int *)(v202 + 40);
        long long v178 = (void *)(a1 + v177);
        uint64_t v179 = (void *)(a2 + v177);
        uint64_t v180 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v181 = *(void *)(v180 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v181 + 48))(v179, 1, v180))
        {
          uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
          memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
        }
        else
        {
          *long long v178 = *v179;
          v128((uint64_t)v178 + *(int *)(v180 + 20), (uint64_t)v179 + *(int *)(v180 + 20), v192);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v181 + 56))(v178, 0, 1, v180);
        }
LABEL_70:
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v135 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        uint64_t v136 = a1 + v135;
        uint64_t v137 = a2 + v135;
        uint64_t v138 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 32))(v136, v137, v138);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v139 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
        uint64_t v140 = a1 + v139;
        uint64_t v141 = a2 + v139;
        uint64_t v142 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v143 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
        uint64_t v144 = a1 + v143;
        uint64_t v145 = a2 + v143;
        uint64_t v146 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                     + 32);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = a2 + v13;
        uint64_t v16 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_57:
  uint64_t v160 = *(int *)(a3 + 20);
  uint64_t v161 = *(int *)(a3 + 24);
  uint64_t v162 = a1 + v160;
  uint64_t v163 = a2 + v160;
  *(void *)uint64_t v162 = *(void *)v163;
  *(unsigned char *)(v162 + 8) = *(unsigned char *)(v163 + 8);
  uint64_t v164 = a1 + v161;
  uint64_t v165 = a2 + v161;
  uint64_t v166 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 40))(v164, v165, v166);
  return a1;
}

uint64_t sub_1DCF6858C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF685A0);
}

uint64_t sub_1DCF685A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCF6869C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF686B0);
}

uint64_t sub_1DCF686B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1DD047BF8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84D80);
}

void sub_1DCF687D8()
{
  sub_1DCF6AAE0(319, (unint64_t *)&unk_1EBE84D58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  if (v0 <= 0x3F)
  {
    sub_1DD047BF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1DCF688C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

unsigned char *sub_1DCF68990(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DCF68A0C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DCF68A88(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DCF68B04(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF68B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF68B94);
}

uint64_t sub_1DCF68B94(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCF68C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF68C58);
}

unsigned char *sub_1DCF68C58(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF68CFC()
{
  return sub_1DCE0B568();
}

uint64_t sub_1DCF68D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF68D1C);
}

uint64_t sub_1DCF68D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1DD047BF8();
  int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DCF68D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF68DA0);
}

uint64_t sub_1DCF68DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DCF68E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_120Tm_1);
}

uint64_t sub_1DCF68E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_121Tm_1);
}

uint64_t sub_1DCF68E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_8);
}

uint64_t sub_1DCF68E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_8);
}

unint64_t sub_1DCF68E74(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_1DCD33F64(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1DCF68F6C(uint64_t a1, uint64_t a2)
{
  sub_1DCD21954(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCF68FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1DCD33F64(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DCF69090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1DCD33F64(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_1DCD21954(v8, v9);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1DCF69148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF691D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1DCD21954(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1DCF69274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF69288);
}

uint64_t sub_1DCF69288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF69344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF69358);
}

void *sub_1DCF69358(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF69408()
{
  return sub_1DCE10954();
}

void *sub_1DCF69428(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a3[8];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v11;
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_1DCD33F64(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      uint64_t v11 = v31;
      v13[2] = v14[2];
      *((_DWORD *)v13 + 6) = *((_DWORD *)v14 + 6);
      v31((uint64_t)v13 + *(int *)(v15 + 32), (uint64_t)v14 + *(int *)(v15 + 32), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = a3[10];
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      uint64_t v27 = *(int *)(v24 + 20);
      uint64_t v28 = (char *)v22 + v27;
      uint64_t v29 = (char *)v23 + v27;
      swift_bridgeObjectRetain();
      v11((uint64_t)v28, (uint64_t)v29, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t sub_1DCF69744(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_1DCD21954(*(void *)v6, *(void *)(v6 + 8));
    v12(v6 + *(int *)(v7 + 32), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t sub_1DCF698D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v29 = v10;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_1DCD33F64(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v10 = v29;
    v12[2] = v13[2];
    *((_DWORD *)v12 + 6) = *((_DWORD *)v13 + 6);
    v29((uint64_t)v12 + *(int *)(v14 + 32), (uint64_t)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = a3[10];
  unint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *unint64_t v20 = *v21;
    uint64_t v25 = *(int *)(v22 + 20);
    uint64_t v26 = (char *)v20 + v25;
    uint64_t v27 = (char *)v21 + v25;
    swift_bridgeObjectRetain();
    v10((uint64_t)v26, (uint64_t)v27, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_1DCF69BA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v40 + 24);
  v39(v7, v8);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *(void *)v12;
      unint64_t v19 = *(void *)(v12 + 8);
      sub_1DCD33F64(*(void *)v12, v19);
      *(void *)uint64_t v11 = v18;
      *(void *)(v11 + 8) = v19;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_DWORD *)(v11 + 20) = *(_DWORD *)(v12 + 20);
      *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v41);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = *(void *)v12;
  unint64_t v36 = *(void *)(v12 + 8);
  sub_1DCD33F64(*(void *)v12, v36);
  uint64_t v37 = *(void *)v11;
  unint64_t v38 = *(void *)(v11 + 8);
  *(void *)uint64_t v11 = v35;
  *(void *)(v11 + 8) = v36;
  sub_1DCD21954(v37, v38);
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(_DWORD *)(v11 + 20) = *(_DWORD *)(v12 + 20);
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v39)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v41);
LABEL_7:
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *uint64_t v22 = *v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v39)((char *)v22 + *(int *)(v24 + 20), (char *)v23 + *(int *)(v24 + 20), v41);
      return a1;
    }
    sub_1DCF69FA4((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v22, v23, *(void *)(*(void *)(v33 - 8) + 64));
    return a1;
  }
  *uint64_t v22 = *v23;
  uint64_t v29 = *(int *)(v24 + 20);
  long long v30 = (char *)v22 + v29;
  uint64_t v31 = (char *)v23 + v29;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  swift_bridgeObjectRetain();
  v32(v30, v31, v41);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1DCF69FA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCF6A004(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((_DWORD *)v12 + 6) = *((_DWORD *)v13 + 6);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 20), (char *)v19 + *(int *)(v20 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1DCF6A298(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v32 + 40);
  v31(v7, v8);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v29 = *(void *)v11;
  unint64_t v30 = *(void *)(v11 + 8);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_1DCD21954(v29, v30);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v31)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
LABEL_7:
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v31)((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v33);
      return a1;
    }
    sub_1DCF69FA4((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *uint64_t v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v33);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1DCF6A654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6A668);
}

uint64_t sub_1DCF6A668(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[8];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[10];
  return v15(v17, a2, v16);
}

uint64_t sub_1DCF6A7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6A7FC);
}

uint64_t sub_1DCF6A7FC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[10];
  return v15(v17, a2, a2, v16);
}

void sub_1DCF6A97C()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCF6AAE0(319, &qword_1EBE86448, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
    if (v1 <= 0x3F)
    {
      sub_1DCF6AAE0(319, &qword_1EBE86478, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1DCF6AAE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_1DCF6AB34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v33 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      *((_WORD *)v14 + 10) = *((_WORD *)v15 + 10);
      uint64_t v21 = *(int *)(v16 + 32);
      uint64_t v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      swift_bridgeObjectRetain();
      v33(v22, v23, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v24 = a3[9];
    int v25 = (uint64_t *)((char *)v7 + v24);
    int v26 = (uint64_t *)((char *)a2 + v24);
    if (v18(v26, 1, v16))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v26[1];
      *int v25 = *v26;
      v25[1] = v28;
      *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
      *((_WORD *)v25 + 10) = *((_WORD *)v26 + 10);
      uint64_t v29 = *(int *)(v16 + 32);
      unint64_t v30 = (char *)v25 + v29;
      uint64_t v31 = (char *)v26 + v29;
      swift_bridgeObjectRetain();
      v33(v30, v31, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1DCF6AE04(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 32), v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *sub_1DCF6AF78(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v33 = a3;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v18;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    uint64_t v19 = *(int *)(v14 + 32);
    uint64_t v32 = v9;
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    uint64_t v22 = v20;
    uint64_t v9 = v32;
    v10(v22, v21, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v23 = *(int *)(v33 + 36);
  uint64_t v24 = (void *)((char *)a1 + v23);
  int v25 = (void *)((char *)a2 + v23);
  if (v16(v25, 1, v14))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v27;
    *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
    *((_WORD *)v24 + 10) = *((_WORD *)v25 + 10);
    uint64_t v28 = *(int *)(v14 + 32);
    uint64_t v29 = (char *)v24 + v28;
    unint64_t v30 = (char *)v25 + v28;
    swift_bridgeObjectRetain();
    v10(v29, v30, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6B20C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v35 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
      *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
      uint64_t v17 = *(int *)(v13 + 32);
      uint64_t v18 = v11 + v17;
      uint64_t v32 = v12 + v17;
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      v31(v18, v32, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v36);
LABEL_7:
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  int v23 = v14(a1 + v20, 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *(void *)(v22 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
      *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
      *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v21 + *(int *)(v13 + 32), v22 + *(int *)(v13 + 32), v36);
      return a1;
    }
    sub_1DCF69FA4(v21, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v21, (const void *)v22, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
  *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
  *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
  uint64_t v25 = *(int *)(v13 + 32);
  uint64_t v26 = v21 + v25;
  uint64_t v27 = v22 + v25;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v21, 0, 1, v13);
  return a1;
}

void *sub_1DCF6B614(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v24 = a3;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v24 + 36);
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  uint64_t v21 = (_OWORD *)((char *)a2 + v19);
  if (v16(v21, 1, v14))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
    *((_WORD *)v20 + 10) = *((_WORD *)v21 + 10);
    v10((char *)v20 + *(int *)(v14 + 32), (char *)v21 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6B87C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v29 + 40);
  v27(v7, v8);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_WORD *)(v11 + 20) = *(_WORD *)(v12 + 20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v30);
LABEL_7:
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = v14(a1 + v18, 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v26 = *(void *)(v20 + 8);
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v26;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
      *(unsigned char *)(v19 + 20) = *(unsigned char *)(v20 + 20);
      *(unsigned char *)(v19 + 21) = *(unsigned char *)(v20 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v30);
      return a1;
    }
    sub_1DCF69FA4(v19, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  *(_WORD *)(v19 + 20) = *(_WORD *)(v20 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v19, 0, 1, v13);
  return a1;
}

uint64_t sub_1DCF6BC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6BC28);
}

uint64_t sub_1DCF6BC28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCF6BD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6BD6C);
}

void *sub_1DCF6BD6C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCF6BE9C()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCF6AAE0(319, &qword_1EBE84E10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCF6BFA0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v33 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)(v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      *((_WORD *)v14 + 10) = *((_WORD *)v15 + 10);
      uint64_t v21 = *(int *)(v16 + 32);
      int v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      swift_bridgeObjectRetain();
      v33(v22, v23, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = (void *)(v7 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    if (v18(v26, 1, v16))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v28;
      *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
      *((_WORD *)v25 + 10) = *((_WORD *)v26 + 10);
      uint64_t v29 = *(int *)(v16 + 32);
      uint64_t v30 = (char *)v25 + v29;
      uint64_t v31 = (char *)v26 + v29;
      swift_bridgeObjectRetain();
      v33(v30, v31, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1DCF6C270(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 32), v5);
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t sub_1DCF6C3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v33 = a3;
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v18;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    uint64_t v19 = *(int *)(v14 + 32);
    uint64_t v32 = v9;
    uint64_t v20 = (char *)v12 + v19;
    uint64_t v21 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    int v22 = v20;
    uint64_t v9 = v32;
    v10((uint64_t)v22, (uint64_t)v21, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v23 = *(int *)(v33 + 32);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  if (v16(v25, 1, v14))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v27;
    *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
    *((_WORD *)v24 + 10) = *((_WORD *)v25 + 10);
    uint64_t v28 = *(int *)(v14 + 32);
    uint64_t v29 = (char *)v24 + v28;
    uint64_t v30 = (char *)v25 + v28;
    swift_bridgeObjectRetain();
    v10((uint64_t)v29, (uint64_t)v30, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6C678(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v35 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
      *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
      uint64_t v17 = *(int *)(v13 + 32);
      uint64_t v18 = v11 + v17;
      uint64_t v32 = v12 + v17;
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
      swift_bridgeObjectRetain();
      v31(v18, v32, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v36);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  int v23 = v14(a1 + v20, 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *(void *)(v22 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
      *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
      *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v21 + *(int *)(v13 + 32), v22 + *(int *)(v13 + 32), v36);
      return a1;
    }
    sub_1DCF69FA4(v21, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v21, (const void *)v22, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
  *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
  *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
  uint64_t v25 = *(int *)(v13 + 32);
  uint64_t v26 = v21 + v25;
  uint64_t v27 = v22 + v25;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v36);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v21, 0, 1, v13);
  return a1;
}

uint64_t sub_1DCF6CA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v24 = a3;
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v24 + 32);
  uint64_t v20 = (_OWORD *)(a1 + v19);
  uint64_t v21 = (_OWORD *)(a2 + v19);
  if (v16(v21, 1, v14))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    *((_DWORD *)v20 + 4) = *((_DWORD *)v21 + 4);
    *((_WORD *)v20 + 10) = *((_WORD *)v21 + 10);
    v10((char *)v20 + *(int *)(v14 + 32), (char *)v21 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6CCE0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v29 + 40);
  v27(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_WORD *)(v11 + 20) = *(_WORD *)(v12 + 20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF69FA4(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v25;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v30);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = v14(a1 + v18, 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v26 = *(void *)(v20 + 8);
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v26;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
      *(unsigned char *)(v19 + 20) = *(unsigned char *)(v20 + 20);
      *(unsigned char *)(v19 + 21) = *(unsigned char *)(v20 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v27)(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v30);
      return a1;
    }
    sub_1DCF69FA4(v19, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  *(_WORD *)(v19 + 20) = *(_WORD *)(v20 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v19, 0, 1, v13);
  return a1;
}

uint64_t sub_1DCF6D070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_23Tm);
}

uint64_t sub_1DCF6D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_24Tm);
}

void sub_1DCF6D0A0()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCF6AAE0(319, &qword_1EBE84E10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCF6D1A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCF6D294(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCF6D30C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6D3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6D460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6D588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_26Tm);
}

uint64_t sub_1DCF6D5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_27Tm);
}

uint64_t sub_1DCF6D5B8()
{
  return sub_1DCE10954();
}

uint64_t sub_1DCF6D5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_29Tm);
}

uint64_t sub_1DCF6D610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_30Tm);
}

uint64_t sub_1DCF6D628()
{
  return sub_1DCE0BB54();
}

uint64_t sub_1DCF6D640(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1DCF6D75C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCF6D7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6D8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6D9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCF6DA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6DAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6DB04);
}

uint64_t sub_1DCF6DB04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF6DBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6DBC8);
}

void *sub_1DCF6DBC8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF6DC70()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1DCF6DD1C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    int v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_WORD *)(a1 + 20) = *((_WORD *)a2 + 10);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1DCF6DE14(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCF6DE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCF6DF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6DFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6E074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 21) = *(unsigned char *)(a2 + 21);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DCF6E118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6E12C);
}

uint64_t sub_1DCF6E12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF6E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6E1F0);
}

uint64_t sub_1DCF6E1F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF6E298()
{
  return sub_1DCE10954();
}

uint64_t sub_1DCF6E2BC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)(v7 + v13);
    int v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      *((_WORD *)v14 + 10) = *((_WORD *)v15 + 10);
      uint64_t v20 = *(int *)(v16 + 32);
      int v21 = (char *)v14 + v20;
      int v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12((uint64_t)v21, (uint64_t)v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1DCF6E4B0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t sub_1DCF6E5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    uint64_t v18 = *(int *)(v14 + 32);
    uint64_t v19 = (char *)v12 + v18;
    uint64_t v20 = (char *)v13 + v18;
    swift_bridgeObjectRetain();
    v10((uint64_t)v19, (uint64_t)v20, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6E76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *(void *)(v13 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
      *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
      *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v25);
      return a1;
    }
    sub_1DCF69FA4(v12, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
  *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
  *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
  uint64_t v18 = *(int *)(v14 + 32);
  uint64_t v19 = v12 + v18;
  uint64_t v20 = v13 + v18;
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCF6E9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCF6EB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v21 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v20 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v20;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
      *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
      *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v22);
      return a1;
    }
    sub_1DCF69FA4(v12, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
  *(_WORD *)(v12 + 20) = *(_WORD *)(v13 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v22);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCF6EDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6EDCC);
}

uint64_t __swift_get_extra_inhabitant_index_23Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCF6EF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6EF14);
}

void *__swift_store_extra_inhabitant_index_24Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCF6F048()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCF6AAE0(319, &qword_1EBE84E10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCF6F144(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCF6F230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6F2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6F374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6F3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6F494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_120Tm_2);
}

uint64_t sub_1DCF6F4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_121Tm_2);
}

uint64_t sub_1DCF6F4C4()
{
  return sub_1DCE102D8();
}

uint64_t sub_1DCF6F4E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1DCF6F5EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCF6F674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCF6F734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6F800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF6F88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF6F940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF6F954);
}

uint64_t __swift_get_extra_inhabitant_index_26Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF6FA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF6FA1C);
}

void *__swift_store_extra_inhabitant_index_27Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF6FAC8()
{
  return sub_1DCE10954();
}

uint64_t sub_1DCF6FAE8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *a2;
        *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
        uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = (uint64_t)a2 + v13;
        uint64_t v16 = sub_1DD047BF8();
        int v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        break;
      case 2u:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v19 = *(int *)(v18 + 24);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = (uint64_t)a2 + v19;
        uint64_t v22 = sub_1DD047BF8();
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        uint64_t v24 = *(int *)(v18 + 28);
        uint64_t v25 = (void *)(a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v95 = v26[1];
          *uint64_t v25 = *v26;
          v25[1] = v95;
          *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
          *((_WORD *)v25 + 10) = *((_WORD *)v26 + 10);
          uint64_t v96 = *(int *)(v27 + 32);
          uint64_t v97 = (char *)v25 + v96;
          uint64_t v98 = (char *)v26 + v96;
          swift_bridgeObjectRetain();
          v23((uint64_t)v97, (uint64_t)v98, v22);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        break;
      case 3u:
        uint64_t v30 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v30;
        uint64_t v31 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v31;
        *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
        uint64_t v32 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        uint64_t v33 = a1 + v32;
        uint64_t v137 = (uint64_t)a2 + v32;
        uint64_t v34 = sub_1DD047BF8();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v35(v33, v137, v34);
        break;
      case 4u:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v36 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        uint64_t v37 = a1 + v36;
        uint64_t v38 = (uint64_t)a2 + v36;
        uint64_t v39 = sub_1DD047BF8();
        uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v37, v38, v39);
        break;
      case 5u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v41 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        uint64_t v42 = a1 + v41;
        uint64_t v43 = (uint64_t)a2 + v41;
        uint64_t v44 = sub_1DD047BF8();
        uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        break;
      case 6u:
        *(void *)a1 = *a2;
        *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
        uint64_t v46 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v47 = v46[6];
        uint64_t v48 = (char *)(a1 + v47);
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_1DD047BF8();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v134 = v51;
        v51(v48, v49, v50);
        uint64_t v52 = v46[7];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (uint64_t *)((char *)a2 + v52);
        uint64_t v55 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v131 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48);
        uint64_t v130 = v56;
        if (v131(v54, 1, v55))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
          uint64_t v58 = v134;
        }
        else
        {
          uint64_t v99 = v54[1];
          *uint64_t v53 = *v54;
          v53[1] = v99;
          *((_DWORD *)v53 + 4) = *((_DWORD *)v54 + 4);
          *((_WORD *)v53 + 10) = *((_WORD *)v54 + 10);
          uint64_t v100 = *(int *)(v55 + 32);
          long long v128 = (char *)v53 + v100;
          uint64_t v101 = (char *)v54 + v100;
          swift_bridgeObjectRetain();
          uint64_t v102 = v101;
          uint64_t v58 = v134;
          v134(v128, v102, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        uint64_t v103 = v46[8];
        uint64_t v104 = (void *)(a1 + v103);
        uint64_t v105 = (uint64_t *)((char *)a2 + v103);
        if (!v131(v105, 1, v55)) {
          goto LABEL_27;
        }
        goto LABEL_23;
      case 7u:
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v59 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v60 = v59[7];
        uint64_t v61 = (char *)(a1 + v60);
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v50 = sub_1DD047BF8();
        uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v135 = v63;
        v63(v61, v62, v50);
        uint64_t v64 = v59[8];
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = (uint64_t *)((char *)a2 + v64);
        uint64_t v55 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v67 = *(void *)(v55 - 8);
        uint64_t v132 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48);
        uint64_t v130 = v67;
        if (v132(v66, 1, v55))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
          uint64_t v58 = v135;
        }
        else
        {
          uint64_t v107 = v66[1];
          *uint64_t v65 = *v66;
          v65[1] = v107;
          *((_DWORD *)v65 + 4) = *((_DWORD *)v66 + 4);
          *((_WORD *)v65 + 10) = *((_WORD *)v66 + 10);
          uint64_t v108 = *(int *)(v55 + 32);
          uint64_t v129 = (char *)v65 + v108;
          uint64_t v109 = (char *)v66 + v108;
          swift_bridgeObjectRetain();
          uint64_t v110 = v109;
          uint64_t v58 = v135;
          v135(v129, v110, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v65, 0, 1, v55);
        }
        uint64_t v111 = v59[9];
        uint64_t v104 = (void *)(a1 + v111);
        uint64_t v105 = (uint64_t *)((char *)a2 + v111);
        if (v132(v105, 1, v55))
        {
LABEL_23:
          uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
LABEL_27:
          uint64_t v112 = v105[1];
          *uint64_t v104 = *v105;
          v104[1] = v112;
          *((_DWORD *)v104 + 4) = *((_DWORD *)v105 + 4);
          *((_WORD *)v104 + 10) = *((_WORD *)v105 + 10);
          uint64_t v113 = *(int *)(v55 + 32);
          uint64_t v114 = (char *)v104 + v113;
          uint64_t v115 = (char *)v105 + v113;
          swift_bridgeObjectRetain();
          v58(v114, v115, v50);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v130 + 56))(v104, 0, 1, v55);
        }
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
        *(void *)(a1 + 8) = a2[1];
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v69 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v70 = v69[8];
        uint64_t v71 = a1 + v70;
        uint64_t v72 = (uint64_t)a2 + v70;
        uint64_t v73 = sub_1DD047BF8();
        uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        uint64_t v75 = v69[9];
        uint64_t v76 = (void *)(a1 + v75);
        uint64_t v77 = (uint64_t *)((char *)a2 + v75);
        uint64_t v78 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v79 = *(void *)(v78 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          uint64_t v133 = v74;
          uint64_t v136 = v73;
          uint64_t v116 = *v77;
          unint64_t v117 = v77[1];
          sub_1DCD33F64(*v77, v117);
          void *v76 = v116;
          v76[1] = v117;
          uint64_t v74 = v133;
          uint64_t v73 = v136;
          v76[2] = v77[2];
          *((_DWORD *)v76 + 6) = *((_DWORD *)v77 + 6);
          v133((uint64_t)v76 + *(int *)(v78 + 32), (uint64_t)v77 + *(int *)(v78 + 32), v136);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
        }
        uint64_t v118 = v69[10];
        uint64_t v119 = (void *)(a1 + v118);
        uint64_t v120 = (uint64_t *)((char *)a2 + v118);
        uint64_t v121 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v122 = *(void *)(v121 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
          memcpy(v119, v120, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          *uint64_t v119 = *v120;
          uint64_t v124 = *(int *)(v121 + 20);
          uint64_t v125 = (char *)v119 + v124;
          uint64_t v126 = (char *)v120 + v124;
          swift_bridgeObjectRetain();
          v74((uint64_t)v125, (uint64_t)v126, v73);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
        }
        break;
      case 9u:
        uint64_t v81 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v81;
        *(void *)(a1 + 16) = a2[2];
        uint64_t v82 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        uint64_t v83 = a1 + v82;
        uint64_t v84 = (uint64_t)a2 + v82;
        uint64_t v85 = sub_1DD047BF8();
        uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v86(v83, v84, v85);
        break;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v87 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
        uint64_t v88 = a1 + v87;
        uint64_t v89 = (uint64_t)a2 + v87;
        uint64_t v90 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
        break;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v91 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
        uint64_t v92 = a1 + v91;
        uint64_t v93 = (uint64_t)a2 + v91;
        uint64_t v94 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                    + 32);
        uint64_t v8 = a1 + v7;
        uint64_t v9 = (uint64_t)a2 + v7;
        uint64_t v10 = sub_1DD047BF8();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCF708C4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
      goto LABEL_26;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
      goto LABEL_22;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
      uint64_t v6 = a1 + *(int *)(v5 + 24);
      uint64_t v7 = sub_1DD047BF8();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v31(v6, v7);
      uint64_t v8 = a1 + *(int *)(v5 + 28);
      uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(v9 + 32);
      goto LABEL_31;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
      goto LABEL_26;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
      goto LABEL_26;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
      goto LABEL_26;
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v11 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
      uint64_t v12 = a1 + v11[6];
      uint64_t v7 = sub_1DD047BF8();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v31(v12, v7);
      uint64_t v13 = a1 + v11[7];
      uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      if (!v15(v13, 1, v14))
      {
        swift_bridgeObjectRelease();
        v31(v13 + *(int *)(v14 + 32), v7);
      }
      uint64_t v16 = v11[8];
      goto LABEL_15;
    case 7:
      swift_bridgeObjectRelease();
      int v17 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
      uint64_t v18 = a1 + v17[7];
      uint64_t v7 = sub_1DD047BF8();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v31(v18, v7);
      uint64_t v19 = a1 + v17[8];
      uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      if (!v15(v19, 1, v14))
      {
        swift_bridgeObjectRelease();
        v31(v19 + *(int *)(v14 + 32), v7);
      }
      uint64_t v16 = v17[9];
LABEL_15:
      uint64_t v8 = a1 + v16;
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v8, 1, v14);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(v14 + 32);
      goto LABEL_31;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v20 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
      uint64_t v21 = a1 + v20[8];
      uint64_t v7 = sub_1DD047BF8();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v31(v21, v7);
      uint64_t v22 = a1 + v20[9];
      uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
      {
        sub_1DCD21954(*(void *)v22, *(void *)(v22 + 8));
        v31(v22 + *(int *)(v23 + 32), v7);
      }
      uint64_t v8 = a1 + v20[10];
      uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v8, 1, v24);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = *(int *)(v24 + 20);
LABEL_31:
      uint64_t v30 = v8 + v10;
      uint64_t v29 = v7;
      uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))v31;
      goto LABEL_27;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
LABEL_22:
      uint64_t v3 = *(int *)(v4 + 28);
      goto LABEL_26;
    case 10:
      uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
      goto LABEL_25;
    case 11:
      uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_25:
      uint64_t v3 = *(int *)(v25 + 20);
LABEL_26:
      uint64_t v26 = a1 + v3;
      uint64_t v27 = sub_1DD047BF8();
      uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      uint64_t v29 = v27;
      uint64_t v30 = v26;
LABEL_27:
      uint64_t result = v28(v30, v29);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCF70E64(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      uint64_t v10 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1DD047BF8();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
      uint64_t v16 = *(int *)(v15 + 24);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_1DD047BF8();
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      uint64_t v21 = *(int *)(v15 + 28);
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
        uint64_t v27 = v22;
        goto LABEL_32;
      }
      uint64_t v90 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v90;
      *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
      *((_WORD *)v22 + 10) = *((_WORD *)v23 + 10);
      uint64_t v91 = *(int *)(v24 + 32);
      uint64_t v92 = (char *)v22 + v91;
      uint64_t v93 = (char *)v23 + v91;
      swift_bridgeObjectRetain();
      v20((uint64_t)v92, (uint64_t)v93, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      break;
    case 3u:
      uint64_t v28 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v28;
      uint64_t v29 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v29;
      *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
      uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
      uint64_t v125 = a1 + v30;
      uint64_t v31 = a2 + v30;
      uint64_t v32 = sub_1DD047BF8();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v34 = v125;
      uint64_t v35 = v31;
      uint64_t v36 = v32;
      goto LABEL_10;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v37 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
      goto LABEL_9;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v37 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
LABEL_9:
      uint64_t v38 = a1 + v37;
      uint64_t v39 = a2 + v37;
      uint64_t v40 = sub_1DD047BF8();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v34 = v38;
      uint64_t v35 = v39;
      uint64_t v36 = v40;
LABEL_10:
      v33(v34, v35, v36);
      break;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      uint64_t v41 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
      uint64_t v42 = *(int *)(v41 + 24);
      uint64_t v43 = a1 + v42;
      uint64_t v44 = a2 + v42;
      uint64_t v45 = sub_1DD047BF8();
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
      uint64_t v47 = v46;
      uint64_t v126 = v41;
      uint64_t v48 = *(int *)(v41 + 28);
      uint64_t v49 = (void *)(a1 + v48);
      uint64_t v50 = (void *)(a2 + v48);
      uint64_t v51 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v122 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v52 + 48);
      uint64_t v120 = v52;
      uint64_t v121 = (void (*)(char *, char *, uint64_t))v47;
      if (v122(v50, 1, v51))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v54 = v45;
      }
      else
      {
        uint64_t v94 = v50[1];
        *uint64_t v49 = *v50;
        v49[1] = v94;
        *((_DWORD *)v49 + 4) = *((_DWORD *)v50 + 4);
        *((_WORD *)v49 + 10) = *((_WORD *)v50 + 10);
        uint64_t v95 = *(int *)(v51 + 32);
        uint64_t v96 = (char *)v49 + v95;
        uint64_t v97 = (char *)v50 + v95;
        swift_bridgeObjectRetain();
        uint64_t v98 = v96;
        uint64_t v54 = v45;
        v47((uint64_t)v98, (uint64_t)v97, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v99 = *(int *)(v126 + 32);
      goto LABEL_26;
    case 7u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v55 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
      uint64_t v56 = *(int *)(v55 + 28);
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      uint64_t v59 = sub_1DD047BF8();
      uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, v59);
      uint64_t v61 = v60;
      uint64_t v127 = v55;
      uint64_t v62 = *(int *)(v55 + 32);
      uint64_t v63 = (void *)(a1 + v62);
      uint64_t v64 = (void *)(a2 + v62);
      uint64_t v51 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v65 = *(void *)(v51 - 8);
      uint64_t v122 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v65 + 48);
      uint64_t v120 = v65;
      uint64_t v121 = (void (*)(char *, char *, uint64_t))v61;
      if (v122(v64, 1, v51))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        uint64_t v54 = v59;
      }
      else
      {
        uint64_t v100 = v64[1];
        *uint64_t v63 = *v64;
        v63[1] = v100;
        *((_DWORD *)v63 + 4) = *((_DWORD *)v64 + 4);
        *((_WORD *)v63 + 10) = *((_WORD *)v64 + 10);
        uint64_t v101 = *(int *)(v51 + 32);
        uint64_t v102 = (char *)v63 + v101;
        uint64_t v103 = (char *)v64 + v101;
        swift_bridgeObjectRetain();
        uint64_t v104 = v102;
        uint64_t v54 = v59;
        v61((uint64_t)v104, (uint64_t)v103, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v63, 0, 1, v51);
      }
      uint64_t v99 = *(int *)(v127 + 36);
LABEL_26:
      uint64_t v105 = (void *)(a1 + v99);
      uint64_t v23 = (void *)(a2 + v99);
      if (v122(v23, 1, v51))
      {
        size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
        uint64_t v27 = v105;
        goto LABEL_32;
      }
      uint64_t v106 = v23[1];
      *uint64_t v105 = *v23;
      v105[1] = v106;
      *((_DWORD *)v105 + 4) = *((_DWORD *)v23 + 4);
      *((_WORD *)v105 + 10) = *((_WORD *)v23 + 10);
      uint64_t v107 = *(int *)(v51 + 32);
      uint64_t v108 = (char *)v105 + v107;
      uint64_t v109 = (char *)v23 + v107;
      swift_bridgeObjectRetain();
      v121(v108, v109, v54);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v105, 0, 1, v51);
      break;
    case 8u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v67 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
      uint64_t v68 = *(int *)(v67 + 32);
      uint64_t v69 = (char *)(a1 + v68);
      uint64_t v70 = (char *)(a2 + v68);
      uint64_t v71 = sub_1DD047BF8();
      uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v123 = v72;
      uint64_t v124 = v71;
      v72(v69, v70, v71);
      uint64_t v128 = v67;
      uint64_t v73 = *(int *)(v67 + 36);
      uint64_t v74 = (void *)(a1 + v73);
      uint64_t v75 = (uint64_t *)(a2 + v73);
      uint64_t v76 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
      uint64_t v77 = *(void *)(v76 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
        memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        uint64_t v111 = *v75;
        unint64_t v110 = v75[1];
        sub_1DCD33F64(*v75, v110);
        void *v74 = v111;
        v74[1] = v110;
        v74[2] = v75[2];
        *((_DWORD *)v74 + 6) = *((_DWORD *)v75 + 6);
        v123((char *)v74 + *(int *)(v76 + 32), (char *)v75 + *(int *)(v76 + 32), v71);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
      }
      uint64_t v112 = *(int *)(v128 + 40);
      uint64_t v113 = (void *)(a1 + v112);
      uint64_t v23 = (void *)(a2 + v112);
      uint64_t v114 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
      uint64_t v115 = *(void *)(v114 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v115 + 48))(v23, 1, v114))
      {
        size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
        uint64_t v27 = v113;
LABEL_32:
        memcpy(v27, v23, v26);
      }
      else
      {
        *uint64_t v113 = *v23;
        uint64_t v117 = *(int *)(v114 + 20);
        uint64_t v118 = (char *)v113 + v117;
        uint64_t v119 = (char *)v23 + v117;
        swift_bridgeObjectRetain();
        v123(v118, v119, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v113, 0, 1, v114);
      }
      break;
    case 9u:
      uint64_t v79 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v79;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v80 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
      uint64_t v81 = a1 + v80;
      uint64_t v82 = a2 + v80;
      uint64_t v83 = sub_1DD047BF8();
      uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84(v81, v82, v83);
      break;
    case 0xAu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v85 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
      goto LABEL_20;
    case 0xBu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v85 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_20:
      uint64_t v86 = *(int *)(v85 + 20);
      uint64_t v87 = a1 + v86;
      uint64_t v88 = a2 + v86;
      uint64_t v89 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_1DD047BF8();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCF71A24(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
        uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_1DD047BF8();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v15 = *(int *)(v14 + 24);
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_1DD047BF8();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        uint64_t v20 = *(int *)(v14 + 28);
        uint64_t v21 = (void *)(a1 + v20);
        uint64_t v22 = (void *)(a2 + v20);
        uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          *uint64_t v21 = *v22;
          v21[1] = v22[1];
          *((_DWORD *)v21 + 4) = *((_DWORD *)v22 + 4);
          *((unsigned char *)v21 + 20) = *((unsigned char *)v22 + 20);
          *((unsigned char *)v21 + 21) = *((unsigned char *)v22 + 21);
          uint64_t v88 = *(int *)(v23 + 32);
          uint64_t v89 = (char *)v21 + v88;
          uint64_t v90 = (char *)v22 + v88;
          swift_bridgeObjectRetain();
          v19((uint64_t)v89, (uint64_t)v90, v18);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
        uint64_t v26 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        uint64_t v27 = a1 + v26;
        uint64_t v126 = a2 + v26;
        uint64_t v28 = sub_1DD047BF8();
        uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29(v27, v126, v28);
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        uint64_t v33 = sub_1DD047BF8();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v35 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        uint64_t v36 = a1 + v35;
        uint64_t v37 = a2 + v35;
        uint64_t v38 = sub_1DD047BF8();
        uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        uint64_t v40 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v41 = v40[6];
        uint64_t v42 = (char *)(a1 + v41);
        uint64_t v43 = (char *)(a2 + v41);
        uint64_t v44 = sub_1DD047BF8();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v123 = v45;
        v45(v42, v43, v44);
        uint64_t v46 = v40[7];
        uint64_t v47 = (void *)(a1 + v46);
        uint64_t v48 = (void *)(a2 + v46);
        uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v120 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v50 + 48);
        uint64_t v119 = v50;
        if (v120(v48, 1, v49))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
          uint64_t v52 = v123;
        }
        else
        {
          *uint64_t v47 = *v48;
          v47[1] = v48[1];
          *((_DWORD *)v47 + 4) = *((_DWORD *)v48 + 4);
          *((unsigned char *)v47 + 20) = *((unsigned char *)v48 + 20);
          *((unsigned char *)v47 + 21) = *((unsigned char *)v48 + 21);
          uint64_t v91 = *(int *)(v49 + 32);
          uint64_t v117 = (char *)v47 + v91;
          uint64_t v92 = (char *)v48 + v91;
          swift_bridgeObjectRetain();
          uint64_t v93 = v92;
          uint64_t v52 = v123;
          v123(v117, v93, v44);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        uint64_t v94 = v40[8];
        uint64_t v95 = (void *)(a1 + v94);
        uint64_t v96 = (void *)(a2 + v94);
        if (!v120(v96, 1, v49)) {
          goto LABEL_29;
        }
        goto LABEL_22;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
        uint64_t v53 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v54 = v53[7];
        uint64_t v55 = (char *)(a1 + v54);
        uint64_t v56 = (char *)(a2 + v54);
        uint64_t v44 = sub_1DD047BF8();
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v124 = v57;
        v57(v55, v56, v44);
        uint64_t v58 = v53[8];
        uint64_t v59 = (void *)(a1 + v58);
        uint64_t v60 = (void *)(a2 + v58);
        uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v61 = *(void *)(v49 - 8);
        uint64_t v121 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v61 + 48);
        uint64_t v119 = v61;
        if (v121(v60, 1, v49))
        {
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
          uint64_t v52 = v124;
        }
        else
        {
          *uint64_t v59 = *v60;
          v59[1] = v60[1];
          *((_DWORD *)v59 + 4) = *((_DWORD *)v60 + 4);
          *((unsigned char *)v59 + 20) = *((unsigned char *)v60 + 20);
          *((unsigned char *)v59 + 21) = *((unsigned char *)v60 + 21);
          uint64_t v98 = *(int *)(v49 + 32);
          uint64_t v118 = (char *)v59 + v98;
          uint64_t v99 = (char *)v60 + v98;
          swift_bridgeObjectRetain();
          uint64_t v100 = v99;
          uint64_t v52 = v124;
          v124(v118, v100, v44);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v59, 0, 1, v49);
        }
        uint64_t v101 = v53[9];
        uint64_t v95 = (void *)(a1 + v101);
        uint64_t v96 = (void *)(a2 + v101);
        if (v121(v96, 1, v49))
        {
LABEL_22:
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
LABEL_29:
          *uint64_t v95 = *v96;
          v95[1] = v96[1];
          *((_DWORD *)v95 + 4) = *((_DWORD *)v96 + 4);
          *((unsigned char *)v95 + 20) = *((unsigned char *)v96 + 20);
          *((unsigned char *)v95 + 21) = *((unsigned char *)v96 + 21);
          uint64_t v110 = *(int *)(v49 + 32);
          uint64_t v111 = (char *)v95 + v110;
          uint64_t v112 = (char *)v96 + v110;
          swift_bridgeObjectRetain();
          v52(v111, v112, v44);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v95, 0, 1, v49);
        }
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v63 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v64 = v63[8];
        uint64_t v65 = a1 + v64;
        uint64_t v66 = a2 + v64;
        uint64_t v67 = sub_1DD047BF8();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        uint64_t v69 = v63[9];
        uint64_t v70 = (void *)(a1 + v69);
        uint64_t v71 = (uint64_t *)(a2 + v69);
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          uint64_t v122 = v68;
          uint64_t v125 = v67;
          uint64_t v102 = *v71;
          unint64_t v103 = v71[1];
          sub_1DCD33F64(*v71, v103);
          *uint64_t v70 = v102;
          v70[1] = v103;
          uint64_t v68 = v122;
          uint64_t v67 = v125;
          *((_DWORD *)v70 + 4) = *((_DWORD *)v71 + 4);
          *((_DWORD *)v70 + 5) = *((_DWORD *)v71 + 5);
          *((_DWORD *)v70 + 6) = *((_DWORD *)v71 + 6);
          v122((uint64_t)v70 + *(int *)(v72 + 32), (uint64_t)v71 + *(int *)(v72 + 32), v125);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        uint64_t v104 = v63[10];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (void *)(a2 + v104);
        uint64_t v107 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v108 = *(void *)(v107 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
          memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          *uint64_t v105 = *v106;
          uint64_t v113 = *(int *)(v107 + 20);
          uint64_t v114 = (char *)v105 + v113;
          uint64_t v115 = (char *)v106 + v113;
          swift_bridgeObjectRetain();
          v68((uint64_t)v114, (uint64_t)v115, v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
        }
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v75 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        uint64_t v76 = a1 + v75;
        uint64_t v77 = a2 + v75;
        uint64_t v78 = sub_1DD047BF8();
        uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79(v76, v77, v78);
        break;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v80 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
        uint64_t v81 = a1 + v80;
        uint64_t v82 = a2 + v80;
        uint64_t v83 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
        break;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v84 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        uint64_t v87 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                    + 32);
        uint64_t v5 = a1 + v4;
        uint64_t v6 = a2 + v4;
        uint64_t v7 = sub_1DD047BF8();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCF7286C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
      goto LABEL_19;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
      uint64_t v6 = *(int *)(v5 + 24);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_1DD047BF8();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(v7, v8, v9);
      uint64_t v11 = *(int *)(v5 + 28);
      uint64_t v12 = (_OWORD *)(a1 + v11);
      uint64_t v13 = (_DWORD *)(a2 + v11);
      uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
        uint64_t v17 = v12;
        goto LABEL_31;
      }
      *uint64_t v12 = *(_OWORD *)v13;
      *((_DWORD *)v12 + 4) = v13[4];
      *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
      v10((uint64_t)v12 + *(int *)(v14 + 32), (uint64_t)v13 + *(int *)(v14 + 32), v9);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      break;
    case 3u:
      long long v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
      *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
      goto LABEL_19;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
      goto LABEL_19;
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
      goto LABEL_19;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      uint64_t v19 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = (char *)(a1 + v20);
      uint64_t v22 = (char *)(a2 + v20);
      uint64_t v23 = sub_1DD047BF8();
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
      v68(v21, v22, v23);
      uint64_t v24 = v19[7];
      uint64_t v25 = (_OWORD *)(a1 + v24);
      uint64_t v26 = (_OWORD *)(a2 + v24);
      uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v66 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v28 + 48);
      uint64_t v65 = v28;
      if (v66(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *uint64_t v25 = *v26;
        *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
        *((_WORD *)v25 + 10) = *((_WORD *)v26 + 10);
        v68((char *)v25 + *(int *)(v27 + 32), (char *)v26 + *(int *)(v27 + 32), v23);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v30 = v23;
      uint64_t v31 = v68;
      uint64_t v58 = v19[8];
      goto LABEL_25;
    case 7u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v32 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
      uint64_t v33 = v32[7];
      uint64_t v34 = (char *)(a1 + v33);
      uint64_t v35 = (char *)(a2 + v33);
      uint64_t v36 = sub_1DD047BF8();
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32);
      v69(v34, v35, v36);
      uint64_t v37 = v32[8];
      uint64_t v38 = (_OWORD *)(a1 + v37);
      uint64_t v39 = (_OWORD *)(a2 + v37);
      uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v40 = *(void *)(v27 - 8);
      uint64_t v66 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v40 + 48);
      uint64_t v65 = v40;
      if (v66(v39, 1, v27))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        *uint64_t v38 = *v39;
        *((_DWORD *)v38 + 4) = *((_DWORD *)v39 + 4);
        *((_WORD *)v38 + 10) = *((_WORD *)v39 + 10);
        v69((char *)v38 + *(int *)(v27 + 32), (char *)v39 + *(int *)(v27 + 32), v36);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v27);
      }
      uint64_t v30 = v36;
      uint64_t v31 = v69;
      uint64_t v58 = v32[9];
LABEL_25:
      uint64_t v59 = (_OWORD *)(a1 + v58);
      uint64_t v13 = (_DWORD *)(a2 + v58);
      if (v66(v13, 1, v27))
      {
        size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
        uint64_t v17 = v59;
        goto LABEL_31;
      }
      *uint64_t v59 = *(_OWORD *)v13;
      *((_DWORD *)v59 + 4) = v13[4];
      *((_WORD *)v59 + 10) = *((_WORD *)v13 + 10);
      v31((char *)v59 + *(int *)(v27 + 32), (char *)v13 + *(int *)(v27 + 32), v30);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v65 + 56))(v59, 0, 1, v27);
      break;
    case 8u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v42 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
      uint64_t v43 = *(int *)(v42 + 32);
      uint64_t v44 = a1 + v43;
      uint64_t v45 = a2 + v43;
      uint64_t v46 = sub_1DD047BF8();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32);
      v47(v44, v45, v46);
      uint64_t v70 = v42;
      uint64_t v48 = *(int *)(v42 + 36);
      uint64_t v49 = (_OWORD *)(a1 + v48);
      uint64_t v50 = (_OWORD *)(a2 + v48);
      uint64_t v51 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v67 = v46;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        *uint64_t v49 = *v50;
        *((void *)v49 + 2) = *((void *)v50 + 2);
        *((_DWORD *)v49 + 6) = *((_DWORD *)v50 + 6);
        v47((uint64_t)v49 + *(int *)(v51 + 32), (uint64_t)v50 + *(int *)(v51 + 32), v46);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v60 = *(int *)(v70 + 40);
      uint64_t v61 = (void *)(a1 + v60);
      uint64_t v13 = (_DWORD *)(a2 + v60);
      uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
      uint64_t v63 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v63 + 48))(v13, 1, v62))
      {
        size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
        uint64_t v17 = v61;
LABEL_31:
        memcpy(v17, v13, v16);
      }
      else
      {
        *uint64_t v61 = *(void *)v13;
        v47((uint64_t)v61 + *(int *)(v62 + 20), (uint64_t)v13 + *(int *)(v62 + 20), v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v61, 0, 1, v62);
      }
      break;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
      goto LABEL_19;
    case 0xAu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
      goto LABEL_18;
    case 0xBu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_18:
      uint64_t v4 = *(int *)(v54 + 20);
      goto LABEL_19;
    default:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
LABEL_19:
      uint64_t v55 = a1 + v4;
      uint64_t v56 = a2 + v4;
      uint64_t v57 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCF731D4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCF69FA4(a1, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
        goto LABEL_20;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
        uint64_t v6 = *(int *)(v5 + 24);
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = sub_1DD047BF8();
        uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
        v10(v7, v8, v9);
        uint64_t v11 = *(int *)(v5 + 28);
        uint64_t v12 = (_OWORD *)(a1 + v11);
        uint64_t v13 = (_DWORD *)(a2 + v11);
        uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v17 = v12;
          goto LABEL_32;
        }
        *uint64_t v12 = *(_OWORD *)v13;
        *((_DWORD *)v12 + 4) = v13[4];
        *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
        v10((uint64_t)v12 + *(int *)(v14 + 32), (uint64_t)v13 + *(int *)(v14 + 32), v9);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        break;
      case 3u:
        long long v18 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0) + 40);
        goto LABEL_20;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
        goto LABEL_20;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0) + 32);
        goto LABEL_20;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
        uint64_t v19 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
        uint64_t v20 = v19[6];
        uint64_t v21 = (char *)(a1 + v20);
        uint64_t v22 = (char *)(a2 + v20);
        uint64_t v23 = sub_1DD047BF8();
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
        v68(v21, v22, v23);
        uint64_t v24 = v19[7];
        uint64_t v25 = (_OWORD *)(a1 + v24);
        uint64_t v26 = (_OWORD *)(a2 + v24);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v66 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v28 + 48);
        uint64_t v65 = v28;
        if (v66(v26, 1, v27))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          *uint64_t v25 = *v26;
          *((_DWORD *)v25 + 4) = *((_DWORD *)v26 + 4);
          *((_WORD *)v25 + 10) = *((_WORD *)v26 + 10);
          v68((char *)v25 + *(int *)(v27 + 32), (char *)v26 + *(int *)(v27 + 32), v23);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        }
        uint64_t v30 = v23;
        uint64_t v31 = v68;
        uint64_t v58 = v19[8];
        goto LABEL_26;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v32 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
        uint64_t v33 = v32[7];
        uint64_t v34 = (char *)(a1 + v33);
        uint64_t v35 = (char *)(a2 + v33);
        uint64_t v36 = sub_1DD047BF8();
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32);
        v69(v34, v35, v36);
        uint64_t v37 = v32[8];
        uint64_t v38 = (_OWORD *)(a1 + v37);
        uint64_t v39 = (_OWORD *)(a2 + v37);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        uint64_t v40 = *(void *)(v27 - 8);
        uint64_t v66 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v40 + 48);
        uint64_t v65 = v40;
        if (v66(v39, 1, v27))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          *uint64_t v38 = *v39;
          *((_DWORD *)v38 + 4) = *((_DWORD *)v39 + 4);
          *((_WORD *)v38 + 10) = *((_WORD *)v39 + 10);
          v69((char *)v38 + *(int *)(v27 + 32), (char *)v39 + *(int *)(v27 + 32), v36);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v27);
        }
        uint64_t v30 = v36;
        uint64_t v31 = v69;
        uint64_t v58 = v32[9];
LABEL_26:
        uint64_t v59 = (_OWORD *)(a1 + v58);
        uint64_t v13 = (_DWORD *)(a2 + v58);
        if (v66(v13, 1, v27))
        {
          size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08) - 8) + 64);
          uint64_t v17 = v59;
          goto LABEL_32;
        }
        *uint64_t v59 = *(_OWORD *)v13;
        *((_DWORD *)v59 + 4) = v13[4];
        *((_WORD *)v59 + 10) = *((_WORD *)v13 + 10);
        v31((char *)v59 + *(int *)(v27 + 32), (char *)v13 + *(int *)(v27 + 32), v30);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v65 + 56))(v59, 0, 1, v27);
        break;
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v42 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
        uint64_t v43 = *(int *)(v42 + 32);
        uint64_t v44 = a1 + v43;
        uint64_t v45 = a2 + v43;
        uint64_t v46 = sub_1DD047BF8();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32);
        v47(v44, v45, v46);
        uint64_t v70 = v42;
        uint64_t v48 = *(int *)(v42 + 36);
        uint64_t v49 = (_OWORD *)(a1 + v48);
        uint64_t v50 = (_OWORD *)(a2 + v48);
        uint64_t v51 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
        uint64_t v52 = *(void *)(v51 - 8);
        uint64_t v67 = v46;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
          memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          *uint64_t v49 = *v50;
          *((void *)v49 + 2) = *((void *)v50 + 2);
          *((_DWORD *)v49 + 6) = *((_DWORD *)v50 + 6);
          v47((uint64_t)v49 + *(int *)(v51 + 32), (uint64_t)v50 + *(int *)(v51 + 32), v46);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        uint64_t v60 = *(int *)(v70 + 40);
        uint64_t v61 = (void *)(a1 + v60);
        uint64_t v13 = (_DWORD *)(a2 + v60);
        uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
        uint64_t v63 = *(void *)(v62 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v63 + 48))(v13, 1, v62))
        {
          size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470) - 8) + 64);
          uint64_t v17 = v61;
LABEL_32:
          memcpy(v17, v13, v16);
        }
        else
        {
          *uint64_t v61 = *(void *)v13;
          v47((uint64_t)v61 + *(int *)(v62 + 20), (uint64_t)v13 + *(int *)(v62 + 20), v67);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v61, 0, 1, v62);
        }
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0) + 28);
        goto LABEL_20;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
        goto LABEL_19;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
LABEL_19:
        uint64_t v4 = *(int *)(v54 + 20);
        goto LABEL_20;
      default:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0)
                    + 32);
LABEL_20:
        uint64_t v55 = a1 + v4;
        uint64_t v56 = a2 + v4;
        uint64_t v57 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCF73B60()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(319);
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(319);
                        if (v12 <= 0x3F)
                        {
                          swift_initEnumMetadataMultiPayload();
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCF73E84(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCE09AC8();
  return MEMORY[0x1F4127160](a1, a2, v4);
}

void sub_1DCF73ED0()
{
  qword_1EAB1D280 = (uint64_t)&unk_1F38367A8;
}

uint64_t sub_1DCF73EE4@<X0>(void *a1@<X8>)
{
  if (qword_1EAB01FF0 != -1) {
    swift_once();
  }
  *a1 = qword_1EAB1D280;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCF73F50()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C758);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C758);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1DD05EA00;
  unint64_t v4 = v32 + v3;
  unint64_t v5 = v32 + v3 + v1[14];
  *(void *)(v32 + v3) = 1;
  *(void *)unint64_t v5 = "coarse_classification_domain_assignment_rule";
  *(void *)(v5 + 8) = 44;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x1E4F70FD0];
  uint64_t v7 = sub_1DD047FD8();
  unint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v32 + v3 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "object_detection_domain_assignment_rule";
  *(void *)(v9 + 8) = 39;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v32 + v3 + 2 * v2);
  unint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)unint64_t v11 = "fusion_domain_assignment_rule";
  *((void *)v11 + 1) = 29;
  v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v32 + v3 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 5;
  *(void *)uint64_t v13 = "url_match_domain_assignment_rule";
  *((void *)v13 + 1) = 32;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v32 + v3 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 6;
  *(void *)uint64_t v15 = "box_score_domain_assignment_rule";
  *((void *)v15 + 1) = 32;
  v15[16] = 2;
  v8();
  size_t v16 = (void *)(v32 + v3 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *size_t v16 = 8;
  *(void *)uint64_t v17 = "overlap_region_domain_assignment_rule";
  *((void *)v17 + 1) = 37;
  v17[16] = 2;
  v8();
  long long v18 = (void *)(v32 + v3 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *long long v18 = 9;
  *(void *)uint64_t v19 = "pets_head_torso_domain_assignment_rule";
  *((void *)v19 + 1) = 38;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v32 + v3 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 10;
  *(void *)uint64_t v21 = "nested_nature_region_domain_assignment_rule";
  *((void *)v21 + 1) = 43;
  v21[16] = 2;
  v8();
  uint64_t v22 = v32 + v3 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 11;
  *(void *)uint64_t v22 = "geofence_domain_assignment_rule";
  *(void *)(v22 + 8) = 31;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v32 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 12;
  *(void *)uint64_t v24 = "domain_prediction_domain_assignment_rule";
  *((void *)v24 + 1) = 40;
  v24[16] = 2;
  v8();
  uint64_t v25 = (void *)(v32 + v3 + 10 * v2);
  uint64_t v26 = (char *)v25 + v1[14];
  *uint64_t v25 = 13;
  *(void *)uint64_t v26 = "storefront_domain_assignment_rule";
  *((void *)v26 + 1) = 33;
  v26[16] = 2;
  v8();
  uint64_t v27 = (void *)(v32 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  *uint64_t v27 = 14;
  *(void *)uint64_t v28 = "custom_detection_domain_assignment_rule";
  *((void *)v28 + 1) = 39;
  v28[16] = 2;
  v8();
  uint64_t v29 = (void *)(v32 + v3 + 12 * v2);
  uint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 100;
  *(void *)uint64_t v30 = "image_source_type";
  *((void *)v30 + 1) = 17;
  v30[16] = 2;
  v8();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF743BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_1DCF74730(v5, a1, a2, a3);
        break;
      case 2:
        sub_1DCF74CA4(v5, a1, a2, a3);
        break;
      case 3:
        sub_1DCF75218(v5, a1, a2, a3);
        break;
      case 5:
        sub_1DCF7578C(v5, a1, a2, a3);
        break;
      case 6:
        sub_1DCF75D00(v5, a1, a2, a3);
        break;
      case 8:
        sub_1DCF76274(v5, a1, a2, a3);
        break;
      case 9:
        sub_1DCF767E8(v5, a1, a2, a3);
        break;
      case 10:
        sub_1DCF76D5C(v5, a1, a2, a3);
        break;
      case 11:
        sub_1DCF772D0(v5, a1, a2, a3);
        break;
      case 12:
        sub_1DCF77844(v5, a1, a2, a3);
        break;
      case 13:
        sub_1DCF77DB8(v5, a1, a2, a3);
        break;
      case 14:
        sub_1DCF7832C(v5, a1, a2, a3);
        break;
      case 100:
        sub_1DCF788A0();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_1DCF74730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EA0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
    uint64_t v31 = v47;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v32 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      uint64_t v31 = v47;
    }
    else
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE84EA0);
      sub_1DCF8982C((uint64_t)v16, v32, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
      sub_1DCF8982C(v32, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
      uint64_t v31 = v47;
      v39(v25, 0, 1, v47);
    }
  }
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE84E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE84EA0);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE84EA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v31) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE84EA0);
    return sub_1DCD2479C(v35, &qword_1EBE84EA0);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE84EA0);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF74CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84E68);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE84E68);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE84E48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE84E68);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, (uint64_t *)&unk_1EBE84E68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE84E68);
    return sub_1DCD2479C(v35, (uint64_t *)&unk_1EBE84E68);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE84E68);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF75218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84DB8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE84DB8);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE84D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE84DB8);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE84DB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE84DB8);
    return sub_1DCD2479C(v35, &qword_1EBE84DB8);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE84DB8);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF7578C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t matched = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(matched - 8);
  MEMORY[0x1F4188790](matched);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04598);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = matched;
  uint64_t v27 = matched;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EAB04598);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EAB044D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EAB04598);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EAB04598);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB04598);
    return sub_1DCD2479C(v35, &qword_1EAB04598);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB04598);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF75D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE863C8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE863C8);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE863B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE863C8);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE863C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE863C8);
    return sub_1DCD2479C(v35, &qword_1EBE863C8);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE863C8);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF76274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86760);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE86760);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE86740, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE86760);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE86760);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE86760);
    return sub_1DCD2479C(v35, &qword_1EBE86760);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE86760);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF767E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB045A0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A0);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EAB04488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A0);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EAB045A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A0);
    return sub_1DCD2479C(v35, &qword_1EAB045A0);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A0);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF76D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE867A0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE867A0);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE86780, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE867A0);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE867A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE867A0);
    return sub_1DCD2479C(v35, &qword_1EBE867A0);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE867A0);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF772D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864A8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE864A8);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE864A8);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE864A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE864A8);
    return sub_1DCD2479C(v35, &qword_1EBE864A8);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE864A8);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF77844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855C8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE855C8);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE855A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE855C8);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE855C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE855C8);
    return sub_1DCD2479C(v35, &qword_1EBE855C8);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE855C8);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF77DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86728);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE86728);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EBE86708, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE86728);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, (uint64_t *)&unk_1EBE86728);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE86728);
    return sub_1DCD2479C(v35, (uint64_t *)&unk_1EBE86728);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, (uint64_t *)&unk_1EBE86728);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF7832C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  size_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB045A8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE84D50);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84D50);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF8982C((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    sub_1DCF8982C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A8);
      sub_1DCF8982C((uint64_t)v16, v31, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
      sub_1DCF8982C(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCF69FA4((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF835BC(&qword_1EAB043E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A8);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EAB045A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A8);
    return sub_1DCD2479C(v35, &qword_1EAB045A8);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF8982C(v35, v42, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EAB045A8);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE84D50);
    sub_1DCF8982C(v36, v37, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF788A0()
{
  return sub_1DD047CE8();
}

uint64_t sub_1DCF78918()
{
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(v0, (uint64_t)v5, &qword_1EBE84D50);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1DCF78EE0(v0);
        goto LABEL_13;
      case 2u:
        sub_1DCF79104(v0);
        goto LABEL_13;
      case 3u:
        sub_1DCF79328(v0);
        goto LABEL_13;
      case 4u:
        sub_1DCF7954C(v0);
        goto LABEL_13;
      case 5u:
        sub_1DCF79770(v0);
        goto LABEL_13;
      case 6u:
        sub_1DCF79994(v0);
        goto LABEL_13;
      case 7u:
        sub_1DCF79BB8(v0);
        if (!v1) {
          goto LABEL_25;
        }
        return sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      case 8u:
        sub_1DCF79DDC(v0);
        if (!v1) {
          goto LABEL_25;
        }
        return sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      case 9u:
        sub_1DCF7A000(v0);
        if (!v1) {
          goto LABEL_25;
        }
        return sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      case 0xAu:
        sub_1DCF7A224(v0);
        if (v1) {
          return sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
        }
        goto LABEL_25;
      case 0xBu:
        sub_1DCF7A448(v0);
        if (v1) {
          return sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
        }
LABEL_25:
        sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
        break;
      default:
        sub_1DCF78CC0(v0);
LABEL_13:
        uint64_t v2 = v1;
        uint64_t result = sub_1DCF69FA4((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
        if (!v1) {
          break;
        }
        return result;
    }
  }
  uint64_t v7 = v0 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0) + 20);
  uint64_t v8 = *(void *)v7;
  if (!*(void *)v7) {
    return sub_1DD047BD8();
  }
  char v9 = *(unsigned char *)(v7 + 8);
  uint64_t v11 = v8;
  char v12 = v9;
  sub_1DCE09AC8();
  uint64_t result = sub_1DD047F18();
  if (!v2) {
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF78CC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE84E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF78EE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE84E48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79104(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE84D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79328(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
  MEMORY[0x1F4188790](matched);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EAB044D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF7954C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE863B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79770(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE86740, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79994(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EAB04488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79BB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE86780, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF79DDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF7A000(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE855A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF7A224(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EBE86708, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF7A448(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE84D50);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE84D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_1DCF8982C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
    sub_1DCF835BC(&qword_1EAB043E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
    sub_1DD047FC8();
    return sub_1DCF69FA4((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
  }
  uint64_t result = sub_1DCF69FA4((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  __break(1u);
  return result;
}

uint64_t sub_1DCF7A670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  uint64_t v5 = a2 + *(int *)(a1 + 20);
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7A6F8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_1DCF7A714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF743BC(a1, a2, a3);
}

uint64_t sub_1DCF7A72C()
{
  return sub_1DCF78918();
}

uint64_t sub_1DCF7A744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04590, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7A7C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84D68, (uint64_t)qword_1EBE9C758, a1);
}

uint64_t sub_1DCF7A7E4(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE84D70, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7A850()
{
  sub_1DCF835BC(&qword_1EBE84D70, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7A8D0()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C7F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C7F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "DEFAULT";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "STATIC_IMAGE";
  *(void *)(v10 + 8) = 12;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  char v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)char v12 = "PAUSED_VIDEO_FRAME";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "CAMERA_FRAME";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7AB04@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85240, (uint64_t)qword_1EBE9C7F0, a1);
}

uint64_t sub_1DCF7AB28()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C7A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C7A0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "label";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "threshold";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "is_less_than";
  *(void *)(v11 + 8) = 12;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7AD34()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_1DD047CD8();
          break;
        case 2:
          sub_1DD047D38();
          break;
        case 1:
          sub_1DD047DB8();
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7ADFC()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1DD047F88(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      if (*(unsigned char *)(v0 + 20) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7AEFC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7AF2C()
{
  return 0xD000000000000039;
}

uint64_t sub_1DCF7AF48()
{
  return sub_1DCF7AD34();
}

uint64_t sub_1DCF7AF60()
{
  return sub_1DCF7ADFC();
}

uint64_t sub_1DCF7AF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045B0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7AFF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84E18, (uint64_t)qword_1EBE9C7A0, a1);
}

uint64_t sub_1DCF7B018(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7B084()
{
  sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7B104()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C788);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C788);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "ontology_kg_id";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "threshold";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  char v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)char v12 = "exclude_descendants";
  *((void *)v12 + 1) = 19;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "is_less_than";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7B344()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1DD047DB8();
          break;
        case 2:
          sub_1DD047D38();
          break;
        case 3:
        case 4:
          sub_1DD047CD8();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7B444()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1DD047F88(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      if (*(unsigned char *)(v0 + 20) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
      {
        if (*(unsigned char *)(v0 + 21) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
        {
          type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          return sub_1DD047BD8();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7B56C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(_WORD *)(a1 + 20) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7B59C()
{
  return 0xD000000000000034;
}

uint64_t sub_1DCF7B5B8()
{
  return sub_1DCF7B344();
}

uint64_t sub_1DCF7B5D0()
{
  return sub_1DCF7B444();
}

uint64_t sub_1DCF7B5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7B664@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84DE0, (uint64_t)qword_1EBE9C788, a1);
}

uint64_t sub_1DCF7B688(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7B6F4()
{
  sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7B774()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C7D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C7D0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 2;
  *(void *)unint64_t v6 = "thresholds";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 4;
  *(void *)unint64_t v10 = "allowlist_detector_thresholds";
  *(void *)(v10 + 8) = 29;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  char v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 5;
  *(void *)char v12 = "denylist_detector_thresholds";
  *((void *)v12 + 1) = 28;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "reject_domain";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7B9B8()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
          sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
          goto LABEL_5;
        case 3:
          sub_1DD047CD8();
          break;
        case 4:
        case 5:
          type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_5:
          sub_1DD047DE8();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7BBA4()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
        sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (*(unsigned char *)(v0 + 24) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      if (!*(void *)(*(void *)(v0 + 8) + 16)
        || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
            sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
      {
        if (!*(void *)(*(void *)(v0 + 16) + 16)
          || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
              sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
        {
          type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
          return sub_1DD047BD8();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7BDA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = v1;
  *(unsigned char *)(a1 + 24) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7BDDC()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_1DCF7BDF8()
{
  return sub_1DCF7B9B8();
}

uint64_t sub_1DCF7BE10()
{
  return sub_1DCF7BBA4();
}

uint64_t sub_1DCF7BE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045C0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7BEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84E78, (uint64_t)qword_1EBE9C7D0, a1);
}

uint64_t sub_1DCF7BEC8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE84E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7BF34()
{
  sub_1DCF835BC(&qword_1EBE84E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7BFB4()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C7B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C7B8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 2;
  *(void *)unint64_t v6 = "thresholds";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)unint64_t v10 = "reject_domain";
  *((void *)v10 + 1) = 13;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "check_all_regions";
  *(void *)(v11 + 8) = 17;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7C1C0()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 4 || result == 3)
      {
        sub_1DD047CD8();
      }
      else if (result == 2)
      {
        type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
        sub_1DD047DE8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7C2F8()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
        sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (v0[8] != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      if (v0[9] != 1 || (uint64_t result = sub_1DD047F08(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7C444@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_WORD *)(a1 + 8) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7C474()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1DCF7C490()
{
  return sub_1DCF7C1C0();
}

uint64_t sub_1DCF7C4A8()
{
  return sub_1DCF7C2F8();
}

uint64_t sub_1DCF7C4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045C8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7C53C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84E40, (uint64_t)qword_1EBE9C7B8, a1);
}

uint64_t sub_1DCF7C560(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE84E48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7C5CC()
{
  sub_1DCF835BC(&qword_1EBE84E48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7C64C()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C660);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C660);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF60;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "thresholds";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "enable_location_check";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7C80C()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
        sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (v0[8] != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

unint64_t sub_1DCF7C928()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1DCF7C944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7DB50(a1, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold, &qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
}

uint64_t sub_1DCF7C9A0()
{
  return sub_1DCF7C80C();
}

uint64_t sub_1DCF7C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045D0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7CA34@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE82BC8, (uint64_t)qword_1EBE9C660, a1);
}

uint64_t sub_1DCF7CA58(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE82BD0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7CAC4()
{
  sub_1DCF835BC(&qword_1EBE82BD0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7CB40(uint64_t a1, uint64_t a2)
{
  return sub_1DCF8764C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFB4CDC, type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule) & 1;
}

uint64_t sub_1DCF7CB84()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C770);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C770);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 3;
  *(void *)unint64_t v6 = "coarse_thresholds";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "detector_threshold";
  *((void *)v10 + 1) = 18;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "reject_domain";
  *(void *)(v11 + 8) = 13;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7CD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1DD047CB8();
  uint64_t v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 4) {
        break;
      }
      if (result == 3)
      {
        type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
        sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
        uint64_t v12 = v11;
        sub_1DD047DE8();
        goto LABEL_5;
      }
      if (result == 2)
      {
        uint64_t v12 = v11;
        sub_1DCF7F0A8(a1, v5, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1DD047CB8();
    }
    uint64_t v12 = v11;
    sub_1DD047CD8();
LABEL_5:
    uint64_t v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1DCF7CED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1DCF7F2E0((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  if (!v4)
  {
    if (*(void *)(*(void *)v3 + 16))
    {
      type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
      sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      sub_1DD047FB8();
    }
    if (v3[8] == 1) {
      sub_1DD047F08();
    }
    type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF7D018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 8) = 0;
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

unint64_t sub_1DCF7D0AC()
{
  return 0xD000000000000031;
}

uint64_t sub_1DCF7D0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7CD88(a1, a2, a3);
}

uint64_t sub_1DCF7D0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7CED0(a1, a2, a3);
}

uint64_t sub_1DCF7D0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7D174@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84D90, (uint64_t)qword_1EBE9C770, a1);
}

uint64_t sub_1DCF7D198(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE84D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7D204()
{
  sub_1DCF835BC(&qword_1EBE84D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7D284()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EAB1D288);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAB1D288);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD0535E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "image_url_regexps";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "referral_url_regexps";
  *(void *)(v10 + 8) = 20;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "coarse_thresholds";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "detector_thresholds";
  *((void *)v14 + 1) = 19;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  size_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)size_t v16 = "only_for_whole_image";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "reject_domain";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7D540()
{
  uint64_t result = sub_1DD047CB8();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          uint64_t v4 = v3;
          sub_1DD047D68();
          goto LABEL_6;
        case 3:
          type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
          sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
          goto LABEL_5;
        case 4:
          type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_5:
          uint64_t v4 = v3;
          sub_1DD047DE8();
          goto LABEL_6;
        case 5:
        case 6:
          uint64_t v4 = v3;
          sub_1DD047CD8();
LABEL_6:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7D71C()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1DD047F68(), !v1))
  {
    if (!*(void *)(*(void *)(v0 + 8) + 16) || (uint64_t result = sub_1DD047F68(), !v1))
    {
      if (!*(void *)(*(void *)(v0 + 16) + 16)
        || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
            sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
      {
        if (!*(void *)(*(void *)(v0 + 24) + 16)
          || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
              sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
        {
          if (*(unsigned char *)(v0 + 32) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
          {
            if (*(unsigned char *)(v0 + 33) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
            {
              type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
              return sub_1DD047BD8();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7D924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v1;
  *(_WORD *)(a1 + 32) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7D958()
{
  return 0xD000000000000033;
}

uint64_t sub_1DCF7D974()
{
  return sub_1DCF7D540();
}

uint64_t sub_1DCF7D98C()
{
  return sub_1DCF7D71C();
}

uint64_t sub_1DCF7D9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045E0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7DA20@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(qword_1EAB01FF8, (uint64_t)qword_1EAB1D288, a1);
}

uint64_t sub_1DCF7DA44(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EAB044D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7DAB0()
{
  sub_1DCF835BC(&qword_1EAB044D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7DB30(uint64_t a1)
{
  return sub_1DCF7E0C4(a1, qword_1EBE9CCA0, (uint64_t)"box_score_ranges", 16, (uint64_t)"reject_domain");
}

uint64_t sub_1DCF7DB50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_1DD047CB8();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1DD047CD8();
      }
      else if (result == 1)
      {
        a4(0);
        sub_1DCF835BC(a5, a6);
        sub_1DD047DE8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7DC84()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0),
        sub_1DCF835BC(&qword_1EBE86388, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (v0[8] != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF7DDA0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a1 + 8) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7DDD0()
{
  return 0xD000000000000033;
}

uint64_t sub_1DCF7DDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7DB50(a1, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange, &qword_1EBE86388, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
}

uint64_t sub_1DCF7DE48()
{
  return sub_1DCF7DC84();
}

uint64_t sub_1DCF7DE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7DEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE863B0, (uint64_t)qword_1EBE9CCA0, a1);
}

uint64_t sub_1DCF7DF00(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE863B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7DF6C()
{
  sub_1DCF835BC(&qword_1EBE863B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7DFE8(uint64_t a1, uint64_t a2)
{
  return sub_1DCF8764C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFB7A08, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule) & 1;
}

uint64_t sub_1DCF7E02C()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1D2A0 = 0xD000000000000033;
  *(void *)algn_1EAB1D2A8 = 0x80000001DD06F600;
  return result;
}

uint64_t sub_1DCF7E0A4(uint64_t a1)
{
  return sub_1DCF7E0C4(a1, qword_1EBE9CC88, (uint64_t)"min_box_score", 13, (uint64_t)"max_box_score");
}

uint64_t sub_1DCF7E0C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1DD048008();
  __swift_allocate_value_buffer(v8, a2);
  __swift_project_value_buffer(v8, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  char v9 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v10 = *(void *)(*(void *)v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DD04EF60;
  uint64_t v13 = (void *)(v12 + v11);
  unint64_t v14 = v12 + v11 + v9[14];
  *uint64_t v13 = 1;
  *(void *)unint64_t v14 = a3;
  *(void *)(v14 + 8) = a4;
  *(unsigned char *)(v14 + 16) = 2;
  uint64_t v15 = *MEMORY[0x1E4F70FD0];
  uint64_t v16 = sub_1DD047FD8();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  uint64_t v18 = (char *)v13 + v10 + v9[14];
  *(void *)((char *)v13 + v10) = 2;
  *(void *)uint64_t v18 = a5;
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v17();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7E274()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_1DD047D38();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7E308()
{
  if (*v0 == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
  {
    if (v0[1] == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF7E3D0(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB02008, &qword_1EAB1D2A0);
}

uint64_t sub_1DCF7E3F8()
{
  return sub_1DCF7E274();
}

uint64_t sub_1DCF7E410()
{
  return sub_1DCF7E308();
}

uint64_t sub_1DCF7E428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045F0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7E4A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE86380, (uint64_t)qword_1EBE9CC88, a1);
}

uint64_t sub_1DCF7E4C8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86388, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7E534()
{
  sub_1DCF835BC(&qword_1EBE86388, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7E5B4()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CD18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CD18);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "detector_thresholds";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "iou_threshold";
  *(void *)(v10 + 8) = 13;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 4;
  *(void *)uint64_t v12 = "ioa_threshold";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)unint64_t v14 = "reject_domain";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7E7EC()
{
  uint64_t result = sub_1DD047CB8();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
          uint64_t v4 = v3;
          sub_1DD047DE8();
          goto LABEL_5;
        case 2:
        case 4:
          uint64_t v4 = v3;
          sub_1DD047D38();
          goto LABEL_5;
        case 3:
          uint64_t v4 = v3;
          sub_1DD047CD8();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7E954()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
        sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (*(float *)(v0 + 8) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      if (*(unsigned char *)(v0 + 16) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
      {
        if (*(float *)(v0 + 12) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
        {
          type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
          return sub_1DD047BD8();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCF7EACC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF7EAFC()
{
  return 0xD000000000000038;
}

uint64_t sub_1DCF7EB18()
{
  return sub_1DCF7E7EC();
}

uint64_t sub_1DCF7EB30()
{
  return sub_1DCF7E954();
}

uint64_t sub_1DCF7EB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB045F8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7EBC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE86738, (uint64_t)qword_1EBE9CD18, a1);
}

uint64_t sub_1DCF7EBE8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86740, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7EC54()
{
  sub_1DCF835BC(&qword_1EBE86740, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7ECD4()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EAB1D2B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAB1D2B0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "coarse_thresholds";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "torso_threshold";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "head_threshold";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)unint64_t v14 = "ioa_threshold";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7EF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1DD047CB8();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
          sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
          uint64_t v12 = v11;
          sub_1DD047DE8();
          goto LABEL_5;
        case 2:
          uint64_t v12 = v11;
          sub_1DCF7F0A8(a1, v5, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
          goto LABEL_5;
        case 3:
          uint64_t v12 = v11;
          sub_1DCF7FBD0(a1, v5, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
          goto LABEL_5;
        case 4:
          uint64_t v12 = v11;
          sub_1DD047D38();
LABEL_5:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7F0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF7F15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
        sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v4))
  {
    uint64_t result = sub_1DCF7F2E0((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
    if (!v4)
    {
      sub_1DCF7FECC((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule, 3);
      if (v3[2] != 0.0) {
        sub_1DD047F38();
      }
      type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF7F2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, double))
{
  v17[3] = a4;
  v17[1] = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a5(0, v12);
  sub_1DCD2889C(a1 + *(int *)(v15 + 28), (uint64_t)v9, &qword_1EBE84E08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_1DCD2479C((uint64_t)v9, &qword_1EBE84E08);
  }
  sub_1DCF8982C((uint64_t)v9, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DD047FC8();
  return sub_1DCF69FA4((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF7F4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(a2 + 8) = 0;
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 32);
  return v8(v6, 1, 1, v5);
}

unint64_t sub_1DCF7F5C4()
{
  return 0xD000000000000038;
}

uint64_t sub_1DCF7F5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7EF0C(a1, a2, a3);
}

uint64_t sub_1DCF7F5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7F15C(a1, a2, a3);
}

uint64_t sub_1DCF7F610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04600, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF7F68C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB02010, (uint64_t)qword_1EAB1D2B0, a1);
}

uint64_t sub_1DCF7F6B0(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EAB04488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF7F71C()
{
  sub_1DCF835BC(&qword_1EAB04488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF7F79C()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CD30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CD30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF00;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "coarse_thresholds";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  char v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "detector_threshold";
  *(void *)(v10 + 8) = 18;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  double v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)double v12 = "inner_detector_threshold";
  *((void *)v12 + 1) = 24;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)unint64_t v14 = "ioa_threshold";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "min_num_inner_objects";
  *(void *)(v15 + 8) = 21;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF7FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1DD047CB8();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
          sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
          uint64_t v12 = v11;
          sub_1DD047DE8();
          goto LABEL_5;
        case 2:
          uint64_t v12 = v11;
          sub_1DCF7FBD0(a1, v5, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
          goto LABEL_5;
        case 3:
          uint64_t v12 = v11;
          sub_1DCF7FC84();
          goto LABEL_5;
        case 4:
          uint64_t v12 = v11;
          sub_1DD047D38();
          goto LABEL_5;
        case 5:
          uint64_t v12 = v11;
          sub_1DD047D48();
LABEL_5:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF7FBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF7FC84()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF7FD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
        sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v4))
  {
    uint64_t result = sub_1DCF7FECC(v3, a1, a2, a3, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule, 2);
    if (!v4)
    {
      sub_1DCF800DC(v3, a1, a2, a3);
      if (*(float *)(v3 + 8) != 0.0) {
        sub_1DD047F38();
      }
      if (*(_DWORD *)(v3 + 12)) {
        sub_1DD047F48();
      }
      type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF7FECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, double), uint64_t a6)
{
  v18[0] = a6;
  v18[1] = a3;
  v18[3] = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a5(0, v13);
  sub_1DCD2889C(a1 + *(int *)(v16 + 32), (uint64_t)v10, &qword_1EBE84E08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1DCD2479C((uint64_t)v10, &qword_1EBE84E08);
  }
  sub_1DCF8982C((uint64_t)v10, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DD047FC8();
  return sub_1DCF69FA4((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF800DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  sub_1DCD2889C(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_1EBE84E08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DCD2479C((uint64_t)v7, &qword_1EBE84E08);
  }
  sub_1DCF8982C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DD047FC8();
  return sub_1DCF69FA4((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF802E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x1E4FBC860];
  a2[1] = 0;
  sub_1DD047BE8();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 36);
  return v8(v6, 1, 1, v5);
}

unint64_t sub_1DCF803B0()
{
  return 0xD00000000000003DLL;
}

uint64_t sub_1DCF803CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7FA20(a1, a2, a3);
}

uint64_t sub_1DCF803E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF7FD34(a1, a2, a3);
}

uint64_t sub_1DCF803FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04608, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF80478@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE86778, (uint64_t)qword_1EBE9CD30, a1);
}

uint64_t sub_1DCF8049C(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86780, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF80508()
{
  sub_1DCF835BC(&qword_1EBE86780, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF80588(uint64_t a1)
{
  return sub_1DCF830C4(a1, qword_1EBE9CD00, (uint64_t)"image_geolocation_error_threshold", 33, MEMORY[0x1E4F70FD0]);
}

uint64_t sub_1DCF805A8()
{
  if (*v0 == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
    return sub_1DD047BD8();
  }
  return result;
}

unint64_t sub_1DCF80640()
{
  return 0xD000000000000035;
}

uint64_t sub_1DCF8065C()
{
  return sub_1DCF805A8();
}

uint64_t sub_1DCF80674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04610, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF806F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(qword_1EBE85370, (uint64_t)qword_1EBE9CD00, a1);
}

uint64_t sub_1DCF80714(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86708, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF80780()
{
  sub_1DCF835BC(&qword_1EBE86708, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF80800(uint64_t a1)
{
  return sub_1DCF830C4(a1, qword_1EAB1D2C8, (uint64_t)"coordinates", 11, MEMORY[0x1E4F70FB8]);
}

uint64_t sub_1DCF80820()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1DD047CF8();
    }
  }
  return result;
}

uint64_t sub_1DCF80890()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1DD047EB8(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_Polygon(0);
    return sub_1DD047BD8();
  }
  return result;
}

unint64_t sub_1DCF80928()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1DCF80944()
{
  return sub_1DCF80820();
}

uint64_t sub_1DCF8095C()
{
  return sub_1DCF80890();
}

uint64_t sub_1DCF80974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04618, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF809F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(qword_1EAB02018, (uint64_t)qword_1EAB1D2C8, a1);
}

uint64_t sub_1DCF80A14(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE85AE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF80A80()
{
  sub_1DCF835BC(&qword_1EBE85AE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
  return sub_1DD047E68();
}

uint64_t sub_1DCF80AFC(char *a1, char *a2)
{
  return sub_1DCF89894(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFB799C, type metadata accessor for Argos_Protos_Queryflow_Polygon) & 1;
}

uint64_t sub_1DCF80B40()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CCE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CCE8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD0535E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "reject_domain_if_missing_location";
  *(void *)(v6 + 8) = 33;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "cell_config";
  *(void *)(v10 + 8) = 11;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "cell_level";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  double v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *double v13 = 5;
  *(void *)uint64_t v14 = "cell_levels";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 4;
  *(void *)uint64_t v16 = "prerequisite_domain";
  *((void *)v16 + 1) = 19;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "country_config";
  *((void *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF80DFC()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 4:
          sub_1DD047CD8();
          break;
        case 2:
          sub_1DCF80F3C();
          break;
        case 3:
          sub_1DD047D48();
          break;
        case 5:
          sub_1DD047D08();
          break;
        case 6:
          sub_1DCF80FEC();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF80F3C()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF80FEC()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF8109C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)v3 != 1 || (uint64_t result = sub_1DD047F08(), !v4))
  {
    uint64_t result = sub_1DCF81200(v3, a1, a2, a3);
    if (!v4)
    {
      if (*(_DWORD *)(v3 + 4)) {
        sub_1DD047F48();
      }
      if (*(unsigned char *)(v3 + 16) == 1) {
        sub_1DD047F08();
      }
      if (*(void *)(*(void *)(v3 + 8) + 16)) {
        sub_1DD047EC8();
      }
      sub_1DCF81404(v3, a1, a2, a3);
      type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF81200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  sub_1DCD2889C(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_1EBE86440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DCD2479C((uint64_t)v7, &qword_1EBE86440);
  }
  sub_1DCF8982C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  sub_1DCF835BC(&qword_1EBE86420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  sub_1DD047FC8();
  return sub_1DCF69FA4((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
}

uint64_t sub_1DCF81404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  sub_1DCD2889C(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_1EBE86470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DCD2479C((uint64_t)v7, &qword_1EBE86470);
  }
  sub_1DCF8982C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  sub_1DCF835BC(&qword_1EBE86450, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  sub_1DD047FC8();
  return sub_1DCF69FA4((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
}

uint64_t sub_1DCF81608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 0;
  *(_DWORD *)(a2 + 4) = 0;
  *(void *)(a2 + 8) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 16) = 0;
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 40);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

unint64_t sub_1DCF816F4()
{
  return 0xD000000000000033;
}

uint64_t sub_1DCF81710()
{
  return sub_1DCF80DFC();
}

uint64_t sub_1DCF81728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF8109C(a1, a2, a3);
}

uint64_t sub_1DCF81740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04620, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF817BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE86480, (uint64_t)qword_1EBE9CCE8, a1);
}

uint64_t sub_1DCF817E0(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF8184C()
{
  sub_1DCF835BC(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF818CC(uint64_t a1)
{
  return sub_1DCF818F4(a1, 0xD000000000000013, 0x80000001DD06F900, qword_1EAB1D2E0, &qword_1EAB1D2E0[1]);
}

uint64_t sub_1DCF818F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t result = sub_1DD048548();
  *a4 = 0xD000000000000033;
  *a5 = 0x80000001DD06F840;
  return result;
}

uint64_t sub_1DCF81960()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EAB1D2F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAB1D2F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "bloom_filter_data";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "num_of_hashes";
  *(void *)(v10 + 8) = 13;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "hash_seed";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  double v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *double v13 = 4;
  *(void *)uint64_t v14 = "num_of_bits";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF81B98()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1DD047D28();
          break;
        case 2:
        case 3:
        case 4:
          sub_1DD047DC8();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF81C88()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v3 = *(void *)(v0 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1DD047F28();
      if (!v1)
      {
LABEL_8:
        if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_1DD047F98(), !v1))
        {
          if (!*(_DWORD *)(v0 + 20) || (uint64_t result = sub_1DD047F98(), !v1))
          {
            if (!*(_DWORD *)(v0 + 24) || (uint64_t result = sub_1DD047F98(), !v1))
            {
              type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
              return sub_1DD047BD8();
            }
          }
        }
      }
      return result;
  }
}

uint64_t sub_1DCF81DE4@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1DD050130;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return sub_1DD047BE8();
}

uint64_t sub_1DCF81E18(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB02028, qword_1EAB1D2E0);
}

uint64_t sub_1DCF81E40()
{
  return sub_1DCF81B98();
}

uint64_t sub_1DCF81E58()
{
  return sub_1DCF81C88();
}

uint64_t sub_1DCF81E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04628, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF81EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB02030, (uint64_t)qword_1EAB1D2F0, a1);
}

uint64_t sub_1DCF81F10(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF81F7C()
{
  sub_1DCF835BC(&qword_1EBE86420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCF81FFC(uint64_t a1)
{
  return sub_1DCF818F4(a1, 0xD000000000000016, 0x80000001DD06F960, qword_1EAB1D308, &qword_1EAB1D308[1]);
}

uint64_t sub_1DCF82024(uint64_t a1)
{
  return sub_1DCF830C4(a1, qword_1EAB1D318, (uint64_t)"polygons", 8, MEMORY[0x1E4F70FB8]);
}

uint64_t sub_1DCF82044()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for Argos_Protos_Queryflow_Polygon(0);
        sub_1DCF835BC(&qword_1EBE85AE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
        sub_1DD047DE8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF82134()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_Polygon(0),
        sub_1DCF835BC(&qword_1EBE85AE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon), uint64_t result = sub_1DD047FB8(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF82220(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB02038, qword_1EAB1D308);
}

uint64_t sub_1DCF82248()
{
  return sub_1DCF82044();
}

uint64_t sub_1DCF82260()
{
  return sub_1DCF82134();
}

uint64_t sub_1DCF82278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04630, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF822F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB02040, (uint64_t)qword_1EAB1D318, a1);
}

uint64_t sub_1DCF82318(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86450, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF82384()
{
  sub_1DCF835BC(&qword_1EBE86450, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCF82400(char *a1, char *a2)
{
  return sub_1DCF89894(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFB76EC, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig) & 1;
}

uint64_t sub_1DCF82444()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CCD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CCD0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF60;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "domain";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "threshold";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF825FC()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1DD047D38();
      }
      else if (result == 1)
      {
        sub_1DD047DB8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF826A0()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = sub_1DD047F88(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

unint64_t sub_1DCF82770()
{
  return 0xD000000000000033;
}

uint64_t sub_1DCF8278C()
{
  return sub_1DCF825FC();
}

uint64_t sub_1DCF827A4()
{
  return sub_1DCF826A0();
}

uint64_t sub_1DCF827BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04638, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF82838@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85358, (uint64_t)qword_1EBE9CCD0, a1);
}

uint64_t sub_1DCF8285C(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE86400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF828C8()
{
  sub_1DCF835BC(&qword_1EBE86400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
  return sub_1DD047E68();
}

uint64_t sub_1DCF82948()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C8D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C8D0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 1;
  *(void *)unint64_t v6 = "domain_thresholds";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "detector_thresholds";
  *((void *)v10 + 1) = 19;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "coarse_thresholds";
  *(void *)(v11 + 8) = 17;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF82B4C()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
        sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0);
        sub_1DCF835BC(&qword_1EBE86400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1DD047CB8();
    }
    type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
    sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
LABEL_5:
    sub_1DD047DE8();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1DCF82CF0()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0),
        sub_1DCF835BC(&qword_1EBE86400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0),
          sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
    {
      if (!*(void *)(v0[2] + 16)
        || (type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0),
            sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold), uint64_t result = sub_1DD047FB8(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

unint64_t sub_1DCF82ECC()
{
  return 0xD00000000000003BLL;
}

uint64_t sub_1DCF82EE8()
{
  return sub_1DCF82B4C();
}

uint64_t sub_1DCF82F00()
{
  return sub_1DCF82CF0();
}

uint64_t sub_1DCF82F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04640, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF82F94@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE855A0, (uint64_t)qword_1EBE9C8D0, a1);
}

uint64_t sub_1DCF82FB8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EBE855A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF83024()
{
  sub_1DCF835BC(&qword_1EBE855A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF830A4(uint64_t a1)
{
  return sub_1DCF830C4(a1, qword_1EAB1D330, (uint64_t)"reject_domain", 13, MEMORY[0x1E4F70FD0]);
}

uint64_t sub_1DCF830C4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = sub_1DD048008();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v10 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DD04E910;
  unint64_t v13 = v12 + v11 + v10[14];
  *(void *)(v12 + v11) = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *a5;
  uint64_t v15 = sub_1DD047FD8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  return sub_1DD047FE8();
}

uint64_t sub_1DCF83224()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1DD047CD8();
    }
  }
  return result;
}

uint64_t sub_1DCF83294()
{
  if (*v0 != 1 || (uint64_t result = sub_1DD047F08(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF83330@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF83354()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_1DCF83370()
{
  return sub_1DCF83224();
}

uint64_t sub_1DCF83388()
{
  return sub_1DCF83294();
}

uint64_t sub_1DCF833A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF835BC(&qword_1EAB04648, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF8341C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB02048, (uint64_t)qword_1EAB1D330, a1);
}

uint64_t sub_1DCF83440(uint64_t a1)
{
  uint64_t v2 = sub_1DCF835BC(&qword_1EAB043E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF834AC()
{
  sub_1DCF835BC(&qword_1EAB043E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
  return sub_1DD047E68();
}

uint64_t sub_1DCF8352C()
{
  return sub_1DCF835BC(&qword_1EAB043E0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF83574()
{
  return sub_1DCF835BC(&qword_1EAB043E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF835BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF83604()
{
  return sub_1DCF835BC(&qword_1EAB043F0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF8364C()
{
  return sub_1DCF835BC(&qword_1EAB043F8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF83694()
{
  return sub_1DCF835BC(&qword_1EAB04400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
}

uint64_t sub_1DCF836DC()
{
  return sub_1DCF835BC(&qword_1EBE855A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
}

uint64_t sub_1DCF83724()
{
  return sub_1DCF835BC(&qword_1EAB04408, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
}

uint64_t sub_1DCF8376C()
{
  return sub_1DCF835BC(&qword_1EBE855B0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
}

uint64_t sub_1DCF837B4()
{
  return sub_1DCF835BC(&qword_1EAB04410, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86410);
}

uint64_t sub_1DCF8381C()
{
  return sub_1DCF835BC(&qword_1EBE86400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
}

uint64_t sub_1DCF83864()
{
  return sub_1DCF835BC(&qword_1EAB04418, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
}

uint64_t sub_1DCF838AC()
{
  return sub_1DCF835BC(&qword_1EBE86408, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
}

uint64_t sub_1DCF838F4()
{
  return sub_1DCF835BC(&qword_1EAB04420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
}

uint64_t sub_1DCF8393C()
{
  return sub_1DCF835BC(&qword_1EBE86450, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
}

uint64_t sub_1DCF83984()
{
  return sub_1DCF835BC(&qword_1EAB04428, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
}

uint64_t sub_1DCF839CC()
{
  return sub_1DCF835BC(&qword_1EBE86458, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
}

uint64_t sub_1DCF83A14()
{
  return sub_1DCF835BC(&qword_1EAB04430, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
}

uint64_t sub_1DCF83A5C()
{
  return sub_1DCF835BC(&qword_1EBE86420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
}

uint64_t sub_1DCF83AA4()
{
  return sub_1DCF835BC(&qword_1EAB04438, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
}

uint64_t sub_1DCF83AEC()
{
  return sub_1DCF835BC(&qword_1EBE86428, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
}

uint64_t sub_1DCF83B34()
{
  return sub_1DCF835BC(&qword_1EAB04440, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
}

uint64_t sub_1DCF83B7C()
{
  return sub_1DCF835BC(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
}

uint64_t sub_1DCF83BC4()
{
  return sub_1DCF835BC(&qword_1EAB04448, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
}

uint64_t sub_1DCF83C0C()
{
  return sub_1DCF835BC(&qword_1EBE86490, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
}

uint64_t sub_1DCF83C54()
{
  return sub_1DCF835BC(&qword_1EAB04450, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_Polygon(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85AF8);
}

uint64_t sub_1DCF83CBC()
{
  return sub_1DCF835BC(&qword_1EBE85AE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
}

uint64_t sub_1DCF83D04()
{
  return sub_1DCF835BC(&qword_1EAB04458, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
}

uint64_t sub_1DCF83D4C()
{
  return sub_1DCF835BC(&qword_1EBE85AF0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_Polygon);
}

uint64_t sub_1DCF83D94()
{
  return sub_1DCF835BC(&qword_1EAB04460, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
}

uint64_t sub_1DCF83DDC()
{
  return sub_1DCF835BC(&qword_1EBE86708, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
}

uint64_t sub_1DCF83E24()
{
  return sub_1DCF835BC(&qword_1EAB04468, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
}

uint64_t sub_1DCF83E6C()
{
  return sub_1DCF835BC(&qword_1EBE86710, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
}

uint64_t sub_1DCF83EB4()
{
  return sub_1DCF835BC(&qword_1EAB04470, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
}

uint64_t sub_1DCF83EFC()
{
  return sub_1DCF835BC(&qword_1EBE86780, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
}

uint64_t sub_1DCF83F44()
{
  return sub_1DCF835BC(&qword_1EAB04478, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
}

uint64_t sub_1DCF83F8C()
{
  return sub_1DCF835BC(&qword_1EBE86788, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
}

uint64_t sub_1DCF83FD4()
{
  return sub_1DCF835BC(&qword_1EAB04480, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
}

uint64_t sub_1DCF8401C()
{
  return sub_1DCF835BC(&qword_1EAB04488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
}

uint64_t sub_1DCF84064()
{
  return sub_1DCF835BC(&qword_1EAB04490, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
}

uint64_t sub_1DCF840AC()
{
  return sub_1DCF835BC(&qword_1EAB04498, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
}

uint64_t sub_1DCF840F4()
{
  return sub_1DCF835BC(&qword_1EAB044A0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
}

uint64_t sub_1DCF8413C()
{
  return sub_1DCF835BC(&qword_1EBE86740, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
}

uint64_t sub_1DCF84184()
{
  return sub_1DCF835BC(&qword_1EAB044A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
}

uint64_t sub_1DCF841CC()
{
  return sub_1DCF835BC(&qword_1EBE86748, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
}

uint64_t sub_1DCF84214()
{
  return sub_1DCF835BC(&qword_1EAB044B0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(uint64_t a1)
{
  return sub_1DCD27FD4(a1, qword_1EBE86398);
}

uint64_t sub_1DCF8427C()
{
  return sub_1DCF835BC(&qword_1EBE86388, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
}

uint64_t sub_1DCF842C4()
{
  return sub_1DCF835BC(&qword_1EAB044B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
}

uint64_t sub_1DCF8430C()
{
  return sub_1DCF835BC((unint64_t *)&qword_1EBE86390, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
}

uint64_t sub_1DCF84354()
{
  return sub_1DCF835BC(&qword_1EAB044C0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
}

uint64_t sub_1DCF8439C()
{
  return sub_1DCF835BC(&qword_1EBE863B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
}

uint64_t sub_1DCF843E4()
{
  return sub_1DCF835BC(&qword_1EAB044C8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
}

uint64_t sub_1DCF8442C()
{
  return sub_1DCF835BC(&qword_1EBE863C0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
}

uint64_t sub_1DCF84474()
{
  return sub_1DCF835BC(&qword_1EAB044D0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
}

uint64_t sub_1DCF844BC()
{
  return sub_1DCF835BC(&qword_1EAB044D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
}

uint64_t sub_1DCF84504()
{
  return sub_1DCF835BC(&qword_1EAB044E0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
}

uint64_t sub_1DCF8454C()
{
  return sub_1DCF835BC(&qword_1EAB044E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
}

uint64_t sub_1DCF84594()
{
  return sub_1DCF835BC(&qword_1EAB044F0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
}

uint64_t sub_1DCF845DC()
{
  return sub_1DCF835BC(&qword_1EBE84D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
}

uint64_t sub_1DCF84624()
{
  return sub_1DCF835BC(&qword_1EAB044F8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
}

uint64_t sub_1DCF8466C()
{
  return sub_1DCF835BC(&qword_1EBE84DA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
}

uint64_t sub_1DCF846B4()
{
  return sub_1DCF835BC(&qword_1EAB04500, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE82BE0);
}

uint64_t sub_1DCF8471C()
{
  return sub_1DCF835BC(&qword_1EBE82BD0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
}

uint64_t sub_1DCF84764()
{
  return sub_1DCF835BC(&qword_1EAB04508, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
}

uint64_t sub_1DCF847AC()
{
  return sub_1DCF835BC(&qword_1EBE82BD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_NaturalLandmarkDomainAssignmentRule);
}

uint64_t sub_1DCF847F4()
{
  return sub_1DCF835BC(&qword_1EAB04510, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF8483C()
{
  return sub_1DCF835BC(&qword_1EBE84E48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF84884()
{
  return sub_1DCF835BC(&qword_1EAB04518, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF848CC()
{
  return sub_1DCF835BC(&qword_1EBE84E50, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
}

uint64_t sub_1DCF84914()
{
  return sub_1DCF835BC(&qword_1EAB04520, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
}

uint64_t sub_1DCF8495C()
{
  return sub_1DCF835BC(&qword_1EBE84E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
}

uint64_t sub_1DCF849A4()
{
  return sub_1DCF835BC(&qword_1EAB04528, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
}

uint64_t sub_1DCF849EC()
{
  return sub_1DCF835BC(&qword_1EBE84E88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
}

uint64_t sub_1DCF84A34()
{
  return sub_1DCF835BC(&qword_1EAB04530, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF84A7C()
{
  return sub_1DCF835BC((unint64_t *)&qword_1EBE84DE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF84AC4()
{
  return sub_1DCF835BC(&qword_1EAB04538, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF84B0C()
{
  return sub_1DCF835BC(&qword_1EBE84DF0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

uint64_t sub_1DCF84B54()
{
  return sub_1DCF835BC(&qword_1EAB04540, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84E30);
}

uint64_t sub_1DCF84BBC()
{
  return sub_1DCF835BC(&qword_1EBE84E20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
}

uint64_t sub_1DCF84C04()
{
  return sub_1DCF835BC(&qword_1EAB04548, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
}

uint64_t sub_1DCF84C4C()
{
  return sub_1DCF835BC(&qword_1EBE84E28, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
}

uint64_t sub_1DCF84C94()
{
  return sub_1DCF835BC(&qword_1EAB04550, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
}

uint64_t sub_1DCF84CDC()
{
  return sub_1DCF835BC(&qword_1EBE84D70, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
}

uint64_t sub_1DCF84D24()
{
  return sub_1DCF835BC(&qword_1EAB04558, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
}

uint64_t sub_1DCF84D6C()
{
  return sub_1DCF835BC((unint64_t *)&qword_1EBE84D78, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
}

unint64_t sub_1DCF84DB8()
{
  unint64_t result = qword_1EAB04560;
  if (!qword_1EAB04560)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB04568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04560);
  }
  return result;
}

uint64_t sub_1DCF84E14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v73 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = &v62[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v70 = &v62[-v8];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v72 = &v62[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB031B8);
  MEMORY[0x1F4188790](v12);
  uint64_t v74 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v62[-v15];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v71 = &v62[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = &v62[-v20];
  MEMORY[0x1F4188790](v21);
  uint64_t v77 = &v62[-v22];
  MEMORY[0x1F4188790](v23);
  uint64_t v75 = &v62[-v24];
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = &v62[-v26];
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = &v62[-v29];
  if ((sub_1DCFB4CDC(*a1, *a2) & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v68 = v6;
  uint64_t v64 = v4;
  uint64_t v31 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v32 = *(int *)(v31 + 32);
  uint64_t v66 = a1;
  sub_1DCD2889C((uint64_t)a1 + v32, (uint64_t)v30, &qword_1EBE84E08);
  uint64_t v69 = v31;
  uint64_t v33 = *(int *)(v31 + 32);
  uint64_t v67 = a2;
  sub_1DCD2889C((uint64_t)a2 + v33, (uint64_t)v27, &qword_1EBE84E08);
  uint64_t v65 = v12;
  uint64_t v34 = (uint64_t)&v16[*(int *)(v12 + 48)];
  sub_1DCD2889C((uint64_t)v30, (uint64_t)v16, &qword_1EBE84E08);
  sub_1DCD2889C((uint64_t)v27, v34, &qword_1EBE84E08);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v36 = v9;
  if (v35((uint64_t)v16, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v30, &qword_1EBE84E08);
    if (v35(v34, 1, v9) == 1)
    {
      sub_1DCD2479C((uint64_t)v16, &qword_1EBE84E08);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v38 = (uint64_t)v16;
LABEL_15:
    sub_1DCD2479C(v38, &qword_1EAB031B8);
    goto LABEL_16;
  }
  uint64_t v37 = v75;
  sub_1DCD2889C((uint64_t)v16, (uint64_t)v75, &qword_1EBE84E08);
  if (v35(v34, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v30, &qword_1EBE84E08);
    sub_1DCF69FA4((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_7;
  }
  uint64_t v39 = v72;
  sub_1DCF8982C(v34, (uint64_t)v72, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  int v63 = sub_1DCF87F28((uint64_t)v37, (uint64_t)v39);
  sub_1DCF69FA4((uint64_t)v39, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCD2479C((uint64_t)v27, &qword_1EBE84E08);
  sub_1DCD2479C((uint64_t)v30, &qword_1EBE84E08);
  sub_1DCF69FA4((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCD2479C((uint64_t)v16, &qword_1EBE84E08);
  if ((v63 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v40 = v69;
  uint64_t v41 = v66;
  uint64_t v42 = v77;
  sub_1DCD2889C((uint64_t)v66 + *(int *)(v69 + 36), (uint64_t)v77, &qword_1EBE84E08);
  uint64_t v43 = v67;
  uint64_t v44 = v76;
  sub_1DCD2889C((uint64_t)v67 + *(int *)(v40 + 36), (uint64_t)v76, &qword_1EBE84E08);
  uint64_t v45 = v74;
  uint64_t v46 = (uint64_t)&v74[*(int *)(v65 + 48)];
  sub_1DCD2889C((uint64_t)v42, (uint64_t)v74, &qword_1EBE84E08);
  sub_1DCD2889C((uint64_t)v44, v46, &qword_1EBE84E08);
  if (v35((uint64_t)v45, 1, v36) != 1)
  {
    uint64_t v50 = v71;
    sub_1DCD2889C((uint64_t)v45, (uint64_t)v71, &qword_1EBE84E08);
    unsigned int v51 = v35(v46, 1, v36);
    uint64_t v48 = v73;
    uint64_t v49 = v68;
    if (v51 != 1)
    {
      uint64_t v54 = v72;
      sub_1DCF8982C(v46, (uint64_t)v72, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      char v55 = sub_1DCF87F28((uint64_t)v50, (uint64_t)v54);
      sub_1DCF69FA4((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C((uint64_t)v76, &qword_1EBE84E08);
      sub_1DCD2479C((uint64_t)v77, &qword_1EBE84E08);
      sub_1DCF69FA4((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C((uint64_t)v45, &qword_1EBE84E08);
      if ((v55 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_19;
    }
    sub_1DCD2479C((uint64_t)v76, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v77, &qword_1EBE84E08);
    sub_1DCF69FA4((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_14;
  }
  sub_1DCD2479C((uint64_t)v44, &qword_1EBE84E08);
  sub_1DCD2479C((uint64_t)v42, &qword_1EBE84E08);
  unsigned int v47 = v35(v46, 1, v36);
  uint64_t v48 = v73;
  uint64_t v49 = v68;
  if (v47 != 1)
  {
LABEL_14:
    uint64_t v38 = (uint64_t)v45;
    goto LABEL_15;
  }
  sub_1DCD2479C((uint64_t)v45, &qword_1EBE84E08);
LABEL_19:
  if (*((float *)v41 + 2) == *((float *)v43 + 2) && *((_DWORD *)v41 + 3) == *((_DWORD *)v43 + 3))
  {
    uint64_t v57 = v69;
    uint64_t v56 = v70;
    uint64_t v58 = (uint64_t)v41 + *(int *)(v69 + 28);
    uint64_t v59 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 16);
    uint64_t v60 = v64;
    v59(v70, v58, v64);
    v59(v49, (uint64_t)v43 + *(int *)(v57 + 28), v60);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v52 = sub_1DD0483B8();
    uint64_t v61 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
    v61(v49, v60);
    v61(v56, v60);
    return v52 & 1;
  }
LABEL_16:
  char v52 = 0;
  return v52 & 1;
}

uint64_t sub_1DCF85600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCFB4F40(*(void *)a1, *(void *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9))
  {
    uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1 + *(int *)(v13 + 28), v4);
    v14(v7, a2 + *(int *)(v13 + 28), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCF857D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2)
  {
    uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
    uint64_t v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, &a1[*(int *)(v12 + 20)], v4);
    v13(v7, &a2[*(int *)(v12 + 20)], v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCF85990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (*(float *)(a1 + 16) == *(float *)(a2 + 16) && *(unsigned __int8 *)(a1 + 20) == *(unsigned __int8 *)(a2 + 20))
    {
      uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 28), v4);
      v14(v7, a2 + *(int *)(v13 + 28), v4);
      sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v7, v4);
      v15(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_1DCF85B7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v3 = sub_1DD047BF8();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v75 = &v66[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = &v66[-v6];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v79 = *(uint64_t **)(v7 - 8);
  uint64_t v80 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB031B8);
  MEMORY[0x1F4188790](v81);
  uint64_t v10 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v66[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = &v66[-v18];
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = &v66[-v21];
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = &v66[-v24];
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = &v66[-v27];
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = &v66[-v30];
  uint64_t v32 = a1;
  uint64_t v33 = *a1;
  uint64_t v34 = v82;
  if ((sub_1DCFB4CDC(v33, *(void *)v82) & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v72 = v25;
  uint64_t v73 = v19;
  uint64_t v68 = v16;
  uint64_t v69 = v22;
  uint64_t v70 = v10;
  uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  sub_1DCD2889C((uint64_t)v32 + *(int *)(v35 + 28), (uint64_t)v31, &qword_1EBE84E08);
  uint64_t v71 = v35;
  sub_1DCD2889C(v34 + *(int *)(v35 + 28), (uint64_t)v28, &qword_1EBE84E08);
  uint64_t v36 = v81;
  uint64_t v37 = (uint64_t)&v13[*(int *)(v81 + 48)];
  sub_1DCD2889C((uint64_t)v31, (uint64_t)v13, &qword_1EBE84E08);
  sub_1DCD2889C((uint64_t)v28, v37, &qword_1EBE84E08);
  uint64_t v38 = v80;
  uint64_t v39 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v79[6];
  int v40 = v39(v13, 1, v80);
  uint64_t v79 = v32;
  if (v40 == 1)
  {
    uint64_t v41 = v36;
    uint64_t v42 = v13;
    sub_1DCD2479C((uint64_t)v28, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v31, &qword_1EBE84E08);
    if (v39((unsigned char *)v37, 1, v38) == 1)
    {
      sub_1DCD2479C((uint64_t)v13, &qword_1EBE84E08);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v46 = (uint64_t)v42;
LABEL_15:
    sub_1DCD2479C(v46, &qword_1EAB031B8);
    goto LABEL_16;
  }
  uint64_t v43 = (uint64_t)v72;
  sub_1DCD2889C((uint64_t)v13, (uint64_t)v72, &qword_1EBE84E08);
  int v44 = v39((unsigned char *)v37, 1, v38);
  uint64_t v45 = v78;
  if (v44 == 1)
  {
    uint64_t v42 = v13;
    sub_1DCD2479C((uint64_t)v28, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v31, &qword_1EBE84E08);
    sub_1DCF69FA4(v43, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_7;
  }
  sub_1DCF8982C(v37, (uint64_t)v78, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  int v67 = sub_1DCF87F28(v43, (uint64_t)v45);
  sub_1DCF69FA4((uint64_t)v45, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCD2479C((uint64_t)v28, &qword_1EBE84E08);
  sub_1DCD2479C((uint64_t)v31, &qword_1EBE84E08);
  sub_1DCF69FA4(v43, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  sub_1DCD2479C((uint64_t)v13, &qword_1EBE84E08);
  uint64_t v41 = v81;
  if ((v67 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v47 = v71;
  uint64_t v48 = (uint64_t)v69;
  sub_1DCD2889C((uint64_t)v79 + *(int *)(v71 + 32), (uint64_t)v69, &qword_1EBE84E08);
  uint64_t v49 = (uint64_t)v73;
  sub_1DCD2889C(v82 + *(int *)(v47 + 32), (uint64_t)v73, &qword_1EBE84E08);
  uint64_t v50 = (uint64_t)v70;
  uint64_t v51 = (uint64_t)&v70[*(int *)(v41 + 48)];
  sub_1DCD2889C(v48, (uint64_t)v70, &qword_1EBE84E08);
  sub_1DCD2889C(v49, v51, &qword_1EBE84E08);
  if (v39((unsigned char *)v50, 1, v38) != 1)
  {
    uint64_t v52 = (uint64_t)v68;
    sub_1DCD2889C(v50, (uint64_t)v68, &qword_1EBE84E08);
    if (v39((unsigned char *)v51, 1, v38) != 1)
    {
      char v55 = v78;
      sub_1DCF8982C(v51, (uint64_t)v78, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      char v56 = sub_1DCF87F28(v52, (uint64_t)v55);
      sub_1DCF69FA4((uint64_t)v55, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C((uint64_t)v73, &qword_1EBE84E08);
      sub_1DCD2479C(v48, &qword_1EBE84E08);
      sub_1DCF69FA4(v52, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C(v50, &qword_1EBE84E08);
      if ((v56 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_19;
    }
    sub_1DCD2479C((uint64_t)v73, &qword_1EBE84E08);
    sub_1DCD2479C(v48, &qword_1EBE84E08);
    sub_1DCF69FA4(v52, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_14;
  }
  sub_1DCD2479C(v49, &qword_1EBE84E08);
  sub_1DCD2479C(v48, &qword_1EBE84E08);
  if (v39((unsigned char *)v51, 1, v38) != 1)
  {
LABEL_14:
    uint64_t v46 = v50;
    goto LABEL_15;
  }
  sub_1DCD2479C(v50, &qword_1EBE84E08);
LABEL_19:
  uint64_t v57 = v82;
  if (*((float *)v79 + 2) == *(float *)(v82 + 8))
  {
    uint64_t v58 = v71;
    uint64_t v60 = v76;
    uint64_t v59 = v77;
    uint64_t v61 = *(void (**)(unsigned char *, char *, uint64_t))(v76 + 16);
    uint64_t v62 = v74;
    v61(v74, (char *)v79 + *(int *)(v71 + 24), v77);
    int v63 = (char *)(v57 + *(int *)(v58 + 24));
    uint64_t v64 = v75;
    v61(v75, v63, v59);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v53 = sub_1DD0483B8();
    uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v60 + 8);
    v65(v64, v59);
    v65(v62, v59);
    return v53 & 1;
  }
LABEL_16:
  char v53 = 0;
  return v53 & 1;
}

uint64_t sub_1DCF86370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCFB4F40(*(void *)a1, *(void *)a2) & 1) != 0
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
  {
    uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1 + *(int *)(v13 + 32), v4);
    v14(v7, a2 + *(int *)(v13 + 32), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCF86558(float *a1, float *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2)
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 20), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 20), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF86710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCFB51B4(*(void **)a1, *(void **)a2) & 1) != 0
    && (sub_1DCFB51B4(*(void **)(a1 + 8), *(void **)(a2 + 8)) & 1) != 0
    && (sub_1DCFB4CDC(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0
    && (sub_1DCFB4F40(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) != 0
    && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)
    && *(unsigned __int8 *)(a1 + 33) == *(unsigned __int8 *)(a2 + 33))
  {
    uint64_t matched = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1 + *(int *)(matched + 40), v4);
    v14(v7, a2 + *(int *)(matched + 40), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCF86918(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v81 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v80 = (char *)&v71 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v79 = (uint64_t *)((char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04580);
  MEMORY[0x1F4188790](v89);
  uint64_t v86 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
  MEMORY[0x1F4188790](v11 - 8);
  char v13 = (uint64_t *)((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v71 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v71 - v18;
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v87 = *(void *)(v20 - 8);
  uint64_t v88 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04588);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
  MEMORY[0x1F4188790](v26 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v71 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v71 - v32;
  if (*a1 != *a2) {
    goto LABEL_13;
  }
  uint64_t v78 = v31;
  uint64_t v74 = v19;
  uint64_t v75 = v22;
  uint64_t v72 = v13;
  uint64_t v73 = v16;
  uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v35 = *(int *)(v34 + 36);
  uint64_t v76 = a1;
  sub_1DCD2889C((uint64_t)&a1[v35], (uint64_t)v33, &qword_1EBE86440);
  uint64_t v36 = *(int *)(v34 + 36);
  uint64_t v77 = a2;
  sub_1DCD2889C((uint64_t)&a2[v36], (uint64_t)v29, &qword_1EBE86440);
  uint64_t v37 = (uint64_t)&v25[*(int *)(v23 + 48)];
  sub_1DCD2889C((uint64_t)v33, (uint64_t)v25, &qword_1EBE86440);
  sub_1DCD2889C((uint64_t)v29, v37, &qword_1EBE86440);
  uint64_t v38 = v88;
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v39((uint64_t)v25, 1, v88) == 1)
  {
    sub_1DCD2479C((uint64_t)v29, &qword_1EBE86440);
    sub_1DCD2479C((uint64_t)v33, &qword_1EBE86440);
    int v40 = v39(v37, 1, v38);
    uint64_t v41 = v89;
    if (v40 == 1)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE86440);
      goto LABEL_10;
    }
LABEL_7:
    int v44 = &qword_1EAB04588;
    uint64_t v45 = (uint64_t)v25;
LABEL_8:
    sub_1DCD2479C(v45, v44);
    goto LABEL_13;
  }
  uint64_t v42 = v78;
  sub_1DCD2889C((uint64_t)v25, v78, &qword_1EBE86440);
  int v43 = v39(v37, 1, v38);
  uint64_t v41 = v89;
  if (v43 == 1)
  {
    sub_1DCD2479C((uint64_t)v29, &qword_1EBE86440);
    sub_1DCD2479C((uint64_t)v33, &qword_1EBE86440);
    sub_1DCF69FA4(v42, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
    goto LABEL_7;
  }
  uint64_t v46 = (uint64_t)v75;
  sub_1DCF8982C(v37, (uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  char v47 = sub_1DCF87288(v42, v46);
  sub_1DCF69FA4(v46, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  sub_1DCD2479C((uint64_t)v29, &qword_1EBE86440);
  sub_1DCD2479C((uint64_t)v33, &qword_1EBE86440);
  sub_1DCF69FA4(v42, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
  sub_1DCD2479C((uint64_t)v25, &qword_1EBE86440);
  if ((v47 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v49 = v76;
  uint64_t v48 = v77;
  if (*((_DWORD *)v76 + 1) != *((_DWORD *)v77 + 1)
    || !sub_1DCFB76E8(*((void *)v76 + 1), *((void *)v77 + 1))
    || v49[16] != v48[16])
  {
    goto LABEL_13;
  }
  uint64_t v52 = (uint64_t)v74;
  sub_1DCD2889C((uint64_t)&v49[*(int *)(v34 + 40)], (uint64_t)v74, &qword_1EBE86470);
  uint64_t v53 = (uint64_t)v73;
  sub_1DCD2889C((uint64_t)&v48[*(int *)(v34 + 40)], (uint64_t)v73, &qword_1EBE86470);
  uint64_t v54 = v86;
  uint64_t v55 = v86 + *(int *)(v41 + 48);
  sub_1DCD2889C(v52, v86, &qword_1EBE86470);
  sub_1DCD2889C(v53, v55, &qword_1EBE86470);
  uint64_t v56 = v85;
  uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  int v58 = v57(v54, 1, v85);
  uint64_t v71 = v34;
  if (v58 == 1)
  {
    sub_1DCD2479C(v53, &qword_1EBE86470);
    sub_1DCD2479C(v52, &qword_1EBE86470);
    if (v57(v55, 1, v56) == 1)
    {
      sub_1DCD2479C(v54, &qword_1EBE86470);
      uint64_t v59 = v83;
LABEL_23:
      uint64_t v63 = v71;
      uint64_t v64 = &v49[*(int *)(v71 + 32)];
      uint64_t v65 = v82;
      uint64_t v66 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v82 + 16);
      int v67 = v80;
      v66(v80, v64, v59);
      uint64_t v68 = &v48[*(int *)(v63 + 32)];
      uint64_t v69 = v81;
      v66(v81, v68, v59);
      sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v50 = sub_1DD0483B8();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v65 + 8);
      v70(v69, v59);
      v70(v67, v59);
      return v50 & 1;
    }
    goto LABEL_20;
  }
  uint64_t v60 = v72;
  sub_1DCD2889C(v54, (uint64_t)v72, &qword_1EBE86470);
  if (v57(v55, 1, v56) == 1)
  {
    sub_1DCD2479C(v53, &qword_1EBE86470);
    sub_1DCD2479C(v52, &qword_1EBE86470);
    sub_1DCF69FA4((uint64_t)v60, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
LABEL_20:
    int v44 = &qword_1EAB04580;
    uint64_t v45 = v54;
    goto LABEL_8;
  }
  uint64_t v61 = v79;
  sub_1DCF8982C(v55, (uint64_t)v79, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  if ((sub_1DCFB76EC(*v60, *v61) & 1) == 0)
  {
    sub_1DCF69FA4((uint64_t)v61, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    sub_1DCD2479C(v53, &qword_1EBE86470);
    sub_1DCD2479C(v52, &qword_1EBE86470);
    sub_1DCF69FA4((uint64_t)v60, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    uint64_t v45 = v54;
    int v44 = &qword_1EBE86470;
    goto LABEL_8;
  }
  sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  uint64_t v59 = v83;
  char v62 = sub_1DD0483B8();
  sub_1DCF69FA4((uint64_t)v61, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  sub_1DCD2479C(v53, &qword_1EBE86470);
  sub_1DCD2479C(v52, &qword_1EBE86470);
  sub_1DCF69FA4((uint64_t)v60, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  sub_1DCD2479C(v54, &qword_1EBE86470);
  if (v62) {
    goto LABEL_23;
  }
LABEL_13:
  char v50 = 0;
  return v50 & 1;
}

uint64_t sub_1DCF87288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCD83388(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16)
    && *(_DWORD *)(a1 + 20) == *(_DWORD *)(a2 + 20)
    && *(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24))
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 32), v4);
    v12(v7, a2 + *(int *)(v11 + 32), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF87470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (*(float *)(a1 + 16) == *(float *)(a2 + 16))
    {
      uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 24), v4);
      v14(v7, a2 + *(int *)(v13 + 24), v4);
      sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v7, v4);
      v15(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_1DCF8764C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if ((a3(*(void *)a1, *(void *)a2, v13) & 1) != 0 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    uint64_t v17 = a4(0);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v18(v15, a1 + *(int *)(v17 + 24), v8);
    v18(v11, a2 + *(int *)(v17 + 24), v8);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v16 = sub_1DD0483B8();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1DCF87824(float *a1, float *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 24), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 24), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF879EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB031B8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v43 - v22;
  uint64_t v24 = a1;
  if ((sub_1DCFB4CDC(*a1, *a2) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v46 = v11;
  char v47 = v17;
  uint64_t v45 = v8;
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  sub_1DCD2889C((uint64_t)a1 + *(int *)(v25 + 28), (uint64_t)v23, &qword_1EBE84E08);
  uint64_t v44 = v25;
  uint64_t v26 = a2;
  sub_1DCD2889C((uint64_t)a2 + *(int *)(v25 + 28), (uint64_t)v20, &qword_1EBE84E08);
  uint64_t v27 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE84E08);
  sub_1DCD2889C((uint64_t)v20, v27, &qword_1EBE84E08);
  uint64_t v28 = v52;
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v29((uint64_t)v14, 1, v52) != 1)
  {
    uint64_t v30 = (uint64_t)v47;
    sub_1DCD2889C((uint64_t)v14, (uint64_t)v47, &qword_1EBE84E08);
    if (v29(v27, 1, v28) != 1)
    {
      uint64_t v31 = (uint64_t)v46;
      sub_1DCF8982C(v27, (uint64_t)v46, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      char v32 = sub_1DCF87F28(v30, v31);
      sub_1DCF69FA4(v31, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C((uint64_t)v20, &qword_1EBE84E08);
      sub_1DCD2479C((uint64_t)v23, &qword_1EBE84E08);
      sub_1DCF69FA4(v30, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE84E08);
      if ((v32 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE84E08);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE84E08);
    sub_1DCF69FA4(v30, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_7:
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB031B8);
    goto LABEL_10;
  }
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE84E08);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE84E08);
  if (v29(v27, 1, v28) != 1) {
    goto LABEL_7;
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE84E08);
LABEL_9:
  if (*((unsigned __int8 *)v24 + 8) == *((unsigned __int8 *)v26 + 8))
  {
    uint64_t v35 = v44;
    uint64_t v36 = v45;
    uint64_t v38 = v49;
    uint64_t v37 = v50;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v39(v45, (char *)v24 + *(int *)(v44 + 24), v50);
    int v40 = (char *)v26 + *(int *)(v35 + 24);
    uint64_t v41 = v48;
    v39(v48, v40, v37);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v33 = sub_1DD0483B8();
    uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
    v42(v41, v37);
    v42(v36, v37);
    return v33 & 1;
  }
LABEL_10:
  char v33 = 0;
  return v33 & 1;
}

uint64_t sub_1DCF87F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (*(float *)(a1 + 16) == *(float *)(a2 + 16)
      && *(unsigned __int8 *)(a1 + 20) == *(unsigned __int8 *)(a2 + 20)
      && *(unsigned __int8 *)(a1 + 21) == *(unsigned __int8 *)(a2 + 21))
    {
      uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, a1 + *(int *)(v14 + 32), v4);
      v15(v7, a2 + *(int *)(v14 + 32), v4);
      sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v7, v4);
      v16(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_1DCF88124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCFB4CDC(*(void *)a1, *(void *)a2) & 1) != 0
    && (sub_1DCFB4F40(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) != 0
    && (sub_1DCFB4F40(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0
    && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
  {
    uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1 + *(int *)(v13 + 32), v4);
    v14(v7, a2 + *(int *)(v13 + 32), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCF8830C(uint64_t a1, uint64_t a2)
{
  uint64_t v106 = a1;
  uint64_t v86 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v86);
  uint64_t v99 = (unsigned __int8 *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v87);
  uint64_t v98 = (unsigned __int8 *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v97 = (uint64_t *)((char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v96 = (unsigned __int8 *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v95 = (uint64_t *)((char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v93 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v92 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v85);
  uint64_t v94 = (unsigned __int8 *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t matched = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule(0);
  MEMORY[0x1F4188790](matched - 8);
  uint64_t v91 = (uint64_t *)((char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v90 = (uint64_t *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v89 = (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v88 = (uint64_t)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v105 = (unsigned __int8 *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v104 = (unsigned __int8 *)&v84 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v102 = (uint64_t *)((char *)&v84 - v29);
  MEMORY[0x1F4188790](v30);
  uint64_t v101 = (uint64_t *)((char *)&v84 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v100 = (uint64_t *)((char *)&v84 - v33);
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (uint64_t *)((char *)&v84 - v35);
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v84 - v38;
  MEMORY[0x1F4188790](v40);
  unint64_t v103 = (unsigned __int8 *)&v84 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v44 = (uint64_t *)((char *)&v84 - v43);
  MEMORY[0x1F4188790](v45);
  char v47 = (uint64_t *)((char *)&v84 - v46);
  MEMORY[0x1F4188790](v48);
  uint64_t v50 = (unsigned __int8 *)&v84 - v49;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (char *)&v84 - v52;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04578);
  MEMORY[0x1F4188790](v54 - 8);
  uint64_t v56 = (char *)&v84 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = (uint64_t)&v56[*(int *)(v57 + 56)];
  sub_1DCF897C8(v106, (uint64_t)v56);
  uint64_t v59 = a2;
  uint64_t v60 = v58;
  sub_1DCF897C8(v59, v58);
  uint64_t v61 = (uint64_t)v56;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v50);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v66 = v89;
        sub_1DCF8982C(v60, v89, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
        char v67 = sub_1DCF85600((uint64_t)v50, v66);
        uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule;
        sub_1DCF69FA4(v66, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v50;
        goto LABEL_30;
      }
      uint64_t v78 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule;
      goto LABEL_49;
    case 2u:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v47);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v70 = v90;
        sub_1DCF8982C(v60, (uint64_t)v90, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
        char v67 = sub_1DCF879EC(v47, v70);
        uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule;
        sub_1DCF69FA4((uint64_t)v70, type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v47;
        goto LABEL_30;
      }
      char v62 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule;
      uint64_t v63 = (uint64_t)v47;
      goto LABEL_50;
    case 3u:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v44);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v71 = v91;
        sub_1DCF8982C(v60, (uint64_t)v91, type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule);
        char v67 = sub_1DCF86710((uint64_t)v44, (uint64_t)v71);
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule;
        goto LABEL_29;
      }
      uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule;
      goto LABEL_47;
    case 4u:
      uint64_t v50 = v103;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v103);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v78 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule;
        goto LABEL_49;
      }
      uint64_t v64 = v94;
      sub_1DCF8982C(v60, (uint64_t)v94, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule);
      if ((sub_1DCFB7A08(*(void *)v50, *(void *)v64) & 1) != 0 && v50[8] == v64[8])
      {
        sub_1DD047BF8();
        sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule;
          goto LABEL_36;
        }
      }
      uint64_t v81 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule;
      goto LABEL_57;
    case 5u:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v39);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v73 = v92;
        sub_1DCF8982C(v60, v92, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
        char v67 = sub_1DCF86370((uint64_t)v39, v73);
        uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule;
        sub_1DCF69FA4(v73, type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v39;
        goto LABEL_30;
      }
      char v62 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule;
      uint64_t v63 = (uint64_t)v39;
      goto LABEL_50;
    case 6u:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v36);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v74 = v93;
        sub_1DCF8982C(v60, v93, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
        char v67 = sub_1DCF85B7C(v36, v74);
        uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule;
        sub_1DCF69FA4(v74, type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v36;
        goto LABEL_30;
      }
      char v62 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule;
      uint64_t v63 = (uint64_t)v36;
      goto LABEL_50;
    case 7u:
      uint64_t v44 = v100;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v100);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        uint64_t v71 = v95;
        sub_1DCF8982C(v60, (uint64_t)v95, type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule);
        char v67 = sub_1DCF84E14(v44, v71);
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule;
        goto LABEL_29;
      }
      uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule;
      goto LABEL_47;
    case 8u:
      uint64_t v44 = v101;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v101);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v75 = v96;
        sub_1DCF8982C(v60, (uint64_t)v96, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        char v67 = sub_1DCF86918((unsigned __int8 *)v44, v75);
        sub_1DCF69FA4((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v44;
        uint64_t v76 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule;
        goto LABEL_31;
      }
      uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule;
      goto LABEL_47;
    case 9u:
      uint64_t v44 = v102;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v102);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v71 = v97;
        sub_1DCF8982C(v60, (uint64_t)v97, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule);
        char v67 = sub_1DCF89A5C(v44, v71);
        uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule;
LABEL_29:
        uint64_t v68 = v72;
        sub_1DCF69FA4((uint64_t)v71, v72);
        uint64_t v69 = (uint64_t)v44;
        goto LABEL_30;
      }
      uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule;
LABEL_47:
      char v62 = v79;
      uint64_t v63 = (uint64_t)v44;
      goto LABEL_50;
    case 0xAu:
      uint64_t v50 = v104;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v104);
      if (swift_getEnumCaseMultiPayload() != 10)
      {
        uint64_t v78 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule;
        goto LABEL_49;
      }
      uint64_t v64 = v98;
      sub_1DCF8982C(v60, (uint64_t)v98, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
      if (*(float *)v50 == *(float *)v64)
      {
        sub_1DD047BF8();
        sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule;
          goto LABEL_36;
        }
      }
      uint64_t v81 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule;
      goto LABEL_57;
    case 0xBu:
      uint64_t v50 = v105;
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v105);
      if (swift_getEnumCaseMultiPayload() != 11)
      {
        uint64_t v78 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule;
LABEL_49:
        char v62 = v78;
        uint64_t v63 = (uint64_t)v50;
        goto LABEL_50;
      }
      uint64_t v64 = v99;
      sub_1DCF8982C(v60, (uint64_t)v99, type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule);
      if (*v50 == *v64)
      {
        sub_1DD047BF8();
        sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule;
LABEL_36:
          uint64_t v77 = v65;
          sub_1DCF69FA4((uint64_t)v64, v65);
          sub_1DCF69FA4((uint64_t)v50, v77);
          sub_1DCF69FA4(v61, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
          char v67 = 1;
          return v67 & 1;
        }
      }
      uint64_t v81 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule;
LABEL_57:
      uint64_t v83 = v81;
      sub_1DCF69FA4((uint64_t)v64, v81);
      sub_1DCF69FA4((uint64_t)v50, v83);
      sub_1DCF69FA4(v61, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      goto LABEL_51;
    default:
      sub_1DCF897C8((uint64_t)v56, (uint64_t)v53);
      if (swift_getEnumCaseMultiPayload())
      {
        char v62 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule;
        uint64_t v63 = (uint64_t)v53;
LABEL_50:
        sub_1DCF69FA4(v63, v62);
        sub_1DCD2479C((uint64_t)v56, &qword_1EAB04578);
LABEL_51:
        char v67 = 0;
      }
      else
      {
        uint64_t v82 = v88;
        sub_1DCF8982C(v60, v88, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
        char v67 = sub_1DCF88124((uint64_t)v53, v82);
        uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule;
        sub_1DCF69FA4(v82, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule);
        uint64_t v69 = (uint64_t)v53;
LABEL_30:
        uint64_t v76 = v68;
LABEL_31:
        sub_1DCF69FA4(v69, v76);
        sub_1DCF69FA4(v61, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      }
      return v67 & 1;
  }
}

uint64_t sub_1DCF89250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04570);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v44 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v49 = a1;
  sub_1DCD2889C(a1, (uint64_t)&v44 - v22, &qword_1EBE84D50);
  uint64_t v50 = a2;
  sub_1DCD2889C(a2, (uint64_t)v20, &qword_1EBE84D50);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE84D50);
  sub_1DCD2889C((uint64_t)v20, v24, &qword_1EBE84D50);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE84D50);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE84D50);
    if (v25(v24, 1, v8) == 1)
    {
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE84D50);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v26 = (uint64_t)v51;
    sub_1DCD2889C((uint64_t)v14, (uint64_t)v17, &qword_1EBE84D50);
    if (v25(v24, 1, v8) != 1)
    {
      sub_1DCF8982C(v24, v26, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      char v28 = sub_1DCF8830C((uint64_t)v17, v26);
      sub_1DCF69FA4(v26, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      sub_1DCD2479C((uint64_t)v20, &qword_1EBE84D50);
      sub_1DCD2479C((uint64_t)v23, &qword_1EBE84D50);
      sub_1DCF69FA4((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE84D50);
      if ((v28 & 1) == 0)
      {
LABEL_11:
        char v27 = 0;
        return v27 & 1;
      }
LABEL_8:
      uint64_t v29 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0);
      uint64_t v30 = v29;
      uint64_t v31 = *(int *)(v29 + 20);
      uint64_t v32 = v50;
      uint64_t v33 = *(void *)(v49 + v31);
      uint64_t v34 = (uint64_t *)(v50 + v31);
      uint64_t v35 = *v34;
      if (*((unsigned char *)v34 + 8) == 1)
      {
        switch(v35)
        {
          case 1:
            if (v33 == 1) {
              goto LABEL_13;
            }
            goto LABEL_11;
          case 2:
            if (v33 == 2) {
              goto LABEL_13;
            }
            goto LABEL_11;
          case 3:
            if (v33 == 3) {
              goto LABEL_13;
            }
            goto LABEL_11;
          default:
            if (v33) {
              goto LABEL_11;
            }
            goto LABEL_13;
        }
      }
      if (v33 == v35)
      {
LABEL_13:
        uint64_t v37 = v47;
        uint64_t v36 = v48;
        uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        uint64_t v39 = v45;
        v38(v45, v49 + *(int *)(v29 + 24), v48);
        uint64_t v40 = v32 + *(int *)(v30 + 24);
        uint64_t v41 = v46;
        v38(v46, v40, v36);
        sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        char v27 = sub_1DD0483B8();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
        v42(v41, v36);
        v42(v39, v36);
        return v27 & 1;
      }
      goto LABEL_11;
    }
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE84D50);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE84D50);
    sub_1DCF69FA4((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule);
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EAB04570);
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_1DCF897C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF8982C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF89894(char *a1, char *a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if (a3(*(void *)a1, *(void *)a2, v13))
  {
    uint64_t v16 = a4(0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v15, &a1[*(int *)(v16 + 20)], v8);
    v17(v11, &a2[*(int *)(v16 + 20)], v8);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v18 = sub_1DD0483B8();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1DCF89A5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCFB9C7C(*a1, *a2) & 1) != 0
    && (sub_1DCFB4F40(a1[1], a2[1]) & 1) != 0
    && (sub_1DCFB4CDC(a1[2], a2[2]) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 28), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 28), v4);
    sub_1DCF835BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF89C34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCF89D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF89DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF89E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF89EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF89F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF89F88);
}

uint64_t __swift_get_extra_inhabitant_index_29Tm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF8A03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF8A050);
}

void *__swift_store_extra_inhabitant_index_30Tm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF8A0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF8A110);
}

uint64_t sub_1DCF8A110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF8A1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF8A1D4);
}

uint64_t sub_1DCF8A1D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF8A27C()
{
  return sub_1DCE0BB54();
}

uint64_t sub_1DCF8A294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_9);
}

uint64_t sub_1DCF8A2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_9);
}

_DWORD *sub_1DCF8A2C4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF8A348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF8A35C);
}

uint64_t sub_1DCF8A35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DCF8A3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF8A3E0);
}

uint64_t sub_1DCF8A3E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

void *sub_1DCF8A454(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    int v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1DCF8A54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCF8A5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF8A6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF8A72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DCF8A7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF8A7DC);
}

uint64_t sub_1DCF8A7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF8A88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF8A8A0);
}

uint64_t sub_1DCF8A8A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF8A948()
{
  return sub_1DCE102D8();
}

ValueMetadata *type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.ImageSourceType()
{
  return &type metadata for Argos_Protos_Queryflow_DomainAssignmentRule.ImageSourceType;
}

unint64_t sub_1DCF8A97C()
{
  unint64_t result = qword_1EBE85440;
  if (!qword_1EBE85440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85440);
  }
  return result;
}

unint64_t sub_1DCF8A9D4()
{
  unint64_t result = qword_1EBE85438;
  if (!qword_1EBE85438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85438);
  }
  return result;
}

unint64_t sub_1DCF8AA2C()
{
  unint64_t result = qword_1EBE85448;
  if (!qword_1EBE85448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85448);
  }
  return result;
}

void sub_1DCF8AA84()
{
  qword_1EAB1D348 = MEMORY[0x1E4FBC860];
  qword_1EAB1D350 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1DCF8AA9C@<X0>(uint64_t *a1@<X8>)
{
  char v3 = (sub_1DCDE82EC() & 1) == 0;
  type metadata accessor for CipherMLSimilarityClient();
  swift_allocObject();
  uint64_t v4 = swift_retain();
  uint64_t result = sub_1DCF97E74(v4, v3);
  if (!v1)
  {
    *a1 = result;
    a1[1] = (uint64_t)&off_1F383BB50;
  }
  return result;
}

uint64_t sub_1DCF8AB18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCE6F78C();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1DCF8AB48(uint64_t a1, void *a2, void (*a3)(void *))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (uint64_t *)((char *)&v12 - v8);
  if (a2)
  {
    *uint64_t v9 = a2;
    swift_storeEnumTagMultiPayload();
    id v10 = a2;
  }
  else
  {
    sub_1DCF8C344(a1, (uint64_t)&v12 - v8);
    swift_storeEnumTagMultiPayload();
  }
  a3(v9);
  return sub_1DCF8C1EC((uint64_t)v9);
}

uint64_t sub_1DCF8AC30(uint64_t a1, void *a2, void *a3, uint64_t *a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v32 = type metadata accessor for ServerSearchResult();
  MEMORY[0x1F4188790](v32);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a4;
  uint64_t v36 = v13;
  uint64_t v31 = type metadata accessor for NetworkService.NetworkSearchResponse(0);
  uint64_t v14 = *(void *)(a1 + *(int *)(v31 + 20));
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_1DCDB8A74(MEMORY[0x1E4FBC860]);
  uint64_t v34 = v15;
  unint64_t v35 = v16;
  uint64_t v17 = *(void *)(v13 + 16);
  if (v17)
  {
    uint64_t v30 = a5;
    uint64_t v18 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    uint64_t v19 = v13 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DCD626D0(v19, v14, &v34, a2, a3, (uint64_t *)&v35);
      v19 += v20;
      --v17;
    }
    while (v17);
    sub_1DCEBE450((uint64_t)&v36);
    uint64_t v15 = v34;
    uint64_t v21 = v35;
    a5 = v30;
  }
  else
  {
    uint64_t v21 = v16;
  }
  sub_1DCEE776C(a1, (uint64_t)v12);
  uint64_t v22 = v32;
  uint64_t v23 = (uint64_t *)(a1 + *(int *)(v31 + 24));
  *(void *)&v12[*(int *)(v32 + 20)] = v21;
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  uint64_t v26 = &v12[*(int *)(v22 + 24)];
  *(void *)uint64_t v26 = v24;
  *((void *)v26 + 1) = v25;
  if (v15[2])
  {
    char v27 = (void *)v15[4];
    id v28 = v27;
  }
  else
  {
    char v27 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a5(v12, v27);

  return sub_1DCF8C2E8((uint64_t)v12);
}

uint64_t sub_1DCF8AE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *, void *))
{
  uint64_t v15 = type metadata accessor for ServerSearchResult();
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v19 = *(_OWORD *)(a7 + 144);
  v33[8] = *(_OWORD *)(a7 + 128);
  v33[9] = v19;
  v33[10] = *(_OWORD *)(a7 + 160);
  uint64_t v34 = *(void *)(a7 + 176);
  long long v20 = *(_OWORD *)(a7 + 80);
  v33[4] = *(_OWORD *)(a7 + 64);
  v33[5] = v20;
  long long v21 = *(_OWORD *)(a7 + 112);
  v33[6] = *(_OWORD *)(a7 + 96);
  v33[7] = v21;
  long long v22 = *(_OWORD *)(a7 + 16);
  v33[0] = *(_OWORD *)a7;
  long long v23 = *(_OWORD *)(a7 + 32);
  long long v24 = *(_OWORD *)(a7 + 48);
  v33[1] = v22;
  v33[2] = v23;
  v33[3] = v24;
  unint64_t v25 = sub_1DCD64D58(a2, a6, (uint64_t *)v33, a5, a8, a9);
  uint64_t v27 = v26;
  uint64_t v28 = sub_1DD047488();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
  *(void *)&v18[*(int *)(v16 + 28)] = v25;
  uint64_t v29 = &v18[*(int *)(v16 + 32)];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0xE000000000000000;
  if (*(void *)(v27 + 16))
  {
    uint64_t v30 = *(void **)(v27 + 32);
    id v31 = v30;
  }
  else
  {
    uint64_t v30 = 0;
  }
  swift_bridgeObjectRelease();
  a10(v18, v30);

  return sub_1DCF8C2E8((uint64_t)v18);
}

uint64_t sub_1DCF8AFE0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(char *, void *))
{
  uint64_t v14 = type metadata accessor for ServerSearchResult();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *(_OWORD *)(a4 + 144);
  v32[8] = *(_OWORD *)(a4 + 128);
  v32[9] = v18;
  v32[10] = *(_OWORD *)(a4 + 160);
  uint64_t v33 = *(void *)(a4 + 176);
  long long v19 = *(_OWORD *)(a4 + 80);
  v32[4] = *(_OWORD *)(a4 + 64);
  v32[5] = v19;
  long long v20 = *(_OWORD *)(a4 + 112);
  v32[6] = *(_OWORD *)(a4 + 96);
  v32[7] = v20;
  long long v21 = *(_OWORD *)(a4 + 16);
  v32[0] = *(_OWORD *)a4;
  long long v22 = *(_OWORD *)(a4 + 32);
  long long v23 = *(_OWORD *)(a4 + 48);
  v32[1] = v21;
  v32[2] = v22;
  v32[3] = v23;
  id v24 = sub_1DCD66630(a1, a3, (uint64_t *)v32, a2, a5, a6);
  uint64_t v26 = v25;
  uint64_t v27 = sub_1DD047488();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
  *(void *)&v17[*(int *)(v15 + 28)] = v24;
  uint64_t v28 = &v17[*(int *)(v15 + 32)];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0xE000000000000000;
  if (*(void *)(v26 + 16))
  {
    uint64_t v29 = *(void **)(v26 + 32);
    id v30 = v29;
  }
  else
  {
    uint64_t v29 = 0;
  }
  swift_bridgeObjectRelease();
  a7(v17, v29);

  return sub_1DCF8C2E8((uint64_t)v17);
}

uint64_t sub_1DCF8B18C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServerSearchProcessor()
{
  return self;
}

uint64_t sub_1DCF8B1F8(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unsigned __int8 a10, uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13)
{
  uint64_t v79 = a4;
  uint64_t v80 = a8;
  uint64_t v65 = a2;
  uint64_t v66 = a5;
  uint64_t v62 = a3;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v69);
  uint64_t v73 = (uint64_t *)((char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DD048068();
  uint64_t v67 = *(void *)(v17 - 8);
  uint64_t v68 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v63 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v64 = (uint64_t)&v61 - v20;
  uint64_t v21 = swift_allocObject();
  uint64_t v72 = a11;
  *(void *)(v21 + 16) = a11;
  *(void *)(v21 + 24) = a12;
  long long v22 = *(_OWORD *)(a13 + 144);
  *(_OWORD *)(v21 + 160) = *(_OWORD *)(a13 + 128);
  *(_OWORD *)(v21 + 176) = v22;
  *(_OWORD *)(v21 + 192) = *(_OWORD *)(a13 + 160);
  *(void *)(v21 + 208) = *(void *)(a13 + 176);
  long long v23 = *(_OWORD *)(a13 + 80);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(a13 + 64);
  *(_OWORD *)(v21 + 112) = v23;
  long long v24 = *(_OWORD *)(a13 + 112);
  *(_OWORD *)(v21 + 128) = *(_OWORD *)(a13 + 96);
  *(_OWORD *)(v21 + 144) = v24;
  long long v25 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)a13;
  *(_OWORD *)(v21 + 48) = v25;
  long long v26 = *(_OWORD *)(a13 + 48);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(a13 + 32);
  *(_OWORD *)(v21 + 80) = v26;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a6;
  *(void *)(v27 + 24) = a7;
  *(void *)(v27 + 32) = v80;
  *(void *)(v27 + 40) = a9;
  int v70 = a10;
  *(unsigned char *)(v27 + 48) = a10;
  *(void *)(v27 + 56) = sub_1DCF8C3AC;
  *(void *)(v27 + 64) = v21;
  uint64_t v74 = v27;
  long long v28 = *(_OWORD *)(a1 + 144);
  long long v91 = *(_OWORD *)(a1 + 128);
  long long v92 = v28;
  long long v93 = *(_OWORD *)(a1 + 160);
  uint64_t v94 = *(void *)(a1 + 176);
  long long v29 = *(_OWORD *)(a1 + 80);
  long long v87 = *(_OWORD *)(a1 + 64);
  long long v88 = v29;
  long long v30 = *(_OWORD *)(a1 + 112);
  long long v89 = *(_OWORD *)(a1 + 96);
  long long v90 = v30;
  long long v31 = *(_OWORD *)(a1 + 16);
  long long v83 = *(_OWORD *)a1;
  long long v84 = v31;
  long long v32 = *(_OWORD *)(a1 + 32);
  long long v33 = *(_OWORD *)(a1 + 48);
  uint64_t v34 = v79;
  unint64_t v35 = (os_unfair_lock_s *)(*(void *)&v79[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  long long v85 = v32;
  long long v86 = v33;
  swift_retain();
  sub_1DCD433F0(a13);
  uint64_t v76 = a12;
  swift_retain();
  sub_1DCD433F0(a13);
  uint64_t v71 = a9;
  id v36 = a9;
  swift_retain();
  uint64_t v78 = a6;
  swift_retain();
  uint64_t v77 = a7;
  uint64_t v37 = v34;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v35);
  LODWORD(a6) = v34[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v35);
  id v75 = v36;
  if (a6 == 1)
  {
    uint64_t v38 = v64;
    sub_1DCDB40EC(v64);
    uint64_t v39 = sub_1DD048048();
    os_log_type_t v40 = sub_1DD048848();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1DCCF9000, v39, v40, "experimentalSearch(): canceled", v41, 2u);
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v38, v68);
    sub_1DCE6A230();
    uint64_t v42 = swift_allocError();
    unsigned char *v43 = 0;
    uint64_t v44 = (uint64_t)v73;
    *uint64_t v73 = v42;
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v76;
    swift_retain();
    sub_1DCD433F0(a13);
    sub_1DCF5CBB4(v44, v78, v77, v80, v71, v70 & 1, v72, v45, a13);
    sub_1DCD43B94(a13);
    swift_release();
    sub_1DCF8C1EC(v44);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v46 = v65;
    uint64_t v47 = sub_1DCFE3A8C();
    uint64_t v49 = v48;
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v74;
    *(void *)(v50 + 16) = sub_1DCF8C1D4;
    *(void *)(v50 + 24) = v51;
    uint64_t v73 = *(uint64_t **)(v66 + 16);
    v81[8] = v91;
    v81[9] = v92;
    v81[10] = v93;
    uint64_t v82 = v94;
    v81[4] = v87;
    v81[5] = v88;
    v81[6] = v89;
    v81[7] = v90;
    v81[0] = v83;
    v81[1] = v84;
    _OWORD v81[2] = v85;
    v81[3] = v86;
    uint64_t v52 = swift_allocObject();
    long long v53 = v92;
    *(_OWORD *)(v52 + 152) = v91;
    *(_OWORD *)(v52 + 168) = v53;
    *(_OWORD *)(v52 + 184) = v93;
    long long v54 = v88;
    *(_OWORD *)(v52 + 88) = v87;
    *(_OWORD *)(v52 + 104) = v54;
    long long v55 = v90;
    *(_OWORD *)(v52 + 120) = v89;
    *(_OWORD *)(v52 + 136) = v55;
    long long v56 = v84;
    *(_OWORD *)(v52 + 24) = v83;
    *(_OWORD *)(v52 + 40) = v56;
    long long v57 = v86;
    *(_OWORD *)(v52 + 56) = v85;
    *(void *)(v52 + 16) = v46;
    uint64_t v58 = v94;
    *(_OWORD *)(v52 + 72) = v57;
    *(void *)(v52 + 200) = v58;
    *(void *)(v52 + 208) = v47;
    *(void *)(v52 + 216) = v49;
    *(void *)(v52 + 224) = sub_1DCF8C430;
    *(void *)(v52 + 232) = v50;
    id v59 = v46;
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_1DCD433F0((uint64_t)&v83);
    swift_retain();
    sub_1DCE5A610(v81, v62, v46, v37, (uint64_t)v47, v49, (uint64_t)sub_1DCF8C504, v52);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease_n();
    swift_release();
  }
  swift_release();
  swift_release();
  return sub_1DCD43B94(a13);
}

uint64_t sub_1DCF8B9DC(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unsigned __int8 a10, uint64_t (*a11)(uint64_t), uint64_t a12, uint64_t a13)
{
  uint64_t v79 = a4;
  uint64_t v80 = a8;
  uint64_t v65 = a2;
  uint64_t v66 = a5;
  uint64_t v62 = a3;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  MEMORY[0x1F4188790](v69);
  uint64_t v73 = (uint64_t *)((char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DD048068();
  uint64_t v67 = *(void *)(v17 - 8);
  uint64_t v68 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v63 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v64 = (uint64_t)&v61 - v20;
  uint64_t v21 = swift_allocObject();
  uint64_t v72 = a11;
  *(void *)(v21 + 16) = a11;
  *(void *)(v21 + 24) = a12;
  long long v22 = *(_OWORD *)(a13 + 144);
  *(_OWORD *)(v21 + 160) = *(_OWORD *)(a13 + 128);
  *(_OWORD *)(v21 + 176) = v22;
  *(_OWORD *)(v21 + 192) = *(_OWORD *)(a13 + 160);
  *(void *)(v21 + 208) = *(void *)(a13 + 176);
  long long v23 = *(_OWORD *)(a13 + 80);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(a13 + 64);
  *(_OWORD *)(v21 + 112) = v23;
  long long v24 = *(_OWORD *)(a13 + 112);
  *(_OWORD *)(v21 + 128) = *(_OWORD *)(a13 + 96);
  *(_OWORD *)(v21 + 144) = v24;
  long long v25 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)a13;
  *(_OWORD *)(v21 + 48) = v25;
  long long v26 = *(_OWORD *)(a13 + 48);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(a13 + 32);
  *(_OWORD *)(v21 + 80) = v26;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a6;
  *(void *)(v27 + 24) = a7;
  *(void *)(v27 + 32) = v80;
  *(void *)(v27 + 40) = a9;
  int v70 = a10;
  *(unsigned char *)(v27 + 48) = a10;
  *(void *)(v27 + 56) = sub_1DCF8C1C4;
  *(void *)(v27 + 64) = v21;
  uint64_t v74 = v27;
  long long v28 = *(_OWORD *)(a1 + 144);
  long long v91 = *(_OWORD *)(a1 + 128);
  long long v92 = v28;
  long long v93 = *(_OWORD *)(a1 + 160);
  uint64_t v94 = *(void *)(a1 + 176);
  long long v29 = *(_OWORD *)(a1 + 80);
  long long v87 = *(_OWORD *)(a1 + 64);
  long long v88 = v29;
  long long v30 = *(_OWORD *)(a1 + 112);
  long long v89 = *(_OWORD *)(a1 + 96);
  long long v90 = v30;
  long long v31 = *(_OWORD *)(a1 + 16);
  long long v83 = *(_OWORD *)a1;
  long long v84 = v31;
  long long v32 = *(_OWORD *)(a1 + 32);
  long long v33 = *(_OWORD *)(a1 + 48);
  uint64_t v34 = v79;
  unint64_t v35 = (os_unfair_lock_s *)(*(void *)&v79[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  long long v85 = v32;
  long long v86 = v33;
  swift_retain();
  sub_1DCD433F0(a13);
  uint64_t v76 = a12;
  swift_retain();
  sub_1DCD433F0(a13);
  uint64_t v71 = a9;
  id v36 = a9;
  swift_retain();
  uint64_t v78 = a6;
  swift_retain();
  uint64_t v77 = a7;
  uint64_t v37 = v34;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v35);
  LODWORD(a6) = v34[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v35);
  id v75 = v36;
  if (a6 == 1)
  {
    uint64_t v38 = v64;
    sub_1DCDB40EC(v64);
    uint64_t v39 = sub_1DD048048();
    os_log_type_t v40 = sub_1DD048848();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1DCCF9000, v39, v40, "experimentalSearch(): canceled", v41, 2u);
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v38, v68);
    sub_1DCE6A230();
    uint64_t v42 = swift_allocError();
    unsigned char *v43 = 0;
    uint64_t v44 = (uint64_t)v73;
    *uint64_t v73 = v42;
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v76;
    swift_retain();
    sub_1DCD433F0(a13);
    sub_1DCF5D6EC(v44, v78, v77, v80, v71, v70 & 1, v72, v45, a13);
    sub_1DCD43B94(a13);
    swift_release();
    sub_1DCF8C1EC(v44);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v46 = v65;
    uint64_t v47 = sub_1DCFE3ACC();
    uint64_t v49 = v48;
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v74;
    *(void *)(v50 + 16) = sub_1DCF8C1D4;
    *(void *)(v50 + 24) = v51;
    uint64_t v73 = *(uint64_t **)(v66 + 16);
    v81[8] = v91;
    v81[9] = v92;
    v81[10] = v93;
    uint64_t v82 = v94;
    v81[4] = v87;
    v81[5] = v88;
    v81[6] = v89;
    v81[7] = v90;
    v81[0] = v83;
    v81[1] = v84;
    _OWORD v81[2] = v85;
    v81[3] = v86;
    uint64_t v52 = swift_allocObject();
    long long v53 = v92;
    *(_OWORD *)(v52 + 152) = v91;
    *(_OWORD *)(v52 + 168) = v53;
    *(_OWORD *)(v52 + 184) = v93;
    long long v54 = v88;
    *(_OWORD *)(v52 + 88) = v87;
    *(_OWORD *)(v52 + 104) = v54;
    long long v55 = v90;
    *(_OWORD *)(v52 + 120) = v89;
    *(_OWORD *)(v52 + 136) = v55;
    long long v56 = v84;
    *(_OWORD *)(v52 + 24) = v83;
    *(_OWORD *)(v52 + 40) = v56;
    long long v57 = v86;
    *(_OWORD *)(v52 + 56) = v85;
    *(void *)(v52 + 16) = v46;
    uint64_t v58 = v94;
    *(_OWORD *)(v52 + 72) = v57;
    *(void *)(v52 + 200) = v58;
    *(void *)(v52 + 208) = v47;
    *(void *)(v52 + 216) = v49;
    *(void *)(v52 + 224) = sub_1DCF8C924;
    *(void *)(v52 + 232) = v50;
    id v59 = v46;
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_1DCD433F0((uint64_t)&v83);
    swift_retain();
    sub_1DCE5AB08(v81, v62, v46, v37, (uint64_t)v47, v49, (uint64_t)sub_1DCF8C288, v52);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease_n();
    swift_release();
  }
  swift_release();
  swift_release();
  return sub_1DCD43B94(a13);
}

uint64_t sub_1DCF8C1C4(uint64_t a1)
{
  return sub_1DCF585C4(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_1DCF8C1D4(uint64_t a1)
{
  return sub_1DCF8C414(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1DCF5BCEC);
}

uint64_t sub_1DCF8C1EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB043C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF8C24C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCF8C288(uint64_t a1, void *a2)
{
  return sub_1DCF8AFE0(a1, a2, *(void **)(v2 + 16), v2 + 24, *(void *)(v2 + 208), *(void *)(v2 + 216), *(void (**)(char *, void *))(v2 + 224));
}

uint64_t type metadata accessor for ServerSearchResult()
{
  uint64_t result = qword_1EAB04650;
  if (!qword_1EAB04650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF8C2E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ServerSearchResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF8C344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServerSearchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF8C3AC(uint64_t a1)
{
  return sub_1DCF580CC(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t objectdestroy_11Tm()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1DCF8C414(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1DCF8C430(uint64_t a1, void *a2)
{
  return sub_1DCF8AB48(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t objectdestroy_17Tm()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 240, 7);
}

uint64_t sub_1DCF8C504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1DCF8AE38(a1, a2, a3, a4, a5, *(void **)(v5 + 16), v5 + 24, *(void *)(v5 + 208), *(void *)(v5 + 216), *(void (**)(char *, void *))(v5 + 224));
}

uint64_t destroy for ServerSearchRegionResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18VisualIntelligence24ServerSearchRegionResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ServerSearchRegionResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ServerSearchRegionResult(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServerSearchRegionResult()
{
  return &type metadata for ServerSearchRegionResult;
}

uint64_t sub_1DCF8C668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF8C67C);
}

uint64_t sub_1DCF8C67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCF8C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF8C754);
}

uint64_t sub_1DCF8C754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1DCF8C814()
{
  sub_1DCF8C8B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DCF8C8B8()
{
  if (!qword_1EAB028E8)
  {
    sub_1DD047488();
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EAB028E8);
    }
  }
}

ValueMetadata *type metadata accessor for ServerSearchProcessor.DebugInfo()
{
  return &type metadata for ServerSearchProcessor.DebugInfo;
}

uint64_t sub_1DCF8C928(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1DD048FA8();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1DD048FA8() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF8C9F0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF8CA54()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD0569E0;
  *(void *)(v0 + 32) = sub_1DD048408();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_1DD048408();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_1DD048408();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = sub_1DD048408();
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = sub_1DD048408();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = sub_1DD048408();
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = sub_1DD048408();
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = sub_1DD048408();
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = sub_1DD048408();
  *(void *)(v0 + 168) = v9;
  uint64_t result = sub_1DD048408();
  *(void *)(v0 + 176) = result;
  *(void *)(v0 + 184) = v11;
  qword_1EBE9C678 = v0;
  return result;
}

uint64_t sub_1DCF8CB8C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD0535D0;
  *(void *)(v0 + 32) = sub_1DD048408();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_1DD048408();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_1DD048408();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = sub_1DD048408();
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = sub_1DD048408();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = sub_1DD048408();
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 128) = sub_1DD048408();
  *(void *)(v0 + 136) = v7;
  uint64_t result = sub_1DD048408();
  *(void *)(v0 + 144) = result;
  *(void *)(v0 + 152) = v9;
  qword_1EAB1D358 = v0;
  return result;
}

id sub_1DCF8CC9C(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  return v3;
}

id VisualIntelligenceServiceCompatible.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id VisualIntelligenceServiceCompatible.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualIntelligenceService.Options(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  BOOL v12 = (char *)&v21 - v11;
  *(void *)&v0[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_cancellables] = MEMORY[0x1E4FBC870];
  uint64_t v13 = sub_1DD046478();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = sub_1DD0481A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  unsigned __int8 v23 = 3;
  uint64_t v15 = v0;
  VisualIntelligenceService.Options.init(customizedEndpoint:networkTimeoutInterval:debugParameters:mlEngineType:)((uint64_t)v6, (uint64_t)v3, 0, 0, &v23, (uint64_t)v12);
  char v16 = sub_1DCDE82EC();
  type metadata accessor for TrialWrapper();
  swift_allocObject();
  uint64_t v17 = sub_1DCFD946C((v16 & 1) == 0);
  sub_1DCF946DC((uint64_t)v12, (uint64_t)v9, type metadata accessor for VisualIntelligenceService.Options);
  uint64_t v18 = sub_1DCEDA5E4((uint64_t)v9, v17);
  sub_1DCF9793C((uint64_t)v12, type metadata accessor for VisualIntelligenceService.Options);
  *(void *)&v15[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service] = v18;

  uint64_t v19 = (objc_class *)type metadata accessor for VisualIntelligenceServiceCompatible();
  v22.receiver = v15;
  v22.super_class = v19;
  return objc_msgSendSuper2(&v22, sel_init);
}

id VisualIntelligenceServiceCompatible.__allocating_init(timeoutInterval:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return VisualIntelligenceServiceCompatible.init(timeoutInterval:)(a1);
}

id VisualIntelligenceServiceCompatible.init(timeoutInterval:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisualIntelligenceService.Options(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v29 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  *(void *)&v1[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_cancellables] = MEMORY[0x1E4FBC870];
  uint64_t v18 = sub_1DD046478();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  *uint64_t v5 = a1;
  uint64_t v19 = *MEMORY[0x1E4FBCAE8];
  uint64_t v20 = sub_1DD0481A8();
  uint64_t v21 = *(void *)(v20 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v21 + 104))(v5, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v20);
  unsigned __int8 v31 = 3;
  objc_super v22 = v1;
  VisualIntelligenceService.Options.init(customizedEndpoint:networkTimeoutInterval:debugParameters:mlEngineType:)((uint64_t)v8, (uint64_t)v5, 0, 0, &v31, (uint64_t)v17);
  sub_1DCF946DC((uint64_t)v17, (uint64_t)v14, type metadata accessor for VisualIntelligenceService.Options);
  char v23 = sub_1DCDE82EC();
  type metadata accessor for TrialWrapper();
  swift_allocObject();
  uint64_t v24 = sub_1DCFD946C((v23 & 1) == 0);
  sub_1DCF946DC((uint64_t)v14, (uint64_t)v11, type metadata accessor for VisualIntelligenceService.Options);
  uint64_t v25 = sub_1DCEDA5E4((uint64_t)v11, v24);
  sub_1DCF9793C((uint64_t)v14, type metadata accessor for VisualIntelligenceService.Options);
  *(void *)&v22[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service] = v25;

  long long v26 = (objc_class *)type metadata accessor for VisualIntelligenceServiceCompatible();
  v30.receiver = v22;
  v30.super_class = v26;
  id v27 = objc_msgSendSuper2(&v30, sel_init);
  sub_1DCF9793C((uint64_t)v17, type metadata accessor for VisualIntelligenceService.Options);
  return v27;
}

id VisualIntelligenceServiceCompatible.__allocating_init(overrideTrialTypes:namespaces:factors:values:)()
{
  id v1 = objc_allocWithZone(v0);
  return VisualIntelligenceServiceCompatible.init(overrideTrialTypes:namespaces:factors:values:)();
}

id VisualIntelligenceServiceCompatible.init(overrideTrialTypes:namespaces:factors:values:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualIntelligenceService.Options(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v0[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_cancellables] = MEMORY[0x1E4FBC870];
  uint64_t v13 = sub_1DD046478();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = sub_1DD0481A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  unsigned __int8 v23 = 3;
  uint64_t v15 = v0;
  VisualIntelligenceService.Options.init(customizedEndpoint:networkTimeoutInterval:debugParameters:mlEngineType:)((uint64_t)v6, (uint64_t)v3, 0, 0, &v23, (uint64_t)v12);
  char v16 = sub_1DCDE82EC();
  type metadata accessor for TrialWrapper();
  swift_allocObject();
  uint64_t v17 = sub_1DCFD946C((v16 & 1) == 0);
  sub_1DCF946DC((uint64_t)v12, (uint64_t)v9, type metadata accessor for VisualIntelligenceService.Options);
  swift_retain();
  *(void *)&v15[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service] = sub_1DCEDA5E4((uint64_t)v9, v17);

  uint64_t v18 = (objc_class *)type metadata accessor for VisualIntelligenceServiceCompatible();
  v22.receiver = v15;
  v22.super_class = v18;
  id v19 = objc_msgSendSuper2(&v22, sel_init);
  swift_release();
  sub_1DCF9793C((uint64_t)v12, type metadata accessor for VisualIntelligenceService.Options);
  return v19;
}

id sub_1DCF8D7F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)
                 + 24);
  uint64_t v2 = (objc_class *)type metadata accessor for OntologyGraphCompatible();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC18VisualIntelligence23OntologyGraphCompatible_ontologyGraph] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1DCF8D864(double a1, double a2)
{
  return swift_release();
}

uint64_t sub_1DCF8D998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF8E3A8(a1, a2, a3, (uint64_t)&unk_1F3842788, (uint64_t)sub_1DCF97AF0, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))VisualIntelligenceService.parse(query:cachedResults:completion:));
}

uint64_t sub_1DCF8DAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCF91870(a1, a2, a3, a4, (uint64_t)&unk_1F38427B0, (uint64_t)sub_1DCF946C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))VisualIntelligenceService.parse(query:cachedResults:completion:));
}

void sub_1DCF8DC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_1DD046368();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);
}

void *sub_1DCF8DCBC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v33[0] = a4;
  v33[1] = a2;
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v33 - v13;
  id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  sub_1DCF946DC(*(void *)(v5 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)+ OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v34 = a5;
  unint64_t v35 = v15;
  if (!a3 || (id v16 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  uint64_t v18 = sub_1DD048408();
  uint64_t v20 = v19;

  uint64_t v21 = sub_1DD048408();
  if (!v20)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v25 = v33[0];
    goto LABEL_12;
  }
  if (v21 == v18 && v20 == v22)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v25 = v33[0];
LABEL_14:
    v14[8] = 0;
    goto LABEL_12;
  }
  char v24 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v33[0];
  if (v24) {
    goto LABEL_14;
  }
LABEL_12:
  uint64_t v26 = type metadata accessor for AnyVIImageContent();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  v38[3] = v26;
  v38[4] = &off_1F383AB60;
  v38[0] = v27;
  swift_retain();
  id v28 = a1;
  sub_1DCE9D160(v36);
  sub_1DCF946DC((uint64_t)v14, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v25;
  *(void *)(v29 + 24) = v34;
  swift_retain();
  objc_super v30 = a3;
  unsigned __int8 v31 = v35;
  sub_1DCF58B70((uint64_t)v38, v36, v30, (uint64_t)v11, v35, (uint64_t)sub_1DCF97AF8, v29);
  swift_release();
  swift_release();
  sub_1DCF9793C((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  v39[8] = v36[8];
  v39[9] = v36[9];
  v39[10] = v36[10];
  uint64_t v40 = v37;
  v39[4] = v36[4];
  v39[5] = v36[5];
  v39[6] = v36[6];
  v39[7] = v36[7];
  v39[0] = v36[0];
  v39[1] = v36[1];
  v39[2] = v36[2];
  v39[3] = v36[3];
  sub_1DCD43B94((uint64_t)v39);
  sub_1DCEA3D44((uint64_t)v38);
  sub_1DCF9793C((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return v31;
}

void sub_1DCF8E0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1DD046368();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_1DCF8E148()
{
  swift_retain();
  id v0 = sub_1DCED01B4();
  swift_release();
  return v0;
}

uint64_t sub_1DCF8E1F4(uint64_t a1, int a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  swift_retain();
  uint64_t v16 = sub_1DCEB37F8(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();
  return v16;
}

uint64_t sub_1DCF8E374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF8E3A8(a1, a2, a3, (uint64_t)&unk_1F3842800, (uint64_t)sub_1DCF94744, (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))VisualIntelligenceService.parseCameraFrame(query:cachedResults:completion:));
}

uint64_t sub_1DCF8E3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  swift_retain();
  swift_retain();
  uint64_t v12 = a6(a1, 0, a5, v11);
  swift_release();
  swift_release();
  return v12;
}

void sub_1DCF8E454(uint64_t a1, void (*a2)(id, id))
{
  uint64_t v4 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v9, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *v9;
    id v11 = *v9;
    a2(0, v10);
  }
  else
  {
    sub_1DCF979D8((uint64_t)v9, (uint64_t)v6, type metadata accessor for ParseResult);
    long long v12 = *((_OWORD *)v6 + 9);
    v20[8] = *((_OWORD *)v6 + 8);
    v20[9] = v12;
    v20[10] = *((_OWORD *)v6 + 10);
    uint64_t v21 = *((void *)v6 + 22);
    long long v13 = *((_OWORD *)v6 + 5);
    v20[4] = *((_OWORD *)v6 + 4);
    void v20[5] = v13;
    long long v14 = *((_OWORD *)v6 + 7);
    v20[6] = *((_OWORD *)v6 + 6);
    v20[7] = v14;
    long long v15 = *((_OWORD *)v6 + 1);
    v20[0] = *(_OWORD *)v6;
    v20[1] = v15;
    long long v16 = *((_OWORD *)v6 + 3);
    v20[2] = *((_OWORD *)v6 + 2);
    v20[3] = v16;
    id v17 = sub_1DCD9AC9C();
    id v18 = objc_msgSend(objc_allocWithZone((Class)VIParseResult), sel_initWithVisualUnderstanding_, v17);

    id v19 = v18;
    a2(v18, 0);

    sub_1DCF9793C((uint64_t)v6, type metadata accessor for ParseResult);
  }
}

uint64_t sub_1DCF8E768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCF91870(a1, a2, a3, a4, (uint64_t)&unk_1F3842828, (uint64_t)sub_1DCF97AF4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))VisualIntelligenceService.parseCameraFrame(query:cachedResults:completion:));
}

void sub_1DCF8E79C(uint64_t a1, void (*a2)(id, void *, id))
{
  uint64_t v4 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v9, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v10 = *v9;
    id v11 = *v9;
    a2(0, 0, v10);
  }
  else
  {
    sub_1DCF979D8((uint64_t)v9, (uint64_t)v6, type metadata accessor for ParseResult);
    long long v12 = *((_OWORD *)v6 + 9);
    long long v31 = *((_OWORD *)v6 + 8);
    long long v32 = v12;
    long long v33 = *((_OWORD *)v6 + 10);
    uint64_t v34 = *((void *)v6 + 22);
    long long v13 = *((_OWORD *)v6 + 5);
    long long v27 = *((_OWORD *)v6 + 4);
    long long v28 = v13;
    long long v14 = *((_OWORD *)v6 + 7);
    long long v29 = *((_OWORD *)v6 + 6);
    long long v30 = v14;
    long long v15 = *((_OWORD *)v6 + 1);
    long long v23 = *(_OWORD *)v6;
    long long v24 = v15;
    long long v16 = *((_OWORD *)v6 + 3);
    long long v25 = *((_OWORD *)v6 + 2);
    long long v26 = v16;
    sub_1DCD433F0((uint64_t)&v23);
    id v17 = (void *)ParseResult.cachedResults.getter();
    v21[8] = v31;
    v21[9] = v32;
    v21[10] = v33;
    uint64_t v22 = v34;
    v21[4] = v27;
    v21[5] = v28;
    v21[6] = v29;
    v21[7] = v30;
    v21[0] = v23;
    v21[1] = v24;
    v21[2] = v25;
    v21[3] = v26;
    id v18 = sub_1DCD9AC9C();
    sub_1DCD43B94((uint64_t)&v23);
    id v19 = objc_msgSend(objc_allocWithZone((Class)VIParseResult), sel_initWithVisualUnderstanding_, v18);

    id v20 = v19;
    a2(v19, v17, 0);

    sub_1DCF9793C((uint64_t)v6, type metadata accessor for ParseResult);
  }
}

id sub_1DCF8EB30(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  id v9 = sub_1DCEDB598(a2, a3, a4, a5);
  swift_release();
  return v9;
}

void sub_1DCF8ECA4(uint64_t a1, void *a2, void *a3, void (*a4)(id, void *), uint64_t a5)
{
  uint64_t v72 = a4;
  uint64_t v71 = sub_1DD048068();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v69 = (uint64_t)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v11 - 8);
  long long v13 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)v68 - v15;
  id v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v17 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  uint64_t v18 = *(void *)(v5 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)
      + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig;
  id v75 = v16;
  sub_1DCF946DC(v18, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v74 = a5;
  v68[0] = a1;
  if (!a3 || (id v19 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v20 = v19;
  uint64_t v21 = v17;
  uint64_t v22 = v5;
  long long v23 = a2;
  uint64_t v24 = sub_1DD048408();
  uint64_t v26 = v25;

  uint64_t v27 = sub_1DD048408();
  if (!v26)
  {
    a2 = v23;
    uint64_t v5 = v22;
    a5 = v74;
    uint64_t v17 = v21;
    goto LABEL_8;
  }
  if (v27 == v24 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
    a2 = v23;
    uint64_t v5 = v22;
    a5 = v74;
    uint64_t v17 = v21;
  }
  else
  {
    char v42 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v23;
    uint64_t v5 = v22;
    a5 = v74;
    uint64_t v17 = v21;
    if ((v42 & 1) == 0) {
      goto LABEL_9;
    }
  }
  _WORD v75[8] = 0;
LABEL_9:
  id v29 = objc_msgSend(a2, sel_imageRegions, v68[0], a2);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v30 = sub_1DD0486B8();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v53) {
      goto LABEL_39;
    }
  }
  else if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_39;
  }
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v31 = (id)MEMORY[0x1E01AE890](0, v30);
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v31 = *(id *)(v30 + 32);
  }
  long long v32 = v31;
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v32, sel_domainInfo);

  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v30 = sub_1DD0486B8();

  if (!(v30 >> 62))
  {
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    uint64_t v37 = 0;
    goto LABEL_40;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v54) {
    goto LABEL_39;
  }
LABEL_16:
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v34 = (id)MEMORY[0x1E01AE890](0, v30);
LABEL_19:
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v35, sel_domainKey);

    uint64_t v37 = sub_1DD048408();
    uint64_t v39 = v38;

    uint64_t v40 = sub_1DD048408();
    if (v39)
    {
      if (v37 == v40 && v39 == v41)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(*(void *)(v5 + v17)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v45 = swift_allocObject();
        uint64_t v46 = (void *)v68[0];
        *(void *)(v45 + 16) = v68[0];
        swift_retain();
        id v47 = v46;
        sub_1DCE9D160(v77);
        sub_1DCF946DC((uint64_t)v75, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v72;
        *(void *)(v48 + 24) = a5;
        swift_retain();
        uint64_t v66 = sub_1DCF606CC;
        uint64_t v67 = &block_descriptor_13;
        uint64_t v65 = &unk_1F3842D50;
LABEL_28:
        sub_1DCF93F54(v45, (uint64_t)v77, a3, (uint64_t)v13, v73, (uint64_t)sub_1DCF97AF8, v48, v44, (uint64_t)v65, (uint64_t)v66, (uint64_t)v67);
        swift_release();
        swift_release();
        sub_1DCF9793C((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCD43B94((uint64_t)v77);
        swift_release();
LABEL_45:
        sub_1DCF9793C((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        return;
      }
      char v43 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_27;
      }
      if (v37 == sub_1DD048408() && v39 == v49)
      {
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(*(void *)(v5 + v17)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v45 = swift_allocObject();
        uint64_t v51 = (void *)v68[0];
        *(void *)(v45 + 16) = v68[0];
        id v52 = v51;
        swift_retain();
        sub_1DCE9D160(v77);
        sub_1DCF946DC((uint64_t)v75, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v72;
        *(void *)(v48 + 24) = v74;
        swift_retain();
        uint64_t v66 = sub_1DCF6097C;
        uint64_t v67 = &block_descriptor_143;
        uint64_t v65 = &unk_1F3842D78;
        goto LABEL_28;
      }
      char v50 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v50) {
        goto LABEL_33;
      }
LABEL_41:
      uint64_t v55 = v69;
      sub_1DCDB40EC(v69);
      swift_bridgeObjectRetain();
      long long v56 = sub_1DD048048();
      os_log_type_t v57 = sub_1DD048858();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        uint64_t v76 = v59;
        *(_DWORD *)uint64_t v58 = 136315138;
        *(void *)&v77[0] = v37;
        *((void *)&v77[0] + 1) = v39;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
        uint64_t v60 = sub_1DD048478();
        *(void *)&v77[0] = sub_1DCED7FA0(v60, v61, &v76);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v56, v57, "experimentalSearch(): unsupported domain %s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v59, -1, -1);
        MEMORY[0x1E01B07E0](v58, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v55, v71);
      id v62 = objc_msgSend(self, sel_empty);
      sub_1DCE6A230();
      uint64_t v63 = (void *)swift_allocError();
      unsigned char *v64 = 3;
      v72(v62, v63);

      goto LABEL_45;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
    goto LABEL_41;
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v34 = *(id *)(v30 + 32);
    goto LABEL_19;
  }
  __break(1u);
}

void sub_1DCF8F6BC(uint64_t a1, void (*a2)(id, void *))
{
  uint64_t v4 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v7);
  id v9 = (void **)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v9, (uint64_t *)&unk_1EAB03DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    id v11 = objc_msgSend(self, sel_empty);
    id v12 = v10;
    a2(v11, v10);
  }
  else
  {
    sub_1DCF979D8((uint64_t)v9, (uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
    uint64_t v13 = *((void *)v6 + 23);
    uint64_t v34 = *((void *)v6 + 22);
    long long v14 = *((_OWORD *)v6 + 9);
    long long v31 = *((_OWORD *)v6 + 8);
    long long v32 = v14;
    long long v33 = *((_OWORD *)v6 + 10);
    long long v15 = *((_OWORD *)v6 + 5);
    long long v27 = *((_OWORD *)v6 + 4);
    long long v28 = v15;
    long long v16 = *((_OWORD *)v6 + 7);
    long long v29 = *((_OWORD *)v6 + 6);
    long long v30 = v16;
    long long v17 = *((_OWORD *)v6 + 1);
    long long v23 = *(_OWORD *)v6;
    long long v24 = v17;
    long long v18 = *((_OWORD *)v6 + 3);
    long long v25 = *((_OWORD *)v6 + 2);
    long long v26 = v18;
    sub_1DCD433F0((uint64_t)&v23);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DCD84020();
    v35[8] = v31;
    v35[9] = v32;
    v35[10] = v33;
    v35[4] = v27;
    v35[5] = v28;
    v35[6] = v29;
    v35[7] = v30;
    v35[0] = v23;
    v35[1] = v24;
    v35[2] = v25;
    v35[3] = v26;
    *(void *)&long long v36 = v34;
    *((void *)&v36 + 1) = v13;
    *(void *)&long long v37 = v19;
    *((void *)&v37 + 1) = v20;
    v22[10] = v33;
    v22[11] = v36;
    v22[12] = v37;
    v22[6] = v29;
    v22[7] = v30;
    v22[8] = v31;
    v22[9] = v32;
    v22[2] = v25;
    v22[3] = v26;
    v22[4] = v27;
    v22[5] = v28;
    v22[0] = v23;
    v22[1] = v24;
    id v21 = sub_1DCD9B8F4();
    sub_1DCEBE560(v35);
    a2(v21, 0);

    sub_1DCF9793C((uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
  }
}

void sub_1DCF8F974(void *a1, char *a2, void *a3, void (*a4)(id, void *), uint64_t a5)
{
  uint64_t v90 = a5;
  long long v89 = a4;
  uint64_t v86 = sub_1DD048068();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v87 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v15 = (char *)&v85 - v14;
  id v91 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  sub_1DCF946DC(*(void *)(v5 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)+ OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  if (!a3 || (id v17 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v18 = v17;
  long long v88 = v12;
  uint64_t v19 = v16;
  uint64_t v20 = a1;
  id v21 = a2;
  uint64_t v22 = sub_1DD048408();
  uint64_t v24 = v23;

  uint64_t v25 = sub_1DD048408();
  if (!v24)
  {
    a2 = v21;
    a1 = v20;
    uint64_t v16 = v19;
    id v12 = v88;
    goto LABEL_8;
  }
  if (v25 == v22 && v24 == v26)
  {
    swift_bridgeObjectRelease_n();
    a2 = v21;
    a1 = v20;
    uint64_t v16 = v19;
    id v12 = v88;
  }
  else
  {
    char v40 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v21;
    a1 = v20;
    uint64_t v16 = v19;
    id v12 = v88;
    if ((v40 & 1) == 0) {
      goto LABEL_9;
    }
  }
  v15[8] = 0;
LABEL_9:
  long long v88 = a2;
  id v27 = objc_msgSend(a2, sel_imageRegions, v85);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v28 = sub_1DD0486B8();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v51) {
      goto LABEL_40;
    }
  }
  else if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_40;
  }
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)MEMORY[0x1E01AE890](0, v28);
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v29 = *(id *)(v28 + 32);
  }
  long long v30 = v29;
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v30, sel_domainInfo);

  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v28 = sub_1DD0486B8();

  if (!(v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    uint64_t v35 = 0;
    goto LABEL_41;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v52) {
    goto LABEL_40;
  }
LABEL_16:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v32 = (id)MEMORY[0x1E01AE890](0, v28);
LABEL_19:
    long long v33 = v32;
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v33, sel_domainKey);

    uint64_t v35 = sub_1DD048408();
    uint64_t v37 = v36;

    uint64_t v38 = sub_1DD048408();
    if (v37)
    {
      if (v35 == v38 && v37 == v39)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void *)(*(void *)(v5 + v16)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = a1;
        swift_retain();
        id v44 = a1;
        sub_1DCE9D160(v93);
        sub_1DCF946DC((uint64_t)v15, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v89;
        *(void *)(v45 + 24) = v90;
        swift_retain();
        long long v83 = sub_1DCF606CC;
        long long v84 = &block_descriptor_13;
        uint64_t v82 = &unk_1F3842D50;
        uint64_t v46 = (void (*)(uint64_t))sub_1DCF97AF8;
LABEL_28:
        sub_1DCF93F54(v43, (uint64_t)v93, a3, (uint64_t)v12, v91, (uint64_t)v46, v45, v42, (uint64_t)v82, (uint64_t)v83, (uint64_t)v84);
        swift_release();
        swift_release();
        sub_1DCF9793C((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCD43B94((uint64_t)v93);
        swift_release();
LABEL_100:
        sub_1DCF9793C((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        return;
      }
      char v41 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_27;
      }
      if (v35 == sub_1DD048408() && v37 == v47)
      {
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void *)(*(void *)(v5 + v16)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = a1;
        id v49 = a1;
        swift_retain();
        sub_1DCE9D160(v93);
        sub_1DCF946DC((uint64_t)v15, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v89;
        *(void *)(v45 + 24) = v90;
        swift_retain();
        long long v83 = sub_1DCF6097C;
        long long v84 = &block_descriptor_143;
        uint64_t v82 = &unk_1F3842D78;
        uint64_t v46 = sub_1DCF95F9C;
        goto LABEL_28;
      }
      char v48 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_33;
      }
      char v50 = 0;
LABEL_42:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DB0);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1DD0535D0;
      *(void *)(v53 + 32) = sub_1DD048408();
      *(void *)(v53 + 40) = v54;
      *(void *)(v53 + 48) = sub_1DD048408();
      *(void *)(v53 + 56) = v55;
      *(void *)(v53 + 64) = sub_1DD048408();
      *(void *)(v53 + 72) = v56;
      *(void *)(v53 + 80) = sub_1DD048408();
      *(void *)(v53 + 88) = v57;
      *(void *)(v53 + 96) = sub_1DD048408();
      *(void *)(v53 + 104) = v58;
      *(void *)(v53 + 112) = sub_1DD048408();
      *(void *)(v53 + 120) = v59;
      *(void *)(v53 + 128) = sub_1DD048408();
      *(void *)(v53 + 136) = v60;
      *(void *)(v53 + 144) = sub_1DD048408();
      *(void *)(v53 + 152) = v61;
      uint64_t v62 = *(void *)(v53 + 40);
      if (v62)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 32) == v35 && v62 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v63 = *(void *)(v53 + 56);
      if (v63)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 48) == v35 && v63 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v64 = *(void *)(v53 + 72);
      if (v64)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 64) == v35 && v64 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v65 = *(void *)(v53 + 88);
      if (v65)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 80) == v35 && v65 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v66 = *(void *)(v53 + 104);
      if (v66)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 96) == v35 && v66 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v67 = *(void *)(v53 + 120);
      if (v67)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 112) == v35 && v67 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v68 = *(void *)(v53 + 136);
      if (v68)
      {
        if (v50 & 1) == 0 && (*(void *)(v53 + 128) == v35 && v68 == v37 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v50)
      {
        goto LABEL_99;
      }
      uint64_t v69 = *(void *)(v53 + 152);
      if (v69)
      {
        if ((v50 & 1) != 0 || (*(void *)(v53 + 144) != v35 || v69 != v37) && (sub_1DD048FA8() & 1) == 0) {
          goto LABEL_96;
        }
      }
      else if ((v50 & 1) == 0)
      {
LABEL_96:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v70 = v87;
        sub_1DCDB40EC(v87);
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1DD048048();
        os_log_type_t v72 = sub_1DD048858();
        if (os_log_type_enabled(v71, v72))
        {
          id v73 = (uint8_t *)swift_slowAlloc();
          uint64_t v74 = swift_slowAlloc();
          uint64_t v92 = v74;
          *(_DWORD *)id v73 = 136315138;
          *(void *)&v93[0] = v35;
          *((void *)&v93[0] + 1) = v37;
          swift_bridgeObjectRetain();
          uint64_t v75 = sub_1DD048478();
          *(void *)&v93[0] = sub_1DCED7FA0(v75, v76, &v92);
          sub_1DD048A28();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DCCF9000, v71, v72, "experimentalSearch(): unsupported domain %s", v73, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v74, -1, -1);
          MEMORY[0x1E01B07E0](v73, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v87, v86);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v70, v86);
        }
        id v79 = objc_msgSend(self, sel_empty);
        sub_1DCE6A230();
        uint64_t v80 = (void *)swift_allocError();
        unsigned char *v81 = 3;
        v89(v79, v80);

        goto LABEL_100;
      }
LABEL_99:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for AnyVIImageContent();
      *(void *)(swift_allocObject() + 16) = a1;
      id v77 = a1;
      swift_retain();
      sub_1DCE9D160(v93);
      uint64_t v78 = v90;
      swift_retain();
      sub_1DCEBD678(v93, (uint64_t)v15, (void (*)(void, void))v89, v78);
      swift_release();
      swift_release();
      sub_1DCD43B94((uint64_t)v93);
      swift_release();
      goto LABEL_100;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    swift_bridgeObjectRelease();
    uint64_t v37 = 0;
    char v50 = 1;
    goto LABEL_42;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v32 = *(id *)(v28 + 32);
    goto LABEL_19;
  }
  __break(1u);
}

id sub_1DCF906F0(void *a1, int a2, void *a3, void *a4, void *a5, void *aBlock, uint64_t (*a7)(id, id, void *, id, void *))
{
  id v12 = _Block_copy(aBlock);
  _Block_copy(v12);
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a1;
  id v17 = (void *)a7(v13, v14, a5, v16, v12);
  _Block_release(v12);
  _Block_release(v12);

  return v17;
}

id sub_1DCF907BC(uint8_t *a1, void *a2, void *a3, void *a4, void (*a5)(id, void *), uint64_t a6)
{
  uint64_t v106 = a6;
  uint64_t v105 = a5;
  uint64_t v104 = a1;
  uint64_t v101 = sub_1DD048068();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v99 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v99 - v12;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v99 - v18;
  id v107 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v20 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  uint64_t v103 = v6;
  uint64_t v21 = *(void *)(v6 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)
      + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig;
  uint64_t v108 = v19;
  sub_1DCF946DC(v21, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v102 = a3;
  if (!a3 || (id v22 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
    goto LABEL_8;
  }
  uint64_t v23 = v22;
  uint64_t v24 = sub_1DD048408();
  uint64_t v26 = v25;

  uint64_t v27 = sub_1DD048408();
  if (!v26)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v27 == v24 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v58 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v58 & 1) == 0) {
      goto LABEL_9;
    }
  }
  v108[8] = 0;
LABEL_9:
  id v29 = objc_msgSend(a2, sel_imageRegions);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v30 = sub_1DD0486B8();

  id v31 = a4;
  unint64_t v32 = sub_1DCF944CC(v30, (uint64_t)v31);

  if (!(v32 >> 62))
  {
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v86 = v13;
    sub_1DCDB40EC((uint64_t)v13);
    id v87 = v31;
    long long v88 = sub_1DD048048();
    os_log_type_t v89 = sub_1DD048858();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      *(void *)&v110[0] = v91;
      *(_DWORD *)uint64_t v90 = 136315138;
      uint64_t v104 = v90 + 4;
      id v92 = v87;
      id v93 = objc_msgSend(v92, sel_description);
      uint64_t v94 = sub_1DD048408();
      unint64_t v96 = v95;

      uint64_t v109 = sub_1DCED7FA0(v94, v96, (uint64_t *)v110);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v88, v89, "experimentalSearch(): no imageRegion matching domain %s", v90, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v91, -1, -1);
      MEMORY[0x1E01B07E0](v90, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v86, v101);
    id v83 = objc_msgSend(self, sel_empty);
    sub_1DCE6A230();
    long long v84 = (void *)swift_allocError();
    *uint64_t v97 = 4;
    v105(v83, v84);
    goto LABEL_43;
  }
  if (!sub_1DD048CC8()) {
    goto LABEL_39;
  }
LABEL_11:
  id v33 = objc_msgSend(a2, sel_annotation);
  id v34 = objc_msgSend(a2, sel_payload);
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = sub_1DD0464E8();
    unint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    unint64_t v38 = 0xF000000000000000;
  }
  uint64_t v39 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  if (v38 >> 60 == 15)
  {
    char v40 = 0;
  }
  else
  {
    char v40 = (void *)sub_1DD0464D8();
    sub_1DCD392D4(v36, v38);
  }
  id v41 = objc_msgSend(objc_allocWithZone((Class)VIVisualUnderstanding), sel_initWithImageRegions_annotation_payload_, v39, v33, v40);

  uint64_t v42 = sub_1DD048408();
  uint64_t v44 = v43;
  if (v42 != sub_1DD048408() || v44 != v45)
  {
    char v46 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_21;
    }
    uint64_t v54 = sub_1DD048408();
    uint64_t v56 = v55;
    if (v54 == sub_1DD048408() && v56 == v57)
    {
      swift_bridgeObjectRelease_n();
LABEL_28:
      uint64_t v60 = *(void *)(*(void *)(v103 + v20)
                      + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
      type metadata accessor for AnyVIImageContent();
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v104;
      *(void *)(v61 + 16) = v104;
      uint64_t v63 = v62;
      swift_retain();
      sub_1DCE9D160(v110);
      uint64_t v51 = (uint64_t)v108;
      sub_1DCF946DC((uint64_t)v108, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v105;
      *(void *)(v64 + 24) = v106;
      swift_retain();
      id v53 = v107;
      sub_1DCF93F54(v61, (uint64_t)v110, v102, (uint64_t)v16, v107, (uint64_t)sub_1DCF97AF8, v64, v60, (uint64_t)&unk_1F3842D78, (uint64_t)sub_1DCF6097C, (uint64_t)&block_descriptor_143);
      swift_release();
      swift_release();

      goto LABEL_29;
    }
    char v59 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_28;
    }
    if (qword_1EAB02060 != -1) {
      swift_once();
    }
    uint64_t v65 = qword_1EAB1D358;
    uint64_t v66 = sub_1DD048408();
    LOBYTE(v65) = sub_1DCF8C928(v66, v67, (void *)v65);
    swift_bridgeObjectRelease();
    if (v65)
    {
      type metadata accessor for AnyVIImageContent();
      uint64_t v68 = swift_allocObject();
      uint64_t v69 = v104;
      *(void *)(v68 + 16) = v104;
      uint64_t v70 = v69;
      swift_retain();
      sub_1DCE9D160(v110);
      uint64_t v71 = v106;
      swift_retain();
      uint64_t v51 = (uint64_t)v108;
      sub_1DCEBD678(v110, (uint64_t)v108, (void (*)(void, void))v105, v71);
      swift_release();
      swift_release();

      sub_1DCD43B94((uint64_t)v110);
      swift_release();
LABEL_44:
      id v53 = v107;
      goto LABEL_45;
    }
    uint64_t v72 = v99;
    sub_1DCDB40EC(v99);
    id v73 = v31;
    uint64_t v74 = sub_1DD048048();
    os_log_type_t v75 = sub_1DD048858();
    if (os_log_type_enabled(v74, v75))
    {
      unint64_t v76 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(void *)&v110[0] = v77;
      *(_DWORD *)unint64_t v76 = 136315138;
      uint64_t v104 = v76 + 4;
      id v78 = v73;
      id v79 = objc_msgSend(v78, sel_description);
      uint64_t v80 = sub_1DD048408();
      unint64_t v82 = v81;

      uint64_t v109 = sub_1DCED7FA0(v80, v82, (uint64_t *)v110);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v74, v75, "experimentalSearch(): unsupported domain %s", v76, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v77, -1, -1);
      MEMORY[0x1E01B07E0](v76, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v72, v101);
    }
    id v83 = objc_msgSend(self, sel_empty);
    sub_1DCE6A230();
    long long v84 = (void *)swift_allocError();
    *uint64_t v85 = 3;
    v105(v83, v84);

LABEL_43:
    uint64_t v51 = (uint64_t)v108;
    goto LABEL_44;
  }
  swift_bridgeObjectRelease_n();
LABEL_21:
  uint64_t v47 = *(void *)(*(void *)(v103 + v20) + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
  type metadata accessor for AnyVIImageContent();
  uint64_t v48 = swift_allocObject();
  id v49 = v104;
  *(void *)(v48 + 16) = v104;
  swift_retain();
  char v50 = v49;
  sub_1DCE9D160(v110);
  uint64_t v51 = (uint64_t)v108;
  sub_1DCF946DC((uint64_t)v108, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v105;
  *(void *)(v52 + 24) = v106;
  swift_retain();
  id v53 = v107;
  sub_1DCF93F54(v48, (uint64_t)v110, v102, (uint64_t)v16, v107, (uint64_t)sub_1DCF97AF8, v52, v47, (uint64_t)&unk_1F3842D50, (uint64_t)sub_1DCF606CC, (uint64_t)&block_descriptor_13);

  swift_release();
  swift_release();
LABEL_29:
  sub_1DCF9793C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  sub_1DCD43B94((uint64_t)v110);
  swift_release();
LABEL_45:
  sub_1DCF9793C(v51, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return v53;
}

void sub_1DCF914AC(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_domainInfo);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v2 = sub_1DD0486B8();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    unint64_t v8 = 0xE000000000000000;
    goto LABEL_9;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E01AE890](0, v2);
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v4 = *(id *)(v2 + 32);
  }
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v5, sel_domainKey);

  uint64_t v3 = sub_1DD048408();
  unint64_t v8 = v7;

LABEL_9:
  if (v3 != sub_1DD048408() || v8 != v9) {
    sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1DCF9171C(void *a1)
{
  LOBYTE(a1) = sub_1DCEBC544(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1DCF9183C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1DCF91870(a1, a2, a3, a4, (uint64_t)&unk_1F3842940, (uint64_t)sub_1DCF96D44, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))VisualIntelligenceService.parse(query:cachedResults:completion:));
}

uint64_t sub_1DCF91870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  swift_retain();
  swift_retain();
  uint64_t v14 = a7(a1, a2, a6, v13);
  swift_release();
  swift_release();
  return v14;
}

void sub_1DCF91920(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v11, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = *v11;
    id v13 = v12;
    ((void (*)(void, void, void *))a2)(0, 0, v12);

    return;
  }
  sub_1DCF979D8((uint64_t)v11, v8, type metadata accessor for ParseResult);
  long long v14 = *(_OWORD *)(v8 + 144);
  long long v61 = *(_OWORD *)(v8 + 128);
  long long v62 = v14;
  long long v63 = *(_OWORD *)(v8 + 160);
  uint64_t v64 = *(void *)(v8 + 176);
  long long v15 = *(_OWORD *)(v8 + 80);
  long long v57 = *(_OWORD *)(v8 + 64);
  long long v58 = v15;
  long long v16 = *(_OWORD *)(v8 + 112);
  long long v59 = *(_OWORD *)(v8 + 96);
  long long v60 = v16;
  long long v17 = *(_OWORD *)(v8 + 16);
  long long v53 = *(_OWORD *)v8;
  long long v18 = *(_OWORD *)(v8 + 32);
  long long v19 = *(_OWORD *)(v8 + 48);
  long long v54 = v17;
  long long v55 = v18;
  long long v56 = v19;
  id v20 = sub_1DCD9AC9C();
  id v21 = objc_msgSend(objc_allocWithZone((Class)VIParseResult), sel_initWithVisualUnderstanding_, v20);

  id v22 = objc_msgSend(v21, sel_visualUnderstanding);
  id v23 = objc_msgSend(v22, sel_imageRegions);

  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v24 = sub_1DD0486B8();

  if (v24 >> 62) {
    goto LABEL_36;
  }
  uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_5:
  uint64_t v52 = (void (*)(uint64_t, void *, void))a2;
  uint64_t v51 = a3;
  uint64_t v50 = v8;
  id v49 = v21;
  if (v25)
  {
    if (v25 >= 1)
    {
      uint64_t v8 = 0;
      a3 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v26 = (id)MEMORY[0x1E01AE890](v8, v24);
        }
        else {
          id v26 = *(id *)(v24 + 8 * v8 + 32);
        }
        uint64_t v27 = v26;
        id v28 = objc_msgSend(v26, sel_domainInfo, v49, v50, v51);
        sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
        unint64_t v29 = sub_1DD0486B8();

        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          id v21 = (id)sub_1DD048CC8();
          swift_bridgeObjectRelease();
          if (!v21)
          {
LABEL_8:

            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        else
        {
          id v21 = *(id *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v21) {
            goto LABEL_8;
          }
        }
        if ((v29 & 0xC000000000000001) != 0)
        {
          id v30 = (id)MEMORY[0x1E01AE890](0, v29);
        }
        else
        {
          if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_36:
            swift_bridgeObjectRetain();
            uint64_t v25 = sub_1DD048CC8();
            goto LABEL_5;
          }
          id v30 = *(id *)(v29 + 32);
        }
        id v31 = v30;
        swift_bridgeObjectRelease();
        id v32 = objc_msgSend(v31, sel_domainKey);

        uint64_t v33 = sub_1DD048408();
        uint64_t v35 = v34;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a3 = sub_1DCE9E328(0, a3[2] + 1, 1, a3);
        }
        a2 = a3[2];
        unint64_t v36 = a3[3];
        if (a2 >= v36 >> 1) {
          a3 = sub_1DCE9E328((void *)(v36 > 1), a2 + 1, 1, a3);
        }
        a3[2] = a2 + 1;
        unint64_t v37 = &a3[2 * a2];
        v37[4] = v33;
        v37[5] = v35;
LABEL_9:
        if (v25 == ++v8) {
          goto LABEL_27;
        }
      }
    }
    __break(1u);
  }
  else
  {
    a3 = (void *)MEMORY[0x1E4FBC860];
LABEL_27:
    swift_bridgeObjectRelease_n();
    uint64_t v38 = sub_1DCD54788((uint64_t)a3);
    swift_bridgeObjectRelease();
    if (qword_1EBE82D68 != -1) {
      swift_once();
    }
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1DCF93698(v39, v38);
    swift_bridgeObjectRelease();
    id v41 = sub_1DCF4D5B4(v40);
    swift_release();
    uint64_t v42 = v41[2];
    uint64_t v43 = v52;
    uint64_t v44 = v50;
    uint64_t v45 = v49;
    if (v42)
    {
      *(void *)&long long v53 = MEMORY[0x1E4FBC860];
      sub_1DD048C58();
      char v46 = v41 + 5;
      do
      {
        swift_bridgeObjectRetain();
        sub_1DD0483D8();
        swift_bridgeObjectRelease();
        sub_1DD048C38();
        sub_1DD048C68();
        sub_1DD048C78();
        sub_1DD048C48();
        v46 += 2;
        --v42;
      }
      while (v42);
      uint64_t v47 = v53;
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v47 = MEMORY[0x1E4FBC860];
    }
    id v48 = v45;
    v43(v47, v45, 0);
    swift_bridgeObjectRelease();

    sub_1DCF9793C(v44, type metadata accessor for ParseResult);
  }
}

void sub_1DCF9204C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1;
  if (a1)
  {
    sub_1DCD95648(0, &qword_1EBE82D70);
    uint64_t v7 = (void *)sub_1DD0486A8();
  }
  if (a3) {
    uint64_t v8 = sub_1DD046368();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *, uint64_t))(a4 + 16))(a4, v7, a2);
}

id sub_1DCF92100(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  sub_1DCDB40EC((uint64_t)v8);
  uint64_t v10 = sub_1DD048048();
  os_log_type_t v11 = sub_1DD048848();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_1DCCF9000, v10, v11, "VisualIntelligence submit user feedback", v12, 2u);
    MEMORY[0x1E01B07E0](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_retain();
  id v13 = objc_msgSend(a1, sel_image);
  id v14 = objc_msgSend(a1, sel_userFeedbackPayload);
  if (v14)
  {
    long long v15 = v14;
    uint64_t v16 = sub_1DD0464E8();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0xF000000000000000;
  }
  id v19 = objc_msgSend(a1, sel_sfReportData);
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = sub_1DD0464E8();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xF000000000000000;
  }
  id v24 = objc_msgSend(a1, sel_reportIdentifier);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = sub_1DD048408();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  id v29 = VisualIntelligenceService.submitUserFeedback(image:request:report:reportIdentifier:environment:container:completion:)((uint64_t)v13, v16, v18, v21, v23, v26, v28, 0, 1u, 0, 0, sub_1DCF97868, v9);
  swift_bridgeObjectRelease();
  sub_1DCD392D4(v21, v23);
  sub_1DCD392D4(v16, v18);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v29;
}

id sub_1DCF923DC(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v31 = a2;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v8);
  uint64_t v9 = sub_1DD048048();
  os_log_type_t v10 = sub_1DD048848();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v11 = 0;
    _os_log_impl(&dword_1DCCF9000, v9, v10, "VisualIntelligence submit user feedback", v11, 2u);
    MEMORY[0x1E01B07E0](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_retain();
  id v12 = objc_msgSend(a1, sel_image);
  id v13 = objc_msgSend(a1, sel_userFeedbackPayload);
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = sub_1DD0464E8();
    unint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v17 = 0xF000000000000000;
  }
  id v18 = objc_msgSend(a1, sel_sfReportData);
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_1DD0464E8();
    unint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v22 = 0xF000000000000000;
  }
  id v23 = objc_msgSend(a1, sel_reportIdentifier);
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = sub_1DD048408();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  id v28 = VisualIntelligenceService.submitUserFeedback(image:request:report:reportIdentifier:environment:container:completion:)((uint64_t)v12, v15, v17, v20, v22, v25, v27, 0, 1u, 0, 0, v31, a3);
  swift_bridgeObjectRelease();
  sub_1DCD392D4(v20, v22);
  sub_1DCD392D4(v15, v17);
  swift_release();
  swift_unknownObjectRelease();
  return v28;
}

void sub_1DCF92718(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1DD046368();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id sub_1DCF9277C(void *a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  id v6 = objc_msgSend(a1, sel_image);
  objc_msgSend(a1, sel_normalizedRegionOfInterest);
  v18.origin.x = 0.0;
  v18.origin.y = 0.0;
  v18.size.width = 1.0;
  v18.size.height = 1.0;
  CGRect v17 = CGRectIntersection(v16, v18);
  id v7 = objc_msgSend(a1, sel_domainsOfInterest, *(void *)&v17.origin.x, *(void *)&v17.origin.y, *(void *)&v17.size.width, *(void *)&v17.size.height);
  uint64_t v8 = sub_1DD0487D8();

  uint64_t v9 = Set<>.toVisualDomains()(v8);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a1, sel_annotation);
  id v11 = objc_msgSend(a1, sel_queryContext);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  swift_retain();
  id v13 = VisualIntelligenceService.parseAndSearch(image:regionOfInterest:boundingBoxes:domains:annotation:queryContext:completion:)((uint64_t)v6, &v15, MEMORY[0x1E4FBC860], v9, v10, v11, (uint64_t)sub_1DCF96D4C, v12);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v13;
}

uint64_t sub_1DCF92930(uint64_t a1, void (*a2)(id, uint64_t))
{
  sub_1DCF978D4(a1, (uint64_t)v14);
  sub_1DCF978D4((uint64_t)v14, (uint64_t)v15);
  if (sub_1DCEDD7E0((uint64_t)v15) == 1)
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v15);
    uint64_t v4 = *v3;
    uint64_t v5 = self;
    sub_1DCF978D4((uint64_t)v14, (uint64_t)v13);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v13);
    id v7 = *v6;
    id v8 = *v6;
    id v9 = objc_msgSend(v5, sel_empty);
    id v10 = v7;
    a2(v9, v4);
    sub_1DCEDD7E8((uint64_t)v14);
  }
  else
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v15);
    sub_1DCF978D4((uint64_t)v14, (uint64_t)v13);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v13);
    sub_1DCEBE47C(v11);
    id v9 = sub_1DCD9B8F4();
    a2(v9, 0);
  }

  return sub_1DCEDD7E8((uint64_t)v14);
}

uint64_t sub_1DCF92B3C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v32 = sub_1DD0472D8();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v43 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  sub_1DCF946DC(*(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)+ OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v33 = v7;
  uint64_t v37 = a4;
  if (!a3 || (id v13 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
    goto LABEL_11;
  }
  id v14 = v13;
  uint64_t v15 = sub_1DD048408();
  uint64_t v17 = v16;

  uint64_t v18 = sub_1DD048408();
  if (!v17)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v22 = v34;
    goto LABEL_12;
  }
  if (v18 == v15 && v17 == v19)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v22 = v34;
  }
  else
  {
    char v21 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v34;
    if ((v21 & 1) == 0) {
      goto LABEL_12;
    }
  }
  *((unsigned char *)v11 + 8) = 0;
LABEL_12:
  uint64_t v23 = *(void *)(*(void *)(v4 + v12) + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
  uint64_t v24 = type metadata accessor for AnyVIImageContent();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v35;
  *(void *)(v25 + 16) = v35;
  v40[3] = v24;
  v40[4] = &off_1F383AB60;
  v40[0] = v25;
  swift_retain();
  id v27 = v26;
  sub_1DCE9D160(v41);
  v38[8] = v41[8];
  v38[9] = v41[9];
  v38[10] = v41[10];
  uint64_t v39 = v42;
  v38[4] = v41[4];
  void v38[5] = v41[5];
  v38[6] = v41[6];
  v38[7] = v41[7];
  v38[0] = v41[0];
  v38[1] = v41[1];
  v38[2] = v41[2];
  v38[3] = v41[3];
  uint64_t v28 = v43;
  uint64_t v29 = v23;
  sub_1DCF5A3DC((uint64_t)v40, v38, a3, v11, v37, v43);
  swift_release();
  sub_1DCD43B94((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  if (!v22)
  {
    sub_1DCF5ED50(&qword_1EAB025C0, MEMORY[0x1E4F894C8]);
    uint64_t v30 = v32;
    uint64_t v29 = sub_1DD047E28();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v28, v30);
  }
  sub_1DCF9793C((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return v29;
}

uint64_t sub_1DCF9302C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  swift_getObjectType();
  sub_1DCE9BF6C((uint64_t *)v36);
  v44.origin.x = 0.0;
  v44.origin.y = 0.0;
  v44.size.width = 1.0;
  v44.size.height = 1.0;
  v43.origin.x = a1;
  v43.origin.y = a2;
  v43.size.width = a3;
  v43.size.height = a4;
  CGRect v37 = CGRectIntersection(v43, v44);
  char v38 = 0;
  uint64_t v39 = 0;
  uint64_t v10 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)
                  + 32);
  if (*(unsigned char *)(v10 + 16))
  {
    if (*(unsigned char *)(v10 + 16) == 1)
    {
      id v11 = v41;
      swift_retain();
      sub_1DCE4DC28(v36, 0, v41);
      if (!v5) {
        goto LABEL_8;
      }
LABEL_6:
      sub_1DCF96D54((uint64_t)v36);
      swift_release();
      return v10;
    }
    id v11 = v42;
    swift_retain();
    sub_1DCE4E2C8((uint64_t)v36, 0, (uint64_t)v42);
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    id v11 = v40;
    swift_retain();
    sub_1DCE4D57C(v36, 0, (uint64_t)v40);
    if (v5) {
      goto LABEL_6;
    }
  }
LABEL_8:
  swift_release();
  uint64_t v12 = v11[4];
  id v13 = (void *)v11[5];
  id v14 = (void *)v11[6];
  uint64_t v15 = (void *)v11[7];
  uint64_t v16 = v11[2];
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v32 = (void *)v11[7];
    uint64_t v33 = (void *)v11[5];
    uint64_t v34 = v11[4];
    uint64_t v35 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DD048C58();
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = *(void *)(v16 + v18 + 32);
      double v20 = *(double *)(v16 + v18 + 40);
      double v21 = *(double *)(v16 + v18 + 48);
      double v22 = *(double *)(v16 + v18 + 56);
      double v23 = *(double *)(v16 + v18 + 64);
      int v24 = *(_DWORD *)(v16 + v18 + 104);
      id v25 = objc_allocWithZone((Class)VIOntologyNode);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v26 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      id v27 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      id v28 = objc_msgSend(v25, sel_initWithKnowledgeGraphID_labelDebugDescription_, v26, v27);

      id v29 = objc_allocWithZone((Class)VIDetectedResult);
      LODWORD(v30) = v24;
      objc_msgSend(v29, sel_initWithOntologyNode_position_boundingBox_score_, v28, v19, v20, v21, v22, v23, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1DD048C38();
      sub_1DD048C68();
      sub_1DD048C78();
      sub_1DD048C48();
      v18 += 80;
      --v17;
    }
    while (v17);
    uint64_t v10 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCE92188(v34, v33, v14, v32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCE92188(v12, v13, v14, v15);
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  sub_1DCF96D54((uint64_t)v36);
  return v10;
}

uint64_t sub_1DCF934E8(void *a1)
{
  swift_retain();
  uint64_t v2 = sub_1DCEA64A8(a1);
  swift_release();
  return v2;
}

id VisualIntelligenceServiceCompatible.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VisualIntelligenceServiceCompatible();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DCF93698(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1DCF93820((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1DCF93820((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1E01B07E0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1DCF93820(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v31 = *(void *)(a3 + 16);
  if (!v31)
  {
    uint64_t v26 = 0;
    goto LABEL_27;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v30 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  for (uint64_t i = 0; i != v31; ++i)
  {
    uint64_t v7 = (uint64_t *)(v30 + 16 * i);
    uint64_t v9 = *v7;
    uint64_t v8 = v7[1];
    sub_1DD0490B8();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    uint64_t v10 = sub_1DD049108();
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v12 = v10 & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = 1 << v12;
    if (((1 << v12) & *(void *)(v32 + 8 * (v12 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v15 = *(void *)(a4 + 48);
    uint64_t v16 = (void *)(v15 + 16 * v12);
    BOOL v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1DD048FA8() & 1) == 0)
    {
      uint64_t v21 = ~v11;
      for (unint64_t j = v12 + 1; ; unint64_t j = v23 + 1)
      {
        unint64_t v23 = j & v21;
        if (((*(void *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0) {
          break;
        }
        int v24 = (void *)(v15 + 16 * v23);
        BOOL v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1DD048FA8() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v13 = v23 >> 6;
          uint64_t v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
    unint64_t v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1DCF93CBC(a1, v5, v26, a4);
}

uint64_t sub_1DCF93A34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C0);
  uint64_t result = sub_1DD048B68();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v4 + 48) + v14);
    sub_1DD0490B8();
    sub_1DCD9C35C(v18);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*(void *)(v9 + 48) + v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DCF93CBC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86910);
  uint64_t result = sub_1DD048B68();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1DD0490B8();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1DCF93F54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v43 = a7;
  uint64_t v42 = a6;
  id v41 = a5;
  v39[0] = a4;
  uint64_t v44 = a11;
  uint64_t v40 = a10;
  v39[1] = a9;
  uint64_t v46 = sub_1DD0481B8();
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1DD0481D8();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x1F4188790](v18 - 8);
  v53[3] = type metadata accessor for AnyVIImageContent();
  v53[4] = &off_1F383AB60;
  v53[0] = a1;
  strcpy((char *)v54, "E2E - Search");
  HIBYTE(v54[6]) = 0;
  v54[7] = -5120;
  long long v55 = "Search Overall";
  uint64_t v56 = 14;
  char v57 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v20 = sub_1DCEA469C((uint64_t)v54, 0);
  v39[2] = *(void *)(a8 + 56);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  sub_1DCD3A3BC((uint64_t)v53, (uint64_t)v52);
  sub_1DCF946DC(v39[0], (uint64_t)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v22 = (v19 + 263) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v24 + 152) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v24 + 168) = v25;
  *(_OWORD *)(v24 + 184) = *(_OWORD *)(a2 + 160);
  long long v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v24 + 88) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v24 + 104) = v26;
  long long v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v24 + 136) = v27;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v24 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v24 + 40) = v28;
  long long v29 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)(a2 + 32);
  *(void *)(v24 + 16) = v21;
  *(void *)(v24 + 200) = *(void *)(a2 + 176);
  *(_OWORD *)(v24 + 72) = v29;
  sub_1DCD3A4DC(v52, v24 + 208);
  *(void *)(v24 + 248) = a3;
  sub_1DCF979D8((uint64_t)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + 256, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  *(void *)(v24 + v22) = v20;
  uint64_t v30 = v41;
  *(void *)(v24 + v23) = v41;
  uint64_t v31 = (void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v32 = v43;
  *uint64_t v31 = v42;
  v31[1] = v32;
  aBlock[4] = v40;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = v44;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCD433F0(a2);
  id v34 = a3;
  swift_retain();
  id v35 = v30;
  swift_retain();
  sub_1DD0481C8();
  uint64_t v50 = MEMORY[0x1E4FBC860];
  sub_1DCF5ED50(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCEBF914();
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v17, v36, v33);
  _Block_release(v33);
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v48);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t sub_1DCF944CC(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v14 = v5;
      unint64_t v15 = v4;
      while (v7)
      {
        id v9 = (id)MEMORY[0x1E01AE890](v6, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_17;
        }
        id v16 = v9;
        sub_1DCF914AC(&v16);
        if (v2)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a2;
        }
        if (v12)
        {
          sub_1DD048C38();
          sub_1DD048C68();
          sub_1DD048C78();
          sub_1DD048C48();
          uint64_t v5 = v14;
          unint64_t v4 = v15;
        }
        else
        {
        }
        ++v6;
        if (v11 == v5)
        {
          a2 = v17;
          goto LABEL_20;
        }
      }
      if (v6 < *(void *)(v8 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v5 = sub_1DD048CC8();
      if (!v5) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v6 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a2 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t type metadata accessor for VisualIntelligenceServiceCompatible()
{
  return self;
}

uint64_t sub_1DCF94688()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DCF946C0(uint64_t a1)
{
  sub_1DCF8E79C(a1, *(void (**)(id, void *, id))(v1 + 16));
}

uint64_t sub_1DCF946DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1DCF94744(uint64_t a1)
{
  sub_1DCF8E454(a1, *(void (**)(id, id))(v1 + 16));
}

void sub_1DCF94760(void *a1, void *a2, void *a3, uint64_t a4, void (**a5)(const void *, id, void *))
{
  uint64_t v71 = a1;
  uint64_t v74 = sub_1DD048068();
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v78 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v70 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  id v16 = objc_allocWithZone((Class)type metadata accessor for CancelSession());
  os_log_type_t v75 = a5;
  _Block_copy(a5);
  id v17 = objc_msgSend(v16, sel_init);
  uint64_t v18 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  uint64_t v70 = a4;
  sub_1DCF946DC(*(void *)(a4 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)+ OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  if (!a3 || (id v19 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v20 = v19;
  uint64_t v21 = a2;
  uint64_t v22 = sub_1DD048408();
  uint64_t v24 = v23;

  uint64_t v25 = sub_1DD048408();
  if (!v24)
  {
    a2 = v21;
    goto LABEL_8;
  }
  if (v25 == v22 && v24 == v26)
  {
    swift_bridgeObjectRelease_n();
    a2 = v21;
  }
  else
  {
    char v41 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v21;
    if ((v41 & 1) == 0) {
      goto LABEL_9;
    }
  }
  v14[8] = 0;
LABEL_9:
  id v27 = objc_msgSend(a2, sel_imageRegions);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v28 = sub_1DD0486B8();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v77 = v15;
  unint64_t v76 = v17;
  if (!v29) {
    goto LABEL_39;
  }
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v30 = (id)MEMORY[0x1E01AE890](0, v28);
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v30 = *(id *)(v28 + 32);
  }
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v31, sel_domainInfo);

  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v28 = sub_1DD0486B8();

  if (!(v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_17;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    uint64_t v36 = 0;
    goto LABEL_40;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v55) {
    goto LABEL_39;
  }
LABEL_17:
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v33 = (id)MEMORY[0x1E01AE890](0, v28);
LABEL_20:
    id v34 = v33;
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v34, sel_domainKey);

    uint64_t v36 = sub_1DD048408();
    uint64_t v38 = v37;

    uint64_t v39 = sub_1DD048408();
    if (v38)
    {
      if (v36 == v39 && v38 == v40)
      {
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(*(void *)(v70 + v18)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v44 = swift_allocObject();
        uint64_t v45 = v71;
        *(void *)(v44 + 16) = v71;
        swift_retain();
        id v46 = v45;
        sub_1DCE9D160(v80);
        uint64_t v47 = v72;
        sub_1DCF946DC((uint64_t)v14, v72, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        uint64_t v49 = v77;
        *(void *)(v48 + 16) = sub_1DCF97A5C;
        *(void *)(v48 + 24) = v49;
        swift_retain();
        uint64_t v68 = sub_1DCF606CC;
        uint64_t v69 = &block_descriptor_13;
        uint64_t v67 = &unk_1F3842D50;
LABEL_29:
        sub_1DCF93F54(v44, (uint64_t)v80, a3, v47, v76, (uint64_t)sub_1DCF97AF8, v48, v43, (uint64_t)v67, (uint64_t)v68, (uint64_t)v69);
        swift_release();
        swift_release();
        sub_1DCF9793C(v47, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCD43B94((uint64_t)v80);
        swift_release();
LABEL_45:
        sub_1DCF9793C((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        swift_release();
        return;
      }
      char v42 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v42) {
        goto LABEL_28;
      }
      if (v36 == sub_1DD048408() && v38 == v50)
      {
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(*(void *)(v70 + v18)
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v44 = swift_allocObject();
        uint64_t v52 = v71;
        *(void *)(v44 + 16) = v71;
        id v53 = v52;
        swift_retain();
        sub_1DCE9D160(v80);
        uint64_t v47 = v72;
        sub_1DCF946DC((uint64_t)v14, v72, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        uint64_t v54 = v77;
        *(void *)(v48 + 16) = sub_1DCF97A5C;
        *(void *)(v48 + 24) = v54;
        swift_retain();
        uint64_t v68 = sub_1DCF6097C;
        uint64_t v69 = &block_descriptor_143;
        uint64_t v67 = &unk_1F3842D78;
        goto LABEL_29;
      }
      char v51 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v51) {
        goto LABEL_34;
      }
LABEL_41:
      uint64_t v56 = v78;
      sub_1DCDB40EC(v78);
      swift_bridgeObjectRetain();
      char v57 = sub_1DD048048();
      os_log_type_t v58 = sub_1DD048858();
      if (os_log_type_enabled(v57, v58))
      {
        long long v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v79 = v60;
        *(_DWORD *)long long v59 = 136315138;
        *(void *)&v80[0] = v36;
        *((void *)&v80[0] + 1) = v38;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
        uint64_t v61 = sub_1DD048478();
        *(void *)&v80[0] = sub_1DCED7FA0(v61, v62, &v79);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v57, v58, "experimentalSearch(): unsupported domain %s", v59, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v60, -1, -1);
        MEMORY[0x1E01B07E0](v59, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v78, v74);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v56, v74);
      }
      id v63 = objc_msgSend(self, sel_empty);
      sub_1DCE6A230();
      uint64_t v64 = (void *)swift_allocError();
      *uint64_t v65 = 3;
      uint64_t v66 = (void *)sub_1DD046368();
      v75[2](v75, v63, v66);

      goto LABEL_45;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    swift_bridgeObjectRelease();
    uint64_t v38 = 0;
    goto LABEL_41;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v33 = *(id *)(v28 + 32);
    goto LABEL_20;
  }
  __break(1u);
}

void sub_1DCF95190(void *a1, void *a2, void *a3, uint8_t *a4, void (**a5)(void, void, void))
{
  uint64_t v89 = sub_1DD048068();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  uint64_t v90 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v91 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v87 - v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  id v17 = objc_allocWithZone((Class)type metadata accessor for CancelSession());
  _Block_copy(a5);
  _Block_copy(a5);
  id v95 = objc_msgSend(v17, sel_init);
  id v93 = a4;
  uint64_t v92 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  sub_1DCF946DC(*(void *)&a4[OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service]+ OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  if (!a3 || (id v18 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v19 = v18;
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = sub_1DD048408();
  uint64_t v26 = v25;

  uint64_t v27 = sub_1DD048408();
  if (!v26)
  {
    a2 = v23;
    a1 = v22;
    uint64_t v16 = v21;
    uint64_t v15 = v20;
    goto LABEL_8;
  }
  if (v27 == v24 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
    a2 = v23;
    a1 = v22;
    uint64_t v16 = v21;
    uint64_t v15 = v20;
  }
  else
  {
    char v42 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v23;
    a1 = v22;
    uint64_t v16 = v21;
    uint64_t v15 = v20;
    if ((v42 & 1) == 0) {
      goto LABEL_9;
    }
  }
  v15[8] = 0;
LABEL_9:
  uint64_t v94 = (uint64_t)a2;
  id v29 = objc_msgSend(a2, sel_imageRegions);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v30 = sub_1DD0486B8();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v53) {
      goto LABEL_40;
    }
  }
  else if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_40;
  }
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v31 = (id)MEMORY[0x1E01AE890](0, v30);
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v31 = *(id *)(v30 + 32);
  }
  id v32 = v31;
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v32, sel_domainInfo);

  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v30 = sub_1DD0486B8();

  if (!(v30 >> 62))
  {
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    uint64_t v37 = 0;
    goto LABEL_41;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v54) {
    goto LABEL_40;
  }
LABEL_16:
  if ((v30 & 0xC000000000000001) != 0)
  {
    id v34 = (id)MEMORY[0x1E01AE890](0, v30);
LABEL_19:
    id v35 = v34;
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v35, sel_domainKey);

    uint64_t v37 = sub_1DD048408();
    uint64_t v39 = v38;

    uint64_t v40 = sub_1DD048408();
    if (v39)
    {
      if (v37 == v40 && v39 == v41)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(*(void *)&v93[v92]
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = a1;
        swift_retain();
        id v46 = a1;
        sub_1DCE9D160(v97);
        uint64_t v47 = v91;
        sub_1DCF946DC((uint64_t)v15, v91, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = sub_1DCF97A5C;
        *(void *)(v48 + 24) = v16;
        swift_retain();
        uint64_t v85 = sub_1DCF606CC;
        uint64_t v86 = &block_descriptor_13;
        long long v84 = &unk_1F3842D50;
LABEL_28:
        sub_1DCF93F54(v45, (uint64_t)v97, a3, v47, v95, (uint64_t)sub_1DCF97AF8, v48, v44, (uint64_t)v84, (uint64_t)v85, (uint64_t)v86);
        swift_release();
        swift_release();
        sub_1DCF9793C(v47, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCD43B94((uint64_t)v97);
        swift_release();
LABEL_100:
        sub_1DCF9793C((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        swift_release();
        _Block_release(a5);
        return;
      }
      char v43 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_27;
      }
      if (v37 == sub_1DD048408() && v39 == v49)
      {
        swift_bridgeObjectRelease();
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(*(void *)&v93[v92]
                        + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
        type metadata accessor for AnyVIImageContent();
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = a1;
        id v51 = a1;
        swift_retain();
        sub_1DCE9D160(v97);
        uint64_t v47 = v91;
        sub_1DCF946DC((uint64_t)v15, v91, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = sub_1DCF97A5C;
        *(void *)(v48 + 24) = v16;
        swift_retain();
        uint64_t v85 = sub_1DCF6097C;
        uint64_t v86 = &block_descriptor_143;
        long long v84 = &unk_1F3842D78;
        goto LABEL_28;
      }
      char v50 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v50) {
        goto LABEL_33;
      }
      int v52 = 0;
LABEL_42:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DB0);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1DD0535D0;
      *(void *)(v55 + 32) = sub_1DD048408();
      *(void *)(v55 + 40) = v56;
      *(void *)(v55 + 48) = sub_1DD048408();
      *(void *)(v55 + 56) = v57;
      *(void *)(v55 + 64) = sub_1DD048408();
      *(void *)(v55 + 72) = v58;
      *(void *)(v55 + 80) = sub_1DD048408();
      *(void *)(v55 + 88) = v59;
      *(void *)(v55 + 96) = sub_1DD048408();
      *(void *)(v55 + 104) = v60;
      *(void *)(v55 + 112) = sub_1DD048408();
      *(void *)(v55 + 120) = v61;
      *(void *)(v55 + 128) = sub_1DD048408();
      *(void *)(v55 + 136) = v62;
      *(void *)(v55 + 144) = sub_1DD048408();
      *(void *)(v55 + 152) = v63;
      uint64_t v64 = *(void *)(v55 + 40);
      if (v64)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 32) == v37 && v64 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v65 = *(void *)(v55 + 56);
      if (v65)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 48) == v37 && v65 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v66 = *(void *)(v55 + 72);
      if (v66)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 64) == v37 && v66 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v67 = *(void *)(v55 + 88);
      if (v67)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 80) == v37 && v67 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v68 = *(void *)(v55 + 104);
      if (v68)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 96) == v37 && v68 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v69 = *(void *)(v55 + 120);
      if (v69)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 112) == v37 && v69 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v70 = *(void *)(v55 + 136);
      if (v70)
      {
        if (v52 & 1) == 0 && (*(void *)(v55 + 128) == v37 && v70 == v39 || (sub_1DD048FA8())) {
          goto LABEL_99;
        }
      }
      else if (v52)
      {
        goto LABEL_99;
      }
      uint64_t v71 = *(void *)(v55 + 152);
      if (v71)
      {
        if ((v52 & 1) != 0 || (*(void *)(v55 + 144) != v37 || v71 != v39) && (sub_1DD048FA8() & 1) == 0) {
          goto LABEL_96;
        }
      }
      else if ((v52 & 1) == 0)
      {
LABEL_96:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v72 = v90;
        sub_1DCDB40EC(v90);
        swift_bridgeObjectRetain();
        uint64_t v73 = sub_1DD048048();
        os_log_type_t v74 = sub_1DD048858();
        if (os_log_type_enabled(v73, v74))
        {
          os_log_type_t v75 = (uint8_t *)swift_slowAlloc();
          uint64_t v94 = swift_slowAlloc();
          uint64_t v96 = v94;
          *(_DWORD *)os_log_type_t v75 = 136315138;
          id v93 = v75 + 4;
          *(void *)&v97[0] = v37;
          *((void *)&v97[0] + 1) = v39;
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_1DD048478();
          *(void *)&v97[0] = sub_1DCED7FA0(v76, v77, &v96);
          sub_1DD048A28();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DCCF9000, v73, v74, "experimentalSearch(): unsupported domain %s", v75, 0xCu);
          uint64_t v78 = v94;
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v78, -1, -1);
          MEMORY[0x1E01B07E0](v75, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v90, v89);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v72, v89);
        }
        id v80 = objc_msgSend(self, sel_empty);
        sub_1DCE6A230();
        unint64_t v81 = (void *)swift_allocError();
        *unint64_t v82 = 3;
        id v83 = (void *)sub_1DD046368();
        ((void (**)(void, id, void *))a5)[2](a5, v80, v83);

        goto LABEL_100;
      }
LABEL_99:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for AnyVIImageContent();
      *(void *)(swift_allocObject() + 16) = a1;
      id v79 = a1;
      swift_retain();
      sub_1DCE9D160(v97);
      _Block_copy(a5);
      swift_retain();
      sub_1DCEBD674(v97, (uint64_t)v15, a5);
      _Block_release(a5);
      swift_release();
      swift_release();
      sub_1DCD43B94((uint64_t)v97);
      swift_release();
      goto LABEL_100;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
    int v52 = 1;
    goto LABEL_42;
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v34 = *(id *)(v30 + 32);
    goto LABEL_19;
  }
  __break(1u);
}

void sub_1DCF95F9C(uint64_t a1)
{
  sub_1DCF8F6BC(a1, *(void (**)(id, void *))(v1 + 16));
}

id sub_1DCF95FB8(uint8_t *a1, void *a2, void *a3, void *a4, uint64_t a5, const void *a6)
{
  uint64_t v111 = a1;
  uint64_t v109 = sub_1DD048068();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v107 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v106 - v13;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v106 - v19;
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = a6;
  id v21 = objc_allocWithZone((Class)type metadata accessor for CancelSession());
  _Block_copy(a6);
  uint64_t v114 = (void (**)(void, void, void))a6;
  _Block_copy(a6);
  id v112 = objc_msgSend(v21, sel_init);
  uint64_t v22 = OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service;
  uint64_t v110 = a5;
  uint64_t v23 = *(void *)(a5 + OBJC_IVAR____TtC18VisualIntelligence35VisualIntelligenceServiceCompatible_service)
      + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig;
  uint64_t v115 = v20;
  sub_1DCF946DC(v23, (uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  if (!a3 || (id v24 = objc_msgSend(a3, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
    goto LABEL_8;
  }
  uint64_t v25 = v24;
  uint64_t v26 = sub_1DD048408();
  uint64_t v28 = v27;

  uint64_t v29 = sub_1DD048408();
  if (!v28)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v29 == v26 && v28 == v30)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v61 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v61 & 1) == 0) {
      goto LABEL_9;
    }
  }
  v115[8] = 0;
LABEL_9:
  id v31 = objc_msgSend(a2, sel_imageRegions);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v32 = sub_1DD0486B8();

  id v33 = a4;
  unint64_t v34 = sub_1DCF944CC(v32, (uint64_t)v33);

  if (v34 >> 62)
  {
    if (sub_1DD048CC8()) {
      goto LABEL_11;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_1DCDB40EC((uint64_t)v14);
    id v91 = v33;
    uint64_t v92 = sub_1DD048048();
    os_log_type_t v93 = sub_1DD048858();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      *(void *)&v117[0] = v95;
      *(_DWORD *)uint64_t v94 = 136315138;
      uint64_t v111 = v94 + 4;
      id v96 = v91;
      id v97 = objc_msgSend(v96, sel_description);
      uint64_t v98 = sub_1DD048408();
      unint64_t v100 = v99;

      uint64_t v116 = sub_1DCED7FA0(v98, v100, (uint64_t *)v117);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v92, v93, "experimentalSearch(): no imageRegion matching domain %s", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v95, -1, -1);
      MEMORY[0x1E01B07E0](v94, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v14, v109);
    id v56 = v112;
    id v101 = objc_msgSend(self, sel_empty);
    sub_1DCE6A230();
    uint64_t v102 = (void *)swift_allocError();
    *uint64_t v103 = 4;
    uint64_t v104 = (void *)sub_1DD046368();
    uint64_t v69 = v114;
    ((void (**)(void, id, void *))v114)[2](v114, v101, v104);

    uint64_t v53 = (uint64_t)v115;
    goto LABEL_44;
  }
  if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_40;
  }
LABEL_11:
  id v35 = objc_msgSend(a2, sel_annotation);
  id v36 = objc_msgSend(a2, sel_payload);
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = sub_1DD0464E8();
    unint64_t v40 = v39;
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v40 = 0xF000000000000000;
  }
  uint64_t v41 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  if (v40 >> 60 == 15)
  {
    char v42 = 0;
  }
  else
  {
    char v42 = (void *)sub_1DD0464D8();
    sub_1DCD392D4(v38, v40);
  }
  id v43 = objc_msgSend(objc_allocWithZone((Class)VIVisualUnderstanding), sel_initWithImageRegions_annotation_payload_, v41, v35, v42);

  uint64_t v44 = sub_1DD048408();
  uint64_t v46 = v45;
  if (v44 == sub_1DD048408() && v46 == v47)
  {
    swift_bridgeObjectRelease_n();
LABEL_21:
    uint64_t v49 = *(void *)(*(void *)(v110 + v22)
                    + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
    type metadata accessor for AnyVIImageContent();
    uint64_t v50 = swift_allocObject();
    id v51 = v111;
    *(void *)(v50 + 16) = v111;
    swift_retain();
    int v52 = v51;
    sub_1DCE9D160(v117);
    uint64_t v53 = (uint64_t)v115;
    sub_1DCF946DC((uint64_t)v115, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    uint64_t v54 = swift_allocObject();
    uint64_t v55 = v113;
    *(void *)(v54 + 16) = sub_1DCF97A5C;
    *(void *)(v54 + 24) = v55;
    swift_retain();
    id v56 = v112;
    sub_1DCF93F54(v50, (uint64_t)v117, a3, (uint64_t)v17, v112, (uint64_t)sub_1DCF97AF8, v54, v49, (uint64_t)&unk_1F3842D50, (uint64_t)sub_1DCF606CC, (uint64_t)&block_descriptor_13);

    swift_release();
    swift_release();
LABEL_29:
    sub_1DCF9793C((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    sub_1DCD43B94((uint64_t)v117);
    swift_release();
    uint64_t v69 = v114;
    goto LABEL_44;
  }
  char v48 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_21;
  }
  uint64_t v57 = sub_1DD048408();
  uint64_t v59 = v58;
  if (v57 == sub_1DD048408() && v59 == v60)
  {
    swift_bridgeObjectRelease_n();
LABEL_28:
    uint64_t v63 = *(void *)(*(void *)(v110 + v22)
                    + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
    type metadata accessor for AnyVIImageContent();
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = v111;
    *(void *)(v64 + 16) = v111;
    uint64_t v66 = v65;
    swift_retain();
    sub_1DCE9D160(v117);
    uint64_t v53 = (uint64_t)v115;
    sub_1DCF946DC((uint64_t)v115, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    uint64_t v67 = swift_allocObject();
    uint64_t v68 = v113;
    *(void *)(v67 + 16) = sub_1DCF97A5C;
    *(void *)(v67 + 24) = v68;
    swift_retain();
    id v56 = v112;
    sub_1DCF93F54(v64, (uint64_t)v117, a3, (uint64_t)v17, v112, (uint64_t)sub_1DCF97AF8, v67, v63, (uint64_t)&unk_1F3842D78, (uint64_t)sub_1DCF6097C, (uint64_t)&block_descriptor_143);
    swift_release();
    swift_release();

    goto LABEL_29;
  }
  char v62 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v62) {
    goto LABEL_28;
  }
  if (qword_1EAB02060 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_1EAB1D358;
  uint64_t v71 = sub_1DD048408();
  LOBYTE(v70) = sub_1DCF8C928(v71, v72, (void *)v70);
  swift_bridgeObjectRelease();
  if (v70)
  {
    type metadata accessor for AnyVIImageContent();
    uint64_t v73 = swift_allocObject();
    os_log_type_t v74 = v111;
    *(void *)(v73 + 16) = v111;
    os_log_type_t v75 = v74;
    swift_retain();
    sub_1DCE9D160(v117);
    uint64_t v69 = v114;
    _Block_copy(v114);
    swift_retain();
    uint64_t v53 = (uint64_t)v115;
    sub_1DCEBD674(v117, (uint64_t)v115, v69);
    _Block_release(v69);
    swift_release();
    swift_release();

    sub_1DCD43B94((uint64_t)v117);
    swift_release();
  }
  else
  {
    uint64_t v76 = v107;
    sub_1DCDB40EC(v107);
    id v77 = v33;
    uint64_t v78 = sub_1DD048048();
    os_log_type_t v79 = sub_1DD048858();
    if (os_log_type_enabled(v78, v79))
    {
      id v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      *(void *)&v117[0] = v81;
      *(_DWORD *)id v80 = 136315138;
      uint64_t v111 = v80 + 4;
      id v82 = v77;
      id v83 = objc_msgSend(v82, sel_description);
      uint64_t v84 = sub_1DD048408();
      unint64_t v86 = v85;

      uint64_t v116 = sub_1DCED7FA0(v84, v86, (uint64_t *)v117);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v78, v79, "experimentalSearch(): unsupported domain %s", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v81, -1, -1);
      MEMORY[0x1E01B07E0](v80, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v76, v109);
    }
    id v87 = objc_msgSend(self, sel_empty);
    sub_1DCE6A230();
    uint64_t v88 = (void *)swift_allocError();
    *uint64_t v89 = 3;
    uint64_t v90 = (void *)sub_1DD046368();
    uint64_t v69 = v114;
    ((void (**)(void, id, void *))v114)[2](v114, v87, v90);

    uint64_t v53 = (uint64_t)v115;
  }
  id v56 = v112;
LABEL_44:
  sub_1DCF9793C(v53, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  swift_release();
  _Block_release(v69);
  return v56;
}

void sub_1DCF96D44(uint64_t a1)
{
  sub_1DCF91920(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DCF96D4C(uint64_t a1)
{
  return sub_1DCF92930(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_1DCF96D54(uint64_t a1)
{
  return a1;
}

uint64_t _s18VisualIntelligence0aB17ServiceCompatibleC21parseFlowCacheVersionSuyFZ_0()
{
  uint64_t v0 = sub_1DD048068();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = &v32[-v5];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v32[-v8];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v32[-v11];
  if (sub_1DCDE82EC())
  {
    if (qword_1EAB01C28 != -1) {
      swift_once();
    }
    uint64_t v13 = (uint64_t *)&off_1EAB02A48;
  }
  else
  {
    if (qword_1EBE871A0 != -1) {
      swift_once();
    }
    uint64_t v13 = &qword_1EBE871E8;
  }
  uint64_t v14 = *(void **)(*v13 + 32);
  swift_retain();
  uint64_t v15 = (void *)sub_1DD0483D8();
  unint64_t v16 = (unint64_t)objc_msgSend(v14, sel_integerForKey_, v15);

  if (!v16)
  {
    swift_release();
    char v20 = sub_1DCDE82EC();
    type metadata accessor for TrialWrapper();
    swift_initStackObject();
    uint64_t v21 = sub_1DCFD946C((v20 & 1) == 0);
    MEMORY[0x1F4188790](v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87180);
    sub_1DD0488A8();
    if (v34)
    {
      sub_1DCDB40EC((uint64_t)v3);
      uint64_t v22 = sub_1DD048048();
      os_log_type_t v23 = sub_1DD048858();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_1DCCF9000, v22, v23, "parseFlowCacheVersion(): missing version", v24, 2u);
        MEMORY[0x1E01B07E0](v24, -1, -1);
      }

      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    }
    else
    {
      unint64_t v16 = v33;
      if ((v33 & 0x8000000000000000) == 0)
      {
        sub_1DCDB40EC((uint64_t)v9);
        uint64_t v25 = sub_1DD048048();
        os_log_type_t v26 = sub_1DD048848();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 134217984;
          unint64_t v33 = v16;
          sub_1DD048A28();
          _os_log_impl(&dword_1DCCF9000, v25, v26, "parseFlowCacheVersion(): %lu", v27, 0xCu);
          MEMORY[0x1E01B07E0](v27, -1, -1);
        }

        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v9, v0);
        return v16;
      }
      sub_1DCDB40EC((uint64_t)v6);
      uint64_t v28 = sub_1DD048048();
      os_log_type_t v29 = sub_1DD048858();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 134217984;
        unint64_t v33 = v16;
        sub_1DD048A28();
        _os_log_impl(&dword_1DCCF9000, v28, v29, "parseFlowCacheVersion(): could not cast %lld to UInt", v30, 0xCu);
        MEMORY[0x1E01B07E0](v30, -1, -1);
      }

      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
    }
    return 0;
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    swift_release();
    sub_1DCDB40EC((uint64_t)v12);
    id v17 = sub_1DD048048();
    os_log_type_t v18 = sub_1DD048848();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134217984;
      unint64_t v33 = v16;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v17, v18, "Parse flow cache version in internal setting %lu", v19, 0xCu);
      MEMORY[0x1E01B07E0](v19, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v12, v0);
    return v16;
  }
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t method lookup function for VisualIntelligenceServiceCompatible(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualIntelligenceServiceCompatible);
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.__allocating_init(timeoutInterval:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.__allocating_init(overrideTrialTypes:namespaces:factors:values:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.ontologyGraph.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.targetImageSize(inputImageSize:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.parse(visualQuery:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.parseCached(visualQuery:cachedResults:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.search(image:visualUnderstanding:queryContext:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.detectorModelDescriptions()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.generateCachedResults(detectorOutputs:imageSize:imageOrientation:normalizedRegionOfInterest:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.parseCameraFrame(visualQuery:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.parseCameraFrameCached(visualQuery:cachedResults:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.searchCameraFrame(image:visualUnderstanding:queryContext:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.experimentalSearch(image:visualUnderstanding:queryContext:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.encryptedSearch(image:visualUnderstanding:queryContext:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.encryptedSearch(image:visualUnderstanding:queryContext:domain:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.isEligibleForEncryptedSearch(cachedResults:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.getEncryptedSearchDomains(visualQuery:cachedResults:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.submitUserFeedback(userFeedback:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.search(visualQuery:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.pegasusPayloadData(image:visualUnderstanding:queryContext:options:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.detect(image:regionOfInterest:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.clearCache(cacheOption:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of VisualIntelligenceServiceCompatible.refineRegions(request:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

void sub_1DCF97868(uint64_t a1)
{
  sub_1DCF92718(a1, *(void *)(v1 + 16));
}

void sub_1DCF97870(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1DCF9204C(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1DCF97878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1DCF8DC3C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1DCF97880()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1DCF978B8(uint64_t a1, uint64_t a2)
{
  sub_1DCF8E0D8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1DCF978D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF9793C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCF9799C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF979D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1DCF97B04(uint64_t a1, unint64_t a2)
{
  v28[5] = *MEMORY[0x1E4F143B8];
  v28[3] = MEMORY[0x1E4F277C0];
  v28[4] = MEMORY[0x1E4F277B0];
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v28, MEMORY[0x1E4F277C0]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_1DCD33F64(a1, a2);
      sub_1DCD33F64(v5, v6);
      uint64_t v8 = (unsigned char *)sub_1DD0462A8();
      if (v8)
      {
        uint64_t v9 = sub_1DD0462C8();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_1DD0462B8();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_1DCF99A24(v8, v13, &v27);
      sub_1DCD21954(v5, v6);
LABEL_27:
      sub_1DCD21954(a1, a2);
      uint64_t v24 = v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_1DCD33F64(a1, a2);
      swift_retain();
      swift_retain();
      unint64_t v16 = (unsigned char *)sub_1DD0462A8();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_1DD0462C8();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_1DD0462B8();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v22 = &v16[v21];
      if (v16) {
        os_log_type_t v23 = v22;
      }
      else {
        os_log_type_t v23 = 0;
      }
      sub_1DCF99A24(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_1DCD33F64(a1, a2);
      uint64_t v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_1DCD33F64(a1, a2);
      uint64_t v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_1DCF99A24(v26, v7, &v27);
      goto LABEL_27;
  }
}

uint64_t sub_1DCF97DB8(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x1E4FBB2B8];
  v8[4] = MEMORY[0x1E4F27EF0];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x1E4FBB2B8]);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (v4 = (unsigned char *)v2[1], uint64_t v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_1DCF99A9C(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_1DCF99B60((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_1DCF99BDC((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_1DCF97E74(uint64_t a1, char a2)
{
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 72) = 0xD00000000000002DLL;
  *(void *)(v2 + 80) = 0x80000001DD06C7B0;
  sub_1DCF99DAC(v21);
  if (v3)
  {
    swift_release();
  }
  else
  {
    char v18 = a2;
    unint64_t v5 = v21[1];
    uint64_t v22 = v21[0];
    uint64_t v6 = v21[5];
    uint64_t v7 = v21[7];
    uint64_t v19 = v21[6];
    uint64_t v20 = v21[4];
    uint64_t v9 = v21[2];
    uint64_t v8 = v21[3];
    type metadata accessor for FaissCodebook();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DCD93CC0(v22, v5, v20, v6, v19, v7, 0xD00000000000002DLL, 0x80000001DD06C7B0, v9, v8);
    if (v18 & 1) == 0 || (v10[3])
    {
      *(void *)(v2 + 16) = v10;
      id v12 = objc_allocWithZone(MEMORY[0x1E4F58FF0]);
      swift_retain();
      uint64_t v13 = (void *)sub_1DD0483D8();
      id v14 = objc_msgSend(v12, sel_initWithUseCase_, v13);

      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F59010]), sel_initWithClientConfig_, v14);
      uint64_t v16 = v21[8];
      *(void *)(v2 + 32) = v15;
      *(void *)(v2 + 40) = v16;
      swift_release();
      swift_release();
      *(_OWORD *)(v2 + 48) = xmmword_1DD050130;
      sub_1DCF9A260((uint64_t)v21);
      *(void *)(v2 + 64) = v21[9];
      return v2;
    }
    sub_1DCD94F64();
    swift_allocError();
    *uint64_t v17 = 3;
    swift_willThrow();
    swift_release();
    swift_release();
    sub_1DCF9A260((uint64_t)v21);
  }

  swift_bridgeObjectRelease();
  type metadata accessor for CipherMLSimilarityClient();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t sub_1DCF980D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  v24[1] = *(id *)MEMORY[0x1E4F143B8];
  id v9 = objc_allocWithZone(MEMORY[0x1E4F59000]);
  sub_1DCD33F64(a1, a2);
  sub_1DCD33F64(a3, a4);
  uint64_t v10 = (void *)sub_1DD0464D8();
  uint64_t v11 = (void *)sub_1DD0464D8();
  id v12 = objc_msgSend(v9, sel_initWithPECConfig_keyStatus_, v10, v11);
  sub_1DCD21954(a3, a4);
  sub_1DCD21954(a1, a2);

  uint64_t v13 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = v12;

  id v14 = *(void **)(v4 + 24);
  if (v14)
  {
    id v15 = *(void **)(v4 + 32);
    v24[0] = 0;
    id v16 = v14;
    id v17 = objc_msgSend(v15, sel_setPECConfig_error_, v16, v24);
    char v18 = v17;
    if (v24[0])
    {
      v24[0];

      swift_willThrow();
    }
    else if (v17)
    {
      uint64_t v20 = sub_1DD0464E8();
      unint64_t v22 = v21;

      sub_1DCD21954(v20, v22);
      return 1;
    }
  }
  else
  {
    sub_1DCF99C60();
    swift_allocError();
    *uint64_t v19 = 65;
    swift_willThrow();
  }
  return 1;
}

void *sub_1DCF982AC(uint64_t a1)
{
  uint64_t v117 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048108();
  uint64_t v100 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD047C38();
  MEMORY[0x1F4188790](v10 - 8);
  id v101 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1DD048128();
  uint64_t v108 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v102 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD046CF8();
  unint64_t v14 = *(void *)(v13 + 16);
  if (v14 >> 61)
  {
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
  }
  uint64_t v111 = v9;
  uint64_t v112 = v7;
  uint64_t v107 = v6;
  uint64_t v103 = v4;
  uint64_t v104 = v3;
  uint64_t v15 = sub_1DCF97DB8(v13 + 32, v13 + 32 + 4 * v14);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02788);
  uint64_t v18 = sub_1DD0471B8();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  long long v99 = xmmword_1DD04E910;
  *(_OWORD *)(v21 + 16) = xmmword_1DD04E910;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v21 + v20, a1, v18);
  unint64_t v22 = v110;
  uint64_t v23 = sub_1DCF995DC(v21);
  uint64_t v24 = v22;
  if (v22)
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v25 = v15;
    unint64_t v26 = v17;
LABEL_4:
    sub_1DCD21954(v25, v26);
    uint64_t v72 = (uint64_t)v107;
    sub_1DCDB40EC((uint64_t)v107);
    id v73 = v24;
    id v74 = v24;
    os_log_type_t v75 = sub_1DD048048();
    os_log_type_t v76 = sub_1DD048858();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v78 = (void *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(void *)&v113[0] = v79;
      *(_DWORD *)uint64_t v77 = 136315394;
      uint64_t v115 = sub_1DCED7FA0(0xD00000000000001CLL, 0x80000001DD06FE40, (uint64_t *)v113);
      sub_1DD048A28();
      *(_WORD *)(v77 + 12) = 2112;
      id v80 = v24;
      uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v115 = v81;
      sub_1DD048A28();
      void *v78 = v81;

      _os_log_impl(&dword_1DCCF9000, v75, v76, "CipherMLSimilarityClient.%s failed: %@", (uint8_t *)v77, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v78, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v79, -1, -1);
      MEMORY[0x1E01B07E0](v77, -1, -1);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v107, v104);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v72, v104);
    }
    return (void *)swift_willThrow();
  }
  uint64_t v27 = v23;
  uint64_t v98 = v15;
  unint64_t v95 = v17;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (*(void *)(v27 + 16))
  {
    uint64_t v28 = *(void *)(v27 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v29 = v95;
    uint64_t v30 = v98;
    unint64_t v32 = v111;
    uint64_t v31 = v112;
    uint64_t v85 = *(void *)(v28 + 16);
    if (!v85)
    {
      swift_bridgeObjectRelease();
      sub_1DCD21954(v30, v29);
      return (void *)MEMORY[0x1E4FBC860];
    }
    unint64_t v33 = 0;
    id v88 = *(id *)(v1 + 32);
    uint64_t v34 = v28 + 32;
    uint64_t v109 = v100 + 16;
    uint64_t v110 = (void (**)(char *, uint64_t))(v100 + 8);
    id v35 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v92 = (void (**)(char *, uint64_t))(v108 + 8);
    uint64_t v87 = v28;
    uint64_t v84 = v28 + 32;
    while (1)
    {
      if (v33 >= *(void *)(v28 + 16)) {
        goto LABEL_50;
      }
      uint64_t v105 = v35;
      unint64_t v86 = v33;
      uint64_t v36 = *(unsigned int *)(v34 + 4 * v33);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02728);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v99;
      *(void *)(v37 + 32) = v30;
      *(void *)(v37 + 40) = v29;
      sub_1DCD33F64(v30, v29);
      uint64_t v38 = (void *)sub_1DD0486A8();
      swift_bridgeObjectRelease();
      *(void *)&v113[0] = 0;
      id v39 = objc_msgSend(v88, sel_encryptDifferentiallyPrivateFakes_shardIndex_shardCount_error_, v38, v36, 50000, v113);

      unint64_t v40 = *(void **)&v113[0];
      if (!v39) {
        break;
      }
      uint64_t v41 = sub_1DD0486B8();
      id v42 = v40;

      uint64_t v91 = *(void *)(v41 + 16);
      if (v91)
      {
        unint64_t v43 = 0;
        uint64_t v93 = v41 + 32;
        uint64_t v89 = v41;
        while (v43 < *(void *)(v41 + 16))
        {
          unint64_t v94 = v43;
          uint64_t v44 = (uint64_t *)(v93 + 16 * v43);
          unint64_t v46 = v44[1];
          uint64_t v115 = *v44;
          uint64_t v45 = v115;
          unint64_t v116 = v46;
          uint64_t v114 = 0;
          memset(v113, 0, sizeof(v113));
          sub_1DCD33F64(v115, v46);
          uint64_t v96 = v45;
          unint64_t v97 = v46;
          sub_1DCD33F64(v45, v46);
          sub_1DD047C28();
          sub_1DCF999DC(&qword_1EAB04680, MEMORY[0x1E4F58FD8]);
          sub_1DD047E38();
          uint64_t v47 = sub_1DD048118();
          int64_t v48 = *(void *)(v47 + 16);
          if (v48)
          {
            *(void *)&v113[0] = MEMORY[0x1E4FBC860];
            sub_1DCFC59E0(0, v48, 0);
            unint64_t v49 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
            uint64_t v90 = v47;
            unint64_t v50 = v47 + v49;
            uint64_t v108 = *(void *)(v100 + 72);
            id v51 = *(void (**)(char *, unint64_t, uint64_t))(v100 + 16);
            do
            {
              v51(v32, v50, v31);
              sub_1DCF999DC(&qword_1EAB02428, MEMORY[0x1E4F58FC8]);
              uint64_t v52 = sub_1DD047E28();
              uint64_t v54 = v53;
              (*v110)(v32, v31);
              uint64_t v55 = *(void *)&v113[0];
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1DCFC59E0(0, *(void *)(v55 + 16) + 1, 1);
                uint64_t v55 = *(void *)&v113[0];
              }
              unint64_t v57 = *(void *)(v55 + 16);
              unint64_t v56 = *(void *)(v55 + 24);
              if (v57 >= v56 >> 1)
              {
                sub_1DCFC59E0(v56 > 1, v57 + 1, 1);
                uint64_t v55 = *(void *)&v113[0];
              }
              *(void *)(v55 + 16) = v57 + 1;
              uint64_t v58 = v55 + 16 * v57;
              *(void *)(v58 + 32) = v52;
              *(void *)(v58 + 40) = v54;
              v50 += v108;
              --v48;
              unint64_t v32 = v111;
              uint64_t v31 = v112;
            }
            while (v48);
            swift_bridgeObjectRelease();
            uint64_t v41 = v89;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = MEMORY[0x1E4FBC860];
          }
          uint64_t v59 = *(void *)(v55 + 16);
          int64_t v60 = v105[2];
          int64_t v61 = v60 + v59;
          if (__OFADD__(v60, v59)) {
            goto LABEL_48;
          }
          char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
          uint64_t v63 = v105;
          if (!isUniquelyReferenced_nonNull_native || v61 > v105[3] >> 1)
          {
            if (v60 <= v61) {
              int64_t v64 = v60 + v59;
            }
            else {
              int64_t v64 = v60;
            }
            uint64_t v63 = sub_1DCE9EDC8(isUniquelyReferenced_nonNull_native, v64, 1, v105);
          }
          uint64_t v30 = v98;
          uint64_t v65 = *(void *)(v55 + 16);
          uint64_t v105 = v63;
          if (v65)
          {
            uint64_t v66 = v63[2];
            if ((v63[3] >> 1) - v66 < v59) {
              goto LABEL_51;
            }
            unint64_t v67 = (unint64_t)&v63[2 * v66 + 4];
            if (v55 + 32 < v67 + 16 * v59 && v67 < v55 + 32 + 16 * v59) {
              goto LABEL_54;
            }
            swift_arrayInitWithCopy();
            if (v59)
            {
              uint64_t v68 = v105[2];
              BOOL v69 = __OFADD__(v68, v59);
              uint64_t v70 = v68 + v59;
              if (v69) {
                goto LABEL_52;
              }
              _OWORD v105[2] = v70;
            }
          }
          else if (v59)
          {
            goto LABEL_49;
          }
          unint64_t v43 = v94 + 1;
          swift_bridgeObjectRelease();
          sub_1DCD21954(v96, v97);
          (*v92)(v102, v106);
          if (v43 == v91) {
            goto LABEL_38;
          }
        }
        goto LABEL_47;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      unint64_t v33 = v86 + 1;
      uint64_t v28 = v87;
      id v35 = v105;
      uint64_t v34 = v84;
      unint64_t v29 = v95;
      if (v86 + 1 == v85)
      {
        swift_bridgeObjectRelease();
        sub_1DCD21954(v30, v29);
        return v105;
      }
    }
    id v82 = *(id *)&v113[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_1DD046378();

    swift_willThrow();
    uint64_t v25 = v30;
    unint64_t v26 = v95;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_54:
  uint64_t result = (void *)sub_1DD048D18();
  __break(1u);
  return result;
}

NSObject *sub_1DCF98F88(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1DD048068();
  id v9 = *(char **)(v8 - 8);
  uint64_t v50 = v8;
  id v51 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD047C38();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_1DD048148();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  unint64_t v55 = a2;
  uint64_t v53 = 0;
  memset(v52, 0, sizeof(v52));
  sub_1DCD33F64(a1, a2);
  sub_1DD047C28();
  sub_1DCF999DC(&qword_1EAB02420, MEMORY[0x1E4F58FE8]);
  sub_1DD047E38();
  if (v3)
  {
LABEL_3:
    sub_1DCDB40EC((uint64_t)v11);
    id v18 = v4;
    id v19 = v4;
    unint64_t v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(void *)&v52[0] = v49;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v54 = sub_1DCED7FA0(0xD00000000000001BLL, 0x80000001DD06FE20, (uint64_t *)v52);
      sub_1DD048A28();
      *(_WORD *)(v22 + 12) = 2112;
      id v24 = v4;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      int64_t v48 = v11;
      unint64_t v26 = v51;
      uint64_t v27 = v25;
      uint64_t v54 = v25;
      sub_1DD048A28();
      *uint64_t v23 = v27;

      _os_log_impl(&dword_1DCCF9000, v20, v21, "CipherMLSimilarityClient.%s failed: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v23, -1, -1);
      uint64_t v28 = v49;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v28, -1, -1);
      MEMORY[0x1E01B07E0](v22, -1, -1);

      (*((void (**)(char *, uint64_t))v26 + 1))(v48, v50);
    }
    else
    {

      (*((void (**)(char *, uint64_t))v51 + 1))(v11, v50);
    }
    swift_willThrow();
    return v20;
  }
  uint64_t v49 = v14;
  unint64_t v17 = *(void **)(v5 + 32);
  uint64_t v30 = sub_1DD047E28();
  unint64_t v32 = v31;
  unint64_t v33 = (void *)sub_1DD0464D8();
  sub_1DCD21954(v30, v32);
  *(void *)&v52[0] = 0;
  id v34 = objc_msgSend(v17, sel_decryptSimilarityScores_error_, v33, v52);

  id v35 = *(void **)&v52[0];
  if (!v34)
  {
    id v47 = *(id *)&v52[0];
    uint64_t v4 = (void *)sub_1DD046378();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v13);
    goto LABEL_3;
  }
  id v51 = v16;
  sub_1DCF9999C();
  unint64_t v36 = sub_1DD0486B8();
  id v37 = v35;

  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v39 = v49;
  unint64_t v20 = MEMORY[0x1E4FBC860];
  if (v38)
  {
    *(void *)&v52[0] = MEMORY[0x1E4FBC860];
    sub_1DCFC5800(0, v38 & ~(v38 >> 63), 0);
    if (v38 < 0) {
      __break(1u);
    }
    uint64_t v40 = 0;
    unint64_t v20 = *(NSObject **)&v52[0];
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v41 = (id)MEMORY[0x1E01AE890](v40, v36);
      }
      else {
        id v41 = *(id *)(v36 + 8 * v40 + 32);
      }
      id v42 = v41;
      objc_msgSend(v41, sel_score);
      int v44 = v43;

      *(void *)&v52[0] = v20;
      Class isa = v20[2].isa;
      unint64_t v45 = (unint64_t)v20[3].isa;
      if ((unint64_t)isa >= v45 >> 1)
      {
        sub_1DCFC5800(v45 > 1, (int64_t)isa + 1, 1);
        unint64_t v20 = *(NSObject **)&v52[0];
      }
      ++v40;
      v20[2].Class isa = (Class)((char *)isa + 1);
      *((_DWORD *)&v20[4].isa + (void)isa) = v44;
    }
    while (v38 != v40);
    uint64_t v39 = v49;
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v51, v13);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1DCF995DC(uint64_t a1)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD94500(a1, *(char **)(v1 + 40));
  uint64_t v9 = v8;
  if (v2)
  {
    sub_1DCDB40EC((uint64_t)v7);
    id v10 = v2;
    id v11 = v2;
    uint64_t v12 = sub_1DD048048();
    os_log_type_t v13 = sub_1DD048858();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v27 = v24;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v25 = v9;
      uint64_t v26 = sub_1DCED7FA0(0xD000000000000016, 0x80000001DD06FE00, &v27);
      sub_1DD048A28();
      *(_WORD *)(v14 + 12) = 2112;
      id v15 = v2;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v23 = v4;
      uint64_t v17 = v16;
      uint64_t v26 = v16;
      uint64_t v9 = v25;
      sub_1DD048A28();
      id v18 = v22;
      *uint64_t v22 = v17;

      _os_log_impl(&dword_1DCCF9000, v12, v13, "CipherMLSimilarityClient.%s failed: %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v18, -1, -1);
      uint64_t v19 = v24;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v19, -1, -1);
      MEMORY[0x1E01B07E0](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1DCF998C4()
{
  swift_release();

  sub_1DCD21954(*(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CipherMLSimilarityClient()
{
  return self;
}

BOOL sub_1DCF99940()
{
  return *(void *)(v0 + 24) != 0;
}

uint64_t sub_1DCF99950(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return 1;
}

void *sub_1DCF9996C(uint64_t a1)
{
  return sub_1DCF982AC(a1);
}

NSObject *sub_1DCF99984(uint64_t a1, unint64_t a2)
{
  return sub_1DCF98F88(a1, a2);
}

unint64_t sub_1DCF9999C()
{
  unint64_t result = qword_1EAB04678;
  if (!qword_1EAB04678)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAB04678);
  }
  return result;
}

uint64_t sub_1DCF999DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1DCF99A24@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1DCF99A9C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1DCF99B60((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1DCF99BDC((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1DCF99A9C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1DCF99B60(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1DD0462D8();
  swift_allocObject();
  uint64_t result = sub_1DD046298();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DD0464B8();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1DCF99BDC(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1DD0462D8();
  swift_allocObject();
  uint64_t result = sub_1DD046298();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1DCF99C60()
{
  unint64_t result = qword_1EAB04688;
  if (!qword_1EAB04688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04688);
  }
  return result;
}

uint64_t sub_1DCF99CB4(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868A8);
  unint64_t v10 = sub_1DCF99D50();
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1DCF99A24(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unint64_t sub_1DCF99D50()
{
  unint64_t result = qword_1EBE868B0;
  if (!qword_1EBE868B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE868A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE868B0);
  }
  return result;
}

uint64_t sub_1DCF99DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DCFD9704(56, 3, 0x7865646E69, 0xE500000000000000);
  uint64_t v4 = v3;
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    sub_1DCF99C60();
    swift_allocError();
    *id v15 = 56;
    return swift_willThrow();
  }
  uint64_t v6 = v2;
  uint64_t v7 = sub_1DCFD9704(57, 3, 1852797802, 0xE400000000000000);
  uint64_t v9 = v8;
  uint64_t v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
    sub_1DCF99C60();
    swift_allocError();
    *uint64_t v17 = 57;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  uint64_t v19 = v7;
  MEMORY[0x1F4188790](v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
  uint64_t v11 = sub_1DD0488A8();
  if (!v21)
  {
    sub_1DCF99C60();
    swift_allocError();
    *id v18 = 58;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1DD0488A8();
  MEMORY[0x1F4188790](v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87180);
  uint64_t v13 = sub_1DD0488A8();
  if (v21)
  {
    sub_1DCF99C60();
    swift_allocError();
    *uint64_t v14 = 60;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  MEMORY[0x1F4188790](v13);
  uint64_t result = sub_1DD0488A8();
  if (v20 < 0)
  {
    uint64_t result = sub_1DD048C98();
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = v4;
    a1[2] = v19;
    a1[3] = v9;
    a1[4] = v20;
    a1[5] = v21;
    a1[6] = v20;
    a1[7] = v21;
    a1[8] = v20;
    a1[9] = v20;
  }
  return result;
}

uint64_t sub_1DCF9A260(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCF9A2B8@<X0>(void *a1@<X8>)
{
  return sub_1DCFD9DDC(*(void *)(v1 + 16), (char *)*(unsigned __int8 *)(v1 + 24), *(unsigned __int8 *)(v1 + 25), a1);
}

uint64_t getEnumTagSinglePayload for CipherMLSimilarityClient.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xBE)
  {
    unsigned int v2 = a2 + 66;
    if (a2 + 66 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 66;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 66;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1DCF9A38CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 66;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0x3F) {
    unsigned int v8 = v7 - 62;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 5) {
    return v8 - 4;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CipherMLSimilarityClient.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 66;
  if (a3 + 66 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xBE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xBD)
  {
    unsigned int v7 = ((a2 - 190) >> 8) + 1;
    *uint64_t result = a2 + 66;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1DCF9A474);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 66;
        break;
    }
  }
  return result;
}

uint64_t sub_1DCF9A49C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x3F) {
    return v1 - 62;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1DCF9A4B0(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 62;
  }
  return result;
}

ValueMetadata *type metadata accessor for CipherMLSimilarityClient.Error()
{
  return &type metadata for CipherMLSimilarityClient.Error;
}

uint64_t sub_1DCF9A4D0@<X0>(void *a1@<X8>)
{
  return sub_1DCF9A2B8(a1);
}

unint64_t sub_1DCF9A4E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    float v2 = *(float *)(a1 + 32);
    uint64_t v3 = v1 - 1;
    if (v1 != 1)
    {
      int v4 = (float *)(a1 + 36);
      do
      {
        float v5 = *v4++;
        float v6 = v5;
        if (v2 < v5) {
          float v2 = v6;
        }
        --v3;
      }
      while (v3);
    }
    uint64_t v7 = LODWORD(v2);
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7 | ((unint64_t)(v1 == 0) << 32);
}

unint64_t sub_1DCF9A540(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    unsigned int v2 = 0;
    return v2 | ((unint64_t)(v1 == 0) << 32);
  }
  unsigned int v2 = *(_DWORD *)(a1 + 32);
  unint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    if (v1 >= 9)
    {
      unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8 | 1;
      int32x4_t v5 = vdupq_n_s32(v2);
      float v6 = (int32x4_t *)(a1 + 52);
      unint64_t v7 = v3 & 0xFFFFFFFFFFFFFFF8;
      int32x4_t v8 = v5;
      do
      {
        int32x4_t v5 = vmaxq_s32(v5, v6[-1]);
        int32x4_t v8 = vmaxq_s32(v8, *v6);
        v6 += 2;
        v7 -= 8;
      }
      while (v7);
      unsigned int v2 = vmaxvq_s32(vmaxq_s32(v5, v8));
      if (v3 == (v3 & 0xFFFFFFFFFFFFFFF8)) {
        return v2 | ((unint64_t)(v1 == 0) << 32);
      }
    }
    else
    {
      unint64_t v4 = 1;
    }
    unint64_t v9 = v1 - v4;
    uint64_t v10 = (signed int *)(a1 + 4 * v4 + 32);
    do
    {
      signed int v12 = *v10++;
      unsigned int v11 = v12;
      if ((int)v2 <= v12) {
        unsigned int v2 = v11;
      }
      --v9;
    }
    while (v9);
  }
  return v2 | ((unint64_t)(v1 == 0) << 32);
}

unint64_t sub_1DCF9A5F4(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      goto LABEL_49;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v19 = *(void *)(a1 + 72);
    if (v19)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        goto LABEL_49;
      }
      unint64_t v19 = *(void *)(a1 + 80);
      if (v19)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v19 = *(void *)(a1 + 88);
        if (v19)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            goto LABEL_49;
          }
          unint64_t v19 = *(void *)(a1 + 96);
          if (v19)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v19 = *(void *)(a1 + 104);
            if (!v19) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v19 - 1) & v19;
    unint64_t v7 = __clz(__rbit64(v19)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  float v11 = *(float *)(v10 + 4 * v7);
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_7:
    if (v11 < *(float *)(v10 + 4 * v13)) {
      float v11 = *(float *)(v10 + 4 * v13);
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_26:
    unsigned __int8 v17 = 0;
    uint64_t v18 = LODWORD(v11);
    return v18 | ((unint64_t)v17 << 32);
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v20 = 0;
  uint64_t v21 = 6;
  if (v9 > 6) {
    uint64_t v21 = v9;
  }
  uint64_t v22 = v21 - 6;
  while (v22 != v20)
  {
    unint64_t v19 = *(void *)(a1 + 112 + 8 * v20++);
    if (v19)
    {
      uint64_t v6 = v20 + 5;
      goto LABEL_30;
    }
  }
LABEL_49:
  uint64_t v18 = 0;
  unsigned __int8 v17 = 1;
  return v18 | ((unint64_t)v17 << 32);
}

void sub_1DCF9A804(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCF9ECDC(v5);
  *a1 = v3;
}

void sub_1DCF9A8AC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCF9FBF4(v5);
  *a1 = v3;
}

uint64_t sub_1DCF9A954(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v222 = a3;
  uint64_t v258 = a1;
  uint64_t v245 = sub_1DD048068();
  uint64_t v6 = *(void *)(v245 - 8);
  MEMORY[0x1F4188790](v245);
  uint64_t v233 = (uint64_t)&v218 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v232 = (uint64_t)&v218 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v239 = (uint64_t)&v218 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v237 = (uint64_t)&v218 - v13;
  uint64_t v14 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v262 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v225 = (uint64_t)&v218 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v231 = (CGRect *)((char *)&v218 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v238 = (uint64_t)&v218 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v230 = (uint64_t)&v218 - v21;
  MEMORY[0x1F4188790](v22);
  v249 = (char *)&v218 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (uint64_t *)((char *)&v218 - v25);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868B8);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v261 = (char *)&v218 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v235 = (uint64_t (**)())((char *)&v218 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v32);
  uint64_t v234 = (uint64_t *)((char *)&v218 - v33);
  MEMORY[0x1F4188790](v34);
  unint64_t v36 = (char *)&v218 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (uint64_t *)((char *)&v218 - v38);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85E70);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v221 = (uint64_t)&v218 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v260 = (uint64_t)&v218 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v251 = (uint64_t)&v218 - v45;
  uint64_t v266 = type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig(0);
  uint64_t v46 = *(void *)(v266 - 8);
  MEMORY[0x1F4188790](v266);
  uint64_t v223 = (_WORD *)((char *)&v218 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v48);
  v259 = (_WORD *)((char *)&v218 - v49);
  MEMORY[0x1F4188790](v50);
  v250 = (_WORD *)((char *)&v218 - v51);
  uint64_t v264 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  uint64_t v246 = *(void *)(v264 - 8);
  MEMORY[0x1F4188790](v264);
  uint64_t v273 = (uint64_t)&v218 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v53);
  uint64_t v272 = (uint64_t)&v218 - v54;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F28);
  MEMORY[0x1F4188790](v55 - 8);
  v253 = (char *)&v218 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v57);
  uint64_t v252 = (uint64_t *)((char *)&v218 - v58);
  uint64_t v59 = a2[1];
  uint64_t v220 = *a2;
  uint64_t v61 = a2[2];
  uint64_t v60 = a2[3];
  uint64_t v62 = *(void *)(a4 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
  swift_beginAccess();
  uint64_t v63 = *(void *)(v62 + 16);
  uint64_t v64 = *(void *)(v63 + 64);
  uint64_t v241 = v63 + 64;
  uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
  uint64_t v66 = -1;
  if (v65 < 64) {
    uint64_t v66 = ~(-1 << v65);
  }
  unint64_t v256 = v66 & v64;
  unint64_t v67 = (unint64_t)(v65 + 63) >> 6;
  v265 = (unsigned int (**)(void, void, void))(v46 + 48);
  uint64_t v68 = v258;
  uint64_t v269 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v270 = (void (**)(void, void, void, void))(v28 + 56);
  v243 = (id *)(v6 + 8);
  uint64_t v236 = v286;
  unint64_t v218 = v67 - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v69 = 0;
  int64_t v244 = v67;
  unint64_t v219 = v67 - 5;
  uint64_t v247 = v63;
  uint64_t v224 = v63 + 104;
  *(void *)&long long v70 = 136315138;
  long long v228 = v70;
  uint64_t v227 = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v70 = 136315394;
  long long v229 = v70;
  unint64_t v226 = MEMORY[0x1E4FBC860];
  uint64_t v274 = (unint64_t *)v36;
LABEL_4:
  uint64_t v258 = v68;
  uint64_t v71 = v266;
  while (1)
  {
    uint64_t v72 = v253;
    if (v256)
    {
      unint64_t v73 = __clz(__rbit64(v256));
      unint64_t v255 = v69;
      v256 &= v256 - 1;
      unint64_t v74 = v73 | (v69 << 6);
LABEL_9:
      uint64_t v75 = *(void *)(v247 + 56);
      os_log_type_t v76 = (void *)(*(void *)(v247 + 48) + 16 * v74);
      uint64_t v77 = v76[1];
      *(void *)uint64_t v72 = *v76;
      *((void *)v72 + 1) = v77;
      uint64_t v78 = v75 + *(void *)(v246 + 72) * v74;
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
      sub_1DCDC9968(v78, (uint64_t)&v72[*(int *)(v79 + 48)], type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v72, 0, 1, v79);
      swift_bridgeObjectRetain();
      uint64_t v68 = v258;
      uint64_t v71 = v266;
      goto LABEL_16;
    }
    int64_t v80 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      goto LABEL_171;
    }
    if (v80 >= v244)
    {
      unint64_t v82 = v69;
    }
    else
    {
      unint64_t v81 = *(void *)(v241 + 8 * v80);
      if (v81) {
        goto LABEL_13;
      }
      unint64_t v82 = v69 + 1;
      if ((uint64_t)(v69 + 2) < v244)
      {
        unint64_t v81 = *(void *)(v241 + 8 * (v69 + 2));
        if (v81)
        {
          int64_t v80 = v69 + 2;
          uint64_t v72 = v253;
LABEL_13:
          unint64_t v255 = v80;
          unint64_t v256 = (v81 - 1) & v81;
          unint64_t v74 = __clz(__rbit64(v81)) + (v80 << 6);
          goto LABEL_9;
        }
        unint64_t v82 = v69 + 2;
        if ((uint64_t)(v69 + 3) < v244)
        {
          unint64_t v81 = *(void *)(v241 + 8 * (v69 + 3));
          if (v81)
          {
            int64_t v80 = v69 + 3;
            uint64_t v72 = v253;
            goto LABEL_13;
          }
          int64_t v80 = v69 + 4;
          unint64_t v82 = v69 + 3;
          if ((uint64_t)(v69 + 4) < v244)
          {
            unint64_t v81 = *(void *)(v241 + 8 * v80);
            uint64_t v72 = v253;
            if (v81) {
              goto LABEL_13;
            }
            while (v219 != v69)
            {
              unint64_t v81 = *(void *)(v224 + 8 * v69++);
              if (v81)
              {
                int64_t v80 = v69 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v82 = v218;
          }
        }
      }
    }
    uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    uint64_t v72 = v253;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v253, 1, 1, v83);
    unint64_t v255 = v82;
    unint64_t v256 = 0;
LABEL_16:
    uint64_t v84 = (uint64_t)v72;
    uint64_t v85 = v252;
    sub_1DCD43B04(v84, (uint64_t)v252, &qword_1EBE84F28);
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 48))(v85, 1, v86) == 1) {
      break;
    }
    uint64_t v254 = *v85;
    v257 = (uint64_t (*)())v85[1];
    uint64_t v87 = (uint64_t)v85 + *(int *)(v86 + 48);
    uint64_t v88 = v272;
    sub_1DCFA33E8(v87, v272, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    uint64_t v248 = *(int *)(v264 + 20);
    uint64_t v89 = *(void *)(v88 + v248)
        + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__regionGroupConfig;
    swift_beginAccess();
    uint64_t v90 = v89;
    uint64_t v91 = v251;
    sub_1DCF9CA68(v90, v251);
    uint64_t v263 = *v265;
    if (v263(v91, 1, v71) == 1)
    {
      uint64_t v92 = v250;
      _WORD *v250 = 0;
      *((unsigned char *)v92 + 2) = 0;
      *((_DWORD *)v92 + 1) = 0;
      *((void *)v92 + 1) = 0;
      *((unsigned char *)v92 + 16) = 1;
      sub_1DD047BE8();
      uint64_t v93 = v91;
      unint64_t v94 = (char *)v92;
      sub_1DCF9CAD0(v93);
    }
    else
    {
      uint64_t v95 = v91;
      unint64_t v94 = (char *)v250;
      sub_1DCFA33E8(v95, (uint64_t)v250, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
    }
    uint64_t v96 = (uint64_t)v249;
    uint64_t v97 = (uint64_t)v94;
    char v98 = *v94;
    sub_1DCFA3450(v97, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
    if ((v98 & 1) == 0 || (swift_bridgeObjectRetain(), uint64_t v271 = sub_1DCD9CB54(), v271 == 26))
    {
      sub_1DCFA3450(v272, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    long long v99 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v287 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v100 = *(NSObject **)(v68 + 16);
    swift_bridgeObjectRetain();
    unint64_t v101 = 0;
    uint64_t v267 = v99;
    uint64_t v268 = v100;
    while (1)
    {
      if (v101 == v100)
      {
        unint64_t v101 = (unint64_t)v100;
        uint64_t v102 = *v270;
        (*v270)(v36, 1, 1, v27);
      }
      else
      {
        if (v101 >= *(void *)(v68 + 16))
        {
          __break(1u);
LABEL_171:
          __break(1u);
          goto LABEL_172;
        }
        uint64_t v103 = (uint64_t)&v261[*(int *)(v27 + 48)];
        sub_1DCDC9968(v68+ ((*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80))+ *(void *)(v262 + 72) * v101, v103, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v104 = (uint64_t)v274 + *(int *)(v27 + 48);
        *uint64_t v274 = v101;
        sub_1DCFA33E8(v103, v104, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v102 = *v270;
        (*v270)(v274, 0, 1, v27);
        ++v101;
        unint64_t v36 = (char *)v274;
      }
      sub_1DCD43B04((uint64_t)v36, (uint64_t)v39, &qword_1EBE868C0);
      uint64_t v105 = *v269;
      if ((*v269)(v39, 1, v27) == 1) {
        break;
      }
      uint64_t v106 = *v39;
      sub_1DCFA33E8((uint64_t)v39 + *(int *)(v27 + 48), (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      LOBYTE(v275) = (_BYTE)v271;
      char v107 = sub_1DCF9E514((unsigned __int8 *)&v275);
      sub_1DCDC9968((uint64_t)v26, v96, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v108 = v273;
      sub_1DCDC9968(v272, v273, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      if ((v107 & 1) == 0)
      {
        sub_1DCFA3450(v108, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
        sub_1DCFA3450(v96, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_24:
        uint64_t v100 = v268;
        goto LABEL_25;
      }
      CGFloat v109 = *(double *)v96;
      CGFloat v110 = *(double *)(v96 + 8);
      CGFloat v111 = *(double *)(v96 + 16);
      CGFloat v112 = *(double *)(v96 + 24);
      v288.origin.CGFloat x = *(CGFloat *)v96;
      v288.origin.CGFloat y = v110;
      v288.size.width = v111;
      v288.size.height = v112;
      double Width = CGRectGetWidth(v288);
      v289.origin.CGFloat x = v109;
      v289.origin.CGFloat y = v110;
      v289.size.width = v111;
      v289.size.height = v112;
      double Height = CGRectGetHeight(v289);
      uint64_t v115 = *(void *)(v108 + *(int *)(v264 + 20))
           + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__regionGroupConfig;
      swift_beginAccess();
      uint64_t v116 = v115;
      uint64_t v117 = v260;
      sub_1DCF9CA68(v116, v260);
      if (v263(v117, 1, v266) == 1)
      {
        uint64_t v118 = v259;
        _WORD *v259 = 0;
        *((unsigned char *)v118 + 2) = 0;
        *((_DWORD *)v118 + 1) = 0;
        *((void *)v118 + 1) = 0;
        *((unsigned char *)v118 + 16) = 1;
        uint64_t v119 = (float *)v118;
        sub_1DD047BE8();
        sub_1DCF9CAD0(v117);
      }
      else
      {
        uint64_t v119 = (float *)v259;
        sub_1DCFA33E8(v117, (uint64_t)v259, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
      }
      float v120 = Width * Height;
      sub_1DCFA3450(v273, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      sub_1DCFA3450(v96, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v121 = v119[1];
      sub_1DCFA3450((uint64_t)v119, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
      if (v121 <= v120) {
        goto LABEL_24;
      }
      swift_beginAccess();
      uint64_t v122 = v287;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v122 = sub_1DCE9E068(0, v122[2] + 1, 1, v122);
      }
      unint64_t v124 = v122[2];
      unint64_t v123 = v122[3];
      if (v124 >= v123 >> 1) {
        uint64_t v122 = sub_1DCE9E068((void *)(v123 > 1), v124 + 1, 1, v122);
      }
      v122[2] = v124 + 1;
      v122[v124 + 4] = v106;
      uint64_t v287 = v122;
      swift_endAccess();
      uint64_t v125 = *v26;
      uint64_t v126 = v26[1];
      uint64_t v127 = v26[2];
      uint64_t v128 = v26[3];
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v68 = v258;
        uint64_t v129 = v267;
        uint64_t v100 = v268;
      }
      else
      {
        uint64_t v129 = sub_1DCE9DF58(0, v267[2] + 1, 1, v267);
        uint64_t v68 = v258;
        uint64_t v100 = v268;
      }
      unint64_t v131 = v129[2];
      unint64_t v130 = v129[3];
      if (v131 >= v130 >> 1) {
        uint64_t v129 = sub_1DCE9DF58((void *)(v130 > 1), v131 + 1, 1, v129);
      }
      v129[2] = v131 + 1;
      uint64_t v267 = v129;
      uint64_t v132 = &v129[4 * v131];
      v132[4] = v125;
      v132[5] = v126;
      v132[6] = v127;
      v132[7] = v128;
LABEL_25:
      sub_1DCFA3450((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v36 = (char *)v274;
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (v287[2] <= 1uLL)
    {
      swift_bridgeObjectRelease();
      uint64_t v142 = v237;
      sub_1DCDB40EC(v237);
      uint64_t v143 = v239;
      sub_1DCDB4300(v239);
      uint64_t v144 = *v243;
      ((void (*)(uint64_t, uint64_t))*v243)(v142, v245);
      uint64_t v145 = v257;
      swift_bridgeObjectRetain();
      uint64_t v146 = sub_1DD048048();
      os_log_type_t v147 = sub_1DD048848();
      uint64_t v271 = v146;
      if (os_log_type_enabled(v146, v147))
      {
        uint64_t v148 = swift_slowAlloc();
        uint64_t v149 = swift_slowAlloc();
        *(void *)&long long v275 = v149;
        *(_DWORD *)uint64_t v148 = v229;
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1DCED7FA0(v254, (unint64_t)v145, (uint64_t *)&v275);
        uint64_t v268 = v144;
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v148 + 12) = 2048;
        uint64_t v285 = v287[2];
        sub_1DD048A28();
        uint64_t v150 = v271;
        _os_log_impl(&dword_1DCCF9000, v271, v147, "Skip grouping for domain %s since the small region count is %ld.", (uint8_t *)v148, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v149, -1, -1);
        uint64_t v151 = v148;
        uint64_t v68 = v258;
        MEMORY[0x1E01B07E0](v151, -1, -1);

        ((void (*)(uint64_t, uint64_t))v268)(v239, v245);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        ((void (*)(uint64_t, uint64_t))v144)(v143, v245);
      }
      goto LABEL_58;
    }
    uint64_t v133 = v267[2];
    if (v133)
    {
      long long v152 = v267 + 7;
      CGFloat v153 = *((double *)v267 + 7);
      CGFloat y = *((double *)v267 + 5);
      CGFloat v154 = *((double *)v267 + 6);
      CGFloat x = *((double *)v267 + 4);
      swift_bridgeObjectRetain();
      do
      {
        v290.origin.CGFloat x = x;
        v290.origin.CGFloat y = y;
        v290.size.width = v154;
        v290.size.height = v153;
        CGRect v291 = CGRectUnion(v290, *(CGRect *)(v152 - 3));
        CGFloat x = v291.origin.x;
        CGFloat y = v291.origin.y;
        CGFloat v154 = v291.size.width;
        CGFloat v153 = v291.size.height;
        v152 += 4;
        --v133;
      }
      while (v133);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v157 = 0;
      uint64_t v158 = v230;
      while (1)
      {
        uint64_t v164 = (uint64_t (*)())v268;
        uint64_t v165 = v235;
        if ((char *)v157 == (char *)v268)
        {
          v102(v235, 1, 1, v27);
          v240 = v164;
        }
        else
        {
          if (((unint64_t)v157 & 0x8000000000000000) != 0) {
            goto LABEL_173;
          }
          if ((unint64_t)v157 >= *(void *)(v68 + 16)) {
            goto LABEL_174;
          }
          v257 = (uint64_t (*)())((char *)v157 + 1);
          uint64_t v166 = v157;
          uint64_t v167 = (uint64_t)&v261[*(int *)(v27 + 48)];
          sub_1DCDC9968(v68+ ((*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80))+ *(void *)(v262 + 72) * (void)v157, v167, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v168 = (uint64_t)v165 + *(int *)(v27 + 48);
          *uint64_t v165 = v166;
          uint64_t v169 = v167;
          uint64_t v158 = v230;
          sub_1DCFA33E8(v169, v168, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v102(v165, 0, 1, v27);
          v240 = v257;
        }
        uint64_t v170 = (uint64_t)v165;
        long long v171 = v234;
        sub_1DCD43B04(v170, (uint64_t)v234, &qword_1EBE868C0);
        if (v105(v171, 1, v27) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v206 = (uint64_t)v287;
          *(CGFloat *)&long long v275 = x;
          *((CGFloat *)&v275 + 1) = y;
          *(CGFloat *)&long long v276 = v154;
          *((CGFloat *)&v276 + 1) = v153;
          uint64_t v285 = v220;
          v286[0] = v59;
          v286[1] = v61;
          v286[2] = v60;
          unsigned __int8 v284 = v271;
          uint64_t v207 = *(void *)(v272 + v248)
               + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__regionGroupConfig;
          swift_beginAccess();
          uint64_t v208 = v221;
          sub_1DCF9CA68(v207, v221);
          if (v263(v208, 1, v266) == 1)
          {
            uint64_t v209 = v223;
            *uint64_t v223 = 0;
            *((unsigned char *)v209 + 2) = 0;
            *((_DWORD *)v209 + 1) = 0;
            *((void *)v209 + 1) = 0;
            *((unsigned char *)v209 + 16) = 1;
            swift_bridgeObjectRetain();
            uint64_t v210 = v209;
            sub_1DD047BE8();
            sub_1DCF9CAD0(v208);
          }
          else
          {
            uint64_t v210 = v223;
            sub_1DCFA33E8(v208, (uint64_t)v223, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
            swift_bridgeObjectRetain();
          }
          unint64_t v36 = (char *)v274;
          unint64_t v211 = v226;
          sub_1DCF9CB30(v68, v206, (double *)&v275, (double *)&v285, &v284, v222, (uint64_t)v210, v225);
          swift_bridgeObjectRelease();
          sub_1DCFA3450((uint64_t)v210, type metadata accessor for Argos_Protos_Queryflow_RegionGroupConfig);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v211 = sub_1DCE9D7A0(0, *(void *)(v211 + 16) + 1, 1, v211);
          }
          unint64_t v213 = *(void *)(v211 + 16);
          unint64_t v212 = *(void *)(v211 + 24);
          if (v213 >= v212 >> 1) {
            unint64_t v211 = sub_1DCE9D7A0(v212 > 1, v213 + 1, 1, v211);
          }
          *(void *)(v211 + 16) = v213 + 1;
          unint64_t v214 = (*(unsigned __int8 *)(v262 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v262 + 80);
          unint64_t v226 = v211;
          sub_1DCFA33E8(v225, v211 + v214 + *(void *)(v262 + 72) * v213, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v215 = v287;
          LOBYTE(v275) = (_BYTE)v271;
          swift_bridgeObjectRetain();
          unint64_t v216 = sub_1DCFA24DC(v68, v215, (unsigned __int8 *)&v275);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCFA3450(v272, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
          swift_bridgeObjectRelease();
          uint64_t v68 = v216;
          unint64_t v69 = v255;
          goto LABEL_4;
        }
        uint64_t v242 = *v171;
        sub_1DCFA33E8((uint64_t)v171 + *(int *)(v27 + 48), v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v172 = v287[2];
        if (v172)
        {
          if (v287[4] == v242) {
            goto LABEL_71;
          }
          if (v172 != 1)
          {
            if (v287[5] == v242)
            {
LABEL_71:
              uint64_t v159 = v158;
              uint64_t v160 = v158;
              uint64_t v161 = v238;
              sub_1DCDC9968(v159, v238, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v162 = v161;
LABEL_72:
              sub_1DCFA3450(v162, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v163 = (uint64_t)v231;
              sub_1DCDC9968(v160, (uint64_t)v231, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCFA3450(v163, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              goto LABEL_73;
            }
            if (v172 != 2)
            {
              uint64_t v173 = 6;
              while (1)
              {
                uint64_t v174 = v173 - 3;
                if (__OFADD__(v173 - 4, 1)) {
                  break;
                }
                if (v287[v173] == v242) {
                  goto LABEL_71;
                }
                ++v173;
                if (v174 == v172) {
                  goto LABEL_89;
                }
              }
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
              JUMPOUT(0x1DCF9C998);
            }
          }
        }
LABEL_89:
        uint64_t v175 = v158;
        uint64_t v160 = v158;
        uint64_t v176 = v238;
        sub_1DCDC9968(v175, v238, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v162 = v176;
        uint64_t v177 = *(void *)(v176 + 48);
        uint64_t v178 = *(void *)(v177 + 16);
        if (!v178) {
          goto LABEL_72;
        }
        swift_bridgeObjectRetain_n();
        long long v179 = *(_OWORD *)(v177 + 144);
        long long v281 = *(_OWORD *)(v177 + 128);
        long long v180 = *(_OWORD *)(v177 + 160);
        long long v282 = v179;
        v283[0] = v180;
        *(_OWORD *)((char *)v283 + 13) = *(_OWORD *)(v177 + 173);
        long long v181 = *(_OWORD *)(v177 + 80);
        long long v277 = *(_OWORD *)(v177 + 64);
        long long v278 = v181;
        long long v182 = *(_OWORD *)(v177 + 112);
        long long v279 = *(_OWORD *)(v177 + 96);
        long long v280 = v182;
        long long v183 = *(_OWORD *)(v177 + 48);
        long long v275 = *(_OWORD *)(v177 + 32);
        long long v276 = v183;
        v257 = (uint64_t (*)())(v178 - 1);
        uint64_t v254 = 192;
        while (1)
        {
          unint64_t v184 = 0xE300000000000000;
          uint64_t v185 = 7631457;
          switch((char)v275)
          {
            case 1:
              unint64_t v184 = 0xE600000000000000;
              uint64_t v185 = 0x65727574616ELL;
              break;
            case 2:
              unint64_t v184 = 0xE800000000000000;
              uint64_t v185 = 0x6B72616D646E616CLL;
              break;
            case 3:
              uint64_t v185 = 0x4C6C61727574616ELL;
              unint64_t v184 = 0xEF6B72616D646E61;
              break;
            case 4:
              unint64_t v184 = 0xE500000000000000;
              uint64_t v185 = 0x616964656DLL;
              break;
            case 5:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1802465122;
              break;
            case 6:
              unint64_t v184 = 0xE500000000000000;
              uint64_t v185 = 0x6D75626C61;
              break;
            case 7:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1937006947;
              break;
            case 8:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1936158564;
              break;
            case 9:
              unint64_t v184 = 0xE700000000000000;
              unsigned int v186 = 1835626081;
              goto LABEL_105;
            case 10:
              unint64_t v184 = 0xE500000000000000;
              uint64_t v185 = 0x7364726962;
              break;
            case 11:
              unint64_t v184 = 0xE700000000000000;
              uint64_t v185 = 0x73746365736E69;
              break;
            case 12:
              unint64_t v184 = 0xE800000000000000;
              uint64_t v185 = 0x73656C6974706572;
              break;
            case 13:
              unint64_t v184 = 0xE700000000000000;
              unsigned int v186 = 1835884909;
LABEL_105:
              uint64_t v185 = v186 | 0x736C6100000000;
              break;
            case 14:
              unint64_t v184 = 0xE700000000000000;
              uint64_t v185 = 0x6C657261707061;
              break;
            case 15:
              uint64_t v185 = 0x726F737365636361;
              unint64_t v184 = 0xEB00000000736569;
              break;
            case 16:
              unint64_t v184 = 0xE400000000000000;
              uint64_t v185 = 1685024614;
              break;
            case 17:
              unint64_t v184 = 0xEA0000000000746ELL;
              uint64_t v185 = 0x6F726665726F7473;
              break;
            case 18:
              unsigned int v187 = 1852270963;
              goto LABEL_113;
            case 19:
              unint64_t v184 = 0x80000001DD066AB0;
              uint64_t v185 = 0xD000000000000011;
              break;
            case 20:
              unsigned int v187 = 1869903201;
LABEL_113:
              uint64_t v185 = v187 | 0x626D795300000000;
              unint64_t v184 = 0xEA00000000006C6FLL;
              break;
            case 21:
              uint64_t v185 = 0x676F4C646E617262;
              unint64_t v184 = 0xEF6C6F626D79536FLL;
              break;
            case 22:
              unint64_t v184 = 0xE700000000000000;
              uint64_t v185 = 0x65646F63726162;
              break;
            case 23:
              uint64_t v185 = 0x727574706C756373;
              unint64_t v184 = 0xE900000000000065;
              break;
            case 24:
              unint64_t v184 = 0xE700000000000000;
              uint64_t v185 = 0x656E696C796B73;
              break;
            case 25:
              unint64_t v184 = 0xE800000000000000;
              uint64_t v185 = 0x44327463656A626FLL;
              break;
            default:
              break;
          }
          unint64_t v188 = 0xE300000000000000;
          uint64_t v189 = 7631457;
          switch((char)v271)
          {
            case 1:
              unint64_t v188 = 0xE600000000000000;
              uint64_t v189 = 0x65727574616ELL;
              break;
            case 2:
              unint64_t v188 = 0xE800000000000000;
              uint64_t v189 = 0x6B72616D646E616CLL;
              break;
            case 3:
              uint64_t v189 = 0x4C6C61727574616ELL;
              unint64_t v188 = 0xEF6B72616D646E61;
              break;
            case 4:
              unint64_t v188 = 0xE500000000000000;
              uint64_t v189 = 0x616964656DLL;
              break;
            case 5:
              unint64_t v188 = 0xE400000000000000;
              uint64_t v189 = 1802465122;
              break;
            case 6:
              unint64_t v188 = 0xE500000000000000;
              uint64_t v189 = 0x6D75626C61;
              break;
            case 7:
              unint64_t v188 = 0xE400000000000000;
              uint64_t v189 = 1937006947;
              break;
            case 8:
              unint64_t v188 = 0xE400000000000000;
              uint64_t v189 = 1936158564;
              break;
            case 9:
              unint64_t v188 = 0xE700000000000000;
              unsigned int v190 = 1835626081;
              goto LABEL_133;
            case 10:
              unint64_t v188 = 0xE500000000000000;
              uint64_t v189 = 0x7364726962;
              break;
            case 11:
              unint64_t v188 = 0xE700000000000000;
              uint64_t v189 = 0x73746365736E69;
              break;
            case 12:
              unint64_t v188 = 0xE800000000000000;
              uint64_t v189 = 0x73656C6974706572;
              break;
            case 13:
              unint64_t v188 = 0xE700000000000000;
              unsigned int v190 = 1835884909;
LABEL_133:
              uint64_t v189 = v190 | 0x736C6100000000;
              break;
            case 14:
              unint64_t v188 = 0xE700000000000000;
              uint64_t v189 = 0x6C657261707061;
              break;
            case 15:
              uint64_t v189 = 0x726F737365636361;
              unint64_t v188 = 0xEB00000000736569;
              break;
            case 16:
              unint64_t v188 = 0xE400000000000000;
              uint64_t v189 = 1685024614;
              break;
            case 17:
              unint64_t v188 = 0xEA0000000000746ELL;
              uint64_t v189 = 0x6F726665726F7473;
              break;
            case 18:
              unsigned int v191 = 1852270963;
              goto LABEL_141;
            case 19:
              unint64_t v188 = 0x80000001DD066AB0;
              uint64_t v189 = 0xD000000000000011;
              break;
            case 20:
              unsigned int v191 = 1869903201;
LABEL_141:
              uint64_t v189 = v191 | 0x626D795300000000;
              unint64_t v188 = 0xEA00000000006C6FLL;
              break;
            case 21:
              uint64_t v189 = 0x676F4C646E617262;
              unint64_t v188 = 0xEF6C6F626D79536FLL;
              break;
            case 22:
              unint64_t v188 = 0xE700000000000000;
              uint64_t v189 = 0x65646F63726162;
              break;
            case 23:
              uint64_t v189 = 0x727574706C756373;
              unint64_t v188 = 0xE900000000000065;
              break;
            case 24:
              unint64_t v188 = 0xE700000000000000;
              uint64_t v189 = 0x656E696C796B73;
              break;
            case 25:
              unint64_t v188 = 0xE800000000000000;
              uint64_t v189 = 0x44327463656A626FLL;
              break;
            default:
              break;
          }
          uint64_t v192 = v177;
          if (v185 == v189 && v184 == v188)
          {
            sub_1DCD32CC8((uint64_t)&v275);
            swift_bridgeObjectRelease_n();
            sub_1DCD32DD4((uint64_t)&v275);
            uint64_t v68 = v258;
          }
          else
          {
            char v193 = sub_1DD048FA8();
            sub_1DCD32CC8((uint64_t)&v275);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DCD32DD4((uint64_t)&v275);
            uint64_t v68 = v258;
            if ((v193 & 1) == 0) {
              goto LABEL_152;
            }
          }
          if (BYTE12(v282) == 1) {
            break;
          }
LABEL_152:
          if (!v257)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v162 = v238;
            uint64_t v160 = v230;
            goto LABEL_72;
          }
          uint64_t v177 = v192;
          long long v194 = *(_OWORD *)(v192 + v254 + 16);
          long long v275 = *(_OWORD *)(v192 + v254);
          long long v276 = v194;
          long long v195 = *(_OWORD *)(v192 + v254 + 32);
          long long v196 = *(_OWORD *)(v192 + v254 + 48);
          long long v197 = *(_OWORD *)(v192 + v254 + 80);
          long long v279 = *(_OWORD *)(v192 + v254 + 64);
          long long v280 = v197;
          long long v277 = v195;
          long long v278 = v196;
          long long v198 = *(_OWORD *)(v192 + v254 + 96);
          long long v199 = *(_OWORD *)(v192 + v254 + 112);
          long long v200 = *(_OWORD *)(v192 + v254 + 128);
          *(_OWORD *)((char *)v283 + 13) = *(_OWORD *)(v192 + v254 + 141);
          long long v282 = v199;
          v283[0] = v200;
          long long v281 = v198;
          v254 += 160;
          v257 = (uint64_t (*)())((char *)v257 - 1);
        }
        swift_bridgeObjectRelease_n();
        v257 = type metadata accessor for VisualUnderstanding.ImageRegion;
        sub_1DCFA3450(v238, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v160 = v230;
        v201 = v231;
        sub_1DCDC9968(v230, (uint64_t)v231, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        v292.origin.CGFloat x = x;
        v292.origin.CGFloat y = y;
        v292.size.width = v154;
        v292.size.height = v153;
        BOOL v202 = CGRectContainsRect(v292, *v201);
        sub_1DCFA3450((uint64_t)v201, (uint64_t (*)(void))v257);
        if (v202)
        {
          swift_beginAccess();
          uint64_t v203 = v287;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v203 = sub_1DCE9E068(0, v203[2] + 1, 1, v203);
          }
          unint64_t v205 = v203[2];
          unint64_t v204 = v203[3];
          if (v205 >= v204 >> 1) {
            uint64_t v203 = sub_1DCE9E068((void *)(v204 > 1), v205 + 1, 1, v203);
          }
          v203[2] = v205 + 1;
          v203[v205 + 4] = v242;
          uint64_t v287 = v203;
          swift_endAccess();
          uint64_t v68 = v258;
          uint64_t v160 = v230;
        }
LABEL_73:
        sub_1DCFA3450(v160, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v158 = v160;
        uint64_t v157 = v240;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v134 = v232;
    sub_1DCDB40EC(v232);
    uint64_t v135 = v233;
    sub_1DCDB4300(v233);
    uint64_t v271 = *v243;
    ((void (*)(uint64_t, uint64_t))v271)(v134, v245);
    uint64_t v136 = v257;
    swift_bridgeObjectRetain();
    uint64_t v137 = sub_1DD048048();
    os_log_type_t v138 = sub_1DD048848();
    uint64_t v268 = v137;
    if (os_log_type_enabled(v137, v138))
    {
      uint64_t v139 = swift_slowAlloc();
      uint64_t v140 = swift_slowAlloc();
      *(void *)&long long v275 = v140;
      *(_DWORD *)uint64_t v139 = v228;
      uint64_t v267 = (void *)(v139 + 4);
      swift_bridgeObjectRetain();
      uint64_t v285 = sub_1DCED7FA0(v254, (unint64_t)v136, (uint64_t *)&v275);
      uint64_t v68 = v258;
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      uint64_t v141 = v268;
      _os_log_impl(&dword_1DCCF9000, v268, v138, "Skip grouping for domain %s, failed to union small regions.", (uint8_t *)v139, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v140, -1, -1);
      MEMORY[0x1E01B07E0](v139, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    ((void (*)(uint64_t, uint64_t))v271)(v135, v245);
LABEL_58:
    sub_1DCFA3450(v272, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    swift_bridgeObjectRelease();
    unint64_t v36 = (char *)v274;
    uint64_t v71 = v266;
LABEL_6:
    unint64_t v69 = v255;
  }
  swift_release();
  *(void *)&long long v275 = v226;
  sub_1DCFDE7B4(v68);
  return v275;
}

uint64_t sub_1DCF9CA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF9CAD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85E70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF9CB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X2>, double *a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v151 = a6;
  uint64_t v154 = a8;
  uint64_t v14 = sub_1DD048068();
  uint64_t v143 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v160 = (char *)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v16 = *(void *)(v150 - 8);
  MEMORY[0x1F4188790](v150);
  uint64_t v178 = (_OWORD *)((char *)&v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v159 = (uint64_t)&v142 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v161 = (uint64_t)&v142 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v142 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v158 = (uint64_t)&v142 - v26;
  double v28 = *a3;
  double v27 = a3[1];
  CGFloat v29 = a3[2];
  CGFloat v30 = a3[3];
  double v31 = a4[1];
  double v147 = *a4;
  double v149 = a4[2];
  double v148 = a4[3];
  uint64_t v183 = *a5;
  int v32 = *(unsigned __int8 *)(a7 + 1);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1DCFA1A34(a2, a1);
  uint64_t v152 = 0;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(a7 + 8);
  uint64_t v153 = a7;
  sub_1DCFA1C30(v33, v34, *(unsigned char *)(a7 + 16));
  uint64_t v35 = v33;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v33 + 16);
  uint64_t v163 = v24;
  uint64_t v164 = v14;
  uint64_t v156 = v33;
  uint64_t v165 = v36;
  if (v36)
  {
    unint64_t v157 = v33 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    swift_bridgeObjectRetain();
    int v166 = 0;
    int v167 = 0;
    int v168 = 0;
    int v169 = 0;
    int v170 = 0;
    LODWORD(v171) = 0;
    LODWORD(v176) = 0;
    LODWORD(v175) = 0;
    LODWORD(v174) = 0;
    LODWORD(v173) = 0;
    LODWORD(v182) = 0;
    LODWORD(v181) = 0;
    LODWORD(v180) = 0;
    LODWORD(Width) = 0;
    int v37 = 0;
    int v172 = 0;
    long long v184 = 0uLL;
    long long v185 = 0uLL;
    unint64_t v38 = 0;
    float v39 = 0.0;
    float v40 = 0.0;
    int v41 = v32;
    uint64_t v42 = v178;
    uint64_t v155 = v16;
    while (v38 < *(void *)(v35 + 16))
    {
      uint64_t v43 = v158;
      sub_1DCDC9968(v157 + *(void *)(v16 + 72) * v38, v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v44 = *(void *)(v43 + 48);
      swift_bridgeObjectRetain();
      sub_1DCFA3450(v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        unint64_t v162 = v38;
        int v177 = v32;
        uint64_t v46 = v45 - 1;
        uint64_t v47 = 32;
        while (2)
        {
          long long v48 = *(_OWORD *)(v44 + v47);
          *(_OWORD *)&v188[16] = *(_OWORD *)(v44 + v47 + 16);
          *(_OWORD *)unint64_t v188 = v48;
          long long v49 = *(_OWORD *)(v44 + v47 + 32);
          long long v50 = *(_OWORD *)(v44 + v47 + 48);
          long long v51 = *(_OWORD *)(v44 + v47 + 64);
          long long v191 = *(_OWORD *)(v44 + v47 + 80);
          long long v190 = v51;
          long long v189 = v50;
          *(_OWORD *)&v188[32] = v49;
          long long v52 = *(_OWORD *)(v44 + v47 + 96);
          long long v53 = *(_OWORD *)(v44 + v47 + 112);
          long long v54 = *(_OWORD *)(v44 + v47 + 128);
          *(_OWORD *)((char *)v194 + 13) = *(_OWORD *)(v44 + v47 + 141);
          long long v193 = v53;
          v194[0] = v54;
          long long v192 = v52;
          unint64_t v55 = 0xE300000000000000;
          uint64_t v56 = 7631457;
          switch(v188[0])
          {
            case 1:
              unint64_t v55 = 0xE600000000000000;
              uint64_t v56 = 0x65727574616ELL;
              break;
            case 2:
              unint64_t v55 = 0xE800000000000000;
              uint64_t v56 = 0x6B72616D646E616CLL;
              break;
            case 3:
              uint64_t v56 = 0x4C6C61727574616ELL;
              unint64_t v55 = 0xEF6B72616D646E61;
              break;
            case 4:
              unint64_t v55 = 0xE500000000000000;
              uint64_t v56 = 0x616964656DLL;
              break;
            case 5:
              unint64_t v55 = 0xE400000000000000;
              uint64_t v56 = 1802465122;
              break;
            case 6:
              unint64_t v55 = 0xE500000000000000;
              uint64_t v56 = 0x6D75626C61;
              break;
            case 7:
              unint64_t v55 = 0xE400000000000000;
              uint64_t v56 = 1937006947;
              break;
            case 8:
              unint64_t v55 = 0xE400000000000000;
              uint64_t v56 = 1936158564;
              break;
            case 9:
              unint64_t v55 = 0xE700000000000000;
              unsigned int v57 = 1835626081;
              goto LABEL_29;
            case 0xA:
              unint64_t v55 = 0xE500000000000000;
              uint64_t v56 = 0x7364726962;
              break;
            case 0xB:
              unint64_t v55 = 0xE700000000000000;
              uint64_t v56 = 0x73746365736E69;
              break;
            case 0xC:
              unint64_t v55 = 0xE800000000000000;
              uint64_t v56 = 0x73656C6974706572;
              break;
            case 0xD:
              unint64_t v55 = 0xE700000000000000;
              unsigned int v57 = 1835884909;
LABEL_29:
              uint64_t v56 = v57 | 0x736C6100000000;
              break;
            case 0xE:
              unint64_t v55 = 0xE700000000000000;
              uint64_t v56 = 0x6C657261707061;
              break;
            case 0xF:
              uint64_t v56 = 0x726F737365636361;
              unint64_t v55 = 0xEB00000000736569;
              break;
            case 0x10:
              unint64_t v55 = 0xE400000000000000;
              uint64_t v56 = 1685024614;
              break;
            case 0x11:
              unint64_t v55 = 0xEA0000000000746ELL;
              uint64_t v56 = 0x6F726665726F7473;
              break;
            case 0x12:
              unsigned int v58 = 1852270963;
              goto LABEL_32;
            case 0x13:
              unint64_t v55 = 0x80000001DD066AB0;
              uint64_t v56 = 0xD000000000000011;
              break;
            case 0x14:
              unsigned int v58 = 1869903201;
LABEL_32:
              uint64_t v56 = v58 | 0x626D795300000000;
              unint64_t v55 = 0xEA00000000006C6FLL;
              break;
            case 0x15:
              uint64_t v56 = 0x676F4C646E617262;
              unint64_t v55 = 0xEF6C6F626D79536FLL;
              break;
            case 0x16:
              unint64_t v55 = 0xE700000000000000;
              uint64_t v56 = 0x65646F63726162;
              break;
            case 0x17:
              uint64_t v56 = 0x727574706C756373;
              unint64_t v55 = 0xE900000000000065;
              break;
            case 0x18:
              unint64_t v55 = 0xE700000000000000;
              uint64_t v56 = 0x656E696C796B73;
              break;
            case 0x19:
              unint64_t v55 = 0xE800000000000000;
              uint64_t v56 = 0x44327463656A626FLL;
              break;
            default:
              break;
          }
          unint64_t v59 = 0xE300000000000000;
          unint64_t v60 = 7631457;
          switch(v183)
          {
            case 1:
              unint64_t v59 = 0xE600000000000000;
              if (v56 == 0x65727574616ELL) {
                goto LABEL_87;
              }
              goto LABEL_90;
            case 2:
              unint64_t v59 = 0xE800000000000000;
              if (v56 != 0x6B72616D646E616CLL) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 3:
              unint64_t v59 = 0xEF6B72616D646E61;
              if (v56 != 0x4C6C61727574616ELL) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 4:
              unint64_t v59 = 0xE500000000000000;
              if (v56 != 0x616964656DLL) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 5:
              unint64_t v59 = 0xE400000000000000;
              if (v56 != 1802465122) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 6:
              unint64_t v59 = 0xE500000000000000;
              if (v56 != 0x6D75626C61) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 7:
              unint64_t v59 = 0xE400000000000000;
              if (v56 != 1937006947) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 8:
              unint64_t v59 = 0xE400000000000000;
              if (v56 != 1936158564) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 9:
              unint64_t v59 = 0xE700000000000000;
              uint64_t v62 = 1835626081;
              goto LABEL_70;
            case 10:
              unint64_t v59 = 0xE500000000000000;
              if (v56 != 0x7364726962) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 11:
              unint64_t v59 = 0xE700000000000000;
              unint64_t v61 = 0x746365736E69;
              goto LABEL_71;
            case 12:
              unint64_t v59 = 0xE800000000000000;
              if (v56 != 0x73656C6974706572) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 13:
              unint64_t v59 = 0xE700000000000000;
              uint64_t v62 = 1835884909;
LABEL_70:
              unint64_t v61 = v62 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_71:
              if (v56 != (v61 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 14:
              unint64_t v59 = 0xE700000000000000;
              if (v56 != 0x6C657261707061) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 15:
              unint64_t v59 = 0xEB00000000736569;
              if (v56 != 0x726F737365636361) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 16:
              unint64_t v59 = 0xE400000000000000;
              if (v56 != 1685024614) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 17:
              unint64_t v59 = 0xEA0000000000746ELL;
              if (v56 != 0x6F726665726F7473) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 18:
              unsigned int v64 = 1852270963;
              goto LABEL_76;
            case 19:
              unint64_t v59 = 0x80000001DD066AB0;
              unint64_t v60 = 0xD000000000000011;
              goto LABEL_86;
            case 20:
              unsigned int v64 = 1869903201;
LABEL_76:
              unint64_t v59 = 0xEA00000000006C6FLL;
              if (v56 != (v64 | 0x626D795300000000)) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 21:
              unint64_t v59 = 0xEF6C6F626D79536FLL;
              if (v56 != 0x676F4C646E617262) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 22:
              unint64_t v59 = 0xE700000000000000;
              uint64_t v63 = 0x646F63726162;
              goto LABEL_83;
            case 23:
              unint64_t v59 = 0xE900000000000065;
              if (v56 != 0x727574706C756373) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 24:
              unint64_t v59 = 0xE700000000000000;
              uint64_t v63 = 0x6E696C796B73;
LABEL_83:
              if (v56 != (v63 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
                goto LABEL_90;
              }
              goto LABEL_87;
            case 25:
              unint64_t v59 = 0xE800000000000000;
              if (v56 != 0x44327463656A626FLL) {
                goto LABEL_90;
              }
              goto LABEL_87;
            default:
LABEL_86:
              if (v56 != v60) {
                goto LABEL_90;
              }
LABEL_87:
              if (v55 == v59)
              {
                sub_1DCD32CC8((uint64_t)v188);
                swift_bridgeObjectRelease_n();
              }
              else
              {
LABEL_90:
                char v65 = sub_1DD048FA8();
                sub_1DCD32CC8((uint64_t)v188);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v65 & 1) == 0) {
                  goto LABEL_8;
                }
              }
              if (BYTE12(v193))
              {
                float v66 = *((float *)&v193 + 1);
                uint64_t v68 = *((void *)&v184 + 1);
                uint64_t v67 = v184;
                uint64_t v69 = *((void *)&v185 + 1);
                uint64_t v70 = v185;
                if (v39 < *((float *)&v193 + 1))
                {
                  uint64_t v68 = *((void *)&v191 + 1);
                  uint64_t v67 = v191;
                  uint64_t v69 = *((void *)&v192 + 1);
                  uint64_t v70 = v192;
                }
                sub_1DCD32D4C(v67, v68);
                sub_1DCD32D90(v184, *((uint64_t *)&v184 + 1));
                sub_1DCD32DD4((uint64_t)v188);
                if (v66 > v39) {
                  float v39 = v66;
                }
                v41 |= BYTE14(v193);
                v37 |= v188[40];
                LODWORD(Width) |= BYTE13(v193);
                int v177 = v41 & 1;
                LODWORD(v180) |= HIBYTE(v193);
                LODWORD(v181) |= LOBYTE(v194[0]);
                LODWORD(v182) |= BYTE1(v194[0]);
                int v172 = 1;
                int v166 = LOBYTE(v182) & 1;
                LODWORD(v171) = v166;
                int v167 = LOBYTE(v181) & 1;
                LODWORD(v176) = v167;
                int v168 = LOBYTE(v180) & 1;
                LODWORD(v175) = v168;
                int v169 = LOBYTE(Width) & 1;
                LODWORD(v174) = v169;
                int v170 = v37 & 1;
                LODWORD(v173) = v170;
                if (*((float *)&v193 + 2) > v40) {
                  float v40 = *((float *)&v193 + 2);
                }
                *(void *)&long long v184 = v67;
                *((void *)&v184 + 1) = v68;
                *(void *)&long long v185 = v70;
                *((void *)&v185 + 1) = v69;
                uint64_t v42 = v178;
                if (!v46)
                {
LABEL_3:
                  swift_bridgeObjectRelease();
                  int v32 = v177;
                  uint64_t v35 = v156;
                  uint64_t v16 = v155;
                  unint64_t v38 = v162;
                  goto LABEL_4;
                }
                goto LABEL_9;
              }
LABEL_8:
              sub_1DCD32DD4((uint64_t)v188);
              if (!v46) {
                goto LABEL_3;
              }
LABEL_9:
              --v46;
              v47 += 160;
              continue;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_4:
      ++v38;
      uint64_t v14 = v164;
      if (v38 == v165)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v163;
        goto LABEL_103;
      }
    }
    __break(1u);
LABEL_139:
    swift_release();
    __break(1u);
    JUMPOUT(0x1DCF9E444);
  }
  int v170 = 0;
  int v169 = 0;
  int v168 = 0;
  int v167 = 0;
  int v166 = 0;
  LODWORD(v171) = 0;
  LODWORD(v176) = 0;
  LODWORD(v175) = 0;
  LODWORD(v174) = 0;
  LODWORD(v173) = 0;
  int v172 = 0;
  long long v184 = 0uLL;
  long long v185 = 0uLL;
  float v39 = 0.0;
  float v40 = 0.0;
  uint64_t v42 = v178;
LABEL_103:
  CGFloat v71 = v28 - v147;
  double v146 = v27;
  CGFloat v72 = v27 - v31;
  v199.origin.CGFloat x = v28;
  v199.origin.CGFloat y = v27;
  CGFloat v145 = v29;
  v199.size.width = v29;
  CGFloat v144 = v30;
  v199.size.height = v30;
  CGFloat Width = CGRectGetWidth(v199);
  v200.origin.CGFloat x = v28;
  v200.origin.CGFloat y = v27;
  v200.size.width = v29;
  v200.size.height = v30;
  CGFloat Height = CGRectGetHeight(v200);
  double v182 = v28;
  CGFloat v74 = Height;
  double v75 = 1.0 / v149;
  double v76 = 1.0 / v148;
  CGFloat v181 = v71 * (1.0 / v149);
  CGFloat v180 = v72 * (1.0 / v148);
  v201.origin.CGFloat x = v71;
  v201.origin.CGFloat y = v72;
  CGFloat v77 = Width;
  v201.size.width = Width;
  v201.size.height = v74;
  CGFloat v78 = v75 * CGRectGetWidth(v201);
  v202.origin.CGFloat x = v71;
  v202.origin.CGFloat y = v72;
  v202.size.width = v77;
  v202.size.height = v74;
  CGFloat v79 = v76 * CGRectGetHeight(v202);
  double v80 = v181;
  v203.origin.CGFloat x = v181;
  double v81 = v180;
  v203.origin.CGFloat y = v180;
  v203.size.width = v78;
  v203.size.height = v79;
  double v82 = CGRectGetWidth(v203);
  v204.origin.CGFloat x = v80;
  v204.origin.CGFloat y = v81;
  v204.size.width = v78;
  v204.size.height = v79;
  double v83 = CGRectGetHeight(v204);
  sub_1DCEC6548(v80, v81, v82, v83);
  *(float *)&CGFloat v78 = v84;
  uint64_t v85 = v150;
  sub_1DD046588();
  double v86 = v146;
  *(double *)uint64_t v24 = v182;
  *((double *)v24 + 1) = v86;
  CGFloat v87 = v144;
  *((CGFloat *)v24 + 2) = v145;
  *((CGFloat *)v24 + 3) = v87;
  uint64_t v88 = MEMORY[0x1E4FBC860];
  v24[32] = 1;
  *((void *)v24 + 5) = v88;
  *((void *)v24 + 6) = v88;
  *((void *)v24 + 7) = v88;
  *((void *)v24 + 8) = v88;
  *((_DWORD *)v24 + 18) = 0;
  *((_DWORD *)v24 + 19) = LODWORD(v78);
  *((void *)v24 + 11) = 0;
  *((void *)v24 + 12) = 0;
  *((void *)v24 + 10) = 0;
  v24[104] = 0;
  *((void *)v24 + 14) = v88;
  v24[*(int *)(v85 + 64)] = 1;
  *(void *)&v24[*(int *)(v85 + 68)] = v88;
  char v89 = (char)v171;
  if (!v165) {
    goto LABEL_127;
  }
  int v177 = v32;
  uint64_t v90 = v35 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  swift_beginAccess();
  *(void *)&double v182 = v143 + 16;
  *(void *)&CGFloat v181 = v143 + 8;
  CGFloat v180 = *(double *)(v16 + 72);
  uint64_t v91 = v90;
  uint64_t v175 = &v188[8];
  long long v171 = "coarseCategoryDistribution";
  unint64_t v162 = 0x80000001DD067880;
  *(void *)&long long v92 = 136315394;
  long long v174 = v92;
  uint64_t v173 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v93 = v161;
  unint64_t v94 = v160;
  do
  {
    sub_1DCDC9968(v91, v93, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v96 = v159;
    sub_1DCF22040(v93, (uint64_t)v24, v159);
    sub_1DCD3700C(v96, (uint64_t)v24);
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1) {
      goto LABEL_122;
    }
    id v97 = objc_msgSend(self, sel_mainBundle);
    id v98 = objc_msgSend(v97, sel_bundleIdentifier);

    if (v98)
    {
      uint64_t v99 = sub_1DD048408();
      uint64_t v101 = v100;

      if (v99 == 0xD00000000000002BLL && v101 == v162)
      {
        swift_bridgeObjectRelease();
LABEL_115:
        uint64_t v103 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          uint64_t v103 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_119;
      }
      char v102 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v102) {
        goto LABEL_115;
      }
    }
    uint64_t v103 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      uint64_t v103 = &qword_1EBE871E8;
    }
LABEL_119:
    uint64_t v104 = *(void **)(*v103 + 32);
    swift_retain();
    uint64_t v105 = (void *)sub_1DD0483D8();
    LODWORD(v104) = objc_msgSend(v104, sel_BOOLForKey_, v105);
    swift_release();

    uint64_t v42 = v178;
    if (v104)
    {
      uint64_t v106 = qword_1EAB02B70;
      if (qword_1EAB01C80 != -1)
      {
        swift_once();
        uint64_t v106 = qword_1EAB02B70;
      }
      goto LABEL_124;
    }
LABEL_122:
    uint64_t v106 = qword_1EBE871A8;
    if (qword_1EBE871C8 != -1)
    {
      swift_once();
      uint64_t v106 = qword_1EBE871A8;
    }
LABEL_124:
    uint64_t v107 = __swift_project_value_buffer(v14, (uint64_t)v106);
    (**(void (***)(char *, uint64_t, uint64_t))&v182)(v94, v107, v14);
    uint64_t v93 = v161;
    sub_1DCDC9968(v161, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v108 = sub_1DD048048();
    os_log_type_t v109 = sub_1DD048848();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = swift_slowAlloc();
      CGFloat Width = *(double *)&v91;
      uint64_t v111 = v110;
      uint64_t v176 = swift_slowAlloc();
      uint64_t v187 = v176;
      *(_DWORD *)uint64_t v111 = v174;
      long long v112 = v178[1];
      *(_OWORD *)unint64_t v188 = *v178;
      *(_OWORD *)&v188[16] = v112;
      uint64_t v113 = NormalizedRect.loggingDescription.getter();
      *(void *)unint64_t v188 = sub_1DCED7FA0(v113, v114, &v187);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCFA3450((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v111 + 12) = 2080;
      long long v115 = *((_OWORD *)v163 + 1);
      *(_OWORD *)unint64_t v188 = *(_OWORD *)v163;
      *(_OWORD *)&v188[16] = v115;
      uint64_t v116 = NormalizedRect.loggingDescription.getter();
      *(void *)unint64_t v188 = sub_1DCED7FA0(v116, v117, &v187);
      uint64_t v24 = v163;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v108, v109, "Merge region %s to grouped region %s", (uint8_t *)v111, 0x16u);
      uint64_t v118 = v176;
      swift_arrayDestroy();
      uint64_t v42 = v178;
      MEMORY[0x1E01B07E0](v118, -1, -1);
      uint64_t v119 = v111;
      *(double *)&uint64_t v91 = Width;
      MEMORY[0x1E01B07E0](v119, -1, -1);

      (**(void (***)(char *, uint64_t))&v181)(v94, v164);
      uint64_t v95 = v93;
      uint64_t v14 = v164;
    }
    else
    {

      sub_1DCFA3450((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      (**(void (***)(char *, uint64_t))&v181)(v94, v14);
      uint64_t v95 = v93;
    }
    sub_1DCFA3450(v95, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    v91 += *(void *)&v180;
    --v165;
  }
  while (v165);
  char v89 = v166;
  LODWORD(v176) = v167;
  LODWORD(v175) = v168;
  LODWORD(v174) = v169;
  LODWORD(v173) = v170;
  LOBYTE(v32) = v177;
  uint64_t v88 = MEMORY[0x1E4FBC860];
LABEL_127:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85188);
  float v120 = (_OWORD *)swift_allocObject();
  v188[0] = v183;
  *(_DWORD *)&v188[1] = *(_DWORD *)v198;
  *(_DWORD *)&v188[4] = *(_DWORD *)&v198[3];
  memset(&v188[8], 0, 32);
  v188[40] = v173;
  *(_DWORD *)&v188[41] = *(_DWORD *)v197;
  *(_DWORD *)&v188[44] = *(_DWORD *)&v197[3];
  long long v189 = 0u;
  long long v190 = 0u;
  long long v191 = v184;
  long long v192 = v185;
  LODWORD(v193) = 0;
  *(void *)((char *)&v193 + 4) = __PAIR64__(LODWORD(v40), LODWORD(v39));
  BYTE12(v193) = v172;
  BYTE13(v193) = v174;
  BYTE14(v193) = v32;
  HIBYTE(v193) = (_BYTE)v175;
  LOBYTE(v194[0]) = v176;
  BYTE1(v194[0]) = v89;
  *(_DWORD *)((char *)v194 + 2) = v195;
  WORD3(v194[0]) = v196;
  memset((char *)v194 + 8, 0, 21);
  long long v121 = v185;
  v120[7] = v184;
  v120[8] = v121;
  long long v122 = *(_OWORD *)&v188[32];
  long long v123 = v190;
  v120[5] = v189;
  v120[6] = v123;
  long long v124 = *(_OWORD *)v188;
  long long v125 = *(_OWORD *)&v188[16];
  v120[1] = xmmword_1DD04E910;
  v120[2] = v124;
  v120[3] = v125;
  v120[4] = v122;
  *(_OWORD *)((char *)v120 + 173) = *(_OWORD *)((char *)v194 + 13);
  long long v126 = v194[0];
  v120[9] = v193;
  v120[10] = v126;
  swift_beginAccess();
  *((void *)v24 + 6) = v120;
  sub_1DCD32CC8((uint64_t)v188);
  swift_bridgeObjectRelease();
  uint64_t v186 = *((void *)v24 + 7);
  swift_bridgeObjectRetain_n();
  uint64_t v127 = v152;
  sub_1DCDC8E88(&v186);
  if (v127) {
    goto LABEL_139;
  }
  swift_bridgeObjectRelease();
  uint64_t v128 = v186;
  int64_t v129 = *(void *)(v186 + 16);
  if (v129)
  {
    uint64_t v186 = v88;
    sub_1DCFC4988(0, v129, 0);
    uint64_t v130 = v186;
    *((void *)&v185 + 1) = v128;
    unint64_t v131 = (uint64_t *)(v128 + 96);
    do
    {
      uint64_t v133 = *(v131 - 3);
      uint64_t v132 = *(v131 - 2);
      uint64_t v135 = *(v131 - 1);
      uint64_t v134 = *v131;
      uint64_t v186 = v130;
      unint64_t v137 = *(void *)(v130 + 16);
      unint64_t v136 = *(void *)(v130 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v137 >= v136 >> 1)
      {
        sub_1DCFC4988(v136 > 1, v137 + 1, 1);
        uint64_t v130 = v186;
      }
      *(void *)(v130 + 16) = v137 + 1;
      os_log_type_t v138 = (void *)(v130 + 32 * v137);
      v138[4] = v133;
      v138[5] = v132;
      v138[6] = v135;
      v138[7] = v134;
      v131 += 10;
      --v129;
    }
    while (v129);
    swift_release();
    uint64_t v24 = v163;
    uint64_t v88 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_release();
    uint64_t v130 = MEMORY[0x1E4FBC860];
  }
  *((void *)v24 + 5) = v130;
  *((void *)v24 + 7) = v88;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v153 + 2))
  {
    uint64_t v139 = swift_bridgeObjectRetain();
    uint64_t v140 = sub_1DCFA1C98(v139);
    swift_bridgeObjectRelease();
    *((void *)v24 + 14) = v140;
    swift_bridgeObjectRelease();
  }
  sub_1DCD32DD4((uint64_t)v188);
  *((_DWORD *)v24 + 18) = v193;
  sub_1DCDC9968((uint64_t)v24, v154, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return sub_1DCFA3450((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
}

uint64_t sub_1DCF9E514(unsigned __int8 *a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  long long v5 = *(_OWORD *)(v2 + 144);
  long long v35 = *(_OWORD *)(v2 + 128);
  long long v36 = v5;
  v37[0] = *(_OWORD *)(v2 + 160);
  *(_OWORD *)((char *)v37 + 13) = *(_OWORD *)(v2 + 173);
  long long v6 = *(_OWORD *)(v2 + 80);
  long long v31 = *(_OWORD *)(v2 + 64);
  long long v32 = v6;
  long long v7 = *(_OWORD *)(v2 + 112);
  long long v33 = *(_OWORD *)(v2 + 96);
  long long v34 = v7;
  long long v8 = *(_OWORD *)(v2 + 48);
  long long v29 = *(_OWORD *)(v2 + 32);
  long long v30 = v8;
  uint64_t v9 = v3 - 1;
  uint64_t v10 = 192;
  while (2)
  {
    unint64_t v11 = 0xE300000000000000;
    uint64_t v12 = 7631457;
    switch((char)v29)
    {
      case 1:
        unint64_t v11 = 0xE600000000000000;
        uint64_t v12 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v12 = 0x4C6C61727574616ELL;
        unint64_t v11 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1802465122;
        break;
      case 6:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1937006947;
        break;
      case 8:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1936158564;
        break;
      case 9:
        unint64_t v11 = 0xE700000000000000;
        unsigned int v13 = 1835626081;
        goto LABEL_17;
      case 10:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x7364726962;
        break;
      case 11:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x73746365736E69;
        break;
      case 12:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x73656C6974706572;
        break;
      case 13:
        unint64_t v11 = 0xE700000000000000;
        unsigned int v13 = 1835884909;
LABEL_17:
        uint64_t v12 = v13 | 0x736C6100000000;
        break;
      case 14:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6C657261707061;
        break;
      case 15:
        uint64_t v12 = 0x726F737365636361;
        unint64_t v11 = 0xEB00000000736569;
        break;
      case 16:
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1685024614;
        break;
      case 17:
        unint64_t v11 = 0xEA0000000000746ELL;
        uint64_t v12 = 0x6F726665726F7473;
        break;
      case 18:
        unsigned int v14 = 1852270963;
        goto LABEL_25;
      case 19:
        unint64_t v11 = 0x80000001DD066AB0;
        uint64_t v12 = 0xD000000000000011;
        break;
      case 20:
        unsigned int v14 = 1869903201;
LABEL_25:
        uint64_t v12 = v14 | 0x626D795300000000;
        unint64_t v11 = 0xEA00000000006C6FLL;
        break;
      case 21:
        uint64_t v12 = 0x676F4C646E617262;
        unint64_t v11 = 0xEF6C6F626D79536FLL;
        break;
      case 22:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x65646F63726162;
        break;
      case 23:
        uint64_t v12 = 0x727574706C756373;
        unint64_t v11 = 0xE900000000000065;
        break;
      case 24:
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x656E696C796B73;
        break;
      case 25:
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v15 = 0xE300000000000000;
    uint64_t v16 = 7631457;
    switch(v4)
    {
      case 1:
        unint64_t v15 = 0xE600000000000000;
        if (v12 == 0x65727574616ELL) {
          goto LABEL_80;
        }
        goto LABEL_83;
      case 2:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x6B72616D646E616CLL) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 3:
        unint64_t v15 = 0xEF6B72616D646E61;
        if (v12 != 0x4C6C61727574616ELL) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 4:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x616964656DLL) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 5:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1802465122) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 6:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x6D75626C61) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 7:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1937006947) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 8:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1936158564) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 9:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v17 = 1835626081;
        goto LABEL_55;
      case 10:
        unint64_t v15 = 0xE500000000000000;
        if (v12 != 0x7364726962) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 11:
        unint64_t v15 = 0xE700000000000000;
        unint64_t v18 = 0x746365736E69;
        goto LABEL_56;
      case 12:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x73656C6974706572) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 13:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v17 = 1835884909;
LABEL_55:
        unint64_t v18 = v17 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_56:
        if (v12 != (v18 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 14:
        unint64_t v15 = 0xE700000000000000;
        if (v12 != 0x6C657261707061) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 15:
        unint64_t v15 = 0xEB00000000736569;
        if (v12 != 0x726F737365636361) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 16:
        unint64_t v15 = 0xE400000000000000;
        if (v12 != 1685024614) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 17:
        unint64_t v15 = 0xEA0000000000746ELL;
        if (v12 != 0x6F726665726F7473) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 18:
        unsigned int v19 = 1852270963;
        goto LABEL_70;
      case 19:
        unint64_t v15 = 0x80000001DD066AB0;
        if (v12 != 0xD000000000000011) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 20:
        unsigned int v19 = 1869903201;
LABEL_70:
        unint64_t v15 = 0xEA00000000006C6FLL;
        if (v12 != (v19 | 0x626D795300000000)) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 21:
        unint64_t v15 = 0xEF6C6F626D79536FLL;
        if (v12 != 0x676F4C646E617262) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 22:
        unint64_t v15 = 0xE700000000000000;
        if (v12 != 0x65646F63726162) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 23:
        unint64_t v15 = 0xE900000000000065;
        if (v12 != 0x727574706C756373) {
          goto LABEL_83;
        }
        goto LABEL_80;
      case 24:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x656E696C796B73;
        goto LABEL_79;
      case 25:
        unint64_t v15 = 0xE800000000000000;
        if (v12 != 0x44327463656A626FLL) {
          goto LABEL_83;
        }
        goto LABEL_80;
      default:
LABEL_79:
        if (v12 != v16) {
          goto LABEL_83;
        }
LABEL_80:
        if (v11 == v15)
        {
          sub_1DCD32CC8((uint64_t)&v29);
          swift_bridgeObjectRelease_n();
          sub_1DCD32DD4((uint64_t)&v29);
        }
        else
        {
LABEL_83:
          char v20 = sub_1DD048FA8();
          sub_1DCD32CC8((uint64_t)&v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCD32DD4((uint64_t)&v29);
          if ((v20 & 1) == 0) {
            goto LABEL_85;
          }
        }
        if (BYTE12(v36) != 1)
        {
LABEL_85:
          if (!v9)
          {
            swift_bridgeObjectRelease_n();
            return 0;
          }
          long long v21 = *(_OWORD *)(v2 + v10 + 16);
          long long v29 = *(_OWORD *)(v2 + v10);
          long long v30 = v21;
          long long v22 = *(_OWORD *)(v2 + v10 + 32);
          long long v23 = *(_OWORD *)(v2 + v10 + 48);
          long long v24 = *(_OWORD *)(v2 + v10 + 80);
          long long v33 = *(_OWORD *)(v2 + v10 + 64);
          long long v34 = v24;
          long long v31 = v22;
          long long v32 = v23;
          long long v25 = *(_OWORD *)(v2 + v10 + 96);
          long long v26 = *(_OWORD *)(v2 + v10 + 112);
          long long v27 = *(_OWORD *)(v2 + v10 + 128);
          *(_OWORD *)((char *)v37 + 13) = *(_OWORD *)(v2 + v10 + 141);
          long long v36 = v26;
          v37[0] = v27;
          long long v35 = v25;
          v10 += 160;
          --v9;
          continue;
        }
        swift_bridgeObjectRelease_n();
        return 1;
    }
  }
}

void sub_1DCF9ECDC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v163 = *(void *)(v4 - 8);
  uint64_t v164 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v159 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v170 = (uint64_t)&v154 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v167 = (uint64_t)&v154 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v166 = (uint64_t)&v154 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 < v12)
  {
    if (v12 >= 0) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 + 1;
    }
    if (v12 >= -1)
    {
      uint64_t v155 = v13;
      if (v12 < 2)
      {
        uint64_t v18 = MEMORY[0x1E4FBC860];
        unint64_t v162 = MEMORY[0x1E4FBC860]
             + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
        if (v12 != 1)
        {
          unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          char v20 = (char *)MEMORY[0x1E4FBC860];
          if (v21 < 2) {
            goto LABEL_116;
          }
          goto LABEL_104;
        }
        uint64_t v154 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v15 = v14 >> 1;
        uint64_t v16 = sub_1DD0486F8();
        *(void *)(v16 + 16) = v15;
        uint64_t v17 = *(unsigned __int8 *)(v163 + 80);
        uint64_t v154 = v16;
        unint64_t v162 = v16 + ((v17 + 32) & ~v17);
      }
      uint64_t v19 = 0;
      char v20 = (char *)MEMORY[0x1E4FBC860];
      int v169 = a1;
      while (1)
      {
        uint64_t v22 = v19 + 1;
        uint64_t v161 = v19;
        if (v19 + 1 < v12)
        {
          uint64_t v23 = *a1;
          uint64_t v24 = *(void *)(v163 + 72);
          uint64_t v158 = v19 + 1;
          uint64_t v25 = v24;
          uint64_t v156 = v23;
          uint64_t v26 = v166;
          sub_1DCDC9968(v23 + v24 * v22, v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v27 = v23 + v25 * v19;
          uint64_t v28 = v25;
          uint64_t v168 = v12;
          uint64_t v29 = v167;
          sub_1DCDC9968(v27, v167, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          CGFloat v30 = *(double *)v26;
          CGFloat v31 = *(double *)(v26 + 8);
          CGFloat v32 = *(double *)(v26 + 16);
          CGFloat v33 = *(double *)(v26 + 24);
          v172.origin.CGFloat x = *(CGFloat *)v26;
          v172.origin.CGFloat y = v31;
          v172.size.width = v32;
          v172.size.height = v33;
          double MinX = CGRectGetMinX(v172);
          v173.origin.CGFloat x = v30;
          v173.origin.CGFloat y = v31;
          v173.size.width = v32;
          v173.size.height = v33;
          CGRectGetMaxY(v173);
          v174.origin.CGFloat x = v30;
          v174.origin.CGFloat y = v31;
          v174.size.width = v32;
          v174.size.height = v33;
          CGRectGetWidth(v174);
          v175.origin.CGFloat x = v30;
          v175.origin.CGFloat y = v31;
          v175.size.width = v32;
          v175.size.height = v33;
          CGRectGetHeight(v175);
          v176.origin.CGFloat x = v30;
          v176.origin.CGFloat y = v31;
          v176.size.width = v32;
          v176.size.height = v33;
          CGRectGetMinX(v176);
          v177.origin.CGFloat x = v30;
          v177.origin.CGFloat y = v31;
          v177.size.width = v32;
          v177.size.height = v33;
          double v35 = 1.0 - CGRectGetMaxY(v177);
          v178.origin.CGFloat x = v30;
          v178.origin.CGFloat y = v31;
          v178.size.width = v32;
          v178.size.height = v33;
          CGRectGetWidth(v178);
          v179.origin.CGFloat x = v30;
          v179.origin.CGFloat y = v31;
          v179.size.width = v32;
          v179.size.height = v33;
          CGRectGetHeight(v179);
          double v165 = MinX + v35;
          CGFloat v36 = *(double *)v29;
          CGFloat v37 = *(double *)(v29 + 8);
          CGFloat v38 = *(double *)(v29 + 16);
          CGFloat v39 = *(double *)(v29 + 24);
          v180.origin.CGFloat x = *(CGFloat *)v29;
          v180.origin.CGFloat y = v37;
          v180.size.width = v38;
          v180.size.height = v39;
          double v40 = CGRectGetMinX(v180);
          v181.origin.CGFloat x = v36;
          v181.origin.CGFloat y = v37;
          v181.size.width = v38;
          v181.size.height = v39;
          CGRectGetMaxY(v181);
          v182.origin.CGFloat x = v36;
          v182.origin.CGFloat y = v37;
          v182.size.width = v38;
          v182.size.height = v39;
          CGRectGetWidth(v182);
          v183.origin.CGFloat x = v36;
          v183.origin.CGFloat y = v37;
          v183.size.width = v38;
          v183.size.height = v39;
          CGRectGetHeight(v183);
          v184.origin.CGFloat x = v36;
          v184.origin.CGFloat y = v37;
          v184.size.width = v38;
          v184.size.height = v39;
          CGRectGetMinX(v184);
          v185.origin.CGFloat x = v36;
          v185.origin.CGFloat y = v37;
          v185.size.width = v38;
          v185.size.height = v39;
          double v41 = 1.0 - CGRectGetMaxY(v185);
          v186.origin.CGFloat x = v36;
          v186.origin.CGFloat y = v37;
          v186.size.width = v38;
          v186.size.height = v39;
          CGRectGetWidth(v186);
          v187.origin.CGFloat x = v36;
          v187.origin.CGFloat y = v37;
          v187.size.width = v38;
          v187.size.height = v39;
          CGRectGetHeight(v187);
          double v160 = v40 + v41;
          uint64_t v12 = v168;
          sub_1DCFA3450(v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v42 = v26;
          uint64_t v43 = v156;
          sub_1DCFA3450(v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v22 = v19 + 2;
          uint64_t v171 = v28;
          if (v19 + 2 < v12)
          {
            v158 *= v28;
            unint64_t v157 = (char *)(v28 * v22);
            while (1)
            {
              BOOL v44 = v165 < v160;
              uint64_t v45 = v166;
              sub_1DCDC9968((uint64_t)&v157[v43], v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v46 = v167;
              sub_1DCDC9968(v43 + v158, v167, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              CGFloat v47 = *(double *)v45;
              CGFloat v48 = *(double *)(v45 + 8);
              CGFloat v49 = *(double *)(v45 + 16);
              CGFloat v50 = *(double *)(v45 + 24);
              v188.origin.CGFloat x = *(CGFloat *)v45;
              v188.origin.CGFloat y = v48;
              v188.size.width = v49;
              v188.size.height = v50;
              double v51 = CGRectGetMinX(v188);
              v189.origin.CGFloat x = v47;
              v189.origin.CGFloat y = v48;
              v189.size.width = v49;
              v189.size.height = v50;
              CGRectGetMaxY(v189);
              v190.origin.CGFloat x = v47;
              v190.origin.CGFloat y = v48;
              v190.size.width = v49;
              v190.size.height = v50;
              CGRectGetWidth(v190);
              v191.origin.CGFloat x = v47;
              v191.origin.CGFloat y = v48;
              v191.size.width = v49;
              v191.size.height = v50;
              CGRectGetHeight(v191);
              v192.origin.CGFloat x = v47;
              v192.origin.CGFloat y = v48;
              v192.size.width = v49;
              v192.size.height = v50;
              CGRectGetMinX(v192);
              v193.origin.CGFloat x = v47;
              v193.origin.CGFloat y = v48;
              v193.size.width = v49;
              v193.size.height = v50;
              double v52 = 1.0 - CGRectGetMaxY(v193);
              v194.origin.CGFloat x = v47;
              v194.origin.CGFloat y = v48;
              v194.size.width = v49;
              v194.size.height = v50;
              CGRectGetWidth(v194);
              v195.origin.CGFloat x = v47;
              v195.origin.CGFloat y = v48;
              v195.size.width = v49;
              v195.size.height = v50;
              CGRectGetHeight(v195);
              double v53 = v51 + v52;
              CGFloat v54 = *(double *)v46;
              CGFloat v55 = *(double *)(v46 + 8);
              CGFloat v56 = *(double *)(v46 + 16);
              CGFloat v57 = *(double *)(v46 + 24);
              v196.origin.CGFloat x = *(CGFloat *)v46;
              v196.origin.CGFloat y = v55;
              v196.size.width = v56;
              v196.size.height = v57;
              double v58 = CGRectGetMinX(v196);
              v197.origin.CGFloat x = v54;
              v197.origin.CGFloat y = v55;
              v197.size.width = v56;
              v197.size.height = v57;
              CGRectGetMaxY(v197);
              v198.origin.CGFloat x = v54;
              v198.origin.CGFloat y = v55;
              v198.size.width = v56;
              v198.size.height = v57;
              CGRectGetWidth(v198);
              v199.origin.CGFloat x = v54;
              v199.origin.CGFloat y = v55;
              v199.size.width = v56;
              v199.size.height = v57;
              CGRectGetHeight(v199);
              v200.origin.CGFloat x = v54;
              v200.origin.CGFloat y = v55;
              v200.size.width = v56;
              v200.size.height = v57;
              CGRectGetMinX(v200);
              v201.origin.CGFloat x = v54;
              v201.origin.CGFloat y = v55;
              v201.size.width = v56;
              v201.size.height = v57;
              double v59 = 1.0 - CGRectGetMaxY(v201);
              v202.origin.CGFloat x = v54;
              v202.origin.CGFloat y = v55;
              v202.size.width = v56;
              v202.size.height = v57;
              CGRectGetWidth(v202);
              v203.origin.CGFloat x = v54;
              v203.origin.CGFloat y = v55;
              v203.size.width = v56;
              v203.size.height = v57;
              CGRectGetHeight(v203);
              sub_1DCFA3450(v46, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCFA3450(v45, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if (v44 == v53 >= v58 + v59) {
                break;
              }
              ++v22;
              v43 += v171;
              uint64_t v12 = v168;
              if (v168 == v22)
              {
                uint64_t v22 = v168;
                a1 = v169;
                uint64_t v19 = v161;
                goto LABEL_23;
              }
            }
            uint64_t v19 = v161;
            uint64_t v12 = v168;
            a1 = v169;
          }
LABEL_23:
          if (v165 < v160)
          {
            if (v22 < v19) {
              goto LABEL_140;
            }
            if (v19 < v22)
            {
              uint64_t v158 = v2;
              uint64_t v60 = 0;
              uint64_t v61 = v171;
              uint64_t v62 = v171 * (v22 - 1);
              uint64_t v63 = v22 * v171;
              uint64_t v64 = v19 * v171;
              do
              {
                if (v19 != v22 + v60 - 1)
                {
                  uint64_t v66 = v22;
                  uint64_t v67 = v156;
                  if (!v156) {
                    goto LABEL_145;
                  }
                  unint64_t v68 = v156 + v64;
                  *(void *)&double v165 = v156 + v62;
                  sub_1DCFA33E8(v156 + v64, v159, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v64 < v62 || v68 >= v67 + v63)
                  {
                    uint64_t v65 = *(void *)&v165;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    uint64_t v65 = *(void *)&v165;
                    if (v64 != v62) {
                      swift_arrayInitWithTakeBackToFront();
                    }
                  }
                  sub_1DCFA33E8(v159, v65, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  uint64_t v22 = v66;
                  uint64_t v61 = v171;
                }
                ++v19;
                --v60;
                v62 -= v61;
                v63 -= v61;
                v64 += v61;
              }
              while (v19 < v22 + v60);
              uint64_t v2 = v158;
              uint64_t v12 = v168;
              a1 = v169;
              uint64_t v19 = v161;
            }
          }
        }
        if (v22 < v12)
        {
          if (__OFSUB__(v22, v19)) {
            goto LABEL_138;
          }
          if (v22 - v19 < v155)
          {
            if (__OFADD__(v19, v155)) {
              goto LABEL_141;
            }
            if (v19 + v155 >= v12) {
              double v69 = *(double *)&v12;
            }
            else {
              *(void *)&double v69 = v19 + v155;
            }
            if (*(uint64_t *)&v69 < v19)
            {
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              break;
            }
            if (v22 != *(void *)&v69)
            {
              unint64_t v157 = v20;
              uint64_t v158 = v2;
              double v70 = *(double *)(v163 + 72);
              uint64_t v171 = *(void *)&v70 * (v22 - 1);
              double v165 = v70;
              uint64_t v71 = v22 * *(void *)&v70;
              double v160 = v69;
              do
              {
                uint64_t v73 = 0;
                uint64_t v168 = v22;
                while (1)
                {
                  CGFloat v74 = v169;
                  uint64_t v75 = *v169;
                  uint64_t v76 = v71;
                  uint64_t v77 = v71 + v73 + *v169;
                  uint64_t v78 = v166;
                  sub_1DCDC9968(v77, v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  uint64_t v79 = v171 + v73 + v75;
                  uint64_t v80 = v167;
                  sub_1DCDC9968(v79, v167, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  CGFloat v81 = *(double *)v78;
                  CGFloat v82 = *(double *)(v78 + 8);
                  CGFloat v83 = *(double *)(v78 + 16);
                  CGFloat v84 = *(double *)(v78 + 24);
                  v204.origin.CGFloat x = *(CGFloat *)v78;
                  v204.origin.CGFloat y = v82;
                  v204.size.width = v83;
                  v204.size.height = v84;
                  double v85 = CGRectGetMinX(v204);
                  v205.origin.CGFloat x = v81;
                  v205.origin.CGFloat y = v82;
                  v205.size.width = v83;
                  v205.size.height = v84;
                  CGRectGetMaxY(v205);
                  v206.origin.CGFloat x = v81;
                  v206.origin.CGFloat y = v82;
                  v206.size.width = v83;
                  v206.size.height = v84;
                  CGRectGetWidth(v206);
                  v207.origin.CGFloat x = v81;
                  v207.origin.CGFloat y = v82;
                  v207.size.width = v83;
                  v207.size.height = v84;
                  CGRectGetHeight(v207);
                  v208.origin.CGFloat x = v81;
                  v208.origin.CGFloat y = v82;
                  v208.size.width = v83;
                  v208.size.height = v84;
                  CGRectGetMinX(v208);
                  v209.origin.CGFloat x = v81;
                  v209.origin.CGFloat y = v82;
                  v209.size.width = v83;
                  v209.size.height = v84;
                  double v86 = 1.0 - CGRectGetMaxY(v209);
                  v210.origin.CGFloat x = v81;
                  v210.origin.CGFloat y = v82;
                  v210.size.width = v83;
                  v210.size.height = v84;
                  CGRectGetWidth(v210);
                  v211.origin.CGFloat x = v81;
                  v211.origin.CGFloat y = v82;
                  v211.size.width = v83;
                  v211.size.height = v84;
                  CGRectGetHeight(v211);
                  double v87 = v85 + v86;
                  CGFloat v88 = *(double *)v80;
                  CGFloat v89 = *(double *)(v80 + 8);
                  CGFloat v90 = *(double *)(v80 + 16);
                  CGFloat v91 = *(double *)(v80 + 24);
                  v212.origin.CGFloat x = *(CGFloat *)v80;
                  v212.origin.CGFloat y = v89;
                  v212.size.width = v90;
                  v212.size.height = v91;
                  double v92 = CGRectGetMinX(v212);
                  v213.origin.CGFloat x = v88;
                  v213.origin.CGFloat y = v89;
                  v213.size.width = v90;
                  v213.size.height = v91;
                  CGRectGetMaxY(v213);
                  v214.origin.CGFloat x = v88;
                  v214.origin.CGFloat y = v89;
                  v214.size.width = v90;
                  v214.size.height = v91;
                  CGRectGetWidth(v214);
                  v215.origin.CGFloat x = v88;
                  v215.origin.CGFloat y = v89;
                  v215.size.width = v90;
                  v215.size.height = v91;
                  CGRectGetHeight(v215);
                  v216.origin.CGFloat x = v88;
                  v216.origin.CGFloat y = v89;
                  v216.size.width = v90;
                  v216.size.height = v91;
                  CGRectGetMinX(v216);
                  v217.origin.CGFloat x = v88;
                  v217.origin.CGFloat y = v89;
                  v217.size.width = v90;
                  v217.size.height = v91;
                  double v93 = 1.0 - CGRectGetMaxY(v217);
                  v218.origin.CGFloat x = v88;
                  v218.origin.CGFloat y = v89;
                  v218.size.width = v90;
                  v218.size.height = v91;
                  CGRectGetWidth(v218);
                  v219.origin.CGFloat x = v88;
                  v219.origin.CGFloat y = v89;
                  v219.size.width = v90;
                  v219.size.height = v91;
                  CGRectGetHeight(v219);
                  sub_1DCFA3450(v80, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1DCFA3450(v78, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v87 >= v92 + v93) {
                    break;
                  }
                  uint64_t v94 = *v74;
                  if (!*v74) {
                    goto LABEL_143;
                  }
                  uint64_t v71 = v76;
                  uint64_t v95 = v94 + v171 + v73;
                  sub_1DCFA33E8(v94 + v76 + v73, v170, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  swift_arrayInitWithTakeFrontToBack();
                  sub_1DCFA33E8(v170, v95, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  v73 -= *(void *)&v165;
                  ++v19;
                  uint64_t v72 = v168;
                  if (v168 == v19) {
                    goto LABEL_48;
                  }
                }
                uint64_t v72 = v168;
                uint64_t v71 = v76;
LABEL_48:
                uint64_t v22 = v72 + 1;
                v171 += *(void *)&v165;
                v71 += *(void *)&v165;
                uint64_t v19 = v161;
              }
              while (v22 != *(void *)&v160);
              uint64_t v22 = *(void *)&v160;
              uint64_t v2 = v158;
              a1 = v169;
              char v20 = v157;
            }
          }
        }
        if (v22 < v19) {
          goto LABEL_133;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v168 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          char v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v98 = *((void *)v20 + 2);
        unint64_t v97 = *((void *)v20 + 3);
        unint64_t v21 = v98 + 1;
        if (v98 >= v97 >> 1) {
          char v20 = sub_1DCD71FDC((char *)(v97 > 1), v98 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v21;
        uint64_t v99 = v20 + 32;
        uint64_t v100 = &v20[16 * v98 + 32];
        uint64_t v101 = v168;
        *(void *)uint64_t v100 = v19;
        *((void *)v100 + 1) = v101;
        if (v98)
        {
          while (1)
          {
            unint64_t v102 = v21 - 1;
            if (v21 >= 4)
            {
              uint64_t v107 = &v99[16 * v21];
              uint64_t v108 = *((void *)v107 - 8);
              uint64_t v109 = *((void *)v107 - 7);
              BOOL v113 = __OFSUB__(v109, v108);
              uint64_t v110 = v109 - v108;
              if (v113) {
                goto LABEL_122;
              }
              uint64_t v112 = *((void *)v107 - 6);
              uint64_t v111 = *((void *)v107 - 5);
              BOOL v113 = __OFSUB__(v111, v112);
              uint64_t v105 = v111 - v112;
              char v106 = v113;
              if (v113) {
                goto LABEL_123;
              }
              unint64_t v114 = v21 - 2;
              long long v115 = &v99[16 * v21 - 32];
              uint64_t v117 = *(void *)v115;
              uint64_t v116 = *((void *)v115 + 1);
              BOOL v113 = __OFSUB__(v116, v117);
              uint64_t v118 = v116 - v117;
              if (v113) {
                goto LABEL_125;
              }
              BOOL v113 = __OFADD__(v105, v118);
              uint64_t v119 = v105 + v118;
              if (v113) {
                goto LABEL_128;
              }
              if (v119 >= v110)
              {
                unint64_t v137 = &v99[16 * v102];
                uint64_t v139 = *(void *)v137;
                uint64_t v138 = *((void *)v137 + 1);
                BOOL v113 = __OFSUB__(v138, v139);
                uint64_t v140 = v138 - v139;
                if (v113) {
                  goto LABEL_132;
                }
                BOOL v130 = v105 < v140;
                goto LABEL_92;
              }
            }
            else
            {
              if (v21 != 3)
              {
                uint64_t v131 = *((void *)v20 + 4);
                uint64_t v132 = *((void *)v20 + 5);
                BOOL v113 = __OFSUB__(v132, v131);
                uint64_t v124 = v132 - v131;
                char v125 = v113;
                goto LABEL_86;
              }
              uint64_t v104 = *((void *)v20 + 4);
              uint64_t v103 = *((void *)v20 + 5);
              BOOL v113 = __OFSUB__(v103, v104);
              uint64_t v105 = v103 - v104;
              char v106 = v113;
            }
            if (v106) {
              goto LABEL_124;
            }
            unint64_t v114 = v21 - 2;
            float v120 = &v99[16 * v21 - 32];
            uint64_t v122 = *(void *)v120;
            uint64_t v121 = *((void *)v120 + 1);
            BOOL v123 = __OFSUB__(v121, v122);
            uint64_t v124 = v121 - v122;
            char v125 = v123;
            if (v123) {
              goto LABEL_127;
            }
            long long v126 = &v99[16 * v102];
            uint64_t v128 = *(void *)v126;
            uint64_t v127 = *((void *)v126 + 1);
            BOOL v113 = __OFSUB__(v127, v128);
            uint64_t v129 = v127 - v128;
            if (v113) {
              goto LABEL_130;
            }
            if (__OFADD__(v124, v129)) {
              goto LABEL_131;
            }
            if (v124 + v129 >= v105)
            {
              BOOL v130 = v105 < v129;
LABEL_92:
              if (v130) {
                unint64_t v102 = v114;
              }
              goto LABEL_94;
            }
LABEL_86:
            if (v125) {
              goto LABEL_126;
            }
            uint64_t v133 = &v99[16 * v102];
            uint64_t v135 = *(void *)v133;
            uint64_t v134 = *((void *)v133 + 1);
            BOOL v113 = __OFSUB__(v134, v135);
            uint64_t v136 = v134 - v135;
            if (v113) {
              goto LABEL_129;
            }
            if (v136 < v124) {
              goto LABEL_15;
            }
LABEL_94:
            unint64_t v141 = v102 - 1;
            if (v102 - 1 >= v21)
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
              goto LABEL_142;
            }
            uint64_t v142 = *a1;
            if (!*a1) {
              goto LABEL_144;
            }
            uint64_t v143 = &v99[16 * v141];
            uint64_t v144 = *(void *)v143;
            CGFloat v145 = &v99[16 * v102];
            uint64_t v146 = *((void *)v145 + 1);
            sub_1DCFA0DA0(v142 + *(void *)(v163 + 72) * *(void *)v143, v142 + *(void *)(v163 + 72) * *(void *)v145, v142 + *(void *)(v163 + 72) * v146, v162);
            if (v2)
            {
              uint64_t v18 = v154;
              goto LABEL_116;
            }
            if (v146 < v144) {
              goto LABEL_119;
            }
            if (v102 > *((void *)v20 + 2)) {
              goto LABEL_120;
            }
            *(void *)uint64_t v143 = v144;
            *(void *)&v99[16 * v141 + 8] = v146;
            unint64_t v147 = *((void *)v20 + 2);
            if (v102 >= v147) {
              goto LABEL_121;
            }
            unint64_t v21 = v147 - 1;
            memmove(&v99[16 * v102], v145 + 16, 16 * (v147 - 1 - v102));
            *((void *)v20 + 2) = v147 - 1;
            a1 = v169;
            if (v147 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v21 = 1;
LABEL_15:
        uint64_t v12 = a1[1];
        uint64_t v19 = v168;
        if (v168 >= v12)
        {
          uint64_t v18 = v154;
          if (v21 < 2)
          {
LABEL_116:
            swift_bridgeObjectRelease();
            *(void *)(v18 + 16) = 0;
            swift_bridgeObjectRelease();
            return;
          }
LABEL_104:
          uint64_t v148 = *a1;
          while (1)
          {
            unint64_t v149 = v21 - 2;
            if (v21 < 2) {
              goto LABEL_134;
            }
            if (!v148) {
              goto LABEL_146;
            }
            uint64_t v150 = *(void *)&v20[16 * v149 + 32];
            uint64_t v151 = *(void *)&v20[16 * v21 + 24];
            sub_1DCFA0DA0(v148 + *(void *)(v163 + 72) * v150, v148 + *(void *)(v163 + 72) * *(void *)&v20[16 * v21 + 16], v148 + *(void *)(v163 + 72) * v151, v162);
            if (v2) {
              goto LABEL_116;
            }
            if (v151 < v150) {
              goto LABEL_135;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v20 = sub_1DCD729EC((uint64_t)v20);
            }
            if (v149 >= *((void *)v20 + 2)) {
              goto LABEL_136;
            }
            uint64_t v152 = &v20[16 * v149 + 32];
            *(void *)uint64_t v152 = v150;
            *((void *)v152 + 1) = v151;
            unint64_t v153 = *((void *)v20 + 2);
            if (v21 > v153) {
              goto LABEL_137;
            }
            memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v153 - v21));
            *((void *)v20 + 2) = v153 - 1;
            unint64_t v21 = v153 - 1;
            if (v153 <= 2) {
              goto LABEL_116;
            }
          }
        }
      }
    }
    sub_1DD048C98();
    __break(1u);
    return;
  }
  if (v12 < 0) {
    goto LABEL_139;
  }
  if (v12) {
    sub_1DCFA06A4(0, v12, 1, a1);
  }
}

void sub_1DCF9FBF4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCFA0AE0(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      char v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCFA1560(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  char v20 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCDC9968(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCDC9968(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 72);
    float v29 = *(float *)(v27 + 72);
    sub_1DCFA3450(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCFA3450(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v29 >= v28) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCFA33E8(v128 + v60, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCFA33E8(v129, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        char v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCDC9968(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCDC9968(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v36 + 72) >= *(float *)(v35 + 72);
      sub_1DCFA3450(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFA3450(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v29 < v28 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        char v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    char v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v29 < v28) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      char v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v67 = v20 + 32;
    unint64_t v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)unint64_t v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          CGFloat v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        CGFloat v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        unint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCFA1560(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        char v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          BOOL v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCDC9968(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCDC9968(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 72);
          float v52 = *(float *)(v50 + 72);
          sub_1DCFA3450(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFA3450(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v52 >= v51) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCFA33E8(v53 + v46 + v42, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCFA33E8(v139, v54, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      char v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCFA06A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v37 = a1;
  uint64_t v38 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v38);
  uint64_t v41 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (double *)((char *)&v35 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (double *)((char *)&v35 - v13);
  uint64_t v40 = a3;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v43 = v15 * (v40 - 1);
    uint64_t v39 = v15;
    uint64_t v42 = v15 * v40;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v37;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCDC9968(v42 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCDC9968(v43 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      CGFloat v20 = *v14;
      CGFloat v21 = v14[1];
      CGFloat v22 = v14[2];
      CGFloat v23 = v14[3];
      v44.origin.CGFloat x = *v14;
      v44.origin.CGFloat y = v21;
      v44.size.width = v22;
      v44.size.height = v23;
      double MinX = CGRectGetMinX(v44);
      v45.origin.CGFloat x = v20;
      v45.origin.CGFloat y = v21;
      v45.size.width = v22;
      v45.size.height = v23;
      CGRectGetMaxY(v45);
      v46.origin.CGFloat x = v20;
      v46.origin.CGFloat y = v21;
      v46.size.width = v22;
      v46.size.height = v23;
      CGRectGetWidth(v46);
      v47.origin.CGFloat x = v20;
      v47.origin.CGFloat y = v21;
      v47.size.width = v22;
      v47.size.height = v23;
      CGRectGetHeight(v47);
      v48.origin.CGFloat x = v20;
      v48.origin.CGFloat y = v21;
      v48.size.width = v22;
      v48.size.height = v23;
      CGRectGetMinX(v48);
      v49.origin.CGFloat x = v20;
      v49.origin.CGFloat y = v21;
      v49.size.width = v22;
      v49.size.height = v23;
      double v25 = 1.0 - CGRectGetMaxY(v49);
      v50.origin.CGFloat x = v20;
      v50.origin.CGFloat y = v21;
      v50.size.width = v22;
      v50.size.height = v23;
      CGRectGetWidth(v50);
      v51.origin.CGFloat x = v20;
      v51.origin.CGFloat y = v21;
      v51.size.width = v22;
      v51.size.height = v23;
      CGRectGetHeight(v51);
      double v26 = MinX + v25;
      CGFloat v27 = *v10;
      CGFloat v28 = v10[1];
      CGFloat v29 = v10[2];
      CGFloat v30 = v10[3];
      v52.origin.CGFloat x = *v10;
      v52.origin.CGFloat y = v28;
      v52.size.width = v29;
      v52.size.height = v30;
      double v31 = CGRectGetMinX(v52);
      v53.origin.CGFloat x = v27;
      v53.origin.CGFloat y = v28;
      v53.size.width = v29;
      v53.size.height = v30;
      CGRectGetMaxY(v53);
      v54.origin.CGFloat x = v27;
      v54.origin.CGFloat y = v28;
      v54.size.width = v29;
      v54.size.height = v30;
      CGRectGetWidth(v54);
      v55.origin.CGFloat x = v27;
      v55.origin.CGFloat y = v28;
      v55.size.width = v29;
      v55.size.height = v30;
      CGRectGetHeight(v55);
      v56.origin.CGFloat x = v27;
      v56.origin.CGFloat y = v28;
      v56.size.width = v29;
      v56.size.height = v30;
      CGRectGetMinX(v56);
      v57.origin.CGFloat x = v27;
      v57.origin.CGFloat y = v28;
      v57.size.width = v29;
      v57.size.height = v30;
      double v32 = 1.0 - CGRectGetMaxY(v57);
      v58.origin.CGFloat x = v27;
      v58.origin.CGFloat y = v28;
      v58.size.width = v29;
      v58.size.height = v30;
      CGRectGetWidth(v58);
      v59.origin.CGFloat x = v27;
      v59.origin.CGFloat y = v28;
      v59.size.width = v29;
      v59.size.height = v30;
      CGRectGetHeight(v59);
      sub_1DCFA3450((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFA3450((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v26 >= v31 + v32)
      {
LABEL_4:
        v43 += v39;
        v42 += v39;
        if (++v40 == v36) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v33 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v34 = v33 + v43 + v16;
      sub_1DCFA33E8(v33 + v42 + v16, v41, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCFA33E8(v41, v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v39;
      ++v17;
      a4 = v19;
      if (v40 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_1DCFA0AE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCDC9968(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCDC9968(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[18];
      float v21 = v10[18];
      sub_1DCFA3450((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFA3450((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCFA33E8(v22 + v31 + v16, v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCFA33E8(v30, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCFA0DA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v59 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v59);
  uint64_t v9 = (double *)((char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (double *)((char *)&v57 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_60;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_61;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v62 = a1;
  unint64_t v61 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v38 = a4 + v19;
      unint64_t v60 = a4 + v19;
      unint64_t v62 = a2;
      unint64_t v58 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v40 = a3 - v14;
          sub_1DCDC9968(v38 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v41 = a2 - v14;
          sub_1DCDC9968(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          CGFloat v42 = *v12;
          CGFloat v43 = v12[1];
          CGFloat v44 = v12[2];
          CGFloat v45 = v12[3];
          v79.origin.CGFloat x = *v12;
          v79.origin.CGFloat y = v43;
          v79.size.width = v44;
          v79.size.height = v45;
          double MinX = CGRectGetMinX(v79);
          v80.origin.CGFloat x = v42;
          v80.origin.CGFloat y = v43;
          v80.size.width = v44;
          v80.size.height = v45;
          CGRectGetMaxY(v80);
          v81.origin.CGFloat x = v42;
          v81.origin.CGFloat y = v43;
          v81.size.width = v44;
          v81.size.height = v45;
          CGRectGetWidth(v81);
          v82.origin.CGFloat x = v42;
          v82.origin.CGFloat y = v43;
          v82.size.width = v44;
          v82.size.height = v45;
          CGRectGetHeight(v82);
          v83.origin.CGFloat x = v42;
          v83.origin.CGFloat y = v43;
          v83.size.width = v44;
          v83.size.height = v45;
          CGRectGetMinX(v83);
          v84.origin.CGFloat x = v42;
          v84.origin.CGFloat y = v43;
          v84.size.width = v44;
          v84.size.height = v45;
          double v47 = 1.0 - CGRectGetMaxY(v84);
          v85.origin.CGFloat x = v42;
          v85.origin.CGFloat y = v43;
          v85.size.width = v44;
          v85.size.height = v45;
          CGRectGetWidth(v85);
          v86.origin.CGFloat x = v42;
          v86.origin.CGFloat y = v43;
          v86.size.width = v44;
          v86.size.height = v45;
          CGRectGetHeight(v86);
          double v48 = MinX + v47;
          CGFloat v49 = *v9;
          CGFloat v50 = v9[1];
          CGFloat v51 = v9[2];
          CGFloat v52 = v9[3];
          v87.origin.CGFloat x = *v9;
          v87.origin.CGFloat y = v50;
          v87.size.width = v51;
          v87.size.height = v52;
          double v53 = CGRectGetMinX(v87);
          v88.origin.CGFloat x = v49;
          v88.origin.CGFloat y = v50;
          v88.size.width = v51;
          v88.size.height = v52;
          CGRectGetMaxY(v88);
          v89.origin.CGFloat x = v49;
          v89.origin.CGFloat y = v50;
          v89.size.width = v51;
          v89.size.height = v52;
          CGRectGetWidth(v89);
          v90.origin.CGFloat x = v49;
          v90.origin.CGFloat y = v50;
          v90.size.width = v51;
          v90.size.height = v52;
          CGRectGetHeight(v90);
          v91.origin.CGFloat x = v49;
          v91.origin.CGFloat y = v50;
          v91.size.width = v51;
          v91.size.height = v52;
          CGRectGetMinX(v91);
          v92.origin.CGFloat x = v49;
          v92.origin.CGFloat y = v50;
          v92.size.width = v51;
          v92.size.height = v52;
          double v54 = 1.0 - CGRectGetMaxY(v92);
          v93.origin.CGFloat x = v49;
          v93.origin.CGFloat y = v50;
          v93.size.width = v51;
          v93.size.height = v52;
          CGRectGetWidth(v93);
          v94.origin.CGFloat x = v49;
          v94.origin.CGFloat y = v50;
          v94.size.width = v51;
          v94.size.height = v52;
          CGRectGetHeight(v94);
          sub_1DCFA3450((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFA3450((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v48 >= v53 + v54)
          {
            unint64_t v55 = v60;
            v60 -= v14;
            if (a3 < v55 || v40 >= v55)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v55)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v41 = a2;
          }
          else
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v62 -= v14;
          }
          unint64_t v38 = v60;
          if (v60 <= a4) {
            break;
          }
          a2 = v41;
          a3 -= v14;
        }
        while (v41 > v58);
      }
      goto LABEL_58;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v60 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCDC9968(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCDC9968(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        CGFloat v22 = *v12;
        CGFloat v23 = v12[1];
        CGFloat v24 = v12[2];
        CGFloat v25 = v12[3];
        v63.origin.CGFloat x = *v12;
        v63.origin.CGFloat y = v23;
        v63.size.width = v24;
        v63.size.height = v25;
        double v26 = CGRectGetMinX(v63);
        v64.origin.CGFloat x = v22;
        v64.origin.CGFloat y = v23;
        v64.size.width = v24;
        v64.size.height = v25;
        CGRectGetMaxY(v64);
        v65.origin.CGFloat x = v22;
        v65.origin.CGFloat y = v23;
        v65.size.width = v24;
        v65.size.height = v25;
        CGRectGetWidth(v65);
        v66.origin.CGFloat x = v22;
        v66.origin.CGFloat y = v23;
        v66.size.width = v24;
        v66.size.height = v25;
        CGRectGetHeight(v66);
        v67.origin.CGFloat x = v22;
        v67.origin.CGFloat y = v23;
        v67.size.width = v24;
        v67.size.height = v25;
        CGRectGetMinX(v67);
        v68.origin.CGFloat x = v22;
        v68.origin.CGFloat y = v23;
        v68.size.width = v24;
        v68.size.height = v25;
        double v27 = 1.0 - CGRectGetMaxY(v68);
        v69.origin.CGFloat x = v22;
        v69.origin.CGFloat y = v23;
        v69.size.width = v24;
        v69.size.height = v25;
        CGRectGetWidth(v69);
        v70.origin.CGFloat x = v22;
        v70.origin.CGFloat y = v23;
        v70.size.width = v24;
        v70.size.height = v25;
        CGRectGetHeight(v70);
        double v28 = v26 + v27;
        CGFloat v29 = *v9;
        CGFloat v30 = v9[1];
        CGFloat v31 = v9[2];
        CGFloat v32 = v9[3];
        v71.origin.CGFloat x = *v9;
        v71.origin.CGFloat y = v30;
        v71.size.width = v31;
        v71.size.height = v32;
        double v33 = CGRectGetMinX(v71);
        v72.origin.CGFloat x = v29;
        v72.origin.CGFloat y = v30;
        v72.size.width = v31;
        v72.size.height = v32;
        CGRectGetMaxY(v72);
        v73.origin.CGFloat x = v29;
        v73.origin.CGFloat y = v30;
        v73.size.width = v31;
        v73.size.height = v32;
        CGRectGetWidth(v73);
        v74.origin.CGFloat x = v29;
        v74.origin.CGFloat y = v30;
        v74.size.width = v31;
        v74.size.height = v32;
        CGRectGetHeight(v74);
        v75.origin.CGFloat x = v29;
        v75.origin.CGFloat y = v30;
        v75.size.width = v31;
        v75.size.height = v32;
        CGRectGetMinX(v75);
        v76.origin.CGFloat x = v29;
        v76.origin.CGFloat y = v30;
        v76.size.width = v31;
        v76.size.height = v32;
        double v34 = 1.0 - CGRectGetMaxY(v76);
        v77.origin.CGFloat x = v29;
        v77.origin.CGFloat y = v30;
        v77.size.width = v31;
        v77.size.height = v32;
        CGRectGetWidth(v77);
        v78.origin.CGFloat x = v29;
        v78.origin.CGFloat y = v30;
        v78.size.width = v31;
        v78.size.height = v32;
        CGRectGetHeight(v78);
        sub_1DCFA3450((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFA3450((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v35 = v62;
        if (v28 >= v33 + v34)
        {
          unint64_t v37 = v61 + v14;
          if (v62 < v61 || v62 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v62 != v61)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v61 = v37;
          unint64_t v36 = a2;
        }
        else
        {
          unint64_t v36 = a2 + v14;
          if (v62 < a2 || v62 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v62 == a2)
          {
            unint64_t v35 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v62 = v35 + v14;
        a4 = v61;
        if (v61 >= v20) {
          break;
        }
        a2 = v36;
      }
      while (v36 < a3);
    }
LABEL_58:
    sub_1DCD720D8(&v62, &v61, (uint64_t *)&v60);
    return 1;
  }
LABEL_62:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFA1560(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCDC9968(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCDC9968(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[18];
          float v34 = v9[18];
          sub_1DCFA3450((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFA3450((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCDC9968(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCDC9968(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[18];
        float v23 = v9[18];
        sub_1DCFA3450((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFA3450((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFA1A34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v18[1] = v3;
    uint64_t v19 = a2 + v10;
    unint64_t v20 = *(void *)(a2 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    unint64_t v13 = MEMORY[0x1E4FBC860];
    while (1)
    {
      unint64_t v14 = *(void *)(a1 + 8 * v12 + 32);
      if (v14 >= v20) {
        break;
      }
      uint64_t v15 = *(void *)(v7 + 72);
      sub_1DCDC9968(v19 + v15 * v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v13 = sub_1DCE9D7A0(0, *(void *)(v13 + 16) + 1, 1, v13);
      }
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1) {
        unint64_t v13 = sub_1DCE9D7A0(v16 > 1, v17 + 1, 1, v13);
      }
      ++v12;
      *(void *)(v13 + 16) = v17 + 1;
      uint64_t result = sub_1DCFA33E8((uint64_t)v9, v13 + v10 + v17 * v15, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 == v12)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1DCFA1C30(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0 && a2)
  {
    swift_bridgeObjectRetain();
    sub_1DCF9A804(&v3);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1DCF9A8AC(&v3);
  }
}

uint64_t sub_1DCFA1C98(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  CGRect v86 = (void *)sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v78 = v3;
  uint64_t v79 = a1;
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 72;
    do
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_1DCFDE93C(v5);
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v8 = v2 + 32;
    uint64_t v87 = v2;
    uint64_t v84 = v2 + 32;
    while (1)
    {
      if (v7 >= *(void *)(v2 + 16)) {
        goto LABEL_101;
      }
      uint64_t v9 = *(void *)(v8 + 24 * v7 + 16);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10) {
        break;
      }
LABEL_9:
      if (++v7 == v6) {
        goto LABEL_36;
      }
    }
    uint64_t v12 = *(void *)(v9 + 32);
    uint64_t v11 = *(void *)(v9 + 40);
    float v13 = *(float *)(v9 + 48);
    uint64_t v14 = v10 - 1;
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      if (v86[2])
      {
LABEL_14:
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_1DCEAD1A4(v12, v11);
        float v16 = 0.0;
        if (v17) {
          float v16 = *(float *)(v86[7] + 4 * v15);
        }
        swift_bridgeObjectRelease();
LABEL_23:
        if (v13 <= v16) {
          float v13 = v16;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v24 = sub_1DCEAD1A4(v12, v11);
        uint64_t v25 = v86[2];
        BOOL v26 = (v23 & 1) == 0;
        uint64_t v27 = v25 + v26;
        if (__OFADD__(v25, v26)) {
          goto LABEL_102;
        }
        char v28 = v23;
        if (v86[3] < v27)
        {
          sub_1DCE7E984(v27, isUniquelyReferenced_nonNull_native);
          unint64_t v29 = sub_1DCEAD1A4(v12, v11);
          if ((v28 & 1) != (v30 & 1)) {
            goto LABEL_105;
          }
          unint64_t v24 = v29;
          if ((v28 & 1) == 0) {
            goto LABEL_32;
          }
LABEL_7:
          *(float *)(v86[7] + 4 * v24) = v13;
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v23) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_1DCE88D74();
          if (v28) {
            goto LABEL_7;
          }
        }
LABEL_32:
        v86[(v24 >> 6) + 8] |= 1 << v24;
        unint64_t v31 = (uint64_t *)(v86[6] + 16 * v24);
        *unint64_t v31 = v12;
        v31[1] = v11;
        *(float *)(v86[7] + 4 * v24) = v13;
        uint64_t v32 = v86[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_103;
        }
        v86[2] = v34;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v18 = v6;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = (_DWORD *)(v9 + 72);
      uint64_t v20 = v11;
      do
      {
        float v21 = *(float *)v19;
        if (v13 < *(float *)v19)
        {
          uint64_t v12 = *((void *)v19 - 2);
          uint64_t v20 = *((void *)v19 - 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          float v13 = v21;
        }
        v19 += 6;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v11 = v20;
      uint64_t v6 = v18;
      uint64_t v2 = v87;
      uint64_t v8 = v84;
      if (v86[2]) {
        goto LABEL_14;
      }
    }
    float v16 = 0.0;
    goto LABEL_23;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  unint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v36 = v78;
  if (!v78)
  {
    uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_96;
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = 0;
  uint64_t v38 = v35;
  while (2)
  {
    CGRect v83 = v38;
    uint64_t v39 = v79 + 32 + 48 * v37;
    long long v81 = *(_OWORD *)(v39 + 16);
    long long v82 = *(_OWORD *)v39;
    uint64_t v40 = *(void *)(v39 + 40);
    uint64_t v41 = *(void *)(v40 + 16);
    long long v85 = *(_OWORD *)(v39 + 32);
    if (!v41)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = v35[2];
      swift_bridgeObjectRelease();
      if (v70)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t v38 = v83;
        goto LABEL_40;
      }
LABEL_83:
      uint64_t v38 = v83;
      goto LABEL_84;
    }
    uint64_t v80 = v37;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v42 = 48;
    uint64_t v43 = v41;
    CGFloat v44 = v35;
    do
    {
      uint64_t v45 = *(void *)(v40 + v42);
      uint64_t v46 = *(void *)(v45 + 16);
      int64_t v47 = v44[2];
      int64_t v48 = v47 + v46;
      if (__OFADD__(v47, v46))
      {
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        sub_1DD048D18();
        __break(1u);
LABEL_105:
        uint64_t result = sub_1DD049028();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      CGFloat v49 = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (v49 && v48 <= v44[3] >> 1)
      {
        if (!*(void *)(v45 + 16)) {
          goto LABEL_43;
        }
      }
      else
      {
        if (v47 <= v48) {
          int64_t v50 = v47 + v46;
        }
        else {
          int64_t v50 = v47;
        }
        CGFloat v44 = sub_1DCE9E814(v49, v50, 1, v44);
        if (!*(void *)(v45 + 16))
        {
LABEL_43:
          if (v46) {
            goto LABEL_98;
          }
          goto LABEL_44;
        }
      }
      uint64_t v51 = v44[2];
      if ((v44[3] >> 1) - v51 < v46) {
        goto LABEL_99;
      }
      unint64_t v52 = (unint64_t)&v44[3 * v51 + 4];
      if (v45 + 32 < v52 + 24 * v46 && v52 < v45 + 32 + 24 * v46) {
        goto LABEL_104;
      }
      swift_arrayInitWithCopy();
      if (v46)
      {
        uint64_t v54 = v44[2];
        BOOL v33 = __OFADD__(v54, v46);
        uint64_t v55 = v54 + v46;
        if (v33) {
          goto LABEL_100;
        }
        v44[2] = v55;
      }
LABEL_44:
      swift_bridgeObjectRelease();
      v42 += 24;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease_n();
    uint64_t v56 = v44[2];
    swift_bridgeObjectRelease();
    if (!v56)
    {
      uint64_t v36 = v78;
      uint64_t v37 = v80;
      goto LABEL_83;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v57 = 0;
    while (2)
    {
      uint64_t v59 = *(void *)(v40 + 32 + 24 * v57 + 16);
      uint64_t v60 = *(void *)(v59 + 16);
      if (!v60) {
        goto LABEL_68;
      }
      uint64_t v61 = *(void *)(v59 + 32);
      uint64_t v62 = *(void *)(v59 + 40);
      float v63 = *(float *)(v59 + 48);
      swift_bridgeObjectRetain();
      uint64_t v64 = v60 - 1;
      if (v60 == 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CGRect v65 = (_DWORD *)(v59 + 72);
        uint64_t v66 = v62;
        do
        {
          float v67 = *(float *)v65;
          if (v63 < *(float *)v65)
          {
            uint64_t v61 = *((void *)v65 - 2);
            uint64_t v66 = *((void *)v65 - 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            float v63 = v67;
          }
          v65 += 6;
          --v64;
        }
        while (v64);
        swift_bridgeObjectRelease_n();
        uint64_t v62 = v66;
      }
      if (!v86[2]) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      unint64_t v68 = sub_1DCEAD1A4(v61, v62);
      if ((v69 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_68:
        if (++v57 == v41)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v36 = v78;
          uint64_t v37 = v80;
          goto LABEL_39;
        }
        continue;
      }
      break;
    }
    float v58 = *(float *)(v86[7] + 4 * v68);
    swift_bridgeObjectRelease();
    if (v63 != v58)
    {
LABEL_66:
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    swift_bridgeObjectRetain();
    unint64_t v74 = sub_1DCEAD1A4(v61, v62);
    char v76 = v75;
    swift_bridgeObjectRelease();
    if (v76)
    {
      uint64_t v37 = v80;
      uint64_t v38 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1DCE88D74();
      }
      swift_bridgeObjectRelease();
      sub_1DCFDCA14(v74, (uint64_t)v86);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v78;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = v78;
      uint64_t v37 = v80;
      uint64_t v38 = v83;
    }
LABEL_84:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v38 = sub_1DCE9DAF0(0, v38[2] + 1, 1, v38);
    }
    unint64_t v72 = v38[2];
    unint64_t v71 = v38[3];
    if (v72 >= v71 >> 1) {
      uint64_t v38 = sub_1DCE9DAF0((void *)(v71 > 1), v72 + 1, 1, v38);
    }
    v38[2] = v72 + 1;
    CGRect v73 = &v38[6 * v72];
    v73[2] = v82;
    v73[3] = v81;
    v73[4] = v85;
LABEL_40:
    ++v37;
    unint64_t v35 = (void *)MEMORY[0x1E4FBC860];
    if (v37 != v36) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_96:
  swift_bridgeObjectRelease();
  return (uint64_t)v38;
}

unint64_t sub_1DCFA24DC(uint64_t a1, void *a2, unsigned __int8 *a3)
{
  uint64_t v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v97 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v102 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v108 = (unint64_t *)((char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v107 = (uint64_t *)((char *)&v97 - v19);
  uint64_t v111 = *a3;
  unint64_t v20 = *(void *)(a1 + 16);
  uint64_t v106 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v105 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v103 = a1;
  swift_bridgeObjectRetain();
  unint64_t v21 = v20;
  unint64_t v22 = 0;
  unint64_t v110 = MEMORY[0x1E4FBC860];
  uint64_t v101 = v12;
  uint64_t v100 = v13;
  unint64_t v104 = v20;
  uint64_t v97 = a2;
  uint64_t v99 = v7;
  BOOL v98 = v9;
  BOOL v23 = v20 == 0;
  if (!v20) {
    goto LABEL_4;
  }
LABEL_2:
  if (v23)
  {
LABEL_134:
    __break(1u);
    JUMPOUT(0x1DCFA3318);
  }
  uint64_t v24 = (uint64_t)&v102[*(int *)(v13 + 48)];
  sub_1DCDC9968(v103+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v22, v24, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v25 = (uint64_t)v108;
  uint64_t v26 = (uint64_t)v108 + *(int *)(v13 + 48);
  *uint64_t v108 = v22;
  sub_1DCFA33E8(v24, v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v27 = 0;
  unint64_t v28 = v22 + 1;
  while (1)
  {
    (*v106)(v25, v27, 1, v13);
    unint64_t v29 = v107;
    sub_1DCD43B04(v25, (uint64_t)v107, &qword_1EBE868C0);
    if ((*v105)(v29, 1, v13) == 1) {
      break;
    }
    unint64_t v109 = v28;
    uint64_t v30 = *v29;
    sub_1DCFA33E8((uint64_t)v29 + *(int *)(v13 + 48), (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v31 = a2[2];
    if (!v31) {
      goto LABEL_120;
    }
    if (a2[4] == v30) {
      goto LABEL_10;
    }
    if (v31 == 1) {
      goto LABEL_120;
    }
    if (a2[5] == v30)
    {
LABEL_10:
      uint64_t v32 = *((void *)v12 + 6);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v34 = v33 - 1;
        uint64_t v35 = 32;
        uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v37 = *(_OWORD *)(v32 + v35);
          *(_OWORD *)&v116[16] = *(_OWORD *)(v32 + v35 + 16);
          *(_OWORD *)unint64_t v116 = v37;
          long long v38 = *(_OWORD *)(v32 + v35 + 32);
          long long v39 = *(_OWORD *)(v32 + v35 + 48);
          long long v40 = *(_OWORD *)(v32 + v35 + 80);
          long long v118 = *(_OWORD *)(v32 + v35 + 64);
          long long v119 = v40;
          *(_OWORD *)&v116[32] = v38;
          long long v117 = v39;
          long long v41 = *(_OWORD *)(v32 + v35 + 96);
          long long v42 = *(_OWORD *)(v32 + v35 + 112);
          long long v43 = *(_OWORD *)(v32 + v35 + 128);
          *(_OWORD *)&v122[13] = *(_OWORD *)(v32 + v35 + 141);
          long long v121 = v42;
          *(_OWORD *)uint64_t v122 = v43;
          long long v120 = v41;
          char v44 = v116[0];
          unint64_t v45 = 0xE300000000000000;
          uint64_t v46 = 7631457;
          switch(v116[0])
          {
            case 1:
              unint64_t v45 = 0xE600000000000000;
              uint64_t v46 = 0x65727574616ELL;
              break;
            case 2:
              unint64_t v45 = 0xE800000000000000;
              uint64_t v46 = 0x6B72616D646E616CLL;
              break;
            case 3:
              uint64_t v46 = 0x4C6C61727574616ELL;
              unint64_t v45 = 0xEF6B72616D646E61;
              break;
            case 4:
              unint64_t v45 = 0xE500000000000000;
              uint64_t v46 = 0x616964656DLL;
              break;
            case 5:
              unint64_t v45 = 0xE400000000000000;
              uint64_t v46 = 1802465122;
              break;
            case 6:
              unint64_t v45 = 0xE500000000000000;
              uint64_t v46 = 0x6D75626C61;
              break;
            case 7:
              unint64_t v45 = 0xE400000000000000;
              uint64_t v46 = 1937006947;
              break;
            case 8:
              unint64_t v45 = 0xE400000000000000;
              uint64_t v46 = 1936158564;
              break;
            case 9:
              unint64_t v45 = 0xE700000000000000;
              unsigned int v47 = 1835626081;
              goto LABEL_26;
            case 0xA:
              unint64_t v45 = 0xE500000000000000;
              uint64_t v46 = 0x7364726962;
              break;
            case 0xB:
              unint64_t v45 = 0xE700000000000000;
              uint64_t v46 = 0x73746365736E69;
              break;
            case 0xC:
              unint64_t v45 = 0xE800000000000000;
              uint64_t v46 = 0x73656C6974706572;
              break;
            case 0xD:
              unint64_t v45 = 0xE700000000000000;
              unsigned int v47 = 1835884909;
LABEL_26:
              uint64_t v46 = v47 | 0x736C6100000000;
              break;
            case 0xE:
              unint64_t v45 = 0xE700000000000000;
              uint64_t v46 = 0x6C657261707061;
              break;
            case 0xF:
              uint64_t v46 = 0x726F737365636361;
              unint64_t v45 = 0xEB00000000736569;
              break;
            case 0x10:
              unint64_t v45 = 0xE400000000000000;
              uint64_t v46 = 1685024614;
              break;
            case 0x11:
              unint64_t v45 = 0xEA0000000000746ELL;
              uint64_t v46 = 0x6F726665726F7473;
              break;
            case 0x12:
              unsigned int v48 = 1852270963;
              goto LABEL_34;
            case 0x13:
              unint64_t v45 = 0x80000001DD066AB0;
              uint64_t v46 = 0xD000000000000011;
              break;
            case 0x14:
              unsigned int v48 = 1869903201;
LABEL_34:
              uint64_t v46 = v48 | 0x626D795300000000;
              unint64_t v45 = 0xEA00000000006C6FLL;
              break;
            case 0x15:
              uint64_t v46 = 0x676F4C646E617262;
              unint64_t v45 = 0xEF6C6F626D79536FLL;
              break;
            case 0x16:
              unint64_t v45 = 0xE700000000000000;
              uint64_t v46 = 0x65646F63726162;
              break;
            case 0x17:
              uint64_t v46 = 0x727574706C756373;
              unint64_t v45 = 0xE900000000000065;
              break;
            case 0x18:
              unint64_t v45 = 0xE700000000000000;
              uint64_t v46 = 0x656E696C796B73;
              break;
            case 0x19:
              unint64_t v45 = 0xE800000000000000;
              uint64_t v46 = 0x44327463656A626FLL;
              break;
            default:
              break;
          }
          unint64_t v49 = 0xE300000000000000;
          uint64_t v50 = 7631457;
          switch(v111)
          {
            case 1:
              unint64_t v49 = 0xE600000000000000;
              if (v46 == 0x65727574616ELL) {
                goto LABEL_89;
              }
              goto LABEL_92;
            case 2:
              unint64_t v49 = 0xE800000000000000;
              if (v46 != 0x6B72616D646E616CLL) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 3:
              unint64_t v49 = 0xEF6B72616D646E61;
              if (v46 != 0x4C6C61727574616ELL) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 4:
              unint64_t v49 = 0xE500000000000000;
              if (v46 != 0x616964656DLL) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 5:
              unint64_t v49 = 0xE400000000000000;
              if (v46 != 1802465122) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 6:
              unint64_t v49 = 0xE500000000000000;
              if (v46 != 0x6D75626C61) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 7:
              unint64_t v49 = 0xE400000000000000;
              if (v46 != 1937006947) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 8:
              unint64_t v49 = 0xE400000000000000;
              if (v46 != 1936158564) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 9:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v51 = 1835626081;
              goto LABEL_64;
            case 10:
              unint64_t v49 = 0xE500000000000000;
              if (v46 != 0x7364726962) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 11:
              unint64_t v49 = 0xE700000000000000;
              unint64_t v52 = 0x746365736E69;
              goto LABEL_65;
            case 12:
              unint64_t v49 = 0xE800000000000000;
              if (v46 != 0x73656C6974706572) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 13:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v51 = 1835884909;
LABEL_64:
              unint64_t v52 = v51 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_65:
              if (v46 != (v52 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 14:
              unint64_t v49 = 0xE700000000000000;
              if (v46 != 0x6C657261707061) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 15:
              unint64_t v49 = 0xEB00000000736569;
              if (v46 != 0x726F737365636361) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 16:
              unint64_t v49 = 0xE400000000000000;
              if (v46 != 1685024614) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 17:
              unint64_t v49 = 0xEA0000000000746ELL;
              if (v46 != 0x6F726665726F7473) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 18:
              unsigned int v53 = 1852270963;
              goto LABEL_79;
            case 19:
              unint64_t v49 = 0x80000001DD066AB0;
              if (v46 != 0xD000000000000011) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 20:
              unsigned int v53 = 1869903201;
LABEL_79:
              unint64_t v49 = 0xEA00000000006C6FLL;
              if (v46 != (v53 | 0x626D795300000000)) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 21:
              unint64_t v49 = 0xEF6C6F626D79536FLL;
              if (v46 != 0x676F4C646E617262) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 22:
              unint64_t v49 = 0xE700000000000000;
              if (v46 != 0x65646F63726162) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 23:
              unint64_t v49 = 0xE900000000000065;
              if (v46 != 0x727574706C756373) {
                goto LABEL_92;
              }
              goto LABEL_89;
            case 24:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x656E696C796B73;
              goto LABEL_88;
            case 25:
              unint64_t v49 = 0xE800000000000000;
              if (v46 != 0x44327463656A626FLL) {
                goto LABEL_92;
              }
              goto LABEL_89;
            default:
LABEL_88:
              if (v46 != v50) {
                goto LABEL_92;
              }
LABEL_89:
              if (v45 == v49) {
                char v54 = 1;
              }
              else {
LABEL_92:
              }
                char v54 = sub_1DD048FA8();
              char v55 = BYTE12(v121);
              sub_1DCD32CC8((uint64_t)v116);
              sub_1DCD32CC8((uint64_t)v116);
              sub_1DCD32CC8((uint64_t)v116);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1DCD32DD4((uint64_t)v116);
              sub_1DCD32DD4((uint64_t)v116);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v36 = sub_1DCE9D680(0, v36[2] + 1, 1, v36);
              }
              unint64_t v57 = v36[2];
              unint64_t v56 = v36[3];
              if (v57 >= v56 >> 1) {
                uint64_t v36 = sub_1DCE9D680((void *)(v56 > 1), v57 + 1, 1, v36);
              }
              char v58 = v122[28];
              int v59 = *(_DWORD *)&v122[24];
              char v60 = v122[1];
              char v61 = v122[0];
              char v62 = HIBYTE(v121);
              char v63 = BYTE14(v121);
              char v64 = BYTE13(v121);
              int v65 = DWORD2(v121);
              char v66 = v116[40];
              float v67 = &v36[20 * v57];
              uint64_t v68 = v121;
              long long v69 = *(_OWORD *)&v116[24];
              long long v70 = v117;
              long long v71 = v118;
              long long v72 = v119;
              long long v73 = v120;
              long long v74 = *(_OWORD *)&v122[8];
              long long v75 = *(_OWORD *)&v116[8];
              v36[2] = v57 + 1;
              *((unsigned char *)v67 + 32) = v44;
              int v76 = *(_DWORD *)&v115[3];
              *(_DWORD *)((char *)v67 + 33) = *(_DWORD *)v115;
              *((_DWORD *)v67 + 9) = v76;
              *(_OWORD *)(v67 + 5) = v75;
              *(_OWORD *)(v67 + 7) = v69;
              *((unsigned char *)v67 + 72) = v66;
              int v77 = *(_DWORD *)&v114[3];
              *(_DWORD *)((char *)v67 + 73) = *(_DWORD *)v114;
              *((_DWORD *)v67 + 19) = v77;
              *((_OWORD *)v67 + 5) = v70;
              *((_OWORD *)v67 + 6) = v71;
              *((_OWORD *)v67 + 7) = v72;
              *((_OWORD *)v67 + 8) = v73;
              v67[18] = v68;
              *((_DWORD *)v67 + 38) = v65;
              *((unsigned char *)v67 + 156) = (v54 ^ 1) & v55 & 1;
              *((unsigned char *)v67 + 157) = v64;
              *((unsigned char *)v67 + 158) = v63;
              *((unsigned char *)v67 + 159) = v62;
              *((unsigned char *)v67 + 160) = v61;
              *((unsigned char *)v67 + 161) = v60;
              int v78 = v112;
              *((_WORD *)v67 + 83) = v113;
              *(_DWORD *)((char *)v67 + 162) = v78;
              *(_OWORD *)(v67 + 21) = v74;
              *((_DWORD *)v67 + 46) = v59;
              *((unsigned char *)v67 + 188) = v58;
              if (!v34)
              {
                swift_bridgeObjectRelease_n();
                a2 = v97;
                uint64_t v12 = v101;
                uint64_t v13 = v100;
                goto LABEL_101;
              }
              --v34;
              v35 += 160;
              break;
          }
        }
      }
      uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
LABEL_101:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v12 + 6) = v36;
      uint64_t v79 = v36[2];
      if (v79)
      {
        swift_bridgeObjectRetain();
        uint64_t v80 = sub_1DCE9D9E0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v81 = *((void *)v80 + 2);
        long long v82 = (float *)v36 + 39;
        do
        {
          if (*(unsigned char *)v82) {
            float v83 = *(v82 - 3);
          }
          else {
            float v83 = 0.0;
          }
          unint64_t v84 = *((void *)v80 + 3);
          if (v81 >= v84 >> 1) {
            uint64_t v80 = sub_1DCE9D9E0((char *)(v84 > 1), v81 + 1, 1, v80);
          }
          *((void *)v80 + 2) = v81 + 1;
          *(float *)&v80[4 * v81 + 32] = v83;
          v82 += 40;
          ++v81;
          --v79;
        }
        while (v79);
        swift_bridgeObjectRelease();
        uint64_t v12 = v101;
        uint64_t v13 = v100;
      }
      else
      {
        uint64_t v80 = (char *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      uint64_t v85 = *((void *)v80 + 2);
      uint64_t v7 = v99;
      uint64_t v9 = v98;
      if (v85)
      {
        float v86 = *((float *)v80 + 8);
        uint64_t v87 = v85 - 1;
        if (v87)
        {
          CGRect v88 = (float *)(v80 + 36);
          do
          {
            float v89 = *v88++;
            float v90 = v89;
            if (v86 < v89) {
              float v86 = v90;
            }
            --v87;
          }
          while (v87);
        }
      }
      else
      {
        float v86 = 0.0;
      }
      swift_bridgeObjectRelease();
      *((float *)v12 + 18) = v86;
    }
    else if (v31 != 2)
    {
      uint64_t v94 = 6;
      while (1)
      {
        uint64_t v95 = v94 - 3;
        if (__OFADD__(v94 - 4, 1)) {
          break;
        }
        if (a2[v94] == v30) {
          goto LABEL_10;
        }
        ++v94;
        if (v95 == v31) {
          goto LABEL_120;
        }
      }
      __break(1u);
      goto LABEL_134;
    }
LABEL_120:
    sub_1DCDC9968((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v110 = sub_1DCE9D7A0(0, *(void *)(v110 + 16) + 1, 1, v110);
    }
    unint64_t v92 = *(void *)(v110 + 16);
    unint64_t v91 = *(void *)(v110 + 24);
    if (v92 >= v91 >> 1) {
      unint64_t v110 = sub_1DCE9D7A0(v91 > 1, v92 + 1, 1, v110);
    }
    unint64_t v93 = v110;
    *(void *)(v110 + 16) = v92 + 1;
    sub_1DCFA33E8((uint64_t)v9, v93+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v92, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCFA3450((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v21 = v104;
    unint64_t v22 = v109;
    BOOL v23 = v109 >= v104;
    if (v109 != v104) {
      goto LABEL_2;
    }
LABEL_4:
    uint64_t v27 = 1;
    unint64_t v28 = v21;
    uint64_t v25 = (uint64_t)v108;
  }
  swift_bridgeObjectRelease();
  return v110;
}

uint64_t sub_1DCFA33E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFA3450(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCFA34B0(uint64_t a1)
{
  uint64_t v20 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DCE9E328(0, v8[2] + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DCE9E328((void *)(v17 > 1), v18 + 1, 1, v8);
      uint64_t v8 = (void *)result;
    }
    v8[2] = v18 + 1;
    uint64_t v19 = &v8[2 * v18];
    v19[4] = v15;
    v19[5] = v16;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v20 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v20 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v20 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v5)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v8;
  }
  unint64_t v12 = *(void *)(v20 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1DCFA36AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo;
  uint64_t result = sub_1DCFE5704(*(void *)(a1 + 128), v4 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo, 0x6972656767697274, 0xEA0000000000676ELL, 0x74696E676F636572, 0xEB000000006E6F69);
  if (!v5)
  {
    uint64_t v15 = result;
    uint64_t v27 = a4;
    int v26 = *(unsigned __int8 *)(v4 + 16);
    sub_1DCD56CC8(v13, (uint64_t)v12);
    uint64_t v28 = a2;
    if (v15)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_1DCFA34B0(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
    }
    v25[1] = type metadata accessor for DomainModelRequestFactory();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    sub_1DCD8190C(a1, (uint64_t)v30);
    uint64_t v18 = swift_allocObject();
    long long v19 = v30[7];
    *(_OWORD *)(v18 + 136) = v30[6];
    *(_OWORD *)(v18 + 152) = v19;
    *(_OWORD *)(v18 + 168) = v30[8];
    long long v20 = v30[3];
    *(_OWORD *)(v18 + 72) = v30[2];
    *(_OWORD *)(v18 + 88) = v20;
    long long v21 = v30[5];
    *(_OWORD *)(v18 + 104) = v30[4];
    *(_OWORD *)(v18 + 120) = v21;
    long long v22 = v30[1];
    *(_OWORD *)(v18 + 40) = v30[0];
    *(void *)(v18 + 16) = v28;
    *(void *)(v18 + 24) = a3;
    *(void *)(v18 + 32) = v17;
    uint64_t v23 = v31;
    *(_OWORD *)(v18 + 56) = v22;
    *(void *)(v18 + 184) = v23;
    *(void *)(v18 + 192) = v15;
    uint64_t v24 = *(void *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1DCF3B26C(v24);
    sub_1DCFE2DE4((uint64_t)v29);
    if (v26)
    {
      if (v26 == 1) {
        sub_1DCFE4EA0(a1, (uint64_t)v29, 2, v32, (uint64_t)sub_1DCFA4434, v18, v27);
      }
      else {
        sub_1DCFE531C(a1, (uint64_t)v29, 2, (uint64_t)sub_1DCFA4434, v18, v27);
      }
    }
    else
    {
      sub_1DCFE4BD4((double *)a1, (uint64_t)v29, (uint64_t)v12, 2, (uint64_t)sub_1DCFA4434, v18, v27);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    sub_1DCD59AB4((uint64_t)v12);
    swift_release();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DCFA39EC(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCE95BF4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    id v9 = v16[0];
    id v11 = v16[0];
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = v17;
    id v10 = v16[0];
    a2(&v11);
  }
  else
  {
    sub_1DCD3A4DC((long long *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCFA3AEC(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

uint64_t sub_1DCFA3AEC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void **))
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  sub_1DCD25CD8(*(unsigned __int8 *)(v8 + *(int *)(v9 + 32)), v26);
  uint64_t v10 = *(void *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v26, v10);
  swift_release();
  sub_1DCFA3C98(a1, a2, a3, (uint64_t)&v19);
  long long v12 = v19;
  uint64_t v11 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v25 = 0;
  sub_1DCD43350(v19, v20, v21, v22, v23, v24, 0);
  a4(&v19);
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  sub_1DCEA3DA4();
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  return swift_release();
}

uint64_t sub_1DCFA3C98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v39 = a2;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  if (!v4)
  {
    uint64_t v17 = result;
    uint64_t v18 = v40;
    uint64_t v37 = v7;
    uint64_t v38 = v8;
    uint64_t v19 = v39;
    if (*(void *)(*(void *)(result + 24) + 16) == 1)
    {
      uint64_t v20 = a4;
      sub_1DCD56CC8(v41 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo, (uint64_t)v13);
      if (v18 && *(void *)(v18 + 16))
      {
        sub_1DCEAD1A4(0x6E69646465626D65, 0xE900000000000067);
        if (v21) {
          swift_bridgeObjectRetain();
        }
      }
      uint64_t v28 = sub_1DCFE2268(v17, 0x6E69646465626D65, 0xE900000000000067);
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      sub_1DCD59AB4((uint64_t)v13);
      swift_bridgeObjectRelease();
      long long v41 = *(_OWORD *)(v19 + 72);
      uint64_t v33 = *(void *)(v19 + 88);
      uint64_t v34 = *(void *)(v19 + 96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1DD04E910;
      *(void *)(v35 + 32) = v28;
      *(void *)(v35 + 40) = v30;
      *(void *)(v35 + 48) = v32;
      uint64_t result = swift_release();
      *(_OWORD *)uint64_t v20 = v41;
      *(void *)(v20 + 16) = v33;
      *(void *)(v20 + 24) = v34;
      uint64_t v36 = MEMORY[0x1E4FBC860];
      *(void *)(v20 + 32) = v35;
      *(void *)(v20 + 40) = v36;
    }
    else
    {
      sub_1DCDB40EC((uint64_t)v10);
      uint64_t v22 = sub_1DD048048();
      os_log_type_t v23 = sub_1DD048858();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 134217984;
        uint64_t v42 = 1;
        sub_1DD048A28();
        _os_log_impl(&dword_1DCCF9000, v22, v23, "Apparel model expected %ld outputs", v24, 0xCu);
        MEMORY[0x1E01B07E0](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v37);
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      uint64_t v42 = 0x6E69746365707845;
      unint64_t v43 = 0xEA00000000002067;
      uint64_t v44 = 1;
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      sub_1DD048548();
      uint64_t v25 = v42;
      unint64_t v26 = v43;
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v27 = v25;
      *(void *)(v27 + 8) = v26;
      *(unsigned char *)(v27 + 16) = 4;
      swift_willThrow();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DCFA40C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo;
  uint64_t v5 = (uint64_t *)(v4 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 64;
    do
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1DCFDE7E0(v11);
      v10 += 48;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v8 = v16;
  }
  uint64_t v12 = *(void *)(v8 + 16);
  if (v12)
  {
    uint64_t v13 = (void *)(v8 + 48);
    while (1)
    {
      BOOL v14 = *(v13 - 1) == v6 && *v13 == v7;
      if (v14 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      v13 += 3;
      if (!--v12) {
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1DCFA41C8()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCFA4218()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCFA429C()
{
  return type metadata accessor for ApparelModelFactory();
}

uint64_t type metadata accessor for ApparelModelFactory()
{
  uint64_t result = qword_1EBE85848;
  if (!qword_1EBE85848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCFA42F0()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCFA439C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCFA43D4()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

void sub_1DCFA4434(uint64_t a1)
{
  sub_1DCFA39EC(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 192));
}

uint64_t sub_1DCFA4448(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a1;
  *(unsigned char *)(a3 + 16) = *a1;
  sub_1DCD56CC8(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_modelInfo);
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for ApparelClassificationPostProcessor();
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_postProcessor) = sub_1DCD6D270((uint64_t)v8);
  char v13 = v9;
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  uint64_t v10 = sub_1DCF3D39C(&v13, (uint64_t)v8, 16, 0, 0, 0);
  sub_1DCD59AB4(a2);
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19ApparelModelFactory_coreMLModelProvider) = v10;
  return a3;
}

uint64_t sub_1DCFA4588(unint64_t a1)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_1DD048C58();
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1E01AE890](v3, a1);
LABEL_7:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_12;
        }
        sub_1DCFA526C(v3);

        sub_1DD048C38();
        sub_1DD048C68();
        sub_1DD048C78();
        sub_1DD048C48();
        ++v3;
        if (v6 == v2) {
          goto LABEL_14;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1DD048CC8();
      if (!v2) {
        goto LABEL_14;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1DCFA46D4(unint64_t a1)
{
  sub_1DD048C58();
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1DD048CC8();
  if (!v2) {
    goto LABEL_15;
  }
LABEL_3:
  unint64_t v3 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v4 = (id)MEMORY[0x1E01AE890](v3, a1);
    }
    else
    {
      if (v3 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      id v4 = *(id *)(a1 + 8 * v3 + 32);
    }
    uint64_t v5 = v4;
    unint64_t v6 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_13;
    }
    id v7 = objc_allocWithZone(MEMORY[0x1E4F9A360]);
    sub_1DCD95648(0, (unint64_t *)&qword_1EAB032F8);
    id v8 = v5;
    char v9 = (void *)sub_1DD0486A8();
    uint64_t v10 = (void *)sub_1DD0486A8();
    id v11 = objc_msgSend(v7, sel_initWithResult_hiddenResults_duplicateResults_localResultPosition_, v8, v9, v10, v3);

    if (!v11) {
      break;
    }

    sub_1DD048C38();
    sub_1DD048C68();
    sub_1DD048C78();
    sub_1DD048C48();
    ++v3;
    if (v6 == v2) {
      goto LABEL_15;
    }
  }
  __break(1u);
}

id sub_1DCFA48B8(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = VisualUnderstanding.ImageRegion.domainInfo.getter();
    if (*(void *)(v2 + 16))
    {
      long long v3 = *(_OWORD *)(v2 + 144);
      long long v35 = *(_OWORD *)(v2 + 128);
      long long v36 = v3;
      v37[0] = *(_OWORD *)(v2 + 160);
      *(_OWORD *)((char *)v37 + 13) = *(_OWORD *)(v2 + 173);
      long long v4 = *(_OWORD *)(v2 + 80);
      long long v31 = *(_OWORD *)(v2 + 64);
      long long v32 = v4;
      long long v5 = *(_OWORD *)(v2 + 112);
      long long v33 = *(_OWORD *)(v2 + 96);
      long long v34 = v5;
      long long v6 = *(_OWORD *)(v2 + 48);
      long long v29 = *(_OWORD *)(v2 + 32);
      long long v30 = v6;
      sub_1DCD32CC8((uint64_t)&v29);
      swift_bridgeObjectRelease();
      long long v26 = v35;
      long long v27 = v36;
      *(_OWORD *)uint64_t v28 = v37[0];
      *(_OWORD *)&v28[13] = *(_OWORD *)((char *)v37 + 13);
      long long v22 = v31;
      long long v23 = v32;
      long long v24 = v33;
      long long v25 = v34;
      long long v21 = v30;
      sub_1DCFA4C60();
      uint64_t v19 = sub_1DD048408();
      uint64_t v20 = v7;
      swift_bridgeObjectRetain();
      sub_1DD048548();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)&v29);
      uint64_t v8 = v20;
      goto LABEL_6;
    }

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = 0;
LABEL_6:
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9A3C8]), sel_init);
  objc_msgSend(v9, sel_setType_, 16);
  if (v8)
  {
    uint64_t v10 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  objc_msgSend(v9, sel_setSuggestion_, v10, v19, v20, v21, v22, v23, v24, v25, v26, v27, *(_OWORD *)v28, *(void *)&v28[16], *(void *)&v28[24]);

  type metadata accessor for VisualUnderstanding.ImageRegion();
  sub_1DD046578();
  id v11 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setIdentifier_, v11);

  uint64_t v12 = VisualUnderstanding.ImageRegion.domainInfo.getter();
  if (*(void *)(v12 + 16))
  {
    long long v13 = *(_OWORD *)(v12 + 144);
    long long v35 = *(_OWORD *)(v12 + 128);
    long long v36 = v13;
    v37[0] = *(_OWORD *)(v12 + 160);
    *(_OWORD *)((char *)v37 + 13) = *(_OWORD *)(v12 + 173);
    long long v14 = *(_OWORD *)(v12 + 80);
    long long v31 = *(_OWORD *)(v12 + 64);
    long long v32 = v14;
    long long v15 = *(_OWORD *)(v12 + 112);
    long long v33 = *(_OWORD *)(v12 + 96);
    long long v34 = v15;
    long long v16 = *(_OWORD *)(v12 + 48);
    long long v29 = *(_OWORD *)(v12 + 32);
    long long v30 = v16;
    sub_1DCD32CC8((uint64_t)&v29);
    swift_bridgeObjectRelease();
    sub_1DCFA4D84();
    sub_1DCD32DD4((uint64_t)&v29);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setTopicIdentifier_, v17);

  return v9;
}

uint64_t sub_1DCFA4B9C()
{
  if (qword_1EAB01FE0 != -1) {
    swift_once();
  }
  id v1 = (id *)off_1EAB04100;
  uint64_t v2 = (os_unfair_lock_s *)((char *)off_1EAB04100 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_1EAB04100 + 6);
  id v3 = objc_msgSend(v1[2], sel_objectForKey_, v0);
  if (v3)
  {
    sub_1DD0483F8();
  }
  os_unfair_lock_unlock(v2);
  return 0;
}

uint64_t sub_1DCFA4C60()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int v2 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v3 = sub_1DD048408();
  uint64_t v5 = v4;
  if (v3 == sub_1DD048408() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    if (v1) {
      int v11 = v2;
    }
    else {
      int v11 = 0;
    }
    if (v11 == 1) {
      goto LABEL_15;
    }
    return 0;
  }
  int v8 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & v2) != 1 || v1 == 0) {
    return 0;
  }
LABEL_15:
  sub_1DD048B98();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, ":dynamicGlyph:");
  sub_1DD048548();
  return v12[0];
}

uint64_t sub_1DCFA4D84()
{
  char v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 88);
  if (*(void *)(v0 + 144))
  {
    uint64_t v4 = sub_1DCD9C35C(v1);
    sub_1DD048548();
    if (v2) {
      swift_bridgeObjectRetain();
    }
    sub_1DD048548();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DD048548();
  }
  else
  {
    uint64_t v4 = sub_1DCD9C35C(v1);
    sub_1DD048548();
    if (v2) {
      swift_bridgeObjectRetain();
    }
    sub_1DD048548();
    swift_bridgeObjectRelease();
  }
  return v4;
}

id sub_1DCFA4E88(void *a1)
{
  uint64_t v3 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  id v6 = sub_1DCFA48B8(a1);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9A490]), sel_initWithSuggestion_, v6);
  if (result)
  {
    int v8 = result;
    sub_1DCD36E7C(v1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v10 = swift_allocObject();
    sub_1DCFA664C((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    aBlock[4] = sub_1DCFA63C0;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DCFA5054;
    aBlock[3] = &block_descriptor_14;
    int v11 = _Block_copy(aBlock);
    id v12 = v8;
    swift_release();
    objc_msgSend(v12, sel_setVI_searchSuggestionFactory_, v11);
    _Block_release(v11);

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1DCFA5054(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

void *sub_1DCFA50BC()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t sub_1DCFA50E4()
{
  return *(unsigned __int8 *)(v0 + 40);
}

id sub_1DCFA50EC()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t sub_1DCFA5114()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (id *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCFA65E4(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1DCFA664C((uint64_t)v7, (uint64_t)v4, type metadata accessor for VisualSearchResultInternal);
    uint64_t v9 = *((void *)v4 + 23);
    if (*(void *)(v9 + 16))
    {
      uint64_t v8 = *(void *)(v9 + 72);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    sub_1DCFA66B4((uint64_t)v4, type metadata accessor for VisualSearchResultInternal);
  }
  return v8;
}

void sub_1DCFA526C(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_bundleIdentifier);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DD048408();
    uint64_t v7 = v6;

    if (v5 == 0xD00000000000001BLL && v7 == 0x80000001DD06B420)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v9 = 0x1E4F9A0F0uLL;
      uint64_t v10 = sub_1DCFA658C;
      goto LABEL_13;
    }
    char v8 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
  }
  id v11 = objc_msgSend(v1, sel_bundleIdentifier);
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = sub_1DD048408();
    uint64_t v15 = v14;

    if (v13 == 0xD000000000000020 && v15 == 0x80000001DD06B440)
    {
      swift_bridgeObjectRelease();
LABEL_12:
      uint64_t v9 = 0x1E4F9A120uLL;
      uint64_t v10 = sub_1DCFA65B8;
LABEL_13:
      sub_1DCFA5500(v9, v10);
      if ((a1 & 0x8000000000000000) == 0) {
        goto LABEL_14;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    char v16 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_12;
    }
  }
  id v21 = objc_msgSend(v1, sel_results);
  if (!v21)
  {
LABEL_20:
    __break(1u);
    return;
  }
  long long v22 = v21;
  sub_1DCD95648(0, (unint64_t *)&qword_1EAB032F8);
  unint64_t v23 = sub_1DD0486B8();

  sub_1DCFA46D4(v23);
  swift_bridgeObjectRelease();
  if (a1 < 0) {
    goto LABEL_18;
  }
LABEL_14:
  id v17 = objc_allocWithZone(MEMORY[0x1E4F9A3F0]);
  sub_1DCD95648(0, &qword_1EAB04698);
  id v18 = v1;
  uint64_t v19 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithResults_section_localSectionPosition_personalizationScore_, v19, v18, a1, 0.0);

  if (!v20)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_1DCFA5500(uint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  id v6 = objc_msgSend(v2, sel_results);
  if (!v6)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = v6;
  sub_1DCD95648(0, (unint64_t *)&qword_1EAB032F8);
  unint64_t v8 = sub_1DD0486B8();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v9 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_26;
    }
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x1E01AE890](0, v8);
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    id v10 = *(id *)(v8 + 32);
  }
  uint64_t v9 = v10;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_inlineCard);
  if (!v11)
  {
LABEL_30:
    __break(1u);
    return;
  }
  id v12 = v11;
  id v4 = &selRef_parseCameraFrameWithVisualQuery_completion_;
  id v13 = objc_msgSend(v11, sel_cardSections);

  if (!v13)
  {
LABEL_18:

    return;
  }
  sub_1DCD95648(0, &qword_1EAB02EC8);
  unint64_t v3 = sub_1DD0486B8();

  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_25:

LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_11:
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v14 = *(id *)(v3 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_29;
  }
  id v14 = (id)MEMORY[0x1E01AE890](0, v3);
LABEL_14:
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  self;
  char v16 = (void *)swift_dynamicCastObjCClass();
  if (!v16)
  {

    goto LABEL_18;
  }
  id v17 = [v16 v4[396]];
  if (v17)
  {
    id v18 = v17;
    unint64_t v19 = sub_1DD0486B8();

    MEMORY[0x1F4188790](v20);
    sub_1DCFA5CF8(v19, a2);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1DCFA57D0(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, Class *a6)
{
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9A3C0]), sel_init);
  objc_msgSend(v11, sel_setType_, objc_msgSend(a3, sel_type));
  id v12 = objc_msgSend(a3, sel_resultBundleId);
  objc_msgSend(v11, sel_setResultBundleId_, v12);

  id v13 = objc_msgSend(a2, sel_resultIdentifier);
  objc_msgSend(v11, sel_setIdentifier_, v13);

  id v14 = (void *)sub_1DD0483D8();
  objc_msgSend(v11, sel_setSectionBundleIdentifier_, v14);

  self;
  if (swift_dynamicCastObjCClass())
  {
    id v15 = a2;
    sub_1DCFA4B9C();
    if (v16)
    {
      uint64_t v17 = sub_1DD0483D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setFbr_, v17);

      id v15 = (id)v17;
    }
  }
  uint64_t v42 = a1;
  id v18 = objc_msgSend(objc_allocWithZone(*a6), sel_init);
  id v19 = objc_msgSend(a4, sel_cardSectionId);
  objc_msgSend(v18, sel_setCardSectionId_, v19);

  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F99F28]), sel_init);
  id v21 = objc_msgSend(a2, sel_cardSectionId);
  objc_msgSend(v20, sel_setCardSectionId_, v21);

  id v22 = objc_msgSend(a2, sel_resultIdentifier);
  objc_msgSend(v20, sel_setResultIdentifier_, v22);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1DD050EE0;
  *(void *)(v23 + 32) = v20;
  sub_1DD0486D8();
  sub_1DCD95648(0, &qword_1EAB02EC8);
  id v24 = v20;
  long long v25 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setCardSections_, v25);

  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F99F20]), sel_init);
  objc_msgSend(v11, sel_setInlineCard_, v26);

  id v27 = objc_msgSend(v11, sel_inlineCard);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DD050EE0;
    *(void *)(v29 + 32) = v18;
    sub_1DD0486D8();
    id v30 = v18;
    long long v31 = (void *)sub_1DD0486A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setCardSections_, v31);

    self;
    uint64_t v32 = swift_dynamicCastObjCClass();
    if (v32)
    {
      uint64_t v33 = v32;
      if (qword_1EAB01FE0 != -1) {
        swift_once();
      }
      long long v34 = (id *)off_1EAB04100;
      long long v35 = (os_unfair_lock_s *)((char *)off_1EAB04100 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)off_1EAB04100 + 6);
      objc_msgSend(v34[2], sel_removeObjectForKey_, v33);
      os_unfair_lock_unlock(v35);
    }
    if (v42 < 0) {
      goto LABEL_15;
    }
    id v36 = objc_allocWithZone(MEMORY[0x1E4F9A360]);
    sub_1DCD95648(0, (unint64_t *)&qword_1EAB032F8);
    id v37 = v11;
    uint64_t v38 = (void *)sub_1DD0486A8();
    uint64_t v39 = (void *)sub_1DD0486A8();
    id v40 = objc_msgSend(v36, sel_initWithResult_hiddenResults_duplicateResults_localResultPosition_, v37, v38, v39, v42);

    if (v40)
    {

      return (uint64_t)v40;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCFA5CF8(unint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1DD048CC8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1E01AE890](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v9 = a2(i - 4, v6);

      if (v9)
      {
        MEMORY[0x1E01AE350]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1DCFA5E78(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a2[9];
  v48[8] = a2[8];
  long long v49 = v9;
  long long v50 = a2[10];
  uint64_t v51 = *((void *)a2 + 22);
  long long v10 = a2[5];
  v48[4] = a2[4];
  v48[5] = v10;
  long long v11 = a2[7];
  v48[6] = a2[6];
  v48[7] = v11;
  long long v12 = a2[1];
  v48[0] = *a2;
  v48[1] = v12;
  long long v13 = a2[3];
  _OWORD v48[2] = a2[2];
  v48[3] = v13;
  if (a1)
  {
    id v32 = objc_msgSend(a1, sel_queryID);
    id v14 = objc_msgSend(a1, sel_applicationIdentifier);
    if (v14)
    {
      id v15 = v14;
      uint64_t v33 = sub_1DD048408();
      unint64_t v34 = v16;

      goto LABEL_7;
    }
    uint64_t v33 = 0;
  }
  else
  {
    id v32 = 0;
    uint64_t v33 = 0;
  }
  unint64_t v34 = 0xE000000000000000;
LABEL_7:
  id v35 = objc_msgSend(a1, sel_engagementSuggestionType, v32);
  long long v17 = a2[9];
  long long v44 = a2[8];
  long long v45 = v17;
  long long v46 = a2[10];
  uint64_t v47 = *((void *)a2 + 22);
  long long v18 = a2[5];
  long long v40 = a2[4];
  long long v41 = v18;
  long long v19 = a2[7];
  long long v42 = a2[6];
  long long v43 = v19;
  long long v20 = a2[1];
  long long v36 = *a2;
  long long v37 = v20;
  long long v21 = a2[3];
  long long v38 = a2[2];
  long long v39 = v21;
  uint64_t v22 = sub_1DCF22DA4();
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v25 = *(void *)(v24 - 8);
  if (v23)
  {
    sub_1DCD36E7C(v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), (uint64_t)v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v8, 1, 1, v24);
  }
  id v26 = v32;
  uint64_t v27 = v33;
  swift_bridgeObjectRelease();
  type metadata accessor for VisualUnderstanding.ImageRegion();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v24) == 1)
  {
    sub_1DCD2479C((uint64_t)v8, &qword_1EBE855F0);

    sub_1DCD43B94((uint64_t)v48);
    id v28 = 0;
    id v29 = v35;
  }
  else
  {
    id v29 = v35;
    id v28 = sub_1DCFA4E88(v35);
    sub_1DCFA66B4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v49;
    id v31 = v28;
    objc_msgSend(v31, sel_setQueryId_, v30);

    sub_1DCD43B94((uint64_t)v48);
  }
  *(void *)a3 = v26;
  *(void *)(a3 + 8) = v27;
  *(void *)(a3 + 16) = v34;
  *(void *)(a3 + 24) = v29;
  *(void *)(a3 + 32) = v28;
  *(unsigned char *)(a3 + 40) = 0;
}

void sub_1DCFA6178(id a1@<X0>, uint64_t a2@<X8>)
{
  id v2 = a1;
  if (!a1)
  {
    id v4 = 0;
LABEL_6:
    unint64_t v8 = 0xE000000000000000;
    goto LABEL_7;
  }
  id v4 = objc_msgSend(a1, sel_queryID);
  id v5 = objc_msgSend(v2, sel_applicationIdentifier);
  if (!v5)
  {
    id v2 = 0;
    goto LABEL_6;
  }
  uint64_t v6 = v5;
  id v2 = (id)sub_1DD048408();
  unint64_t v8 = v7;

LABEL_7:
  id v9 = objc_allocWithZone(MEMORY[0x1E4F9A450]);
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v9, sel_initWithInput_triggerEvent_queryId_, 0, 8, v4);
  long long v11 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setOriginatingApp_, v11);

  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = 0;
}

uint64_t sub_1DCFA6288()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v4;
  swift_bridgeObjectRelease();
  uint64_t v7 = v5 + *(int *)(v1 + 60);
  uint64_t v8 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v2 | 7);
}

id sub_1DCFA63C0(void *a1)
{
  return sub_1DCFA48B8(a1);
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_1DCFA643C@<X0>(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  if (!a1)
  {
    uint64_t v9 = 0;
    id v6 = 0;
LABEL_6:
    unint64_t v11 = 0xE000000000000000;
    goto LABEL_7;
  }
  id v6 = objc_msgSend(a1, sel_queryID);
  id v7 = objc_msgSend(a1, sel_applicationIdentifier);
  if (!v7)
  {
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1DD048408();
  unint64_t v11 = v10;

LABEL_7:
  unint64_t v12 = sub_1DCFA5114();
  sub_1DCFA4588(v12);
  swift_bridgeObjectRelease();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F9A318]);
  sub_1DCD95648(0, &qword_1EAB04690);
  id v14 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithSections_blendingDuration_, v14, 0.0);

  uint64_t result = sub_1DCD2479C(a2, (uint64_t *)&unk_1EAB03DC0);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v11;
  *(void *)(a3 + 24) = v15;
  *(unsigned char *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_1DCFA658C(uint64_t a1, void *a2)
{
  return sub_1DCFA57D0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), 0x1E4F9A530, (Class *)0x1E4F9A0F0);
}

uint64_t sub_1DCFA65B8(uint64_t a1, void *a2)
{
  return sub_1DCFA57D0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), 0x1E4F9A040, (Class *)0x1E4F9A120);
}

uint64_t sub_1DCFA65E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCFA664C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFA66B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ResultEvent()
{
  return &type metadata for ResultEvent;
}

ValueMetadata *type metadata accessor for LocalSearchEndEvent()
{
  return &type metadata for LocalSearchEndEvent;
}

ValueMetadata *type metadata accessor for LocalSearchStartEvent()
{
  return &type metadata for LocalSearchStartEvent;
}

void destroy for EngagedRegionOfInterestEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for EngagedRegionOfInterestEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for EngagedRegionOfInterestEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for EngagedRegionOfInterestEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagedRegionOfInterestEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EngagedRegionOfInterestEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagedRegionOfInterestEvent()
{
  return &type metadata for EngagedRegionOfInterestEvent;
}

uint64_t sub_1DCFA6980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1DD0480A8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (id *)((char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v7 = MEMORY[0x1F4188790](v6);
  id v9 = (char *)v24 - v8;
  uint64_t v10 = MEMORY[0x1E01ADD50](v7);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v25 = v3;
    uint64_t v26 = a1;
    id v13 = *(void (**)(id *, char *, uint64_t))(v3 + 16);
    uint64_t v12 = v3 + 16;
    id v32 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64);
    v24[1] = v10;
    unint64_t v15 = v10 + v14;
    int v16 = *MEMORY[0x1E4F1E818];
    id v29 = (void (**)(id *, uint64_t))(v12 + 80);
    uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
    uint64_t v31 = *(void *)(v12 + 56);
    int v28 = v16;
    while (1)
    {
      long long v18 = v32;
      v32((id *)v9, (char *)v15, v2);
      v18(v5, v9, v2);
      if ((*(unsigned int (**)(id *, uint64_t))(v12 + 72))(v5, v2) == v16)
      {
        (*v29)(v5, v2);
        id v19 = *v5;
        id v20 = objc_msgSend(*v5, sel_metalDevice);
        if (v20)
        {
          unsigned __int8 v21 = objc_msgSend(v20, sel_isEqual_, v27);
          swift_unknownObjectRelease();

          if (v21)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v25;
            a1 = v26;
            (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v26, v9, v2);
            uint64_t v22 = 0;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v22, 1, v2);
          }
          (*v30)(v9, v2);
        }
        else
        {
          (*v30)(v9, v2);
        }
        int v16 = v28;
      }
      else
      {
        long long v17 = *v30;
        (*v30)(v9, v2);
        v17((char *)v5, v2);
      }
      v15 += v31;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = 1;
        uint64_t v3 = v25;
        a1 = v26;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v22, 1, v2);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v22, 1, v2);
}

uint64_t sub_1DCFA6C70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = (void *)(a1 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v4 = v2[3];
    uint64_t v5 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    uint64_t v7 = *(void *)(v6 + 16);
    int64_t v8 = v3[2];
    int64_t v9 = v8 + v7;
    if (__OFADD__(v8, v7)) {
      break;
    }
    uint64_t v10 = v6;
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v9 <= v3[3] >> 1)
    {
      if (*(void *)(v10 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v8 <= v9) {
        int64_t v12 = v8 + v7;
      }
      else {
        int64_t v12 = v8;
      }
      uint64_t v3 = sub_1DCE9E44C(isUniquelyReferenced_nonNull_native, v12, 1, v3);
      if (*(void *)(v10 + 16))
      {
LABEL_14:
        uint64_t v13 = v3[2];
        if ((v3[3] >> 1) - v13 < v7) {
          goto LABEL_28;
        }
        unint64_t v14 = (unint64_t)&v3[5 * v13 + 4];
        if (v10 + 32 < v14 + 40 * v7 && v14 < v10 + 32 + 40 * v7) {
          goto LABEL_30;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
        swift_arrayInitWithCopy();
        if (v7)
        {
          uint64_t v16 = v3[2];
          BOOL v17 = __OFADD__(v16, v7);
          uint64_t v18 = v16 + v7;
          if (v17) {
            goto LABEL_29;
          }
          v3[2] = v18;
        }
        goto LABEL_4;
      }
    }
    if (v7) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v2 += 5;
    if (!--v1)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFA6E68(uint64_t a1, void *a2)
{
  if (!a1)
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a2;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DCFA34B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)a2;
  }
  uint64_t v7 = (uint64_t *)(v5 + 40);
  int64_t v8 = a2;
  uint64_t v45 = v3;
  while (1)
  {
    uint64_t v10 = *(v7 - 1);
    uint64_t v11 = *v7;
    uint64_t v12 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    if (v12)
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1DCEAD1A4(v10, v11);
      if (v14)
      {
        unint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v13);
        uint64_t v16 = v15[1];
        uint64_t v48 = *v15;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v48 = 0;
        uint64_t v16 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v16 = 0;
    }
    uint64_t v47 = v16;
    if (a2[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_1DCEAD1A4(v10, v11);
      if (v18)
      {
        uint64_t v19 = v10;
        id v20 = (uint64_t *)(a2[7] + 16 * v17);
        uint64_t v22 = *v20;
        uint64_t v21 = v20[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (!v16) {
          goto LABEL_44;
        }
        if (v22 == v48 && v16 == v21)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v19;
        }
        else
        {
          char v24 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          uint64_t v10 = v19;
          if ((v24 & 1) == 0)
          {
LABEL_44:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1DCFA7C4C();
            swift_allocError();
            swift_willThrow();
            return (uint64_t)a2;
          }
        }
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
    }
    if (!v16)
    {
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_1DCEAD1A4(v10, v11);
      char v27 = v26;
      swift_bridgeObjectRelease();
      if (v27)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DCE88928();
        }
        swift_bridgeObjectRelease();
        sub_1DCFDC59C(v25, (uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      goto LABEL_6;
    }
LABEL_29:
    uint64_t v46 = v6;
    int v28 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = v10;
    unint64_t v32 = sub_1DCEAD1A4(v10, v11);
    uint64_t v33 = v8[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (v8[3] >= v35)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v31 & 1) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_1DCE88928();
        if ((v36 & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    else
    {
      sub_1DCE7E3A8(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1DCEAD1A4(v30, v11);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_48;
      }
      unint64_t v32 = v37;
      if ((v36 & 1) == 0)
      {
LABEL_36:
        v8[(v32 >> 6) + 8] |= 1 << v32;
        long long v39 = (uint64_t *)(v8[6] + 16 * v32);
        *long long v39 = v30;
        v39[1] = v11;
        long long v40 = (void *)(v8[7] + 16 * v32);
        *long long v40 = v48;
        v40[1] = v47;
        uint64_t v41 = v8[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_47;
        }
        v8[2] = v43;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    int64_t v9 = (void *)(v8[7] + 16 * v32);
    swift_bridgeObjectRelease();
    *int64_t v9 = v48;
    v9[1] = v47;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v28;
    uint64_t v3 = v45;
    uint64_t v6 = v46;
LABEL_6:
    v7 += 2;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCFA72A0(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCD8C97C(*a1, *a2);
}

uint64_t sub_1DCFA72AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *a4;
  *a4 = 0x8000000000000000;
  sub_1DCE86D78(a3, a1, a2, isUniquelyReferenced_nonNull_native);
  *a4 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFA7358(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCD8EB50(*a1, *a2);
}

uint64_t sub_1DCFA7364(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DCFB2500(*a1, *a2);
}

uint64_t sub_1DCFA7370()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFA740C()
{
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFA7494()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFA752C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCFA7C00();
  *a1 = result;
  return result;
}

void sub_1DCFA755C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6573726170;
  if (v2 != 1)
  {
    uint64_t v5 = 0x686372616573;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x636972656E6567;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1DCFA75B4(void *a1@<X8>)
{
  *a1 = &unk_1F38350C8;
}

unint64_t sub_1DCFA75C4()
{
  type metadata accessor for EngineResult();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  *(void *)(v0 + 24) = sub_1DCDB8374(MEMORY[0x1E4FBC860]);
  unint64_t result = sub_1DCDBC614(v1);
  *(void *)(v0 + 16) = result;
  qword_1EBE9C908 = v0;
  return result;
}

uint64_t sub_1DCFA761C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  uint64_t v5 = (void *)sub_1DCDBC614(MEMORY[0x1E4FBC860]);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = 0;
    int64_t v8 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v10 = *(v8 - 1);
      uint64_t v11 = *v8;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v34 = v5;
      unint64_t v14 = sub_1DCEAD4C8(v7);
      uint64_t v15 = v5[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        sub_1DD049028();
        __break(1u);
LABEL_24:
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      char v18 = v13;
      if (v5[3] >= v17)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v5 = v34;
          if (v13) {
            goto LABEL_3;
          }
        }
        else
        {
          sub_1DCE890F0();
          uint64_t v5 = v34;
          if (v18) {
            goto LABEL_3;
          }
        }
      }
      else
      {
        sub_1DCE7F2C8(v17, isUniquelyReferenced_nonNull_native);
        unint64_t v19 = sub_1DCEAD4C8(v7);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_23;
        }
        unint64_t v14 = v19;
        uint64_t v5 = v34;
        if (v18)
        {
LABEL_3:
          int64_t v9 = (void *)(v5[7] + 16 * v14);
          swift_bridgeObjectRelease();
          *int64_t v9 = v10;
          v9[1] = v11;
          goto LABEL_4;
        }
      }
      v5[(v14 >> 6) + 8] |= 1 << v14;
      *(void *)(v5[6] + 8 * v14) = v7;
      uint64_t v21 = (void *)(v5[7] + 16 * v14);
      *uint64_t v21 = v10;
      v21[1] = v11;
      uint64_t v22 = v5[2];
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23) {
        goto LABEL_22;
      }
      void v5[2] = v24;
LABEL_4:
      ++v7;
      v8 += 2;
      swift_bridgeObjectRelease();
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  *(void *)(v33 + 16) = v5;
  uint64_t v25 = *(void *)(v33 + 24);
  swift_bridgeObjectRetain_n();
  char v26 = sub_1DCF4D91C(v25);
  swift_bridgeObjectRelease();
  BOOL v34 = v26;
  sub_1DCD6E768((uint64_t *)&v34);
  if (v3) {
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  char v27 = v34;
  uint64_t v28 = *(void *)(v33 + 16);
  swift_bridgeObjectRetain_n();
  id v29 = sub_1DCF4D904(v28);
  swift_bridgeObjectRelease();
  BOOL v34 = v29;
  sub_1DCD6E768((uint64_t *)&v34);
  swift_bridgeObjectRelease();
  char v30 = sub_1DCFB51B4(v27, v34);
  swift_release();
  swift_release();
  if ((v30 & 1) == 0)
  {
    swift_release();
    sub_1DCD3A548();
    swift_allocError();
    *(_OWORD *)uint64_t v31 = xmmword_1DD061160;
    *(unsigned char *)(v31 + 16) = 4;
    swift_willThrow();
  }
  return v33;
}

uint64_t sub_1DCFA78DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EngineResult()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ModelCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFA7A0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelCategory()
{
  return &type metadata for ModelCategory;
}

unint64_t sub_1DCFA7A48()
{
  unint64_t result = qword_1EAB046A0;
  if (!qword_1EAB046A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB046A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046A0);
  }
  return result;
}

unint64_t sub_1DCFA7AA8()
{
  unint64_t result = qword_1EBE85790;
  if (!qword_1EBE85790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85790);
  }
  return result;
}

void sub_1DCFA7AFC()
{
  qword_1EBE9C870 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1DCFA7B10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCD3A3BC(v2, (uint64_t)&v7);
    uint64_t v3 = v8;
    uint64_t v4 = v9;
    __swift_project_boxed_opaque_existential_1(&v7, v8);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) == 0) {
      break;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
    v2 += 40;
    if (!--v1)
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
      goto LABEL_8;
    }
  }
  sub_1DCD3A4DC(&v7, (uint64_t)&v10);
LABEL_8:
  swift_bridgeObjectRelease();
  BOOL v5 = *((void *)&v11 + 1) == 0;
  sub_1DCFA7DFC((uint64_t)&v10);
  return v5;
}

uint64_t sub_1DCFA7BF0()
{
  return sub_1DCFA7B10(*v0);
}

uint64_t sub_1DCFA7BF8()
{
  return sub_1DCFA6C70(*v0);
}

uint64_t sub_1DCFA7C00()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DCFA7C4C()
{
  unint64_t result = qword_1EAB046B0;
  if (!qword_1EAB046B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadSpecs()
{
  return &type metadata for HeadSpecs;
}

ValueMetadata *type metadata accessor for BatchModelRequest()
{
  return &type metadata for BatchModelRequest;
}

unsigned char *storeEnumTagSinglePayload for HeadSpecs.HeadSpecsError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCFA7D5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadSpecs.HeadSpecsError()
{
  return &type metadata for HeadSpecs.HeadSpecsError;
}

ValueMetadata *type metadata accessor for MultiheadSpec()
{
  return &type metadata for MultiheadSpec;
}

unint64_t sub_1DCFA7DA8()
{
  unint64_t result = qword_1EAB046B8;
  if (!qword_1EAB046B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046B8);
  }
  return result;
}

uint64_t sub_1DCFA7DFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCFA7E5C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCFA7EA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v57 = *v1;
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v52 - v9;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v52 - v12;
  MEMORY[0x1F4188790](v14);
  BOOL v16 = (char *)&v52 - v15;
  v60[0] = 0x656E69676E454C4DLL;
  v60[1] = 0xE800000000000000;
  long long v60[2] = "RunnerCache.handle";
  v60[3] = 18;
  char v61 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v55 = sub_1DCEA469C((uint64_t)v60, 0);
  sub_1DCDB40EC((uint64_t)v16);
  sub_1DCDB4300((uint64_t)v13);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v16, v4);
  char v18 = sub_1DD048048();
  os_log_type_t v19 = sub_1DD048848();
  BOOL v20 = os_log_type_enabled(v18, v19);
  char v58 = v17;
  uint64_t v56 = a1;
  if (v20)
  {
    uint64_t v21 = v2;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 134217984;
    a1 = v56;
    v59[0] = v56;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v18, v19, "RunnerCache.handle %ld", v22, 0xCu);
    BOOL v23 = v22;
    uint64_t v2 = v21;
    uint64_t v17 = v58;
    MEMORY[0x1E01B07E0](v23, -1, -1);
  }

  uint64_t v24 = ((uint64_t (*)(char *, uint64_t))v17)(v13, v4);
  if ((a1 & 0x26) != 0)
  {
    uint64_t v25 = v2[3];
    MEMORY[0x1F4188790](v24);
    uint64_t v26 = *(void *)(v57 + 152);
    *(&v52 - 2) = *(void *)(v57 + 144);
    *(&v52 - 1) = v26;
    type metadata accessor for RunnerCacheCategory();
    sub_1DCFA9608();
    sub_1DD048338();
    char v27 = v2;
    uint64_t v28 = (os_unfair_lock_s *)(v25 + ((*(unsigned int *)(*(void *)v25 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v28);
    sub_1DCFA95EC();
    id v29 = v28;
    uint64_t v2 = v27;
    uint64_t v17 = v58;
    os_unfair_lock_unlock(v29);
    swift_release();
    a1 = v56;
    goto LABEL_10;
  }
  if ((a1 & 8) != 0)
  {
    uint64_t v30 = v2[3];
    MEMORY[0x1F4188790](v24);
    uint64_t v31 = *(void *)(v57 + 152);
    *(&v52 - 2) = *(void *)(v57 + 144);
    *(&v52 - 1) = v31;
    type metadata accessor for RunnerCacheCategory();
    sub_1DCFA9608();
    sub_1DD048338();
    unint64_t v32 = (uint64_t *)(v30 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v30 + 16));
    uint64_t v33 = v2;
    BOOL v34 = (os_unfair_lock_s *)(v30 + ((*(unsigned int *)(*(void *)v30 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v34);
    sub_1DCFA9678(v32, (BOOL *)v59);
    uint64_t v35 = v34;
    uint64_t v2 = v33;
    uint64_t v17 = v58;
    os_unfair_lock_unlock(v35);
    uint64_t v24 = swift_release();
    a1 = v56;
    if ((v56 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if ((a1 & 0x10) != 0)
  {
LABEL_9:
    unsigned int v53 = &v52;
    uint64_t v36 = v2[3];
    MEMORY[0x1F4188790](v24);
    uint64_t v37 = *(void *)(v57 + 152);
    *(&v52 - 2) = *(void *)(v57 + 144);
    *(&v52 - 1) = v37;
    type metadata accessor for RunnerCacheCategory();
    char v54 = v2;
    sub_1DCFA9608();
    sub_1DD048338();
    char v38 = (uint64_t *)(v36 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v36 + 16));
    long long v39 = v7;
    long long v40 = (os_unfair_lock_s *)(v36 + ((*(unsigned int *)(*(void *)v36 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v40);
    uint64_t v41 = v38;
    uint64_t v2 = v54;
    sub_1DCFA9698(v41, (BOOL *)v59);
    BOOL v42 = v40;
    long long v7 = v39;
    a1 = v56;
    os_unfair_lock_unlock(v42);
    swift_release();
  }
LABEL_10:
  sub_1DCDB40EC((uint64_t)v10);
  sub_1DCDB4300((uint64_t)v7);
  v17(v10, v4);
  swift_retain();
  uint64_t v56 = (uint64_t)v7;
  uint64_t v43 = sub_1DD048048();
  os_log_type_t v44 = sub_1DD048848();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 134218240;
    v59[0] = a1;
    uint64_t v46 = sub_1DD048A28();
    uint64_t v52 = (uint64_t)&v52;
    *(_WORD *)(v45 + 12) = 2048;
    unsigned int v53 = (uint64_t *)(v45 + 14);
    char v54 = v2;
    uint64_t v47 = v2[3];
    MEMORY[0x1F4188790](v46);
    uint64_t v48 = *(void *)(v57 + 152);
    *(&v52 - 2) = *(void *)(v57 + 144);
    *(&v52 - 1) = v48;
    type metadata accessor for RunnerCacheCategory();
    sub_1DCFA9608();
    sub_1DD048338();
    long long v49 = (os_unfair_lock_s *)(v47 + ((*(unsigned int *)(*(void *)v47 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v49);
    sub_1DCFA965C(v59);
    long long v50 = v49;
    uint64_t v17 = v58;
    os_unfair_lock_unlock(v50);
    swift_release();
    sub_1DD048A28();
    swift_release();
    _os_log_impl(&dword_1DCCF9000, v43, v44, "RunnerCache.handle %ld -> %ld", (uint8_t *)v45, 0x16u);
    MEMORY[0x1E01B07E0](v45, -1, -1);
  }
  else
  {

    swift_release();
  }
  v17((char *)v56, v4);
  sub_1DCEA3DA4();
  return swift_release();
}

uint64_t sub_1DCFA863C()
{
  return sub_1DD048328();
}

void *sub_1DCFA86A0@<X0>(uint64_t *a1@<X0>, char a2@<W3>, BOOL *a3@<X8>)
{
  uint64_t v4 = *a1;
  char v9 = a2;
  uint64_t v5 = type metadata accessor for RunnerCacheCategory();
  unint64_t v6 = sub_1DCFA9608();
  unint64_t result = MEMORY[0x1E01AE000](&v10, &v9, v4, &type metadata for ModelCategory, v5, v6);
  uint64_t v8 = v10;
  if (v10)
  {
    sub_1DCFA8CA4();
    unint64_t result = (void *)swift_release();
  }
  *a3 = v8 == 0;
  return result;
}

uint64_t sub_1DCFA8730@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RunnerCacheCategory();
  sub_1DCFA9608();
  uint64_t result = sub_1DD048308();
  *a1 = result;
  return result;
}

uint64_t sub_1DCFA8790()
{
  return swift_release();
}

uint64_t sub_1DCFA8798()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 16) = 0;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DCFA883C()
{
  sub_1DCFA8798();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RunnerCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DCFA8888()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1DCFA88DC(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x1E01AC0E0]() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for RunnerCacheCategory.CachedRunnerKey();
  uint64_t v5 = *(int *)(v4 + 36);
  unint64_t v6 = (void *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  int v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (*v6 != *v8) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      return 0;
    }
  }
  uint64_t v11 = *(int *)(v4 + 40);
  uint64_t v12 = *(void **)(a1 + v11);
  char v13 = *(void **)(a2 + v11);
  return sub_1DCFB51B4(v12, v13);
}

uint64_t sub_1DCFA8988(uint64_t a1, uint64_t a2)
{
  sub_1DD046478();
  sub_1DCFA953C();
  sub_1DD048368();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 36) + 8) == 1)
  {
    sub_1DD0490D8();
  }
  else
  {
    sub_1DD0490D8();
    sub_1DD0490F8();
  }
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 40));
  uint64_t result = sub_1DD0490C8();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCFA8A9C(uint64_t a1)
{
  sub_1DD0490B8();
  sub_1DCFA8988((uint64_t)v3, a1);
  return sub_1DD049108();
}

uint64_t sub_1DCFA8AE4(uint64_t a1, uint64_t a2)
{
  return sub_1DCFA88DC(a1, a2);
}

uint64_t sub_1DCFA8AF8(uint64_t a1, uint64_t a2)
{
  sub_1DD0490B8();
  sub_1DCFA8988((uint64_t)v4, a2);
  return sub_1DD049108();
}

uint64_t sub_1DCFA8B3C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for RunnerCacheCategory.CachedRunnerKey();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v3, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_1DCFA8C50()
{
  sub_1DCFA8B3C();
  return swift_deallocClassInstance();
}

void sub_1DCFA8CA4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for RunnerCacheCategory.CacheEntry();
  sub_1DD048728();
  uint64_t v2 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_1DCFA9594();
  os_unfair_lock_unlock(v2);
}

uint64_t sub_1DCFA8D88()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RunnerCacheCategory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DCFA8DD8()
{
  uint64_t result = type metadata accessor for RunnerCacheCategory.CachedRunnerKey();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for RunnerCacheCategory.CacheEntry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for RunnerCacheCategory.CachedRunnerKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1DCFA8F0C()
{
  uint64_t result = sub_1DD046478();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCFA8FB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD046478();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCFA9098(uint64_t a1)
{
  uint64_t v2 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFA910C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCFA91A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCFA924C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1DCFA92E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCFA937C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCFA9390);
}

uint64_t sub_1DCFA9390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCFA9450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCFA9464);
}

uint64_t sub_1DCFA9464(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1DD046478();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1DCFA9520()
{
  return swift_getWitnessTable();
}

unint64_t sub_1DCFA953C()
{
  unint64_t result = qword_1EAB046C0;
  if (!qword_1EAB046C0)
  {
    sub_1DD046478();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046C0);
  }
  return result;
}

uint64_t sub_1DCFA9594()
{
  return sub_1DD048718();
}

uint64_t sub_1DCFA95EC()
{
  return sub_1DCFA863C();
}

unint64_t sub_1DCFA9608()
{
  unint64_t result = qword_1EBE85290;
  if (!qword_1EBE85290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85290);
  }
  return result;
}

uint64_t sub_1DCFA965C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCFA8730(a1);
}

void *sub_1DCFA9678@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DCFA86A0(a1, 1, a2);
}

void *sub_1DCFA9698@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1DCFA86A0(a1, 2, a2);
}

void sub_1DCFA96B8(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCFAFFB4(v5);
  *a1 = v3;
}

uint64_t sub_1DCFA9760(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v262 = a8;
  uint64_t v263 = a7;
  uint64_t v271 = (uint8_t *)a6;
  uint64_t v268 = a5;
  v253 = (char *)a3;
  uint64_t v258 = a1;
  uint64_t v259 = a2;
  v249 = 0;
  uint64_t v9 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v257 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  os_log_t v272 = (os_log_t)((char *)&v249 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1DD048068();
  uint64_t v269 = *(void *)(v11 - 8);
  uint64_t v270 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v267 = (char *)&v249 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v265 = (char *)&v249 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v260 = (uint64_t)&v249 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v252 = (uint8_t *)&v249 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v264 = (char *)&v249 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v261 = (char *)&v249 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v23 - 8);
  os_log_t v256 = (os_log_t)((char *)&v249 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v254 = *(void *)(v25 - 8);
  uint64_t v255 = v25;
  MEMORY[0x1F4188790](v25);
  char v27 = (char *)&v249 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85EF8);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v251 = (uint64_t)&v249 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  uint64_t v30 = *(void *)(v250 - 8);
  MEMORY[0x1F4188790](v250);
  unint64_t v32 = (unint64_t *)((char *)&v249 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v249 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  long long v39 = (char *)&v249 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *a4;
  uint64_t v40 = a4[1];
  uint64_t v43 = a4[2];
  uint64_t v42 = a4[3];
  sub_1DCD2889C(v263, (uint64_t)v35, &qword_1EBE866F8);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36);
  uint64_t v45 = v266;
  if (v44 == 1)
  {
    sub_1DCD2479C((uint64_t)v35, &qword_1EBE866F8);
    uint64_t v279 = v41;
    uint64_t v280 = v40;
    uint64_t v281 = v43;
    uint64_t v282 = v42;
    uint64_t v46 = sub_1DCFAE1EC(v273, (uint64_t)v253, &v279, v268, (uint64_t)v271, v262);
    uint64_t v47 = v273[0];
    uint64_t v48 = v273[1];
    uint64_t v49 = v273[2];
    uint64_t v50 = v273[3];
    uint64_t v279 = (uint64_t)v46;
    uint64_t v280 = v51;
    uint64_t v281 = v52;
    uint64_t v282 = v53;
    uint64_t v54 = (uint64_t)v252;
    sub_1DCDB40EC((uint64_t)v252);
    uint64_t v55 = sub_1DD048048();
    os_log_type_t v56 = sub_1DD048848();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v273[0] = v58;
      *(_DWORD *)uint64_t v57 = 134218498;
      swift_beginAccess();
      uint64_t v277 = *(void *)(v282 + 16);
      sub_1DD048A28();
      *(_WORD *)(v57 + 12) = 2048;
      unint64_t v59 = v280;
      if (v280) {
        uint64_t v60 = *(void *)(v281 + 16);
      }
      else {
        uint64_t v60 = 0;
      }
      uint64_t v89 = v279;
      uint64_t v277 = v60;
      sub_1DD048A28();
      *(_WORD *)(v57 + 22) = 2080;
      if (v59)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v89 = 0;
        unint64_t v59 = 0xE000000000000000;
      }
      uint64_t v277 = sub_1DCED7FA0(v89, v59, v273);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v55, v56, "Extract detector/cc results: Num of detected region %ld Num of coarse results: %ld for %s", (uint8_t *)v57, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v58, -1, -1);
      MEMORY[0x1E01B07E0](v57, -1, -1);
    }

    uint64_t v268 = *(void **)(v269 + 8);
    ((void (*)(uint64_t, uint64_t))v268)(v54, v270);
LABEL_74:
    uint64_t v93 = (uint64_t)v267;
    uint64_t v94 = (uint64_t)v265;
    goto LABEL_75;
  }
  char v61 = v268;
  sub_1DCFB2000((uint64_t)v35, (uint64_t)v39, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  v273[0] = *(void *)(v45 + 32);
  uint64_t v62 = *(void *)&v271[*(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20)]
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
  swift_beginAccess();
  uint64_t v63 = v251;
  sub_1DCD2889C(v62, v251, (uint64_t *)&unk_1EBE85EF8);
  uint64_t v64 = v250;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v63, 1, v250) == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v65 = MEMORY[0x1E4FBC860];
    *unint64_t v32 = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    v32[1] = sub_1DCDB86BC(v65);
    v32[2] = sub_1DCDB86BC(v65);
    sub_1DD047BE8();
    char v66 = (char *)v32 + *(int *)(v64 + 32);
    uint64_t v67 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 1, 1, v67);
    sub_1DCD2479C(v63, (uint64_t *)&unk_1EBE85EF8);
  }
  else
  {
    sub_1DCFB2000(v63, (uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
    swift_bridgeObjectRetain();
  }
  uint64_t v68 = (uint64_t)v261;
  uint64_t v69 = sub_1DCFB1744((uint64_t)v39, v273, (uint64_t)v32);
  v253 = v39;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  sub_1DCFB2068((uint64_t)v32, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
  swift_bridgeObjectRelease();
  uint64_t v279 = v70;
  uint64_t v280 = v72;
  uint64_t v281 = v74;
  uint64_t v282 = v76;
  os_log_t v77 = v256;
  sub_1DCD2889C((uint64_t)&v253[*(int *)(v36 + 28)], (uint64_t)v256, &qword_1EBE86570);
  if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v254 + 48))(v77, 1, v255) == 1)
  {
    *(_OWORD *)char v27 = 0u;
    *((_OWORD *)v27 + 1) = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v77, &qword_1EBE86570);
  }
  else
  {
    sub_1DCFB2000((uint64_t)v77, (uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  uint64_t v78 = (uint64_t)v264;
  uint64_t v47 = *(void *)v27;
  uint64_t v48 = *((void *)v27 + 1);
  uint64_t v49 = *((void *)v27 + 2);
  uint64_t v50 = *((void *)v27 + 3);
  sub_1DCFB2068((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  if (v61 && objc_msgSend(v61, sel_imageType) == (id)3)
  {
    uint64_t v79 = v279;
    uint64_t v80 = v280;
    uint64_t v82 = v281;
    uint64_t v81 = v282;
    v273[0] = v41;
    v273[1] = v40;
    v273[2] = v43;
    v273[3] = v42;
    sub_1DCD55D64(v279, v280);
    swift_bridgeObjectRetain();
    float v83 = (char *)objc_msgSend(v61, sel_preferredMetalDevice);
    unint64_t v84 = v249;
    uint64_t v85 = sub_1DCFAED7C(v79, v80, v82, v81, v273, v83, v262);
    if (v84)
    {

      sub_1DCD781D0(v79, v80);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v249 = 0;
    }
    else
    {
      uint64_t v90 = v87;
      uint64_t v91 = v88;
      v249 = 0;
      uint64_t v271 = (uint8_t *)v85;
      uint64_t v92 = v86;
      sub_1DCD781D0(v79, v80);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCD781D0(v79, v80);
      swift_bridgeObjectRelease();
      uint64_t v79 = (uint64_t)v271;
      uint64_t v80 = v92;
      uint64_t v82 = v90;
      uint64_t v81 = v91;
    }
    uint64_t v78 = (uint64_t)v264;
    uint64_t v279 = v79;
    uint64_t v280 = v80;
    uint64_t v281 = v82;
    uint64_t v282 = v81;
  }
  uint64_t v93 = (uint64_t)v267;
  uint64_t v94 = (uint64_t)v265;
  sub_1DCDB40EC(v68);
  uint64_t v95 = sub_1DD048048();
  os_log_type_t v96 = sub_1DD048848();
  if (os_log_type_enabled(v95, v96))
  {
    uint64_t v97 = swift_slowAlloc();
    uint64_t v98 = swift_slowAlloc();
    v273[0] = v98;
    *(_DWORD *)uint64_t v97 = 134218498;
    swift_beginAccess();
    uint64_t v277 = *(void *)(v282 + 16);
    sub_1DD048A28();
    *(_WORD *)(v97 + 12) = 2048;
    unint64_t v99 = v280;
    if (v280) {
      uint64_t v100 = *(void *)(v281 + 16);
    }
    else {
      uint64_t v100 = 0;
    }
    uint64_t v101 = v279;
    uint64_t v277 = v100;
    sub_1DD048A28();
    *(_WORD *)(v97 + 22) = 2080;
    if (v99)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v101 = 0;
      unint64_t v99 = 0xE000000000000000;
    }
    uint64_t v277 = sub_1DCED7FA0(v101, v99, v273);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v95, v96, "Use cached intermediate results: Num of detected region %ld Num of coarse results: %ld for %s", (uint8_t *)v97, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v98, -1, -1);
    MEMORY[0x1E01B07E0](v97, -1, -1);

    uint64_t v268 = *(void **)(v269 + 8);
    ((void (*)(uint64_t, uint64_t))v268)(v68, v270);
    uint64_t v93 = (uint64_t)v267;
    uint64_t v94 = (uint64_t)v265;
  }
  else
  {

    uint64_t v268 = *(void **)(v269 + 8);
    ((void (*)(uint64_t, uint64_t))v268)(v68, v270);
  }
  sub_1DCDB40EC(v78);
  uint64_t v102 = sub_1DD048048();
  int v103 = sub_1DD048848();
  if (!os_log_type_enabled(v102, (os_log_type_t)v103))
  {

    ((void (*)(uint64_t, uint64_t))v268)(v78, v270);
    sub_1DCFB2068((uint64_t)v253, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
LABEL_75:
    uint64_t v154 = v260;
    sub_1DCDB40EC(v260);
    uint64_t v155 = sub_1DD048048();
    int v156 = sub_1DD048848();
    if (!os_log_type_enabled(v155, (os_log_type_t)v156))
    {

      ((void (*)(uint64_t, uint64_t))v268)(v154, v270);
      goto LABEL_108;
    }
    LODWORD(v264) = v156;
    os_log_t v272 = v155;
    unint64_t v157 = (uint8_t *)swift_slowAlloc();
    uint64_t v263 = swift_slowAlloc();
    uint64_t v277 = v263;
    uint64_t v271 = v157;
    *(_DWORD *)unint64_t v157 = 136315138;
    swift_beginAccess();
    uint64_t v158 = v282;
    uint64_t v159 = *(void *)(v282 + 16);
    uint64_t v160 = MEMORY[0x1E4FBC860];
    if (!v159)
    {
      uint64_t v164 = (void *)MEMORY[0x1E4FBC860];
      int64_t v176 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v176) {
        goto LABEL_100;
      }
      goto LABEL_106;
    }
    unint64_t v161 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
    uint64_t v162 = *(void *)(v257 + 72);
    swift_bridgeObjectRetain();
    unint64_t v163 = v161 + 56;
    uint64_t v164 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v165 = *(void *)(v158 + v163);
      uint64_t v166 = *(void *)(v165 + 16);
      int64_t v167 = v164[2];
      int64_t v168 = v167 + v166;
      if (__OFADD__(v167, v166)) {
        goto LABEL_152;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v168 <= v164[3] >> 1)
      {
        if (*(void *)(v165 + 16)) {
          goto LABEL_89;
        }
      }
      else
      {
        if (v167 <= v168) {
          int64_t v170 = v167 + v166;
        }
        else {
          int64_t v170 = v167;
        }
        uint64_t v164 = sub_1DCE9DE38(isUniquelyReferenced_nonNull_native, v170, 1, v164);
        if (*(void *)(v165 + 16))
        {
LABEL_89:
          uint64_t v171 = v164[2];
          if ((v164[3] >> 1) - v171 < v166) {
            goto LABEL_156;
          }
          unint64_t v172 = (unint64_t)&v164[10 * v171 + 4];
          if (v165 + 32 < v172 + 80 * v166 && v172 < v165 + 32 + 80 * v166) {
            goto LABEL_160;
          }
          swift_arrayInitWithCopy();
          if (v166)
          {
            uint64_t v174 = v164[2];
            BOOL v127 = __OFADD__(v174, v166);
            uint64_t v175 = v174 + v166;
            if (v127) {
              goto LABEL_158;
            }
            v164[2] = v175;
          }
          goto LABEL_79;
        }
      }
      if (v166) {
        goto LABEL_153;
      }
LABEL_79:
      swift_bridgeObjectRelease();
      v163 += v162;
      if (!--v159)
      {
        swift_bridgeObjectRelease();
        uint64_t v160 = MEMORY[0x1E4FBC860];
        int64_t v176 = v164[2];
        if (v176)
        {
LABEL_100:
          v276[0] = v160;
          sub_1DCFC4948(0, v176, 0);
          uint64_t v177 = 0;
          uint64_t v178 = v276[0];
          do
          {
            long long v179 = *(_OWORD *)&v164[v177 + 9];
            uint64_t v180 = v164[v177 + 11];
            uint64_t v181 = v164[v177 + 12];
            int v182 = v164[v177 + 13];
            long long v183 = *(_OWORD *)&v164[v177 + 5];
            long long v184 = *(_OWORD *)&v164[v177 + 7];
            v273[0] = v164[v177 + 4];
            *(_OWORD *)&v273[1] = v183;
            *(_OWORD *)&v273[3] = v184;
            *(_OWORD *)&v273[5] = v179;
            v273[7] = v180;
            v273[8] = v181;
            int v274 = v182;
            uint64_t v185 = sub_1DCEE5BC0();
            uint64_t v187 = v186;
            v276[0] = v178;
            unint64_t v189 = *(void *)(v178 + 16);
            unint64_t v188 = *(void *)(v178 + 24);
            if (v189 >= v188 >> 1)
            {
              sub_1DCFC4948(v188 > 1, v189 + 1, 1);
              uint64_t v178 = v276[0];
            }
            *(void *)(v178 + 16) = v189 + 1;
            uint64_t v190 = v178 + 16 * v189;
            *(void *)(v190 + 32) = v185;
            *(void *)(v190 + 40) = v187;
            v177 += 10;
            --v176;
          }
          while (v176);
          swift_bridgeObjectRelease();
LABEL_107:
          CGRect v191 = v271;
          uint64_t v192 = MEMORY[0x1E01AE380](v178, MEMORY[0x1E4FBB1A0]);
          unint64_t v194 = v193;
          swift_bridgeObjectRelease();
          v273[0] = sub_1DCED7FA0(v192, v194, &v277);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          os_log_t v195 = v272;
          _os_log_impl(&dword_1DCCF9000, v272, (os_log_type_t)v264, "Detection results: %s", v191, 0xCu);
          uint64_t v196 = v263;
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v196, -1, -1);
          MEMORY[0x1E01B07E0](v191, -1, -1);

          ((void (*)(uint64_t, uint64_t))v268)(v260, v270);
          uint64_t v93 = (uint64_t)v267;
          uint64_t v94 = (uint64_t)v265;
LABEL_108:
          sub_1DCDB40EC(v94);
          CGRect v197 = sub_1DD048048();
          int v198 = sub_1DD048848();
          if (os_log_type_enabled(v197, (os_log_type_t)v198))
          {
            LODWORD(v264) = v198;
            os_log_t v272 = v197;
            CGRect v199 = (uint8_t *)swift_slowAlloc();
            uint64_t v263 = swift_slowAlloc();
            uint64_t v277 = v263;
            uint64_t v271 = v199;
            *(_DWORD *)CGRect v199 = 136315138;
            swift_beginAccess();
            uint64_t v200 = v282;
            uint64_t v201 = *(void *)(v282 + 16);
            uint64_t v202 = MEMORY[0x1E4FBC860];
            if (v201)
            {
              unint64_t v203 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
              uint64_t v204 = *(void *)(v257 + 72);
              swift_bridgeObjectRetain();
              unint64_t v205 = v203 + 64;
              CGRect v206 = (void *)MEMORY[0x1E4FBC860];
              while (1)
              {
                uint64_t v207 = *(void *)(v200 + v205);
                uint64_t v208 = *(void *)(v207 + 16);
                int64_t v209 = v206[2];
                int64_t v210 = v209 + v208;
                if (__OFADD__(v209, v208)) {
                  goto LABEL_154;
                }
                swift_bridgeObjectRetain();
                CGRect v211 = (void *)swift_isUniquelyReferenced_nonNull_native();
                if (v211 && v210 <= v206[3] >> 1)
                {
                  if (*(void *)(v207 + 16)) {
                    goto LABEL_122;
                  }
                }
                else
                {
                  if (v209 <= v210) {
                    int64_t v212 = v209 + v208;
                  }
                  else {
                    int64_t v212 = v209;
                  }
                  CGRect v206 = sub_1DCE9DC18(v211, v212, 1, v206);
                  if (*(void *)(v207 + 16))
                  {
LABEL_122:
                    uint64_t v213 = v206[2];
                    if ((v206[3] >> 1) - v213 < v208) {
                      goto LABEL_157;
                    }
                    unint64_t v214 = (unint64_t)&v206[2 * v213 + 4];
                    if (v207 + 32 < v214 + 16 * v208 && v214 < v207 + 32 + 16 * v208) {
                      goto LABEL_160;
                    }
                    swift_arrayInitWithCopy();
                    if (v208)
                    {
                      uint64_t v216 = v206[2];
                      BOOL v127 = __OFADD__(v216, v208);
                      uint64_t v217 = v216 + v208;
                      if (v127) {
                        goto LABEL_159;
                      }
                      v206[2] = v217;
                    }
                    goto LABEL_112;
                  }
                }
                if (v208) {
                  goto LABEL_155;
                }
LABEL_112:
                swift_bridgeObjectRelease();
                v205 += v204;
                if (!--v201)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v202 = MEMORY[0x1E4FBC860];
                  int64_t v218 = v206[2];
                  if (!v218) {
                    goto LABEL_139;
                  }
                  goto LABEL_133;
                }
              }
            }
            CGRect v206 = (void *)MEMORY[0x1E4FBC860];
            int64_t v218 = *(void *)(MEMORY[0x1E4FBC860] + 16);
            if (v218)
            {
LABEL_133:
              v276[0] = v202;
              sub_1DCFC4948(0, v218, 0);
              uint64_t v219 = v276[0];
              uint64_t v220 = v206 + 5;
              do
              {
                uint64_t v221 = *v220;
                v273[0] = *(v220 - 1);
                v273[1] = v221;
                swift_bridgeObjectRetain();
                uint64_t v222 = sub_1DD048498();
                uint64_t v224 = v223;
                v276[0] = v219;
                unint64_t v226 = *(void *)(v219 + 16);
                unint64_t v225 = *(void *)(v219 + 24);
                if (v226 >= v225 >> 1)
                {
                  sub_1DCFC4948(v225 > 1, v226 + 1, 1);
                  uint64_t v219 = v276[0];
                }
                *(void *)(v219 + 16) = v226 + 1;
                uint64_t v227 = v219 + 16 * v226;
                *(void *)(v227 + 32) = v222;
                *(void *)(v227 + 40) = v224;
                v220 += 2;
                --v218;
              }
              while (v218);
              swift_bridgeObjectRelease();
            }
            else
            {
LABEL_139:
              swift_bridgeObjectRelease();
              uint64_t v219 = MEMORY[0x1E4FBC860];
            }
            long long v228 = v271;
            uint64_t v229 = MEMORY[0x1E01AE380](v219, MEMORY[0x1E4FBB1A0]);
            unint64_t v231 = v230;
            swift_bridgeObjectRelease();
            v273[0] = sub_1DCED7FA0(v229, v231, &v277);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            os_log_t v232 = v272;
            _os_log_impl(&dword_1DCCF9000, v272, (os_log_type_t)v264, "DPN results: %s", v228, 0xCu);
            uint64_t v233 = v263;
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v233, -1, -1);
            MEMORY[0x1E01B07E0](v228, -1, -1);

            ((void (*)(char *, uint64_t))v268)(v265, v270);
            uint64_t v93 = (uint64_t)v267;
          }
          else
          {

            ((void (*)(uint64_t, uint64_t))v268)(v94, v270);
          }
          sub_1DCDB40EC(v93);
          uint64_t v234 = sub_1DD048048();
          os_log_type_t v235 = sub_1DD048848();
          if (os_log_type_enabled(v234, v235))
          {
            uint64_t v236 = (uint8_t *)swift_slowAlloc();
            uint64_t v237 = swift_slowAlloc();
            uint64_t v277 = v237;
            *(_DWORD *)uint64_t v236 = 136315138;
            swift_beginAccess();
            uint64_t v238 = v280;
            if (v280)
            {
              v273[0] = v279;
              v273[1] = v280;
              v273[2] = v281;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v238 = sub_1DD048498();
              unint64_t v240 = v239;
            }
            else
            {
              unint64_t v240 = 0xE000000000000000;
            }
            v273[0] = sub_1DCED7FA0(v238, v240, &v277);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DCCF9000, v234, v235, "Coarse results: %s", v236, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v237, -1, -1);
            MEMORY[0x1E01B07E0](v236, -1, -1);

            uint64_t v241 = v267;
          }
          else
          {

            uint64_t v241 = (char *)v93;
          }
          ((void (*)(char *, uint64_t))v268)(v241, v270);
          swift_beginAccess();
          v273[0] = v47;
          v273[1] = v48;
          v273[2] = v49;
          v273[3] = v50;
          uint64_t v242 = v279;
          uint64_t v243 = v280;
          uint64_t v245 = v281;
          uint64_t v244 = v282;
          swift_bridgeObjectRetain();
          sub_1DCD55D64(v242, v243);
          unint64_t v246 = sub_1DCFB1B94(v244, v273, v242, v243, v245);
          swift_bridgeObjectRelease();
          sub_1DCD781D0(v242, v243);
          uint64_t v247 = v258;
          *uint64_t v258 = v47;
          v247[1] = v48;
          v247[2] = v49;
          v247[3] = v50;
          v273[0] = v47;
          v273[1] = v48;
          v273[2] = v49;
          v273[3] = v50;
          swift_bridgeObjectRetain();
          sub_1DCD55D64(v242, v243);
          sub_1DCFAD0B4(v242, v243, v245, v244, v273, v259);
          sub_1DCD781D0(v242, v243);
          swift_bridgeObjectRelease();
          sub_1DCD781D0(v242, v243);
          swift_bridgeObjectRelease();
          return v246;
        }
LABEL_106:
        swift_bridgeObjectRelease();
        uint64_t v178 = MEMORY[0x1E4FBC860];
        goto LABEL_107;
      }
    }
  }
  LODWORD(v255) = v103;
  os_log_t v256 = v102;
  unint64_t v104 = (uint8_t *)swift_slowAlloc();
  uint64_t v254 = swift_slowAlloc();
  v276[0] = v254;
  *(_DWORD *)unint64_t v104 = 136315138;
  swift_beginAccess();
  uint64_t v105 = v282;
  int64_t v106 = *(void *)(v282 + 16);
  uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
  if (!v106)
  {
    uint64_t v142 = MEMORY[0x1E4FBC860];
LABEL_73:
    uint64_t v149 = MEMORY[0x1E01AE380](v142, MEMORY[0x1E4FBB1A0]);
    unint64_t v151 = v150;
    swift_bridgeObjectRelease();
    v273[0] = sub_1DCED7FA0(v149, v151, v276);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    os_log_t v152 = v256;
    _os_log_impl(&dword_1DCCF9000, v256, (os_log_type_t)v255, "Domain model results: %s", v104, 0xCu);
    uint64_t v153 = v254;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v153, -1, -1);
    MEMORY[0x1E01B07E0](v104, -1, -1);

    ((void (*)(uint64_t, uint64_t))v268)(v78, v270);
    sub_1DCFB2068((uint64_t)v253, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    goto LABEL_74;
  }
  uint64_t v252 = v104;
  uint64_t v275 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1DCFC4948(0, v106, 0);
  uint64_t v108 = 0;
  uint64_t v109 = *(unsigned __int8 *)(v257 + 80);
  uint64_t v251 = v105;
  uint64_t v263 = v105 + ((v109 + 32) & ~v109);
  uint64_t v110 = *(void *)(v257 + 72);
  uint64_t v261 = (char *)v106;
  uint64_t v262 = v110;
LABEL_35:
  uint64_t v271 = (uint8_t *)v108;
  os_log_t v111 = v272;
  sub_1DCFB1664(v263 + v262 * v108, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v277 = 0;
  unint64_t v278 = 0xE000000000000000;
  long long v112 = *(_OWORD *)&v111[2].isa;
  *(_OWORD *)uint64_t v273 = *(_OWORD *)&v111->isa;
  *(_OWORD *)&v273[2] = v112;
  sub_1DD048C88();
  sub_1DD048548();
  Class isa = v111[14].isa;
  uint64_t v114 = *((void *)isa + 2);
  if (!v114)
  {
    unint64_t v116 = v107;
    int64_t v129 = v107[2];
    if (v129) {
      goto LABEL_58;
    }
LABEL_64:
    swift_bridgeObjectRelease();
    goto LABEL_65;
  }
  swift_bridgeObjectRetain();
  uint64_t v115 = 72;
  unint64_t v116 = v107;
  while (1)
  {
    uint64_t v117 = *(void *)((char *)isa + v115);
    uint64_t v118 = *(void *)(v117 + 16);
    int64_t v119 = v116[2];
    int64_t v120 = v119 + v118;
    if (__OFADD__(v119, v118)) {
      break;
    }
    swift_bridgeObjectRetain();
    long long v121 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v121 && v120 <= v116[3] >> 1)
    {
      if (*(void *)(v117 + 16)) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v119 <= v120) {
        int64_t v122 = v119 + v118;
      }
      else {
        int64_t v122 = v119;
      }
      unint64_t v116 = sub_1DCE9E6B8(v121, v122, 1, v116);
      if (*(void *)(v117 + 16))
      {
LABEL_48:
        uint64_t v123 = v116[2];
        if ((v116[3] >> 1) - v123 < v118) {
          goto LABEL_150;
        }
        unint64_t v124 = (unint64_t)&v116[3 * v123 + 4];
        if (v117 + 32 < v124 + 24 * v118 && v124 < v117 + 32 + 24 * v118) {
          goto LABEL_160;
        }
        swift_arrayInitWithCopy();
        if (v118)
        {
          uint64_t v126 = v116[2];
          BOOL v127 = __OFADD__(v126, v118);
          uint64_t v128 = v126 + v118;
          if (v127) {
            goto LABEL_151;
          }
          v116[2] = v128;
        }
        goto LABEL_38;
      }
    }
    if (v118) {
      goto LABEL_149;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    v115 += 48;
    if (!--v114)
    {
      swift_bridgeObjectRelease();
      uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
      int64_t v129 = v116[2];
      if (!v129) {
        goto LABEL_64;
      }
LABEL_58:
      v273[0] = v107;
      sub_1DCFC4948(0, v129, 0);
      uint64_t v107 = (void *)v273[0];
      uint64_t v130 = v116 + 6;
      do
      {
        uint64_t v131 = *(v130 - 2);
        uint64_t v132 = *(v130 - 1);
        uint64_t v133 = *v130;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v134 = sub_1DCD9EAF0(v131, v132, v133);
        uint64_t v136 = v135;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v273[0] = v107;
        unint64_t v138 = v107[2];
        unint64_t v137 = v107[3];
        if (v138 >= v137 >> 1)
        {
          sub_1DCFC4948(v137 > 1, v138 + 1, 1);
          uint64_t v107 = (void *)v273[0];
        }
        v107[2] = v138 + 1;
        uint64_t v139 = &v107[2 * v138];
        v139[4] = v134;
        v139[5] = v136;
        v130 += 3;
        --v129;
      }
      while (v129);
      swift_bridgeObjectRelease();
      uint64_t v78 = (uint64_t)v264;
LABEL_65:
      MEMORY[0x1E01AE380](v107, MEMORY[0x1E4FBB1A0]);
      sub_1DD048548();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v140 = v277;
      unint64_t v141 = v278;
      sub_1DCFB2068((uint64_t)v272, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v142 = v275;
      char v143 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v144 = v261;
      uint64_t v145 = (uint64_t)v271;
      if ((v143 & 1) == 0)
      {
        sub_1DCFC4948(0, *(void *)(v142 + 16) + 1, 1);
        uint64_t v142 = v275;
      }
      unint64_t v147 = *(void *)(v142 + 16);
      unint64_t v146 = *(void *)(v142 + 24);
      if (v147 >= v146 >> 1)
      {
        sub_1DCFC4948(v146 > 1, v147 + 1, 1);
        uint64_t v142 = v275;
      }
      uint64_t v108 = v145 + 1;
      *(void *)(v142 + 16) = v147 + 1;
      uint64_t v148 = v142 + 16 * v147;
      *(void *)(v148 + 32) = v140;
      *(void *)(v148 + 40) = v141;
      uint64_t v107 = (void *)MEMORY[0x1E4FBC860];
      if ((char *)v108 == v144)
      {
        swift_bridgeObjectRelease();
        unint64_t v104 = v252;
        goto LABEL_73;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  sub_1DCD781D0(v279, v280);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void sub_1DCFAB314(double a1@<X0>, int a2@<W1>, double *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v128 = a4;
  LODWORD(v136) = a2;
  double v135 = a1;
  uint64_t v129 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85EF8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v127 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  uint64_t v131 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v130 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DD048068();
  uint64_t v132 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v112 - v23;
  CGFloat v25 = *a3;
  CGFloat v26 = a3[1];
  CGFloat v27 = a3[2];
  CGFloat v28 = a3[3];
  v146[0] = *a3;
  v146[1] = v26;
  v146[2] = v27;
  v146[3] = v28;
  uint64_t v29 = v137;
  sub_1DCE4E828(v135, v136, v146, &v138, a6, a7);
  if (!v29)
  {
    unint64_t v116 = v24;
    uint64_t v123 = v21;
    uint64_t v124 = v19;
    uint64_t v117 = 0;
    CGFloat v119 = v25;
    uint64_t v125 = v7;
    uint64_t v114 = v13;
    int64_t v122 = v18;
    long long v121 = (unint64_t *)v15;
    uint64_t v126 = v16;
    CGFloat v31 = v138;
    uint64_t v30 = *(void *)&v139;
    CGFloat v32 = v140;
    uint64_t v120 = *(void *)&v141;
    sub_1DCE92188(v142, v143, v144, v145);
    CGFloat v33 = MEMORY[0x1E4FBC868];
    CGFloat v138 = MEMORY[0x1E4FBC868];
    uint64_t v34 = *(void *)(*(void *)&v32 + 16);
    uint64_t v118 = v30;
    uint64_t v113 = *(void *)&v31;
    CGFloat v115 = v32;
    if (v34)
    {
      uint64_t v35 = *(void *)&v32 + 56;
      long long v134 = xmmword_1DD04E910;
      while (1)
      {
        uint64_t v37 = *(void *)(v35 - 24);
        CGFloat v39 = *(double *)(v35 - 16);
        CGFloat v38 = *(double *)(v35 - 8);
        CGFloat v41 = *(double *)v35;
        CGFloat v40 = *(double *)(v35 + 8);
        double v42 = *(double *)(v35 + 16);
        uint64_t v43 = *(void *)(v35 + 24);
        uint64_t v44 = *(void *)(v35 + 40);
        unint64_t v137 = *(uint8_t **)(v35 + 32);
        int v45 = *(_DWORD *)(v35 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_1DCEAD508(v39, v38, v41, v40);
        uint64_t v48 = *(void *)(*(void *)&v33 + 16);
        BOOL v49 = (v46 & 1) == 0;
        uint64_t v50 = v48 + v49;
        if (__OFADD__(v48, v49)) {
          break;
        }
        char v51 = v46;
        if (*(void *)(*(void *)&v33 + 24) < v50)
        {
          sub_1DCE831F4(v50, 1);
          CGFloat v33 = v138;
          unint64_t v52 = sub_1DCEAD508(v39, v38, v41, v40);
          if ((v51 & 1) != (v53 & 1)) {
            goto LABEL_40;
          }
          unint64_t v47 = v52;
        }
        if (v51)
        {
          double v135 = v42;
          uint64_t v136 = *(void *)&v33;
          uint64_t v54 = *(void *)(*(void *)&v33 + 56);
          uint64_t v55 = *(void **)(v54 + 8 * v47);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v133 = v54;
          *(void *)(v54 + 8 * v47) = v55;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v55 = sub_1DCE9DE38(0, v55[2] + 1, 1, v55);
            *(void *)(v133 + 8 * v47) = v55;
          }
          unint64_t v58 = v55[2];
          unint64_t v57 = v55[3];
          unint64_t v59 = v58 + 1;
          double v60 = v135;
          if (v58 >= v57 >> 1)
          {
            unint64_t v112 = v58 + 1;
            char v61 = sub_1DCE9DE38((void *)(v57 > 1), v58 + 1, 1, v55);
            unint64_t v59 = v112;
            uint64_t v55 = v61;
            *(void *)(v133 + 8 * v47) = v61;
          }
          v55[2] = v59;
          uint64_t v36 = (CGFloat *)&v55[10 * v58];
          *((void *)v36 + 4) = v37;
          double v36[5] = v39;
          v36[6] = v38;
          v36[7] = v41;
          v36[8] = v40;
          v36[9] = v60;
          *((void *)v36 + 10) = v43;
          *((void *)v36 + 11) = v137;
          *((void *)v36 + 12) = v44;
          *((_DWORD *)v36 + 26) = v45;
          CGFloat v33 = *(double *)&v136;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851A8);
          uint64_t v62 = swift_allocObject();
          *(_OWORD *)(v62 + 16) = v134;
          *(void *)(v62 + 32) = v37;
          *(CGFloat *)(v62 + 40) = v39;
          *(CGFloat *)(v62 + 48) = v38;
          *(CGFloat *)(v62 + 56) = v41;
          *(CGFloat *)(v62 + 64) = v40;
          *(double *)(v62 + 72) = v42;
          *(void *)(v62 + 80) = v43;
          *(void *)(v62 + 88) = v137;
          *(void *)(v62 + 96) = v44;
          *(_DWORD *)(v62 + 104) = v45;
          *(void *)(*(void *)&v33 + 8 * (v47 >> 6) + 64) |= 1 << v47;
          uint64_t v63 = (CGFloat *)(*(void *)(*(void *)&v33 + 48) + 32 * v47);
          *uint64_t v63 = v39;
          v63[1] = v38;
          v63[2] = v41;
          v63[3] = v40;
          *(void *)(*(void *)(*(void *)&v33 + 56) + 8 * v47) = v62;
          uint64_t v64 = *(void *)(*(void *)&v33 + 16);
          BOOL v65 = __OFADD__(v64, 1);
          uint64_t v66 = v64 + 1;
          if (v65) {
            goto LABEL_39;
          }
          *(void *)(*(void *)&v33 + 16) = v66;
        }
        v35 += 80;
        if (!--v34) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      sub_1DD049028();
      __break(1u);
LABEL_41:
      swift_release();
      __break(1u);
      return;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v67 = (uint64_t)v116;
    sub_1DCDB40EC((uint64_t)v116);
    uint64_t v68 = (uint64_t)v123;
    sub_1DCDB4300((uint64_t)v123);
    uint64_t v69 = v132 + 8;
    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
    uint64_t v71 = v124;
    v70(v67, v124);
    swift_retain_n();
    uint64_t v72 = sub_1DD048048();
    os_log_type_t v73 = sub_1DD048848();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v132 = v69;
      uint64_t v75 = (uint8_t *)v74;
      double v76 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)uint64_t v75 = 136315138;
      unint64_t v137 = v75 + 4;
      CGFloat v138 = v76;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F98);
      sub_1DCFB1610();
      uint64_t v77 = sub_1DD048318();
      unint64_t v79 = v78;
      swift_release();
      *(void *)&v146[0] = sub_1DCED7FA0(v77, v79, (uint64_t *)&v138);
      sub_1DD048A28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v72, v73, "Detected regions: %s", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](*(void *)&v76, -1, -1);
      MEMORY[0x1E01B07E0](v75, -1, -1);

      uint64_t v80 = ((uint64_t (*)(char *, uint64_t))v70)(v123, v124);
    }
    else
    {

      swift_release_n();
      uint64_t v80 = ((uint64_t (*)(uint64_t, uint64_t))v70)(v68, v71);
    }
    uint64_t v81 = v130;
    uint64_t v82 = v121;
    uint64_t v83 = v131;
    CGFloat v84 = v119;
    uint64_t v85 = v117;
    if (!*(void *)(*(void *)&v33 + 16))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v129, 1, 1, v126);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    MEMORY[0x1F4188790](v80);
    *(&v112 - 6) = v86;
    *((CGFloat *)&v112 - 5) = v84;
    *((CGFloat *)&v112 - 4) = v26;
    *((CGFloat *)&v112 - 3) = v27;
    *((CGFloat *)&v112 - 2) = v28;
    uint64_t v87 = v85;
    double v88 = COERCE_DOUBLE(sub_1DCFB1324(*(uint64_t *)&v33, (void (*)(_OWORD *, uint64_t))sub_1DCFB16CC, (uint64_t)(&v112 - 8)));
    swift_release();
    CGFloat v138 = v88;
    swift_bridgeObjectRetain();
    sub_1DCFA96B8((void **)&v138);
    if (v87) {
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
    uint64_t v89 = v128;
    uint64_t v90 = v120;
    unint64_t v137 = 0;
    uint64_t v136 = *(void *)&v138;
    if (v120)
    {
      int64_t v91 = *(void *)(v120 + 16);
      if (v91)
      {
        CGFloat v138 = MEMORY[0x1E4FBC860];
        sub_1DCFC49A8(0, v91, 0);
        double v92 = v138;
        uint64_t v93 = (_DWORD *)(v90 + 48);
        do
        {
          uint64_t v94 = *((void *)v93 - 2);
          uint64_t v95 = *((void *)v93 - 1);
          int v96 = *v93;
          CGFloat v138 = v92;
          unint64_t v98 = *(void *)(*(void *)&v92 + 16);
          unint64_t v97 = *(void *)(*(void *)&v92 + 24);
          swift_bridgeObjectRetain();
          if (v98 >= v97 >> 1)
          {
            sub_1DCFC49A8(v97 > 1, v98 + 1, 1);
            double v92 = v138;
          }
          v93 += 6;
          *(void *)(*(void *)&v92 + 16) = v98 + 1;
          unint64_t v99 = (void *)(*(void *)&v92 + 24 * v98);
          v99[4] = v94;
          v99[5] = v95;
          *((_DWORD *)v99 + 12) = v96;
          --v91;
        }
        while (v91);
        swift_bridgeObjectRelease();
        uint64_t v81 = v130;
        uint64_t v82 = v121;
        uint64_t v89 = v128;
      }
      else
      {
        swift_bridgeObjectRelease();
        double v92 = MEMORY[0x1E4FBC860];
      }
      uint64_t v90 = v118;
      uint64_t v83 = v131;
      uint64_t v100 = v113;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v100 = 0;
      double v92 = 0.0;
    }
    CGFloat v138 = v84;
    CGFloat v139 = v26;
    CGFloat v140 = v27;
    CGFloat v141 = v28;
    uint64_t v101 = v136;
    swift_retain();
    sub_1DCFAD0B4(v100, v90, *(uint64_t *)&v92, v101, (uint64_t *)&v138, (uint64_t)v122);
    sub_1DCD781D0(v100, v90);
    swift_release();
    uint64_t v102 = *(void *)(v89 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
         + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
    swift_beginAccess();
    uint64_t v103 = v127;
    sub_1DCD2889C(v102, v127, (uint64_t *)&unk_1EBE85EF8);
    uint64_t v104 = v114;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v103, 1, v114) == 1)
    {
      uint64_t v105 = MEMORY[0x1E4FBC860];
      *uint64_t v82 = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
      v82[1] = sub_1DCDB86BC(v105);
      v82[2] = sub_1DCDB86BC(v105);
      sub_1DD047BE8();
      int64_t v106 = (char *)v82 + *(int *)(v104 + 32);
      uint64_t v107 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 1, 1, v107);
      uint64_t v108 = sub_1DCD2479C(v103, (uint64_t *)&unk_1EBE85EF8);
    }
    else
    {
      uint64_t v108 = sub_1DCFB2000(v103, (uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
    }
    MEMORY[0x1F4188790](v108);
    uint64_t v109 = (uint64_t)v122;
    *(&v112 - 4) = (unint64_t)v122;
    *(&v112 - 3) = v101;
    *(&v112 - 2) = (unint64_t)v82;
    sub_1DCFB16FC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v110 = v129;
    uint64_t v111 = v126;
    sub_1DD047E78();
    swift_release();
    sub_1DCFB2068((uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
    sub_1DCFB2068(v109, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v110, 0, 1, v111);
  }
}

double sub_1DCFABF98@<D0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  double v12 = *a1;
  double v13 = a1[1];
  CGFloat v14 = a1[2];
  CGFloat v15 = a1[3];
  uint64_t v45 = a2;
  swift_bridgeObjectRetain();
  sub_1DCDC8E88(&v45);
  uint64_t v16 = v45;
  uint64_t v17 = *(void *)(v45 + 16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  double v44 = a7;
  if (v17)
  {
    swift_retain();
    uint64_t v42 = v16;
    uint64_t v19 = (uint64_t *)(v16 + 96);
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v21 = *(v19 - 3);
      uint64_t v22 = *(v19 - 2);
      uint64_t v23 = *(v19 - 1);
      uint64_t v24 = *v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1DCE9DD28(0, v20[2] + 1, 1, v20);
      }
      unint64_t v26 = v20[2];
      unint64_t v25 = v20[3];
      if (v26 >= v25 >> 1) {
        uint64_t v20 = sub_1DCE9DD28((void *)(v25 > 1), v26 + 1, 1, v20);
      }
      v20[2] = v26 + 1;
      CGFloat v27 = &v20[4 * v26];
      v27[4] = v21;
      v27[5] = v22;
      v27[6] = v23;
      v27[7] = v24;
      v19 += 10;
      --v17;
    }
    while (v17);
    uint64_t v16 = v42;
    swift_release();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
  }
  CGFloat v28 = v12 - a4;
  CGFloat v29 = v13 - a5;
  v46.origin.CGFloat x = v12;
  v46.origin.CGFloat y = v13;
  v46.size.width = v14;
  double v41 = v15;
  v46.size.height = v15;
  CGFloat Width = CGRectGetWidth(v46);
  v47.origin.CGFloat x = v12;
  v47.origin.CGFloat y = v13;
  v47.size.width = v14;
  v47.size.height = v15;
  CGFloat Height = CGRectGetHeight(v47);
  double v43 = v12;
  double v32 = 1.0 / a6;
  CGFloat v33 = 1.0 / a6 * v28;
  v48.origin.CGFloat x = v28;
  v48.origin.CGFloat y = v29;
  v48.size.width = Width;
  v48.size.height = Height;
  CGFloat v34 = v32 * CGRectGetWidth(v48);
  v49.origin.CGFloat x = v28;
  v49.origin.CGFloat y = v29;
  v49.size.width = Width;
  v49.size.height = Height;
  CGFloat v35 = 1.0 / v44 * CGRectGetHeight(v49);
  v50.origin.CGFloat x = v33;
  v50.origin.CGFloat y = 1.0 / v44 * v29;
  v50.size.width = v34;
  v50.size.height = v35;
  double v36 = CGRectGetWidth(v50);
  v51.origin.CGFloat x = v33;
  v51.origin.CGFloat y = 1.0 / v44 * v29;
  v51.size.width = v34;
  v51.size.height = v35;
  double v37 = CGRectGetHeight(v51);
  sub_1DCEC6548(v33, 1.0 / v44 * v29, v36, v37);
  *(float *)&CGFloat v34 = v38;
  uint64_t v39 = type metadata accessor for VisualUnderstanding.ImageRegion();
  sub_1DD046588();
  *(double *)a3 = v43;
  *(double *)(a3 + 8) = v13;
  double result = v41;
  *(CGFloat *)(a3 + 16) = v14;
  *(double *)(a3 + 24) = v41;
  *(unsigned char *)(a3 + 32) = 1;
  *(void *)(a3 + 40) = v20;
  *(void *)(a3 + 48) = v18;
  *(void *)(a3 + 56) = v16;
  *(void *)(a3 + 64) = v18;
  *(_DWORD *)(a3 + 72) = 0;
  *(_DWORD *)(a3 + 76) = LODWORD(v34);
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 80) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = v18;
  *(unsigned char *)(a3 + *(int *)(v39 + 64)) = 0;
  *(void *)(a3 + *(int *)(v39 + 68)) = v18;
  return result;
}

uint64_t sub_1DCFAC268(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v97 = sub_1DD048068();
  uint64_t v11 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  MEMORY[0x1F4188790](v12);
  CGFloat v14 = (char *)&v83 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v83 - v16;
  double v18 = *a2;
  double v19 = a2[1];
  double v20 = a2[2];
  double v21 = a2[3];
  sub_1DCD3A3BC(a1, (uint64_t)v105);
  v105[5] = v18;
  v105[6] = v19;
  v105[7] = v20;
  v105[8] = v21;
  char v106 = 0;
  uint64_t v107 = a4;
  uint64_t v22 = *(void *)(v5 + 16);
  if (*(unsigned char *)(v22 + 16))
  {
    if (*(unsigned char *)(v22 + 16) == 1)
    {
      swift_unknownObjectRetain();
      sub_1DCE4DC28(v105, a5, v108);
    }
    else
    {
      swift_unknownObjectRetain();
      sub_1DCE4E2C8((uint64_t)v105, a5, (uint64_t)v108);
    }
  }
  else
  {
    swift_unknownObjectRetain();
    sub_1DCE4D57C(v105, a5, (uint64_t)v108);
  }
  unint64_t v86 = v17;
  uint64_t v87 = v14;
  uint64_t v88 = a3;
  uint64_t v94 = v11;
  uint64_t v93 = 0;
  uint64_t v89 = v111;
  uint64_t v90 = v112;
  int64_t v91 = v113;
  double v92 = v114;
  uint64_t v23 = v109;
  uint64_t v85 = v108[0];
  v104[0] = (void *)MEMORY[0x1E4FBC868];
  uint64_t v24 = *(void *)(v109 + 16);
  uint64_t v96 = v110;
  uint64_t v100 = v109;
  uint64_t v95 = v108[1];
  if (v24)
  {
    double v84 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    unint64_t v26 = (void *)MEMORY[0x1E4FBC868];
    long long v99 = xmmword_1DD04E910;
    while (1)
    {
      uint64_t v28 = *(void *)(v23 + v25 + 32);
      CGFloat v30 = *(double *)(v23 + v25 + 40);
      CGFloat v29 = *(double *)(v23 + v25 + 48);
      CGFloat v32 = *(double *)(v23 + v25 + 56);
      CGFloat v31 = *(double *)(v23 + v25 + 64);
      uint64_t v34 = *(void *)(v23 + v25 + 72);
      uint64_t v33 = *(void *)(v23 + v25 + 80);
      uint64_t v35 = *(void *)(v23 + v25 + 96);
      uint64_t v102 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + v25 + 88);
      int v36 = *(_DWORD *)(v23 + v25 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_1DCEAD508(v30, v29, v32, v31);
      uint64_t v39 = v26[2];
      BOOL v40 = (v37 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        break;
      }
      char v42 = v37;
      if (v26[3] < v41)
      {
        sub_1DCE831F4(v41, 1);
        unint64_t v26 = v104[0];
        unint64_t v43 = sub_1DCEAD508(v30, v29, v32, v31);
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_39;
        }
        unint64_t v38 = v43;
      }
      if (v42)
      {
        uint64_t v101 = v26;
        uint64_t v45 = v26[7];
        CGRect v46 = *(void **)(v45 + 8 * v38);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v45 + 8 * v38) = v46;
        uint64_t v98 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          CGRect v46 = sub_1DCE9DE38(0, v46[2] + 1, 1, v46);
          *(void *)(v45 + 8 * v38) = v46;
        }
        unint64_t v49 = v46[2];
        unint64_t v48 = v46[3];
        if (v49 >= v48 >> 1)
        {
          CGRect v46 = sub_1DCE9DE38((void *)(v48 > 1), v49 + 1, 1, v46);
          *(void *)(v98 + 8 * v38) = v46;
        }
        v46[2] = v49 + 1;
        CGFloat v27 = (CGFloat *)&v46[10 * v49];
        *((void *)v27 + 4) = v28;
        v27[5] = v30;
        v27[6] = v29;
        v27[7] = v32;
        v27[8] = v31;
        *((void *)v27 + 9) = v34;
        *((void *)v27 + 10) = v33;
        *((void *)v27 + 11) = v102;
        *((void *)v27 + 12) = v35;
        *((_DWORD *)v27 + 26) = v36;
        uint64_t v23 = v100;
        unint64_t v26 = v101;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851A8);
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = v99;
        *(void *)(v50 + 32) = v28;
        *(CGFloat *)(v50 + 40) = v30;
        *(CGFloat *)(v50 + 48) = v29;
        *(CGFloat *)(v50 + 56) = v32;
        *(CGFloat *)(v50 + 64) = v31;
        *(void *)(v50 + 72) = v34;
        *(void *)(v50 + 80) = v33;
        *(void *)(v50 + 88) = v102;
        *(void *)(v50 + 96) = v35;
        *(_DWORD *)(v50 + 104) = v36;
        v26[(v38 >> 6) + 8] |= 1 << v38;
        CGRect v51 = (CGFloat *)(v26[6] + 32 * v38);
        *CGRect v51 = v30;
        v51[1] = v29;
        void v51[2] = v32;
        v51[3] = v31;
        *(void *)(v26[7] + 8 * v38) = v50;
        uint64_t v52 = v26[2];
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_38;
        }
        int64x2_t v26[2] = v54;
      }
      v25 += 80;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v97;
        double v18 = v84;
        uint64_t v56 = (uint64_t)v26;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    sub_1DD049028();
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v56 = MEMORY[0x1E4FBC868];
  uint64_t v55 = v97;
LABEL_23:
  uint64_t v57 = (uint64_t)v86;
  sub_1DCDB40EC((uint64_t)v86);
  uint64_t v58 = (uint64_t)v87;
  sub_1DCDB4300((uint64_t)v87);
  unint64_t v59 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v59(v57, v55);
  swift_retain_n();
  double v60 = sub_1DD048048();
  os_log_type_t v61 = sub_1DD048848();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = swift_slowAlloc();
    uint64_t v102 = (uint64_t (*)(uint64_t, uint64_t))v59;
    uint64_t v63 = (uint8_t *)v62;
    uint64_t v101 = (void *)swift_slowAlloc();
    v104[0] = v101;
    *(_DWORD *)uint64_t v63 = 136315138;
    *(void *)&long long v99 = v63 + 4;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F98);
    sub_1DCFB1610();
    uint64_t v64 = sub_1DD048318();
    unint64_t v66 = v65;
    swift_release();
    uint64_t v103 = sub_1DCED7FA0(v64, v66, (uint64_t *)v104);
    sub_1DD048A28();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v60, v61, "Detected regions: %s", v63, 0xCu);
    uint64_t v67 = v101;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v67, -1, -1);
    MEMORY[0x1E01B07E0](v63, -1, -1);

    uint64_t v68 = v102(v58, v97);
  }
  else
  {

    swift_release_n();
    uint64_t v68 = ((uint64_t (*)(uint64_t, uint64_t))v59)(v58, v55);
  }
  MEMORY[0x1F4188790](v68);
  *(&v83 - 6) = v88;
  *((double *)&v83 - 5) = v18;
  *((double *)&v83 - 4) = v19;
  *((double *)&v83 - 3) = v20;
  *((double *)&v83 - 2) = v21;
  uint64_t v69 = v93;
  uint64_t v70 = (void *)sub_1DCFB1324(v56, (void (*)(_OWORD *, uint64_t))sub_1DCFAFF9C, (uint64_t)(&v83 - 8));
  swift_release();
  v104[0] = v70;
  swift_bridgeObjectRetain();
  sub_1DCFA96B8(v104);
  uint64_t v71 = v96;
  if (v69)
  {
LABEL_40:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v72 = v104[0];
  if (v71)
  {
    int64_t v73 = *(void *)(v71 + 16);
    if (v73)
    {
      v104[0] = (void *)MEMORY[0x1E4FBC860];
      sub_1DCFC49A8(0, v73, 0);
      uint64_t v74 = v104[0];
      uint64_t v75 = (_DWORD *)(v71 + 48);
      do
      {
        uint64_t v77 = *((void *)v75 - 2);
        uint64_t v76 = *((void *)v75 - 1);
        int v78 = *v75;
        v104[0] = v74;
        unint64_t v79 = v74[2];
        unint64_t v80 = v74[3];
        swift_bridgeObjectRetain();
        if (v79 >= v80 >> 1)
        {
          sub_1DCFC49A8(v80 > 1, v79 + 1, 1);
          uint64_t v74 = v104[0];
        }
        v75 += 6;
        v74[2] = v79 + 1;
        uint64_t v81 = &v74[3 * v79];
        v81[4] = v77;
        v81[5] = v76;
        *((_DWORD *)v81 + 12) = v78;
        --v73;
      }
      while (v73);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCE92188(v89, v90, v91, v92);
    sub_1DCF96D54((uint64_t)v105);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1DCE92188(v89, v90, v91, v92);
    sub_1DCF96D54((uint64_t)v105);
  }
  return (uint64_t)v72;
}

double sub_1DCFACDE8@<D0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  double v12 = *a1;
  double v13 = a1[1];
  CGFloat v14 = a1[2];
  CGFloat v15 = a1[3];
  uint64_t v45 = a2;
  swift_bridgeObjectRetain();
  sub_1DCDC8E88(&v45);
  uint64_t v16 = v45;
  uint64_t v17 = *(void *)(v45 + 16);
  uint64_t v18 = MEMORY[0x1E4FBC860];
  double v44 = a7;
  if (v17)
  {
    swift_retain();
    uint64_t v42 = v16;
    double v19 = (uint64_t *)(v16 + 96);
    double v20 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v21 = *(v19 - 3);
      uint64_t v22 = *(v19 - 2);
      uint64_t v23 = *(v19 - 1);
      uint64_t v24 = *v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v20 = sub_1DCE9DD28(0, v20[2] + 1, 1, v20);
      }
      unint64_t v26 = v20[2];
      unint64_t v25 = v20[3];
      if (v26 >= v25 >> 1) {
        double v20 = sub_1DCE9DD28((void *)(v25 > 1), v26 + 1, 1, v20);
      }
      v20[2] = v26 + 1;
      CGFloat v27 = &v20[4 * v26];
      v27[4] = v21;
      v27[5] = v22;
      v27[6] = v23;
      v27[7] = v24;
      v19 += 10;
      --v17;
    }
    while (v17);
    uint64_t v16 = v42;
    swift_release();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  else
  {
    double v20 = (void *)MEMORY[0x1E4FBC860];
  }
  CGFloat v28 = v12 - a4;
  CGFloat v29 = v13 - a5;
  v46.origin.CGFloat x = v12;
  v46.origin.CGFloat y = v13;
  v46.size.width = v14;
  double v41 = v15;
  v46.size.height = v15;
  CGFloat Width = CGRectGetWidth(v46);
  v47.origin.CGFloat x = v12;
  v47.origin.CGFloat y = v13;
  v47.size.width = v14;
  v47.size.height = v15;
  CGFloat Height = CGRectGetHeight(v47);
  double v43 = v12;
  double v32 = 1.0 / a6;
  CGFloat v33 = 1.0 / a6 * v28;
  v48.origin.CGFloat x = v28;
  v48.origin.CGFloat y = v29;
  v48.size.width = Width;
  v48.size.height = Height;
  CGFloat v34 = v32 * CGRectGetWidth(v48);
  v49.origin.CGFloat x = v28;
  v49.origin.CGFloat y = v29;
  v49.size.width = Width;
  v49.size.height = Height;
  CGFloat v35 = 1.0 / v44 * CGRectGetHeight(v49);
  v50.origin.CGFloat x = v33;
  v50.origin.CGFloat y = 1.0 / v44 * v29;
  v50.size.width = v34;
  v50.size.height = v35;
  double v36 = CGRectGetWidth(v50);
  v51.origin.CGFloat x = v33;
  v51.origin.CGFloat y = 1.0 / v44 * v29;
  v51.size.width = v34;
  v51.size.height = v35;
  double v37 = CGRectGetHeight(v51);
  sub_1DCEC6548(v33, 1.0 / v44 * v29, v36, v37);
  *(float *)&CGFloat v34 = v38;
  uint64_t v39 = type metadata accessor for VisualUnderstanding.ImageRegion();
  sub_1DD046588();
  *(double *)a3 = v43;
  *(double *)(a3 + 8) = v13;
  double result = v41;
  *(CGFloat *)(a3 + 16) = v14;
  *(double *)(a3 + 24) = v41;
  *(unsigned char *)(a3 + 32) = 1;
  *(void *)(a3 + 40) = v20;
  *(void *)(a3 + 48) = v18;
  *(void *)(a3 + 56) = v16;
  *(void *)(a3 + 64) = v18;
  *(_DWORD *)(a3 + 72) = 0;
  *(_DWORD *)(a3 + 76) = LODWORD(v34);
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 80) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  *(void *)(a3 + 112) = v18;
  *(unsigned char *)(a3 + *(int *)(v39 + 64)) = 0;
  *(void *)(a3 + *(int *)(v39 + 68)) = v18;
  return result;
}

uint64_t sub_1DCFAD0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v135 = a4;
  uint64_t v118 = a3;
  uint64_t v121 = a2;
  uint64_t v117 = a1;
  uint64_t v128 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v113 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  double v12 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DD048068();
  uint64_t v139 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v131 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v126 = (uint64_t)&v110 - v15;
  uint64_t v137 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v141 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v125 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v115 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v110 = (uint64_t)&v110 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v119 = (uint64_t)&v110 - v22;
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v142 = *(void *)(v23 - 8);
  uint64_t v143 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v114 = (uint64_t *)((char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  unint64_t v112 = (char *)&v110 - v26;
  MEMORY[0x1F4188790](v27);
  CGFloat v29 = (uint64_t *)((char *)&v110 - v28);
  MEMORY[0x1F4188790](v30);
  uint64_t v120 = (char *)&v110 - v31;
  uint64_t v136 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
  uint64_t v130 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v111 = (uint64_t *)((char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v33);
  uint64_t v129 = (uint64_t)&v110 - v34;
  uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  double v38 = (uint64_t *)((char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  MEMORY[0x1F4188790](v39);
  double v41 = (char *)&v110 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *a5;
  uint64_t v43 = a5[1];
  uint64_t v44 = a5[2];
  uint64_t v45 = a5[3];
  sub_1DD047BE8();
  uint64_t v46 = (uint64_t)&v41[v39[5]];
  CGRect v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v116 = v35;
  v47(v46, 1, 1, v35);
  CGRect v48 = *(void (**)(void))(v142 + 56);
  CGFloat v140 = &v41[v39[6]];
  uint64_t v49 = v121;
  uint64_t v133 = v48;
  uint64_t v134 = v142 + 56;
  v48();
  uint64_t v127 = v39;
  uint64_t v50 = v39[7];
  CGFloat v138 = v41;
  uint64_t v51 = (uint64_t)&v41[v50];
  uint64_t v52 = *(void (**)(void))(v141 + 56);
  uint64_t v123 = v51;
  v141 += 56;
  uint64_t v124 = v52;
  v52();
  if (v49)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = v118;
    swift_bridgeObjectRetain();
    sub_1DCD4648C(v117, v49, v53, v38);
    sub_1DCD2479C(v46, &qword_1EBE86500);
    sub_1DCFB2000((uint64_t)v38, v46, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    v47(v46, 0, 1, v116);
  }
  uint64_t v54 = *(void *)(*((void *)v122 + 2) + 136);
  unint64_t v55 = MEMORY[0x1E4FBC860];
  if (v54)
  {
    uint64_t v56 = OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelInfo;
    uint64_t v57 = type metadata accessor for MLModelInfo(0);
    uint64_t v58 = *(void *)(v54 + *(int *)(v57 + 24) + v56 + 8);
    MEMORY[0x1F4188790](v57);
    *(&v110 - 2) = v59;
    *(&v110 - 1) = v58;
    sub_1DCFB16FC(&qword_1EBE865C8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    swift_bridgeObjectRetain();
    uint64_t v60 = v136;
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    uint64_t v61 = v119;
    sub_1DCD2889C((uint64_t)v140, v119, &qword_1EBE864D0);
    uint64_t v62 = v143;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v61, 1, v143) == 1)
    {
      uint64_t v63 = v120;
      *(void *)uint64_t v120 = 0;
      *((void *)v63 + 1) = 0xE000000000000000;
      *((void *)v63 + 2) = v55;
      sub_1DD047BE8();
      uint64_t v64 = v130;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(&v63[*(int *)(v62 + 28)], 1, 1, v60);
      sub_1DCD2479C(v61, &qword_1EBE864D0);
    }
    else
    {
      uint64_t v63 = v120;
      sub_1DCFB2000(v61, (uint64_t)v120, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
      uint64_t v64 = v130;
    }
    uint64_t v65 = (uint64_t)&v63[*(int *)(v62 + 28)];
    sub_1DCD2479C(v65, &qword_1EBE865E8);
    sub_1DCFB2000(v129, v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v65, 0, 1, v60);
    uint64_t v66 = (uint64_t)v140;
    sub_1DCD2479C((uint64_t)v140, &qword_1EBE864D0);
    sub_1DCFB2000((uint64_t)v63, v66, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v133)(v66, 0, 1, v62);
  }
  else
  {
    uint64_t v62 = v143;
    uint64_t v60 = v136;
    uint64_t v64 = v130;
  }
  *CGFloat v29 = 0;
  v29[1] = 0xE000000000000000;
  uint64_t v67 = swift_bridgeObjectRetain();
  sub_1DD047BE8();
  uint64_t v68 = (char *)v29 + *(int *)(v62 + 28);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
  uint64_t v129 = v64 + 56;
  int64_t v122 = v69;
  v69(v68, 1, 1, v60);
  v29[2] = v55;
  uint64_t v70 = *(void *)(v67 + 16);
  if (v70)
  {
    uint64_t v71 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    uint64_t v72 = (long long *)(v67
                     + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80)));
    uint64_t v73 = *(void *)(v71 + 72);
    do
    {
      sub_1DCD47078(v72, (uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v55 = sub_1DCE9E890(0, *(void *)(v55 + 16) + 1, 1, v55);
      }
      unint64_t v75 = *(void *)(v55 + 16);
      unint64_t v74 = *(void *)(v55 + 24);
      if (v75 >= v74 >> 1) {
        unint64_t v55 = sub_1DCE9E890(v74 > 1, v75 + 1, 1, v55);
      }
      *(void *)(v55 + 16) = v75 + 1;
      sub_1DCFB2000((uint64_t)v12, v55+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v75, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
      uint64_t v72 = (long long *)((char *)v72 + v73);
      --v70;
    }
    while (v70);
    swift_bridgeObjectRelease();
    v29[2] = v55;
    uint64_t v62 = v143;
    uint64_t v60 = v136;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v76 = (uint64_t)v140;
  sub_1DCD2479C((uint64_t)v140, &qword_1EBE864D0);
  sub_1DCFB2000((uint64_t)v29, v76, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  uint64_t v77 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v133)(v76, 0, 1, v62);
  MEMORY[0x1F4188790](v77);
  *(&v110 - 4) = v42;
  *(&v110 - 3) = v43;
  *(&v110 - 2) = v44;
  *(&v110 - 1) = v45;
  sub_1DCFB16FC(&qword_1EBE86550, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  uint64_t v78 = (uint64_t)v125;
  uint64_t v79 = v137;
  sub_1DD047E78();
  uint64_t v80 = v123;
  sub_1DCD2479C(v123, &qword_1EBE86570);
  sub_1DCFB2000(v78, v80, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v124)(v80, 0, 1, v79);
  uint64_t v81 = v126;
  sub_1DCDB40EC(v126);
  uint64_t v82 = v131;
  sub_1DCDB4300(v131);
  uint64_t v83 = v139 + 8;
  double v84 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
  uint64_t v85 = v132;
  v84(v81, v132);
  unint64_t v86 = sub_1DD048048();
  os_log_type_t v87 = sub_1DD048848();
  if (os_log_type_enabled(v86, v87))
  {
    uint64_t v88 = swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    uint64_t v144 = v141;
    *(_DWORD *)uint64_t v88 = 136315394;
    uint64_t v89 = v138;
    swift_beginAccess();
    uint64_t v90 = (uint64_t)&v89[v127[6]];
    uint64_t v91 = v110;
    sub_1DCD2889C(v90, v110, &qword_1EBE864D0);
    double v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    v142 += 48;
    if (v92(v91, 1, v62) == 1)
    {
      uint64_t v93 = v112;
      *(void *)unint64_t v112 = 0;
      *((void *)v93 + 1) = 0xE000000000000000;
      *((void *)v93 + 2) = MEMORY[0x1E4FBC860];
      sub_1DD047BE8();
      v122(&v93[*(int *)(v62 + 28)], 1, 1, v60);
      sub_1DCD2479C(v91, &qword_1EBE864D0);
    }
    else
    {
      uint64_t v93 = v112;
      sub_1DCFB2000(v91, (uint64_t)v112, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    }
    uint64_t v94 = v113;
    sub_1DCD2889C((uint64_t)&v93[*(int *)(v62 + 28)], v113, &qword_1EBE865E8);
    int v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v94, 1, v60);
    uint64_t v139 = v83;
    uint64_t v96 = v111;
    if (v95 == 1)
    {
      *uint64_t v111 = 0;
      v96[1] = 0xE000000000000000;
      v96[2] = 0;
      v96[3] = 0xE000000000000000;
      sub_1DD047BE8();
      sub_1DCD2479C(v94, &qword_1EBE865E8);
    }
    else
    {
      sub_1DCFB2000(v94, (uint64_t)v111, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    }
    sub_1DCFB2068((uint64_t)v93, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    uint64_t v97 = (uint64_t)v96;
    uint64_t v98 = *v96;
    unint64_t v99 = v96[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_1DCFB2068(v97, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    uint64_t v145 = sub_1DCED7FA0(v98, v99, &v144);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 12) = 2080;
    uint64_t v100 = v138;
    swift_beginAccess();
    uint64_t v101 = (uint64_t)&v100[v127[6]];
    uint64_t v102 = v115;
    sub_1DCD2889C(v101, v115, &qword_1EBE864D0);
    uint64_t v103 = v143;
    if (v92(v102, 1, v143) == 1)
    {
      uint64_t v104 = v114;
      *uint64_t v114 = 0;
      v104[1] = 0xE000000000000000;
      v104[2] = MEMORY[0x1E4FBC860];
      sub_1DD047BE8();
      v122((char *)v104 + *(int *)(v103 + 28), 1, 1, v136);
      sub_1DCD2479C(v102, &qword_1EBE864D0);
    }
    else
    {
      uint64_t v104 = v114;
      sub_1DCFB2000(v102, (uint64_t)v114, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    }
    uint64_t v105 = *v104;
    unint64_t v106 = v104[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_1DCFB2068((uint64_t)v104, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    uint64_t v145 = sub_1DCED7FA0(v105, v106, &v144);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v86, v87, "Populate cached intermediate results: Detection %s DPN %s", (uint8_t *)v88, 0x16u);
    uint64_t v107 = v141;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v107, -1, -1);
    MEMORY[0x1E01B07E0](v88, -1, -1);

    v84(v131, v132);
  }
  else
  {

    v84(v82, v85);
  }
  uint64_t v108 = (uint64_t)v138;
  swift_beginAccess();
  sub_1DCFB1664(v108, v128, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  return sub_1DCFB2068(v108, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
}

char *sub_1DCFAE1EC(uint64_t *a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v122 = a5;
  uint64_t v123 = a1;
  uint64_t v118 = sub_1DD048068();
  uint64_t v115 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v117 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v112 = (uint64_t)&v105 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v109 = (uint64_t)&v105 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v108 = (uint64_t)&v105 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v110 = (uint64_t)&v105 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v116 = (uint64_t)&v105 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v111 = (uint64_t)&v105 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v121 = (void (*)(uint64_t, uint64_t))((char *)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v119 = *(void *)(v120 - 8);
  double v26 = MEMORY[0x1F4188790](v120);
  uint64_t v127 = (uint64_t)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a3;
  uint64_t v29 = a3[1];
  uint64_t v30 = a3[2];
  uint64_t v31 = a3[3];
  uint64_t v113 = a4;
  uint64_t v32 = (char *)objc_msgSend(a4, sel_preferredMetalDevice, v26);
  uint64_t v129 = v28;
  uint64_t v130 = v29;
  uint64_t v131 = v30;
  uint64_t v132 = v31;
  uint64_t v33 = *(void *)(v6 + 24);
  uint64_t v106 = a2;
  uint64_t v105 = v33;
  uint64_t v34 = sub_1DCFAC268(a2, (double *)&v129, v33, (uint64_t)v32, a6);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v129 = v28;
  uint64_t v130 = v29;
  uint64_t v131 = v30;
  uint64_t v132 = v31;
  uint64_t v107 = a6;
  uint64_t v114 = v6;
  uint64_t v40 = sub_1DCFAED7C(v35, v37, v39, v34, &v129, v32, a6);
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_1DCD781D0(v36, v38);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v125 = v42;
  uint64_t v126 = v40;
  uint64_t v124 = v44;
  uint64_t v47 = v127;
  uint64_t v48 = v122;
  uint64_t v49 = (uint64_t)v121;
  uint64_t v50 = v120;
  uint64_t v51 = v119;
  uint64_t v52 = *(void *)(v48 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__refineConfig;
  swift_beginAccess();
  sub_1DCD2889C(v52, v49, (uint64_t *)&unk_1EBE84C08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50) == 1)
  {
    *(unsigned char *)uint64_t v47 = 0;
    *(_DWORD *)(v47 + 16) = 0;
    *(void *)(v47 + 4) = 0;
    *(unsigned char *)(v47 + 12) = 0;
    sub_1DD047BE8();
    uint64_t v53 = v47 + *(int *)(v50 + 40);
    uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
    sub_1DCD2479C(v49, (uint64_t *)&unk_1EBE84C08);
  }
  else
  {
    sub_1DCFB2000(v49, v47, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  }
  unint64_t v55 = (void (**)(uint64_t, uint64_t))(v115 + 8);
  if (*(unsigned char *)v47 == 1)
  {
    uint64_t v122 = v46;
    uint64_t v56 = v111;
    sub_1DCDB40EC(v111);
    sub_1DCDB4300(v116);
    uint64_t v57 = *v55;
    uint64_t v58 = v118;
    (*v55)(v56, v118);
    uint64_t v59 = sub_1DD048048();
    os_log_type_t v60 = sub_1DD048848();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl(&dword_1DCCF9000, v59, v60, "Enable to refine region.", v61, 2u);
      MEMORY[0x1E01B07E0](v61, -1, -1);
    }

    v57(v116, v58);
    type metadata accessor for VisualIntelligenceService(0);
    uint64_t v128 = *(void *)(v114 + 32);
    swift_bridgeObjectRetain();
    uint64_t v63 = v125;
    uint64_t v62 = (uint64_t)v126;
    uint64_t v64 = v55;
    uint64_t v65 = v58;
    sub_1DCEA58D0(v125, v124, v122, &v128, v113, v127, (CGFloat *)&v129);
    swift_bridgeObjectRelease();
    if (v134)
    {
      uint64_t v66 = v108;
      sub_1DCDB40EC(v108);
      uint64_t v67 = v109;
      sub_1DCDB4300(v109);
      v57(v66, v58);
      uint64_t v68 = sub_1DD048048();
      os_log_type_t v69 = sub_1DD048848();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v70 = 0;
        _os_log_impl(&dword_1DCCF9000, v68, v69, "No refined region, reuse triggering models results.", v70, 2u);
        MEMORY[0x1E01B07E0](v70, -1, -1);
      }

      v57(v67, v58);
      uint64_t v71 = v123;
      uint64_t v72 = v126;
      uint64_t v47 = v127;
    }
    else
    {
      uint64_t v120 = (uint64_t)v64;
      uint64_t v121 = v57;
      LODWORD(v119) = v133;
      uint64_t v80 = v131;
      uint64_t v79 = v132;
      uint64_t v81 = v129;
      uint64_t v82 = v130;
      sub_1DCD781D0(v62, v63);
      swift_bridgeObjectRelease();
      uint64_t v83 = v110;
      sub_1DCDB40EC(v110);
      double v84 = sub_1DD048048();
      os_log_type_t v85 = sub_1DD048848();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = swift_slowAlloc();
        uint64_t v87 = swift_slowAlloc();
        uint64_t v128 = v87;
        *(_DWORD *)uint64_t v86 = 136315394;
        uint64_t v129 = v81;
        uint64_t v130 = v82;
        uint64_t v131 = v80;
        uint64_t v132 = v79;
        int v133 = v119;
        uint64_t v88 = sub_1DD048498();
        uint64_t v129 = sub_1DCED7FA0(v88, v89, &v128);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v86 + 12) = 2080;
        uint64_t v129 = v28;
        uint64_t v130 = v29;
        uint64_t v131 = v30;
        uint64_t v132 = v31;
        uint64_t v90 = NormalizedRect.loggingDescription.getter();
        uint64_t v129 = sub_1DCED7FA0(v90, v91, &v128);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v84, v85, "Refined region %s is different from input region %s, rerun triggering models.", (uint8_t *)v86, 0x16u);
        swift_arrayDestroy();
        uint64_t v92 = v87;
        uint64_t v47 = v127;
        MEMORY[0x1E01B07E0](v92, -1, -1);
        MEMORY[0x1E01B07E0](v86, -1, -1);

        v121(v83, v65);
        uint64_t v93 = v107;
        uint64_t v94 = v106;
        uint64_t v95 = v105;
        uint64_t v96 = &selRef_parseCameraFrameWithVisualQuery_completion_;
        uint64_t v31 = v79;
      }
      else
      {

        v121(v83, v58);
        uint64_t v93 = v107;
        uint64_t v94 = v106;
        uint64_t v95 = v105;
        uint64_t v96 = &selRef_parseCameraFrameWithVisualQuery_completion_;
        uint64_t v31 = v79;
        uint64_t v47 = v127;
      }
      uint64_t v30 = v80;
      uint64_t v29 = v82;
      uint64_t v28 = v81;
      uint64_t v97 = (char *)[v113 v96[370]];
      uint64_t v129 = v81;
      uint64_t v130 = v82;
      uint64_t v131 = v80;
      uint64_t v132 = v31;
      uint64_t v98 = sub_1DCFAC268(v94, (double *)&v129, v95, (uint64_t)v97, v93);
      uint64_t v100 = v99;
      uint64_t v102 = v101;
      uint64_t v129 = v81;
      uint64_t v130 = v82;
      uint64_t v131 = v80;
      uint64_t v132 = v31;
      uint64_t v72 = sub_1DCFAED7C(v99, v101, v103, v98, &v129, v97, v93);
      sub_1DCD781D0(v100, v102);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v71 = v123;
    }
  }
  else
  {
    uint64_t v73 = v112;
    sub_1DCDB40EC(v112);
    sub_1DCDB4300(v117);
    unint64_t v74 = *v55;
    uint64_t v75 = v118;
    (*v55)(v73, v118);
    uint64_t v76 = sub_1DD048048();
    os_log_type_t v77 = sub_1DD048848();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_1DCCF9000, v76, v77, "Disable to refine region.", v78, 2u);
      MEMORY[0x1E01B07E0](v78, -1, -1);
    }

    v74(v117, v75);
    uint64_t v71 = v123;
    uint64_t v72 = v126;
  }
  sub_1DCFB2068(v47, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  *uint64_t v71 = v28;
  v71[1] = v29;
  v71[2] = v30;
  v71[3] = v31;
  return v72;
}

char *sub_1DCFAED7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, char *a6, uint64_t a7)
{
  uint64_t v76 = a7;
  uint64_t v78 = a6;
  uint64_t v81 = a4;
  uint64_t v12 = sub_1DD048068();
  uint64_t v80 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v67 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v67 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v67 - v20;
  MEMORY[0x1F4188790](v22);
  if (*(void *)(v7 + 40))
  {
    uint64_t v73 = v24;
    os_log_t v71 = (os_log_t)((char *)&v67 - v23);
    uint64_t v25 = *a5;
    uint64_t v26 = a5[1];
    uint64_t v28 = a5[2];
    uint64_t v27 = a5[3];
    sub_1DCD2889C(v7 + 48, (uint64_t)&v82, (uint64_t *)&unk_1EBE859E0);
    if (v84)
    {
      uint64_t v70 = v12;
      os_log_type_t v69 = v21;
      sub_1DCD3A4DC(&v82, (uint64_t)v93);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = 0u;
      uint64_t v68 = (uint8_t *)(v29 + 16);
      *(_OWORD *)(v29 + 32) = 0u;
      *(void *)&long long v82 = a1;
      *((void *)&v82 + 1) = a2;
      uint64_t v83 = a3;
      uint64_t v84 = v81;
      uint64_t v85 = v25;
      uint64_t v86 = v26;
      uint64_t v87 = v28;
      uint64_t v88 = v27;
      uint64_t v18 = v78;
      unint64_t v89 = v78;
      uint64_t v30 = swift_allocObject();
      swift_weakInit();
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v30;
      *(void *)(v31 + 24) = v29;
      swift_retain();
      uint64_t v72 = a1;
      unint64_t v74 = (char *)a2;
      uint64_t v75 = a3;
      sub_1DCD55D64(a1, a2);
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v77;
      sub_1DCD77268(&v82, v76, (uint64_t)sub_1DCFAFDA8, v31, v90);
      if (v32)
      {
        swift_release();
        swift_release();
        swift_release();
        sub_1DCD781D0(v72, (uint64_t)v74);
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
      }
      else
      {
        os_log_type_t v77 = (void *)v29;
        swift_release();
        swift_release();
        uint64_t v46 = v93[4];
        __swift_project_boxed_opaque_existential_1(v93, v93[3]);
        uint64_t v48 = v91;
        uint64_t v47 = v92;
        __swift_project_boxed_opaque_existential_1(v90, v91);
        (*(void (**)(uint64_t, uint64_t))(v47 + 16))(v48, v47);
        (*(void (**)(void))(v46 + 8))();
        uint64_t v76 = 0;
        swift_bridgeObjectRelease();
        uint64_t v49 = v70;
        uint64_t v50 = v80;
        uint64_t v18 = v74;
        uint64_t v51 = v77;
        swift_beginAccess();
        uint64_t v52 = v51[5];
        if (v52)
        {
          uint64_t v18 = (char *)v51[2];
          uint64_t v53 = v51[3];
          uint64_t v54 = v51[4];
          sub_1DCD55D64((uint64_t)v18, v53);
          swift_bridgeObjectRetain();
          os_log_t v55 = v71;
          sub_1DCDB40EC((uint64_t)v71);
          sub_1DCDB4300((uint64_t)v69);
          uint64_t v57 = *(void (**)(char *, uint64_t))(v50 + 8);
          uint64_t v56 = v50 + 8;
          uint64_t v73 = v57;
          v57((char *)v55, v49);
          sub_1DCD55D64((uint64_t)v18, v53);
          swift_bridgeObjectRetain();
          sub_1DCD55D64((uint64_t)v18, v53);
          swift_bridgeObjectRetain();
          uint64_t v58 = sub_1DD048048();
          os_log_type_t v59 = sub_1DD048848();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v80 = v56;
            os_log_type_t v60 = (uint8_t *)swift_slowAlloc();
            uint64_t v61 = swift_slowAlloc();
            os_log_t v71 = v58;
            *(_DWORD *)os_log_type_t v60 = 136315138;
            uint64_t v94 = v61;
            uint64_t v62 = v61;
            uint64_t v68 = v60 + 4;
            *(void *)&long long v82 = v18;
            *((void *)&v82 + 1) = v53;
            uint64_t v83 = v54;
            uint64_t v84 = v52;
            sub_1DCD55D64((uint64_t)v18, v53);
            swift_bridgeObjectRetain();
            uint64_t v63 = sub_1DD048498();
            *(void *)&long long v82 = sub_1DCED7FA0(v63, v64, &v94);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            sub_1DCD781D0((uint64_t)v18, v53);
            swift_bridgeObjectRelease();
            sub_1DCD781D0((uint64_t)v18, v53);
            swift_bridgeObjectRelease();
            os_log_t v65 = v71;
            _os_log_impl(&dword_1DCCF9000, v71, v59, "domain prediction net results %s", v60, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v62, -1, -1);
            MEMORY[0x1E01B07E0](v60, -1, -1);
            sub_1DCD781D0(v72, (uint64_t)v74);

            swift_release();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v73(v69, v70);
          }
          else
          {
            sub_1DCD781D0((uint64_t)v18, v53);
            swift_bridgeObjectRelease();
            sub_1DCD781D0((uint64_t)v18, v53);
            swift_bridgeObjectRelease();
            sub_1DCD781D0(v72, (uint64_t)v74);

            swift_release();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            v73(v69, v49);
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
        }
        else
        {
          sub_1DCD3A548();
          swift_allocError();
          *(void *)uint64_t v66 = 0xD000000000000022;
          *(void *)(v66 + 8) = 0x80000001DD070040;
          *(unsigned char *)(v66 + 16) = 4;
          swift_willThrow();
          sub_1DCD781D0(v72, (uint64_t)v18);
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
        }
      }
    }
    else
    {
      swift_retain();
      sub_1DCD2479C((uint64_t)&v82, (uint64_t *)&unk_1EBE859E0);
      sub_1DCDB40EC((uint64_t)v18);
      uint64_t v39 = sub_1DD048048();
      os_log_type_t v40 = sub_1DD048858();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = v12;
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl(&dword_1DCCF9000, v39, v40, "domain prediction model handler initialized failed", v42, 2u);
        uint64_t v43 = v42;
        uint64_t v12 = v41;
        MEMORY[0x1E01B07E0](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v80 + 8))(v18, v12);
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v44 = 0xD000000000000032;
      *(void *)(v44 + 8) = 0x80000001DD070000;
      *(unsigned char *)(v44 + 16) = 6;
      swift_willThrow();
      swift_release();
    }
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v15);
    uint64_t v33 = sub_1DD048048();
    os_log_type_t v34 = sub_1DD048858();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = v12;
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1DCCF9000, v33, v34, "domain prediction model loading failed", v36, 2u);
      uint64_t v37 = v36;
      uint64_t v12 = v35;
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v80 + 8))(v15, v12);
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v38 = 0xD000000000000026;
    *(void *)(v38 + 8) = 0x80000001DD06FFD0;
    *(unsigned char *)(v38 + 16) = 6;
    swift_willThrow();
  }
  return v18;
}

uint64_t sub_1DCFAF8AC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1DCFAFDB0(a1, (uint64_t)&v37);
  uint64_t v5 = v37;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v35 - v11;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    sub_1DCFAFDB0(a1, (uint64_t)v38);
    if (v39 == 1)
    {
      id v14 = v5;
      sub_1DCDB40EC((uint64_t)v12);
      id v15 = v5;
      id v16 = v5;
      uint64_t v17 = sub_1DD048048();
      os_log_type_t v18 = sub_1DD048858();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v36[0] = v20;
        *(_DWORD *)uint64_t v19 = 136446210;
        v35[1] = v19 + 4;
        swift_getErrorValue();
        uint64_t v21 = sub_1DCDC4040(v35[4], v35[5]);
        v35[2] = sub_1DCED7FA0(v21, v22, v36);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCFAFE58(a1);
        sub_1DCFAFE58(a1);
        _os_log_impl(&dword_1DCCF9000, v17, v18, "Domain prediction net error: %{public}s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v20, -1, -1);
        MEMORY[0x1E01B07E0](v19, -1, -1);

        sub_1DCFAFE58(a1);
      }
      else
      {
        sub_1DCFAFE58(a1);
        sub_1DCFAFE58(a1);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    else
    {
      uint64_t v27 = v38[0];
      uint64_t v28 = v38[1];
      uint64_t v29 = v38[2];
      uint64_t v30 = v38[3];
      swift_beginAccess();
      uint64_t v31 = a3[2];
      uint64_t v32 = a3[3];
      uint64_t v33 = a3[4];
      uint64_t v34 = a3[5];
      a3[2] = v27;
      a3[3] = v28;
      a3[4] = v29;
      a3[5] = v30;
      sub_1DCD55D64(v27, v28);
      swift_bridgeObjectRetain();
      return sub_1DCFAFE18(v31, v32, v33, v34);
    }
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v9);
    uint64_t v23 = sub_1DD048048();
    os_log_type_t v24 = sub_1DD048858();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_1DCCF9000, v23, v24, "domain prediction net self disappeared", v25, 2u);
      MEMORY[0x1E01B07E0](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1DCFAFC54()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DCD2479C(v0 + 48, (uint64_t *)&unk_1EBE859E0);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TriggeringModelProcessor()
{
  return self;
}

uint64_t sub_1DCFAFCD8()
{
  if (*(void *)(v0 + 40))
  {
    if (*(void *)(v0 + 24))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DCFAFD30()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCFAFD68()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCFAFDA8(uint64_t a1)
{
  return sub_1DCFAF8AC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1DCFAFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCFAFE18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1DCD781D0(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCFAFE58(uint64_t a1)
{
  return a1;
}

void sub_1DCFAFE90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    sub_1DCD781D0((uint64_t)a1, a2);
    swift_bridgeObjectRelease();
  }
}

void sub_1DCFAFEDC(CGFloat *a1)
{
  CGFloat v3 = v1[2];
  CGFloat v4 = v1[3];
  CGFloat v5 = v1[4];
  CGFloat v6 = v1[5];
  *a1 = v3;
  a1[1] = v4;
  v7.origin.CGFloat x = v3;
  v7.origin.CGFloat y = v4;
  v7.size.width = v5;
  v7.size.height = v6;
  a1[2] = CGRectGetWidth(v7);
  v8.origin.CGFloat x = v3;
  v8.origin.CGFloat y = v4;
  v8.size.width = v5;
  v8.size.height = v6;
  a1[3] = CGRectGetHeight(v8);
}

uint64_t sub_1DCFAFF50(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCFAFF9C(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB16E4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, double, double, double, double))sub_1DCFACDE8);
}

void sub_1DCFAFFB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v135 = (uint64_t)&v122 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v122 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v138 = (uint64_t)&v122 - v12;
  uint64_t v137 = a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = sub_1DD048F68();
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_151;
    }
    if (v13) {
      sub_1DCFB0AAC(0, v13, 1, v137);
    }
  }
  else
  {
    if (v13 >= 0) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = v13 + 1;
    }
    if (v13 < -1)
    {
LABEL_159:
      sub_1DD048C98();
      __break(1u);
      return;
    }
    uint64_t v125 = v14;
    if (v13 >= 2)
    {
      uint64_t v16 = v15 >> 1;
      uint64_t v17 = sub_1DD0486F8();
      *(void *)(v17 + 16) = v16;
      uint64_t v18 = *(unsigned __int8 *)(v131 + 80);
      uint64_t v124 = v17;
      unint64_t v130 = v17 + ((v18 + 32) & ~v18);
LABEL_12:
      uint64_t v20 = 0;
      uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
      char v134 = v10;
      while (1)
      {
        uint64_t v21 = v20;
        if (v20 + 1 >= v13)
        {
          uint64_t v31 = v20 + 1;
        }
        else
        {
          uint64_t v22 = *v137;
          uint64_t v23 = v20;
          uint64_t v24 = *(void *)(v131 + 72);
          uint64_t v133 = v20 + 1;
          uint64_t v25 = v138;
          sub_1DCFB1664(v22 + v24 * (v20 + 1), v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v127 = v22;
          uint64_t v136 = v24;
          uint64_t v26 = v22 + v24 * v23;
          uint64_t v21 = v23;
          sub_1DCFB1664(v26, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v27 = *(void *)(v25 + 56);
          if (!*(void *)(v27 + 16)) {
            goto LABEL_148;
          }
          uint64_t v28 = *((void *)v10 + 7);
          if (!*(void *)(v28 + 16)) {
            goto LABEL_149;
          }
          float v29 = *(float *)(v27 + 104);
          float v30 = *(float *)(v28 + 104);
          sub_1DCFB2068((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFB2068(v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v31 = v23 + 2;
          if (v23 + 2 < v13)
          {
            uint64_t v128 = v23;
            uint64_t v126 = v19;
            v133 *= v136;
            uint64_t v32 = v127;
            uint64_t v33 = v136 * v31;
            do
            {
              uint64_t v34 = v138;
              sub_1DCFB1664(v32 + v33, v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v35 = (uint64_t)v134;
              sub_1DCFB1664(v32 + v133, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v36 = *(void *)(v34 + 56);
              if (!*(void *)(v36 + 16)) {
                goto LABEL_130;
              }
              uint64_t v37 = *(void *)(v35 + 56);
              if (!*(void *)(v37 + 16)) {
                goto LABEL_131;
              }
              BOOL v38 = *(float *)(v37 + 104) >= *(float *)(v36 + 104);
              sub_1DCFB2068(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCFB2068(v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if (v30 < v29 == v38) {
                goto LABEL_23;
              }
              v32 += v136;
              ++v31;
            }
            while (v13 != v31);
            uint64_t v31 = v13;
LABEL_23:
            uint64_t v19 = v126;
            uint64_t v10 = v134;
            uint64_t v21 = v128;
          }
          if (v30 < v29)
          {
            if (v31 < v21) {
              goto LABEL_154;
            }
            if (v21 < v31)
            {
              uint64_t v123 = v13;
              uint64_t v126 = v19;
              uint64_t v39 = 0;
              uint64_t v40 = v136 * (v31 - 1);
              uint64_t v41 = v31 * v136;
              uint64_t v128 = v21;
              uint64_t v42 = v21 * v136;
              do
              {
                if (v21 != v31 + v39 - 1)
                {
                  uint64_t v44 = v127;
                  if (!v127) {
                    goto LABEL_157;
                  }
                  uint64_t v45 = v31;
                  unint64_t v46 = v127 + v42;
                  uint64_t v133 = v127 + v40;
                  sub_1DCFB2000(v127 + v42, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v42 < v40 || v46 >= v44 + v41)
                  {
                    uint64_t v43 = v133;
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else
                  {
                    uint64_t v43 = v133;
                    if (v42 != v40) {
                      swift_arrayInitWithTakeBackToFront();
                    }
                  }
                  sub_1DCFB2000(v129, v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  uint64_t v31 = v45;
                }
                ++v21;
                --v39;
                v40 -= v136;
                v41 -= v136;
                v42 += v136;
              }
              while (v21 < v31 + v39);
              uint64_t v19 = v126;
              uint64_t v10 = v134;
              uint64_t v21 = v128;
              uint64_t v13 = v123;
              if (v31 >= v123) {
                goto LABEL_60;
              }
              goto LABEL_39;
            }
          }
        }
        if (v31 >= v13) {
          goto LABEL_60;
        }
LABEL_39:
        if (__OFSUB__(v31, v21)) {
          goto LABEL_150;
        }
        if (v31 - v21 >= v125) {
          goto LABEL_60;
        }
        if (__OFADD__(v21, v125)) {
          goto LABEL_152;
        }
        if (v21 + v125 >= v13) {
          uint64_t v47 = v13;
        }
        else {
          uint64_t v47 = v21 + v125;
        }
        if (v47 < v21) {
          goto LABEL_153;
        }
        if (v31 == v47) {
          goto LABEL_60;
        }
        uint64_t v127 = v47;
        uint64_t v128 = v21;
        uint64_t v126 = v19;
        uint64_t v123 = v2;
        uint64_t v48 = *(void *)(v131 + 72);
        uint64_t v136 = v48 * (v31 - 1);
        uint64_t v133 = v48;
        uint64_t v49 = v31 * v48;
        while (2)
        {
          uint64_t v50 = 0;
          uint64_t v51 = v128;
          while (1)
          {
            uint64_t v52 = v31;
            uint64_t v53 = *v137;
            uint64_t v54 = v138;
            sub_1DCFB1664(v49 + v50 + *v137, v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v55 = v136 + v50 + v53;
            uint64_t v56 = (uint64_t)v134;
            sub_1DCFB1664(v55, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v57 = *(void *)(v54 + 56);
            if (!*(void *)(v57 + 16))
            {
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            uint64_t v58 = *(void *)(v56 + 56);
            if (!*(void *)(v58 + 16)) {
              goto LABEL_125;
            }
            float v59 = *(float *)(v57 + 104);
            float v60 = *(float *)(v58 + 104);
            sub_1DCFB2068(v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCFB2068(v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 >= v59) {
              break;
            }
            uint64_t v61 = *v137;
            if (!*v137) {
              goto LABEL_155;
            }
            uint64_t v31 = v52;
            uint64_t v62 = v61 + v136 + v50;
            sub_1DCFB2000(v61 + v49 + v50, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            swift_arrayInitWithTakeFrontToBack();
            sub_1DCFB2000(v135, v62, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            v50 -= v133;
            if (v52 == ++v51) {
              goto LABEL_49;
            }
          }
          uint64_t v31 = v52;
LABEL_49:
          ++v31;
          v136 += v133;
          v49 += v133;
          if (v31 != v127) {
            continue;
          }
          break;
        }
        uint64_t v31 = v127;
        uint64_t v2 = v123;
        uint64_t v19 = v126;
        uint64_t v10 = v134;
        uint64_t v21 = v128;
LABEL_60:
        if (v31 < v21) {
          goto LABEL_147;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1DCD71FDC(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v64 = *((void *)v19 + 2);
        unint64_t v63 = *((void *)v19 + 3);
        unint64_t v65 = v64 + 1;
        uint64_t v136 = v31;
        if (v64 >= v63 >> 1) {
          uint64_t v19 = sub_1DCD71FDC((char *)(v63 > 1), v64 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v65;
        uint64_t v66 = v19 + 32;
        uint64_t v67 = &v19[16 * v64 + 32];
        uint64_t v68 = v136;
        *(void *)uint64_t v67 = v21;
        *((void *)v67 + 1) = v68;
        if (v64)
        {
          while (1)
          {
            unint64_t v69 = v65 - 1;
            if (v65 >= 4)
            {
              unint64_t v74 = &v66[16 * v65];
              uint64_t v75 = *((void *)v74 - 8);
              uint64_t v76 = *((void *)v74 - 7);
              BOOL v80 = __OFSUB__(v76, v75);
              uint64_t v77 = v76 - v75;
              if (v80) {
                goto LABEL_132;
              }
              uint64_t v79 = *((void *)v74 - 6);
              uint64_t v78 = *((void *)v74 - 5);
              BOOL v80 = __OFSUB__(v78, v79);
              uint64_t v72 = v78 - v79;
              char v73 = v80;
              if (v80) {
                goto LABEL_133;
              }
              unint64_t v81 = v65 - 2;
              long long v82 = &v66[16 * v65 - 32];
              uint64_t v84 = *(void *)v82;
              uint64_t v83 = *((void *)v82 + 1);
              BOOL v80 = __OFSUB__(v83, v84);
              uint64_t v85 = v83 - v84;
              if (v80) {
                goto LABEL_135;
              }
              BOOL v80 = __OFADD__(v72, v85);
              uint64_t v86 = v72 + v85;
              if (v80) {
                goto LABEL_138;
              }
              if (v86 >= v77)
              {
                uint64_t v104 = &v66[16 * v69];
                uint64_t v106 = *(void *)v104;
                uint64_t v105 = *((void *)v104 + 1);
                BOOL v80 = __OFSUB__(v105, v106);
                uint64_t v107 = v105 - v106;
                if (v80) {
                  goto LABEL_142;
                }
                BOOL v97 = v72 < v107;
                goto LABEL_97;
              }
            }
            else
            {
              if (v65 != 3)
              {
                uint64_t v98 = *((void *)v19 + 4);
                uint64_t v99 = *((void *)v19 + 5);
                BOOL v80 = __OFSUB__(v99, v98);
                uint64_t v91 = v99 - v98;
                char v92 = v80;
                goto LABEL_91;
              }
              uint64_t v71 = *((void *)v19 + 4);
              uint64_t v70 = *((void *)v19 + 5);
              BOOL v80 = __OFSUB__(v70, v71);
              uint64_t v72 = v70 - v71;
              char v73 = v80;
            }
            if (v73) {
              goto LABEL_134;
            }
            unint64_t v81 = v65 - 2;
            uint64_t v87 = &v66[16 * v65 - 32];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v90 = __OFSUB__(v88, v89);
            uint64_t v91 = v88 - v89;
            char v92 = v90;
            if (v90) {
              goto LABEL_137;
            }
            uint64_t v93 = &v66[16 * v69];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v80 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v80) {
              goto LABEL_140;
            }
            if (__OFADD__(v91, v96)) {
              goto LABEL_141;
            }
            if (v91 + v96 >= v72)
            {
              BOOL v97 = v72 < v96;
LABEL_97:
              if (v97) {
                unint64_t v69 = v81;
              }
              goto LABEL_99;
            }
LABEL_91:
            if (v92) {
              goto LABEL_136;
            }
            uint64_t v100 = &v66[16 * v69];
            uint64_t v102 = *(void *)v100;
            uint64_t v101 = *((void *)v100 + 1);
            BOOL v80 = __OFSUB__(v101, v102);
            uint64_t v103 = v101 - v102;
            if (v80) {
              goto LABEL_139;
            }
            if (v103 < v91) {
              goto LABEL_108;
            }
LABEL_99:
            unint64_t v108 = v69 - 1;
            if (v69 - 1 >= v65) {
              goto LABEL_126;
            }
            if (!*v137) {
              goto LABEL_156;
            }
            uint64_t v109 = v19;
            uint64_t v110 = &v66[16 * v108];
            uint64_t v111 = *(void *)v110;
            uint64_t v112 = &v66[16 * v69];
            uint64_t v113 = *((void *)v112 + 1);
            sub_1DCFB0D78(*v137 + *(void *)(v131 + 72) * *(void *)v110, *v137 + *(void *)(v131 + 72) * *(void *)v112, *v137 + *(void *)(v131 + 72) * v113, v130);
            if (v2) {
              goto LABEL_122;
            }
            if (v113 < v111) {
              goto LABEL_127;
            }
            if (v69 > *((void *)v109 + 2)) {
              goto LABEL_128;
            }
            *(void *)uint64_t v110 = v111;
            *(void *)&v66[16 * v108 + 8] = v113;
            unint64_t v114 = *((void *)v109 + 2);
            if (v69 >= v114) {
              goto LABEL_129;
            }
            uint64_t v19 = v109;
            unint64_t v65 = v114 - 1;
            memmove(&v66[16 * v69], v112 + 16, 16 * (v114 - 1 - v69));
            *((void *)v109 + 2) = v114 - 1;
            uint64_t v10 = v134;
            if (v114 <= 2) {
              goto LABEL_108;
            }
          }
        }
        unint64_t v65 = 1;
LABEL_108:
        uint64_t v13 = v137[1];
        uint64_t v20 = v136;
        if (v136 >= v13) {
          goto LABEL_111;
        }
      }
    }
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v130 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
    uint64_t v124 = MEMORY[0x1E4FBC860];
    if (v13 == 1) {
      goto LABEL_12;
    }
    unint64_t v65 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_111:
    uint64_t v115 = v19;
    if (v65 >= 2)
    {
      uint64_t v116 = *v137;
      while (1)
      {
        unint64_t v117 = v65 - 2;
        if (v65 < 2) {
          break;
        }
        if (!v116) {
          goto LABEL_158;
        }
        uint64_t v118 = *(void *)&v115[16 * v117 + 32];
        uint64_t v119 = *(void *)&v115[16 * v65 + 24];
        sub_1DCFB0D78(v116 + *(void *)(v131 + 72) * v118, v116 + *(void *)(v131 + 72) * *(void *)&v115[16 * v65 + 16], v116 + *(void *)(v131 + 72) * v119, v130);
        if (v2) {
          goto LABEL_122;
        }
        if (v119 < v118) {
          goto LABEL_144;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v115 = sub_1DCD729EC((uint64_t)v115);
        }
        if (v117 >= *((void *)v115 + 2)) {
          goto LABEL_145;
        }
        uint64_t v120 = &v115[16 * v117 + 32];
        *(void *)uint64_t v120 = v118;
        *((void *)v120 + 1) = v119;
        unint64_t v121 = *((void *)v115 + 2);
        if (v65 > v121) {
          goto LABEL_146;
        }
        memmove(&v115[16 * v65 + 16], &v115[16 * v65 + 32], 16 * (v121 - v65));
        *((void *)v115 + 2) = v121 - 1;
        unint64_t v65 = v121 - 1;
        if (v121 <= 2) {
          goto LABEL_122;
        }
      }
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
      goto LABEL_159;
    }
LABEL_122:
    swift_bridgeObjectRelease();
    *(void *)(v124 + 16) = 0;
    swift_bridgeObjectRelease();
  }
}

void sub_1DCFB0AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v32 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v25 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v30 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v33 = v14 * (v30 - 1);
    uint64_t v29 = v14;
    uint64_t v15 = v14 * v30;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v27;
    while (1)
    {
      uint64_t v18 = *v32;
      sub_1DCFB1664(v15 + v16 + *v32, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFB1664(v33 + v16 + v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v19 = *((void *)v13 + 7);
      if (!*(void *)(v19 + 16)) {
        break;
      }
      uint64_t v20 = *((void *)v9 + 7);
      if (!*(void *)(v20 + 16)) {
        goto LABEL_13;
      }
      float v21 = *(float *)(v19 + 104);
      float v22 = *(float *)(v20 + 104);
      sub_1DCFB2068((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFB2068((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v22 < v21)
      {
        uint64_t v23 = *v32;
        if (!*v32) {
          goto LABEL_14;
        }
        uint64_t v24 = v23 + v33 + v16;
        sub_1DCFB2000(v23 + v15 + v16, v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        swift_arrayInitWithTakeFrontToBack();
        sub_1DCFB2000(v31, v24, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        v16 -= v29;
        if (v30 != ++v17) {
          continue;
        }
      }
      v33 += v29;
      v15 += v29;
      if (++v30 == v26) {
        return;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

uint64_t sub_1DCFB0D78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v41 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v41);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_68;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v44 = a1;
  unint64_t v43 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v42 = a4 + v19;
      unint64_t v44 = a2;
      unint64_t v40 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        while (1)
        {
          sub_1DCFB1664(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v31 = a2 - v14;
          sub_1DCFB1664(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v32 = *((void *)v12 + 7);
          if (!*(void *)(v32 + 16)) {
            goto LABEL_64;
          }
          uint64_t v33 = *((void *)v9 + 7);
          if (!*(void *)(v33 + 16)) {
            goto LABEL_66;
          }
          unint64_t v34 = a3 - v14;
          float v35 = *(float *)(v32 + 104);
          float v36 = *(float *)(v33 + 104);
          sub_1DCFB2068((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFB2068((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v36 >= v35)
          {
            unint64_t v37 = v42;
            v42 -= v14;
            if (a3 < v37 || v34 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v31 = a2;
          }
          else
          {
            if (a3 < a2 || v34 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v44 -= v14;
          }
          unint64_t v29 = v42;
          if (v42 > a4)
          {
            a2 = v31;
            a3 -= v14;
            if (v31 > v40) {
              continue;
            }
          }
          break;
        }
      }
LABEL_62:
      sub_1DCD720D8(&v44, &v43, (uint64_t *)&v42);
      return 1;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v42 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_1DCFB1664(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFB1664(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v22 = *((void *)v12 + 7);
        if (!*(void *)(v22 + 16)) {
          break;
        }
        uint64_t v23 = *((void *)v9 + 7);
        if (!*(void *)(v23 + 16)) {
          goto LABEL_65;
        }
        float v24 = *(float *)(v22 + 104);
        float v25 = *(float *)(v23 + 104);
        sub_1DCFB2068((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFB2068((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v26 = v44;
        if (v25 >= v24)
        {
          unint64_t v28 = v43 + v14;
          if (v44 < v43 || v44 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 != v43)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v43 = v28;
          unint64_t v27 = a2;
        }
        else
        {
          unint64_t v27 = a2 + v14;
          if (v44 < a2 || v44 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v44 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v44 = v26 + v14;
        a4 = v43;
        if (v43 < v20)
        {
          a2 = v27;
          if (v27 < a3) {
            continue;
          }
        }
        goto LABEL_62;
      }
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    goto LABEL_62;
  }
LABEL_70:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFB129C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1DCFB1324(uint64_t a1, void (*a2)(_OWORD *, uint64_t), uint64_t a3)
{
  float v35 = a2;
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v29 = v3;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1DCFC49E8(0, v8, 0);
  uint64_t v9 = v39;
  uint64_t result = sub_1DCFB129C(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  uint64_t v30 = a1 + 80;
  int64_t v31 = v8;
  uint64_t v32 = v11;
  uint64_t v33 = a1 + 64;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_24;
    }
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    uint64_t v19 = (_OWORD *)(*(void *)(a1 + 48) + 32 * v12);
    long long v20 = v19[1];
    v37[0] = *v19;
    v37[1] = v20;
    uint64_t v38 = v18;
    swift_bridgeObjectRetain();
    v35(v37, v18);
    swift_bridgeObjectRelease();
    uint64_t v39 = v9;
    uint64_t v21 = (uint64_t)v7;
    unint64_t v23 = *(void *)(v9 + 16);
    unint64_t v22 = *(void *)(v9 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1DCFC49E8(v22 > 1, v23 + 1, 1);
      uint64_t v9 = v39;
    }
    *(void *)(v9 + 16) = v23 + 1;
    uint64_t result = sub_1DCFB2000(v21, v9+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    int64_t v15 = 1 << *(unsigned char *)(a1 + 32);
    if (v12 >= v15) {
      goto LABEL_25;
    }
    uint64_t v14 = v33;
    uint64_t v24 = *(void *)(v33 + 8 * v17);
    if ((v24 & (1 << v12)) == 0) {
      goto LABEL_26;
    }
    LODWORD(v11) = v32;
    if (*(_DWORD *)(a1 + 36) != v32) {
      goto LABEL_27;
    }
    unint64_t v7 = (char *)v21;
    unint64_t v25 = v24 & (-2 << (v12 & 0x3F));
    if (v25)
    {
      int64_t v15 = __clz(__rbit64(v25)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v31;
    }
    else
    {
      unint64_t v26 = v17 + 1;
      unint64_t v27 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v31;
      if (v17 + 1 < v27)
      {
        unint64_t v28 = *(void *)(v33 + 8 * v26);
        if (v28)
        {
LABEL_20:
          int64_t v15 = __clz(__rbit64(v28)) + (v26 << 6);
        }
        else
        {
          while (v27 - 2 != v17)
          {
            unint64_t v28 = *(void *)(v30 + 8 * v17++);
            if (v28)
            {
              unint64_t v26 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v13;
    uint64_t v12 = v15;
    if (v13 == v16) {
      return v9;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1DCFB1610()
{
  unint64_t result = qword_1EBE84A98;
  if (!qword_1EBE84A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A98);
  }
  return result;
}

uint64_t sub_1DCFB1664(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFB16CC(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB16E4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, double, double, double, double))sub_1DCFABF98);
}

uint64_t sub_1DCFB16E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, double, double, double, double))
{
  return a3(a1, a2, *(void *)(v3 + 16), *(double *)(v3 + 24), *(double *)(v3 + 32), *(double *)(v3 + 40), *(double *)(v3 + 48));
}

uint64_t sub_1DCFB16FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCFB1744(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v33 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  int64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
  MEMORY[0x1F4188790](v13 - 8);
  int64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v29 = *a2;
  uint64_t v28 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v19 = *(int *)(v28 + 20);
  uint64_t v31 = a1;
  uint64_t v20 = a1 + v19;
  sub_1DCD2889C(v20, (uint64_t)v18, &qword_1EBE86500);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a2) = v21(v18, 1, v9);
  sub_1DCD2479C((uint64_t)v18, &qword_1EBE86500);
  uint64_t v35 = 0;
  if (a2 != 1)
  {
    sub_1DCD2889C(v20, (uint64_t)v15, &qword_1EBE86500);
    if (v21(v15, 1, v9) == 1)
    {
      *uint64_t v12 = 0;
      v12[1] = 0xE000000000000000;
      void v12[2] = MEMORY[0x1E4FBC860];
      sub_1DD047BE8();
      sub_1DCD2479C((uint64_t)v15, &qword_1EBE86500);
    }
    else
    {
      sub_1DCFB2000((uint64_t)v15, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    }
    uint64_t v35 = sub_1DCD46688();
    sub_1DCFB2068((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  }
  uint64_t v22 = v33;
  sub_1DCD2889C(v31 + *(int *)(v28 + 24), v33, &qword_1EBE864D0);
  uint64_t v23 = v32;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v22, 1, v32) == 1)
  {
    *int64_t v8 = 0;
    v8[1] = 0xE000000000000000;
    v8[2] = MEMORY[0x1E4FBC860];
    sub_1DD047BE8();
    uint64_t v24 = (char *)v8 + *(int *)(v23 + 28);
    uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
    sub_1DCD2479C(v22, &qword_1EBE864D0);
  }
  else
  {
    sub_1DCFB2000(v22, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  }
  uint64_t v36 = v29;
  sub_1DCD47D80(&v36, v34);
  sub_1DCFB2068((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  return v35;
}

unint64_t sub_1DCFB1B94(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a3;
  uint64_t v52 = a5;
  uint64_t v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v45 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v45 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v45 - v20;
  if (!a4)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v49 = v19;
  uint64_t v22 = *a2;
  uint64_t v23 = a2[1];
  uint64_t v24 = a2[2];
  uint64_t v25 = a2[3];
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    uint64_t v45 = v11;
    unint64_t v46 = v14;
    unint64_t v54 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v27 = a1 + v54;
    uint64_t v50 = a4;
    sub_1DCD55D64(v51, a4);
    uint64_t v47 = v9;
    uint64_t v48 = a1;
    uint64_t v28 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    char v29 = 0;
    unint64_t v30 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1DCFB1664(v27, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21[104] == 1)
      {
        uint64_t v31 = *((void *)v21 + 10);
        uint64_t v32 = *((void *)v21 + 11);
        unint64_t v53 = v30;
        uint64_t v33 = v50;
        swift_bridgeObjectRetain();
        uint64_t v34 = v17;
        uint64_t v35 = v52;
        swift_bridgeObjectRetain();
        sub_1DCD781D0(v31, v32);
        *((void *)v21 + 10) = v51;
        *((void *)v21 + 11) = v33;
        unint64_t v30 = v53;
        char v29 = 1;
        *((void *)v21 + 12) = v35;
        uint64_t v17 = v34;
      }
      sub_1DCFB1664((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v30 = sub_1DCE9D7A0(0, *(void *)(v30 + 16) + 1, 1, v30);
      }
      unint64_t v37 = *(void *)(v30 + 16);
      unint64_t v36 = *(void *)(v30 + 24);
      if (v37 >= v36 >> 1) {
        unint64_t v30 = sub_1DCE9D7A0(v36 > 1, v37 + 1, 1, v30);
      }
      *(void *)(v30 + 16) = v37 + 1;
      sub_1DCFB2000((uint64_t)v17, v30 + v54 + v37 * v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFB2068((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v30;
    }
    uint64_t v14 = v46;
    uint64_t v9 = v47;
    uint64_t v11 = v45;
    a4 = v50;
    uint64_t v38 = v52;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = v52;
    swift_bridgeObjectRetain();
    unint64_t v30 = MEMORY[0x1E4FBC860];
  }
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v40 = v49;
  sub_1DD046588();
  *(void *)uint64_t v14 = v22;
  *((void *)v14 + 1) = v23;
  *((void *)v14 + 2) = v24;
  *((void *)v14 + 3) = v25;
  v14[32] = 1;
  *((void *)v14 + 5) = v39;
  *((void *)v14 + 6) = v39;
  *((void *)v14 + 7) = v39;
  *((void *)v14 + 8) = v39;
  uint64_t v41 = v51;
  *((void *)v14 + 9) = 0;
  *((void *)v14 + 10) = v41;
  *((void *)v14 + 11) = a4;
  *((void *)v14 + 12) = v38;
  v14[104] = 1;
  *((void *)v14 + 14) = v39;
  v14[*(int *)(v40 + 64)] = 0;
  *(void *)&v14[*(int *)(v40 + 68)] = v39;
  sub_1DCFB1664((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v30 = sub_1DCE9D7A0(0, *(void *)(v30 + 16) + 1, 1, v30);
  }
  unint64_t v43 = *(void *)(v30 + 16);
  unint64_t v42 = *(void *)(v30 + 24);
  if (v43 >= v42 >> 1) {
    unint64_t v30 = sub_1DCE9D7A0(v42 > 1, v43 + 1, 1, v30);
  }
  *(void *)(v30 + 16) = v43 + 1;
  sub_1DCFB2000((uint64_t)v11, v30+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCFB2068((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return v30;
}

uint64_t sub_1DCFB2000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFB2068(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for TriggeringModelProcessor.ModelResults(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TriggeringModelProcessor.ModelResults(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (v4)
  {
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TriggeringModelProcessor.ModelResults(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCE6DC50((uint64_t)a1);
      uint64_t v5 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
  }
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TriggeringModelProcessor.ModelResults(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_1DCE6DC50(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggeringModelProcessor.ModelResults(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TriggeringModelProcessor.ModelResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggeringModelProcessor.ModelResults()
{
  return &type metadata for TriggeringModelProcessor.ModelResults;
}

BOOL sub_1DCFB2384(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2) {
    a1 = qword_1DD062C18[a1];
  }
  if (a4) {
    a3 = qword_1DD062C18[a3];
  }
  return a1 == a3;
}

BOOL sub_1DCFB23A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_1DCFB23B4(char a1, char a2)
{
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 120;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 121;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6874646977;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x746867696568;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE100000000000000;
  uint64_t v6 = 120;
  switch(a2)
  {
    case 1:
      if (v4 == 121) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x6874646977;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xE600000000000000;
      if (v4 == 0x746867696568) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DCFB2500(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6573726170;
    }
    else {
      uint64_t v3 = 0x686372616573;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6573726170;
      }
      else {
        uint64_t v6 = 0x686372616573;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x636972656E6567;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x636972656E6567)
  {
LABEL_21:
    char v8 = sub_1DD048FA8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCFB260C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000017;
  unint64_t v3 = 0x80000001DD066D90;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000017;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD00000000000001ALL;
      uint64_t v6 = "VISUAL_INTELLIGENCE_NATURE";
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0xD000000000000018;
      uint64_t v6 = "VISUAL_INTELLIGENCE_PETS";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD00000000000001CLL;
      uint64_t v6 = "VISUAL_INTELLIGENCE_VICTORIA";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000023;
      uint64_t v6 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001DD066D90;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD00000000000001ALL;
      char v8 = "VISUAL_INTELLIGENCE_NATURE";
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0xD000000000000018;
      char v8 = "VISUAL_INTELLIGENCE_PETS";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD00000000000001CLL;
      char v8 = "VISUAL_INTELLIGENCE_VICTORIA";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD000000000000023;
      char v8 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DCFB2790(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6F73736572707365;
    }
    else {
      uint64_t v3 = 13669;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE200000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6F73736572707365;
      }
      else {
        uint64_t v6 = 13669;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE200000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x6E6F69736976;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x6E6F69736976)
  {
LABEL_21:
    char v8 = sub_1DD048FA8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCFB288C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF6E6F6974636574;
  uint64_t v3 = 0x65447463656A626FLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x65447463656A626FLL;
  unint64_t v6 = 0xEF6E6F6974636574;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x80000001DD066960;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x64656966696E75;
      break;
    case 3:
      unint64_t v5 = 0x6F7765727574616ELL;
      unint64_t v6 = 0xEB00000000646C72;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x6C657261707061;
      break;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1685024614;
      break;
    case 6:
      unint64_t v5 = 0x626D79536E676973;
      unint64_t v6 = 0xEA00000000006C6FLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x80000001DD066960;
      if (v5 == 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x64656966696E75) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xEB00000000646C72;
      if (v5 != 0x6F7765727574616ELL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x6C657261707061) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1685024614;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xEA00000000006C6FLL;
      if (v5 != 0x626D79536E676973) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DCFB2B00(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6567616D69;
  }
  else {
    uint64_t v3 = 0x7463656A626FLL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6567616D69;
  }
  else {
    uint64_t v5 = 0x7463656A626FLL;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DCFB2BA0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001DD067820;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000014;
    }
    else {
      unint64_t v5 = 0xD00000000000001ALL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001DD067840;
    }
    else {
      unint64_t v6 = 0x80000001DD067860;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x80000001DD067820;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0xD000000000000014;
    }
    else {
      unint64_t v2 = 0xD00000000000001ALL;
    }
    if (v7 == 1) {
      unint64_t v3 = 0x80000001DD067840;
    }
    else {
      unint64_t v3 = 0x80000001DD067860;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void *sub_1DCFB2CA0(void (*a1)(void *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  long long v7 = *(_OWORD *)(a3 + 144);
  long long v48 = *(_OWORD *)(a3 + 128);
  long long v49 = v7;
  v50[0] = *(_OWORD *)(a3 + 160);
  *(_OWORD *)((char *)v50 + 13) = *(_OWORD *)(a3 + 173);
  long long v8 = *(_OWORD *)(a3 + 80);
  long long v44 = *(_OWORD *)(a3 + 64);
  long long v45 = v8;
  long long v9 = *(_OWORD *)(a3 + 112);
  long long v46 = *(_OWORD *)(a3 + 96);
  long long v47 = v9;
  long long v10 = *(_OWORD *)(a3 + 48);
  long long v42 = *(_OWORD *)(a3 + 32);
  long long v43 = v10;
  long long v39 = v48;
  long long v40 = v7;
  v41[0] = v50[0];
  *(_OWORD *)((char *)v41 + 13) = *(_OWORD *)((char *)v50 + 13);
  long long v35 = v44;
  long long v36 = v8;
  long long v37 = v46;
  long long v38 = v47;
  long long v33 = v42;
  long long v34 = v10;
  sub_1DCD32CC8((uint64_t)&v42);
  a1(v32, &v33);
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  if (v3)
  {
    sub_1DCD32DD4((uint64_t)&v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    for (uint64_t i = 192; ; i += 160)
    {
      sub_1DCD32DD4((uint64_t)&v42);
      sub_1DCD32C3C((uint64_t)v32, (uint64_t)v30);
      sub_1DCD32C3C((uint64_t)v30, (uint64_t)v31);
      if (sub_1DCD32CA4((uint64_t)v31) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_1DCE9D680(0, v11[2] + 1, 1, v11);
        }
        unint64_t v14 = v11[2];
        unint64_t v13 = v11[3];
        if (v14 >= v13 >> 1) {
          uint64_t v11 = sub_1DCE9D680((void *)(v13 > 1), v14 + 1, 1, v11);
        }
        sub_1DCD32C3C((uint64_t)v30, (uint64_t)v28);
        v11[2] = v14 + 1;
        uint64_t v15 = &v11[20 * v14];
        long long v16 = v28[1];
        v15[2] = v28[0];
        v15[3] = v16;
        long long v17 = v28[5];
        long long v19 = v28[2];
        long long v18 = v28[3];
        v15[6] = v28[4];
        v15[7] = v17;
        v15[4] = v19;
        v15[5] = v18;
        long long v21 = v28[7];
        long long v20 = v29[0];
        long long v22 = v28[6];
        *(_OWORD *)((char *)v15 + 173) = *(_OWORD *)((char *)v29 + 13);
        v15[9] = v21;
        v15[10] = v20;
        v15[8] = v22;
      }
      if (!--v4) {
        break;
      }
      long long v23 = *(_OWORD *)(a3 + i + 112);
      long long v48 = *(_OWORD *)(a3 + i + 96);
      long long v49 = v23;
      v50[0] = *(_OWORD *)(a3 + i + 128);
      *(_OWORD *)((char *)v50 + 13) = *(_OWORD *)(a3 + i + 141);
      long long v24 = *(_OWORD *)(a3 + i + 48);
      long long v44 = *(_OWORD *)(a3 + i + 32);
      long long v45 = v24;
      long long v25 = *(_OWORD *)(a3 + i + 80);
      long long v46 = *(_OWORD *)(a3 + i + 64);
      long long v47 = v25;
      long long v26 = *(_OWORD *)(a3 + i + 16);
      long long v42 = *(_OWORD *)(a3 + i);
      long long v43 = v26;
      long long v39 = v48;
      long long v40 = v23;
      v41[0] = v50[0];
      *(_OWORD *)((char *)v41 + 13) = *(_OWORD *)((char *)v50 + 13);
      long long v35 = v44;
      long long v36 = v24;
      long long v37 = v46;
      long long v38 = v47;
      long long v33 = v42;
      long long v34 = v26;
      sub_1DCD32CC8((uint64_t)&v42);
      a1(v32, &v33);
    }
    swift_bridgeObjectRelease();
  }
  return v11;
}

unint64_t sub_1DCFB2F4C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v26 = (uint64_t)&v23 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v23 = a3;
  unint64_t v24 = v14;
  uint64_t v15 = a3 + v14;
  long long v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v17 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  long long v25 = a1;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v16)(v8, 1, v28) == 1)
    {
      sub_1DCD2479C((uint64_t)v8, &qword_1EBE855F0);
    }
    else
    {
      uint64_t v19 = v26;
      sub_1DCFCC5CC((uint64_t)v8, v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFCC5CC(v19, v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1DCE9D7A0(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v18 = sub_1DCE9D7A0(v20 > 1, v21 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v21 + 1;
      sub_1DCFCC5CC(v27, v18 + v24 + v21 * v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      a1 = v25;
    }
    v15 += v17;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1DCFB3228(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v25 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v24 = (uint64_t)&v22 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = v10;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v22 = a3;
  unint64_t v14 = (_DWORD *)(a3 + 48);
  unint64_t v15 = MEMORY[0x1E4FBC860];
  do
  {
    int v16 = *v14;
    uint64_t v17 = *((void *)v14 - 1);
    v27[0] = *((void *)v14 - 2);
    v27[1] = v17;
    int v28 = v16;
    swift_bridgeObjectRetain();
    v29(v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    if ((*v13)(v7, 1, v26) == 1)
    {
      sub_1DCD2479C((uint64_t)v7, &qword_1EBE865A0);
    }
    else
    {
      uint64_t v18 = v24;
      sub_1DCFCC5CC((uint64_t)v7, v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
      sub_1DCFCC5CC(v18, v25, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1DCE9E92C(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v20 = *(void *)(v15 + 16);
      unint64_t v19 = *(void *)(v15 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v15 = sub_1DCE9E92C(v19 > 1, v20 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v20 + 1;
      sub_1DCFCC5CC(v25, v15+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    }
    v14 += 6;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v15;
}

char *sub_1DCFB351C(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v15)(void *__return_ptr, void);
  uint64_t v16;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v8 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v15 = a1;
  do
  {
    a1(&v16, v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    if ((v16 & 0x100000000) == 0)
    {
      int v11 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1DCE9EA8C(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v13 = *((void *)v10 + 2);
      unint64_t v12 = *((void *)v10 + 3);
      if (v13 >= v12 >> 1) {
        uint64_t v10 = sub_1DCE9EA8C((char *)(v12 > 1), v13 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v13 + 1;
      *(_DWORD *)&v10[4 * v13 + 32] = v11;
      a1 = v15;
    }
    v8 += v9;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DCFB36BC(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DCFB3AF4(a1, a2, a3, MEMORY[0x1E4F89270]);
}

char *sub_1DCFB36E8(void (*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  void (*v15)(uint64_t *__return_ptr, long long *);
  int v16;
  unint64_t v17;
  unint64_t v18;
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  _OWORD *v24;
  uint64_t v25;
  long long v26;
  long long v27;
  long long v28;
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;
  _OWORD v34[2];
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  long long v41;
  long long v42;
  _OWORD v43[3];
  uint64_t v44;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = (_OWORD *)a3;
  swift_bridgeObjectRetain();
  long long v8 = v5[5];
  long long v37 = v5[4];
  long long v9 = v5[9];
  uint64_t v41 = v5[8];
  long long v42 = v9;
  v43[0] = v5[10];
  *(_OWORD *)((char *)v43 + 13) = *(_OWORD *)((char *)v5 + 173);
  long long v10 = v5[6];
  long long v11 = v5[7];
  long long v38 = v8;
  long long v39 = v10;
  long long v40 = v11;
  long long v12 = v5[3];
  long long v35 = v5[2];
  long long v36 = v12;
  uint64_t v32 = v41;
  long long v33 = v42;
  v34[0] = v43[0];
  *(_OWORD *)((char *)v34 + 13) = *(_OWORD *)((char *)v43 + 13);
  int v28 = v37;
  uint64_t v29 = v8;
  unint64_t v30 = v39;
  uint64_t v31 = v11;
  uint64_t v26 = v35;
  uint64_t v27 = v12;
  sub_1DCD32CC8((uint64_t)&v35);
  a1(&v25, &v26);
  if (v3)
  {
    unint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    sub_1DCD32DD4((uint64_t)&v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v44 = a2;
    unint64_t v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v14 = 12;
    uint64_t v24 = v5;
    while (1)
    {
      sub_1DCD32DD4((uint64_t)&v35);
      if ((v25 & 0x100000000) == 0)
      {
        unint64_t v15 = a1;
        int v16 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_1DCE9EA8C(0, *((void *)v13 + 2) + 1, 1, v13);
        }
        uint64_t v18 = *((void *)v13 + 2);
        uint64_t v17 = *((void *)v13 + 3);
        if (v18 >= v17 >> 1) {
          unint64_t v13 = sub_1DCE9EA8C((char *)(v17 > 1), v18 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v18 + 1;
        *(_DWORD *)&v13[4 * v18 + 32] = v16;
        uint64_t v5 = v24;
        a1 = v15;
      }
      if (!--v4) {
        break;
      }
      unint64_t v19 = v5[v14 + 7];
      uint64_t v41 = v5[v14 + 6];
      long long v42 = v19;
      v43[0] = v5[v14 + 8];
      *(_OWORD *)((char *)v43 + 13) = *(_OWORD *)((char *)&v5[v14 + 8] + 13);
      unint64_t v20 = v5[v14 + 3];
      long long v37 = v5[v14 + 2];
      long long v38 = v20;
      unint64_t v21 = v5[v14 + 5];
      long long v39 = v5[v14 + 4];
      long long v40 = v21;
      uint64_t v22 = v5[v14 + 1];
      long long v35 = v5[v14];
      long long v36 = v22;
      uint64_t v32 = v41;
      long long v33 = v19;
      v34[0] = v43[0];
      *(_OWORD *)((char *)v34 + 13) = *(_OWORD *)((char *)v43 + 13);
      int v28 = v37;
      uint64_t v29 = v20;
      unint64_t v30 = v39;
      uint64_t v31 = v40;
      uint64_t v26 = v35;
      uint64_t v27 = v22;
      sub_1DCD32CC8((uint64_t)&v35);
      a1(&v25, &v26);
      v14 += 10;
    }
    swift_bridgeObjectRelease();
  }
  return v13;
}

void *sub_1DCFB3954(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v14)(void *__return_ptr, void);
  long long v15;
  long long v16;
  uint64_t v17;
  long long v18;
  long long v19;
  char v20;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  long long v8 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v14 = a1;
  do
  {
    unint64_t v20 = *(unsigned char *)(a3 + v7 + 32);
    a1(&v17, &v20);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    char v10 = v17;
    if (v17 != 26)
    {
      unint64_t v15 = v19;
      int v16 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v8 = sub_1DCE9F780(0, v8[2] + 1, 1, v8);
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1) {
        long long v8 = sub_1DCE9F780((void *)(v11 > 1), v12 + 1, 1, v8);
      }
      v8[2] = v12 + 1;
      long long v9 = &v8[5 * v12];
      *((unsigned char *)v9 + 32) = v10;
      *(_OWORD *)(v9 + 5) = v16;
      *(_OWORD *)(v9 + 7) = v15;
      a1 = v14;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1DCFB3AC8(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1DCFB3AF4(a1, a2, a3, MEMORY[0x1E4F89040]);
}

uint64_t sub_1DCFB3AF4(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v9 = *(void *)(a4(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      unint64_t v12 = a1(&v13, v10);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13)
      {
        MEMORY[0x1E01AE350](v12);
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

char *sub_1DCFB3C70(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t *)(a3 + 56);
  long long v8 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    uint64_t v11 = *(v7 - 2);
    v17[0] = *(v7 - 3);
    v17[1] = v11;
    v17[2] = v9;
    v17[3] = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v16, v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 0x100000000) == 0)
    {
      int v12 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v8 = sub_1DCE9D9E0(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v14 = *((void *)v8 + 2);
      unint64_t v13 = *((void *)v8 + 3);
      if (v14 >= v13 >> 1) {
        long long v8 = sub_1DCE9D9E0((char *)(v13 > 1), v14 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v14 + 1;
      *(_DWORD *)&v8[4 * v14 + 32] = v12;
    }
    v7 += 4;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v8;
}

__n128 VisualUnderstanding.Annotation.init(faceAnnotations:humanAnnotations:nsfwAnnotations:textAnnotations:barcodeAnnotations:scenenetAnnotations:reducePersonOverTriggerAnnotation:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, __n128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8 = *a7;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  __n128 result = *a6;
  *(__n128 *)(a8 + 40) = *a6;
  *(void *)(a8 + 56) = v8;
  return result;
}

uint64_t sub_1DCFB3E18()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (void *)((char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(*(void *)v0 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v7 = *(void *)(v2 + 72);
    v17[1] = *(void *)v0;
    swift_bridgeObjectRetain_n();
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1DCFCC504(v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v10 = v4[10];
      uint64_t v11 = v4[11];
      uint64_t v12 = v4[12];
      sub_1DCD55D64(v10, v11);
      sub_1DCFCC56C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1DCE9E6B8(0, v8[2] + 1, 1, v8);
        }
        unint64_t v14 = v8[2];
        unint64_t v13 = v8[3];
        if (v14 >= v13 >> 1) {
          uint64_t v8 = sub_1DCE9E6B8((void *)(v13 > 1), v14 + 1, 1, v8);
        }
        v8[2] = v14 + 1;
        uint64_t v9 = &v8[3 * v14];
        v9[4] = v10;
        v9[5] = v11;
        v9[6] = v12;
      }
      v6 += v7;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    if (v8[2]) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v15 = 0;
    goto LABEL_14;
  }
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v15 = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_14:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t VisualUnderstanding.imageRegions.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v86 = (char *)v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v91 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v89 = (uint64_t)v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v81 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v82 = (uint64_t)v81 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v81 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v92 = (uint64_t)v81 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v87 = (char *)v81 - v15;
  unint64_t v16 = *v0;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v105 = MEMORY[0x1E4FBC860];
  uint64_t v18 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  uint64_t v85 = v6;
  uint64_t v84 = v11;
  uint64_t v88 = v18;
  if (v18)
  {
    unint64_t v19 = 0;
    uint64_t v20 = (uint64_t)v87;
    unint64_t v83 = v16;
    while (v19 < *(void *)(v16 + 16))
    {
      uint64_t v21 = *(void *)(v91 + 72);
      unint64_t v94 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
      uint64_t v93 = v21;
      sub_1DCFCC504(v16 + v94 + v21 * v19, v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v22 = *(void *)(v20 + 48);
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = v23 - 1;
        uint64_t v25 = 32;
        uint64_t v26 = MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v27 = *(_OWORD *)(v22 + v25);
          long long v96 = *(_OWORD *)(v22 + v25 + 16);
          long long v95 = v27;
          long long v28 = *(_OWORD *)(v22 + v25 + 32);
          long long v29 = *(_OWORD *)(v22 + v25 + 48);
          long long v30 = *(_OWORD *)(v22 + v25 + 80);
          long long v99 = *(_OWORD *)(v22 + v25 + 64);
          long long v100 = v30;
          long long v97 = v28;
          long long v98 = v29;
          long long v31 = *(_OWORD *)(v22 + v25 + 96);
          long long v32 = *(_OWORD *)(v22 + v25 + 112);
          long long v33 = *(_OWORD *)(v22 + v25 + 128);
          *(_OWORD *)&v103[13] = *(_OWORD *)(v22 + v25 + 141);
          *(_OWORD *)uint64_t v103 = v33;
          long long v101 = v31;
          long long v102 = v32;
          if (BYTE13(v32) == 1)
          {
            sub_1DCD32CC8((uint64_t)&v95);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v104 = v26;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1DCFC4A08(0, *(void *)(v26 + 16) + 1, 1);
              uint64_t v26 = v104;
            }
            unint64_t v36 = *(void *)(v26 + 16);
            unint64_t v35 = *(void *)(v26 + 24);
            if (v36 >= v35 >> 1)
            {
              sub_1DCFC4A08(v35 > 1, v36 + 1, 1);
              uint64_t v26 = v104;
            }
            *(void *)(v26 + 16) = v36 + 1;
            long long v37 = (_OWORD *)(v26 + 160 * v36);
            long long v38 = v96;
            _OWORD v37[2] = v95;
            v37[3] = v38;
            long long v39 = v97;
            long long v40 = v98;
            long long v41 = v100;
            v37[6] = v99;
            v37[7] = v41;
            v37[4] = v39;
            v37[5] = v40;
            long long v42 = v101;
            long long v43 = v102;
            long long v44 = *(_OWORD *)v103;
            *(_OWORD *)((char *)v37 + 173) = *(_OWORD *)&v103[13];
            v37[9] = v43;
            v37[10] = v44;
            v37[8] = v42;
          }
          if (!v24) {
            break;
          }
          --v24;
          v25 += 160;
        }
        swift_bridgeObjectRelease();
        unint64_t v16 = v83;
        uint64_t v20 = (uint64_t)v87;
      }
      else
      {
        uint64_t v26 = MEMORY[0x1E4FBC860];
      }
      *(void *)&long long v95 = v26;
      swift_retain();
      sub_1DCFB4C70((uint64_t *)&v95);
      swift_release();
      uint64_t v45 = *(void *)(v95 + 16);
      swift_release();
      if (v45)
      {
        sub_1DCFCC5CC(v20, v92, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v46 = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCFC49E8(0, *(void *)(v46 + 16) + 1, 1);
          uint64_t v46 = v105;
        }
        unint64_t v48 = *(void *)(v46 + 16);
        unint64_t v47 = *(void *)(v46 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_1DCFC49E8(v47 > 1, v48 + 1, 1);
          uint64_t v46 = v105;
        }
        *(void *)(v46 + 16) = v48 + 1;
        sub_1DCFCC5CC(v92, v46 + v94 + v48 * v93, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      else
      {
        sub_1DCFCC56C(v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      if (++v19 == v88)
      {
        uint64_t v17 = v105;
        uint64_t v6 = v85;
        uint64_t v11 = v84;
        goto LABEL_25;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v92 = *(void *)(v17 + 16);
    if (v92)
    {
      unint64_t v83 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
      uint64_t v88 = v17 + v83;
      uint64_t v93 = *(void *)(v91 + 72);
      uint64_t v87 = (char *)(v91 + 56);
      v91 += 48;
      v81[1] = v17;
      swift_retain();
      uint64_t v49 = 0;
      unint64_t v94 = MEMORY[0x1E4FBC860];
      uint64_t v50 = (uint64_t)v86;
      do
      {
        sub_1DCFCC504(v88 + v93 * v49, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFCC504((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v51 = *((void *)v11 + 6);
        uint64_t v52 = *(void *)(v51 + 16);
        if (v52)
        {
          swift_bridgeObjectRetain();
          uint64_t v53 = v52 - 1;
          uint64_t v54 = 32;
          uint64_t v55 = MEMORY[0x1E4FBC860];
          while (1)
          {
            long long v56 = *(_OWORD *)(v51 + v54);
            long long v96 = *(_OWORD *)(v51 + v54 + 16);
            long long v95 = v56;
            long long v57 = *(_OWORD *)(v51 + v54 + 32);
            long long v58 = *(_OWORD *)(v51 + v54 + 48);
            long long v59 = *(_OWORD *)(v51 + v54 + 80);
            long long v99 = *(_OWORD *)(v51 + v54 + 64);
            long long v100 = v59;
            long long v97 = v57;
            long long v98 = v58;
            long long v60 = *(_OWORD *)(v51 + v54 + 96);
            long long v61 = *(_OWORD *)(v51 + v54 + 112);
            long long v62 = *(_OWORD *)(v51 + v54 + 128);
            *(_OWORD *)&v103[13] = *(_OWORD *)(v51 + v54 + 141);
            *(_OWORD *)uint64_t v103 = v62;
            long long v101 = v60;
            long long v102 = v61;
            if (BYTE13(v61) == 1)
            {
              sub_1DCD32CC8((uint64_t)&v95);
              char v63 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v105 = v55;
              if ((v63 & 1) == 0)
              {
                sub_1DCFC4A08(0, *(void *)(v55 + 16) + 1, 1);
                uint64_t v55 = v105;
              }
              unint64_t v65 = *(void *)(v55 + 16);
              unint64_t v64 = *(void *)(v55 + 24);
              if (v65 >= v64 >> 1)
              {
                sub_1DCFC4A08(v64 > 1, v65 + 1, 1);
                uint64_t v55 = v105;
              }
              *(void *)(v55 + 16) = v65 + 1;
              uint64_t v66 = (_OWORD *)(v55 + 160 * v65);
              long long v67 = v96;
              long long v66[2] = v95;
              v66[3] = v67;
              long long v68 = v97;
              long long v69 = v98;
              long long v70 = v100;
              v66[6] = v99;
              v66[7] = v70;
              unsigned char v66[4] = v68;
              v66[5] = v69;
              long long v71 = v101;
              long long v72 = v102;
              long long v73 = *(_OWORD *)v103;
              *(_OWORD *)((char *)v66 + 173) = *(_OWORD *)&v103[13];
              v66[9] = v72;
              v66[10] = v73;
              v66[8] = v71;
            }
            if (!v53) {
              break;
            }
            --v53;
            v54 += 160;
          }
          swift_bridgeObjectRelease();
          uint64_t v50 = (uint64_t)v86;
          uint64_t v6 = v85;
          uint64_t v11 = v84;
        }
        else
        {
          uint64_t v55 = MEMORY[0x1E4FBC860];
        }
        *(void *)&long long v95 = v55;
        swift_retain();
        sub_1DCFB4C70((uint64_t *)&v95);
        swift_release();
        uint64_t v74 = v95;
        swift_bridgeObjectRelease();
        *((void *)v6 + 6) = v74;
        sub_1DCFCC504((uint64_t)v6, v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v75 = v90;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v87)(v50, 0, 1, v90);
        sub_1DCFCC56C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCFCC56C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v91)(v50, 1, v75) == 1)
        {
          sub_1DCD2479C(v50, &qword_1EBE855F0);
        }
        else
        {
          uint64_t v76 = v82;
          sub_1DCFCC5CC(v50, v82, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCFCC5CC(v76, v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v77 = v94;
          }
          else {
            unint64_t v77 = sub_1DCE9D7A0(0, *(void *)(v94 + 16) + 1, 1, v94);
          }
          unint64_t v79 = *(void *)(v77 + 16);
          unint64_t v78 = *(void *)(v77 + 24);
          if (v79 >= v78 >> 1) {
            unint64_t v77 = sub_1DCE9D7A0(v78 > 1, v79 + 1, 1, v77);
          }
          *(void *)(v77 + 16) = v79 + 1;
          unint64_t v94 = v77;
          sub_1DCFCC5CC(v89, v77 + v83 + v79 * v93, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        }
        ++v49;
      }
      while (v49 != v92);
      swift_release_n();
      return v94;
    }
    else
    {
      swift_release();
      return MEMORY[0x1E4FBC860];
    }
  }
  return result;
}

uint64_t VisualUnderstanding.ImageRegion.domainInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v2 - 1;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 32; ; i += 160)
    {
      long long v6 = *(_OWORD *)(v1 + i + 16);
      long long v25 = *(_OWORD *)(v1 + i);
      long long v26 = v6;
      long long v7 = *(_OWORD *)(v1 + i + 32);
      long long v8 = *(_OWORD *)(v1 + i + 48);
      long long v9 = *(_OWORD *)(v1 + i + 80);
      long long v29 = *(_OWORD *)(v1 + i + 64);
      long long v30 = v9;
      long long v27 = v7;
      long long v28 = v8;
      long long v10 = *(_OWORD *)(v1 + i + 96);
      long long v11 = *(_OWORD *)(v1 + i + 112);
      long long v12 = *(_OWORD *)(v1 + i + 128);
      *(_OWORD *)((char *)v33 + 13) = *(_OWORD *)(v1 + i + 141);
      v33[0] = v12;
      long long v31 = v10;
      long long v32 = v11;
      if (BYTE13(v11) == 1)
      {
        sub_1DCD32CC8((uint64_t)&v25);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCFC4A08(0, *(void *)(v4 + 16) + 1, 1);
          uint64_t v4 = v34;
        }
        unint64_t v15 = *(void *)(v4 + 16);
        unint64_t v14 = *(void *)(v4 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1DCFC4A08(v14 > 1, v15 + 1, 1);
          uint64_t v4 = v34;
        }
        *(void *)(v4 + 16) = v15 + 1;
        unint64_t v16 = (_OWORD *)(v4 + 160 * v15);
        long long v17 = v26;
        v16[2] = v25;
        v16[3] = v17;
        long long v18 = v27;
        long long v19 = v28;
        long long v20 = v30;
        v16[6] = v29;
        v16[7] = v20;
        v16[4] = v18;
        id v16[5] = v19;
        long long v21 = v31;
        long long v22 = v32;
        long long v23 = v33[0];
        *(_OWORD *)((char *)v16 + 173) = *(_OWORD *)((char *)v33 + 13);
        v16[9] = v22;
        v16[10] = v23;
        v16[8] = v21;
      }
      if (!v3) {
        break;
      }
      --v3;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v25 = v4;
  swift_retain();
  sub_1DCFB4C70((uint64_t *)&v25);
  swift_release();
  return v25;
}

uint64_t type metadata accessor for VisualUnderstanding.ImageRegion()
{
  uint64_t result = qword_1EBE855E0;
  if (!qword_1EBE855E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VisualUnderstanding.payload.getter()
{
  sub_1DD046208();
  swift_allocObject();
  sub_1DD0461F8();
  sub_1DCD9C2D8();
  uint64_t v0 = sub_1DD0461E8();
  swift_release();
  return v0;
}

uint64_t sub_1DCFB4C70(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74344(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCFC5AE0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DCFB4CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0);
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      BOOL v13 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v13 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      if (*((float *)v10 + 4) != *((float *)v6 + 4)) {
        break;
      }
      if (v10[20] != v6[20]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      v12 += v16;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
  }
  return 0;
}

uint64_t sub_1DCFB4F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  MEMORY[0x1F4188790](v4);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      BOOL v13 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v13 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      if (*((float *)v10 + 4) != *((float *)v6 + 4)) {
        break;
      }
      if (v10[20] != v6[20]) {
        break;
      }
      if (v10[21] != v6[21]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      v12 += v16;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
  }
  return 0;
}

uint64_t sub_1DCFB51B4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1DD048FA8(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1DCFB527C(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB754C(a1, a2, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult, (uint64_t (*)(char *, char *))sub_1DCE3A9A0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
}

uint64_t sub_1DCFB52D0(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  uint64_t v4 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  char v6 = (float *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (float *)((char *)&v34 - v8);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult(0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (_DWORD *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  long long v17 = (_DWORD *)((char *)&v34 - v16);
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2) {
      return 1;
    }
    uint64_t v39 = *(void *)(a1 + 16);
    uint64_t v40 = v14;
    uint64_t v35 = v4;
    uint64_t v19 = 0;
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = a2 + v20;
    uint64_t v23 = *(void *)(v15 + 72);
    uint64_t v42 = (uint64_t)&v34 - v16;
    long long v43 = v12;
    uint64_t v37 = a2 + v20;
    uint64_t v38 = a1 + v20;
    uint64_t v36 = v23;
    while (1)
    {
      uint64_t v41 = v19;
      uint64_t v24 = v23 * v19;
      sub_1DCFCC504(v21 + v24, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      sub_1DCFCC504(v22 + v24, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      if (*v17 != *v12) {
        break;
      }
      uint64_t v25 = *(void *)(v42 + 8);
      uint64_t v26 = *((void *)v43 + 1);
      uint64_t v27 = *(void *)(v25 + 16);
      if (v27 != *(void *)(v26 + 16)) {
        break;
      }
      if (v27 && v25 != v26)
      {
        unint64_t v28 = 0;
        unint64_t v29 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
        uint64_t v44 = *(void *)(v35 + 72);
        while (1)
        {
          sub_1DCFCC504(v25 + v29, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          if (v28 >= *(void *)(v26 + 16))
          {
            __break(1u);
            JUMPOUT(0x1DCFB5864);
          }
          sub_1DCFCC504(v26 + v29, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          uint64_t v30 = *(void *)v9;
          uint64_t v31 = *(void *)v6;
          if (*((unsigned char *)v6 + 8) == 1)
          {
            switch(v31)
            {
              case 10:
                if (v30 != 10) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 11:
                if (v30 != 11) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 12:
                if (v30 != 12) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 13:
                if (v30 != 13) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 14:
                if (v30 != 14) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 15:
                if (v30 != 15) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 16:
                if (v30 != 16) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 17:
                if (v30 != 17) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 18:
                if (v30 != 18) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 19:
                if (v30 != 19) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 20:
                if (v30 != 20) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 21:
                if (v30 != 21) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 22:
                if (v30 != 22) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 23:
                if (v30 != 23) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 24:
                if (v30 != 24) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              case 25:
                if (v30 != 25) {
                  goto LABEL_54;
                }
                goto LABEL_14;
              default:
                break;
            }
          }
          if (v30 != v31) {
            break;
          }
LABEL_14:
          if (v9[3] != v6[3]) {
            break;
          }
          sub_1DD047BF8();
          sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
          char v32 = sub_1DD0483B8();
          sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          sub_1DCFCC56C((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          if ((v32 & 1) == 0) {
            goto LABEL_55;
          }
          ++v28;
          v29 += v44;
          if (v27 == v28) {
            goto LABEL_50;
          }
        }
LABEL_54:
        sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
        sub_1DCFCC56C((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
        break;
      }
LABEL_50:
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      uint64_t v19 = v41 + 1;
      unint64_t v12 = v43;
      sub_1DCFCC56C((uint64_t)v43, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      long long v17 = (_DWORD *)v42;
      sub_1DCFCC56C(v42, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      uint64_t result = 1;
      uint64_t v21 = v38;
      uint64_t v23 = v36;
      uint64_t v22 = v37;
      if (v19 == v39) {
        return result;
      }
    }
LABEL_55:
    sub_1DCFCC56C((uint64_t)v43, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
    sub_1DCFCC56C(v42, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
  }
  return 0;
}

uint64_t sub_1DCFB58CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (double *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (double *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03878);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (uint64_t *)((char *)&v41 - v20);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16))
  {
LABEL_28:
    char v35 = 0;
    return v35 & 1;
  }
  uint64_t v52 = v18;
  uint64_t v42 = v7;
  if (v22 && a1 != a2)
  {
    uint64_t v51 = v11;
    unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v43 = *(void *)(v19 + 72);
    uint64_t v44 = a2;
    uint64_t v49 = v13;
    uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v24 = v22 - 1;
    uint64_t v45 = a1;
    uint64_t v46 = v4;
    unint64_t v47 = (uint64_t *)((char *)&v41 - v20);
    unint64_t v48 = v16;
    while (1)
    {
      sub_1DCFCC504(a1 + v23, (uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      sub_1DCFCC504(a2 + v23, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      if ((sub_1DCFB6860(*v21, *v16) & 1) == 0) {
        break;
      }
      uint64_t v25 = *(int *)(v52 + 24);
      uint64_t v26 = (uint64_t)v16 + v25;
      uint64_t v27 = (uint64_t)&v13[*(int *)(v51 + 48)];
      sub_1DCD2889C((uint64_t)v21 + v25, (uint64_t)v13, &qword_1EBE86570);
      sub_1DCD2889C(v26, v27, &qword_1EBE86570);
      unint64_t v28 = *v50;
      if ((*v50)(v13, 1, v4) == 1)
      {
        if (v28((char *)v27, 1, v4) != 1)
        {
          uint64_t v38 = &qword_1EAB03878;
          uint64_t v16 = v48;
          uint64_t v39 = (uint64_t)v49;
          uint64_t v21 = v47;
          goto LABEL_26;
        }
        uint64_t v13 = v49;
        sub_1DCD2479C((uint64_t)v49, &qword_1EBE86570);
        uint64_t v21 = v47;
        uint64_t v16 = v48;
      }
      else
      {
        sub_1DCD2889C((uint64_t)v13, (uint64_t)v10, &qword_1EBE86570);
        if (v28((char *)v27, 1, v4) == 1)
        {
          uint64_t v38 = &qword_1EAB03878;
LABEL_25:
          uint64_t v16 = v48;
          uint64_t v39 = (uint64_t)v49;
          uint64_t v21 = v47;
          sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
LABEL_26:
          sub_1DCD2479C(v39, v38);
          break;
        }
        uint64_t v29 = v27;
        uint64_t v30 = v42;
        sub_1DCFCC5CC(v29, (uint64_t)v42, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
        if (*v10 != *v30 || v10[1] != v30[1] || v10[2] != v30[2] || v10[3] != v30[3])
        {
          sub_1DCFCC56C((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          uint64_t v38 = &qword_1EBE86570;
          goto LABEL_25;
        }
        sub_1DD047BF8();
        uint64_t v31 = (uint64_t)v10;
        char v32 = v30;
        sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        char v33 = sub_1DD0483B8();
        uint64_t v34 = (uint64_t)v32;
        uint64_t v10 = (double *)v31;
        sub_1DCFCC56C(v34, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
        sub_1DCFCC56C(v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
        uint64_t v13 = v49;
        sub_1DCD2479C((uint64_t)v49, &qword_1EBE86570);
        uint64_t v21 = v47;
        uint64_t v16 = v48;
        if ((v33 & 1) == 0) {
          break;
        }
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v35 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      sub_1DCFCC56C((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      BOOL v37 = v24-- != 0;
      if (v35)
      {
        a2 = v44;
        v23 += v43;
        a1 = v45;
        uint64_t v4 = v46;
        if (v37) {
          continue;
        }
      }
      return v35 & 1;
    }
    sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    sub_1DCFCC56C((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    goto LABEL_28;
  }
  char v35 = 1;
  return v35 & 1;
}

uint64_t sub_1DCFB5EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (float *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (float *)((char *)&v16 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      uint64_t v13 = *(void *)v10;
      uint64_t v14 = *(void *)v6;
      if (*((unsigned char *)v6 + 8) == 1)
      {
        switch(v14)
        {
          case 10:
            if (v13 != 10) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 11:
            if (v13 != 11) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 12:
            if (v13 != 12) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 13:
            if (v13 != 13) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 14:
            if (v13 != 14) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 15:
            if (v13 != 15) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 16:
            if (v13 != 16) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 17:
            if (v13 != 17) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 18:
            if (v13 != 18) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 19:
            if (v13 != 19) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 20:
            if (v13 != 20) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 21:
            if (v13 != 21) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 22:
            if (v13 != 22) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 23:
            if (v13 != 23) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 24:
            if (v13 != 24) {
              goto LABEL_43;
            }
            goto LABEL_8;
          case 25:
            if (v13 != 25) {
              goto LABEL_43;
            }
            goto LABEL_8;
          default:
            break;
        }
      }
      if (v13 != v14) {
        break;
      }
LABEL_8:
      if (v10[3] != v6[3]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      v12 += v17;
      if (!--v11) {
        return 1;
      }
    }
LABEL_43:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFB6244(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v4 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v53 = (char **)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v54 = (char **)((char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03898);
  MEMORY[0x1F4188790](v55);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (float *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (float *)((char *)&v47 - v15);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 != *(void *)(a2 + 16)) {
    goto LABEL_32;
  }
  if (!v17 || a1 == a2)
  {
    char v44 = 1;
    return v44 & 1;
  }
  uint64_t v18 = 0;
  unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v51 = a2 + v19;
  uint64_t v52 = a1 + v19;
  uint64_t v20 = *(void *)(v14 + 72);
  uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v50 = v20;
  unint64_t v47 = v9;
  uint64_t v48 = v17;
  while (1)
  {
    uint64_t v21 = v50 * v18;
    sub_1DCFCC504(v52 + v50 * v18, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    sub_1DCFCC504(v51 + v21, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    uint64_t v22 = *(int *)(v10 + 24);
    uint64_t v23 = (uint64_t)v12 + v22;
    uint64_t v24 = (uint64_t)&v9[*(int *)(v55 + 48)];
    sub_1DCD2889C((uint64_t)v16 + v22, (uint64_t)v9, &qword_1EBE86530);
    sub_1DCD2889C(v23, v24, &qword_1EBE86530);
    uint64_t v25 = *v49;
    uint64_t v26 = v56;
    if ((*v49)(v9, 1, v56) == 1) {
      break;
    }
    uint64_t v27 = (uint64_t)v9;
    unint64_t v28 = v54;
    sub_1DCD2889C(v27, (uint64_t)v54, &qword_1EBE86530);
    if (v25((char *)v24, 1, v26) == 1)
    {
      uint64_t v45 = &qword_1EAB03898;
      goto LABEL_29;
    }
    uint64_t v29 = v24;
    uint64_t v30 = v53;
    sub_1DCFCC5CC(v29, (uint64_t)v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v31 = *v28;
    uint64_t v32 = *v30;
    uint64_t v33 = *(void *)(*v28 + 16);
    if (v33 != *(void *)(*v30 + 16)) {
      goto LABEL_28;
    }
    if (v33 && v31 != v32)
    {
      if (*(void *)(v31 + 32) != *(void *)(v32 + 32)) {
        goto LABEL_28;
      }
      uint64_t v34 = (uint64_t *)(v31 + 40);
      char v35 = (uint64_t *)(v32 + 40);
      uint64_t v36 = v33 - 1;
      while (v36)
      {
        uint64_t v38 = *v34++;
        uint64_t v37 = v38;
        uint64_t v39 = *v35++;
        --v36;
        if (v37 != v39) {
          goto LABEL_28;
        }
      }
    }
    BOOL v40 = v28[1] == v30[1] && v28[2] == v30[2];
    if (!v40 && (sub_1DD048FA8() & 1) == 0)
    {
LABEL_28:
      sub_1DCFCC56C((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v45 = &qword_1EBE86530;
LABEL_29:
      sub_1DCFCC56C((uint64_t)v28, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v9 = v47;
      goto LABEL_30;
    }
    uint64_t v41 = (uint64_t)v28;
    sub_1DD047BF8();
    uint64_t v42 = (uint64_t)v30;
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v43 = sub_1DD0483B8();
    sub_1DCFCC56C(v42, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    sub_1DCFCC56C(v41, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v9 = v47;
    sub_1DCD2479C((uint64_t)v47, &qword_1EBE86530);
    if ((v43 & 1) == 0) {
      goto LABEL_31;
    }
LABEL_23:
    if (*v16 != *v12) {
      goto LABEL_31;
    }
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v44 = sub_1DD0483B8();
    sub_1DCFCC56C((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    if ((v44 & 1) != 0 && ++v18 != v48) {
      continue;
    }
    return v44 & 1;
  }
  if (v25((char *)v24, 1, v26) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE86530);
    goto LABEL_23;
  }
  uint64_t v45 = &qword_1EAB03898;
LABEL_30:
  sub_1DCD2479C((uint64_t)v9, v45);
LABEL_31:
  sub_1DCFCC56C((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
  sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
LABEL_32:
  char v44 = 0;
  return v44 & 1;
}

uint64_t sub_1DCFB6860(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v4 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v84 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v79 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03898);
  MEMORY[0x1F4188790](v80);
  uint64_t v86 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  uint64_t v9 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v87 = (float *)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (float *)((char *)&v67 - v12);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v83 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v82 = (uint64_t)&v67 - v19;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 != *(void *)(a2 + 16))
  {
LABEL_45:
    char v65 = 0;
    return v65 & 1;
  }
  if (!v20 || a1 == a2)
  {
    char v65 = 1;
    return v65 & 1;
  }
  uint64_t v71 = *(void *)(a1 + 16);
  uint64_t v72 = v17;
  uint64_t v67 = v9;
  uint64_t v21 = 0;
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(v18 + 72);
  uint64_t v69 = a2 + v22;
  uint64_t v70 = v23;
  uint64_t v68 = v25;
  unint64_t v78 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  while (1)
  {
    uint64_t v74 = v21;
    uint64_t v26 = v25 * v21;
    uint64_t v27 = (_DWORD *)v82;
    sub_1DCFCC504(v23 + v25 * v21, v82, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    uint64_t v28 = v24 + v26;
    uint64_t v29 = (_DWORD *)v83;
    sub_1DCFCC504(v28, v83, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    if (*v27 != *v29
      || (uint64_t v30 = *(void *)(v82 + 8),
          uint64_t v31 = *(void *)(v83 + 8),
          uint64_t v32 = *(void *)(v30 + 16),
          v32 != *(void *)(v31 + 16)))
    {
LABEL_44:
      sub_1DCFCC56C(v83, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      sub_1DCFCC56C(v82, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      goto LABEL_45;
    }
    if (v32 && v30 != v31) {
      break;
    }
LABEL_36:
    uint64_t v63 = v82;
    uint64_t v64 = v83;
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v65 = sub_1DD0483B8();
    sub_1DCFCC56C(v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    sub_1DCFCC56C(v63, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    if (v65)
    {
      uint64_t v21 = v74 + 1;
      uint64_t v23 = v70;
      uint64_t v25 = v68;
      uint64_t v24 = v69;
      if (v74 + 1 != v71) {
        continue;
      }
    }
    return v65 & 1;
  }
  unint64_t v33 = 0;
  unint64_t v34 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  uint64_t v77 = v30 + v34;
  uint64_t v75 = v31 + v34;
  uint64_t v76 = *(void *)(v67 + 72);
  long long v73 = v13;
  while (1)
  {
    uint64_t v35 = v76 * v33;
    uint64_t result = sub_1DCFCC504(v77 + v76 * v33, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    if (v33 >= *(void *)(v31 + 16)) {
      break;
    }
    uint64_t v37 = v75 + v35;
    uint64_t v38 = v87;
    sub_1DCFCC504(v37, (uint64_t)v87, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    uint64_t v39 = v86;
    uint64_t v40 = *(int *)(v85 + 24);
    uint64_t v41 = (uint64_t)v38 + v40;
    uint64_t v42 = v86 + *(int *)(v80 + 48);
    sub_1DCD2889C((uint64_t)v13 + v40, v86, &qword_1EBE86530);
    sub_1DCD2889C(v41, v42, &qword_1EBE86530);
    char v43 = *v78;
    uint64_t v44 = v39;
    uint64_t v45 = v81;
    if ((*v78)(v44, 1, v81) == 1)
    {
      if (v43(v42, 1, v45) != 1)
      {
        uint64_t v66 = &qword_1EAB03898;
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v46 = v79;
      sub_1DCD2889C(v86, v79, &qword_1EBE86530);
      if (v43(v42, 1, v45) == 1)
      {
        uint64_t v52 = v46;
        uint64_t v13 = v73;
        uint64_t v66 = &qword_1EAB03898;
LABEL_41:
        sub_1DCFCC56C(v52, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
LABEL_42:
        sub_1DCD2479C(v86, v66);
LABEL_43:
        sub_1DCFCC56C((uint64_t)v87, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
        sub_1DCFCC56C((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
        goto LABEL_44;
      }
      uint64_t v47 = v42;
      uint64_t v48 = v84;
      sub_1DCFCC5CC(v47, v84, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v49 = *(void **)v46;
      uint64_t v50 = *(void **)v48;
      uint64_t v51 = *(void *)(*(void *)v46 + 16);
      uint64_t v52 = v46;
      uint64_t v13 = v73;
      if (v51 != *(void *)(*(void *)v48 + 16)) {
        goto LABEL_40;
      }
      if (v51 && v49 != v50)
      {
        if (v49[4] != v50[4]) {
          goto LABEL_40;
        }
        if (v51 != 1)
        {
          if (v49[5] != v50[5]) {
            goto LABEL_40;
          }
          long long v57 = v49 + 6;
          long long v58 = v50 + 6;
          uint64_t v59 = v51 - 2;
          while (v59)
          {
            uint64_t v61 = *v57++;
            uint64_t v60 = v61;
            uint64_t v62 = *v58++;
            --v59;
            if (v60 != v62) {
              goto LABEL_40;
            }
          }
        }
      }
      BOOL v53 = *(void *)(v52 + 8) == *(void *)(v84 + 8) && *(void *)(v52 + 16) == *(void *)(v84 + 16);
      if (!v53 && (sub_1DD048FA8() & 1) == 0
        || (sub_1DD047BF8(),
            sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]),
            char v54 = sub_1DD0483B8(),
            uint64_t v52 = v79,
            (v54 & 1) == 0))
      {
LABEL_40:
        sub_1DCFCC56C(v84, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        uint64_t v66 = &qword_1EBE86530;
        goto LABEL_41;
      }
      sub_1DCFCC56C(v84, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      sub_1DCFCC56C(v52, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    }
    sub_1DCD2479C(v86, &qword_1EBE86530);
    if (*v13 != *v87) {
      goto LABEL_43;
    }
    uint64_t v55 = v87;
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v56 = sub_1DD0483B8();
    sub_1DCFCC56C((uint64_t)v55, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    sub_1DCFCC56C((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    if ((v56 & 1) == 0) {
      goto LABEL_44;
    }
    if (++v33 == v32) {
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFB7108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (float *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (float *)((char *)&v20 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v16 = 1;
      return v16 & 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      uint64_t v14 = *(void *)v10;
      if (*((unsigned char *)v10 + 8) == 1) {
        uint64_t v14 = qword_1DD062C18[v14];
      }
      uint64_t v15 = *(void *)v6;
      if (*((unsigned char *)v6 + 8))
      {
        switch(v15)
        {
          case 1:
            if (v14 != 1) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 2:
            if (v14 != 11) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 3:
            if (v14 != 2) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 4:
            if (v14 != 3) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 5:
            if (v14 != 4) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 6:
            if (v14 != 5) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 7:
            if (v14 != 14) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 8:
            if (v14 != 6) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 9:
            if (v14 != 7) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 10:
            if (v14 != 8) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 11:
            if (v14 != 9) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 12:
            if (v14 != 12) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 13:
            if (v14 != 13) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 14:
            if (v14 != 15) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 15:
            if (v14 != 10) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 16:
            if (v14 != 16) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 17:
            if (v14 != 17) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 18:
            if (v14 != 18) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 19:
            if (v14 != 19) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 20:
            if (v14 != 20) {
              goto LABEL_60;
            }
            goto LABEL_12;
          case 21:
            if (v14 != 21) {
              goto LABEL_60;
            }
            goto LABEL_12;
          default:
            if (v14) {
              goto LABEL_60;
            }
            goto LABEL_12;
        }
      }
      if (v14 != v15) {
        break;
      }
LABEL_12:
      if (v10[3] != v6[3]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v16 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      BOOL v18 = v13-- != 0;
      if (v16)
      {
        v12 += v21;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
LABEL_60:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
  }
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_1DCFB74F8(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB754C(a1, a2, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion, (uint64_t (*)(char *, char *))sub_1DCE39F4C, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
}

uint64_t sub_1DCFB754C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1DCFCC504(a1 + v20, (uint64_t)v17, a4);
        sub_1DCFCC504(v28 + v20, (uint64_t)v13, a4);
        char v23 = v19(v17, v13);
        sub_1DCFCC56C((uint64_t)v13, a6);
        sub_1DCFCC56C((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1DCFB76EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_Polygon(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v20 = 1;
      return v20 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v29 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(v29 + v15 * v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_Polygon);
      sub_1DCFCC504(v14 + v15 * v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_Polygon);
      uint64_t v16 = *(float **)v10;
      uint64_t v17 = *(float **)v6;
      uint64_t v18 = *(void *)(*(void *)v10 + 16);
      if (v18 != *(void *)(*(void *)v6 + 16)) {
        break;
      }
      if (v18) {
        BOOL v19 = v16 == v17;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        if (v16[8] != v17[8]) {
          break;
        }
        if (v18 != 1)
        {
          if (v16[9] != v17[9]) {
            break;
          }
          uint64_t v21 = v16 + 10;
          uint64_t v22 = v17 + 10;
          uint64_t v23 = v18 - 2;
          while (v23)
          {
            float v24 = *v21++;
            float v25 = v24;
            float v26 = *v22++;
            --v23;
            if (v25 != v26) {
              goto LABEL_19;
            }
          }
        }
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v20 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_Polygon);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_Polygon);
      if ((v20 & 1) != 0 && ++v12 != v11) {
        continue;
      }
      return v20 & 1;
    }
LABEL_19:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_Polygon);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_Polygon);
  }
  char v20 = 0;
  return v20 & 1;
}

BOOL sub_1DCFB799C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1DCFB7A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (float *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (float *)((char *)&v14 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      if (*v10 != *v6) {
        break;
      }
      if (v10[1] != v6[1]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      v12 += v15;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
  }
  return 0;
}

uint64_t sub_1DCFB7C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      uint64_t v13 = *(int *)(v4 + 20);
      uint64_t v14 = *(void *)&v10[v13];
      uint64_t v15 = *(void *)&v6[v13];
      if (v14 != v15)
      {
        swift_retain();
        swift_retain();
        char v16 = sub_1DCE1CD64(v14, v15);
        swift_release();
        swift_release();
        if ((v16 & 1) == 0) {
          break;
        }
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      v12 += v19;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
  }
  return 0;
}

uint64_t sub_1DCFB7EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (_DWORD *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (_DWORD *)((char *)&v14 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
      if (*v10 != *v6) {
        break;
      }
      if (v10[1] != v6[1]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
      v12 += v15;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
  }
  return 0;
}

uint64_t sub_1DCFB80EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
      if (*(_DWORD *)v10 != *(_DWORD *)v6) {
        break;
      }
      BOOL v13 = *((void *)v10 + 1) == *((void *)v6 + 1) && *((void *)v10 + 2) == *((void *)v6 + 2);
      if (!v13 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
      v12 += v16;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
  }
  return 0;
}

uint64_t sub_1DCFB8340(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB754C(a1, a2, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule, (uint64_t (*)(char *, char *))sub_1DCDFD9A8, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
}

uint64_t sub_1DCFB8394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
      BOOL v13 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v13 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      BOOL v14 = *((void *)v10 + 2) == *((void *)v6 + 2) && *((void *)v10 + 3) == *((void *)v6 + 3);
      if (!v14 && (sub_1DD048FA8() & 1) == 0
        || (*((void *)v10 + 4) != *((void *)v6 + 4) || *((void *)v10 + 5) != *((void *)v6 + 5))
        && (sub_1DD048FA8() & 1) == 0)
      {
        break;
      }
      if (*((float *)v10 + 12) != *((float *)v6 + 12)) {
        break;
      }
      if (*((float *)v10 + 13) != *((float *)v6 + 13)) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
      v12 += v17;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
  }
  return 0;
}

uint64_t sub_1DCFB863C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      BOOL v13 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v13 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      if (*((_DWORD *)v10 + 4) != *((_DWORD *)v6 + 4)) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      v12 += v16;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
  }
  return 0;
}

uint64_t sub_1DCFB8890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (float *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (float *)((char *)&v18 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
      if (*v10 != *v6) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v14 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
    goto LABEL_14;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1DCFB8AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v77 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v78 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v79 = (uint64_t)&v62 - v14;
  uint64_t v80 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
  uint64_t v76 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  BOOL v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v62 - v18;
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v82 = (uint64_t *)((char *)&v62 - v26);
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v27 || a1 == a2) {
    return 1;
  }
  uint64_t v67 = *(void *)(a1 + 16);
  uint64_t v68 = v24;
  uint64_t v62 = v5;
  uint64_t v63 = v11;
  uint64_t v71 = v10;
  uint64_t v72 = v4;
  uint64_t v28 = 0;
  unint64_t v29 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(v25 + 72);
  uint64_t v81 = v9;
  uint64_t v75 = v22;
  uint64_t v65 = a2 + v29;
  uint64_t v66 = a1 + v29;
  uint64_t v64 = v32;
  while (1)
  {
    uint64_t v69 = v28;
    uint64_t v33 = v32 * v28;
    unint64_t v34 = v82;
    sub_1DCFCC504(v30 + v33, (uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
    sub_1DCFCC504(v31 + v33, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
    uint64_t v35 = *v34;
    uint64_t v36 = *(void *)v22;
    uint64_t v37 = *(void *)(v35 + 16);
    if (v37 != *(void *)(*(void *)v22 + 16)) {
      goto LABEL_61;
    }
    if (v37 && v35 != v36)
    {
      unint64_t v38 = 0;
      unint64_t v39 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      uint64_t v74 = *(void *)(v76 + 72);
      while (1)
      {
        uint64_t result = sub_1DCFCC504(v35 + v39, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        if (v38 >= *(void *)(v36 + 16))
        {
          __break(1u);
          goto LABEL_65;
        }
        sub_1DCFCC504(v36 + v39, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        BOOL v41 = *(void *)v19 == *(void *)v16 && *((void *)v19 + 1) == *((void *)v16 + 1);
        if (!v41 && (sub_1DD048FA8() & 1) == 0) {
          break;
        }
        BOOL v42 = *((void *)v19 + 2) == *((void *)v16 + 2) && *((void *)v19 + 3) == *((void *)v16 + 3);
        if (!v42 && (sub_1DD048FA8() & 1) == 0 || *((float *)v19 + 8) != *((float *)v16 + 8) || v19[36] != v16[36]) {
          break;
        }
        sub_1DD047BF8();
        sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        uint64_t v9 = v81;
        char v43 = sub_1DD0483B8();
        sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        sub_1DCFCC56C((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        if ((v43 & 1) == 0) {
          goto LABEL_61;
        }
        ++v38;
        v39 += v74;
        if (v37 == v38) {
          goto LABEL_24;
        }
      }
      sub_1DCFCC56C((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      uint64_t v59 = (uint64_t)v19;
      uint64_t v60 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold;
LABEL_60:
      sub_1DCFCC56C(v59, v60);
LABEL_61:
      sub_1DCFCC56C((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      sub_1DCFCC56C((uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      return 0;
    }
LABEL_24:
    uint64_t v44 = *((void *)v75 + 1);
    uint64_t v73 = v82[1];
    uint64_t v45 = *(void *)(v44 + 16);
    uint64_t v74 = *(void *)(v73 + 16);
    if (v74 != v45) {
      goto LABEL_61;
    }
    if (v74 && v73 != v44) {
      break;
    }
LABEL_39:
    uint64_t v52 = *((void *)v75 + 2);
    uint64_t v74 = v82[2];
    uint64_t v53 = *(void *)(v74 + 16);
    if (v53 != *(void *)(v52 + 16)) {
      goto LABEL_61;
    }
    if (v53 && v74 != v52)
    {
      unint64_t v54 = 0;
      unint64_t v55 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v73 = *(void *)(v62 + 72);
      do
      {
        uint64_t result = sub_1DCFCC504(v74 + v55, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
        if (v54 >= *(void *)(v52 + 16)) {
          goto LABEL_66;
        }
        uint64_t v56 = v77;
        sub_1DCFCC504(v52 + v55, v77, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
        BOOL v57 = *(void *)v9 == *(void *)v56 && *((void *)v9 + 1) == *(void *)(v56 + 8);
        if (!v57 && (sub_1DD048FA8() & 1) == 0 || *((float *)v9 + 4) != *(float *)(v56 + 16))
        {
          uint64_t v61 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold;
          sub_1DCFCC56C(v56, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
          uint64_t v59 = (uint64_t)v9;
          goto LABEL_59;
        }
        sub_1DD047BF8();
        sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        uint64_t v9 = v81;
        char v58 = sub_1DD0483B8();
        sub_1DCFCC56C(v56, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
        sub_1DCFCC56C((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
        if ((v58 & 1) == 0) {
          goto LABEL_61;
        }
        ++v54;
        v55 += v73;
      }
      while (v53 != v54);
    }
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    uint64_t v9 = v81;
    if ((sub_1DD0483B8() & 1) == 0) {
      goto LABEL_61;
    }
    uint64_t v28 = v69 + 1;
    uint64_t v22 = v75;
    sub_1DCFCC56C((uint64_t)v75, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
    sub_1DCFCC56C((uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
    uint64_t result = 1;
    uint64_t v30 = v66;
    uint64_t v32 = v64;
    uint64_t v31 = v65;
    if (v28 == v67) {
      return result;
    }
  }
  unint64_t v46 = 0;
  unint64_t v47 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v70 = *(void *)(v63 + 72);
  while (1)
  {
    uint64_t v48 = v79;
    uint64_t result = sub_1DCFCC504(v73 + v47, v79, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    if (v46 >= *(void *)(v44 + 16)) {
      break;
    }
    uint64_t v49 = v78;
    sub_1DCFCC504(v44 + v47, v78, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    BOOL v50 = *(void *)v48 == *(void *)v49 && *(void *)(v48 + 8) == *(void *)(v49 + 8);
    if (!v50 && (sub_1DD048FA8() & 1) == 0
      || *(float *)(v48 + 16) != *(float *)(v49 + 16)
      || *(unsigned __int8 *)(v48 + 20) != *(unsigned __int8 *)(v49 + 20)
      || *(unsigned __int8 *)(v48 + 21) != *(unsigned __int8 *)(v49 + 21))
    {
      uint64_t v61 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold;
      sub_1DCFCC56C(v49, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      uint64_t v59 = v48;
LABEL_59:
      uint64_t v60 = v61;
      goto LABEL_60;
    }
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    uint64_t v9 = v81;
    char v51 = sub_1DD0483B8();
    sub_1DCFCC56C(v49, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    sub_1DCFCC56C(v48, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    if ((v51 & 1) == 0) {
      goto LABEL_61;
    }
    ++v46;
    v47 += v70;
    if (v74 == v46) {
      goto LABEL_39;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1DCFB948C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
  uint64_t v4 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v46 = (char *)&v35 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v17 || a1 == a2) {
    return 1;
  }
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v41 = v14;
  uint64_t v36 = v4;
  uint64_t v18 = 0;
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v15 + 72);
  uint64_t v44 = v12;
  uint64_t v23 = (uint64_t)v46;
  uint64_t v38 = a2 + v19;
  uint64_t v39 = v20;
  uint64_t v37 = v22;
  while (1)
  {
    uint64_t v42 = v18;
    uint64_t v24 = v22 * v18;
    sub_1DCFCC504(v20 + v24, v23, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    sub_1DCFCC504(v21 + v24, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    BOOL v25 = *(void *)v23 == *(void *)v12 && *(void *)(v23 + 8) == *((void *)v12 + 1);
    if (!v25 && (sub_1DD048FA8() & 1) == 0
      || (uint64_t v26 = *(void *)(v23 + 16),
          uint64_t v27 = *((void *)v12 + 2),
          uint64_t v28 = *(void *)(v26 + 16),
          v28 != *(void *)(v27 + 16)))
    {
LABEL_42:
      sub_1DCFCC56C((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      sub_1DCFCC56C(v23, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      return 0;
    }
    if (v28 && v26 != v27) {
      break;
    }
LABEL_29:
    if ((*(void *)(v23 + 24) != *((void *)v12 + 3) || *(void *)(v23 + 32) != *((void *)v12 + 4))
      && (sub_1DD048FA8() & 1) == 0)
    {
      goto LABEL_42;
    }
    if (*(unsigned __int8 *)(v23 + 40) != v12[40]
      || (*(void *)(v23 + 48) != *((void *)v12 + 6) || *(void *)(v23 + 56) != *((void *)v12 + 7))
      && (sub_1DD048FA8() & 1) == 0)
    {
      goto LABEL_42;
    }
    if (*(unsigned __int8 *)(v23 + 64) != v12[64]) {
      goto LABEL_42;
    }
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    uint64_t v23 = (uint64_t)v46;
    uint64_t v12 = v44;
    if ((sub_1DD0483B8() & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v18 = v42 + 1;
    sub_1DCFCC56C((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    sub_1DCFCC56C(v23, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    uint64_t result = 1;
    uint64_t v20 = v39;
    uint64_t v22 = v37;
    uint64_t v21 = v38;
    if (v18 == v40) {
      return result;
    }
  }
  unint64_t v29 = 0;
  unint64_t v30 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v43 = *(void *)(v36 + 72);
  while (1)
  {
    uint64_t result = sub_1DCFCC504(v26 + v30, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    if (v29 >= *(void *)(v27 + 16)) {
      break;
    }
    sub_1DCFCC504(v27 + v30, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    BOOL v32 = *(void *)v9 == *(void *)v6 && *((void *)v9 + 1) == *((void *)v6 + 1);
    if (!v32 && (sub_1DD048FA8() & 1) == 0
      || (*((void *)v9 + 2) == *((void *)v6 + 2) ? (BOOL v33 = *((void *)v9 + 3) == *((void *)v6 + 3)) : (BOOL v33 = 0),
          !v33 && (sub_1DD048FA8() & 1) == 0 || *((float *)v9 + 8) != *((float *)v6 + 8) || v9[36] != v6[36]))
    {
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      sub_1DCFCC56C((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      goto LABEL_42;
    }
    sub_1DD047BF8();
    sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    uint64_t v12 = v44;
    char v34 = sub_1DD0483B8();
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    uint64_t v23 = (uint64_t)v46;
    sub_1DCFCC56C((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    if ((v34 & 1) == 0) {
      goto LABEL_42;
    }
    ++v29;
    v30 += v43;
    if (v28 == v29) {
      goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFB99E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_25:
    char v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      BOOL v14 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v14 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      BOOL v15 = *((void *)v10 + 2) == *((void *)v6 + 2) && *((void *)v10 + 3) == *((void *)v6 + 3);
      if (!v15 && (sub_1DD048FA8() & 1) == 0 || *((float *)v10 + 8) != *((float *)v6 + 8) || v10[36] != v6[36]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v16 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      BOOL v18 = v13-- != 0;
      if (v16)
      {
        v12 += v21;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
    goto LABEL_25;
  }
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_1DCFB9C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_19:
    char v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v20 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
      BOOL v14 = *(void *)v10 == *(void *)v6 && *((void *)v10 + 1) == *((void *)v6 + 1);
      if (!v14 && (sub_1DD048FA8() & 1) == 0 || *((float *)v10 + 4) != *((float *)v6 + 4)) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v15 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
      BOOL v17 = v13-- != 0;
      if (v15)
      {
        v12 += v20;
        if (v17) {
          continue;
        }
      }
      return v15 & 1;
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainPredictionNetThreshold);
    goto LABEL_19;
  }
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_1DCFB9EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v11 && a1 != a2)
  {
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(v30 + v15 * v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
      sub_1DCFCC504(v14 + v15 * v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
      char v16 = *(void **)v10;
      BOOL v17 = *(void **)v6;
      uint64_t v18 = *(void *)(*(void *)v10 + 16);
      if (v18 != *(void *)(*(void *)v6 + 16)) {
        break;
      }
      if (v18) {
        BOOL v19 = v16 == v17;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        BOOL v20 = v16[4] == v17[4] && v16[5] == v17[5];
        if (!v20 && (sub_1DD048FA8() & 1) == 0) {
          break;
        }
        if (v18 != 1)
        {
          BOOL v21 = v16[6] == v17[6] && v16[7] == v17[7];
          if (!v21 && (sub_1DD048FA8() & 1) == 0) {
            break;
          }
          uint64_t v22 = v18 - 2;
          if (v22)
          {
            BOOL v25 = v17 + 9;
            uint64_t v26 = v16 + 9;
            do
            {
              BOOL v27 = *(v26 - 1) == *(v25 - 1) && *v26 == *v25;
              if (!v27 && (sub_1DD048FA8() & 1) == 0) {
                goto LABEL_42;
              }
              v25 += 2;
              v26 += 2;
            }
            while (--v22);
          }
        }
      }
      uint64_t v23 = *((void *)v10 + 1);
      uint64_t v24 = *((void *)v6 + 1);
      if (v10[16]) {
        uint64_t v23 = v23 != 0;
      }
      if (v6[16] == 1)
      {
        if (v24)
        {
          if (v23 != 1) {
            break;
          }
        }
        else if (v23)
        {
          break;
        }
      }
      else if (v23 != v24)
      {
        break;
      }
      if (*((float *)v10 + 5) != *((float *)v6 + 5)) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      ++v12;
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
      if (v12 == v11) {
        return 1;
      }
    }
LABEL_42:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet);
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFBA22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Com_Apple_Visualintelligence_LocalizedName(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_26:
    char v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
      BOOL v14 = *v10 == *v6 && v10[1] == v6[1];
      if (!v14 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      BOOL v15 = v10[2] == v6[2] && v10[3] == v6[3];
      if (!v15 && (sub_1DD048FA8() & 1) == 0 || (v10[4] != v6[4] || v10[5] != v6[5]) && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v16 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
      BOOL v18 = v13-- != 0;
      if (v16)
      {
        v12 += v21;
        if (v18) {
          continue;
        }
      }
      return v16 & 1;
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    goto LABEL_26;
  }
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_1DCFBA4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86340);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v62 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02AD8);
  MEMORY[0x1F4188790](v64);
  uint64_t v68 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  uint64_t v11 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v67 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85348);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v69 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02AF0);
  MEMORY[0x1F4188790](v70);
  char v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  MEMORY[0x1F4188790](v73);
  BOOL v18 = (uint64_t *)((char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (uint64_t *)((char *)&v56 - v21);
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16))
  {
LABEL_35:
    char v50 = 0;
    return v50 & 1;
  }
  if (v23 && v71 != v72)
  {
    BOOL v57 = v7;
    uint64_t v61 = v4;
    unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    BOOL v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v59 = v16;
    uint64_t v60 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v26 = *(void *)(v20 + 72);
    uint64_t v27 = v23 - 1;
    uint64_t v28 = v66;
    uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v58 = v26;
    uint64_t v65 = (char *)&v56 - v21;
    while (1)
    {
      sub_1DCFCC504(v71 + v24, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      sub_1DCFCC504(v72 + v24, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      BOOL v29 = *v22 == *v18 && v22[1] == v18[1];
      if (!v29 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      uint64_t v30 = *(int *)(v73 + 24);
      uint64_t v31 = (uint64_t)v18 + v30;
      uint64_t v32 = (uint64_t)&v16[*(int *)(v70 + 48)];
      sub_1DCD2889C((uint64_t)v22 + v30, (uint64_t)v16, (uint64_t *)&unk_1EBE85348);
      sub_1DCD2889C(v31, v32, (uint64_t *)&unk_1EBE85348);
      BOOL v33 = *v25;
      if ((*v25)(v16, 1, v28) == 1)
      {
        if (v33((char *)v32, 1, v28) != 1)
        {
          uint64_t v53 = &qword_1EAB02AF0;
          uint64_t v22 = v65;
          goto LABEL_33;
        }
        sub_1DCD2479C((uint64_t)v16, (uint64_t *)&unk_1EBE85348);
        uint64_t v22 = v65;
      }
      else
      {
        uint64_t v34 = v69;
        sub_1DCD2889C((uint64_t)v16, v69, (uint64_t *)&unk_1EBE85348);
        if (v33((char *)v32, 1, v28) == 1)
        {
          uint64_t v54 = v34;
          uint64_t v53 = &qword_1EAB02AF0;
          uint64_t v22 = v65;
          goto LABEL_32;
        }
        uint64_t v35 = v67;
        sub_1DCFCC5CC(v32, v67, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        uint64_t v36 = v68;
        uint64_t v37 = v68 + *(int *)(v64 + 48);
        sub_1DCD2889C(v34, v68, &qword_1EBE86340);
        sub_1DCD2889C(v35, v37, &qword_1EBE86340);
        uint64_t v38 = v61;
        uint64_t v39 = *v60;
        if ((*v60)(v36, 1, v61) == 1)
        {
          int v40 = v39(v37, 1, v38);
          char v16 = v59;
          uint64_t v22 = v65;
          uint64_t v41 = v67;
          if (v40 != 1) {
            goto LABEL_30;
          }
          sub_1DCD2479C(v68, &qword_1EBE86340);
        }
        else
        {
          uint64_t v42 = v68;
          uint64_t v43 = v62;
          sub_1DCD2889C(v68, v62, &qword_1EBE86340);
          int v44 = v39(v37, 1, v38);
          uint64_t v22 = v65;
          if (v44 == 1)
          {
            sub_1DCFCC56C(v43, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
            uint64_t v41 = v67;
            char v16 = v59;
LABEL_30:
            sub_1DCD2479C(v68, &qword_1EAB02AD8);
LABEL_31:
            sub_1DCFCC56C(v41, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
            uint64_t v53 = (uint64_t *)&unk_1EBE85348;
            uint64_t v54 = v69;
LABEL_32:
            sub_1DCFCC56C(v54, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
LABEL_33:
            sub_1DCD2479C((uint64_t)v16, v53);
            break;
          }
          uint64_t v45 = (uint64_t)v57;
          sub_1DCFCC5CC(v37, (uint64_t)v57, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          char v46 = sub_1DCDA8398(v43, v45);
          sub_1DCFCC56C(v45, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          sub_1DCFCC56C(v43, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config);
          sub_1DCD2479C(v42, &qword_1EBE86340);
          uint64_t v41 = v67;
          char v16 = v59;
          if ((v46 & 1) == 0) {
            goto LABEL_31;
          }
        }
        uint64_t v47 = v69;
        sub_1DD047BF8();
        sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        char v48 = sub_1DD0483B8();
        sub_1DCFCC56C(v41, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        uint64_t v49 = v47;
        uint64_t v28 = v66;
        sub_1DCFCC56C(v49, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
        sub_1DCD2479C((uint64_t)v16, (uint64_t *)&unk_1EBE85348);
        uint64_t v26 = v58;
        if ((v48 & 1) == 0) {
          break;
        }
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v50 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      sub_1DCFCC56C((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      BOOL v52 = v27-- != 0;
      if (v50)
      {
        v24 += v26;
        BOOL v25 = v63;
        if (v52) {
          continue;
        }
      }
      return v50 & 1;
    }
    sub_1DCFCC56C((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
    sub_1DCFCC56C((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
    goto LABEL_35;
  }
  char v50 = 1;
  return v50 & 1;
}

BOOL sub_1DCFBAD40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1DCFBADAC(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB754C(a1, a2, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t (*)(char *, char *))sub_1DCF0BC14, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

BOOL sub_1DCFBAE00(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1DCFBAE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v20 = 1;
      return v20 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v29 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(v29 + v15 * v12, (uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
      sub_1DCFCC504(v14 + v15 * v12, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
      char v16 = *(void **)v10;
      uint64_t v17 = *(void **)v6;
      uint64_t v18 = *(void *)(*(void *)v10 + 16);
      if (v18 != *(void *)(*(void *)v6 + 16)) {
        break;
      }
      if (v18) {
        BOOL v19 = v16 == v17;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        if (v16[4] != v17[4]) {
          break;
        }
        if (v18 != 1)
        {
          if (v16[5] != v17[5]) {
            break;
          }
          uint64_t v21 = v16 + 6;
          uint64_t v22 = v17 + 6;
          uint64_t v23 = v18 - 2;
          while (v23)
          {
            uint64_t v25 = *v21++;
            uint64_t v24 = v25;
            uint64_t v26 = *v22++;
            --v23;
            if (v24 != v26) {
              goto LABEL_19;
            }
          }
        }
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v20 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
      if ((v20 & 1) != 0 && ++v12 != v11) {
        continue;
      }
      return v20 & 1;
    }
LABEL_19:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_1DCFBB11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v14 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      if (*v10 != *v6) {
        break;
      }
      if (v10[1] != v6[1]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      v12 += v15;
      if (!--v11) {
        return 1;
      }
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_SizeRange);
  }
  return 0;
}

uint64_t sub_1DCFBB360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (float *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (float *)((char *)&v27 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v11 && a1 != a2)
  {
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v28 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1DCFCC504(v28 + v15 * v12, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
      sub_1DCFCC504(v14 + v15 * v12, (uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
      char v16 = *(void **)v10;
      uint64_t v17 = *(void **)v6;
      uint64_t v18 = *(void *)(*(void *)v10 + 16);
      if (v18 != *(void *)(*(void *)v6 + 16)) {
        break;
      }
      if (v18) {
        BOOL v19 = v16 == v17;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        BOOL v20 = v16[4] == v17[4] && v16[5] == v17[5];
        if (!v20 && (sub_1DD048FA8() & 1) == 0) {
          break;
        }
        if (v18 != 1)
        {
          BOOL v21 = v16[6] == v17[6] && v16[7] == v17[7];
          if (!v21 && (sub_1DD048FA8() & 1) == 0) {
            break;
          }
          uint64_t v22 = v18 - 2;
          if (v22)
          {
            uint64_t v24 = v17 + 9;
            uint64_t v25 = v16 + 9;
            do
            {
              BOOL v26 = *(v25 - 1) == *(v24 - 1) && *v25 == *v24;
              if (!v26 && (sub_1DD048FA8() & 1) == 0) {
                goto LABEL_36;
              }
              v24 += 2;
              v25 += 2;
            }
            while (--v22);
          }
        }
      }
      if (v10[2] != v6[2]) {
        break;
      }
      if (v10[3] != v6[3]) {
        break;
      }
      if (v10[4] != v6[4]) {
        break;
      }
      if (v10[5] != v6[5]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      if ((sub_1DD0483B8() & 1) == 0) {
        break;
      }
      ++v12;
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
      uint64_t result = 1;
      if (v12 == v11) {
        return result;
      }
    }
LABEL_36:
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.SafeRegionConfig);
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFBB694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_1DCFCC504(a1 + v12, (uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
      sub_1DCFCC504(a2 + v12, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
      if (*v10 != *v6 || v10[1] != v6[1]) {
        break;
      }
      sub_1DD047BF8();
      sub_1DCFCC4BC(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v14 = sub_1DD0483B8();
      sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
      sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_1DCFCC56C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
    sub_1DCFCC56C((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
    goto LABEL_15;
  }
  char v14 = 1;
  return v14 & 1;
}

uint64_t sub_1DCFBB8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  float v5 = *(float *)(a1 + 48);
  float v6 = *(float *)(a2 + 48);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    if (v5 == v6) {
      goto LABEL_12;
    }
    return 0;
  }
  char v8 = sub_1DD048FA8();
  uint64_t result = 0;
  if ((v8 & 1) != 0 && v5 == v6)
  {
LABEL_12:
    uint64_t v10 = v2 - 1;
    if (v10)
    {
      uint64_t v11 = (float *)(a2 + 72);
      for (uint64_t i = (float *)(a1 + 72); ; i += 6)
      {
        float v13 = *i;
        float v14 = *v11;
        if (*((void *)i - 2) == *((void *)v11 - 2) && *((void *)i - 1) == *((void *)v11 - 1))
        {
          if (v13 != v14) {
            return 0;
          }
        }
        else
        {
          char v16 = sub_1DD048FA8();
          uint64_t result = 0;
          if ((v16 & 1) == 0 || v13 != v14) {
            return result;
          }
        }
        v11 += 6;
        uint64_t result = 1;
        if (!--v10) {
          return result;
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1DCFBBA00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 48);
    for (uint64_t i = (uint64_t *)(a2 + 48); ; i += 8)
    {
      uint64_t v5 = *v3;
      uint64_t v6 = v3[1];
      uint64_t v7 = v3[2];
      uint64_t v16 = v3[4];
      uint64_t v17 = v3[3];
      uint64_t v8 = *i;
      uint64_t v9 = i[1];
      uint64_t v10 = i[2];
      uint64_t v11 = i[3];
      uint64_t v14 = i[4];
      uint64_t v15 = v3[5];
      uint64_t v13 = i[5];
      if ((*(v3 - 2) != *(i - 2) || *(v3 - 1) != *(i - 1)) && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      if ((v5 != v8 || v6 != v9) && (sub_1DD048FA8() & 1) == 0
        || (v7 != v10 || v17 != v11) && (sub_1DD048FA8() & 1) == 0
        || (v16 != v14 || v15 != v13) && (sub_1DD048FA8() & 1) == 0)
      {
        break;
      }
      v3 += 8;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFBBB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (float **)(v4 + 24 * v3);
      uint64_t v7 = *v6;
      uint64_t v8 = (float **)(v5 + 24 * v3);
      uint64_t v9 = *v8;
      uint64_t v10 = *((void *)*v6 + 2);
      if (v10 != *((void *)*v8 + 2)) {
        break;
      }
      if (v10) {
        BOOL v11 = v7 == v9;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11)
      {
        if (v7[8] != v9[8]) {
          return 0;
        }
        if (v10 != 1)
        {
          if (v7[9] != v9[9]) {
            return 0;
          }
          unint64_t v12 = v7 + 10;
          uint64_t v13 = v9 + 10;
          for (uint64_t i = v10 - 2; i; --i)
          {
            float v15 = *v12++;
            float v16 = v15;
            float v17 = *v13++;
            if (v16 != v17) {
              return 0;
            }
          }
        }
      }
      if ((v6[1] != v8[1] || v6[2] != v8[2]) && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFBBC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (void *)(v4 + 24 * v3);
      uint64_t v7 = v6[2];
      uint64_t v8 = (void *)(v5 + 24 * v3);
      uint64_t v9 = v8[2];
      BOOL v10 = *v6 == *v8 && v6[1] == v8[1];
      if (!v10 && (sub_1DD048FA8() & 1) == 0) {
        break;
      }
      uint64_t v11 = *(void *)(v7 + 16);
      if (v11 != *(void *)(v9 + 16)) {
        break;
      }
      if (v11) {
        BOOL v12 = v7 == v9;
      }
      else {
        BOOL v12 = 1;
      }
      if (!v12)
      {
        float v13 = *(float *)(v7 + 48);
        float v14 = *(float *)(v9 + 48);
        if (*(void *)(v7 + 32) == *(void *)(v9 + 32) && *(void *)(v7 + 40) == *(void *)(v9 + 40))
        {
          if (v13 != v14) {
            return 0;
          }
        }
        else
        {
          char v16 = sub_1DD048FA8();
          uint64_t result = 0;
          if ((v16 & 1) == 0 || v13 != v14) {
            return result;
          }
        }
        uint64_t v18 = v11 - 1;
        if (v18)
        {
          uint64_t v19 = (float *)(v9 + 72);
          BOOL v20 = (float *)(v7 + 72);
          do
          {
            float v21 = *v20;
            float v22 = *v19;
            if (*((void *)v20 - 2) == *((void *)v19 - 2) && *((void *)v20 - 1) == *((void *)v19 - 1))
            {
              if (v21 != v22) {
                return 0;
              }
            }
            else
            {
              char v24 = sub_1DD048FA8();
              uint64_t result = 0;
              if ((v24 & 1) == 0 || v21 != v22) {
                return result;
              }
            }
            v19 += 6;
            v20 += 6;
            --v18;
          }
          while (v18);
        }
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1DCFBBDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[7];
        v19[6] = v3[6];
        v19[7] = v7;
        v20[0] = v3[8];
        *(_OWORD *)((char *)v20 + 13) = *(_OWORD *)((char *)v3 + 141);
        long long v8 = v3[3];
        v19[2] = v3[2];
        v19[3] = v8;
        long long v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        long long v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        long long v11 = v4[7];
        v17[6] = v4[6];
        v17[7] = v11;
        v18[0] = v4[8];
        *(_OWORD *)((char *)v18 + 13) = *(_OWORD *)((char *)v4 + 141);
        long long v12 = v4[3];
        void v17[2] = v4[2];
        v17[3] = v12;
        long long v13 = v4[5];
        void v17[4] = v4[4];
        v17[5] = v13;
        long long v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        char v15 = _s18VisualIntelligence0A13UnderstandingV10DomainInfoV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 10;
        v3 += 10;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1DCFBBEE0(uint64_t a1, uint64_t a2)
{
  return sub_1DCFB754C(a1, a2, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule, (uint64_t (*)(char *, char *))sub_1DCF89250, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
}

void __swiftcall VisualUnderstanding.Text.init(text:confidence:boundingBox:)(VisualIntelligence::VisualUnderstanding::Text *__return_ptr retstr, Swift::String text, Swift::Float confidence, VisualIntelligence::NormalizedRect boundingBox)
{
  retstr->text = text;
  retstr->confidence = confidence;
  CGSize v5 = *(CGSize *)(v4 + 16);
  retstr->boundingBox.bottomLeftCGRect.origin = *(CGPoint *)v4;
  retstr->boundingBox.bottomLeftCGRect.size = v5;
}

uint64_t sub_1DCFBBF4C()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (float *)((char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void *)(*(void *)v0 + 16);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = *(void *)v0 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v10 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCFCC504(v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v7[104])
    {
      float v11 = *((float *)v7 + 18);
      sub_1DCFCC56C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v11 > 0.5) {
        break;
      }
      goto LABEL_4;
    }
    CGFloat v12 = *(double *)v7;
    CGFloat v13 = *((double *)v7 + 1);
    CGFloat v14 = *((double *)v7 + 2);
    CGFloat v15 = *((double *)v7 + 3);
    v22.origin.CGFloat x = *(CGFloat *)v7;
    v22.origin.CGFloat y = v13;
    v22.size.width = v14;
    v22.size.height = v15;
    double Width = CGRectGetWidth(v22);
    v23.origin.CGFloat x = v12;
    v23.origin.CGFloat y = v13;
    v23.size.width = v14;
    v23.size.height = v15;
    double v17 = Width * CGRectGetHeight(v23);
    sub_1DCFCC504((uint64_t)v7, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v17 <= 0.2)
    {
      sub_1DCFCC56C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCFCC56C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_4;
    }
    float v18 = v3[18];
    sub_1DCFCC56C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCFCC56C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v18 > 0.1) {
      break;
    }
LABEL_4:
    v9 += v10;
    if (!--v8)
    {
      uint64_t v19 = 0;
      goto LABEL_13;
    }
  }
  uint64_t v19 = 1;
LABEL_13:
  swift_bridgeObjectRelease();
  return v19;
}

float sub_1DCFBC1C0()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  int64_t v6 = *(void *)(*v0 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCFC5800(0, v6, 0);
    uint64_t v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    uint64_t v7 = v21;
    do
    {
      sub_1DCFCC504(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      int v10 = *((_DWORD *)v4 + 18);
      sub_1DCFCC56C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC5800(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v21;
      }
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1DCFC5800(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v21;
      }
      *(void *)(v7 + 16) = v12 + 1;
      *(_DWORD *)(v7 + 4 * v12 + 32) = v10;
      v8 += v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(void *)(v7 + 16);
  if (v13)
  {
    float v14 = *(float *)(v7 + 32);
    uint64_t v15 = v13 - 1;
    if (v15)
    {
      char v16 = (float *)(v7 + 36);
      do
      {
        float v17 = *v16++;
        float v18 = v17;
        if (v14 < v17) {
          float v14 = v18;
        }
        --v15;
      }
      while (v15);
    }
  }
  else
  {
    float v14 = 0.0;
  }
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1DCFBC3C4(char a1)
{
  unint64_t result = 0x6567616D496C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697461746F6E6E61;
      break;
    case 2:
      unint64_t result = 0x5264656E69666572;
      break;
    case 3:
      unint64_t result = 0x7A69536567616D69;
      break;
    case 4:
      unint64_t result = 0x6D6D6F436C727563;
      break;
    case 5:
      unint64_t result = 0x44497972657571;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6E6F697461727564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCFBC500()
{
  return sub_1DCFBC3C4(*v0);
}

uint64_t sub_1DCFBC508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCA2E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCFBC530(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1DCFBC53C(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4A28();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBC578(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4A28();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85150);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v41 = v1[2];
  uint64_t v42 = v8;
  uint64_t v10 = v1[3];
  uint64_t v39 = v1[4];
  uint64_t v40 = v10;
  uint64_t v11 = v1[5];
  uint64_t v37 = v1[6];
  uint64_t v38 = v11;
  uint64_t v12 = v1[7];
  uint64_t v35 = v1[8];
  uint64_t v36 = v12;
  uint64_t v13 = v1[9];
  uint64_t v14 = v1[10];
  uint64_t v15 = v1[11];
  uint64_t v16 = v1[12];
  uint64_t v34 = v1[13];
  uint64_t v33 = v1[14];
  int v51 = *((unsigned __int8 *)v1 + 120);
  uint64_t v31 = v1[16];
  uint64_t v32 = v1[17];
  uint64_t v30 = v1[18];
  uint64_t v27 = v1[19];
  uint64_t v28 = v1[20];
  uint64_t v17 = v1[22];
  uint64_t v29 = v1[21];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v18);
  sub_1DCFC4A28();
  sub_1DD049138();
  uint64_t v43 = v9;
  char v52 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F58);
  sub_1DCFC4BE4(&qword_1EBE84F60, &qword_1EBE849A0);
  sub_1DD048F18();
  if (!v2)
  {
    char v22 = v51;
    uint64_t v23 = v33;
    uint64_t v43 = v42;
    uint64_t v44 = v41;
    uint64_t v45 = v40;
    uint64_t v46 = v39;
    uint64_t v47 = v38;
    uint64_t v48 = v37;
    uint64_t v24 = v34;
    uint64_t v49 = v36;
    uint64_t v50 = v35;
    char v52 = 1;
    sub_1DCFC4A7C();
    sub_1DD048EA8();
    uint64_t v43 = v13;
    uint64_t v44 = v14;
    uint64_t v45 = v15;
    uint64_t v46 = v16;
    char v52 = 2;
    sub_1DCEE6438();
    sub_1DD048F18();
    uint64_t v43 = v24;
    uint64_t v44 = v23;
    LOBYTE(v45) = v22;
    char v52 = 3;
    type metadata accessor for CGSize(0);
    sub_1DCFCC4BC(&qword_1EBE868E8, type metadata accessor for CGSize);
    sub_1DD048EA8();
    LOBYTE(v43) = 4;
    sub_1DD048EB8();
    LOBYTE(v43) = 5;
    sub_1DD048F48();
    uint64_t v43 = v27;
    uint64_t v44 = v28;
    uint64_t v45 = v29;
    char v52 = 6;
    sub_1DCFC4AD0();
    sub_1DD048EA8();
    uint64_t v43 = v17;
    char v52 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86868);
    sub_1DCFC4B24(&qword_1EBE86870, &qword_1EBE86868, (void (*)(void))sub_1DCFC4B90);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v21);
}

uint64_t VisualUnderstanding.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB046C8);
  uint64_t v87 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBE84A80 != -1) {
    swift_once();
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4A28();
  sub_1DD049128();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1DCD43078(0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F58);
    LOBYTE(v47) = 0;
    sub_1DCFC4BE4(&qword_1EAB046D0, &qword_1EAB046D8);
    sub_1DD048E28();
    uint64_t v8 = v59;
    LOBYTE(v47) = 1;
    sub_1DCFC4C78();
    swift_bridgeObjectRetain();
    sub_1DD048DB8();
    uint64_t v39 = a2;
    uint64_t v9 = v61;
    uint64_t v10 = v62;
    LOBYTE(v47) = 2;
    uint64_t v45 = v63;
    uint64_t v46 = v59;
    uint64_t v42 = v60;
    uint64_t v43 = v65;
    uint64_t v44 = v64;
    uint64_t v41 = v66;
    sub_1DCD434B4(v59);
    sub_1DCEE64E0();
    sub_1DD048E28();
    uint64_t v11 = v59;
    uint64_t v12 = v60;
    uint64_t v13 = v61;
    uint64_t v14 = v62;
    type metadata accessor for CGSize(0);
    LOBYTE(v47) = 3;
    sub_1DCFCC4BC(&qword_1EAB046E8, type metadata accessor for CGSize);
    sub_1DD048DB8();
    uint64_t v37 = v60;
    uint64_t v38 = v59;
    int v36 = v61;
    char v86 = v61;
    LOBYTE(v59) = 4;
    uint64_t v35 = sub_1DD048DC8();
    LOBYTE(v59) = 5;
    uint64_t v40 = v15;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1DD048E58();
    LOBYTE(v47) = 6;
    sub_1DCFC4CCC();
    sub_1DD048DB8();
    uint64_t v32 = v8;
    uint64_t v33 = v10;
    uint64_t v31 = v9;
    uint64_t v16 = v59;
    uint64_t v17 = v60;
    uint64_t v18 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86868);
    char v83 = 7;
    sub_1DCD43548(v16);
    sub_1DCFC4B24(&qword_1EAB046F8, &qword_1EBE86868, (void (*)(void))sub_1DCFC4D20);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v7, v5);
    uint64_t v19 = v84;
    uint64_t v87 = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v47 = v32;
    *((void *)&v47 + 1) = v46;
    *(void *)&long long v48 = v42;
    *((void *)&v48 + 1) = v31;
    *(void *)&long long v49 = v33;
    *((void *)&v49 + 1) = v45;
    *(void *)&long long v50 = v44;
    *((void *)&v50 + 1) = v43;
    *(void *)&long long v51 = v41;
    *((void *)&v51 + 1) = v11;
    *(void *)&long long v52 = v12;
    *((void *)&v52 + 1) = v13;
    *(void *)&long long v53 = v14;
    *((void *)&v53 + 1) = v38;
    *(void *)&long long v54 = v37;
    BYTE8(v54) = v36;
    *(void *)&long long v55 = v35;
    *((void *)&v55 + 1) = v40;
    *(void *)&long long v56 = v34;
    *((void *)&v56 + 1) = v16;
    *(void *)&long long v57 = v17;
    *((void *)&v57 + 1) = v18;
    uint64_t v58 = v19;
    sub_1DCD433F0((uint64_t)&v47);
    swift_bridgeObjectRelease();
    sub_1DCD43078(v16);
    swift_bridgeObjectRelease();
    uint64_t v20 = v42;
    uint64_t v21 = v31;
    sub_1DCD43C58(v46);
    uint64_t v22 = v32;
    swift_bridgeObjectRelease();
    long long v23 = v56;
    uint64_t v24 = v39;
    *(_OWORD *)(v39 + 128) = v55;
    *(_OWORD *)(v24 + 144) = v23;
    *(_OWORD *)(v24 + 160) = v57;
    *(void *)(v24 + 176) = v58;
    long long v25 = v52;
    *(_OWORD *)(v24 + 64) = v51;
    *(_OWORD *)(v24 + 80) = v25;
    long long v26 = v54;
    *(_OWORD *)(v24 + 96) = v53;
    *(_OWORD *)(v24 + 112) = v26;
    long long v27 = v48;
    *(_OWORD *)uint64_t v24 = v47;
    *(_OWORD *)(v24 + 16) = v27;
    long long v28 = v50;
    *(_OWORD *)(v24 + 32) = v49;
    *(_OWORD *)(v24 + 48) = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v59 = v22;
    uint64_t v60 = v46;
    uint64_t v61 = v20;
    uint64_t v62 = v21;
    uint64_t v63 = v33;
    uint64_t v64 = v45;
    uint64_t v65 = v44;
    uint64_t v66 = v43;
    uint64_t v67 = v41;
    uint64_t v68 = v11;
    uint64_t v69 = v12;
    uint64_t v70 = v13;
    uint64_t v71 = v14;
    uint64_t v72 = v38;
    uint64_t v73 = v37;
    char v74 = v86;
    *(_DWORD *)&void v75[3] = *(_DWORD *)&v85[3];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v85;
    uint64_t v76 = v35;
    uint64_t v77 = v40;
    uint64_t v78 = v34;
    uint64_t v79 = v16;
    uint64_t v80 = v17;
    uint64_t v81 = v18;
    uint64_t v82 = v87;
    return sub_1DCD43B94((uint64_t)&v59);
  }
}

uint64_t sub_1DCFBD28C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.init(from:)(a1, a2);
}

uint64_t sub_1DCFBD2A4(void *a1)
{
  return VisualUnderstanding.encode(to:)(a1);
}

uint64_t sub_1DCFBD2BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A20);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFCA6C4();
  sub_1DD049138();
  char v14 = 0;
  sub_1DD048EB8();
  if (!v4)
  {
    char v13 = 1;
    sub_1DD048ED8();
    char v12 = 2;
    sub_1DD048F48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DCFBD468()
{
  unint64_t v1 = 0xD000000000000016;
  if (*v0 != 1) {
    unint64_t v1 = 0x6D69547472617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1DCFBD4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCA718(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFBD4F4(uint64_t a1)
{
  unint64_t v2 = sub_1DCFCA6C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBD530(uint64_t a1)
{
  unint64_t v2 = sub_1DCFCA6C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1DCFBD56C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v7 = sub_1DCFCA87C(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v6;
  }
}

uint64_t sub_1DCFBD5A0(void *a1)
{
  return sub_1DCFBD2BC(a1, *v1, v1[1], v1[3]);
}

uint64_t VisualUnderstanding.Text.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

float VisualUnderstanding.Text.confidence.getter()
{
  return *(float *)(v0 + 16);
}

__n128 VisualUnderstanding.Text.boundingBox.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  long long v3 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1DCFBD60C()
{
  uint64_t v1 = 0x6E656469666E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E69646E756F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_1DCFBD66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCAA98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFBD694(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4D74();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBD6D0(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4D74();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.Text.encode(to:)(void *a1)
{
  return sub_1DCFBD8F4(a1, &qword_1EAB04708, (void (*)(void))sub_1DCFC4D74);
}

uint64_t VisualUnderstanding.Text.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCFBDB08(a1, &qword_1EAB04718, (void (*)(void))sub_1DCFC4D74, a2);
}

uint64_t sub_1DCFBD784@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.Text.init(from:)(a1, a2);
}

uint64_t sub_1DCFBD79C(void *a1)
{
  return VisualUnderstanding.Text.encode(to:)(a1);
}

uint64_t sub_1DCFBD7B4()
{
  uint64_t v1 = 0x6E656469666E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E69646E756F62;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_1DCFBD818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCAC04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFBD840(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4DC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBD87C(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4DC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.RegionalAnnotation.encode(to:)(void *a1)
{
  return sub_1DCFBD8F4(a1, &qword_1EBE86A10, (void (*)(void))sub_1DCFC4DC8);
}

uint64_t sub_1DCFBD8F4(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v16 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v3;
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  uint64_t v11 = v3[5];
  uint64_t v12 = v3[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16();
  sub_1DD049138();
  LOBYTE(v19) = 0;
  uint64_t v13 = v17;
  sub_1DD048EB8();
  if (!v13)
  {
    LOBYTE(v19) = 1;
    sub_1DD048EE8();
    uint64_t v19 = v9;
    uint64_t v20 = v10;
    uint64_t v21 = v11;
    uint64_t v22 = v12;
    char v18 = 2;
    sub_1DCEE6438();
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VisualUnderstanding.RegionalAnnotation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCFBDB08(a1, &qword_1EAB04720, (void (*)(void))sub_1DCFC4DC8, a2);
}

uint64_t sub_1DCFBDB08@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1DD049128();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v10 = v7;
  LOBYTE(v25) = 0;
  uint64_t v12 = v22;
  uint64_t v11 = v23;
  uint64_t v13 = sub_1DD048DC8();
  uint64_t v15 = v14;
  LOBYTE(v25) = 1;
  swift_bridgeObjectRetain();
  sub_1DD048DF8();
  int v17 = v16;
  char v24 = 2;
  sub_1DCEE64E0();
  sub_1DD048E28();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  long long v19 = v25;
  long long v20 = v26;
  *(void *)uint64_t v12 = v13;
  *(void *)(v12 + 8) = v15;
  *(_DWORD *)(v12 + 16) = v17;
  *(_OWORD *)(v12 + 24) = v19;
  *(_OWORD *)(v12 + 40) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFBDD48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.RegionalAnnotation.init(from:)(a1, a2);
}

uint64_t sub_1DCFBDD60(void *a1)
{
  return VisualUnderstanding.RegionalAnnotation.encode(to:)(a1);
}

uint64_t sub_1DCFBDD78()
{
  if (*v0) {
    return 0x6E6F697369766572;
  }
  else {
    return 0x736E6F69676572;
  }
}

uint64_t sub_1DCFBDDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCAD78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFBDDDC(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4E1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBDE18(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4E1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.ScenenetAnnotations.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04728);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4E1C();
  sub_1DD049138();
  uint64_t v13 = v8;
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F68);
  sub_1DCFC4B24(&qword_1EBE84F70, &qword_1EBE84F68, (void (*)(void))sub_1DCFC4E70);
  sub_1DD048F18();
  if (!v2)
  {
    char v11 = 1;
    sub_1DD048F08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisualUnderstanding.ScenenetAnnotations.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04738);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4E1C();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F68);
  v12[15] = 0;
  sub_1DCFC4B24(&qword_1EAB04740, &qword_1EBE84F68, (void (*)(void))sub_1DCFC4EC4);
  sub_1DD048E28();
  uint64_t v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DD048E18();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFBE238@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualUnderstanding.ScenenetAnnotations.init(from:)(a1, a2);
}

uint64_t sub_1DCFBE250(void *a1)
{
  return VisualUnderstanding.ScenenetAnnotations.encode(to:)(a1);
}

uint64_t sub_1DCFBE268()
{
  uint64_t result = 0x6C6562616CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E656469666E6F63;
      break;
    case 2:
      uint64_t result = 0x6E756F4365636166;
      break;
    case 3:
      uint64_t result = 0x676E69646E756F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCFBE304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCAE6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFBE32C(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4F18();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBE368(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4F18();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82CD0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = *(_DWORD *)(v1 + 20);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4F18();
  sub_1DD049138();
  LOBYTE(v16) = 0;
  uint64_t v11 = v14;
  sub_1DD048EB8();
  if (!v11)
  {
    LOBYTE(v16) = 1;
    sub_1DD048EE8();
    LOBYTE(v16) = 2;
    sub_1DD048F38();
    uint64_t v16 = v7;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v10;
    char v15 = 3;
    sub_1DCEE6438();
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04750);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4F18();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v20) = 0;
  uint64_t v9 = sub_1DD048DC8();
  uint64_t v11 = v10;
  LOBYTE(v20) = 1;
  swift_bridgeObjectRetain();
  sub_1DD048DF8();
  int v13 = v12;
  LOBYTE(v20) = 2;
  int v18 = sub_1DD048E48();
  char v19 = 3;
  sub_1DCEE64E0();
  sub_1DD048E28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v15 = v20;
  long long v16 = v21;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 20) = v18;
  *(_OWORD *)(a2 + 24) = v15;
  *(_OWORD *)(a2 + 40) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFBE810@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.init(from:)(a1, a2);
}

uint64_t sub_1DCFBE828(void *a1)
{
  return VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.encode(to:)(a1);
}

uint64_t sub_1DCFBE848()
{
  return 0x736E6F69676572;
}

uint64_t sub_1DCFBE860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F69676572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DCFBE8F8(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4F6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBE934(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC4F6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.ReducePersonOverTriggerAnnotation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82CC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4F6C();
  sub_1DD049138();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82CA8);
  sub_1DCFC4B24(&qword_1EBE82CB0, &qword_1EBE82CA8, (void (*)(void))sub_1DCFC4FC0);
  sub_1DD048F18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisualUnderstanding.ReducePersonOverTriggerAnnotation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04758);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC4F6C();
  sub_1DD049128();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82CA8);
    sub_1DCFC4B24(&qword_1EAB04760, &qword_1EBE82CA8, (void (*)(void))sub_1DCFC5014);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DCFBECA8(char a1)
{
  uint64_t result = 0x6F6E6E4165636166;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000010;
      break;
    case 2:
      unsigned int v3 = 2003202926;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1954047348;
LABEL_5:
      uint64_t result = v3 | 0x6F6E6E4100000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000012;
      break;
    case 5:
      uint64_t result = 0xD000000000000013;
      break;
    case 6:
      uint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCFBED98@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualUnderstanding.ReducePersonOverTriggerAnnotation.init(from:)(a1, a2);
}

uint64_t sub_1DCFBEDB0(void *a1)
{
  return VisualUnderstanding.ReducePersonOverTriggerAnnotation.encode(to:)(a1);
}

uint64_t sub_1DCFBEDC8()
{
  return sub_1DCFBECA8(*v0);
}

uint64_t sub_1DCFBEDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCB050(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCFBEDF8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1DCFBEE04(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC5068();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBEE40(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC5068();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.Annotation.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85148);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v8;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[6];
  uint64_t v17 = v1[5];
  uint64_t v18 = v11;
  uint64_t v16 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC5068();
  sub_1DD049138();
  uint64_t v23 = v9;
  char v25 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F68);
  sub_1DCFC4B24(&qword_1EBE84F70, &qword_1EBE84F68, (void (*)(void))sub_1DCFC4E70);
  sub_1DD048EA8();
  if (!v2)
  {
    uint64_t v13 = v20;
    uint64_t v12 = v21;
    uint64_t v23 = v22;
    char v25 = 1;
    sub_1DD048EA8();
    uint64_t v23 = v12;
    char v25 = 2;
    sub_1DD048EA8();
    uint64_t v23 = v13;
    char v25 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F78);
    sub_1DCFC4B24(&qword_1EBE84F80, &qword_1EBE84F78, (void (*)(void))sub_1DCFC50BC);
    sub_1DD048EA8();
    uint64_t v23 = v19;
    char v25 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FA8);
    sub_1DCFC4B24(&qword_1EBE84FB0, &qword_1EBE84FA8, (void (*)(void))sub_1DCFC5110);
    sub_1DD048EA8();
    uint64_t v23 = v17;
    uint64_t v24 = v18;
    char v25 = 5;
    sub_1DCFC5164();
    sub_1DD048EA8();
    uint64_t v23 = v16;
    char v25 = 6;
    sub_1DCFC51B8();
    sub_1DD048EA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisualUnderstanding.Annotation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04770);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC5068();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v26 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F68);
  char v29 = 0;
  sub_1DCFC4B24(&qword_1EAB04740, &qword_1EBE84F68, (void (*)(void))sub_1DCFC4EC4);
  sub_1DD048DB8();
  uint64_t v9 = v27;
  char v29 = 1;
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  char v29 = 2;
  uint64_t v25 = v27;
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  uint64_t v11 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F78);
  char v29 = 3;
  sub_1DCFC4B24(&qword_1EAB04778, &qword_1EBE84F78, (void (*)(void))sub_1DCFC520C);
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  uint64_t v23 = v11;
  uint64_t v12 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FA8);
  char v29 = 4;
  sub_1DCFC4B24(&qword_1EAB04788, &qword_1EBE84FA8, (void (*)(void))sub_1DCFC5260);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  sub_1DD048DB8();
  uint64_t v22 = v12;
  uint64_t v13 = v27;
  char v29 = 5;
  sub_1DCFC52B4();
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  uint64_t v14 = v27;
  uint64_t v20 = v28;
  char v29 = 6;
  sub_1DCFC5308();
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v27;
  swift_bridgeObjectRetain();
  uint64_t v17 = v25;
  uint64_t v16 = v26;
  *long long v26 = v9;
  v16[1] = v17;
  v16[2] = v23;
  v16[3] = v12;
  uint64_t v18 = v24;
  v16[4] = v13;
  id v16[5] = v18;
  v16[6] = v20;
  v16[7] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFBF8E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualUnderstanding.Annotation.init(from:)(a1, a2);
}

uint64_t sub_1DCFBF900(void *a1)
{
  return VisualUnderstanding.Annotation.encode(to:)(a1);
}

BOOL static VisualUnderstanding.ImageRegion.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (CGRect *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (CGRect *)((char *)&v13 - v8);
  char v10 = sub_1DCFBBDF0(*(void *)(a1 + 48), *(void *)(a2 + 48));
  sub_1DCFCC504(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCFCC504(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  BOOL v11 = (v10 & 1) != 0 && CGRectEqualToRect(*v9, *v6);
  sub_1DCFCC56C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCFCC56C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return v11;
}

uint64_t VisualUnderstanding.ImageRegion.hash(into:)()
{
  CGFloat v1 = *(double *)v0;
  CGFloat v2 = *(double *)(v0 + 8);
  CGFloat v3 = *(double *)(v0 + 16);
  CGFloat v4 = *(double *)(v0 + 24);
  v11.origin.CGFloat x = *(CGFloat *)v0;
  v11.origin.CGFloat y = v2;
  v11.size.width = v3;
  v11.size.height = v4;
  CGRectGetMinX(v11);
  sub_1DD0490F8();
  v12.origin.CGFloat x = v1;
  v12.origin.CGFloat y = v2;
  v12.size.width = v3;
  v12.size.height = v4;
  CGRectGetMaxX(v12);
  sub_1DD0490F8();
  v13.origin.CGFloat x = v1;
  v13.origin.CGFloat y = v2;
  v13.size.width = v3;
  v13.size.height = v4;
  CGRectGetMinY(v13);
  sub_1DD0490F8();
  v14.origin.CGFloat x = v1;
  v14.origin.CGFloat y = v2;
  v14.size.width = v3;
  v14.size.height = v4;
  CGRectGetMaxY(v14);
  sub_1DD0490F8();
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t result = sub_1DD0490C8();
  if (v6)
  {
    swift_bridgeObjectRetain();
    VisualUnderstanding.DomainInfo.hash(into:)();
    uint64_t v8 = v6 - 1;
    if (v8)
    {
      uint64_t v9 = v5 + 192;
      do
      {
        v9 += 160;
        VisualUnderstanding.DomainInfo.hash(into:)();
        --v8;
      }
      while (v8);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 VisualUnderstanding.ImageRegion.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t VisualUnderstanding.ImageRegion.recommendToSearch.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

unint64_t sub_1DCFBFC34(char a1)
{
  unint64_t result = 0x676E69646E756F62;
  switch(a1)
  {
    case 1:
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x79676F6C6F746E6FLL;
      break;
    case 3:
      unint64_t result = 0x69616D6F446C6C61;
      break;
    case 4:
      unint64_t result = 0x726F746365746564;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0x65726F6373;
      break;
    case 7:
      unint64_t result = 0x65726F6353786F62;
      break;
    case 8:
      unint64_t result = 0x6552657372616F63;
      break;
    case 9:
      unint64_t result = 0x49656C6F68577369;
      break;
    case 10:
      unint64_t result = 0x736C616E676973;
      break;
    case 11:
      unint64_t result = 0x55676E6967676F6CLL;
      break;
    case 12:
      unint64_t result = 0x6570756F72477369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCFBFE24()
{
  return sub_1DCFBFC34(*v0);
}

uint64_t sub_1DCFBFE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCB360(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCFBFE54(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1DCFBFE60(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC535C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFBFE9C(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC535C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.ImageRegion.encode(to:)(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85160);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC535C();
  sub_1DD049138();
  long long v9 = v3[1];
  long long v15 = *v3;
  long long v16 = v9;
  char v14 = 0;
  sub_1DCEE6438();
  sub_1DD048F18();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1DD048EC8();
    *(void *)&long long v15 = *((void *)v3 + 5);
    char v14 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F88);
    sub_1DCFC4B24(&qword_1EBE84F90, &qword_1EBE84F88, (void (*)(void))sub_1DCEE648C);
    sub_1DD048F18();
    *(void *)&long long v15 = *((void *)v3 + 6);
    char v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F48);
    sub_1DCFC4B24(&qword_1EBE84F50, &qword_1EBE84F48, (void (*)(void))sub_1DCFC53B0);
    sub_1DD048F18();
    *(void *)&long long v15 = *((void *)v3 + 7);
    char v14 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F98);
    sub_1DCFC4B24(&qword_1EBE84FA0, &qword_1EBE84F98, (void (*)(void))sub_1DCFC5404);
    sub_1DD048F18();
    *(void *)&long long v15 = *((void *)v3 + 8);
    char v14 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86888);
    sub_1DCFC4B24(&qword_1EBE86890, &qword_1EBE86888, (void (*)(void))sub_1DCFC5458);
    sub_1DD048F18();
    LOBYTE(v15) = 6;
    sub_1DD048EE8();
    LOBYTE(v15) = 7;
    sub_1DD048EE8();
    uint64_t v10 = *((void *)v3 + 12);
    long long v15 = v3[5];
    *(void *)&long long v16 = v10;
    char v14 = 8;
    sub_1DCFC54AC();
    sub_1DD048EA8();
    LOBYTE(v15) = 9;
    sub_1DD048EC8();
    *(void *)&long long v15 = *((void *)v3 + 14);
    char v14 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86848);
    sub_1DCFC4B24(&qword_1EBE86850, &qword_1EBE86848, (void (*)(void))sub_1DCFC5500);
    sub_1DD048F18();
    uint64_t v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
    LOBYTE(v15) = 11;
    sub_1DD046598();
    sub_1DCFCC4BC(&qword_1EBE85518, MEMORY[0x1E4F27990]);
    sub_1DD048F18();
    LOBYTE(v15) = 12;
    sub_1DD048EC8();
    *(void *)&long long v15 = *(void *)((char *)v3 + *(int *)(v11 + 68));
    char v14 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB047A8);
    sub_1DCFC4B24(&qword_1EAB047B0, &qword_1EAB047A8, (void (*)(void))sub_1DCFC5554);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t VisualUnderstanding.ImageRegion.hashValue.getter()
{
  sub_1DD0490B8();
  CGFloat v1 = *(double *)v0;
  CGFloat v2 = *(double *)(v0 + 8);
  CGFloat v3 = *(double *)(v0 + 16);
  CGFloat v4 = *(double *)(v0 + 24);
  v10.origin.CGFloat x = *(CGFloat *)v0;
  v10.origin.CGFloat y = v2;
  v10.size.width = v3;
  v10.size.height = v4;
  CGRectGetMinX(v10);
  sub_1DD0490F8();
  v11.origin.CGFloat x = v1;
  v11.origin.CGFloat y = v2;
  v11.size.width = v3;
  v11.size.height = v4;
  CGRectGetMaxX(v11);
  sub_1DD0490F8();
  v12.origin.CGFloat x = v1;
  v12.origin.CGFloat y = v2;
  v12.size.width = v3;
  v12.size.height = v4;
  CGRectGetMinY(v12);
  sub_1DD0490F8();
  v13.origin.CGFloat x = v1;
  v13.origin.CGFloat y = v2;
  v13.size.width = v3;
  v13.size.height = v4;
  CGRectGetMaxY(v13);
  sub_1DD0490F8();
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  sub_1DD0490C8();
  if (v6)
  {
    VisualUnderstanding.DomainInfo.hash(into:)();
    uint64_t v7 = v6 - 1;
    if (v7)
    {
      uint64_t v8 = v5 + 192;
      do
      {
        v8 += 160;
        VisualUnderstanding.DomainInfo.hash(into:)();
        --v7;
      }
      while (v7);
    }
  }
  return sub_1DD049108();
}

uint64_t VisualUnderstanding.ImageRegion.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v31 = sub_1DD046598();
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  CGFloat v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB047C0);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  CGRect v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[32] = 1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *((void *)v10 + 5) = MEMORY[0x1E4FBC860];
  *((void *)v10 + 6) = v11;
  *(_OWORD *)(v10 + 72) = 0u;
  *((void *)v10 + 7) = v11;
  *((void *)v10 + 8) = v11;
  *(_OWORD *)(v10 + 88) = 0u;
  v10[104] = 0;
  *((void *)v10 + 14) = v11;
  uint64_t v30 = &v10[v8[17]];
  sub_1DD046588();
  uint64_t v12 = v8[18];
  v10[v12] = 0;
  uint64_t v13 = v8[19];
  long long v26 = a1;
  uint64_t v27 = v13;
  *(void *)&v10[v13] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC535C();
  uint64_t v24 = v6;
  uint64_t v14 = v28;
  sub_1DD049128();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD781D0(*((void *)v10 + 10), *((void *)v10 + 11));
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v12;
    char v34 = 0;
    sub_1DCEE64E0();
    sub_1DD048E28();
    long long v15 = v33;
    *(_OWORD *)CGRect v10 = v32;
    *((_OWORD *)v10 + 1) = v15;
    LOBYTE(v32) = 1;
    v10[32] = sub_1DD048DD8() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F88);
    char v34 = 2;
    sub_1DCFC4B24(&qword_1EAB047C8, &qword_1EBE84F88, (void (*)(void))sub_1DCEE6534);
    sub_1DD048E28();
    *((void *)v10 + 5) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F48);
    char v34 = 3;
    sub_1DCFC4B24(&qword_1EAB047D0, &qword_1EBE84F48, (void (*)(void))sub_1DCFC55A8);
    sub_1DD048E28();
    *((void *)v10 + 6) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F98);
    char v34 = 4;
    sub_1DCFC4B24(&qword_1EAB047E0, &qword_1EBE84F98, (void (*)(void))sub_1DCFC55FC);
    sub_1DD048E28();
    *((void *)v10 + 7) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86888);
    char v34 = 5;
    sub_1DCFC4B24(&qword_1EAB047F0, &qword_1EBE86888, (void (*)(void))sub_1DCFC5650);
    sub_1DD048E28();
    *((void *)v10 + 8) = v32;
    LOBYTE(v32) = 6;
    sub_1DD048DF8();
    *((_DWORD *)v10 + 18) = v16;
    LOBYTE(v32) = 7;
    sub_1DD048DF8();
    *((_DWORD *)v10 + 19) = v17;
    char v34 = 8;
    sub_1DCFC56A4();
    sub_1DD048DB8();
    uint64_t v18 = v33;
    *((_OWORD *)v10 + 5) = v32;
    *((void *)v10 + 12) = v18;
    LOBYTE(v32) = 9;
    v10[104] = sub_1DD048DD8() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86848);
    char v34 = 10;
    sub_1DCFC4B24(&qword_1EAB04808, &qword_1EBE86848, (void (*)(void))sub_1DCFC56F8);
    sub_1DD048E28();
    *((void *)v10 + 14) = v32;
    LOBYTE(v32) = 11;
    sub_1DCFCC4BC(&qword_1EAB04818, MEMORY[0x1E4F27990]);
    sub_1DD048E28();
    (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v30, v4, v31);
    LOBYTE(v32) = 12;
    v10[v28] = sub_1DD048DD8() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB047A8);
    char v34 = 13;
    sub_1DCFC4B24(&qword_1EAB04820, &qword_1EAB047A8, (void (*)(void))sub_1DCFC574C);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v19 = v32;
    uint64_t v20 = v27;
    swift_bridgeObjectRelease();
    *(void *)&v10[v20] = v19;
    sub_1DCFCC504((uint64_t)v10, v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return sub_1DCFCC56C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
}

uint64_t sub_1DCFC0EA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.ImageRegion.init(from:)(a1, a2);
}

uint64_t sub_1DCFC0EB8(void *a1)
{
  return VisualUnderstanding.ImageRegion.encode(to:)(a1);
}

BOOL sub_1DCFC0ED0(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (CGRect *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (CGRect *)((char *)&v14 - v7);
  char v11 = sub_1DCFBBDF0(*(void *)(v9 + 48), *(void *)(v10 + 48));
  sub_1DCFCC504(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCFCC504(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  BOOL v12 = (v11 & 1) != 0 && CGRectEqualToRect(*v8, *v5);
  sub_1DCFCC56C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCFCC56C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return v12;
}

uint64_t sub_1DCFC1000()
{
  CGFloat v1 = *(double *)v0;
  CGFloat v2 = *(double *)(v0 + 8);
  CGFloat v3 = *(double *)(v0 + 16);
  CGFloat v4 = *(double *)(v0 + 24);
  v10.origin.CGFloat x = *(CGFloat *)v0;
  v10.origin.CGFloat y = v2;
  v10.size.width = v3;
  v10.size.height = v4;
  CGRectGetMinX(v10);
  sub_1DD0490F8();
  v11.origin.CGFloat x = v1;
  v11.origin.CGFloat y = v2;
  v11.size.width = v3;
  v11.size.height = v4;
  CGRectGetMaxX(v11);
  sub_1DD0490F8();
  v12.origin.CGFloat x = v1;
  v12.origin.CGFloat y = v2;
  v12.size.width = v3;
  v12.size.height = v4;
  CGRectGetMinY(v12);
  sub_1DD0490F8();
  v13.origin.CGFloat x = v1;
  v13.origin.CGFloat y = v2;
  v13.size.width = v3;
  v13.size.height = v4;
  CGRectGetMaxY(v13);
  sub_1DD0490F8();
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t result = sub_1DD0490C8();
  if (v6)
  {
    uint64_t result = VisualUnderstanding.DomainInfo.hash(into:)();
    uint64_t v8 = v6 - 1;
    if (v8)
    {
      uint64_t v9 = v5 + 192;
      do
      {
        v9 += 160;
        uint64_t result = VisualUnderstanding.DomainInfo.hash(into:)();
        --v8;
      }
      while (v8);
    }
  }
  return result;
}

uint64_t sub_1DCFC118C()
{
  sub_1DD0490B8();
  CGFloat v1 = *(double *)v0;
  CGFloat v2 = *(double *)(v0 + 8);
  CGFloat v3 = *(double *)(v0 + 16);
  CGFloat v4 = *(double *)(v0 + 24);
  v10.origin.CGFloat x = *(CGFloat *)v0;
  v10.origin.CGFloat y = v2;
  v10.size.width = v3;
  v10.size.height = v4;
  CGRectGetMinX(v10);
  sub_1DD0490F8();
  v11.origin.CGFloat x = v1;
  v11.origin.CGFloat y = v2;
  v11.size.width = v3;
  v11.size.height = v4;
  CGRectGetMaxX(v11);
  sub_1DD0490F8();
  v12.origin.CGFloat x = v1;
  v12.origin.CGFloat y = v2;
  v12.size.width = v3;
  v12.size.height = v4;
  CGRectGetMinY(v12);
  sub_1DD0490F8();
  v13.origin.CGFloat x = v1;
  v13.origin.CGFloat y = v2;
  v13.size.width = v3;
  v13.size.height = v4;
  CGRectGetMaxY(v13);
  sub_1DD0490F8();
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v5 + 16);
  sub_1DD0490C8();
  if (v6)
  {
    VisualUnderstanding.DomainInfo.hash(into:)();
    uint64_t v7 = v6 - 1;
    if (v7)
    {
      uint64_t v8 = v5 + 192;
      do
      {
        v8 += 160;
        VisualUnderstanding.DomainInfo.hash(into:)();
        --v7;
      }
      while (v7);
    }
  }
  return sub_1DD049108();
}

void VisualUnderstanding.DomainInfo.domain.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *VisualUnderstanding.DomainInfo.domain.setter(unsigned char *result)
{
  unsigned char *v1 = *result;
  return result;
}

void (*VisualUnderstanding.DomainInfo.domain.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

double VisualUnderstanding.DomainInfo.focalPoint.getter()
{
  return *(double *)(v0 + 8);
}

void VisualUnderstanding.DomainInfo.focalPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

void (*VisualUnderstanding.DomainInfo.focalPoint.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualUnderstanding.DomainInfo.glyphName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualUnderstanding.DomainInfo.displayLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

float VisualUnderstanding.DomainInfo.score.getter()
{
  return *(float *)(v0 + 112);
}

void VisualUnderstanding.DomainInfo.score.setter(float a1)
{
  *(float *)(v1 + 112) = a1;
}

void (*VisualUnderstanding.DomainInfo.score.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualUnderstanding.DomainInfo.richLabelKnowledgeID.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualUnderstanding.DomainInfo.richLabelKnowledgeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return result;
}

void (*VisualUnderstanding.DomainInfo.richLabelKnowledgeID.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

float VisualUnderstanding.DomainInfo.richLabelKnowledgeIDScore.getter()
{
  return *(float *)(v0 + 152);
}

void VisualUnderstanding.DomainInfo.richLabelKnowledgeIDScore.setter(float a1)
{
  *(float *)(v1 + 152) = a1;
}

void (*VisualUnderstanding.DomainInfo.richLabelKnowledgeIDScore.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualUnderstanding.DomainInfo.isLowConfidence.getter()
{
  return *(unsigned __int8 *)(v0 + 156);
}

uint64_t VisualUnderstanding.DomainInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 144);
  sub_1DCD9C35C(*(unsigned char *)v0);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  sub_1DD0490F8();
  sub_1DD0490F8();
  sub_1DD0490D8();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
  }
  sub_1DD0490D8();
  if (v2)
  {
    sub_1DD0490D8();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_5;
    }
LABEL_8:
    sub_1DD0490D8();
    if (v4) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1DD0490D8();
  if (!v3) {
    goto LABEL_8;
  }
LABEL_5:
  sub_1DD0490D8();
  swift_bridgeObjectRetain();
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_6:
    sub_1DD0490D8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    sub_1DD0484F8();
    sub_1DCD32D90(v6, v4);
    goto LABEL_10;
  }
LABEL_9:
  sub_1DD0490D8();
LABEL_10:
  sub_1DD0490E8();
  sub_1DD0490E8();
  sub_1DD0490E8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  sub_1DD0490D8();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
  }
  sub_1DD0490E8();
  return sub_1DD0490D8();
}

unint64_t sub_1DCFC17B8(char a1)
{
  unint64_t result = 0x6E69616D6F64;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696F506C61636F66;
      break;
    case 2:
      unint64_t result = 0x6D614E6870796C67;
      break;
    case 3:
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x4C79616C70736964;
      break;
    case 5:
      unint64_t result = 0x4D79616C70736964;
      break;
    case 6:
      unint64_t result = 0x79676F6C6F746E6FLL;
      break;
    case 7:
      unint64_t result = 0x65726F6373;
      break;
    case 8:
      unint64_t result = 0x726F746365746564;
      break;
    case 9:
      unint64_t result = 0x6353657372616F63;
      break;
    case 10:
      unint64_t result = 0x7463656C65537369;
      break;
    case 11:
      unint64_t result = 0x6863726165537369;
      break;
    case 12:
      unint64_t result = 0x72656E726F437369;
      break;
    case 13:
      unint64_t result = 0x5374736575716572;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0xD000000000000019;
      break;
    case 18:
      unint64_t result = 0x6E6F43776F4C7369;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCFC1A48()
{
  return sub_1DCFC17B8(*v0);
}

uint64_t sub_1DCFC1A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCB9BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCFC1A78(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1DCFC1A84(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC682C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFC1AC0(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC682C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.DomainInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85158);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v39 = *((void *)v1 + 4);
  uint64_t v40 = v10;
  int v46 = v1[40];
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v37 = *((void *)v1 + 6);
  uint64_t v38 = v11;
  uint64_t v12 = *((void *)v1 + 9);
  uint64_t v35 = *((void *)v1 + 8);
  uint64_t v36 = v12;
  uint64_t v13 = *((void *)v1 + 11);
  uint64_t v31 = *((void *)v1 + 10);
  uint64_t v32 = v13;
  uint64_t v14 = *((void *)v1 + 13);
  uint64_t v33 = *((void *)v1 + 12);
  uint64_t v34 = v14;
  int v30 = v1[124];
  int v29 = v1[125];
  int v28 = v1[126];
  int v27 = v1[127];
  int v26 = v1[128];
  int v25 = v1[129];
  uint64_t v15 = *((void *)v1 + 18);
  uint64_t v24 = *((void *)v1 + 17);
  int v16 = v1[156];
  uint64_t v17 = a1[3];
  uint64_t v18 = a1;
  uint64_t v20 = v19;
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_1DCFC682C();
  sub_1DD049138();
  LOBYTE(v42) = v7;
  char v47 = 0;
  sub_1DCFC6880();
  uint64_t v21 = v41;
  sub_1DD048F18();
  if (v21) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  }
  uint64_t v41 = v15;
  v23[3] = v16;
  uint64_t v42 = v8;
  uint64_t v43 = v9;
  char v47 = 1;
  type metadata accessor for CGPoint(0);
  sub_1DCFCC4BC((unint64_t *)&unk_1EBE85088, type metadata accessor for CGPoint);
  sub_1DD048F18();
  LOBYTE(v42) = 2;
  sub_1DD048E88();
  LOBYTE(v42) = 3;
  sub_1DD048EC8();
  LOBYTE(v42) = 4;
  sub_1DD048E88();
  LOBYTE(v42) = 5;
  sub_1DD048E88();
  uint64_t v42 = v31;
  uint64_t v43 = v32;
  uint64_t v44 = v33;
  uint64_t v45 = v34;
  char v47 = 6;
  sub_1DCEE648C();
  sub_1DD048EA8();
  LOBYTE(v42) = 7;
  sub_1DD048EE8();
  LOBYTE(v42) = 8;
  sub_1DD048EE8();
  LOBYTE(v42) = 9;
  sub_1DD048EE8();
  LOBYTE(v42) = 10;
  sub_1DD048EC8();
  LOBYTE(v42) = 11;
  sub_1DD048EC8();
  LOBYTE(v42) = 12;
  sub_1DD048EC8();
  LOBYTE(v42) = 13;
  sub_1DD048EC8();
  LOBYTE(v42) = 14;
  sub_1DD048EC8();
  LOBYTE(v42) = 15;
  sub_1DD048EC8();
  LOBYTE(v42) = 16;
  sub_1DD048E88();
  LOBYTE(v42) = 17;
  sub_1DD048EE8();
  LOBYTE(v42) = 18;
  sub_1DD048EC8();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v20);
}

uint64_t VisualUnderstanding.DomainInfo.hashValue.getter()
{
  return sub_1DD049108();
}

uint64_t VisualUnderstanding.DomainInfo.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04830);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1DCFC682C();
  sub_1DD049128();
  if (v2)
  {
    uint64_t v112 = v2;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD32D90(v15, v14);
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v68) = 0;
  sub_1DCFC68D4();
  sub_1DD048E28();
  int v10 = v77;
  type metadata accessor for CGPoint(0);
  LOBYTE(v68) = 1;
  sub_1DCFCC4BC(&qword_1EAB02458, type metadata accessor for CGPoint);
  sub_1DD048E28();
  uint64_t v12 = v77;
  uint64_t v11 = v78;
  LOBYTE(v77) = 2;
  uint64_t v13 = sub_1DD048D78();
  uint64_t v18 = v17;
  uint64_t v66 = v13;
  LOBYTE(v77) = 3;
  swift_bridgeObjectRetain();
  int v19 = sub_1DD048DD8();
  uint64_t v65 = v18;
  LOBYTE(v77) = 4;
  uint64_t v20 = sub_1DD048D78();
  int v63 = v19;
  *(void *)&long long v64 = v20;
  *((void *)&v64 + 1) = v21;
  LOBYTE(v77) = 5;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DD048D78();
  uint64_t v24 = v23;
  *(void *)&long long v62 = v22;
  LOBYTE(v68) = 6;
  sub_1DCEE6534();
  *((void *)&v62 + 1) = v24;
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  int v59 = v10;
  uint64_t v60 = v6;
  uint64_t v15 = v77;
  uint64_t v26 = v79;
  uint64_t v25 = v80;
  LOBYTE(v77) = 7;
  uint64_t v61 = v78;
  sub_1DCD32D4C(v15, v78);
  sub_1DD048DF8();
  uint64_t v14 = v61;
  unsigned int v28 = v27;
  LOBYTE(v77) = 8;
  sub_1DD048DF8();
  uint64_t v112 = 0;
  unsigned int v30 = v29;
  LOBYTE(v77) = 9;
  sub_1DD048DF8();
  uint64_t v112 = 0;
  int v32 = v31;
  LOBYTE(v77) = 10;
  int v58 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 11;
  int v57 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 12;
  int v56 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 13;
  int v55 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 14;
  int v54 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 15;
  int v53 = sub_1DD048DD8();
  uint64_t v112 = 0;
  LOBYTE(v77) = 16;
  uint64_t v51 = sub_1DD048D78();
  uint64_t v52 = v33;
  uint64_t v112 = 0;
  LOBYTE(v77) = 17;
  swift_bridgeObjectRetain();
  uint64_t v34 = v112;
  sub_1DD048DF8();
  uint64_t v112 = v34;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    sub_1DCD32D90(v15, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  int v36 = v35;
  char v107 = 18;
  char v37 = sub_1DD048DD8();
  uint64_t v112 = 0;
  char v38 = v37;
  int v50 = v63 & 1;
  int v63 = v58 & 1;
  int v39 = v57 & 1;
  int v57 = v56 & 1;
  int v58 = v39;
  int v40 = v55 & 1;
  int v55 = v54 & 1;
  int v56 = v40;
  int v54 = v53 & 1;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v5);
  LODWORD(v60) = v38 & 1;
  LOBYTE(v68) = v59;
  *((void *)&v68 + 1) = v12;
  *(void *)&long long v69 = v11;
  uint64_t v41 = v65;
  *((void *)&v69 + 1) = v66;
  *(void *)&long long v70 = v65;
  BYTE8(v70) = v50;
  uint64_t v42 = *((void *)&v64 + 1);
  long long v71 = v64;
  long long v72 = v62;
  *(void *)&long long v73 = v15;
  *((void *)&v73 + 1) = v14;
  *(void *)&long long v74 = v26;
  *((void *)&v74 + 1) = v25;
  *(void *)&long long v75 = __PAIR64__(v30, v28);
  DWORD2(v75) = v32;
  BYTE12(v75) = v63;
  BYTE13(v75) = v58;
  BYTE14(v75) = v57;
  HIBYTE(v75) = v56;
  LOBYTE(v76[0]) = v55;
  BYTE1(v76[0]) = v54;
  *((void *)&v76[0] + 1) = v51;
  *(void *)&v76[1] = v52;
  DWORD2(v76[1]) = v36;
  BYTE12(v76[1]) = v38 & 1;
  sub_1DCD32CC8((uint64_t)&v68);
  swift_bridgeObjectRelease();
  uint64_t v43 = v14;
  sub_1DCD32D90(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = *((void *)&v62 + 1);
  swift_bridgeObjectRelease();
  long long v45 = v75;
  a2[6] = v74;
  a2[7] = v45;
  a2[8] = v76[0];
  *(_OWORD *)((char *)a2 + 141) = *(_OWORD *)((char *)v76 + 13);
  long long v46 = v71;
  a2[2] = v70;
  a2[3] = v46;
  long long v47 = v73;
  a2[4] = v72;
  a2[5] = v47;
  long long v48 = v69;
  *a2 = v68;
  a2[1] = v48;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  LOBYTE(v77) = v59;
  *(_DWORD *)((char *)&v77 + 1) = v111[0];
  HIDWORD(v77) = *(_DWORD *)((char *)v111 + 3);
  uint64_t v78 = v12;
  uint64_t v79 = v11;
  uint64_t v80 = v66;
  uint64_t v81 = v41;
  char v82 = v50;
  *(_DWORD *)char v83 = *(_DWORD *)v110;
  *(_DWORD *)&v83[3] = *(_DWORD *)&v110[3];
  uint64_t v84 = v64;
  uint64_t v85 = v42;
  uint64_t v86 = v62;
  uint64_t v87 = v44;
  uint64_t v88 = v15;
  uint64_t v89 = v43;
  uint64_t v90 = v26;
  uint64_t v91 = v25;
  unsigned int v92 = v28;
  unsigned int v93 = v30;
  int v94 = v32;
  char v95 = v63;
  char v96 = v58;
  char v97 = v57;
  char v98 = v56;
  char v99 = v55;
  char v100 = v54;
  __int16 v102 = v109;
  int v101 = v108;
  uint64_t v103 = v51;
  uint64_t v104 = v52;
  int v105 = v36;
  char v106 = v60;
  return sub_1DCD32DD4((uint64_t)&v77);
}

uint64_t sub_1DCFC2A94@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return VisualUnderstanding.DomainInfo.init(from:)(a1, a2);
}

uint64_t sub_1DCFC2AAC(void *a1)
{
  return VisualUnderstanding.DomainInfo.encode(to:)(a1);
}

uint64_t sub_1DCFC2AC8()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFC2B0C()
{
  return sub_1DD049108();
}

uint64_t static VisualUnderstanding.Signal.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  if (!CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2) || (sub_1DCFBBB58(v3, v5) & 1) == 0) {
    return 0;
  }
  return sub_1DCFBBC68(v2, v4);
}

uint64_t sub_1DCFC2BC8()
{
  uint64_t v1 = 0x6E69646465626D65;
  if (*v0 != 1) {
    uint64_t v1 = 0x6966697373616C63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E69646E756F62;
  }
}

uint64_t sub_1DCFC2C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCC230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFC2C64(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6928();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFC2CA0(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6928();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.Signal.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6928();
  sub_1DD049138();
  long long v15 = v14;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  char v18 = 0;
  sub_1DCEE6438();
  sub_1DD048F18();
  if (!v2)
  {
    *(void *)&long long v15 = v13;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86858);
    sub_1DCFC4B24(&qword_1EBE86860, &qword_1EBE86858, (void (*)(void))sub_1DCFC4AD0);
    sub_1DD048F18();
    *(void *)&long long v15 = v10;
    char v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86878);
    sub_1DCFC4B24(&qword_1EBE86880, &qword_1EBE86878, (void (*)(void))sub_1DCFC54AC);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisualUnderstanding.Signal.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04840);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6928();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = 0;
  sub_1DCEE64E0();
  sub_1DD048E28();
  uint64_t v9 = v16[0];
  uint64_t v10 = v16[1];
  uint64_t v11 = v16[2];
  uint64_t v12 = v16[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86858);
  char v17 = 1;
  sub_1DCFC4B24(&qword_1EAB04848, &qword_1EBE86858, (void (*)(void))sub_1DCFC4CCC);
  sub_1DD048E28();
  uint64_t v13 = v16[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86878);
  char v17 = 2;
  sub_1DCFC4B24(&qword_1EAB04850, &qword_1EBE86878, (void (*)(void))sub_1DCFC56A4);
  swift_bridgeObjectRetain();
  sub_1DD048E28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v16[0];
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFC3248@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualUnderstanding.Signal.init(from:)(a1, a2);
}

uint64_t sub_1DCFC3260(void *a1)
{
  return VisualUnderstanding.Signal.encode(to:)(a1);
}

uint64_t sub_1DCFC3278(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  if (!CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2) || (sub_1DCFBBB58(v3, v5) & 1) == 0) {
    return 0;
  }
  return sub_1DCFBBC68(v2, v4);
}

VisualIntelligence::VisualUnderstanding::AdditionalSignalType_optional __swiftcall VisualUnderstanding.AdditionalSignalType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1DD048D38();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t VisualUnderstanding.AdditionalSignalType.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1DCFC33B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DCFB2BA0(*a1, *a2);
}

uint64_t sub_1DCFC33C0()
{
  return sub_1DCFD8454();
}

uint64_t sub_1DCFC33C8()
{
  return sub_1DCFD87F0();
}

uint64_t sub_1DCFC33D0()
{
  return sub_1DCFD8AB0();
}

VisualIntelligence::VisualUnderstanding::AdditionalSignalType_optional sub_1DCFC33D8(Swift::String *a1)
{
  return VisualUnderstanding.AdditionalSignalType.init(rawValue:)(*a1);
}

unint64_t sub_1DCFC33E4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = VisualUnderstanding.AdditionalSignalType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCFC340C()
{
  return sub_1DD048688();
}

uint64_t sub_1DCFC346C()
{
  return sub_1DD048678();
}

unint64_t sub_1DCFC34C0()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_1DCFC3500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFCC3D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFC3528(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6AA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFC3564(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6AA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.AdditionalSignal.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04858);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6AA0();
  sub_1DD049138();
  char v13 = v8;
  char v12 = 0;
  sub_1DCFC6AF4();
  sub_1DD048F18();
  if (!v2)
  {
    v10[1] = v10[0];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86818);
    sub_1DCD78168((unint64_t *)&unk_1EBE86820);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisualUnderstanding.AdditionalSignal.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04870);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6AA0();
  sub_1DD049128();
  if (!v2)
  {
    char v14 = 0;
    sub_1DCFC6B48();
    sub_1DD048E28();
    char v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86818);
    char v13 = 1;
    sub_1DCD78168(&qword_1EAB027F0);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DCFC3980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisualUnderstanding.AdditionalSignal.init(from:)(a1, a2);
}

uint64_t sub_1DCFC3998(void *a1)
{
  return VisualUnderstanding.AdditionalSignal.encode(to:)(a1);
}

uint64_t VisualUnderstanding.ImageRegion.embeddings.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v1 + 16);
  if (!v25) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v24 = v1 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v4 = v2;
  while (1)
  {
    uint64_t v5 = *(void *)(v24 + 48 * v3 + 32);
    int64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      sub_1DCFC5A20(0, v6, 0);
      uint64_t v7 = v2;
      uint64_t v8 = 32;
      do
      {
        uint64_t v9 = *(void *)(v5 + v8);
        unint64_t v10 = v7[2];
        unint64_t v11 = v7[3];
        swift_bridgeObjectRetain();
        if (v10 >= v11 >> 1) {
          sub_1DCFC5A20(v11 > 1, v10 + 1, 1);
        }
        v7[2] = v10 + 1;
        v7[v10 + 4] = v9;
        v8 += 24;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      uint64_t v7 = v2;
    }
    uint64_t v12 = v7[2];
    int64_t v13 = v4[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      break;
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v14 <= v4[3] >> 1)
    {
      if (v7[2]) {
        goto LABEL_21;
      }
    }
    else
    {
      if (v13 <= v14) {
        int64_t v16 = v13 + v12;
      }
      else {
        int64_t v16 = v13;
      }
      uint64_t v4 = sub_1DCEA0114((void *)isUniquelyReferenced_nonNull_native, v16, 1, v4);
      if (v7[2])
      {
LABEL_21:
        uint64_t v17 = v4[2];
        if ((v4[3] >> 1) - v17 < v12) {
          goto LABEL_35;
        }
        unint64_t v18 = (unint64_t)&v4[v17 + 4];
        if ((unint64_t)(v7 + 4) < v18 + 8 * v12 && v18 < (unint64_t)&v7[v12 + 4]) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v20 = v4[2];
          BOOL v21 = __OFADD__(v20, v12);
          uint64_t v22 = v20 + v12;
          if (v21) {
            goto LABEL_36;
          }
          v4[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v12) {
      goto LABEL_34;
    }
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    if (v3 == v25)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t VisualUnderstanding.ImageRegion.hasEmbedding.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v32 = *(void *)(v1 + 16);
  if (v32)
  {
    uint64_t v31 = v1 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    uint64_t v4 = v2;
    while (1)
    {
      uint64_t v5 = *(void *)(v31 + 48 * v3 + 32);
      int64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_1DCFC5A20(0, v6, 0);
        uint64_t v7 = v2;
        uint64_t v8 = 32;
        do
        {
          uint64_t v9 = *(void *)(v5 + v8);
          unint64_t v10 = v7[2];
          unint64_t v11 = v7[3];
          swift_bridgeObjectRetain();
          if (v10 >= v11 >> 1) {
            sub_1DCFC5A20(v11 > 1, v10 + 1, 1);
          }
          v7[2] = v10 + 1;
          v7[v10 + 4] = v9;
          v8 += 24;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
        uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v7 = v2;
      }
      uint64_t v12 = v7[2];
      int64_t v13 = v4[2];
      int64_t v14 = v13 + v12;
      if (__OFADD__(v13, v12))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        uint64_t result = sub_1DD048D18();
        __break(1u);
        return result;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v14 <= v4[3] >> 1)
      {
        if (v7[2]) {
          goto LABEL_21;
        }
      }
      else
      {
        if (v13 <= v14) {
          int64_t v16 = v13 + v12;
        }
        else {
          int64_t v16 = v13;
        }
        uint64_t v4 = sub_1DCEA0114((void *)isUniquelyReferenced_nonNull_native, v16, 1, v4);
        if (v7[2])
        {
LABEL_21:
          uint64_t v17 = v4[2];
          if ((v4[3] >> 1) - v17 < v12) {
            goto LABEL_43;
          }
          unint64_t v18 = (unint64_t)&v4[v17 + 4];
          if ((unint64_t)(v7 + 4) < v18 + 8 * v12 && v18 < (unint64_t)&v7[v12 + 4]) {
            goto LABEL_45;
          }
          swift_arrayInitWithCopy();
          if (v12)
          {
            uint64_t v20 = v4[2];
            BOOL v21 = __OFADD__(v20, v12);
            uint64_t v22 = v20 + v12;
            if (v21) {
              goto LABEL_44;
            }
            v4[2] = v22;
          }
          goto LABEL_4;
        }
      }
      if (v12) {
        goto LABEL_42;
      }
LABEL_4:
      ++v3;
      swift_bridgeObjectRelease();
      if (v3 == v32)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v23 = v4[2];
        if (!v23) {
          goto LABEL_39;
        }
LABEL_31:
        uint64_t v24 = v4 + 4;
        uint64_t v25 = v23 - 1;
        do
        {
          uint64_t v26 = *v24++;
          uint64_t v27 = *(void *)(v26 + 16);
          BOOL v28 = v27 != 0;
          if (v27) {
            BOOL v29 = 1;
          }
          else {
            BOOL v29 = v25 == 0;
          }
          --v25;
        }
        while (!v29);
        goto LABEL_40;
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v23 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v23) {
    goto LABEL_31;
  }
LABEL_39:
  BOOL v28 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t VisualUnderstanding.ImageRegion.Embedding.features.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static VisualUnderstanding.ImageRegion.Embedding.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCFB799C(*a1, *a2);
}

uint64_t sub_1DCFC3EE4()
{
  return 0x7365727574616566;
}

uint64_t sub_1DCFC3EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DCFC3F94(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6B9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFC3FD0(uint64_t a1)
{
  unint64_t v2 = sub_1DCFC6B9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t VisualUnderstanding.ImageRegion.Embedding.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04880);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6B9C();
  sub_1DD049138();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
  sub_1DCE2DA30(&qword_1EBE868A0);
  sub_1DD048F18();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisualUnderstanding.ImageRegion.Embedding.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04890);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFC6B9C();
  sub_1DD049128();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
    sub_1DCE2DA30(&qword_1EAB03748);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DCFC431C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisualUnderstanding.ImageRegion.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1DCFC4334(void *a1)
{
  return VisualUnderstanding.ImageRegion.Embedding.encode(to:)(a1);
}

BOOL sub_1DCFC434C(uint64_t *a1, uint64_t *a2)
{
  return sub_1DCFB799C(*a1, *a2);
}

BOOL VisualUnderstanding.ImageRegion.isDominantAndGood.getter()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (float *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(v0 + 104) == 1) {
    return *(float *)(v0 + 72) > 0.5;
  }
  CGFloat v5 = *(double *)v0;
  CGFloat v6 = *(double *)(v0 + 8);
  CGFloat v7 = *(double *)(v0 + 16);
  CGFloat v8 = *(double *)(v0 + 24);
  v13.origin.CGFloat x = *(CGFloat *)v0;
  v13.origin.CGFloat y = v6;
  v13.size.width = v7;
  v13.size.height = v8;
  double Width = CGRectGetWidth(v13);
  v14.origin.CGFloat x = v5;
  v14.origin.CGFloat y = v6;
  v14.size.width = v7;
  v14.size.height = v8;
  double v10 = Width * CGRectGetHeight(v14);
  sub_1DCFCC504(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  BOOL v4 = v10 > 0.2 && v3[18] > 0.1;
  sub_1DCFCC56C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return v4;
}

unint64_t VisualUnderstanding.ImageRegion.getBrandDistribution()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VisualUnderstanding.ImageRegion() + 68));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 40);
    while (1)
    {
      uint64_t v4 = *v3;
      int v5 = *((unsigned __int8 *)v3 - 8);
      if (v5 != 1 && v5 != 2) {
        break;
      }
      char v6 = sub_1DD048FA8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      v3 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
LABEL_8:
    uint64_t v7 = MEMORY[0x1E4FBC860];
    return sub_1DCDB86BC(v7);
  }
}

unint64_t VisualUnderstanding.ImageRegion.getCategoryDistribution()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VisualUnderstanding.ImageRegion() + 68));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)(v1 + 40);
    while (1)
    {
      uint64_t v4 = *v3;
      if (*((unsigned char *)v3 - 8))
      {
        if (*((unsigned char *)v3 - 8) != 2) {
          break;
        }
      }
      char v5 = sub_1DD048FA8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      v3 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
LABEL_8:
    uint64_t v6 = MEMORY[0x1E4FBC860];
    return sub_1DCDB86BC(v6);
  }
}

unint64_t VisualUnderstanding.ImageRegion.getCoarseCategoryDistribution()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VisualUnderstanding.ImageRegion() + 68));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)(v1 + 40);
    while (1)
    {
      uint64_t v4 = *v3;
      if (*((unsigned char *)v3 - 8))
      {
        if (*((unsigned char *)v3 - 8) != 1) {
          break;
        }
      }
      char v5 = sub_1DD048FA8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      v3 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    return v4;
  }
  else
  {
LABEL_8:
    uint64_t v6 = MEMORY[0x1E4FBC860];
    return sub_1DCDB86BC(v6);
  }
}

uint64_t VisualUnderstanding.DomainInfo.detectionInfo.getter()
{
  if (!*(void *)(v0 + 88)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCFC4948(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F348(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC4968(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F4B4(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC4988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F64C(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC49A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F7B8(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC49C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F7CC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC49E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F62C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC4A08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F7E0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

unint64_t sub_1DCFC4A28()
{
  unint64_t result = qword_1EBE84958;
  if (!qword_1EBE84958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84958);
  }
  return result;
}

unint64_t sub_1DCFC4A7C()
{
  unint64_t result = qword_1EBE84950;
  if (!qword_1EBE84950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84950);
  }
  return result;
}

unint64_t sub_1DCFC4AD0()
{
  unint64_t result = qword_1EBE85778;
  if (!qword_1EBE85778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85778);
  }
  return result;
}

uint64_t sub_1DCFC4B24(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCFC4B90()
{
  unint64_t result = qword_1EBE857C0;
  if (!qword_1EBE857C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE857C0);
  }
  return result;
}

uint64_t sub_1DCFC4BE4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84F58);
    sub_1DCFCC4BC(a2, (void (*)(uint64_t))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCFC4C78()
{
  unint64_t result = qword_1EAB046E0;
  if (!qword_1EAB046E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046E0);
  }
  return result;
}

unint64_t sub_1DCFC4CCC()
{
  unint64_t result = qword_1EAB046F0;
  if (!qword_1EAB046F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB046F0);
  }
  return result;
}

unint64_t sub_1DCFC4D20()
{
  unint64_t result = qword_1EAB04700;
  if (!qword_1EAB04700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04700);
  }
  return result;
}

unint64_t sub_1DCFC4D74()
{
  unint64_t result = qword_1EAB04710;
  if (!qword_1EAB04710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04710);
  }
  return result;
}

unint64_t sub_1DCFC4DC8()
{
  unint64_t result = qword_1EBE855F8;
  if (!qword_1EBE855F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE855F8);
  }
  return result;
}

unint64_t sub_1DCFC4E1C()
{
  unint64_t result = qword_1EAB04730;
  if (!qword_1EAB04730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04730);
  }
  return result;
}

unint64_t sub_1DCFC4E70()
{
  unint64_t result = qword_1EBE849A8;
  if (!qword_1EBE849A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849A8);
  }
  return result;
}

unint64_t sub_1DCFC4EC4()
{
  unint64_t result = qword_1EAB04748;
  if (!qword_1EAB04748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04748);
  }
  return result;
}

unint64_t sub_1DCFC4F18()
{
  unint64_t result = qword_1EBE82C88;
  if (!qword_1EBE82C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C88);
  }
  return result;
}

unint64_t sub_1DCFC4F6C()
{
  unint64_t result = qword_1EBE82C70;
  if (!qword_1EBE82C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C70);
  }
  return result;
}

unint64_t sub_1DCFC4FC0()
{
  unint64_t result = qword_1EBE82CA0;
  if (!qword_1EBE82CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82CA0);
  }
  return result;
}

unint64_t sub_1DCFC5014()
{
  unint64_t result = qword_1EAB04768;
  if (!qword_1EAB04768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04768);
  }
  return result;
}

unint64_t sub_1DCFC5068()
{
  unint64_t result = qword_1EBE84938;
  if (!qword_1EBE84938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84938);
  }
  return result;
}

unint64_t sub_1DCFC50BC()
{
  unint64_t result = qword_1EBE849B0;
  if (!qword_1EBE849B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849B0);
  }
  return result;
}

unint64_t sub_1DCFC5110()
{
  unint64_t result = qword_1EBE84AD0;
  if (!qword_1EBE84AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AD0);
  }
  return result;
}

unint64_t sub_1DCFC5164()
{
  unint64_t result = qword_1EBE85610;
  if (!qword_1EBE85610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85610);
  }
  return result;
}

unint64_t sub_1DCFC51B8()
{
  unint64_t result = qword_1EBE85230;
  if (!qword_1EBE85230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85230);
  }
  return result;
}

unint64_t sub_1DCFC520C()
{
  unint64_t result = qword_1EAB04780;
  if (!qword_1EAB04780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04780);
  }
  return result;
}

unint64_t sub_1DCFC5260()
{
  unint64_t result = qword_1EAB04790;
  if (!qword_1EAB04790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04790);
  }
  return result;
}

unint64_t sub_1DCFC52B4()
{
  unint64_t result = qword_1EAB04798;
  if (!qword_1EAB04798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04798);
  }
  return result;
}

unint64_t sub_1DCFC5308()
{
  unint64_t result = qword_1EAB047A0;
  if (!qword_1EAB047A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB047A0);
  }
  return result;
}

unint64_t sub_1DCFC535C()
{
  unint64_t result = qword_1EBE84988;
  if (!qword_1EBE84988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84988);
  }
  return result;
}

unint64_t sub_1DCFC53B0()
{
  unint64_t result = qword_1EBE84980;
  if (!qword_1EBE84980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84980);
  }
  return result;
}

unint64_t sub_1DCFC5404()
{
  unint64_t result = qword_1EBE84AC8;
  if (!qword_1EBE84AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AC8);
  }
  return result;
}

unint64_t sub_1DCFC5458()
{
  unint64_t result = qword_1EBE85870;
  if (!qword_1EBE85870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85870);
  }
  return result;
}

unint64_t sub_1DCFC54AC()
{
  unint64_t result = qword_1EBE84B08;
  if (!qword_1EBE84B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B08);
  }
  return result;
}

unint64_t sub_1DCFC5500()
{
  unint64_t result = qword_1EBE85630;
  if (!qword_1EBE85630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85630);
  }
  return result;
}

unint64_t sub_1DCFC5554()
{
  unint64_t result = qword_1EAB047B8;
  if (!qword_1EAB047B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB047B8);
  }
  return result;
}

unint64_t sub_1DCFC55A8()
{
  unint64_t result = qword_1EAB047D8;
  if (!qword_1EAB047D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB047D8);
  }
  return result;
}

unint64_t sub_1DCFC55FC()
{
  unint64_t result = qword_1EAB047E8;
  if (!qword_1EAB047E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB047E8);
  }
  return result;
}

unint64_t sub_1DCFC5650()
{
  unint64_t result = qword_1EAB047F8;
  if (!qword_1EAB047F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB047F8);
  }
  return result;
}

unint64_t sub_1DCFC56A4()
{
  unint64_t result = qword_1EAB04800;
  if (!qword_1EAB04800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04800);
  }
  return result;
}

unint64_t sub_1DCFC56F8()
{
  unint64_t result = qword_1EAB04810;
  if (!qword_1EAB04810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04810);
  }
  return result;
}

unint64_t sub_1DCFC574C()
{
  unint64_t result = qword_1EAB04828;
  if (!qword_1EAB04828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04828);
  }
  return result;
}

uint64_t sub_1DCFC57A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6F958(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC57C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FB14(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC57E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FCBC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5800(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FCDC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5820(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FE3C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5840(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FE5C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FE7C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5880(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FE9C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC58A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FEBC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC58C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD6FEDC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC58E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70084(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5900(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70348(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5920(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD704C8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5940(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD704DC(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD7063C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5980(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70650(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC59A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70664(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC59C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70B04(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC59E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70C98(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5A00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70E04(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5A20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70E24(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5A40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD70F90(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5A60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD71138(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5A80(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD71158(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1DCFC5AA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD712FC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5AC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1DCD7131C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1DCFC5AE0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v81 = *a1;
      uint64_t v82 = *a1 + 160;
      uint64_t v83 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v85 = v83;
        uint64_t v86 = v82;
        do
        {
          if (*(float *)(v86 - 48) >= *(float *)(v86 + 112)) {
            break;
          }
          if (!v81) {
            goto LABEL_143;
          }
          uint64_t v87 = (_OWORD *)(v86 - 160);
          long long v132 = *(_OWORD *)(v86 + 96);
          long long v135 = *(_OWORD *)(v86 + 112);
          *(_OWORD *)uint64_t v138 = *(_OWORD *)(v86 + 128);
          *(_OWORD *)&v138[13] = *(_OWORD *)(v86 + 141);
          long long v120 = *(_OWORD *)(v86 + 32);
          long long v123 = *(_OWORD *)(v86 + 48);
          long long v126 = *(_OWORD *)(v86 + 64);
          long long v129 = *(_OWORD *)(v86 + 80);
          long long v114 = *(_OWORD *)v86;
          long long v117 = *(_OWORD *)(v86 + 16);
          long long v88 = *(_OWORD *)(v86 - 48);
          *(_OWORD *)(v86 + 96) = *(_OWORD *)(v86 - 64);
          *(_OWORD *)(v86 + 112) = v88;
          long long v89 = *(_OWORD *)(v86 - 16);
          *(_OWORD *)(v86 + 128) = *(_OWORD *)(v86 - 32);
          *(_OWORD *)(v86 + 144) = v89;
          long long v90 = *(_OWORD *)(v86 - 112);
          *(_OWORD *)(v86 + 32) = *(_OWORD *)(v86 - 128);
          *(_OWORD *)(v86 + 48) = v90;
          long long v91 = *(_OWORD *)(v86 - 80);
          *(_OWORD *)(v86 + 64) = *(_OWORD *)(v86 - 96);
          *(_OWORD *)(v86 + 80) = v91;
          long long v92 = *(_OWORD *)(v86 - 144);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)(v86 - 160);
          *(_OWORD *)(v86 + 16) = v92;
          v87[6] = v132;
          v87[7] = v135;
          _OWORD v87[8] = *(_OWORD *)v138;
          *(_OWORD *)((char *)v87 + 141) = *(_OWORD *)&v138[13];
          v87[2] = v120;
          v87[3] = v123;
          v87[4] = v126;
          v87[5] = v129;
          v86 -= 160;
          *uint64_t v87 = v114;
          v87[1] = v117;
        }
        while (!__CFADD__(v85++, 1));
        v82 += 160;
        --v83;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  uint64_t v107 = result;
  uint64_t v103 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __int16 v109 = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v106 = v8;
      if (v11 >= 2)
      {
        uint64_t v95 = *v103;
        do
        {
          unint64_t v96 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v95) {
            goto LABEL_147;
          }
          char v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v11 + 24];
          sub_1DCF2594C((float *)(v95 + 160 * v98), (float *)(v95 + 160 * *(void *)&v94[16 * v11 + 16]), v95 + 160 * v99, v109);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v97 = sub_1DCD729EC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_136;
          }
          char v100 = &v97[16 * v96 + 32];
          *(void *)char v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v11 > v101) {
            goto LABEL_137;
          }
          memmove(&v97[16 * v11 + 16], &v97[16 * v11 + 32], 16 * (v101 - v11));
          int v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v11 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v106 = v7;
    __int16 v109 = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v104 = *a1 + 272;
  uint64_t v105 = *a1 + 112;
  uint64_t v102 = *a1 - 160;
  uint64_t v110 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v111 = *a1;
  uint64_t v108 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    if (v9 < v3)
    {
      float v13 = *(float *)(v105 + 160 * v9);
      float v14 = *(float *)(v105 + 160 * v12);
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        char v15 = (float *)(v104 + 160 * v12);
        while (v14 < v13 != *v15 >= v15[40])
        {
          ++v9;
          v15 += 40;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          int64_t v16 = (_OWORD *)(v102 + 160 * v9);
          uint64_t v17 = v9;
          uint64_t v18 = v12;
          int v19 = (long long *)(v10 + 160 * v12);
          do
          {
            if (v18 != --v17)
            {
              if (!v10) {
                goto LABEL_146;
              }
              long long v130 = v19[6];
              long long v133 = v19[7];
              *(_OWORD *)uint64_t v136 = v19[8];
              *(_OWORD *)&v136[13] = *(long long *)((char *)v19 + 141);
              long long v118 = v19[2];
              long long v121 = v19[3];
              long long v124 = v19[4];
              long long v127 = v19[5];
              long long v112 = *v19;
              long long v115 = v19[1];
              memmove(v19, v16, 0xA0uLL);
              v16[6] = v130;
              v16[7] = v133;
              v16[8] = *(_OWORD *)v136;
              *(_OWORD *)((char *)v16 + 141) = *(_OWORD *)&v136[13];
              v16[2] = v118;
              v16[3] = v121;
              void v16[4] = v124;
              id v16[5] = v127;
              *int64_t v16 = v112;
              v16[1] = v115;
              uint64_t v10 = v111;
            }
            ++v18;
            v16 -= 10;
            v19 += 10;
          }
          while (v18 < v17);
          uint64_t v3 = v108;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v107) {
      goto LABEL_39;
    }
    uint64_t v20 = v12 + v107;
    if (__OFADD__(v12, v107)) {
      goto LABEL_141;
    }
    if (v20 >= v3) {
      uint64_t v20 = v3;
    }
    if (v20 < v12) {
      break;
    }
    if (v9 != v20)
    {
      long long v71 = (long long *)(v10 + 160 * v9);
      BOOL v21 = v110;
      do
      {
        uint64_t v72 = v12;
        long long v73 = v71;
        do
        {
          if (*((float *)v73 - 12) >= *((float *)v73 + 28)) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          long long v74 = v73 - 10;
          long long v131 = v73[6];
          long long v134 = v73[7];
          *(_OWORD *)uint64_t v137 = v73[8];
          *(_OWORD *)&v137[13] = *(long long *)((char *)v73 + 141);
          long long v119 = v73[2];
          long long v122 = v73[3];
          long long v125 = v73[4];
          long long v128 = v73[5];
          long long v113 = *v73;
          long long v116 = v73[1];
          long long v75 = *(v73 - 3);
          v73[6] = *(v73 - 4);
          v73[7] = v75;
          long long v76 = *(v73 - 1);
          v73[8] = *(v73 - 2);
          v73[9] = v76;
          long long v77 = *(v73 - 7);
          v73[2] = *(v73 - 8);
          v73[3] = v77;
          long long v78 = *(v73 - 5);
          v73[4] = *(v73 - 6);
          v73[5] = v78;
          long long v79 = *(v73 - 9);
          *long long v73 = *(v73 - 10);
          v73[1] = v79;
          v74[6] = v131;
          v74[7] = v134;
          v74[8] = *(_OWORD *)v137;
          *(long long *)((char *)v74 + 141) = *(_OWORD *)&v137[13];
          v74[2] = v119;
          v74[3] = v122;
          v74[4] = v125;
          v74[5] = v128;
          ++v72;
          v73 -= 10;
          long long *v74 = v113;
          v74[1] = v116;
        }
        while (v9 != v72);
        ++v9;
        v71 += 10;
      }
      while (v9 != v20);
      uint64_t v9 = v20;
      if (v20 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    BOOL v21 = v110;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v21 = sub_1DCD71FDC(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    unint64_t v11 = v23 + 1;
    uint64_t v10 = v111;
    if (v23 >= v22 >> 1)
    {
      uint64_t v80 = sub_1DCD71FDC((char *)(v22 > 1), v23 + 1, 1, v21);
      uint64_t v10 = v111;
      BOOL v21 = v80;
    }
    *((void *)v21 + 2) = v11;
    uint64_t v24 = v21 + 32;
    uint64_t v25 = &v21[16 * v23 + 32];
    *(void *)uint64_t v25 = v12;
    *((void *)v25 + 1) = v9;
    uint64_t v110 = v21;
    if (v23)
    {
      while (1)
      {
        unint64_t v26 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v31 = &v24[16 * v11];
          uint64_t v32 = *((void *)v31 - 8);
          uint64_t v33 = *((void *)v31 - 7);
          BOOL v37 = __OFSUB__(v33, v32);
          uint64_t v34 = v33 - v32;
          if (v37) {
            goto LABEL_122;
          }
          uint64_t v36 = *((void *)v31 - 6);
          uint64_t v35 = *((void *)v31 - 5);
          BOOL v37 = __OFSUB__(v35, v36);
          uint64_t v29 = v35 - v36;
          char v30 = v37;
          if (v37) {
            goto LABEL_123;
          }
          unint64_t v38 = v11 - 2;
          int v39 = &v24[16 * v11 - 32];
          uint64_t v41 = *(void *)v39;
          uint64_t v40 = *((void *)v39 + 1);
          BOOL v37 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          if (v37) {
            goto LABEL_125;
          }
          BOOL v37 = __OFADD__(v29, v42);
          uint64_t v43 = v29 + v42;
          if (v37) {
            goto LABEL_128;
          }
          if (v43 >= v34)
          {
            uint64_t v61 = &v24[16 * v26];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v37 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v37) {
              goto LABEL_132;
            }
            BOOL v54 = v29 < v64;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v55 = *((void *)v21 + 4);
            uint64_t v56 = *((void *)v21 + 5);
            BOOL v37 = __OFSUB__(v56, v55);
            uint64_t v48 = v56 - v55;
            char v49 = v37;
            goto LABEL_70;
          }
          uint64_t v28 = *((void *)v21 + 4);
          uint64_t v27 = *((void *)v21 + 5);
          BOOL v37 = __OFSUB__(v27, v28);
          uint64_t v29 = v27 - v28;
          char v30 = v37;
        }
        if (v30) {
          goto LABEL_124;
        }
        unint64_t v38 = v11 - 2;
        uint64_t v44 = &v24[16 * v11 - 32];
        uint64_t v46 = *(void *)v44;
        uint64_t v45 = *((void *)v44 + 1);
        BOOL v47 = __OFSUB__(v45, v46);
        uint64_t v48 = v45 - v46;
        char v49 = v47;
        if (v47) {
          goto LABEL_127;
        }
        int v50 = &v24[16 * v26];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v37 = __OFSUB__(v51, v52);
        uint64_t v53 = v51 - v52;
        if (v37) {
          goto LABEL_130;
        }
        if (__OFADD__(v48, v53)) {
          goto LABEL_131;
        }
        if (v48 + v53 >= v29)
        {
          BOOL v54 = v29 < v53;
LABEL_76:
          if (v54) {
            unint64_t v26 = v38;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v49) {
          goto LABEL_126;
        }
        int v57 = &v24[16 * v26];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v37 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v37) {
          goto LABEL_129;
        }
        if (v60 < v48) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v65 = v26 - 1;
        if (v26 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        uint64_t v66 = &v24[16 * v65];
        uint64_t v67 = *(void *)v66;
        long long v68 = &v24[16 * v26];
        uint64_t v69 = *((void *)v68 + 1);
        sub_1DCF2594C((float *)(v10 + 160 * *(void *)v66), (float *)(v10 + 160 * *(void *)v68), v10 + 160 * v69, v109);
        if (v1) {
          goto LABEL_95;
        }
        if (v69 < v67) {
          goto LABEL_119;
        }
        if (v26 > *((void *)v110 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v66 = v67;
        *(void *)&v24[16 * v65 + 8] = v69;
        unint64_t v70 = *((void *)v110 + 2);
        if (v26 >= v70) {
          goto LABEL_121;
        }
        BOOL v21 = v110;
        unint64_t v11 = v70 - 1;
        memmove(&v24[16 * v26], v68 + 16, 16 * (v70 - 1 - v26));
        *((void *)v110 + 2) = v70 - 1;
        uint64_t v10 = v111;
        if (v70 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v108;
    if (v9 >= v108)
    {
      uint64_t v8 = v106;
      int v94 = v110;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t _s18VisualIntelligence0A13UnderstandingV10DomainInfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 8);
  double v2 = *(double *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v63 = *(void *)(a1 + 48);
  uint64_t v66 = *(void *)(a1 + 56);
  uint64_t v59 = *(void *)(a1 + 64);
  uint64_t v65 = *(void *)(a1 + 72);
  uint64_t v61 = *(void *)(a1 + 88);
  uint64_t v54 = *(void *)(a1 + 96);
  uint64_t v56 = *(void *)(a1 + 80);
  uint64_t v57 = *(void *)(a1 + 104);
  float v7 = *(float *)(a1 + 112);
  float v50 = *(float *)(a1 + 120);
  float v51 = *(float *)(a1 + 116);
  int v49 = *(unsigned __int8 *)(a1 + 124);
  int v47 = *(unsigned __int8 *)(a1 + 125);
  int v45 = *(unsigned __int8 *)(a1 + 126);
  int v43 = *(unsigned __int8 *)(a1 + 127);
  int v41 = *(unsigned __int8 *)(a1 + 128);
  int v39 = *(unsigned __int8 *)(a1 + 129);
  uint64_t v31 = *(void *)(a1 + 136);
  uint64_t v37 = *(void *)(a1 + 144);
  float v35 = *(float *)(a1 + 152);
  int v33 = *(unsigned __int8 *)(a1 + 156);
  double v9 = *(double *)(a2 + 8);
  double v8 = *(double *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v62 = *(void *)(a2 + 48);
  uint64_t v58 = *(void *)(a2 + 64);
  uint64_t v64 = *(void *)(a2 + 72);
  uint64_t v55 = *(void *)(a2 + 80);
  uint64_t v60 = *(void *)(a2 + 88);
  float v15 = *(float *)(a2 + 112);
  float v14 = *(float *)(a2 + 116);
  float v16 = *(float *)(a2 + 120);
  float v34 = *(float *)(a2 + 152);
  uint64_t v52 = *(void *)(a2 + 104);
  uint64_t v53 = *(void *)(a2 + 96);
  int v48 = *(unsigned __int8 *)(a2 + 124);
  int v46 = *(unsigned __int8 *)(a2 + 125);
  int v44 = *(unsigned __int8 *)(a2 + 126);
  int v42 = *(unsigned __int8 *)(a2 + 127);
  int v40 = *(unsigned __int8 *)(a2 + 128);
  int v38 = *(unsigned __int8 *)(a2 + 129);
  uint64_t v30 = *(void *)(a2 + 136);
  uint64_t v36 = *(void *)(a2 + 144);
  int v32 = *(unsigned __int8 *)(a2 + 156);
  char v17 = *(unsigned char *)a2;
  uint64_t v18 = sub_1DCD9C35C(*(unsigned char *)a1);
  uint64_t v20 = v19;
  if (v18 == sub_1DCD9C35C(v17) && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    uint64_t result = 0;
  }
  else
  {
    char v23 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v23 & 1) == 0) {
      return result;
    }
  }
  if (v3 == v9 && v2 == v8)
  {
    if (v4)
    {
      if (!v10) {
        return 0;
      }
      if (v5 == v11 && v4 == v10)
      {
        if (v6 != v12) {
          return 0;
        }
LABEL_17:
        if (v66)
        {
          if (!v13) {
            return 0;
          }
          if (v63 != v62 || v66 != v13)
          {
            char v25 = sub_1DD048FA8();
            uint64_t result = 0;
            if ((v25 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v13)
        {
          return 0;
        }
        if (v65)
        {
          if (!v64) {
            return 0;
          }
          if (v59 != v58 || v65 != v64)
          {
            char v26 = sub_1DD048FA8();
            uint64_t result = 0;
            if ((v26 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v64)
        {
          return 0;
        }
        if (v61)
        {
          if (v60)
          {
            if (v56 != v55 || v61 != v60)
            {
              char v27 = sub_1DD048FA8();
              uint64_t result = 0;
              if ((v27 & 1) == 0) {
                return result;
              }
            }
            if (v54 != v53 || v57 != v52)
            {
              char v28 = sub_1DD048FA8();
              uint64_t result = 0;
              if ((v28 & 1) == 0) {
                return result;
              }
            }
            goto LABEL_41;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else if (!v60)
        {
LABEL_41:
          uint64_t result = 0;
          if (v7 != v15
            || v51 != v14
            || v50 != v16
            || ((v49 ^ v48) & 1) != 0
            || ((v47 ^ v46) & 1) != 0
            || ((v45 ^ v44) & 1) != 0
            || ((v43 ^ v42) & 1) != 0
            || ((v41 ^ v40) & 1) != 0
            || ((v39 ^ v38) & 1) != 0)
          {
            return result;
          }
          if (!v37)
          {
            uint64_t result = 0;
            if (v36) {
              return result;
            }
            goto LABEL_63;
          }
          if (v36)
          {
            if (v31 == v30 && v37 == v36)
            {
              if (v35 != v34) {
                return 0;
              }
              return v33 ^ v32 ^ 1u;
            }
            char v29 = sub_1DD048FA8();
            uint64_t result = 0;
            if ((v29 & 1) == 0) {
              return result;
            }
LABEL_63:
            if (v35 != v34) {
              return result;
            }
            return v33 ^ v32 ^ 1u;
          }
          return 0;
        }
        sub_1DCD32D4C(v55, v60);
        sub_1DCD32D90(v56, v61);
        sub_1DCD32D90(v55, v60);
        return 0;
      }
      char v24 = sub_1DD048FA8();
      uint64_t result = 0;
      if ((v24 & 1) == 0) {
        return result;
      }
    }
    else
    {
      uint64_t result = 0;
      if (v10) {
        return result;
      }
    }
    if ((v6 ^ v12)) {
      return result;
    }
    goto LABEL_17;
  }
  return result;
}

unint64_t sub_1DCFC682C()
{
  unint64_t result = qword_1EBE84970;
  if (!qword_1EBE84970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84970);
  }
  return result;
}

unint64_t sub_1DCFC6880()
{
  unint64_t result = qword_1EBE849C0;
  if (!qword_1EBE849C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849C0);
  }
  return result;
}

unint64_t sub_1DCFC68D4()
{
  unint64_t result = qword_1EAB04838;
  if (!qword_1EAB04838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04838);
  }
  return result;
}

unint64_t sub_1DCFC6928()
{
  unint64_t result = qword_1EBE85618;
  if (!qword_1EBE85618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85618);
  }
  return result;
}

uint64_t _s18VisualIntelligence0A13UnderstandingV16AdditionalSignalV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001DD067840;
  if (v2 == 1) {
    unint64_t v7 = 0xD000000000000014;
  }
  else {
    unint64_t v7 = 0xD00000000000001ALL;
  }
  if (v2 == 1) {
    unint64_t v8 = 0x80000001DD067840;
  }
  else {
    unint64_t v8 = 0x80000001DD067860;
  }
  if (*a1) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = 0xD000000000000011;
  }
  if (v2) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0x80000001DD067820;
  }
  if (*(unsigned char *)a2 != 1)
  {
    unint64_t v5 = 0xD00000000000001ALL;
    unint64_t v6 = 0x80000001DD067860;
  }
  if (*(unsigned char *)a2) {
    unint64_t v11 = v5;
  }
  else {
    unint64_t v11 = 0xD000000000000011;
  }
  if (*(unsigned char *)a2) {
    unint64_t v12 = v6;
  }
  else {
    unint64_t v12 = 0x80000001DD067820;
  }
  if (v9 == v11 && v10 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  return sub_1DCD8D334(v3, v4);
}

unint64_t sub_1DCFC6AA0()
{
  unint64_t result = qword_1EAB04860;
  if (!qword_1EAB04860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04860);
  }
  return result;
}

unint64_t sub_1DCFC6AF4()
{
  unint64_t result = qword_1EAB04868;
  if (!qword_1EAB04868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04868);
  }
  return result;
}

unint64_t sub_1DCFC6B48()
{
  unint64_t result = qword_1EAB04878;
  if (!qword_1EAB04878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04878);
  }
  return result;
}

unint64_t sub_1DCFC6B9C()
{
  unint64_t result = qword_1EAB04888;
  if (!qword_1EAB04888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04888);
  }
  return result;
}

uint64_t sub_1DCFC6BF0()
{
  return sub_1DCFCC4BC(&qword_1EAB04898, (void (*)(uint64_t))type metadata accessor for VisualUnderstanding.ImageRegion);
}

unint64_t sub_1DCFC6C3C()
{
  unint64_t result = qword_1EAB048A0;
  if (!qword_1EAB048A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048A0);
  }
  return result;
}

unint64_t sub_1DCFC6C94()
{
  unint64_t result = qword_1EAB048A8;
  if (!qword_1EAB048A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048A8);
  }
  return result;
}

uint64_t destroy for VisualUnderstanding(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualUnderstanding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v7 = v6[1];
    _OWORD *v4 = *v6;
    *(_OWORD *)(a1 + 24) = v7;
    long long v8 = v6[3];
    *(_OWORD *)(a1 + 40) = v6[2];
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v9;
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    uint64_t v14 = *(void *)(a2 + 48);
    uint64_t v13 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v14;
    uint64_t v15 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = *(void *)(a2 + 152);
  long long v17 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v17;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v16)
  {
    uint64_t v19 = *(void *)(a2 + 160);
    uint64_t v20 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v16;
    *(void *)(a1 + 160) = v19;
    *(void *)(a1 + 168) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualUnderstanding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  unint64_t v6 = (long long *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v5 == 1)
    {
      long long v7 = *v6;
      long long v8 = *(_OWORD *)(a2 + 24);
      long long v9 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v9;
      _OWORD *v4 = v7;
      *(_OWORD *)(a1 + 24) = v8;
    }
    else
    {
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
    long long v10 = *(_OWORD *)(a2 + 56);
    long long v12 = *v6;
    long long v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
    _OWORD *v4 = v12;
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    *(void *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (_OWORD *)(a1 + 152);
  uint64_t v15 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  long long v17 = (_OWORD *)(a2 + 152);
  uint64_t v16 = *(void *)(a2 + 152);
  if (v15)
  {
    if (v16)
    {
      *(void *)(a1 + 152) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD85050(a1 + 152);
      uint64_t v18 = *(void *)(a2 + 168);
      *uint64_t v14 = *v17;
      *(void *)(a1 + 168) = v18;
    }
  }
  else if (v16)
  {
    *(void *)(a1 + 152) = v16;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *v17;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *uint64_t v14 = v19;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy184_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for VisualUnderstanding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  if (v4 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 152);
  uint64_t v10 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if (!v10)
  {
LABEL_10:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    goto LABEL_11;
  }
  if (!v9)
  {
    sub_1DCD85050(a1 + 152);
    goto LABEL_10;
  }
  *(void *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding()
{
  return &type metadata for VisualUnderstanding;
}

uint64_t type metadata accessor for MetricsBucket()
{
  return self;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Text()
{
  return &type metadata for VisualUnderstanding.Text;
}

uint64_t _s18VisualIntelligence19VisualUnderstandingV18RegionalAnnotationVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18VisualIntelligence19VisualUnderstandingV18RegionalAnnotationVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t _s18VisualIntelligence19VisualUnderstandingV18RegionalAnnotationVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.RegionalAnnotation()
{
  return &type metadata for VisualUnderstanding.RegionalAnnotation;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ScenenetAnnotations()
{
  return &type metadata for VisualUnderstanding.ScenenetAnnotations;
}

uint64_t initializeWithCopy for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation()
{
  return &type metadata for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ReducePersonOverTriggerAnnotation()
{
  return &type metadata for VisualUnderstanding.ReducePersonOverTriggerAnnotation;
}

uint64_t destroy for VisualUnderstanding.Annotation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VisualUnderstanding.Annotation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VisualUnderstanding.Annotation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VisualUnderstanding.Annotation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.Annotation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding.Annotation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Annotation()
{
  return &type metadata for VisualUnderstanding.Annotation;
}

uint64_t initializeBufferWithCopyOfBuffer for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v10 = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(void *)(v4 + 80) = a2[10];
      *(void *)(v4 + 88) = v10;
      *(void *)(v4 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 80) = *((_OWORD *)a2 + 5);
      *(void *)(v4 + 96) = a2[12];
    }
    *(unsigned char *)(v4 + 104) = *((unsigned char *)a2 + 104);
    *(void *)(v4 + 112) = a2[14];
    uint64_t v12 = a3[15];
    uint64_t v13 = v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1DD046598();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = a3[17];
    *(unsigned char *)(v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *(void *)(v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 60);
  uint64_t v5 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[15];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1DD046598();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  uint64_t v15 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  long long v6 = (_OWORD *)(a1 + 80);
  uint64_t v7 = (_OWORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v8)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCE6DC50(a1 + 80);
      uint64_t v9 = *(void *)(a2 + 96);
      *long long v6 = *v7;
      *(void *)(a1 + 96) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v7;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *long long v6 = v10;
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[15];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v8 = a3[15];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v11 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 88)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  if (!v7)
  {
    sub_1DCE6DC50(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    goto LABEL_6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[15];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCFC8210);
}

uint64_t sub_1DCFC8210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD046598();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding.ImageRegion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCFC82D4);
}

uint64_t sub_1DCFC82D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD046598();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCFC837C()
{
  uint64_t result = sub_1DD046598();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for VisualUnderstanding.DomainInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualUnderstanding.DomainInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    uint64_t v8 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualUnderstanding.DomainInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 80);
  uint64_t v5 = (_OWORD *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v6)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD86FB0(a1 + 80);
      long long v7 = *(_OWORD *)(a2 + 96);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 96) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 96);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 96) = v8;
  }
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
  *(unsigned char *)(a1 + 126) = *(unsigned char *)(a2 + 126);
  *(unsigned char *)(a1 + 127) = *(unsigned char *)(a2 + 127);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  return a1;
}

__n128 __swift_memcpy157_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 141) = *(_OWORD *)(a2 + 141);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for VisualUnderstanding.DomainInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 88)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 88);
  if (!v7)
  {
    sub_1DCD86FB0(a1 + 80);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    goto LABEL_6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
  *(unsigned char *)(a1 + 126) = *(unsigned char *)(a2 + 126);
  *(unsigned char *)(a1 + 127) = *(unsigned char *)(a2 + 127);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.DomainInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 157)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding.DomainInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 156) = 0;
    *(_DWORD *)(result + 152) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 157) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 157) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DomainInfo()
{
  return &type metadata for VisualUnderstanding.DomainInfo;
}

uint64_t destroy for VisualUnderstanding.Signal()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VisualUnderstanding.Signal(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VisualUnderstanding.Signal(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for VisualUnderstanding.Signal(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.Signal(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstanding.Signal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Signal()
{
  return &type metadata for VisualUnderstanding.Signal;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.AdditionalSignalType()
{
  return &type metadata for VisualUnderstanding.AdditionalSignalType;
}

uint64_t initializeBufferWithCopyOfBuffer for VisualUnderstanding.AdditionalSignal(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VisualUnderstanding.AdditionalSignal(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VisualUnderstanding.AdditionalSignal(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.AdditionalSignal()
{
  return &type metadata for VisualUnderstanding.AdditionalSignal;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ImageRegion.Embedding()
{
  return &type metadata for VisualUnderstanding.ImageRegion.Embedding;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ImageRegion.Embedding.CodingKeys()
{
  return &type metadata for VisualUnderstanding.ImageRegion.Embedding.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.AdditionalSignal.CodingKeys()
{
  return &type metadata for VisualUnderstanding.AdditionalSignal.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Signal.CodingKeys()
{
  return &type metadata for VisualUnderstanding.Signal.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.DomainInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstanding.DomainInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *__n128 result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC8E34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DomainInfo.CodingKeys()
{
  return &type metadata for VisualUnderstanding.DomainInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.ImageRegion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstanding.ImageRegion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC8FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ImageRegion.CodingKeys()
{
  return &type metadata for VisualUnderstanding.ImageRegion.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstanding.Annotation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC90CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Annotation.CodingKeys()
{
  return &type metadata for VisualUnderstanding.Annotation.CodingKeys;
}

unsigned char *_s18VisualIntelligence19VisualUnderstandingV11ImageRegionV9EmbeddingV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCFC91A0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ReducePersonOverTriggerAnnotation.CodingKeys()
{
  return &type metadata for VisualUnderstanding.ReducePersonOverTriggerAnnotation.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC92A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.CodingKeys()
{
  return &type metadata for VisualUnderstanding.ReducePersonOverTriggerRegionalAnnotation.CodingKeys;
}

unsigned char *_s18VisualIntelligence19VisualUnderstandingV16AdditionalSignalV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC93A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.ScenenetAnnotations.CodingKeys()
{
  return &type metadata for VisualUnderstanding.ScenenetAnnotations.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.RegionalAnnotation.CodingKeys()
{
  return &type metadata for VisualUnderstanding.RegionalAnnotation.CodingKeys;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.Text.CodingKeys()
{
  return &type metadata for VisualUnderstanding.Text.CodingKeys;
}

uint64_t initializeWithCopy for DurationMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DurationMetric(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

void *assignWithTake for DurationMetric(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for DurationMetric()
{
  return &type metadata for DurationMetric;
}

uint64_t getEnumTagSinglePayload for VisualUnderstanding.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisualUnderstanding.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFC964CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.CodingKeys()
{
  return &type metadata for VisualUnderstanding.CodingKeys;
}

unint64_t sub_1DCFC9688()
{
  unint64_t result = qword_1EAB048B0;
  if (!qword_1EAB048B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048B0);
  }
  return result;
}

unint64_t sub_1DCFC96E0()
{
  unint64_t result = qword_1EAB048B8;
  if (!qword_1EAB048B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048B8);
  }
  return result;
}

unint64_t sub_1DCFC9738()
{
  unint64_t result = qword_1EAB048C0;
  if (!qword_1EAB048C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048C0);
  }
  return result;
}

unint64_t sub_1DCFC9790()
{
  unint64_t result = qword_1EAB048C8;
  if (!qword_1EAB048C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048C8);
  }
  return result;
}

unint64_t sub_1DCFC97E8()
{
  unint64_t result = qword_1EAB048D0;
  if (!qword_1EAB048D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048D0);
  }
  return result;
}

unint64_t sub_1DCFC9840()
{
  unint64_t result = qword_1EAB048D8;
  if (!qword_1EAB048D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048D8);
  }
  return result;
}

unint64_t sub_1DCFC9898()
{
  unint64_t result = qword_1EAB048E0;
  if (!qword_1EAB048E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048E0);
  }
  return result;
}

unint64_t sub_1DCFC98F0()
{
  unint64_t result = qword_1EAB048E8;
  if (!qword_1EAB048E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048E8);
  }
  return result;
}

unint64_t sub_1DCFC9948()
{
  unint64_t result = qword_1EAB048F0;
  if (!qword_1EAB048F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048F0);
  }
  return result;
}

unint64_t sub_1DCFC99A0()
{
  unint64_t result = qword_1EAB048F8;
  if (!qword_1EAB048F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB048F8);
  }
  return result;
}

unint64_t sub_1DCFC99F8()
{
  unint64_t result = qword_1EAB04900;
  if (!qword_1EAB04900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04900);
  }
  return result;
}

unint64_t sub_1DCFC9A50()
{
  unint64_t result = qword_1EAB04908;
  if (!qword_1EAB04908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04908);
  }
  return result;
}

unint64_t sub_1DCFC9AA8()
{
  unint64_t result = qword_1EAB04910;
  if (!qword_1EAB04910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04910);
  }
  return result;
}

unint64_t sub_1DCFC9B00()
{
  unint64_t result = qword_1EAB04918;
  if (!qword_1EAB04918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04918);
  }
  return result;
}

unint64_t sub_1DCFC9B58()
{
  unint64_t result = qword_1EAB04920;
  if (!qword_1EAB04920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04920);
  }
  return result;
}

unint64_t sub_1DCFC9BB0()
{
  unint64_t result = qword_1EAB04928;
  if (!qword_1EAB04928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04928);
  }
  return result;
}

unint64_t sub_1DCFC9C08()
{
  unint64_t result = qword_1EBE85628;
  if (!qword_1EBE85628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85628);
  }
  return result;
}

unint64_t sub_1DCFC9C60()
{
  unint64_t result = qword_1EBE85620;
  if (!qword_1EBE85620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85620);
  }
  return result;
}

unint64_t sub_1DCFC9CB8()
{
  unint64_t result = qword_1EBE848E8;
  if (!qword_1EBE848E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE848E8);
  }
  return result;
}

unint64_t sub_1DCFC9D10()
{
  unint64_t result = qword_1EBE84978;
  if (!qword_1EBE84978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84978);
  }
  return result;
}

unint64_t sub_1DCFC9D68()
{
  unint64_t result = qword_1EBE84998;
  if (!qword_1EBE84998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84998);
  }
  return result;
}

unint64_t sub_1DCFC9DC0()
{
  unint64_t result = qword_1EBE84990;
  if (!qword_1EBE84990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84990);
  }
  return result;
}

unint64_t sub_1DCFC9E18()
{
  unint64_t result = qword_1EBE84948;
  if (!qword_1EBE84948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84948);
  }
  return result;
}

unint64_t sub_1DCFC9E70()
{
  unint64_t result = qword_1EBE84940;
  if (!qword_1EBE84940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84940);
  }
  return result;
}

unint64_t sub_1DCFC9EC8()
{
  unint64_t result = qword_1EBE82C80;
  if (!qword_1EBE82C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C80);
  }
  return result;
}

unint64_t sub_1DCFC9F20()
{
  unint64_t result = qword_1EBE82C78;
  if (!qword_1EBE82C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C78);
  }
  return result;
}

unint64_t sub_1DCFC9F78()
{
  unint64_t result = qword_1EBE82C98;
  if (!qword_1EBE82C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C98);
  }
  return result;
}

unint64_t sub_1DCFC9FD0()
{
  unint64_t result = qword_1EBE82C90;
  if (!qword_1EBE82C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C90);
  }
  return result;
}

unint64_t sub_1DCFCA028()
{
  unint64_t result = qword_1EAB04930;
  if (!qword_1EAB04930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04930);
  }
  return result;
}

unint64_t sub_1DCFCA080()
{
  unint64_t result = qword_1EAB04938;
  if (!qword_1EAB04938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04938);
  }
  return result;
}

unint64_t sub_1DCFCA0D8()
{
  unint64_t result = qword_1EBE85608;
  if (!qword_1EBE85608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85608);
  }
  return result;
}

unint64_t sub_1DCFCA130()
{
  unint64_t result = qword_1EBE85600;
  if (!qword_1EBE85600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85600);
  }
  return result;
}

unint64_t sub_1DCFCA188()
{
  unint64_t result = qword_1EAB04940;
  if (!qword_1EAB04940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04940);
  }
  return result;
}

unint64_t sub_1DCFCA1E0()
{
  unint64_t result = qword_1EAB04948;
  if (!qword_1EAB04948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04948);
  }
  return result;
}

unint64_t sub_1DCFCA238()
{
  unint64_t result = qword_1EBE84968;
  if (!qword_1EBE84968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84968);
  }
  return result;
}

unint64_t sub_1DCFCA290()
{
  unint64_t result = qword_1EBE84960;
  if (!qword_1EBE84960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84960);
  }
  return result;
}

uint64_t sub_1DCFCA2E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D496C6C61 && a2 == 0xEF736E6F69676552;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461746F6E6E61 && a2 == 0xEA00000000006E6FLL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5264656E69666572 && a2 == 0xED00006E6F696765 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7A69536567616D69 && a2 == 0xE900000000000065 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6D6F436C727563 && a2 == 0xEB00000000646E61 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44497972657571 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068100 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xEF7363697274654DLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_1DCFCA6C4()
{
  unint64_t result = qword_1EBE857A8;
  if (!qword_1EBE857A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE857A8);
  }
  return result;
}

uint64_t sub_1DCFCA718(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DD070280 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xEE00706D61745365)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_1DCFCA87C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04950);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFCA6C4();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v13 = 0;
    sub_1DD048DC8();
    char v12 = 1;
    swift_bridgeObjectRetain();
    sub_1DD048DE8();
    double v2 = v9;
    char v11 = 2;
    sub_1DD048E58();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DCFCAA98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCFCAC04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCFCAD78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E6F69676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCFCAE6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E756F4365636166 && a2 == 0xE900000000000074 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DCFCB050(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6E6E4165636166 && a2 == 0xEF736E6F69746174;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DD0700B0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6E6E417766736ELL && a2 == 0xEF736E6F69746174 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6E6E4174786574 && a2 == 0xEF736E6F69746174 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DD0700D0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DD0700F0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001DD070110)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1DCFCB360(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD070140 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69616D6F446C6C61 && a2 == 0xED00006F666E496ELL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F746365746564 && a2 == 0xEF73746C75736552 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001DD070160 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65726F6353786F62 && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6552657372616F63 && a2 == 0xED000073746C7573 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x49656C6F68577369 && a2 == 0xEC0000006567616DLL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x736C616E676973 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x55676E6967676F6CLL && a2 == 0xEB00000000444955 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6570756F72477369 && a2 == 0xEF6E6F6967655264 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD070180)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1DCFCB9BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696F506C61636F66 && a2 == 0xEA0000000000746ELL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E6870796C67 && a2 == 0xE900000000000065 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DD0701A0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C79616C70736964 && a2 == 0xEC0000006C656261 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4D79616C70736964 && a2 == 0xEE00656761737365 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F746365746564 && a2 == 0xED000065726F6353 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6353657372616F63 && a2 == 0xEB0000000065726FLL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7463656C65537369 && a2 == 0xEA00000000006465 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6863726165537369 && a2 == 0xEC000000656C6261 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x72656E726F437369 && a2 == 0xED00006870796C47 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x5374736575716572 && a2 == 0xED00006863726165 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001DD0701C0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DD0701E0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DD070200 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001DD070220 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6E6F43776F4C7369 && a2 == 0xEF65636E65646966)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

uint64_t sub_1DCFCC230(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6966697373616C63 && a2 == 0xEE006E6F69746163)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1DCFCC3D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001DD070240 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001DD070260)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCFCC4BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCFCC504(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFCC56C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCFCC5CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCFCC634()
{
  unint64_t result = qword_1EAB04958;
  if (!qword_1EAB04958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04958);
  }
  return result;
}

unsigned char *_s18VisualIntelligence19VisualUnderstandingV20AdditionalSignalTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFCC754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DurationMetric.CodingKeys()
{
  return &type metadata for DurationMetric.CodingKeys;
}

unint64_t sub_1DCFCC790()
{
  unint64_t result = qword_1EAB04960;
  if (!qword_1EAB04960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04960);
  }
  return result;
}

unint64_t sub_1DCFCC7E8()
{
  unint64_t result = qword_1EBE857B8;
  if (!qword_1EBE857B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE857B8);
  }
  return result;
}

unint64_t sub_1DCFCC840()
{
  unint64_t result = qword_1EBE857B0;
  if (!qword_1EBE857B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE857B0);
  }
  return result;
}

void sub_1DCFCC8A4(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t type metadata accessor for CameraAdditionalSignalProcessor()
{
  return self;
}

uint64_t sub_1DCFCC8D0(uint64_t a1)
{
  uint64_t v2 = sub_1DD048068();
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = v6 + 32;
  int v46 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
  int v47 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  unint64_t v50 = (unint64_t)"mpletions";
  unint64_t v38 = 0x80000001DD06C7B0;
  int v43 = "coarseCategoryDistribution";
  unint64_t v42 = 0x80000001DD067880;
  *(void *)&long long v10 = 136315138;
  long long v45 = v10;
  uint64_t v44 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v40 = v6;
  uint64_t v37 = v7;
  while (1)
  {
    if (v9 >= *(void *)(v6 + 16)) {
      goto LABEL_44;
    }
    char v11 = *(void **)(v41 + 48 * v9 + 32);
    uint64_t v49 = v11[2];
    if (v49) {
      break;
    }
LABEL_4:
    if (++v9 == v7)
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v12 = v11[4];
  uint64_t v13 = v11[5];
  unint64_t v14 = v11[6];
  if (v13 == 0xD00000000000002DLL && v14 == v38 || (unint64_t v39 = v9, (sub_1DD048FA8() & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return v12;
  }
  uint64_t v15 = qword_1EBE87190;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  int v48 = v11;
  uint64_t v16 = v11 + 9;
  for (uint64_t i = 1; ; uint64_t i = v35 + 1)
  {
    unint64_t v51 = i;
    if (byte_1EBE87188 != 1) {
      goto LABEL_26;
    }
    id v18 = objc_msgSend(self, sel_mainBundle);
    id v19 = objc_msgSend(v18, sel_bundleIdentifier);

    if (v19)
    {
      uint64_t v20 = sub_1DD048408();
      uint64_t v22 = v21;

      if (v20 == 0xD00000000000002BLL && v22 == v42)
      {
        swift_bridgeObjectRelease();
LABEL_19:
        char v24 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          char v24 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_23;
      }
      char v23 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_19;
      }
    }
    char v24 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      char v24 = &qword_1EBE871E8;
    }
LABEL_23:
    char v25 = *(void **)(*v24 + 32);
    swift_retain();
    char v26 = (void *)sub_1DD0483D8();
    LODWORD(v25) = objc_msgSend(v25, sel_BOOLForKey_, v26);
    swift_release();

    if (v25)
    {
      char v27 = qword_1EAB02B70;
      if (qword_1EAB01C80 != -1)
      {
        swift_once();
        char v27 = qword_1EAB02B70;
      }
      goto LABEL_28;
    }
LABEL_26:
    char v27 = qword_1EBE871A8;
    if (qword_1EBE871C8 != -1)
    {
      swift_once();
      char v27 = qword_1EBE871A8;
    }
LABEL_28:
    uint64_t v28 = __swift_project_value_buffer(v2, (uint64_t)v27);
    (*v47)(v5, v28, v2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v29 = sub_1DD048048();
    os_log_type_t v30 = sub_1DD048848();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v2;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v52 = v33;
      *(_DWORD *)uint64_t v31 = v45;
      swift_bridgeObjectRetain();
      *(void *)(v31 + 4) = sub_1DCED7FA0(v13, v14, &v52);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v29, v30, "emeddingURN not matching storefront URN %s", (uint8_t *)v31, 0xCu);
      swift_arrayDestroy();
      uint64_t v34 = v33;
      uint64_t v2 = v32;
      MEMORY[0x1E01B07E0](v34, -1, -1);
      MEMORY[0x1E01B07E0](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*v46)(v5, v2);
    unint64_t v35 = v51;
    if (v49 == v51)
    {
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v9 = v39;
      uint64_t v6 = v40;
      uint64_t v7 = v37;
      goto LABEL_4;
    }
    if (v51 >= v48[2]) {
      break;
    }
    uint64_t v12 = *(v16 - 2);
    uint64_t v13 = *(v16 - 1);
    unint64_t v14 = *v16;
    if (v13 == 0xD00000000000002DLL && v14 == (v50 | 0x8000000000000000))
    {
      swift_bridgeObjectRetain();
LABEL_38:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    char v36 = sub_1DD048FA8();
    swift_bridgeObjectRetain();
    if (v36) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    v16 += 3;
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1DCFCCF50(unint64_t a1)
{
  unint64_t v136 = a1;
  v143[9] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1DD048068();
  unint64_t v139 = *(void *)(v1 - 8);
  unint64_t v140 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v138 = (char *)&v132 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v137 = (char *)&v132 - v5;
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v132 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v132 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v132 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v132 - v17;
  MEMORY[0x1F4188790](v19);
  MEMORY[0x1F4188790](v20);
  type metadata accessor for TitleClassificationModel();
  sub_1DCFEA2DC(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init));
  long long v134 = v15;
  long long v135 = v18;
  unint64_t v21 = v139;
  uint64_t v138 = v22;
  type metadata accessor for CategoryClassificationModel();
  sub_1DCFEB094(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init));
  uint64_t v137 = v23;
  type metadata accessor for StorefrontLabelMapper();
  swift_allocObject();
  char v24 = sub_1DCDE6080();
  id v33 = sub_1DCEEE0B0(v136, 1);
  long long v133 = v24;
  type metadata accessor for TitleClassificationModelInput();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  char v36 = (void *)*((void *)v138 + 2);
  v143[0] = 0;
  id v37 = objc_msgSend(v36, sel_predictionFromFeatures_options_error_, v34, v35, v143);
  id v38 = v143[0];
  if (!v37)
  {
    id v51 = v143[0];
    uint64_t v52 = (void *)sub_1DD046378();

    swift_willThrow();
    swift_release();
    char v25 = v12;
    sub_1DCDB40EC((uint64_t)v12);
    sub_1DCDB4300((uint64_t)v9);
    char v26 = *(void (**)(char *, unint64_t))(v21 + 8);
    unint64_t v27 = v140;
    v26(v25, v140);
    uint64_t v28 = sub_1DD048048();
    os_log_type_t v29 = sub_1DD048848();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v30 = 0;
      _os_log_impl(&dword_1DCCF9000, v28, v29, "Could not inference title model for storefront brand classification", v30, 2u);
      MEMORY[0x1E01B07E0](v30, -1, -1);
    }

    v26(v9, v27);
    swift_release();
    swift_release();
    goto LABEL_5;
  }
  unint64_t v39 = v37;
  type metadata accessor for TitleClassificationModelOutput();
  *(void *)(swift_initStackObject() + 16) = v39;
  id v40 = v38;
  swift_release();

  uint64_t v41 = (void *)sub_1DD0483D8();
  id v42 = objc_msgSend(v39, sel_featureValueForName_, v41);

  if (!v42)
  {
    __break(1u);
    goto LABEL_79;
  }
  id v43 = objc_msgSend(v42, sel_multiArrayValue);

  if (!v43)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  swift_release();
  id v44 = objc_msgSend(v43, sel_numberArray);

  sub_1DCD56524();
  uint64_t v45 = sub_1DD0486B8();

  id v53 = sub_1DCEEE0B0(v136, 1);
  unint64_t v136 = v45;
  type metadata accessor for CategoryClassificationModelInput();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v53;
  id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  uint64_t v56 = (void *)*((void *)v137 + 2);
  v143[0] = 0;
  id v57 = objc_msgSend(v56, sel_predictionFromFeatures_options_error_, v54, v55, v143);
  id v58 = v143[0];
  if (!v57)
  {
    id v93 = v143[0];
    int v94 = (void *)sub_1DD046378();

    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_release();
    uint64_t v95 = (uint64_t)v135;
    sub_1DCDB40EC((uint64_t)v135);
    uint64_t v46 = (uint64_t)v134;
    sub_1DCDB4300((uint64_t)v134);
    int v47 = *(void (**)(uint64_t, unint64_t))(v21 + 8);
    v47(v95, v140);
    int v48 = sub_1DD048048();
    os_log_type_t v49 = sub_1DD048848();
    if (os_log_type_enabled(v48, v49))
    {
      unint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v50 = 0;
      _os_log_impl(&dword_1DCCF9000, v48, v49, "Could not inference category model for storefront type classification", v50, 2u);
      MEMORY[0x1E01B07E0](v50, -1, -1);
    }

    v47(v46, v140);
    swift_release();
    swift_release();
LABEL_5:
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v59 = v57;
  type metadata accessor for CategoryClassificationModelOutput();
  *(void *)(swift_initStackObject() + 16) = v59;
  id v60 = v58;
  swift_release();

  uint64_t v61 = (void *)sub_1DD0483D8();
  id v62 = objc_msgSend(v59, (SEL)&selRef_parseWithVisualQuery_cachedResults_completion_ + 6, v61);

  uint64_t v63 = (uint64_t)v133;
  if (!v62)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  id v64 = objc_msgSend(v62, sel_multiArrayValue);

  if (v64)
  {
    swift_release();
    id v65 = objc_msgSend(v64, sel_numberArray);

    unint64_t v140 = sub_1DD0486B8();
    uint64_t isUniquelyReferenced_nonNull_native = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    uint64_t v67 = v136;
    if (v136 >> 62) {
      goto LABEL_45;
    }
    uint64_t v68 = *(void *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v68)
    {
      unint64_t v69 = v67 & 0xC000000000000001;
      uint64_t v70 = 4;
      unint64_t v139 = v68;
      while (1)
      {
        id v71 = v69 ? (id)MEMORY[0x1E01AE890](v70 - 4, v67) : *(id *)(v67 + 8 * v70);
        uint64_t v72 = v71;
        uint64_t v73 = v70 - 3;
        if (__OFADD__(v70 - 4, 1)) {
          break;
        }
        uint64_t v74 = *(void *)(v63 + 40);
        if (*(void *)(v74 + 16))
        {
          unint64_t v75 = sub_1DCEAD4C8(v70 - 4);
          if (v76)
          {
            long long v77 = (uint64_t *)(*(void *)(v74 + 56) + 16 * v75);
            uint64_t v67 = *v77;
            uint64_t v78 = v77[1];
            swift_bridgeObjectRetain();
            objc_msgSend(v72, sel_floatValue);
            int v80 = v79;
            uint64_t v81 = (void *)isUniquelyReferenced_nonNull_native;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v143[0] = v81;
            unint64_t v83 = sub_1DCEAD1A4(v67, v78);
            uint64_t v84 = v81[2];
            BOOL v85 = (v82 & 1) == 0;
            uint64_t v86 = v84 + v85;
            if (__OFADD__(v84, v85)) {
              goto LABEL_43;
            }
            uint64_t v63 = v82;
            if (v81[3] >= v86)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v143[0];
                if ((v82 & 1) == 0) {
                  goto LABEL_33;
                }
              }
              else
              {
                sub_1DCE88D74();
                uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v143[0];
                if ((v63 & 1) == 0) {
                  goto LABEL_33;
                }
              }
            }
            else
            {
              sub_1DCE7E984(v86, isUniquelyReferenced_nonNull_native);
              unint64_t v87 = sub_1DCEAD1A4(v67, v78);
              if ((v63 & 1) != (v88 & 1)) {
                goto LABEL_82;
              }
              unint64_t v83 = v87;
              uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v143[0];
              if ((v63 & 1) == 0)
              {
LABEL_33:
                *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v83 >> 6) + 64) |= 1 << v83;
                long long v89 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v83);
                *long long v89 = v67;
                v89[1] = v78;
                *(_DWORD *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 4 * v83) = v80;
                uint64_t v90 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
                BOOL v91 = __OFADD__(v90, 1);
                uint64_t v92 = v90 + 1;
                if (v91) {
                  goto LABEL_44;
                }
                *(void *)(isUniquelyReferenced_nonNull_native + 16) = v92;
                swift_bridgeObjectRetain();
                goto LABEL_38;
              }
            }
            *(_DWORD *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 4 * v83) = v80;
LABEL_38:
            uint64_t v63 = (uint64_t)v133;
            uint64_t v67 = v136;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v68 = v139;
            goto LABEL_22;
          }
        }

LABEL_22:
        ++v70;
        if (v73 == v68) {
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
    }
LABEL_46:
    swift_bridgeObjectRelease();
    uint64_t v96 = MEMORY[0x1E4FBC860];
    char v97 = (void *)sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    uint64_t v98 = (void *)sub_1DCDB86BC(v96);
    if (v140 >> 62) {
      goto LABEL_77;
    }
    uint64_t v99 = *(void *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      long long v134 = (char *)isUniquelyReferenced_nonNull_native;
      char v100 = 0;
      if (!v99) {
        break;
      }
      unint64_t v139 = v140 & 0xC000000000000001;
      uint64_t v101 = 4;
      long long v135 = (char *)v99;
      while (1)
      {
        id v103 = v139 ? (id)MEMORY[0x1E01AE890](v101 - 4, v140) : *(id *)(v140 + 8 * v101);
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v103;
        uint64_t v104 = v101 - 3;
        if (__OFADD__(v101 - 4, 1)) {
          break;
        }
        uint64_t v105 = *(void *)(v63 + 24);
        if (*(void *)(v105 + 16))
        {
          unint64_t v106 = sub_1DCEAD4C8(v101 - 4);
          if (v107)
          {
            uint64_t v108 = (uint64_t *)(*(void *)(v105 + 56) + 16 * v106);
            uint64_t v109 = *v108;
            uint64_t v110 = v108[1];
            swift_bridgeObjectRetain_n();
            uint64_t v63 = (uint64_t)&off_1E6CB2000;
            objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_floatValue);
            float v112 = v111;
            char v113 = swift_isUniquelyReferenced_nonNull_native();
            v143[0] = v97;
            sub_1DCE85920(v109, v110, v113, v112);
            unint64_t v136 = (unint64_t)v143[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v114 = (void *)sub_1DD048488();
            char v97 = v115;
            swift_bridgeObjectRelease();
            v143[0] = v114;
            v143[1] = v97;
            uint64_t v141 = 46;
            unint64_t v142 = 0xE100000000000000;
            sub_1DCD21A84();
            long long v116 = (void *)sub_1DD048A48();
            swift_bridgeObjectRelease();
            if (!v116[2]) {
              goto LABEL_74;
            }
            char v97 = (void *)v116[4];
            uint64_t v117 = v116[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_floatValue);
            float v119 = v118;
            sub_1DCD33E90((uint64_t)v100);
            uint64_t v63 = swift_isUniquelyReferenced_nonNull_native();
            v143[0] = v98;
            unint64_t v121 = sub_1DCEAD1A4((uint64_t)v97, v117);
            uint64_t v122 = v98[2];
            BOOL v123 = (v120 & 1) == 0;
            uint64_t v124 = v122 + v123;
            if (__OFADD__(v122, v123)) {
              goto LABEL_75;
            }
            char v125 = v120;
            if (v98[3] >= v124)
            {
              if ((v63 & 1) == 0) {
                sub_1DCE88D74();
              }
            }
            else
            {
              sub_1DCE7E984(v124, v63);
              unint64_t v126 = sub_1DCEAD1A4((uint64_t)v97, v117);
              if ((v125 & 1) != (v127 & 1)) {
                goto LABEL_82;
              }
              unint64_t v121 = v126;
            }
            uint64_t v63 = (uint64_t)v133;
            uint64_t v98 = v143[0];
            swift_bridgeObjectRelease();
            if ((v125 & 1) == 0)
            {
              v98[(v121 >> 6) + 8] |= 1 << v121;
              long long v128 = (void *)(v98[6] + 16 * v121);
              *long long v128 = v97;
              v128[1] = v117;
              *(_DWORD *)(v98[7] + 4 * v121) = 0;
              uint64_t v129 = v98[2];
              uint64_t v130 = v129 + 1;
              BOOL v131 = __OFADD__(v129, 1);
              swift_bridgeObjectRetain();
              if (v131) {
                goto LABEL_76;
              }
              v98[2] = v130;
            }
            swift_bridgeObjectRetain();
            uint64_t v102 = v98[7];
            swift_bridgeObjectRelease();
            *(float *)(v102 + 4 * v121) = v119 + *(float *)(v102 + 4 * v121);
            swift_bridgeObjectRelease();
            char v100 = sub_1DCFCC8A4;
            uint64_t v99 = (uint64_t)v135;
            char v97 = (void *)v136;
          }
        }

        ++v101;
        if (v104 == v99) {
          goto LABEL_72;
        }
      }
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
    }
LABEL_72:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04968);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1DD04E760;
    *(unsigned char *)(v31 + 32) = 0;
    *(void *)(v31 + 40) = v134;
    *(unsigned char *)(v31 + 48) = 1;
    *(void *)(v31 + 56) = v97;
    *(unsigned char *)(v31 + 64) = 2;
    *(void *)(v31 + 72) = v98;
    swift_release();
    swift_release();
    swift_release();
    sub_1DCD33E90((uint64_t)v100);
    return v31;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

unint64_t sub_1DCFCDF4C(uint64_t a1)
{
  uint64_t v72 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v71 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v60 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (uint64_t)&v60 - v8;
  MEMORY[0x1F4188790](v9);
  id v64 = (char *)&v60 - v10;
  uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  long long v77 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v12 = *(char **)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v69 = v2;
  uint64_t v70 = v6;
  uint64_t v66 = v12;
  if (v12)
  {
    uint64_t v13 = 0;
    uint64_t v14 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v15 = *(void *)(v2 + 72);
    uint64_t v60 = a1;
    uint64_t v61 = (v14 + 32) & ~v14;
    uint64_t v65 = a1 + v61;
    uint64_t v16 = (uint64_t)v64;
    uint64_t v62 = v15;
    while (1)
    {
      sub_1DCD36E7C(v65 + v15 * (void)v13, v16);
      uint64_t v17 = *(void *)(v16 + 112);
      uint64_t v74 = *(void *)(v17 + 16);
      if (!v74)
      {
        uint64_t v19 = v11;
        uint64_t v40 = v11[2];
        if (!v40) {
          goto LABEL_3;
        }
        goto LABEL_37;
      }
      uint64_t v67 = v17;
      uint64_t v68 = v13;
      unint64_t v73 = v17 + 32;
      swift_bridgeObjectRetain_n();
      uint64_t v18 = 0;
      uint64_t v19 = v11;
      do
      {
        unint64_t v20 = v73 + 48 * v18;
        uint64_t v21 = *(void *)(v20 + 32);
        int64_t v22 = *(void *)(v21 + 16);
        if (v22)
        {
          uint64_t v23 = *(void *)(v20 + 40);
          char v76 = v11;
          swift_bridgeObjectRetain_n();
          uint64_t v75 = v23;
          swift_bridgeObjectRetain();
          sub_1DCFC5A20(0, v22, 0);
          char v24 = v76;
          uint64_t v25 = 32;
          do
          {
            uint64_t v26 = *(void *)(v21 + v25);
            char v76 = v24;
            unint64_t v28 = v24[2];
            unint64_t v27 = v24[3];
            swift_bridgeObjectRetain();
            if (v28 >= v27 >> 1)
            {
              sub_1DCFC5A20(v27 > 1, v28 + 1, 1);
              char v24 = v76;
            }
            void v24[2] = v28 + 1;
            v24[v28 + 4] = v26;
            v25 += 24;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
        }
        else
        {
          char v24 = v11;
        }
        uint64_t v29 = v24[2];
        int64_t v30 = v19[2];
        int64_t v31 = v30 + v29;
        if (__OFADD__(v30, v29))
        {
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          sub_1DD048D18();
          __break(1u);
          JUMPOUT(0x1DCFCE86CLL);
        }
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v31 <= v19[3] >> 1)
        {
          if (!v24[2]) {
            goto LABEL_7;
          }
        }
        else
        {
          if (v30 <= v31) {
            int64_t v33 = v30 + v29;
          }
          else {
            int64_t v33 = v30;
          }
          uint64_t v19 = sub_1DCEA0114((void *)isUniquelyReferenced_nonNull_native, v33, 1, v19);
          if (!v24[2])
          {
LABEL_7:
            if (v29) {
              goto LABEL_71;
            }
            goto LABEL_8;
          }
        }
        uint64_t v34 = v19[2];
        if ((v19[3] >> 1) - v34 < v29) {
          goto LABEL_72;
        }
        unint64_t v35 = (unint64_t)&v19[v34 + 4];
        if ((unint64_t)(v24 + 4) < v35 + 8 * v29 && v35 < (unint64_t)&v24[v29 + 4]) {
          goto LABEL_75;
        }
        swift_arrayInitWithCopy();
        if (v29)
        {
          uint64_t v37 = v19[2];
          BOOL v38 = __OFADD__(v37, v29);
          uint64_t v39 = v37 + v29;
          if (v38) {
            goto LABEL_73;
          }
          v19[2] = v39;
        }
LABEL_8:
        ++v18;
        swift_bridgeObjectRelease();
      }
      while (v18 != v74);
      swift_bridgeObjectRelease_n();
      uint64_t v6 = v70;
      uint64_t v16 = (uint64_t)v64;
      uint64_t v13 = v68;
      uint64_t v15 = v62;
      uint64_t v40 = v19[2];
      if (!v40)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        sub_1DCD96118(v16);
        goto LABEL_4;
      }
LABEL_37:
      uint64_t v41 = 0;
      while (!*(void *)(v19[v41 + 4] + 16))
      {
        if (v40 == ++v41) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      sub_1DCD36EE0(v16, v63);
      id v42 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC49E8(0, v42[2] + 1, 1);
        uint64_t v16 = (uint64_t)v64;
        id v42 = v77;
      }
      unint64_t v44 = v42[2];
      unint64_t v43 = v42[3];
      if (v44 >= v43 >> 1)
      {
        sub_1DCFC49E8(v43 > 1, v44 + 1, 1);
        uint64_t v16 = (uint64_t)v64;
        id v42 = v77;
      }
      v42[2] = v44 + 1;
      sub_1DCD36EE0(v63, (uint64_t)v42 + v61 + v44 * v15);
      uint64_t v6 = v70;
LABEL_4:
      if (++v13 == v66)
      {
        uint64_t v11 = v77;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v74 = v11[2];
  if (v74)
  {
    unint64_t v45 = 0;
    uint64_t v46 = v69;
    unint64_t v73 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v68 = (char *)v11 + v73;
    unint64_t v47 = MEMORY[0x1E4FBC860];
    do
    {
      if (v45 >= v11[2]) {
        goto LABEL_74;
      }
      uint64_t v48 = *(void *)(v46 + 72);
      sub_1DCD36E7C((uint64_t)&v68[v48 * v45], (uint64_t)v6);
      uint64_t v49 = *((void *)v6 + 6);
      uint64_t v50 = *(void *)(v49 + 16);
      if (v50)
      {
        uint64_t v75 = v48;
        id v51 = v11;
        swift_bridgeObjectRetain();
        uint64_t v52 = (unsigned char *)(v49 + 156);
        do
        {
          if (*v52 == 1)
          {
            switch(*(v52 - 124))
            {
              case 0x11:
                swift_bridgeObjectRelease();
                goto LABEL_59;
              default:
                char v55 = sub_1DD048FA8();
                swift_bridgeObjectRelease();
                if (v55)
                {
LABEL_59:
                  unint64_t v56 = sub_1DCFCC8D0((uint64_t)v6);
                  if (*(void *)(v56 + 16))
                  {
                    uint64_t v53 = sub_1DCFCCF50(v56);
                    swift_bridgeObjectRelease();
                    uint64_t v54 = *(int *)(v72 + 68);
                    swift_bridgeObjectRelease();
                    *(void *)&v6[v54] = v53;
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                  }
                }
                break;
            }
          }
          v52 += 160;
          --v50;
        }
        while (v50);
        swift_bridgeObjectRelease();
        uint64_t v11 = v51;
        uint64_t v48 = v75;
      }
      sub_1DCD36E7C((uint64_t)v6, v71);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v47 = sub_1DCE9D7A0(0, *(void *)(v47 + 16) + 1, 1, v47);
      }
      unint64_t v58 = *(void *)(v47 + 16);
      unint64_t v57 = *(void *)(v47 + 24);
      if (v58 >= v57 >> 1) {
        unint64_t v47 = sub_1DCE9D7A0(v57 > 1, v58 + 1, 1, v47);
      }
      ++v45;
      *(void *)(v47 + 16) = v58 + 1;
      sub_1DCD36EE0(v71, v47 + v73 + v58 * v48);
      uint64_t v6 = v70;
      sub_1DCD96118((uint64_t)v70);
      uint64_t v46 = v69;
    }
    while (v45 != v74);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC860];
  }
  return v47;
}

uint64_t sub_1DCFCE8D4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = v7 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_1DD047BF8();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 28);
    uint64_t v15 = (void *)(v7 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v20;
      *((_DWORD *)v15 + 4) = *((_DWORD *)v16 + 4);
      *((_WORD *)v15 + 10) = *((_WORD *)v16 + 10);
      uint64_t v21 = *(int *)(v17 + 32);
      unint64_t v27 = (char *)v15 + v21;
      int64_t v22 = (char *)v16 + v21;
      swift_bridgeObjectRetain();
      v13((uint64_t)v27, (uint64_t)v22, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v23 = a3[6];
    *(unsigned char *)(v7 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v24 = v7 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
    *(void *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DCFCEB14(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 28);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 32), v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFCEC2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_WORD *)v13 + 10) = *((_WORD *)v14 + 10);
    uint64_t v19 = *(int *)(v15 + 32);
    uint64_t v25 = (char *)v13 + v19;
    uint64_t v20 = (char *)v14 + v19;
    swift_bridgeObjectRetain();
    v11((uint64_t)v25, (uint64_t)v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v21 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCFCEE20(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v29 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v28 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (!v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *(void *)(v13 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
      *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
      *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v30);
      goto LABEL_7;
    }
    sub_1DCFD04F4(v12, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
  *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
  *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
  uint64_t v18 = *(int *)(v14 + 32);
  uint64_t v19 = v12 + v18;
  uint64_t v20 = v13 + v18;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v23 = a3[6];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCFCF0F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(v6 + 28);
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
    *((_WORD *)v13 + 10) = *((_WORD *)v14 + 10);
    v11((char *)v13 + *(int *)(v15 + 32), (char *)v14 + *(int *)(v15 + 32), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v18 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCFCF2C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v25 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v24 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v23 = *(void *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v23;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
      *(unsigned char *)(v12 + 20) = *(unsigned char *)(v13 + 20);
      *(unsigned char *)(v12 + 21) = *(unsigned char *)(v13 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v26);
      goto LABEL_7;
    }
    sub_1DCFD04F4(v12, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v12, (const void *)v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_DWORD *)(v12 + 16) = *(_DWORD *)(v13 + 16);
  *(_WORD *)(v12 + 20) = *(_WORD *)(v13 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v14);
LABEL_7:
  uint64_t v19 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCFCF554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCFCF568);
}

uint64_t sub_1DCFCF568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCFCF628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCFCF63C);
}

uint64_t sub_1DCFCF63C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FusionDomainAssignmentRule()
{
  uint64_t result = qword_1EBE84BB0;
  if (!qword_1EBE84BB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCFCF744()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCFCF7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v97 = a3;
  uint64_t v100 = a1;
  uint64_t v101 = a2;
  uint64_t v99 = a4;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v4 - 8);
  int v94 = (long long *)&v87[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v95 = (long long *)&v87[-v7];
  uint64_t v8 = type metadata accessor for FusionDomainAssignmentRule();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = &v87[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v87[-v12];
  uint64_t v14 = sub_1DD048068();
  uint64_t v96 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v16 = &v87[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = &v87[-v18];
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = &v87[-v21];
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = &v87[-v24];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = &v87[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DCD32C3C(v100, (uint64_t)v131);
  if (*(unsigned char *)(v101 + 104) == 1)
  {
LABEL_8:
    sub_1DCD32C3C((uint64_t)v131, v99);
    return sub_1DCD5D8A8((uint64_t)v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v92 = v16;
  id v93 = v10;
  long long v89 = v13;
  uint64_t v90 = v25;
  BOOL v91 = v22;
  uint64_t v100 = v14;
  uint64_t v29 = (uint64_t)v98;
  sub_1DCD370D0(*v98);
  if (!v30)
  {
    sub_1DCDB40EC((uint64_t)v19);
    uint64_t v39 = (uint64_t)v92;
    sub_1DCDB4300((uint64_t)v92);
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v96 + 8);
    uint64_t v41 = v100;
    v40(v19, v100);
    id v42 = sub_1DD048048();
    os_log_type_t v43 = sub_1DD048848();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v44 = 0;
      _os_log_impl(&dword_1DCCF9000, v42, v43, "No satisified coarse label.", v44, 2u);
      MEMORY[0x1E01B07E0](v44, -1, -1);
    }

    v40((unsigned char *)v39, v41);
    goto LABEL_8;
  }
  uint64_t v32 = v30;
  LODWORD(v97) = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
  uint64_t v33 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1DD04E910;
  uint64_t v37 = v36 + v35;
  uint64_t v38 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule(0);
  sub_1DCF1DE30(v29 + *(int *)(v38 + 28), (uint64_t)v28);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v28, 1, v33) == 1)
  {
    *(void *)uint64_t v37 = 0;
    *(void *)(v37 + 8) = 0xE000000000000000;
    *(_DWORD *)(v37 + 16) = 0;
    *(_WORD *)(v37 + 20) = 0;
    sub_1DD047BE8();
    sub_1DCF1DE98((uint64_t)v28);
  }
  else
  {
    sub_1DCD68D40((uint64_t)v28, v37);
  }
  uint64_t v46 = v8;
  *(void *)&v115[0] = *(void *)(v29 + *(int *)(v8 + 28));
  swift_bridgeObjectRetain();
  sub_1DCDD51EC(v36, (uint64_t *)v115, (uint64_t)&v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v125;
  uint64_t v48 = v101;
  uint64_t v49 = (uint64_t)v93;
  if (!(void)v125)
  {
    sub_1DCD5D8A8((uint64_t)v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    swift_bridgeObjectRelease();
    return sub_1DCD32C3C((uint64_t)v131, v99);
  }
  uint64_t v50 = *((void *)&v124 + 1);
  if (*(unsigned char *)(v29 + 8) != 1)
  {
    int v88 = DWORD2(v126);
    long long v89 = (unsigned char *)v126;
    uint64_t v90 = (unsigned char *)*((void *)&v124 + 1);
    uint64_t v66 = v46;
    uint64_t v92 = (unsigned char *)*((void *)&v125 + 1);
    uint64_t v95 = (long long *)v125;
    sub_1DCD5D8A8((uint64_t)v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    uint64_t v67 = (uint64_t)v91;
    sub_1DCDB40EC((uint64_t)v91);
    sub_1DCFD048C(v29, v49, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
    uint64_t v68 = v94;
    sub_1DCFD048C(v48, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v69 = sub_1DD048048();
    os_log_type_t v70 = sub_1DD048848();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      *(void *)&v115[0] = v101;
      *(_DWORD *)uint64_t v71 = 136315394;
      uint64_t v72 = sub_1DCD9C35C(*(unsigned char *)(v49 + *(int *)(v66 + 20)));
      *(void *)&long long v122 = sub_1DCED7FA0(v72, v73, (uint64_t *)v115);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCFD04F4(v49, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
      *(_WORD *)(v71 + 12) = 2080;
      id v93 = v32;
      long long v74 = v68[1];
      long long v122 = *v68;
      long long v123 = v74;
      uint64_t v75 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v122 = sub_1DCED7FA0(v75, v76, (uint64_t *)v115);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCFD04F4((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v69, v70, "Assign %s to region: %s", (uint8_t *)v71, 0x16u);
      uint64_t v77 = v101;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v77, -1, -1);
      MEMORY[0x1E01B07E0](v71, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v91, v100);
    }
    else
    {
      sub_1DCFD04F4(v49, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
      sub_1DCFD04F4((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v67, v100);
    }
    swift_bridgeObjectRelease();
    char v79 = *((unsigned char *)v98 + *(int *)(v66 + 20));
    LOBYTE(v115[0]) = v79;
    *(_OWORD *)((char *)v115 + 8) = 0u;
    *(_OWORD *)((char *)&v115[1] + 8) = 0u;
    BYTE8(v115[2]) = 0;
    long long v116 = 0u;
    long long v117 = 0u;
    *(void *)&long long v118 = v90;
    *((void *)&v118 + 1) = v95;
    *(void *)&long long v119 = v92;
    *((void *)&v119 + 1) = v89;
    LODWORD(v120) = 0;
    DWORD1(v120) = v88;
    *((void *)&v120 + 1) = v97;
    LOWORD(v121[0]) = 0;
    *(void *)((char *)&v121[1] + 5) = 0;
    *((void *)&v121[0] + 1) = 0;
    *(void *)&v121[1] = 0;
    sub_1DCD32C3C((uint64_t)v131, (uint64_t)&v122);
    if (sub_1DCD32CA4((uint64_t)&v122) == 1) {
      goto LABEL_21;
    }
    uint64_t v82 = sub_1DCD9C35C(v122);
    uint64_t v84 = v83;
    if (v82 == sub_1DCD9C35C(v79) && v84 == v85)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v86 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v86 & 1) == 0)
      {
        sub_1DCD5D8A8((uint64_t)v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
LABEL_21:
        long long v110 = v119;
        long long v111 = v120;
        v112[0] = v121[0];
        *(_OWORD *)((char *)v112 + 13) = *(_OWORD *)((char *)v121 + 13);
        long long v106 = v115[2];
        long long v107 = v116;
        long long v108 = v117;
        long long v109 = v118;
        long long v80 = v115[0];
        long long v81 = v115[1];
LABEL_27:
        long long v104 = v80;
        long long v105 = v81;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v104);
        sub_1DCD32C3C((uint64_t)&v104, (uint64_t)v113);
        return sub_1DCD32C3C((uint64_t)v113, v99);
      }
    }
    v113[6] = v128;
    v113[7] = v129;
    v114[0] = v130[0];
    *(_OWORD *)((char *)v114 + 13) = *(_OWORD *)((char *)v130 + 13);
    _OWORD v113[2] = v124;
    v113[3] = v125;
    v113[4] = v126;
    v113[5] = v127;
    v113[0] = v122;
    v113[1] = v123;
    long long v110 = v119;
    long long v111 = v120;
    v112[0] = v121[0];
    *(_OWORD *)((char *)v112 + 13) = *(_OWORD *)((char *)v121 + 13);
    long long v106 = v115[2];
    long long v107 = v116;
    long long v108 = v117;
    long long v109 = v118;
    long long v104 = v115[0];
    long long v105 = v115[1];
    sub_1DCF22BB0((uint64_t)v113, &v104, (uint64_t)v102);
    sub_1DCD5D8A8((uint64_t)v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    sub_1DCD32DD4((uint64_t)v115);
    long long v110 = v102[6];
    long long v111 = v102[7];
    v112[0] = v103[0];
    *(_OWORD *)((char *)v112 + 13) = *(_OWORD *)((char *)v103 + 13);
    long long v106 = v102[2];
    long long v107 = v102[3];
    long long v108 = v102[4];
    long long v109 = v102[5];
    long long v80 = v102[0];
    long long v81 = v102[1];
    goto LABEL_27;
  }
  uint64_t v97 = v122;
  id v93 = (unsigned char *)v46;
  int v94 = (long long *)*((void *)&v122 + 1);
  long long v51 = v123;
  uint64_t v52 = v124;
  swift_bridgeObjectRelease();
  sub_1DCD32F20(v97, (uint64_t)v94, v51, *((uint64_t *)&v51 + 1), v52, v50, v47);
  uint64_t v53 = (uint64_t)v90;
  sub_1DCDB40EC((uint64_t)v90);
  uint64_t v54 = v29;
  uint64_t v55 = (uint64_t)v89;
  sub_1DCFD048C(v54, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
  unint64_t v56 = v95;
  sub_1DCFD048C(v101, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  unint64_t v57 = sub_1DD048048();
  os_log_type_t v58 = sub_1DD048848();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    *(void *)&v115[0] = v60;
    *(_DWORD *)uint64_t v59 = 136315394;
    uint64_t v61 = sub_1DCD9C35C(*(unsigned char *)(v55 + *((int *)v93 + 5)));
    *(void *)&long long v122 = sub_1DCED7FA0(v61, v62, (uint64_t *)v115);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCFD04F4(v55, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
    *(_WORD *)(v59 + 12) = 2080;
    long long v63 = v56[1];
    long long v122 = *v56;
    long long v123 = v63;
    uint64_t v64 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v122 = sub_1DCED7FA0(v64, v65, (uint64_t *)v115);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCFD04F4((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1DCCF9000, v57, v58, "Reject %s for region: %s", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v60, -1, -1);
    MEMORY[0x1E01B07E0](v59, -1, -1);
  }
  else
  {
    sub_1DCFD04F4(v55, (uint64_t (*)(void))type metadata accessor for FusionDomainAssignmentRule);
    sub_1DCFD04F4((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }

  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v53, v100);
  uint64_t v78 = v99;
  sub_1DCD5DA7C((uint64_t)&v122);
  return sub_1DCD32C3C((uint64_t)&v122, v78);
}

uint64_t sub_1DCFD048C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFD04F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCFD0554(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04980);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFD2190();
  sub_1DD049138();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EE0);
  sub_1DCFD21E4(&qword_1EAB04988, &qword_1EAB04990);
  sub_1DD048F18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DCFD06D0()
{
  return 0x614D6E69616D6F64;
}

uint64_t sub_1DCFD06EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x614D6E69616D6F64 && a2 == 0xE900000000000070)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1DCFD0790(uint64_t a1)
{
  unint64_t v2 = sub_1DCFD2190();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFD07CC(uint64_t a1)
{
  unint64_t v2 = sub_1DCFD2190();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DCFD0808@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DCFD1FEC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCFD0834(void *a1)
{
  return sub_1DCFD0554(a1, *v1);
}

uint64_t sub_1DCFD0850(char *a1, char *a2)
{
  return sub_1DCFB2B00(*a1, *a2);
}

uint64_t sub_1DCFD085C()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD08D8()
{
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFD0940()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD09B8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1DD048D38();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1DCFD0A18(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7463656A626FLL;
  if (*v1) {
    uint64_t v2 = 0x6567616D69;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1DCFD0A50()
{
  return sub_1DD048688();
}

uint64_t sub_1DCFD0AB0()
{
  return sub_1DD048678();
}

void sub_1DCFD0B00(void *a1@<X8>)
{
  *a1 = &unk_1F38346A8;
}

uint64_t sub_1DCFD0B10(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD046478();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD046358();
  swift_allocObject();
  sub_1DD046348();
  uint64_t v14 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v14 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v24 = v6;
  if (v14)
  {
    uint64_t v23 = v2;
    sub_1DD0463C8();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1DD046488();
    unint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1DCFD0FC8();
    sub_1DD046338();
    unint64_t v22 = sub_1DCFD1A48(v25);
    sub_1DCD21954(v15, v17);
    uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DCDB40EC((uint64_t)v9);
    uint64_t v18 = sub_1DD048048();
    os_log_type_t v19 = sub_1DD048858();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1DCCF9000, v18, v19, "Error loading glyph config file", v20, 2u);
      MEMORY[0x1E01B07E0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    unint64_t v22 = sub_1DCDBA4E8(MEMORY[0x1E4FBC860]);
  }
  swift_release();
  *(void *)(v3 + 16) = v22;
  return v3;
}

uint64_t type metadata accessor for VisualDomainGlyphManager()
{
  return self;
}

ValueMetadata *type metadata accessor for VisualDomainGlyphConfig()
{
  return &type metadata for VisualDomainGlyphConfig;
}

uint64_t sub_1DCFD0E74(uint64_t a1, uint64_t a2)
{
  type metadata accessor for VisualIntelligenceService(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v6 = sub_1DD046328();
  uint64_t v8 = v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD04EF60;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1DCD52754();
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v8;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = a1;
  *(void *)(v9 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1DD048438();
}

unint64_t sub_1DCFD0FC8()
{
  unint64_t result = qword_1EBE84AF0;
  if (!qword_1EBE84AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AF0);
  }
  return result;
}

uint64_t sub_1DCFD101C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  uint64_t v73 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v66 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (char *)&v64 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (uint64_t)&v64 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v65 = (char *)&v64 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = 0;
  uint64_t v71 = (char *)&v64 - v15;
  uint64_t v16 = 0;
  unint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v76 = a1;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v20 = a1 + 64;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  unint64_t v74 = 0;
  uint64_t v75 = (unint64_t)(v22 + 63) >> 6;
  int v69 = 2;
  while (v24)
  {
    unint64_t v25 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v26 = v25 | (v18 << 6);
LABEL_20:
    uint64_t v30 = 16 * v26;
    int v31 = (uint64_t *)(*(void *)(v76 + 48) + v30);
    uint64_t v32 = *v31;
    unint64_t v33 = v31[1];
    uint64_t v34 = (uint64_t *)(*(void *)(v76 + 56) + v30);
    uint64_t v2 = *v34;
    unint64_t v3 = v34[1];
    BOOL v35 = *v31 == 1701667182 && v33 == 0xE400000000000000;
    if (v35 || (sub_1DD048FA8() & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v39 = (uint64_t)v71;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = v2;
      unint64_t v17 = v3;
    }
    else
    {
      BOOL v36 = v32 == 0x50746C7561666564 && v33 == 0xEF6E6F697469736FLL;
      if (v36 || (sub_1DD048FA8() & 1) != 0)
      {
        if (v69 != 2)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = (uint64_t)v65;
LABEL_48:
          sub_1DCDB40EC(v39);
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1DD048048();
          os_log_type_t v41 = sub_1DD048858();
          if (os_log_type_enabled(v40, v41))
          {
            id v42 = (uint8_t *)swift_slowAlloc();
            uint64_t v43 = swift_slowAlloc();
            uint64_t v77 = v43;
            *(_DWORD *)id v42 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v79 = sub_1DCED7FA0(v32, v33, &v77);
            sub_1DD048A28();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1DCCF9000, v40, v41, "Duplicate entry for %s.", v42, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v43, -1, -1);
            MEMORY[0x1E01B07E0](v42, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v39, v72);
          sub_1DCFD1D0C();
          swift_allocError();
          *long long v51 = 0;
LABEL_60:
          swift_willThrow();
          return swift_release();
        }
        swift_bridgeObjectRetain_n();
        uint64_t v38 = sub_1DD048D38();
        swift_bridgeObjectRelease();
        if (v38)
        {
          if (v38 != 1) {
            goto LABEL_72;
          }
          int v69 = 1;
        }
        else
        {
          int v69 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v32 == 0x614E6E69616D6F64 && v33 == 0xEA0000000000656DLL)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          LODWORD(v70) = sub_1DD048FA8();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v70 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v18 = v66;
            sub_1DCDB40EC(v66);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v17 = sub_1DD048048();
            os_log_type_t v53 = sub_1DD048858();
            if (os_log_type_enabled(v17, v53))
            {
              uint64_t v55 = swift_slowAlloc();
              uint64_t v75 = swift_slowAlloc();
              uint64_t v77 = v75;
              *(_DWORD *)uint64_t v55 = 136315394;
              swift_bridgeObjectRetain();
              uint64_t v79 = sub_1DCED7FA0(v32, v33, &v77);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v55 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v79 = sub_1DCED7FA0(v2, v3, &v77);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1DCCF9000, v17, v53, "Invalid glyph config: %s: %s", (uint8_t *)v55, 0x16u);
              uint64_t v56 = v75;
              swift_arrayDestroy();
              MEMORY[0x1E01B07E0](v56, -1, -1);
              MEMORY[0x1E01B07E0](v55, -1, -1);

              goto LABEL_68;
            }
LABEL_67:

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
LABEL_68:
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v18, v72);
            sub_1DCFD1D0C();
            swift_allocError();
            char v58 = 2;
LABEL_69:
            *unint64_t v57 = v58;
            goto LABEL_60;
          }
        }
        if (v74)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = (uint64_t)v67;
          goto LABEL_48;
        }
        swift_bridgeObjectRelease();
        uint64_t v70 = v2;
        unint64_t v74 = v3;
      }
    }
  }
  uint64_t v27 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v27 >= v75) {
    goto LABEL_50;
  }
  unint64_t v28 = *(void *)(v20 + 8 * v27);
  ++v18;
  if (v28) {
    goto LABEL_19;
  }
  uint64_t v18 = v27 + 1;
  if (v27 + 1 >= v75) {
    goto LABEL_50;
  }
  unint64_t v28 = *(void *)(v20 + 8 * v18);
  if (v28) {
    goto LABEL_19;
  }
  uint64_t v18 = v27 + 2;
  if (v27 + 2 >= v75) {
    goto LABEL_50;
  }
  unint64_t v28 = *(void *)(v20 + 8 * v18);
  if (v28)
  {
LABEL_19:
    unint64_t v24 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v18 << 6);
    goto LABEL_20;
  }
  uint64_t v29 = v27 + 3;
  if (v29 < v75)
  {
    unint64_t v28 = *(void *)(v20 + 8 * v29);
    if (!v28)
    {
      while (1)
      {
        uint64_t v18 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          break;
        }
        if (v18 >= v75) {
          goto LABEL_50;
        }
        unint64_t v28 = *(void *)(v20 + 8 * v18);
        ++v29;
        if (v28) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_72:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v59 = v64;
      sub_1DCDB40EC(v64);
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_1DD048048();
      os_log_type_t v61 = sub_1DD048858();
      if (os_log_type_enabled(v60, v61))
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        uint64_t v77 = v63;
        *(_DWORD *)unint64_t v62 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_1DCED7FA0(v2, v3, &v77);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DCCF9000, v60, v61, "Failed to parse default position %s.", v62, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v63, -1, -1);
        MEMORY[0x1E01B07E0](v62, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v64, v72);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v59, v72);
      }
      sub_1DCFD1D0C();
      swift_allocError();
      char v58 = 1;
      goto LABEL_69;
    }
    uint64_t v18 = v29;
    goto LABEL_19;
  }
LABEL_50:
  swift_release();
  if (v17) {
    unint64_t v44 = (unint64_t)v17;
  }
  else {
    unint64_t v44 = 0xE000000000000000;
  }
  if (v74)
  {
    if (v17) {
      uint64_t v45 = v16;
    }
    else {
      uint64_t v45 = 0;
    }
    uint64_t v77 = v70;
    unint64_t v78 = v74;
    swift_bridgeObjectRetain();
    sub_1DD048548();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v47 = v77;
    unint64_t v48 = v78;
    char v49 = v69 & 1;
    uint64_t v50 = v68;
    *uint64_t v68 = v45;
    v50[1] = v44;
    v50[2] = v47;
    _OWORD v50[3] = v48;
    *((unsigned char *)v50 + 32) = v49;
  }
  else
  {
    sub_1DCFD1D0C();
    swift_allocError();
    *uint64_t v52 = 3;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCFD1A48(uint64_t a1)
{
  uint64_t v2 = v1;
  char v4 = (void *)sub_1DCDBA4E8(MEMORY[0x1E4FBC860]);
  int64_t v5 = 0;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
  {
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1DCD9CB54();
    if (v14 == 26)
    {
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v18 = v14;
      sub_1DCFD101C(v13, (uint64_t *)v33);
      if (v2)
      {
        swift_bridgeObjectRelease();
LABEL_35:
        swift_release();
        return (uint64_t)v4;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v35 = v4;
      unint64_t v21 = sub_1DCEAD454(v18);
      uint64_t v22 = v4[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_38;
      }
      if (v4[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v30 = v20;
          sub_1DCE8B7AC();
          char v20 = v30;
        }
      }
      else
      {
        char v32 = v20;
        sub_1DCE837B8(v24, isUniquelyReferenced_nonNull_native);
        uint64_t v25 = sub_1DCEAD454(v18);
        int v27 = v26 & 1;
        char v20 = v32;
        if ((v32 & 1) != v27) {
          goto LABEL_39;
        }
        unint64_t v21 = v25;
      }
      uint64_t v2 = 0;
      char v4 = v35;
      if (v20)
      {
        uint64_t v28 = v35[7] + 40 * v21;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v29 = v33[1];
        *(_OWORD *)uint64_t v28 = v33[0];
        *(_OWORD *)(v28 + 16) = v29;
        *(unsigned char *)(v28 + 32) = v34;
      }
      else
      {
        sub_1DCE87E34(v21, v18, (uint64_t)v33, v35);
      }
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_4;
      }
    }
LABEL_7:
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v5 >= v10) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v5 + 1;
  if (v5 + 1 >= v10) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v5 + 2;
  if (v5 + 2 >= v10) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v5 + 3;
  if (v5 + 3 >= v10) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v5 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

unint64_t sub_1DCFD1D0C()
{
  unint64_t result = qword_1EAB04970;
  if (!qword_1EAB04970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04970);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GlyphConfig.ConfigError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFD1E2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlyphConfig.ConfigError()
{
  return &type metadata for GlyphConfig.ConfigError;
}

ValueMetadata *type metadata accessor for WeakGlyphConfig()
{
  return &type metadata for WeakGlyphConfig;
}

uint64_t initializeWithCopy for GlyphConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GlyphConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for GlyphConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for GlyphConfig()
{
  return &type metadata for GlyphConfig;
}

unint64_t sub_1DCFD1F98()
{
  unint64_t result = qword_1EAB04978;
  if (!qword_1EAB04978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04978);
  }
  return result;
}

void *sub_1DCFD1FEC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFD2190();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EE0);
    sub_1DCFD21E4(&qword_1EBE84EE8, &qword_1EBE84ED8);
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1DCFD2190()
{
  unint64_t result = qword_1EBE84AD8;
  if (!qword_1EBE84AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AD8);
  }
  return result;
}

uint64_t sub_1DCFD21E4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84EE0);
    sub_1DCFD2268(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCFD2268(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84ED0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeakGlyphConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCFD2368);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeakGlyphConfig.CodingKeys()
{
  return &type metadata for WeakGlyphConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for GlyphConfig.Position(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFD246CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GlyphConfig.Position()
{
  return &type metadata for GlyphConfig.Position;
}

unint64_t sub_1DCFD24A8()
{
  unint64_t result = qword_1EAB04998;
  if (!qword_1EAB04998)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB049A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04998);
  }
  return result;
}

unint64_t sub_1DCFD2508()
{
  unint64_t result = qword_1EAB049A8;
  if (!qword_1EAB049A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049A8);
  }
  return result;
}

unint64_t sub_1DCFD2560()
{
  unint64_t result = qword_1EAB049B0;
  if (!qword_1EAB049B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049B0);
  }
  return result;
}

unint64_t sub_1DCFD25B8()
{
  unint64_t result = qword_1EBE84AE8;
  if (!qword_1EBE84AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AE8);
  }
  return result;
}

unint64_t sub_1DCFD2610()
{
  unint64_t result = qword_1EBE84AE0;
  if (!qword_1EBE84AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AE0);
  }
  return result;
}

unint64_t sub_1DCFD2664()
{
  unint64_t result = qword_1EAB049B8;
  if (!qword_1EAB049B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049B8);
  }
  return result;
}

uint64_t sub_1DCFD26B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = 0;
  unint64_t v6 = *(void *)(result + 16);
  uint64_t v7 = result + 72;
  uint64_t v21 = result + 72;
  uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_2:
  if (v5 <= v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = v5;
  }
  unint64_t v9 = v8 + 1;
  int64_t v10 = (_OWORD *)(v7 + 56 * v5);
  while (1)
  {
    if (v6 == v5) {
      return v22;
    }
    uint64_t v11 = v5++;
    if (v9 == v5) {
      break;
    }
    uint64_t v12 = *((void *)v10 - 5);
    uint64_t v13 = *((void *)v10 - 4);
    int v14 = *((_DWORD *)v10 - 6);
    long long v23 = *v10;
    long long v24 = *(v10 - 1);
    if (v12 == a2 && v13 == a3)
    {
      uint64_t v12 = a2;
      uint64_t v13 = a3;
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v16 = v22;
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = sub_1DCFC5920(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v16 = v22;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      unint64_t v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        unint64_t result = sub_1DCFC5920(v17 > 1, v18 + 1, 1);
        unint64_t v19 = v18 + 1;
        uint64_t v16 = v22;
      }
      unint64_t v5 = v11 + 1;
      *(void *)(v16 + 16) = v19;
      uint64_t v22 = v16;
      uint64_t v20 = v16 + 56 * v18;
      *(void *)(v20 + 32) = v12;
      *(void *)(v20 + 40) = v13;
      *(_DWORD *)(v20 + 48) = v14;
      *(_OWORD *)(v20 + 56) = v24;
      *(_OWORD *)(v20 + 72) = v23;
      uint64_t v7 = v21;
      goto LABEL_2;
    }
    int64_t v10 = (_OWORD *)((char *)v10 + 56);
    unint64_t result = sub_1DD048FA8();
    if (result) {
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFD2850(uint64_t a1)
{
  uint64_t v83 = sub_1DD048068();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v84 = (uint64_t)v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DD046B38();
  MEMORY[0x1F4188790](v3 - 8);
  v81[1] = (char *)v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1DD046D68();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  int v88 = (char *)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD0468A8();
  MEMORY[0x1F4188790](v6 - 8);
  v81[0] = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1DD046F48();
  MEMORY[0x1F4188790](v8 - 8);
  char v86 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1DD047038();
  uint64_t v97 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v85 = (char *)v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1DD0472D8();
  uint64_t v102 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  int v94 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD0466D8();
  uint64_t v99 = (void (*)(void, void))v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1DD047488();
  uint64_t v93 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  unint64_t v87 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v98 = (char *)v81 - v18;
  sub_1DD047478();
  uint64_t v101 = a1;
  sub_1DD047408();
  sub_1DD046628();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  uint64_t v20 = (void (*)(uint64_t *, void))sub_1DD0473F8();
  sub_1DD046638();
  v20(&v108, 0);
  sub_1DD047408();
  sub_1DD046668();
  uint64_t v21 = v99;
  v19(v15, (uint64_t)v99);
  uint64_t v22 = (void (*)(uint64_t *, void))sub_1DD0473F8();
  sub_1DD046678();
  v22(&v108, 0);
  sub_1DD047408();
  sub_1DD046688();
  v19(v15, (uint64_t)v21);
  long long v23 = (void (*)(uint64_t *, void))sub_1DD0473F8();
  sub_1DD046698();
  v23(&v108, 0);
  sub_1DD047408();
  sub_1DD046648();
  v19(v15, (uint64_t)v21);
  long long v24 = (void (*)(uint64_t *, void))sub_1DD0473F8();
  sub_1DD046658();
  v24(&v108, 0);
  sub_1DD047408();
  sub_1DD0466A8();
  v19(v15, (uint64_t)v21);
  uint64_t v25 = v85;
  char v26 = (void (*)(uint64_t *, void))sub_1DD0473F8();
  sub_1DD0466B8();
  v26(&v108, 0);
  int v27 = v94;
  sub_1DD047438();
  sub_1DD0472B8();
  uint64_t v28 = *(void (**)(void, void))(v102 + 8);
  v102 += 8;
  uint64_t v99 = v28;
  uint64_t v29 = v100;
  v28(v27, v100);
  sub_1DD047008();
  char v30 = *(void (**)(char *, uint64_t))(v97 + 8);
  v97 += 8;
  uint64_t v95 = v30;
  uint64_t v31 = v96;
  v30(v25, v96);
  char v32 = (void (*)(uint64_t *, void))sub_1DD047428();
  unint64_t v33 = (void (*)(uint64_t *, void))sub_1DD0472A8();
  sub_1DD047018();
  v33(&v107, 0);
  v32(&v108, 0);
  char v34 = v94;
  sub_1DD047438();
  sub_1DD0472B8();
  v99(v34, v29);
  sub_1DD046FE8();
  v95(v25, v31);
  uint64_t v35 = sub_1DD047428();
  BOOL v36 = (void (*)(uint64_t *, void))sub_1DD0472A8();
  sub_1DD046FF8();
  v36(&v107, 0);
  ((void (*)(uint64_t *, void))v35)(&v108, 0);
  sub_1DD047438();
  sub_1DD0472B8();
  v99(v34, v100);
  sub_1DD046F58();
  uint64_t v37 = v96;
  uint64_t v38 = v95;
  v95(v25, v96);
  char v86 = (char *)sub_1DD047428();
  uint64_t v39 = (void (*)(uint64_t *, void))sub_1DD0472A8();
  sub_1DD046F68();
  v39(&v107, 0);
  ((void (*)(uint64_t *, void))v86)(&v108, 0);
  sub_1DD047438();
  sub_1DD0472B8();
  v99(v34, v100);
  LOBYTE(v35) = sub_1DD046F38();
  v38(v25, v37);
  if (v35)
  {
    sub_1DD047438();
    sub_1DD0472B8();
    v99(v34, v100);
    sub_1DD046F78();
    v95(v25, v96);
    uint64_t v40 = (void (*)(uint64_t *, void))sub_1DD047428();
    os_log_type_t v41 = (void (*)(uint64_t *, void))sub_1DD0472A8();
    sub_1DD046F88();
    v41(&v107, 0);
    v40(&v108, 0);
  }
  sub_1DD047438();
  sub_1DD0472B8();
  id v42 = (void (*)(char *, uint64_t))v99;
  uint64_t v43 = v100;
  v99(v34, v100);
  sub_1DD046C98();
  v95(v25, v96);
  unint64_t v44 = (void (*)(uint64_t *, void))sub_1DD047428();
  uint64_t v45 = (void (*)(uint64_t *, void))sub_1DD0472A8();
  sub_1DD046B28();
  v45(&v107, 0);
  v44(&v108, 0);
  sub_1DD047438();
  uint64_t v46 = v88;
  sub_1DD047288();
  v42(v34, v43);
  sub_1DD046C98();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v89 + 8);
  uint64_t v48 = v90;
  v47(v46, v90);
  char v49 = (void (*)(uint64_t *, void))sub_1DD047428();
  uint64_t v50 = (void (*)(uint64_t *, void))sub_1DD047278();
  sub_1DD046B28();
  v50(&v107, 0);
  v49(&v108, 0);
  sub_1DD047438();
  sub_1DD047288();
  v99(v34, v100);
  char v51 = sub_1DD046D18();
  v47(v46, v48);
  if (v51)
  {
    sub_1DD047438();
    sub_1DD047288();
    v99(v34, v100);
    sub_1DD046D48();
    v47(v46, v48);
    uint64_t v52 = (void (*)(uint64_t *, void))sub_1DD047428();
    os_log_type_t v53 = (void (*)(uint64_t *, void))sub_1DD047278();
    sub_1DD046D58();
    v53(&v107, 0);
    v52(&v108, 0);
  }
  uint64_t v54 = v93;
  uint64_t v55 = v87;
  uint64_t v56 = v98;
  uint64_t v57 = v92;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v87, v98, v92);
  sub_1DCFD41B0(&qword_1EAB049D0, MEMORY[0x1E4F89750]);
  char v58 = v91;
  uint64_t v59 = sub_1DD047E28();
  uint64_t v61 = v59;
  if (v58)
  {
    uint64_t v101 = v60;
    uint64_t v102 = v59;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v54 + 8);
    uint64_t v63 = v54 + 8;
    unint64_t v62 = v64;
    v64(v55, v57);
    uint64_t v65 = v84;
    sub_1DCDB40EC(v84);
    id v66 = v58;
    id v67 = v58;
    uint64_t v68 = sub_1DD048048();
    os_log_type_t v69 = sub_1DD048858();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v93 = v63;
      uint64_t v72 = v71;
      uint64_t v108 = v71;
      *(_DWORD *)uint64_t v70 = 136315138;
      swift_getErrorValue();
      uint64_t v73 = sub_1DCDC4040(v103, v104);
      uint64_t v107 = sub_1DCED7FA0(v73, v74, &v108);
      sub_1DD048A28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DCCF9000, v68, v69, "UserFeedbackOnDevicePayload.serializedData(): userFeedbackSearchRequest.serializedData, %s", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v72, -1, -1);
      uint64_t v75 = v70;
      uint64_t v57 = v92;
      MEMORY[0x1E01B07E0](v75, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v65, v83);
    }
    uint64_t v108 = 0;
    unint64_t v109 = 0xE000000000000000;
    sub_1DD048B98();
    sub_1DD048548();
    swift_getErrorValue();
    sub_1DCDC4040(v105, v106);
    sub_1DD048548();
    swift_bridgeObjectRelease();
    uint64_t v77 = v108;
    unint64_t v78 = v109;
    sub_1DCFD415C();
    swift_allocError();
    *uint64_t v79 = v77;
    v79[1] = v78;
    swift_willThrow();

    v62(v98, v57);
    return v102;
  }
  else
  {
    uint64_t v76 = *(void (**)(char *, uint64_t))(v54 + 8);
    v76(v55, v57);
    v76(v56, v57);
  }
  return v61;
}

uint64_t sub_1DCFD38A8()
{
  uint64_t v1 = sub_1DD048068();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD0477D8();
  sub_1DCFD41B0(&qword_1EAB049C0, MEMORY[0x1E4F89A60]);
  uint64_t v6 = sub_1DD047E28();
  if (v0)
  {
    uint64_t v21 = v1;
    uint64_t v22 = v5;
    sub_1DCDB40EC((uint64_t)v4);
    id v7 = v0;
    id v8 = v0;
    uint64_t v9 = sub_1DD048048();
    os_log_type_t v10 = sub_1DD048858();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v28 = v12;
      uint64_t v20 = v6;
      *(_DWORD *)uint64_t v11 = 136315138;
      unint64_t v19 = v11 + 4;
      swift_getErrorValue();
      uint64_t v13 = sub_1DCDC4040(v24, v25);
      uint64_t v23 = sub_1DCED7FA0(v13, v14, &v28);
      uint64_t v6 = v20;
      sub_1DD048A28();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1DCCF9000, v9, v10, "UserFeedbackOnDevicePayload.serializedData(): userFeedbackIntermediateResults.serializedData, %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v12, -1, -1);
      MEMORY[0x1E01B07E0](v11, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_1DD048B98();
    sub_1DD048548();
    swift_getErrorValue();
    sub_1DCDC4040(v26, v27);
    sub_1DD048548();
    swift_bridgeObjectRelease();
    uint64_t v15 = v28;
    unint64_t v16 = v29;
    sub_1DCFD415C();
    swift_allocError();
    *uint64_t v17 = v15;
    v17[1] = v16;
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1DCFD3BE8()
{
  uint64_t v0 = (void *)sub_1DD0483D8();
  uint64_t v1 = MGCopyAnswer();

  if (v1 && swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCFD3C80()
{
  uint64_t v0 = (void *)sub_1DD0483D8();
  uint64_t v1 = MGCopyAnswer();

  if (v1 && swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCFD3CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = sub_1DCFD2850(a2);
  if (!v3)
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    uint64_t v16 = sub_1DCFD38A8();
    unint64_t v18 = v17;
    *((_DWORD *)v9 + 8) = 0;
    sub_1DD047BE8();
    *(void *)uint64_t v9 = v14;
    *((void *)v9 + 1) = v15;
    *((void *)v9 + 2) = v16;
    *((void *)v9 + 3) = v18;
    uint64_t v19 = sub_1DD048408();
    if (v10 == 1)
    {
      sub_1DCD33F64(v14, v15);
      uint64_t v21 = v16;
      unint64_t v22 = v18;
      unint64_t v23 = v18;
    }
    else
    {
      uint64_t v24 = v20;
      unint64_t v38 = v18;
      uint64_t v41 = v16;
      if (v11)
      {
        uint64_t v25 = v19;
        sub_1DCD33F64(v14, v15);
        sub_1DCD33F64(v41, v38);
        uint64_t v26 = swift_bridgeObjectRetain();
        uint64_t v27 = sub_1DCFD26B8(v26, v25, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v28 = *(void *)(v27 + 16);
        if (v28)
        {
          float v29 = *(float *)(v27 + 48);
          uint64_t v30 = v28 - 1;
          if (v28 == 1)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v32 = (float *)(v27 + 104);
            do
            {
              float v33 = *v32;
              if (v29 < *v32)
              {
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                float v29 = v33;
              }
              v32 += 14;
              --v30;
            }
            while (v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          *((float *)v9 + 8) = v29;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v31 = v41;
        unint64_t v22 = v38;
        goto LABEL_18;
      }
      sub_1DCD33F64(v14, v15);
      uint64_t v16 = v41;
      uint64_t v21 = v41;
      unint64_t v22 = v38;
      unint64_t v23 = v38;
    }
    sub_1DCD33F64(v21, v23);
    uint64_t v31 = v16;
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v39 = sub_1DCFD3C80();
    uint64_t v40 = v34;
    sub_1DD048548();
    sub_1DCFD3C80();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DCFD3BE8();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DCFD3C80();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DCFD3C80();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    uint64_t v35 = v40;
    *((void *)v9 + 5) = v39;
    *((void *)v9 + 6) = v35;
    sub_1DCFD41B0(&qword_1EAB02850, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
    a3 = sub_1DD047E28();
    sub_1DCD21954(v14, v15);
    sub_1DCD21954(v31, v22);
    sub_1DCFD4100((uint64_t)v9);
  }
  return a3;
}

uint64_t sub_1DCFD4100(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DCFD415C()
{
  unint64_t result = qword_1EAB049C8;
  if (!qword_1EAB049C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049C8);
  }
  return result;
}

uint64_t sub_1DCFD41B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SerializationError()
{
  return &type metadata for SerializationError;
}

uint64_t sub_1DCFD4208()
{
  swift_bridgeObjectRelease();
  sub_1DCE51280(v0 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCFD4274()
{
  return type metadata accessor for DomainModelRegistry();
}

uint64_t type metadata accessor for DomainModelRegistry()
{
  uint64_t result = qword_1EBE85418;
  if (!qword_1EBE85418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCFD42C8()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

NSObject *sub_1DCFD4368@<X0>(NSObject **a1@<X8>)
{
  uint64_t result = sub_1DCFD6568();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1DCFD4394@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCFD43AC(a1);
}

uint64_t sub_1DCFD43AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v47 = sub_1DD048068();
  uint64_t v42 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v41 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = sub_1DD047C38();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD046478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DCFD9704(16, 0, 25200, 0xE200000000000000);
  unint64_t v17 = v16;
  sub_1DD0463C8();
  uint64_t v18 = sub_1DD046488();
  if (v1)
  {
    uint64_t v20 = v15;

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v21 = (uint64_t)v41;
    sub_1DCDB40EC((uint64_t)v41);
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048858();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(void *)&v43[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1DCED7FA0(v20, v17, (uint64_t *)v43);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Failed to load storefront geofence config at path %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v25, -1, -1);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v21, v47);
    sub_1DCFD6434();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    unint64_t v26 = v19;
    unint64_t v38 = v8;
    uint64_t v41 = v5;
    uint64_t v27 = v18;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
    uint64_t v45 = v27;
    unint64_t v46 = v26;
    uint64_t v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1DCD33F64(v27, v26);
    sub_1DD047C28();
    sub_1DCFD6B78(&qword_1EBE86488, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
    sub_1DD047E38();
    unint64_t v28 = v26;
    uint64_t v40 = v27;
    uint64_t v30 = (uint64_t)v38;
    sub_1DCDB40EC((uint64_t)v38);
    uint64_t v31 = (uint64_t)v41;
    sub_1DCDB4300((uint64_t)v41);
    char v32 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    uint64_t v33 = v47;
    v32(v30, v47);
    uint64_t v34 = sub_1DD048048();
    os_log_type_t v35 = sub_1DD048848();
    if (os_log_type_enabled(v34, v35))
    {
      BOOL v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v36 = 0;
      _os_log_impl(&dword_1DCCF9000, v34, v35, "Loaded countries", v36, 2u);
      MEMORY[0x1E01B07E0](v36, -1, -1);

      sub_1DCD21954(v40, v28);
    }
    else
    {
      sub_1DCD21954(v40, v28);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v32)(v31, v33);
  }
}

uint64_t *sub_1DCFD4914@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  int64_t v168 = a2;
  uint64_t v161 = a4;
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v175 = ((char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = type metadata accessor for GeoFenceDomainAssignmentRule();
  MEMORY[0x1F4188790](v166);
  unint64_t v172 = (char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_1DD048468();
  uint64_t v163 = *(void *)(v170 - 8);
  MEMORY[0x1F4188790](v170);
  int v169 = (char *)&v153 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD048068();
  int64_t v176 = *(NSObject **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v165 = (char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v153 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v153 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v153 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v153 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v174 = (uint64_t)&v153 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v162 = (void (**)(char *, uint64_t))((char *)&v153 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v157 = (uint64_t)&v153 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v156 = (uint64_t)&v153 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v155 = (uint64_t)&v153 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v171 = (char *)&v153 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v177 = (char *)&v153 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  MEMORY[0x1F4188790](v39 - 8);
  uint64_t v41 = (char *)&v153 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD32C3C(a1, (uint64_t)v180);
  int v42 = *(unsigned __int8 *)(v4 + 16);
  uint64_t v173 = v11;
  if (v42 == 1)
  {
    id v167 = a3;
    sub_1DCD32C3C((uint64_t)v180, (uint64_t)v179);
    if (sub_1DCD32CA4((uint64_t)v179) == 1)
    {
LABEL_3:
      sub_1DCDB40EC((uint64_t)v18);
      sub_1DCDB4300((uint64_t)v15);
      Class isa = (void (*)(char *, uint64_t))v176[1].isa;
      isa(v18, v11);
      uint64_t v44 = sub_1DD048048();
      os_log_type_t v45 = sub_1DD048848();
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v46 = 0;
        _os_log_impl(&dword_1DCCF9000, v44, v45, "Skip GeoFenceDomainAssignmentRule due to no prerequisite domain", v46, 2u);
        MEMORY[0x1E01B07E0](v46, -1, -1);
      }

      isa(v15, v11);
      goto LABEL_84;
    }
    char v47 = v179[0];
    uint64_t v48 = sub_1DCD9C35C(*(unsigned char *)(v4 + *(int *)(v166 + 20)));
    uint64_t v50 = v49;
    if (v48 == sub_1DCD9C35C(v47) && v50 == v51)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v11 = v173;
    }
    else
    {
      char v52 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v173;
      if ((v52 & 1) == 0) {
        goto LABEL_3;
      }
    }
    a3 = v167;
  }
  uint64_t v53 = type metadata accessor for DomainAssignmentSignals(0);
  sub_1DCD2889C((uint64_t)a3 + *(int *)(v53 + 24), (uint64_t)v41, &qword_1EBE84B70);
  uint64_t v54 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v41, 1, v54) == 1)
  {
    sub_1DCD2479C((uint64_t)v41, &qword_1EBE84B70);
LABEL_78:
    if (*(unsigned char *)v4 == 1)
    {
      uint64_t v118 = v174;
      sub_1DCDB40EC(v174);
      long long v119 = v172;
      sub_1DCFD8328(v4, (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for GeoFenceDomainAssignmentRule);
      long long v120 = v175;
      sub_1DCFD8328((uint64_t)v168, (uint64_t)v175, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v121 = sub_1DD048048();
      os_log_type_t v122 = sub_1DD048848();
      if (os_log_type_enabled(v121, v122))
      {
        uint64_t v123 = swift_slowAlloc();
        uint64_t v124 = swift_slowAlloc();
        uint64_t v178 = v124;
        *(_DWORD *)uint64_t v123 = 136315394;
        uint64_t v125 = sub_1DCD9C35C(v119[*(int *)(v166 + 20)]);
        *(void *)&v179[0] = sub_1DCED7FA0(v125, v126, &v178);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCFD8390((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for GeoFenceDomainAssignmentRule);
        *(_WORD *)(v123 + 12) = 2080;
        long long v127 = *(_OWORD *)&v120[2].isa;
        v179[0] = *(_OWORD *)&v120->isa;
        v179[1] = v127;
        uint64_t v128 = NormalizedRect.loggingDescription.getter();
        *(void *)&v179[0] = sub_1DCED7FA0(v128, v129, &v178);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCFD8390((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        _os_log_impl(&dword_1DCCF9000, v121, v122, "Missing location signals: Reject %s for region %s", (uint8_t *)v123, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v124, -1, -1);
        MEMORY[0x1E01B07E0](v123, -1, -1);

        ((void (*)(uint64_t, uint64_t))v176[1].isa)(v118, v173);
      }
      else
      {
        sub_1DCFD8390((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for GeoFenceDomainAssignmentRule);
        sub_1DCFD8390((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

        ((void (*)(uint64_t, uint64_t))v176[1].isa)(v118, v11);
      }
      goto LABEL_95;
    }
    sub_1DCDB40EC((uint64_t)v24);
    sub_1DCDB4300((uint64_t)v21);
    uint64_t v130 = (void (*)(char *, uint64_t))v176[1].isa;
    v130(v24, v11);
    BOOL v131 = sub_1DD048048();
    os_log_type_t v132 = sub_1DD048848();
    if (os_log_type_enabled(v131, v132))
    {
      long long v133 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v133 = 0;
      _os_log_impl(&dword_1DCCF9000, v131, v132, "Missing location signals", v133, 2u);
      MEMORY[0x1E01B07E0](v133, -1, -1);
    }

    v130(v21, v11);
    goto LABEL_84;
  }
  uint64_t v55 = *(void **)&v41[*(int *)(v54 + 24)];
  id v167 = v55;
  sub_1DCFD8390((uint64_t)v41, type metadata accessor for DomainAssignmentSignals.ImageMetadata);
  if (!v55) {
    goto LABEL_78;
  }
  uint64_t v56 = *(void *)(v4 + 8);
  uint64_t v164 = *(void *)(v56 + 16);
  if (v164)
  {
    uint64_t v158 = v4;
    uint64_t v57 = qword_1EBE87190;
    swift_bridgeObjectRetain();
    BOOL v59 = v57 == -1;
    uint64_t v60 = v176;
    if (!v59) {
LABEL_100:
    }
      swift_once();
    uint64_t v61 = 0;
    unint64_t v172 = 0;
    uint64_t v175 = v60 + 2;
    int64_t v176 = v60 + 1;
    uint64_t v162 = (void (**)(char *, uint64_t))(v163 + 8);
    unint64_t v160 = (unint64_t)"coarseCategoryDistribution";
    unint64_t v154 = 0x80000001DD067880;
    *(void *)&long long v58 = 67109120;
    long long v159 = v58;
    unint64_t v62 = v171;
    uint64_t v163 = v56;
    while (1)
    {
      if (__OFADD__(v61, 1))
      {
        __break(1u);
        goto LABEL_100;
      }
      int v63 = *(_DWORD *)(v56 + 4 * v61 + 32);
      uint64_t v174 = v61 + 1;
      if (byte_1EBE87188 != 1) {
        goto LABEL_35;
      }
      id v64 = objc_msgSend(self, sel_mainBundle);
      id v65 = objc_msgSend(v64, sel_bundleIdentifier);

      if (v65)
      {
        uint64_t v66 = sub_1DD048408();
        uint64_t v68 = v67;

        if (v66 == 0xD00000000000002BLL && v68 == v154)
        {
          swift_bridgeObjectRelease();
LABEL_27:
          uint64_t v70 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v70 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_31;
        }
        char v69 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v69) {
          goto LABEL_27;
        }
      }
      uint64_t v70 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v70 = &qword_1EBE871E8;
      }
LABEL_31:
      uint64_t v71 = *(void **)(*v70 + 32);
      swift_retain();
      uint64_t v72 = (void *)sub_1DD0483D8();
      LODWORD(v71) = objc_msgSend(v71, sel_BOOLForKey_, v72);
      swift_release();

      if (v71)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v73 = v11;
        unint64_t v74 = qword_1EAB02B70;
        goto LABEL_38;
      }
LABEL_35:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v73 = v11;
      unint64_t v74 = qword_1EBE871A8;
LABEL_38:
      uint64_t v75 = __swift_project_value_buffer(v73, (uint64_t)v74);
      uint64_t v76 = (void (*)(char *, uint64_t, uint64_t))v175->isa;
      ((void (*)(char *, uint64_t, uint64_t))v175->isa)(v177, v75, v11);
      if ((byte_1EBE87188 & 1) == 0) {
        goto LABEL_50;
      }
      id v77 = objc_msgSend(self, sel_mainBundle);
      id v78 = objc_msgSend(v77, sel_bundleIdentifier);

      if (v78)
      {
        uint64_t v79 = sub_1DD048408();
        uint64_t v81 = v80;

        if (v79 == 0xD00000000000002BLL && v81 == (v160 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_44:
          uint64_t v83 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v83 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_48;
        }
        char v82 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v82) {
          goto LABEL_44;
        }
      }
      uint64_t v83 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v83 = &qword_1EBE871E8;
      }
LABEL_48:
      uint64_t v84 = *(void **)(*v83 + 32);
      swift_retain();
      uint64_t v85 = (void *)sub_1DD0483D8();
      LODWORD(v84) = objc_msgSend(v84, sel_BOOLForKey_, v85);
      swift_release();

      if (v84)
      {
        char v86 = v62;
        uint64_t v87 = (uint64_t)v177;
        goto LABEL_53;
      }
LABEL_50:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v87 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBE871A8);
      char v86 = v62;
LABEL_53:
      v76(v86, v87, v11);
      int v88 = (void (*)(void, void))v176->isa;
      ((void (*)(char *, uint64_t))v176->isa)(v177, v11);
      uint64_t v89 = sub_1DD048048();
      os_log_type_t v90 = sub_1DD048848();
      if (os_log_type_enabled(v89, v90))
      {
        BOOL v91 = v88;
        uint64_t v92 = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = v159;
        *(_DWORD *)(v92 + 4) = v63;
        _os_log_impl(&dword_1DCCF9000, v89, v90, "Check for cell level %d", (uint8_t *)v92, 8u);
        uint64_t v93 = v92;
        int v88 = v91;
        MEMORY[0x1E01B07E0](v93, -1, -1);
      }

      v88(v62, v11);
      uint64_t v94 = sub_1DCDC9C48(v63);
      if (v95)
      {
        swift_bridgeObjectRelease();
        uint64_t v138 = v157;
        sub_1DCDB40EC(v157);
        unint64_t v139 = sub_1DD048048();
        os_log_type_t v140 = sub_1DD048848();
        if (os_log_type_enabled(v139, v140))
        {
          uint64_t v141 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v141 = 0;
          _os_log_impl(&dword_1DCCF9000, v139, v140, "Failed to find s2 cell id for the location. Region any domains.", v141, 2u);
          MEMORY[0x1E01B07E0](v141, -1, -1);
        }

        v88(v138, v11);
        goto LABEL_95;
      }
      uint64_t v96 = v94;
      int64_t v168 = (void (*)(char *, uint64_t))v88;
      *(void *)&v179[0] = v94;
      uint64_t v60 = sub_1DD048F78();
      uint64_t v97 = v169;
      sub_1DD048448();
      uint64_t v98 = sub_1DD048418();
      unint64_t v100 = v99;
      swift_bridgeObjectRelease();
      (*v162)(v97, v170);
      if (v100 >> 60 == 15)
      {
        uint64_t v11 = v173;
        unint64_t v62 = v171;
      }
      else
      {
        uint64_t v101 = v172;
        sub_1DCFE3894();
        unint64_t v172 = v101;
        if (v101)
        {
          sub_1DCD392D4(v98, v100);
          uint64_t v11 = v173;
          unint64_t v62 = v171;
          if (byte_1EBE87188 != 1) {
            goto LABEL_73;
          }
          id v103 = objc_msgSend(self, sel_mainBundle);
          id v104 = objc_msgSend(v103, sel_bundleIdentifier);

          if (v104)
          {
            uint64_t v105 = sub_1DD048408();
            uint64_t v107 = v106;

            if (v105 == 0xD00000000000002BLL && v107 == (v160 | 0x8000000000000000))
            {
              swift_bridgeObjectRelease();
LABEL_66:
              long long v111 = (uint64_t *)&off_1EAB02A48;
              if (qword_1EAB01C28 != -1)
              {
                swift_once();
                long long v111 = (uint64_t *)&off_1EAB02A48;
              }
LABEL_70:
              float v112 = *(void **)(*v111 + 32);
              swift_retain();
              char v113 = (void *)sub_1DD0483D8();
              LODWORD(v112) = objc_msgSend(v112, sel_BOOLForKey_, v113);
              swift_release();

              if (v112)
              {
                long long v114 = qword_1EAB02B70;
                if (qword_1EAB01C80 != -1)
                {
                  swift_once();
                  long long v114 = qword_1EAB02B70;
                }
LABEL_75:
                uint64_t v115 = __swift_project_value_buffer(v11, (uint64_t)v114);
                v76(v165, v115, v11);
                uint64_t v60 = sub_1DD048048();
                os_log_type_t v116 = sub_1DD048848();
                if (os_log_type_enabled(v60, v116))
                {
                  long long v117 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)long long v117 = 0;
                  _os_log_impl(&dword_1DCCF9000, v60, v116, "Failed to check existence of the s2 cell id and consider as no match. Reject any domains.", v117, 2u);
                  MEMORY[0x1E01B07E0](v117, -1, -1);
                }

                v168(v165, v11);
                unint64_t v172 = 0;
                goto LABEL_19;
              }
LABEL_73:
              long long v114 = qword_1EBE871A8;
              if (qword_1EBE871C8 != -1)
              {
                swift_once();
                long long v114 = qword_1EBE871A8;
              }
              goto LABEL_75;
            }
            char v110 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            if (v110) {
              goto LABEL_66;
            }
          }
          long long v111 = &qword_1EBE871E8;
          if (qword_1EBE871A0 != -1)
          {
            swift_once();
            long long v111 = &qword_1EBE871E8;
          }
          goto LABEL_70;
        }
        uint64_t v60 = v102;
        uint64_t v108 = (void *)sub_1DD0464D8();
        unsigned int v109 = [v60 containsItem:v108];

        unint64_t v62 = v171;
        if (v109)
        {
          swift_bridgeObjectRelease();
          uint64_t v146 = v155;
          sub_1DCDB40EC(v155);
          uint64_t v147 = v156;
          sub_1DCDB4300(v156);
          uint64_t v148 = v173;
          v168((char *)v146, v173);
          uint64_t v149 = sub_1DD048048();
          os_log_type_t v150 = sub_1DD048848();
          if (os_log_type_enabled(v149, v150))
          {
            unint64_t v151 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)unint64_t v151 = 134217984;
            *(void *)&v179[0] = v96;
            sub_1DD048A28();
            _os_log_impl(&dword_1DCCF9000, v149, v150, "Contains cellID %llu.", v151, 0xCu);
            os_log_t v152 = v151;
            uint64_t v148 = v173;
            MEMORY[0x1E01B07E0](v152, -1, -1);
          }
          sub_1DCD392D4(v98, v100);

          v168((char *)v147, v148);
          goto LABEL_84;
        }
        sub_1DCD392D4(v98, v100);
        uint64_t v11 = v173;
      }
LABEL_19:
      uint64_t v56 = v163;
      ++v61;
      if (v174 == v164)
      {

        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
    }
  }
  long long v135 = v167;
  char v136 = sub_1DCFD5E68(v167);
  uint64_t v137 = v176;
  if (v136)
  {

LABEL_84:
    sub_1DCD32C3C((uint64_t)v180, v161);
    return sub_1DCDB79D8(v180);
  }
  unint64_t v142 = v162;
  sub_1DCDB40EC((uint64_t)v162);
  uint64_t v143 = sub_1DD048048();
  os_log_type_t v144 = sub_1DD048848();
  if (os_log_type_enabled(v143, v144))
  {
    uint64_t v145 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v145 = 0;
    _os_log_impl(&dword_1DCCF9000, v143, v144, "Image location is not within desired country polygons. Reject any domains.", v145, 2u);
    MEMORY[0x1E01B07E0](v145, -1, -1);
  }

  ((void (*)(void, uint64_t))v137[1].isa)(v142, v11);
LABEL_95:
  sub_1DCD5DA7C((uint64_t)v179);
  return (uint64_t *)sub_1DCD32C3C((uint64_t)v179, v161);
}

uint64_t sub_1DCFD5E68(void *a1)
{
  uint64_t v2 = sub_1DD048068();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x1F4188790](v2);
  v37[1] = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_Polygon(0);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  v37[0] = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (void *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GeoFenceDomainAssignmentRule();
  sub_1DCFE343C((uint64_t)v16);
  sub_1DCD2889C((uint64_t)&v16[*(int *)(v14 + 40)], (uint64_t)v10, &qword_1EBE86470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37[0] + 48))(v10, 1, v11) == 1)
  {
    *uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v10, &qword_1EBE86470);
  }
  else
  {
    sub_1DCFD83F0((uint64_t)v10, (uint64_t)v13);
  }
  sub_1DCFD8390((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
  uint64_t v17 = *v13;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCFD8390((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
  uint64_t v40 = *(void *)(v17 + 16);
  if (v40)
  {
    unint64_t v19 = 0;
    uint64_t v20 = v38;
    uint64_t v39 = v17 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
    while (1)
    {
      if (v19 >= *(void *)(v17 + 16))
      {
LABEL_25:
        __break(1u);
        return result;
      }
      sub_1DCFD8328(v39 + *(void *)(v20 + 72) * v19, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_Polygon);
      uint64_t v21 = *(void *)v7;
      unint64_t v22 = *(void *)(*(void *)v7 + 16);
      if (v22) {
        break;
      }
      uint64_t result = sub_1DCFD8390((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_Polygon);
LABEL_7:
      if (++v19 == v40) {
        goto LABEL_20;
      }
    }
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = v21 + 32;
    do
    {
      objc_msgSend(a1, sel_coordinate);
      double v27 = v26;
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_coordinate);
      unint64_t v29 = *(void *)(v21 + 16);
      if (v24 + 1 >= v29)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      unint64_t v30 = v24 + 2;
      unint64_t v31 = (v24 + 2) % v22;
      if (v31 + 1 >= v29) {
        goto LABEL_23;
      }
      float v32 = v28;
      float v33 = *(float *)(v21 + 4 * v24 + 36);
      float v34 = *(float *)(v25 + 4 * (v31 + 1));
      if (v33 <= v32 == v34 > v32)
      {
        float v35 = v27;
        if ((float)(*(float *)(v21 + 4 * v24 + 32)
                   + (float)((float)((float)(v32 - v33)
                                   * (float)(*(float *)(v25 + 4 * v31) - *(float *)(v21 + 4 * v24 + 32)))
                           / (float)(v34 - v33))) > v35
          && __OFADD__(v23++, 1))
        {
          goto LABEL_24;
        }
      }
      v24 += 2;
    }
    while (v30 < v22);
    uint64_t result = sub_1DCFD8390((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_Polygon);
    uint64_t v20 = v38;
    if ((v23 & 0x8000000000000001) != 1) {
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
}

unint64_t sub_1DCFD6434()
{
  unint64_t result = qword_1EAB049D8;
  if (!qword_1EAB049D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049D8);
  }
  return result;
}

id sub_1DCFD6488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = (void *)sub_1DD0464D8();
  v14[0] = 0;
  id v10 = objc_msgSend(v5, sel_initWithData_numberOfHashes_numberOfBits_seed_error_, v9, a3, a4, a5, v14);

  if (v10)
  {
    id v11 = v14[0];
  }
  else
  {
    id v12 = v14[0];
    sub_1DD046378();

    swift_willThrow();
  }
  return v10;
}

NSObject *sub_1DCFD6568()
{
  uint64_t v1 = sub_1DD048068();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  MEMORY[0x1F4188790](v1);
  unint64_t v52 = (unint64_t)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v42 - v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = sub_1DD047C38();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1DD046478();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DCFD9704(15, 0, 25200, 0xE200000000000000);
  unint64_t v18 = v17;
  sub_1DD0463C8();
  uint64_t v19 = sub_1DD046488();
  if (v0)
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1DCDB40EC(v52);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048858();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(void *)&v48[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1DCED7FA0(v16, v18, (uint64_t *)v48);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v21, v22, "Failed to load geofence config at path %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v24, -1, -1);
      MEMORY[0x1E01B07E0](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(unint64_t, uint64_t))(v46 + 8))(v52, v47);
    sub_1DCFD6434();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    unint64_t v25 = v20;
    uint64_t v26 = v19;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v50 = v26;
    unint64_t v51 = v25;
    uint64_t v49 = 0;
    memset(v48, 0, sizeof(v48));
    sub_1DCD33F64(v26, v25);
    sub_1DD047C28();
    sub_1DCFD6B78(&qword_1EBE86420, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
    double v27 = v43;
    sub_1DD047E38();
    uint64_t v45 = v26;
    unint64_t v52 = v25;
    sub_1DCDB40EC((uint64_t)v8);
    unint64_t v29 = v5;
    sub_1DCDB4300((uint64_t)v5);
    uint64_t v30 = v47;
    unint64_t v31 = *(void (**)(char *, uint64_t))(v46 + 8);
    v31(v8, v47);
    float v32 = sub_1DD048048();
    os_log_type_t v33 = sub_1DD048848();
    if (os_log_type_enabled(v32, v33))
    {
      float v34 = v27;
      float v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)float v35 = 0;
      _os_log_impl(&dword_1DCCF9000, v32, v33, "Created bloom filter", v35, 2u);
      uint64_t v36 = v35;
      double v27 = v34;
      MEMORY[0x1E01B07E0](v36, -1, -1);
    }

    v31(v29, v30);
    uint64_t v37 = (uint64_t)v27;
    uint64_t v38 = *v27;
    unint64_t v39 = *(void *)(v37 + 8);
    uint64_t v40 = *(unsigned int *)(v37 + 16);
    uint64_t v41 = *(unsigned int *)(v37 + 24);
    objc_allocWithZone((Class)VIBloomFilter);
    sub_1DCD33F64(v38, v39);
    uint64_t v21 = sub_1DCFD6488(v38, v39, v40, v41, v41);
    sub_1DCD21954(v38, v39);
    sub_1DCFD8390(v37, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
    sub_1DCD21954(v45, v52);
  }
  return v21;
}

uint64_t sub_1DCFD6B78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GeoFenceDomainAssignmentRule.GeoFenceDomainAssignmentRuleError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCFD6C5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoFenceDomainAssignmentRule.GeoFenceDomainAssignmentRuleError()
{
  return &type metadata for GeoFenceDomainAssignmentRule.GeoFenceDomainAssignmentRuleError;
}

uint64_t sub_1DCFD6C94(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
    uint64_t v8 = *(int *)(v7 + 32);
    uint64_t v9 = v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v38 = v7;
    uint64_t v13 = *(int *)(v7 + 36);
    uint64_t v14 = (void *)(v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v36 = v12;
      uint64_t v37 = v11;
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      sub_1DCD33F64(*v15, v21);
      *uint64_t v14 = v20;
      v14[1] = v21;
      uint64_t v12 = v36;
      uint64_t v11 = v37;
      id v14[2] = v15[2];
      *((_DWORD *)v14 + 6) = *((_DWORD *)v15 + 6);
      v36((uint64_t)v14 + *(int *)(v16 + 32), (uint64_t)v15 + *(int *)(v16 + 32), v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v22 = *(int *)(v38 + 40);
    uint64_t v23 = (void *)(v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      *uint64_t v23 = *v24;
      uint64_t v28 = *(int *)(v25 + 20);
      unint64_t v29 = (char *)v23 + v28;
      uint64_t v30 = (char *)v24 + v28;
      swift_bridgeObjectRetain();
      v12((uint64_t)v29, (uint64_t)v30, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v31 = a3[6];
    *(unsigned char *)(v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v32 = v4 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    *(void *)uint64_t v32 = *(void *)v33;
    *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
    uint64_t v34 = a3[8];
    *(void *)(v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)(v4 + v34) = *(uint64_t *)((char *)a2 + v34);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCFD7004(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v3 = a1 + v2[8];
  uint64_t v4 = sub_1DD047BF8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + v2[9];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_1DCD21954(*(void *)v6, *(void *)(v6 + 8));
    v5(v6 + *(int *)(v7 + 32), v4);
  }
  uint64_t v8 = a1 + v2[10];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v5(v8 + *(int *)(v9 + 20), v4);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1DCFD7194(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v7 = v6[8];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v36 = v11;
  v11(v8, v9, v10);
  uint64_t v12 = v6[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v34 = v10;
    float v35 = a3;
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_1DCD33F64(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    uint64_t v10 = v34;
    a3 = v35;
    v13[2] = v14[2];
    *((_DWORD *)v13 + 6) = *((_DWORD *)v14 + 6);
    v36((char *)v13 + *(int *)(v15 + 32), (char *)v14 + *(int *)(v15 + 32), v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v20 = v6[10];
  unint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *unint64_t v21 = *v22;
    uint64_t v26 = *(int *)(v23 + 20);
    uint64_t v27 = (char *)v21 + v26;
    uint64_t v28 = (char *)v22 + v26;
    swift_bridgeObjectRetain();
    v36(v27, v28, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v29 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DCFD74B8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v6 = v5[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v44 + 24);
  v43(v7, v8);
  uint64_t v10 = v5[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *(void *)v12;
      unint64_t v19 = *(void *)(v12 + 8);
      sub_1DCD33F64(*(void *)v12, v19);
      *(void *)uint64_t v11 = v18;
      *(void *)(v11 + 8) = v19;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_DWORD *)(v11 + 20) = *(_DWORD *)(v12 + 20);
      *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v45);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCFD8390(v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v39 = *(void *)v12;
  unint64_t v40 = *(void *)(v12 + 8);
  sub_1DCD33F64(*(void *)v12, v40);
  uint64_t v41 = *(void *)v11;
  unint64_t v42 = *(void *)(v11 + 8);
  *(void *)uint64_t v11 = v39;
  *(void *)(v11 + 8) = v40;
  sub_1DCD21954(v41, v42);
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(_DWORD *)(v11 + 20) = *(_DWORD *)(v12 + 20);
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v45);
LABEL_7:
  uint64_t v21 = v5[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *uint64_t v22 = *v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v43)((char *)v22 + *(int *)(v24 + 20), (char *)v23 + *(int *)(v24 + 20), v45);
      goto LABEL_13;
    }
    sub_1DCFD8390((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v22, v23, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v22 = *v23;
  uint64_t v29 = *(int *)(v24 + 20);
  uint64_t v30 = (char *)v22 + v29;
  uint64_t v31 = (char *)v23 + v29;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  swift_bridgeObjectRetain();
  v32(v30, v31, v45);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v34 = a3[6];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DCFD792C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v6 = v5[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = v5[9];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((_DWORD *)v12 + 6) = *((_DWORD *)v13 + 6);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = v5[10];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 20), (char *)v19 + *(int *)(v20 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  return a1;
}

uint64_t sub_1DCFD7C18(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v6 = v5[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v35 + 40);
  v34(v7, v8);
  uint64_t v10 = v5[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCFD8390(v11, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCellConfig);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86440);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v32 = *(void *)v11;
  unint64_t v33 = *(void *)(v11 + 8);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_1DCD21954(v32, v33);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(_DWORD *)(v11 + 24) = *(_DWORD *)(v12 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v36);
LABEL_7:
  uint64_t v19 = v5[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v34)((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v36);
      goto LABEL_13;
    }
    sub_1DCFD8390((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86470);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *uint64_t v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v36);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v28 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_1DCFD8030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCFD8044);
}

uint64_t sub_1DCFD8044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCFD8104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCFD8118);
}

uint64_t sub_1DCFD8118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for GeoFenceDomainAssignmentRule()
{
  uint64_t result = qword_1EBE85AA0;
  if (!qword_1EBE85AA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCFD8220()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DCFD82D4()
{
  unint64_t result = qword_1EAB049E0;
  if (!qword_1EAB049E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049E0);
  }
  return result;
}

uint64_t sub_1DCFD8328(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCFD8390(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCFD83F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule.GeoFenceCountryConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCFD8454()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD8500()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD85F0()
{
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFD86C0()
{
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFD87F0()
{
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFD8884()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD8970()
{
  return sub_1DD049108();
}

uint64_t sub_1DCFD8AB0()
{
  return sub_1DD049108();
}

unint64_t sub_1DCFD8B58(char a1)
{
  unint64_t result = 0xD000000000000017;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCFD8BF4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
    case 5:
    case 15:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 36:
    case 60:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x6E6F436573726150;
      break;
    case 9:
      unint64_t result = 0x6F43686372616553;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0xD000000000000010;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 16:
      unint64_t result = 0xD000000000000019;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    case 18:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000023;
      break;
    case 20:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD000000000000020;
      break;
    case 23:
      unint64_t result = 0x4D64656966696E55;
      break;
    case 24:
      unint64_t result = 0x4964656966696E55;
      break;
    case 25:
      unint64_t result = 0xD000000000000015;
      break;
    case 33:
      unint64_t result = 0xD000000000000018;
      break;
    case 34:
      unint64_t result = 0x496C657261707041;
      break;
    case 35:
      unint64_t result = 0x4D6C657261707041;
      break;
    case 37:
      unint64_t result = 0x6F666E49646F6F46;
      break;
    case 38:
      unint64_t result = 0x65646F4D646F6F46;
      break;
    case 39:
      unint64_t result = 0xD000000000000014;
      break;
    case 40:
      unint64_t result = 0x7070614D646F6F46;
      break;
    case 41:
    case 43:
      unint64_t result = 0x626D79536E676953;
      break;
    case 42:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 44:
      unint64_t result = 0xD000000000000011;
      break;
    case 45:
      unint64_t result = 0x6F7765727574614ELL;
      break;
    case 46:
      unint64_t result = 0xD000000000000010;
      break;
    case 47:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 48:
      unint64_t result = 0xD000000000000018;
      break;
    case 49:
      unint64_t result = 0xD000000000000019;
      break;
    case 50:
      unint64_t result = 0xD000000000000015;
      break;
    case 51:
      unint64_t result = 0xD000000000000015;
      break;
    case 52:
      unint64_t result = 0xD000000000000016;
      break;
    case 53:
      unint64_t result = 0xD000000000000011;
      break;
    case 54:
    case 55:
      unint64_t result = 0x6C7573655278614DLL;
      break;
    case 56:
      unint64_t result = 0x657A696E656B6F54;
      break;
    case 58:
      unint64_t result = 0x6B6F6F6265646F43;
      break;
    case 59:
      unint64_t result = 0xD000000000000012;
      break;
    case 61:
      unint64_t result = 0xD000000000000012;
      break;
    case 62:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCFD91C4(unsigned __int8 *a1, char *a2)
{
  return sub_1DCFB260C(*a1, *a2);
}

uint64_t sub_1DCFD91D0()
{
  return sub_1DCFD8500();
}

uint64_t sub_1DCFD91D8()
{
  return sub_1DCFD85F0();
}

uint64_t sub_1DCFD91E0()
{
  return sub_1DCFD8884();
}

uint64_t sub_1DCFD91E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCFDDEE4();
  *a1 = result;
  return result;
}

unint64_t sub_1DCFD9218@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCFD8B58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DCFD9244(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1DCFD8BF4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DCFD8BF4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCFD92D0()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCFD8BF4(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCFD9334()
{
  sub_1DCFD8BF4(*v0);
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCFD9388()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCFD8BF4(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCFD93E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCFDE018();
  *a1 = result;
  return result;
}

unint64_t sub_1DCFD9418@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCFD8BF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DCFD9444()
{
  unint64_t result = sub_1DCDB7C28((uint64_t)&unk_1F3834F00);
  qword_1EAB1D360 = result;
  return result;
}

uint64_t sub_1DCFD946C(char a1)
{
  char v2 = a1 & 1;
  sub_1DD048878();
  MEMORY[0x1F4188790]();
  sub_1DD0481D8();
  MEMORY[0x1F4188790]();
  uint64_t v3 = sub_1DD048898();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE87140);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC68], v3);
  sub_1DD0481C8();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  v9[1] = MEMORY[0x1E4FBC860];
  sub_1DCFDE090(&qword_1EBE87138, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87120);
  sub_1DCDD4CAC();
  sub_1DD048AE8();
  *(void *)(v1 + 16) = sub_1DD0488C8();
  *(void *)(v1 + 24) = objc_msgSend(self, sel_clientWithIdentifier_, 244);
  *(void *)(v1 + 32) = sub_1DCDB7B10(v7);
  *(void *)(v1 + 40) = sub_1DCDB7B1C(v7);
  *(void *)(v1 + 48) = sub_1DCDB7B10(v7);
  *(unsigned char *)(v1 + 56) = v2;
  return v1;
}

uint64_t sub_1DCFD9704(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  int v16 = (char *)&v38 - v15;
  char v17 = *(unsigned char *)(v4 + 56);
  uint64_t v45 = a3;
  int v44 = a1;
  if (v17)
  {
    MEMORY[0x1F4188790](v14);
    *(&v38 - 2) = v4;
    *((unsigned char *)&v38 - 8) = a2;
    *((unsigned char *)&v38 - 7) = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
    sub_1DD0488A8();
    uint64_t v19 = v47;
    uint64_t v20 = v48;
  }
  else
  {
    uint64_t v19 = sub_1DCFDB258(a1, a2, a3, a4);
    uint64_t v20 = v21;
  }
  sub_1DCDB40EC((uint64_t)v16);
  sub_1DCDB4300((uint64_t)v13);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v16, v9);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_1DD048048();
  int v24 = sub_1DD048848();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    int v40 = v24;
    uint64_t v41 = v22;
    uint64_t v43 = v9;
    uint64_t v25 = 0xD000000000000017;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v46[0] = v39;
    *(_DWORD *)uint64_t v26 = 136315906;
    unint64_t v27 = 0x80000001DD066D90;
    uint64_t v42 = v19;
    switch((char)a2)
    {
      case 1:
        uint64_t v25 = 0xD00000000000001ALL;
        uint64_t v28 = "VISUAL_INTELLIGENCE_NATURE";
        goto LABEL_11;
      case 2:
        uint64_t v25 = 0xD000000000000018;
        uint64_t v28 = "VISUAL_INTELLIGENCE_PETS";
        goto LABEL_11;
      case 3:
        uint64_t v25 = 0xD00000000000001CLL;
        uint64_t v28 = "VISUAL_INTELLIGENCE_VICTORIA";
        goto LABEL_11;
      case 4:
        uint64_t v25 = 0xD000000000000023;
        uint64_t v28 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_11:
        unint64_t v27 = (unint64_t)(v28 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v47 = sub_1DCED7FA0(v25, v27, v46);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    unint64_t v29 = sub_1DCFD8BF4(v44);
    uint64_t v47 = sub_1DCED7FA0(v29, v30, v46);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    if (a4) {
      uint64_t v31 = v45;
    }
    else {
      uint64_t v31 = 0;
    }
    if (a4) {
      unint64_t v32 = a4;
    }
    else {
      unint64_t v32 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1DCED7FA0(v31, v32, v46);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2080;
    uint64_t v33 = v42;
    uint64_t v47 = v42;
    uint64_t v48 = v20;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
    uint64_t v34 = sub_1DD048478();
    uint64_t v47 = sub_1DCED7FA0(v34, v35, v46);
    uint64_t v19 = v33;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v23, (os_log_type_t)v40, "TrialWrapper.retrievePathForFactor(): namespace:%s factor:%s ext:%s -> path:%s", (uint8_t *)v26, 0x2Au);
    uint64_t v36 = v39;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v36, -1, -1);
    MEMORY[0x1E01B07E0](v26, -1, -1);

    v41(v13, v43);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v22(v13, v9);
  }
  if (v20) {
    return v19;
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCFD9BEC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unsigned __int8 v5 = a2;
  sub_1DCFD9ED0(a2);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 32);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1DCEAD2F0(v5);
  if ((v11 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *a4 = 0;
    a4[1] = 0;
    return result;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16) && (uint64_t v13 = sub_1DCEADA48(a3), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v17;
  a4[1] = v16;
  return result;
}

uint64_t sub_1DCFD9CE0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = a2;
  sub_1DCFD9ED0(a2);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 40);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DCEAD2F0(v5);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 16) && (uint64_t v13 = sub_1DCEADA48(a3), (v14 & 1) != 0))
      {
        char v15 = 0;
        uint64_t v16 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      }
      else
      {
        uint64_t v16 = 0;
        char v15 = 1;
      }
    }
    else
    {
      uint64_t v16 = 0;
      char v15 = 1;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
    char v15 = 1;
  }
  *(void *)a4 = v16;
  *(unsigned char *)(a4 + 8) = v15;
  return result;
}

uint64_t sub_1DCFD9DDC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unsigned __int8 v5 = a2;
  sub_1DCFD9ED0(a2);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 48);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1DCEAD2F0(v5);
  if ((v11 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *a4 = 0;
    a4[1] = 0;
    return result;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16) && (uint64_t v13 = sub_1DCEADA48(a3), (v14 & 1) != 0))
  {
    char v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v17;
  a4[1] = v16;
  return result;
}

uint64_t sub_1DCFD9ED0(char *a1)
{
  swift_beginAccess();
  if (!*(void *)(v1[5] + 16)
    || (swift_bridgeObjectRetain(),
        sub_1DCEAD2F0(a1),
        char v4 = v3,
        uint64_t result = swift_bridgeObjectRelease(),
        (v4 & 1) == 0))
  {
    swift_beginAccess();
    if (!*(void *)(v1[4] + 16)
      || (swift_bridgeObjectRetain(),
          sub_1DCEAD2F0(a1),
          char v7 = v6,
          uint64_t result = swift_bridgeObjectRelease(),
          (v7 & 1) == 0))
    {
      swift_beginAccess();
      if (!*(void *)(v1[6] + 16)) {
        return sub_1DCFD9FD0(a1);
      }
      swift_bridgeObjectRetain();
      sub_1DCEAD2F0(a1);
      char v9 = v8;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return sub_1DCFD9FD0(a1);
      }
    }
  }
  return result;
}

uint64_t sub_1DCFD9FD0(char *a1)
{
  char v2 = v1;
  uint64_t v4 = sub_1DD048068();
  unsigned __int8 v5 = *(char **)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  long long v119 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v128 = (char *)&v111 - v9;
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v111 - v10;
  uint64_t v12 = (void *)*((void *)v2 + 3);
  unint64_t v126 = (unint64_t)"reportAnIssueEnvironment";
  unint64_t v127 = 0xD000000000000017;
  uint64_t v13 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_factorLevelsWithNamespaceName_, v13);

  sub_1DCD95648(0, &qword_1EBE87130);
  unint64_t v15 = sub_1DD0486B8();

  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v17 = sub_1DCDBA888(MEMORY[0x1E4FBC860]);
  char v18 = (void (**)(char *, uint64_t))sub_1DCDBA9BC(v16);
  id v19 = (id)sub_1DCDBA888(v16);
  if (v15 >> 62)
  {
LABEL_102:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21)
    {
LABEL_3:
      unint64_t v122 = v17;
      long long v120 = v18;
      id v118 = v19;
      float v112 = v2;
      unint64_t v133 = v15 & 0xC000000000000001;
      uint64_t v137 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      char v18 = (void (**)(char *, uint64_t))(v5 + 8);
      unint64_t v17 = 4;
      unint64_t v129 = (unint64_t)"coarseCategoryDistribution";
      unint64_t v121 = 0x80000001DD067880;
      *(void *)&long long v20 = 136315394;
      long long v125 = v20;
      long long v111 = a1;
      uint64_t v124 = a1;
      uint64_t v123 = MEMORY[0x1E4FBC840] + 8;
      long long v117 = "VISUAL_INTELLIGENCE_POC";
      os_log_type_t v116 = "VISUAL_INTELLIGENCE_NATURE";
      uint64_t v115 = "VISUAL_INTELLIGENCE_PETS";
      *(void *)&long long v20 = 67109120;
      long long v113 = v20;
      long long v114 = "VISUAL_INTELLIGENCE_VICTORIA";
      a1 = v128;
      unint64_t v131 = v15;
      os_log_type_t v132 = v11;
      long long v135 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v130 = v21;
      while (1)
      {
        if (v133) {
          uint64_t v22 = (char *)MEMORY[0x1E01AE890](v17 - 4, v15);
        }
        else {
          uint64_t v22 = (char *)*(id *)(v15 + 8 * v17);
        }
        unsigned __int8 v5 = v22;
        if (__OFADD__(v17 - 4, 1))
        {
          __break(1u);
          goto LABEL_102;
        }
        unint64_t v136 = v17 - 3;
        if (qword_1EBE87190 != -1) {
          swift_once();
        }
        if (byte_1EBE87188 != 1) {
          goto LABEL_26;
        }
        id v23 = objc_msgSend(self, sel_mainBundle);
        id v24 = objc_msgSend(v23, sel_bundleIdentifier);

        if (v24)
        {
          uint64_t v25 = sub_1DD048408();
          uint64_t v27 = v26;

          if (v25 == 0xD00000000000002BLL && v27 == v121)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            unint64_t v29 = (uint64_t *)&off_1EAB02A48;
            if (qword_1EAB01C28 != -1)
            {
              swift_once();
              unint64_t v29 = (uint64_t *)&off_1EAB02A48;
            }
            goto LABEL_22;
          }
          char v28 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v28) {
            goto LABEL_18;
          }
        }
        unint64_t v29 = &qword_1EBE871E8;
        if (qword_1EBE871A0 != -1)
        {
          swift_once();
          unint64_t v29 = &qword_1EBE871E8;
        }
LABEL_22:
        unint64_t v30 = *(void **)(*v29 + 32);
        swift_retain();
        uint64_t v31 = (void *)sub_1DD0483D8();
        LODWORD(v30) = objc_msgSend(v30, sel_BOOLForKey_, v31);
        swift_release();

        char v18 = v135;
        if (v30)
        {
          if (qword_1EAB01C80 != -1) {
            swift_once();
          }
          uint64_t v32 = v4;
          uint64_t v33 = qword_1EAB02B70;
          goto LABEL_29;
        }
LABEL_26:
        if (qword_1EBE871C8 != -1) {
          swift_once();
        }
        uint64_t v32 = v4;
        uint64_t v33 = qword_1EBE871A8;
LABEL_29:
        uint64_t v34 = __swift_project_value_buffer(v32, (uint64_t)v33);
        unint64_t v35 = *v137;
        (*v137)(v11, v34, v4);
        long long v134 = v35;
        if ((byte_1EBE87188 & 1) == 0) {
          goto LABEL_41;
        }
        id v36 = objc_msgSend(self, sel_mainBundle);
        id v37 = objc_msgSend(v36, sel_bundleIdentifier);

        if (v37)
        {
          uint64_t v38 = sub_1DD048408();
          uint64_t v40 = v39;

          if (v38 == 0xD00000000000002BLL && v40 == (v129 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
LABEL_35:
            uint64_t v42 = (uint64_t *)&off_1EAB02A48;
            if (qword_1EAB01C28 != -1)
            {
              swift_once();
              uint64_t v42 = (uint64_t *)&off_1EAB02A48;
            }
            goto LABEL_39;
          }
          char v41 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v41) {
            goto LABEL_35;
          }
        }
        uint64_t v42 = &qword_1EBE871E8;
        if (qword_1EBE871A0 != -1)
        {
          swift_once();
          uint64_t v42 = &qword_1EBE871E8;
        }
LABEL_39:
        uint64_t v43 = *(void **)(*v42 + 32);
        swift_retain();
        int v44 = (void *)sub_1DD0483D8();
        LODWORD(v43) = objc_msgSend(v43, sel_BOOLForKey_, v44);
        swift_release();

        char v18 = v135;
        if (v43)
        {
          uint64_t v45 = a1;
          uint64_t v46 = (uint64_t)v11;
          goto LABEL_44;
        }
LABEL_41:
        if (qword_1EBE871C8 != -1) {
          swift_once();
        }
        uint64_t v46 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBE871A8);
        uint64_t v45 = a1;
LABEL_44:
        v35(v45, v46, v4);
        char v2 = *v18;
        (*v18)(v11, v4);
        uint64_t v47 = v5;
        uint64_t v48 = sub_1DD048048();
        uint64_t v49 = v4;
        os_log_type_t v50 = sub_1DD048848();
        if (os_log_type_enabled(v48, v50))
        {
          uint64_t v51 = v49;
          char v11 = (char *)swift_slowAlloc();
          unint64_t v52 = (void *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          id v139 = (id)v53;
          *(_DWORD *)char v11 = v125;
          uint64_t v54 = v127;
          unint64_t v55 = v126 | 0x8000000000000000;
          switch(v124)
          {
            case 1:
              uint64_t v54 = 0xD00000000000001ALL;
              uint64_t v56 = &v143;
              goto LABEL_51;
            case 2:
              uint64_t v54 = 0xD000000000000018;
              uint64_t v56 = &v142;
              goto LABEL_51;
            case 3:
              uint64_t v54 = 0xD00000000000001CLL;
              uint64_t v56 = &v141;
              goto LABEL_51;
            case 4:
              uint64_t v54 = 0xD000000000000023;
              uint64_t v56 = &v140;
LABEL_51:
              unint64_t v55 = *(v56 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          *(void *)(v11 + 4) = sub_1DCED7FA0(v54, v55, (uint64_t *)&v139);
          swift_bridgeObjectRelease();
          *((_WORD *)v11 + 6) = 2112;
          *(void *)(v11 + 14) = v47;
          *unint64_t v52 = v47;

          _os_log_impl(&dword_1DCCF9000, v48, v50, "TrialWrapper: loading %s %@", (uint8_t *)v11, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v52, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v53, -1, -1);
          MEMORY[0x1E01B07E0](v11, -1, -1);

          uint64_t v4 = v51;
          a1 = v128;
          char v18 = v135;
          ((void (*)(void))v2)();
        }
        else
        {

          v2(a1, v49);
          uint64_t v4 = v49;
        }
        id v57 = objc_msgSend(v47, sel_factor, v111);
        if (!v57)
        {
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:

          __break(1u);
          JUMPOUT(0x1DCFDB230);
        }
        long long v58 = v57;
        id v59 = objc_msgSend(v57, sel_name);

        if (!v59) {
          goto LABEL_106;
        }
        sub_1DD048408();
        id v19 = v60;

        uint64_t v61 = sub_1DCFDE018();
        if (v61 != 63)
        {
          char v11 = (char *)v61;
          id v62 = objc_msgSend(v47, sel_factor);
          if (!v62) {
            goto LABEL_107;
          }
          int v63 = v62;
          int v64 = objc_msgSend(v62, sel_type);

          if (v64 > 99)
          {
            if (v64 == 101)
            {
              id v81 = objc_msgSend(v47, sel_level);
              if (!v81) {
                goto LABEL_112;
              }
              char v82 = v81;
              id v73 = objc_msgSend(v81, sel_directoryValue);

              if (!v73) {
                goto LABEL_113;
              }
            }
            else
            {
              if (v64 != 100)
              {
LABEL_76:
                if (byte_1EBE87188 != 1) {
                  goto LABEL_93;
                }
                id v88 = objc_msgSend(self, sel_mainBundle);
                id v89 = objc_msgSend(v88, sel_bundleIdentifier);

                if (v89)
                {
                  uint64_t v90 = sub_1DD048408();
                  uint64_t v92 = v91;

                  if (v90 == 0xD00000000000002BLL && v92 == (v129 | 0x8000000000000000))
                  {
                    swift_bridgeObjectRelease();
LABEL_86:
                    uint64_t v98 = (uint64_t *)&off_1EAB02A48;
                    if (qword_1EAB01C28 != -1)
                    {
                      swift_once();
                      uint64_t v98 = (uint64_t *)&off_1EAB02A48;
                    }
LABEL_90:
                    unint64_t v99 = *(void **)(*v98 + 32);
                    swift_retain();
                    id v19 = (id)sub_1DD0483D8();
                    LODWORD(v99) = objc_msgSend(v99, sel_BOOLForKey_, v19);
                    swift_release();

                    if (v99)
                    {
                      unint64_t v100 = qword_1EAB02B70;
                      if (qword_1EAB01C80 != -1)
                      {
                        swift_once();
                        unint64_t v100 = qword_1EAB02B70;
                      }
LABEL_95:
                      uint64_t v101 = __swift_project_value_buffer(v4, (uint64_t)v100);
                      v134(v119, v101, v4);
                      char v11 = v47;
                      uint64_t v102 = sub_1DD048048();
                      os_log_type_t v103 = sub_1DD048858();
                      if (os_log_type_enabled(v102, v103))
                      {
                        uint64_t v104 = swift_slowAlloc();
                        *(_DWORD *)uint64_t v104 = v113;
                        id v105 = objc_msgSend(v11, sel_factor);
                        if (!v105) {
                          goto LABEL_114;
                        }
                        id v19 = v105;
                        unsigned int v106 = objc_msgSend(v105, sel_type);

                        *(_DWORD *)(v104 + 4) = v106;
                        _os_log_impl(&dword_1DCCF9000, v102, v103, "TrialWrapper: unsupported factor type %d", (uint8_t *)v104, 8u);
                        MEMORY[0x1E01B07E0](v104, -1, -1);
                        char v18 = v135;
                      }
                      else
                      {

                        uint64_t v102 = v11;
                      }

                      v2(v119, v4);
                      goto LABEL_5;
                    }
LABEL_93:
                    unint64_t v100 = qword_1EBE871A8;
                    if (qword_1EBE871C8 != -1)
                    {
                      swift_once();
                      unint64_t v100 = qword_1EBE871A8;
                    }
                    goto LABEL_95;
                  }
                  char v97 = sub_1DD048FA8();
                  swift_bridgeObjectRelease();
                  if (v97) {
                    goto LABEL_86;
                  }
                }
                uint64_t v98 = &qword_1EBE871E8;
                if (qword_1EBE871A0 != -1)
                {
                  swift_once();
                  uint64_t v98 = &qword_1EBE871E8;
                }
                goto LABEL_90;
              }
              id v71 = objc_msgSend(v47, sel_level);
              if (!v71) {
                goto LABEL_109;
              }
              uint64_t v72 = v71;
              id v73 = objc_msgSend(v71, sel_fileValue);

              if (!v73) {
                goto LABEL_110;
              }
            }
            id v83 = objc_msgSend(v73, sel_path);

            if (v83)
            {
              uint64_t v84 = sub_1DD048408();
              id v19 = v85;

              uint64_t v86 = v122;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              id v139 = (id)v86;
              sub_1DCE87170(v84, (uint64_t)v19, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
              uint64_t v69 = (uint64_t)v139;
              uint64_t v70 = &v146;
LABEL_74:
              *(v70 - 32) = v69;

LABEL_75:
              swift_bridgeObjectRelease();
              goto LABEL_5;
            }
          }
          else
          {
            if (v64 != 11)
            {
              if (v64 != 13) {
                goto LABEL_76;
              }
              id v65 = objc_msgSend(v47, sel_level);
              if (!v65) {
                goto LABEL_108;
              }
              uint64_t v66 = v65;
              id v19 = objc_msgSend(v65, sel_longValue);

              uint64_t v67 = (uint64_t)v120;
              char v68 = swift_isUniquelyReferenced_nonNull_native();
              id v139 = (id)v67;
              sub_1DCE87044((uint64_t)v19, (uint64_t)v11, v68);
              uint64_t v69 = (uint64_t)v139;
              uint64_t v70 = &v145;
              goto LABEL_74;
            }
            id v74 = objc_msgSend(v47, sel_level);
            if (!v74) {
              goto LABEL_111;
            }
            uint64_t v75 = v74;
            id v76 = objc_msgSend(v74, sel_stringValue);

            if (v76)
            {
              uint64_t v77 = sub_1DD048408();
              id v19 = v78;

              uint64_t v79 = (uint64_t)v118;
              char v80 = swift_isUniquelyReferenced_nonNull_native();
              id v139 = (id)v79;
              sub_1DCE87170(v77, (uint64_t)v19, (uint64_t)v11, v80);
              uint64_t v69 = (uint64_t)v139;
              uint64_t v70 = &v144;
              goto LABEL_74;
            }
            id v19 = v118;
            swift_bridgeObjectRetain();
            unint64_t v93 = sub_1DCEADA48((uint64_t)v11);
            char v95 = v94;
            swift_bridgeObjectRelease();
            if (v95)
            {
              char v96 = swift_isUniquelyReferenced_nonNull_native();
              id v139 = v19;
              if ((v96 & 1) == 0)
              {
                sub_1DCE8C4E0();
                id v19 = v139;
              }
              id v118 = v19;
              sub_1DCFDDB0C(v93, (uint64_t)v19);

              swift_bridgeObjectRelease();
              goto LABEL_75;
            }
          }
        }

LABEL_5:
        unint64_t v15 = v131;
        char v11 = v132;
        ++v17;
        if (v136 == v130)
        {
          swift_bridgeObjectRelease();
          char v2 = v112;
          LOBYTE(a1) = (_BYTE)v111;
          id v19 = v118;
          char v18 = v120;
          unint64_t v17 = v122;
          goto LABEL_104;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_104:
  swift_beginAccess();
  char v107 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v138 = *((void *)v2 + 4);
  *((void *)v2 + 4) = 0x8000000000000000;
  sub_1DCE86EF4(v17, a1, v107);
  *((void *)v2 + 4) = v138;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  char v108 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v138 = *((void *)v2 + 5);
  *((void *)v2 + 5) = 0x8000000000000000;
  sub_1DCE86EE8((uint64_t)v18, a1, v108);
  *((void *)v2 + 5) = v138;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v138 = *((void *)v2 + 6);
  *((void *)v2 + 6) = 0x8000000000000000;
  sub_1DCE86EF4((uint64_t)v19, a1, v109);
  *((void *)v2 + 6) = v138;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1DCFDB258(int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v120 = a4;
  int v121 = a1;
  v123[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v10 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v110 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v110 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v19 = (char *)&v110 - v18;
  MEMORY[0x1F4188790](v17);
  long long v119 = (uint64_t *)((char *)&v110 - v20);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v22 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v23 = objc_msgSend(v22, sel_resourcePath);

  if (!v23) {
    goto LABEL_26;
  }
  id v118 = v16;
  if (qword_1EAB02068 != -1) {
    swift_once();
  }
  if (!*(void *)(qword_1EAB1D360 + 16) || (sub_1DCEAD2F0(a2), (v24 & 1) == 0))
  {

LABEL_26:
    sub_1DCDB40EC((uint64_t)v10);
    uint64_t v53 = sub_1DD048048();
    os_log_type_t v54 = sub_1DD048858();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = 0xD000000000000017;
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      id v57 = (void *)swift_slowAlloc();
      v123[0] = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      char v58 = a2;
      unint64_t v59 = 0x80000001DD066D90;
      uint64_t v60 = v57;
      switch(v58)
      {
        case 1:
          uint64_t v55 = 0xD00000000000001ALL;
          uint64_t v61 = "VISUAL_INTELLIGENCE_NATURE";
          goto LABEL_32;
        case 2:
          uint64_t v55 = 0xD000000000000018;
          uint64_t v61 = "VISUAL_INTELLIGENCE_PETS";
          goto LABEL_32;
        case 3:
          uint64_t v55 = 0xD00000000000001CLL;
          uint64_t v61 = "VISUAL_INTELLIGENCE_VICTORIA";
          goto LABEL_32;
        case 4:
          uint64_t v55 = 0xD000000000000023;
          uint64_t v61 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_32:
          unint64_t v59 = (unint64_t)(v61 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v122 = sub_1DCED7FA0(v55, v59, (uint64_t *)v123);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v53, v54, "TrialWrapper.retrievePathDefault(): no path to namespace:%s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v60, -1, -1);
      MEMORY[0x1E01B07E0](v56, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_stringByAppendingPathComponent_, v25);

  uint64_t v27 = v26;
  char v28 = v26;
  if (!v26)
  {
    sub_1DD048408();
    char v28 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    sub_1DD048408();
    uint64_t v27 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
  }
  unint64_t v29 = self;
  id v30 = v26;
  id v31 = objc_msgSend(v29, sel_defaultManager);
  v123[0] = 0;
  id v32 = objc_msgSend(v31, sel_contentsOfDirectoryAtPath_error_, v28, v123);

  id v33 = v123[0];
  if (!v32)
  {
    id v64 = v123[0];

    id v65 = (void *)sub_1DD046378();
    swift_willThrow();

    sub_1DCDB40EC((uint64_t)v13);
    uint64_t v66 = sub_1DD048048();
    os_log_type_t v67 = sub_1DD048858();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = 0xD000000000000017;
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      v123[0] = v70;
      *(_DWORD *)uint64_t v69 = 136315138;
      char v71 = a2;
      unint64_t v72 = 0x80000001DD066D90;
      id v73 = v70;
      switch(v71)
      {
        case 1:
          uint64_t v68 = 0xD00000000000001ALL;
          id v74 = "VISUAL_INTELLIGENCE_NATURE";
          goto LABEL_53;
        case 2:
          uint64_t v68 = 0xD000000000000018;
          id v74 = "VISUAL_INTELLIGENCE_PETS";
          goto LABEL_53;
        case 3:
          uint64_t v68 = 0xD00000000000001CLL;
          id v74 = "VISUAL_INTELLIGENCE_VICTORIA";
          goto LABEL_53;
        case 4:
          uint64_t v68 = 0xD000000000000023;
          id v74 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_53:
          unint64_t v72 = (unint64_t)(v74 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v122 = sub_1DCED7FA0(v68, v72, (uint64_t *)v123);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v66, v67, "TrialWrapper.retrievePathDefault(): no files in bundle for namespace:%s", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v73, -1, -1);
      MEMORY[0x1E01B07E0](v69, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    return 0;
  }
  id v114 = v27;
  uint64_t v111 = a2;
  float v112 = v19;
  uint64_t v116 = v6;
  uint64_t v117 = v7;
  uint64_t v34 = sub_1DD0486B8();
  id v35 = v33;

  uint64_t v36 = *(void *)(v34 + 16);
  uint64_t v115 = a3;
  uint64_t v113 = v34;
  if (v36)
  {
    id v37 = (uint64_t *)(v34 + 40);
    uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v39 = *(v37 - 1);
      uint64_t v40 = *v37;
      swift_bridgeObjectRetain();
      char v41 = (void *)sub_1DD0483D8();
      id v42 = objc_msgSend(v41, sel_stringByDeletingPathExtension);

      uint64_t v43 = sub_1DD048408();
      uint64_t v45 = v44;

      if (v43 == sub_1DCFD8BF4(v121) && v45 == v46) {
        break;
      }
      char v48 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
LABEL_12:
      v37 += 2;
      if (!--v36) {
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_20:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v123[0] = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1DCFC4948(0, v38[2] + 1, 1);
      uint64_t v38 = v123[0];
    }
    unint64_t v51 = v38[2];
    unint64_t v50 = v38[3];
    if (v51 >= v50 >> 1)
    {
      sub_1DCFC4948(v50 > 1, v51 + 1, 1);
      uint64_t v38 = v123[0];
    }
    v38[2] = v51 + 1;
    unint64_t v52 = &v38[2 * v51];
    v52[4] = v39;
    v52[5] = v40;
    goto LABEL_12;
  }
  uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v75 = v120;
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_1DCFDDCE4((uint64_t)v38, v115, v75);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v76 + 16) != 1)
  {
    swift_bridgeObjectRelease();

    uint64_t v94 = (uint64_t)v118;
    sub_1DCDB40EC((uint64_t)v118);
    char v95 = sub_1DD048048();
    os_log_type_t v96 = sub_1DD048858();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = 0xD000000000000017;
      uint64_t v98 = swift_slowAlloc();
      unint64_t v99 = (void *)swift_slowAlloc();
      v123[0] = v99;
      *(_DWORD *)uint64_t v98 = 136315394;
      unint64_t v100 = 0x80000001DD066D90;
      uint64_t v101 = v99;
      switch((char)v111)
      {
        case 1:
          uint64_t v97 = 0xD00000000000001ALL;
          uint64_t v102 = "VISUAL_INTELLIGENCE_NATURE";
          goto LABEL_70;
        case 2:
          uint64_t v97 = 0xD000000000000018;
          uint64_t v102 = "VISUAL_INTELLIGENCE_PETS";
          goto LABEL_70;
        case 3:
          uint64_t v97 = 0xD00000000000001CLL;
          uint64_t v102 = "VISUAL_INTELLIGENCE_VICTORIA";
          goto LABEL_70;
        case 4:
          uint64_t v97 = 0xD000000000000023;
          uint64_t v102 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_70:
          unint64_t v100 = (unint64_t)(v102 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v122 = sub_1DCED7FA0(v97, v100, (uint64_t *)v123);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v98 + 12) = 2080;
      unint64_t v108 = sub_1DCFD8BF4(v121);
      uint64_t v122 = sub_1DCED7FA0(v108, v109, (uint64_t *)v123);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v95, v96, "TrialWrapper.retrievePathDefault(): cardinality wrong for namespace:%s factor:%s", (uint8_t *)v98, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v101, -1, -1);
      MEMORY[0x1E01B07E0](v98, -1, -1);

      (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v116);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v94, v116);
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v77 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v78 = v114;
  id v79 = objc_msgSend(v114, sel_stringByAppendingPathComponent_, v77);

  uint64_t v62 = sub_1DD048408();
  unint64_t v81 = v80;

  char v82 = (void (*)(void, void))v119;
  sub_1DCDB40EC((uint64_t)v119);
  uint64_t v83 = (uint64_t)v112;
  sub_1DCDB4300((uint64_t)v112);
  uint64_t v84 = v116;
  uint64_t v85 = v117 + 8;
  uint64_t v86 = *(uint64_t **)(v117 + 8);
  ((void (*)(void, uint64_t))v86)(v82, v116);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v87 = sub_1DD048048();
  int v88 = sub_1DD048848();
  if (os_log_type_enabled(v87, (os_log_type_t)v88))
  {
    LODWORD(v118) = v88;
    long long v119 = v86;
    uint64_t v117 = v85;
    uint64_t v89 = 0xD000000000000017;
    uint64_t v90 = swift_slowAlloc();
    id v114 = (id)swift_slowAlloc();
    v123[0] = v114;
    *(_DWORD *)uint64_t v90 = 136315906;
    unint64_t v91 = 0x80000001DD066D90;
    uint64_t v92 = v115;
    switch((char)v111)
    {
      case 1:
        uint64_t v89 = 0xD00000000000001ALL;
        unint64_t v93 = "VISUAL_INTELLIGENCE_NATURE";
        goto LABEL_61;
      case 2:
        uint64_t v89 = 0xD000000000000018;
        unint64_t v93 = "VISUAL_INTELLIGENCE_PETS";
        goto LABEL_61;
      case 3:
        uint64_t v89 = 0xD00000000000001CLL;
        unint64_t v93 = "VISUAL_INTELLIGENCE_VICTORIA";
        goto LABEL_61;
      case 4:
        uint64_t v89 = 0xD000000000000023;
        unint64_t v93 = "VISUAL_INTELLIGENCE_RICH_LABEL_I18N";
LABEL_61:
        unint64_t v91 = (unint64_t)(v93 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    uint64_t v122 = sub_1DCED7FA0(v89, v91, (uint64_t *)v123);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 12) = 2080;
    unint64_t v103 = sub_1DCFD8BF4(v121);
    uint64_t v122 = sub_1DCED7FA0(v103, v104, (uint64_t *)v123);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 22) = 2080;
    if (v120) {
      uint64_t v105 = v92;
    }
    else {
      uint64_t v105 = 0;
    }
    if (v120) {
      unint64_t v106 = v120;
    }
    else {
      unint64_t v106 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_1DCED7FA0(v105, v106, (uint64_t *)v123);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_1DCED7FA0(v62, v81, (uint64_t *)v123);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v87, (os_log_type_t)v118, "TrialWrapper.retrievePathDefault(): namespace:%s factor:%s ext:%s -> path:%s", (uint8_t *)v90, 0x2Au);
    id v107 = v114;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v107, -1, -1);
    MEMORY[0x1E01B07E0](v90, -1, -1);

    ((void (*)(char *, uint64_t))v119)(v112, v116);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    ((void (*)(uint64_t, uint64_t))v86)(v83, v84);
  }
  return v62;
}

uint64_t sub_1DCFDC07C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TrialWrapper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TrialWrapper.ConfigSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFDC1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialWrapper.ConfigSource()
{
  return &type metadata for TrialWrapper.ConfigSource;
}

uint64_t getEnumTagSinglePayload for TrialWrapper.FactorName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC2) {
    goto LABEL_17;
  }
  if (a2 + 62 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 62) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 62;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 62;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3F;
  int v8 = v6 - 63;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrialWrapper.FactorName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 62 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 62) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC1)
  {
    unsigned int v6 = ((a2 - 194) >> 8) + 1;
    *uint64_t result = a2 + 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFDC358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 62;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialWrapper.FactorName()
{
  return &type metadata for TrialWrapper.FactorName;
}

unsigned char *storeEnumTagSinglePayload for TrialWrapper.NamespaceName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFDC45CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialWrapper.NamespaceName()
{
  return &type metadata for TrialWrapper.NamespaceName;
}

unint64_t sub_1DCFDC498()
{
  unint64_t result = qword_1EBE87118;
  if (!qword_1EBE87118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE87118);
  }
  return result;
}

unint64_t sub_1DCFDC4F0()
{
  unint64_t result = qword_1EBE87110;
  if (!qword_1EBE87110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE87110);
  }
  return result;
}

unint64_t sub_1DCFDC548()
{
  unint64_t result = qword_1EAB049E8;
  if (!qword_1EAB049E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB049E8);
  }
  return result;
}

unint64_t sub_1DCFDC59C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DD0490B8();
        swift_bridgeObjectRetain();
        sub_1DD0484F8();
        uint64_t v9 = sub_1DD049108();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDC774(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = *(void *)(a2 + 48) + 32 * v6;
        CGFloat v10 = *(double *)v9;
        CGFloat v11 = *(double *)(v9 + 8);
        CGFloat v12 = *(double *)(v9 + 16);
        CGFloat v13 = *(double *)(v9 + 24);
        sub_1DD0490B8();
        v31.origin.CGFloat x = v10;
        v31.origin.CGFloat y = v11;
        v31.size.width = v12;
        v31.size.height = v13;
        CGRectGetMinX(v31);
        sub_1DD0490F8();
        v32.origin.CGFloat x = v10;
        v32.origin.CGFloat y = v11;
        v32.size.width = v12;
        v32.size.height = v13;
        CGRectGetMaxX(v32);
        sub_1DD0490F8();
        v33.origin.CGFloat x = v10;
        v33.origin.CGFloat y = v11;
        v33.size.width = v12;
        v33.size.height = v13;
        CGRectGetMinY(v33);
        sub_1DD0490F8();
        v34.origin.CGFloat x = v10;
        v34.origin.CGFloat y = v11;
        v34.size.width = v12;
        v34.size.height = v13;
        CGRectGetMaxY(v34);
        sub_1DD0490F8();
        unint64_t result = sub_1DD049108();
        unint64_t v14 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v14 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
        uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
        if (v3 != v6 || v16 >= v17 + 2)
        {
          long long v18 = v17[1];
          *uint64_t v16 = *v17;
          v16[1] = v18;
        }
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(*(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8) + 72);
        int64_t v21 = v20 * v3;
        unint64_t result = v19 + v20 * v3;
        int64_t v22 = v20 * v6;
        unint64_t v23 = v19 + v20 * v6 + v20;
        if (v21 < v22 || result >= v23)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v21 == v22) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v14 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v14) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << result) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDCA14(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DD0490B8();
        swift_bridgeObjectRetain();
        sub_1DD0484F8();
        uint64_t v9 = sub_1DD049108();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          CGFloat v12 = (_OWORD *)(v11 + 16 * v3);
          CGFloat v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *CGFloat v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_DWORD *)(v14 + 4 * v3);
          uint64_t v16 = (_DWORD *)(v14 + 4 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDCBEC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1DD0490B8();
        swift_bridgeObjectRetain();
        sub_1DD0484F8();
        uint64_t v9 = sub_1DD049108();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        CGFloat v12 = (_OWORD *)(v11 + 16 * v3);
        CGFloat v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *CGFloat v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for LandmarkSignals(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        unint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDCDFC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1DD0490A8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for StorefrontSignals(0) - 8) + 72);
        int64_t v17 = v16 * v3;
        unint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDCFCC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_1DD0490B8();
        sub_1DD0484F8();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1DD049108();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        unint64_t v11 = (unsigned char *)(v10 + v3);
        CGFloat v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *unint64_t v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(sub_1DD046478() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0x1DCFDD314);
  }
  *(void *)(a2 + 16) = v24;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

void sub_1DCFDD340(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD046598();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1DD048AF8();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      CGRect v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1DCFDE090(&qword_1EAB03B88, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1DD048358();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            BOOL v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1DCFDD63C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD046598();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1DD048AF8();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      CGRect v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      uint64_t v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1DCFDE090(&qword_1EAB03B88, MEMORY[0x1E4F27990]);
        uint64_t v17 = sub_1DD048358();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (_OWORD *)(v21 + 16 * a1);
            BOOL v23 = (_OWORD *)(v21 + 16 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              *uint64_t v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1DCFDD934(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1DD0490B8();
        swift_bridgeObjectRetain();
        sub_1DD0484F8();
        uint64_t v9 = sub_1DD049108();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (unsigned char *)(v14 + v3);
          int64_t v16 = (unsigned char *)(v14 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1DCFDDB0C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1DD048AF8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        char v9 = *(unsigned char *)(*(void *)(a2 + 48) + v6);
        sub_1DD0490B8();
        sub_1DCFD8BF4(v9);
        sub_1DD0484F8();
        swift_bridgeObjectRelease();
        unint64_t result = sub_1DD049108();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1DCFDDCE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 40;
  uint64_t v28 = -(uint64_t)v3;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v24 = result + 40;
  unint64_t v25 = *(void *)(result + 16);
  do
  {
    uint64_t v26 = v7;
    if (v5 <= v3) {
      unint64_t v8 = v3;
    }
    else {
      unint64_t v8 = v5;
    }
    uint64_t v9 = -(uint64_t)v8;
    for (unint64_t i = (uint64_t *)(v6 + 16 * v5++); ; i += 2)
    {
      if (v9 + v5 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = *(i - 1);
      uint64_t v12 = *i;
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_1DD0483D8();
      id v15 = objc_msgSend(v14, sel_pathExtension);

      uint64_t v16 = sub_1DD048408();
      unint64_t v18 = v17;

      if (a3) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v11 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v11 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (!v11) {
        goto LABEL_20;
      }
LABEL_10:
      unint64_t result = swift_bridgeObjectRelease();
      ++v5;
      if (v28 + v5 == 1) {
        return v26;
      }
    }
    if (v16 != a2 || v18 != a3)
    {
      char v20 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v7 = v26;
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = sub_1DCFC4948(0, *(void *)(v26 + 16) + 1, 1);
      uint64_t v7 = v26;
    }
    unint64_t v22 = *(void *)(v7 + 16);
    unint64_t v21 = *(void *)(v7 + 24);
    if (v22 >= v21 >> 1)
    {
      unint64_t result = sub_1DCFC4948(v21 > 1, v22 + 1, 1);
      uint64_t v7 = v26;
    }
    *(void *)(v7 + 16) = v22 + 1;
    uint64_t v23 = v7 + 16 * v22;
    *(void *)(v23 + 32) = v13;
    *(void *)(v23 + 40) = v12;
    uint64_t v6 = v24;
    unint64_t v3 = v25;
  }
  while (v28 + v5);
  return v7;
}

uint64_t sub_1DCFDDEE4()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DCFDDF30()
{
  if (sub_1DD0485D8()) {
    return 27;
  }
  if (sub_1DD0485D8()) {
    return 28;
  }
  if (sub_1DD0485D8()) {
    return 29;
  }
  if (sub_1DD0485D8()) {
    return 30;
  }
  if (sub_1DD0485D8()) {
    return 31;
  }
  if (sub_1DD0485D8()) {
    return 32;
  }
  return 63;
}

uint64_t sub_1DCFDE018()
{
  unint64_t v0 = sub_1DD048FE8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3F) {
    return 63;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DCFDE06C@<X0>(void *a1@<X8>)
{
  return sub_1DCFD9BEC(*(void *)(v1 + 16), (char *)*(unsigned __int8 *)(v1 + 24), *(unsigned __int8 *)(v1 + 25), a1);
}

uint64_t sub_1DCFDE090(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCFDE0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrialIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TrialIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrialIdentifier()
{
  return &type metadata for TrialIdentifier;
}

uint64_t sub_1DCFDE244(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1DCE9DAF0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[6 * v9 + 4];
  if (a1 + 32 < v10 + 48 * v8 && v10 < a1 + 32 + 48 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDE3A4(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1DCE9DC18(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDE4FC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1DCE9DD28(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDE654(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1DCE9DE38(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[10 * v9 + 4];
  if (a1 + 32 < v10 + 80 * v8 && v10 < a1 + 32 + 80 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDE7B4(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9D7A0, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
}

uint64_t sub_1DCFDE7E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9E590(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDE93C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9E6B8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDEA98(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9E8C4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
}

uint64_t sub_1DCFDEAC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9D9E0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[4 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[4 * v2] && (unint64_t)v9 < a1 + 32 + 4 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 4 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    void *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDEC0C(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9EAD8, MEMORY[0x1E4F88D60]);
}

uint64_t sub_1DCFDEC38(uint64_t a1)
{
  return sub_1DCFDEC90(a1, (uint64_t (*)(void))sub_1DCE9EB0C, MEMORY[0x1E4F894B8]);
}

uint64_t sub_1DCFDEC64(uint64_t a1)
{
  return sub_1DCFDEC90(a1, (uint64_t (*)(void))sub_1DCE9EB40, MEMORY[0x1E4F89378]);
}

uint64_t sub_1DCFDEC90(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDEE50(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9EAA4, MEMORY[0x1E4F89018]);
}

uint64_t sub_1DCFDEE7C(unint64_t a1)
{
  return sub_1DCFDF4C8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1DCFE0E60);
}

uint64_t sub_1DCFDEE94(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9ED94, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
}

uint64_t sub_1DCFDEEC0(uint64_t a1)
{
  return sub_1DCFDEEEC(a1, (uint64_t (*)(void))sub_1DCE9EED8, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1DCFDEEEC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF0A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9EB74(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF20C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9EF0C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF354(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9E814(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF4B0(unint64_t a1)
{
  return sub_1DCFDF4C8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1DCFE1080);
}

uint64_t sub_1DCFDF4C8(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1E01AE8A0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    unint64_t *v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1DD0486D8();
}

uint64_t sub_1DCFDF69C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1DCE9F780(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[5 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[5 * v8] && (unint64_t)v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 40 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF7F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9F3F8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDF94C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1DCE9D55C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFDFAA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v76 = (uint64_t)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)&v72 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v75 = v7;
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v77 = a1 + v11;
  uint64_t v81 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  unint64_t v73 = v11;
  unint64_t v12 = v11 + 56;
  char v82 = v9;
  uint64_t v83 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v74 = v10;
  uint64_t v78 = a1;
  do
  {
    uint64_t v13 = *(void *)(a1 + v12);
    uint64_t v14 = *(void *)(v13 + 16);
    int64_t v15 = v83;
    int64_t v16 = v83[2];
    int64_t v17 = v16 + v14;
    if (__OFADD__(v16, v14))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      uint64_t result = sub_1DD048D18();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v17 > v15[3] >> 1)
    {
      if (v16 <= v17) {
        int64_t v19 = v16 + v14;
      }
      else {
        int64_t v19 = v16;
      }
      uint64_t v83 = sub_1DCE9DE38(isUniquelyReferenced_nonNull_native, v19, 1, v15);
    }
    uint64_t v20 = (uint64_t)v82;
    if (*(void *)(v13 + 16))
    {
      uint64_t v21 = v83[2];
      if ((v83[3] >> 1) - v21 < v14) {
        goto LABEL_52;
      }
      unint64_t v22 = (unint64_t)&v83[10 * v21 + 4];
      if (v13 + 32 < v22 + 80 * v14 && v22 < v13 + 32 + 80 * v14) {
        goto LABEL_54;
      }
      swift_arrayInitWithCopy();
      if (v14)
      {
        uint64_t v24 = v83[2];
        BOOL v25 = __OFADD__(v24, v14);
        uint64_t v26 = v24 + v14;
        if (v25) {
          goto LABEL_53;
        }
        v83[2] = v26;
      }
    }
    else if (v14)
    {
      goto LABEL_51;
    }
    swift_bridgeObjectRelease();
    v12 += v81;
    --v10;
    a1 = v78;
  }
  while (v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v30 = v74;
  uint64_t v29 = v75;
  unint64_t v31 = v73;
  do
  {
    unint64_t v79 = v28;
    uint64_t v80 = v27;
    sub_1DCD7AF64(v77 + v27 * v81, v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_beginAccess();
    uint64_t v34 = *(void *)(v20 + 48);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v36 = 156;
      uint64_t v37 = *(void *)(v34 + 16);
      while ((*(unsigned char *)(v34 + v36) & 1) == 0)
      {
        v36 += 160;
        if (!--v37) {
          goto LABEL_29;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v42 = v35 - 1;
      uint64_t v43 = 32;
      uint64_t v44 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v45 = (uint64_t)v83;
      while (1)
      {
        long long v46 = *(_OWORD *)(v34 + v43 + 16);
        v89[0] = *(_OWORD *)(v34 + v43);
        v89[1] = v46;
        long long v47 = *(_OWORD *)(v34 + v43 + 32);
        long long v48 = *(_OWORD *)(v34 + v43 + 48);
        long long v49 = *(_OWORD *)(v34 + v43 + 80);
        v89[4] = *(_OWORD *)(v34 + v43 + 64);
        v89[5] = v49;
        v89[2] = v47;
        v89[3] = v48;
        long long v50 = *(_OWORD *)(v34 + v43 + 96);
        long long v51 = *(_OWORD *)(v34 + v43 + 112);
        long long v52 = *(_OWORD *)(v34 + v43 + 128);
        *(_OWORD *)((char *)v90 + 13) = *(_OWORD *)(v34 + v43 + 141);
        v89[7] = v51;
        v90[0] = v52;
        v89[6] = v50;
        long long v53 = *(_OWORD *)(v34 + v43 + 112);
        v87[6] = *(_OWORD *)(v34 + v43 + 96);
        v87[7] = v53;
        v88[0] = *(_OWORD *)(v34 + v43 + 128);
        *(_OWORD *)((char *)v88 + 13) = *(_OWORD *)(v34 + v43 + 141);
        long long v54 = *(_OWORD *)(v34 + v43 + 48);
        v87[2] = *(_OWORD *)(v34 + v43 + 32);
        v87[3] = v54;
        long long v55 = *(_OWORD *)(v34 + v43 + 80);
        unsigned char v87[4] = *(_OWORD *)(v34 + v43 + 64);
        v87[5] = v55;
        long long v56 = *(_OWORD *)(v34 + v43 + 16);
        v87[0] = *(_OWORD *)(v34 + v43);
        v87[1] = v56;
        sub_1DCD32CC8((uint64_t)v89);
        sub_1DCFE0124(v87, v84, v45, (CGFloat *)v20, (uint64_t)v85);
        sub_1DCD32DD4((uint64_t)v89);
        sub_1DCD43B04((uint64_t)v85, (uint64_t)v91, &qword_1EBE85400);
        sub_1DCD43B04((uint64_t)v91, (uint64_t)v92, &qword_1EBE85400);
        if (sub_1DCD32CA4((uint64_t)v92) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_1DCE9D680(0, v44[2] + 1, 1, v44);
          }
          unint64_t v58 = v44[2];
          unint64_t v57 = v44[3];
          if (v58 >= v57 >> 1) {
            uint64_t v44 = sub_1DCE9D680((void *)(v57 > 1), v58 + 1, 1, v44);
          }
          sub_1DCD43B04((uint64_t)v91, (uint64_t)v85, &qword_1EBE85400);
          v44[2] = v58 + 1;
          unint64_t v59 = &v44[20 * v58];
          long long v60 = v85[1];
          uint64_t v59[2] = v85[0];
          v59[3] = v60;
          long long v61 = v85[5];
          long long v63 = v85[2];
          long long v62 = v85[3];
          v59[6] = v85[4];
          v59[7] = v61;
          v59[4] = v63;
          v59[5] = v62;
          long long v64 = v86[0];
          long long v66 = v85[6];
          long long v65 = v85[7];
          *(_OWORD *)((char *)v59 + 173) = *(_OWORD *)((char *)v86 + 13);
          v59[9] = v65;
          v59[10] = v64;
          v59[8] = v66;
          uint64_t v20 = (uint64_t)v82;
          uint64_t v45 = (uint64_t)v83;
        }
        if (!v42) {
          break;
        }
        --v42;
        v43 += 160;
      }
      swift_bridgeObjectRelease();
      *(void *)(v20 + 48) = v44;
      swift_bridgeObjectRelease();
      sub_1DCD7AF64(v20, v76, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v67 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v67 = sub_1DCE9D7A0(0, *(void *)(v67 + 16) + 1, 1, v67);
      }
      uint64_t v30 = v74;
      uint64_t v29 = v75;
      unint64_t v31 = v73;
      unint64_t v69 = *(void *)(v67 + 16);
      unint64_t v68 = *(void *)(v67 + 24);
      uint64_t v70 = v67;
      if (v69 >= v68 >> 1) {
        uint64_t v70 = sub_1DCE9D7A0(v68 > 1, v69 + 1, 1, v67);
      }
      *(void *)(v70 + 16) = v69 + 1;
      uint64_t v28 = v70;
      uint64_t v32 = v70 + v31 + v69 * v81;
      uint64_t v33 = v76;
    }
    else
    {
LABEL_29:
      sub_1DCD7AF64(v20, v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v38 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v38 = sub_1DCE9D7A0(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      uint64_t v41 = v38;
      if (v40 >= v39 >> 1) {
        uint64_t v41 = sub_1DCE9D7A0(v39 > 1, v40 + 1, 1, v38);
      }
      *(void *)(v41 + 16) = v40 + 1;
      uint64_t v28 = v41;
      uint64_t v32 = v41 + v31 + v40 * v81;
      uint64_t v33 = v29;
    }
    sub_1DCD36EE0(v33, v32);
    sub_1DCFE1930(v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v27 = v80 + 1;
  }
  while (v80 + 1 != v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1DCFE0124@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, CGFloat *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v111 = a4;
  uint64_t v83 = a3;
  uint64_t v10 = sub_1DD048068();
  uint64_t v81 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a1[7];
  long long v16 = a1[5];
  long long v99 = a1[6];
  long long v100 = v15;
  long long v17 = a1[7];
  v101[0] = a1[8];
  *(_OWORD *)((char *)v101 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v18 = a1[3];
  long long v19 = a1[1];
  v95[2] = a1[2];
  long long v96 = v18;
  long long v20 = a1[3];
  long long v21 = a1[5];
  long long v97 = a1[4];
  long long v98 = v21;
  long long v22 = a1[1];
  v95[0] = *a1;
  v95[1] = v22;
  long long v108 = v99;
  long long v109 = v17;
  v110[0] = a1[8];
  *(_OWORD *)((char *)v110 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v104 = v95[2];
  long long v105 = v20;
  long long v106 = v97;
  long long v107 = v16;
  long long v102 = v95[0];
  long long v103 = v19;
  if (BYTE12(v100) != 1)
  {
    long long v41 = a1[7];
    long long v92 = a1[6];
    long long v93 = v41;
    v94[0] = a1[8];
    *(_OWORD *)((char *)v94 + 13) = *(_OWORD *)((char *)a1 + 141);
    long long v42 = a1[3];
    _OWORD v88[2] = a1[2];
    long long v89 = v42;
    long long v43 = a1[5];
    long long v90 = a1[4];
    long long v91 = v43;
    long long v44 = *a1;
    long long v45 = a1[1];
LABEL_20:
    v88[0] = v44;
    v88[1] = v45;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v88);
    sub_1DCD43B04((uint64_t)v88, a5, &qword_1EBE85400);
    return sub_1DCD32CC8((uint64_t)v95);
  }
  uint64_t v23 = a5;
  uint64_t v79 = v10;
  uint64_t v24 = a2 + OBJC_IVAR____TtC18VisualIntelligence26DetectionUpdatingProcessor_config;
  uint64_t v25 = *(void *)(v24 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
  swift_beginAccess();
  uint64_t v26 = *(void *)(v25 + 16);
  int v27 = LOBYTE(v95[0]);
  uint64_t v28 = sub_1DCD9C35C(v95[0]);
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v26 + 16);
  int v80 = v27;
  if (v31)
  {
    uint64_t v32 = v28;
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1DCEAD1A4(v32, v30);
    if (v34)
    {
      unint64_t v35 = v33;
      uint64_t v78 = v23;
      uint64_t v36 = *(void *)(v26 + 56);
      uint64_t v37 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v77 = v6;
      uint64_t v39 = v38;
      uint64_t v40 = v36 + *(void *)(v38 + 72) * v35;
      a5 = v78;
      sub_1DCD7AF64(v40, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v14, 0, 1, v37);
      uint64_t v6 = v77;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    uint64_t v37 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v14, 1, 1, v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v14, 1, 1, v37);
  }
  swift_bridgeObjectRelease();
LABEL_9:
  type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v14, 1, v37) == 1)
  {
    sub_1DCD7AEA4((uint64_t)v14);
LABEL_19:
    long long v92 = v108;
    long long v93 = v109;
    v94[0] = v110[0];
    *(_OWORD *)((char *)v94 + 13) = *(_OWORD *)((char *)v110 + 13);
    _OWORD v88[2] = v104;
    long long v89 = v105;
    long long v90 = v106;
    long long v91 = v107;
    long long v44 = v102;
    long long v45 = v103;
    goto LABEL_20;
  }
  long long v46 = (float *)(*(void *)&v14[*(int *)(v37 + 20)]
                + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__overlapRatioThreshold);
  swift_beginAccess();
  float v47 = *v46;
  sub_1DCFE1930((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  if (v47 <= 0.0) {
    goto LABEL_19;
  }
  sub_1DCD32CC8((uint64_t)v95);
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_1DCFE15AC(v48, (uint64_t)v95, v111, v47);
  sub_1DCD32DD4((uint64_t)v95);
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v49 + 16);
  if (!v50)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v77 = v6;
  uint64_t v78 = a5;
  uint64_t v51 = *(void *)(v49 + 88);
  unint64_t v52 = *(void *)(v49 + 96);
  float v53 = *(float *)(v49 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = v50 - 1;
  if (v50 != 1)
  {
    swift_bridgeObjectRetain();
    long long v55 = (_DWORD *)(v49 + 184);
    do
    {
      float v56 = *(float *)v55;
      if (v53 < *(float *)v55)
      {
        uint64_t v51 = *((void *)v55 - 2);
        unint64_t v57 = *((void *)v55 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v52 = v57;
        float v53 = v56;
      }
      v55 += 20;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v59 = v82;
  sub_1DCDB40EC(v82);
  sub_1DCD32CC8((uint64_t)v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v60 = sub_1DD048048();
  os_log_type_t v61 = sub_1DD048848();
  int v62 = v61;
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v84 = v83;
    *(_DWORD *)uint64_t v63 = 136316162;
    v75[1] = v63 + 4;
    os_log_t v76 = v60;
    long long v64 = v111;
    swift_beginAccess();
    long long v65 = *((_OWORD *)v64 + 1);
    v88[0] = *(_OWORD *)v64;
    v88[1] = v65;
    LODWORD(v111) = v62;
    uint64_t v66 = NormalizedRect.loggingDescription.getter();
    *(void *)&v88[0] = sub_1DCED7FA0(v66, v67, &v84);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2080;
    uint64_t v68 = sub_1DCD9C35C(v80);
    *(void *)&v88[0] = sub_1DCED7FA0(v68, v69, &v84);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v95);
    sub_1DCD32DD4((uint64_t)v95);
    *(_WORD *)(v63 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v88[0] = sub_1DCED7FA0(v51, v52, &v84);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v63 + 32) = 2048;
    *(double *)int v88 = *((float *)&v100 + 1);
    sub_1DD048A28();
    sub_1DCD32DD4((uint64_t)v95);
    sub_1DCD32DD4((uint64_t)v95);
    *(_WORD *)(v63 + 42) = 2048;
    *(double *)int v88 = v53;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    os_log_t v70 = v76;
    _os_log_impl(&dword_1DCCF9000, v76, (os_log_type_t)v111, "Update %s domain %s detection %s score from %f to %f", (uint8_t *)v63, 0x34u);
    uint64_t v71 = v83;
    swift_arrayDestroy();
    uint64_t v72 = v71;
    char v73 = v80;
    MEMORY[0x1E01B07E0](v72, -1, -1);
    MEMORY[0x1E01B07E0](v63, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v79);
    uint64_t v74 = v78;
  }
  else
  {
    sub_1DCD32DD4((uint64_t)v95);
    sub_1DCD32DD4((uint64_t)v95);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1DCD32DD4((uint64_t)v95);
    sub_1DCD32DD4((uint64_t)v95);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v59, v79);
    uint64_t v74 = v78;
    char v73 = v80;
  }
  sub_1DCD32CC8((uint64_t)v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v88[0]) = v73;
  *(_DWORD *)((char *)v88 + 1) = v84;
  DWORD1(v88[0]) = *(_DWORD *)((char *)&v84 + 3);
  *(_OWORD *)((char *)v88 + 8) = *(_OWORD *)((char *)v95 + 8);
  *(_OWORD *)((char *)&v88[1] + 8) = *(_OWORD *)((char *)&v95[1] + 8);
  BYTE8(v88[2]) = BYTE8(v95[2]);
  HIDWORD(v88[2]) = *(_DWORD *)((char *)v87 + 3);
  *(_DWORD *)((char *)&v88[2] + 9) = v87[0];
  long long v89 = v96;
  long long v90 = v97;
  long long v91 = v98;
  long long v92 = v99;
  *(void *)&long long v93 = __PAIR64__(LODWORD(v53), v100);
  DWORD2(v93) = DWORD2(v100);
  BYTE12(v93) = 1;
  *(_WORD *)((char *)&v93 + 13) = *(_WORD *)((char *)&v100 + 13);
  HIBYTE(v93) = HIBYTE(v100);
  LOWORD(v94[0]) = v101[0];
  *(_DWORD *)((char *)v94 + 2) = v85;
  WORD3(v94[0]) = v86;
  *(_OWORD *)((char *)v94 + 8) = *(_OWORD *)((char *)v101 + 8);
  DWORD2(v94[1]) = DWORD2(v101[1]);
  BYTE12(v94[1]) = BYTE12(v101[1]);
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v88);
  return sub_1DCD43B04((uint64_t)v88, v74, &qword_1EBE85400);
}

uint64_t sub_1DCFE0AF4()
{
  sub_1DCFE1930(v0 + OBJC_IVAR____TtC18VisualIntelligence26DetectionUpdatingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCFE0B6C()
{
  return type metadata accessor for DetectionUpdatingProcessor();
}

uint64_t type metadata accessor for DetectionUpdatingProcessor()
{
  uint64_t result = qword_1EAB049F8;
  if (!qword_1EAB049F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCFE0BC0()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCFE0C50(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DCE05490(&qword_1EAB04A30, &qword_1EAB04A28);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04A28);
          uint64_t v12 = sub_1DCFE12A0(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for EspressoRequest(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFE0E60(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DCE05490(&qword_1EAB04A20, &qword_1EAB04A18);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04A18);
          uint64_t v12 = sub_1DCFE130C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DCD95648(0, (unint64_t *)&qword_1EAB02A10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFE1080(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1DCE05490(&qword_1EAB04A10, &qword_1EAB04A08);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04A08);
          uint64_t v12 = sub_1DCFE1374(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1DCD95648(0, (unint64_t *)&qword_1EBE85060);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t (*sub_1DCFE12A0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1DCFE1424(v6, a2, a3);
  return sub_1DCFE1308;
}

uint64_t (*sub_1DCFE130C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1DCFE14AC(v6, a2, a3);
  return sub_1DCFE1308;
}

uint64_t (*sub_1DCFE1374(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1DCFE152C(v6, a2, a3);
  return sub_1DCFE1308;
}

void sub_1DCFE13DC(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1DCFE1424(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1E01AE890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_1DCFE14A4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFE14A4()
{
  return swift_release();
}

void (*sub_1DCFE14AC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E01AE890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for PixelImage;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1DCFE152C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1E01AE890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s18VisualIntelligence10PixelImageVwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFE15AC(uint64_t a1, uint64_t a2, CGFloat *a3, float a4)
{
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (v6)
  {
    unint64_t v8 = 0;
    uint64_t v9 = a1 + 56;
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v45 = a1 + 56;
    while (1)
    {
      uint64_t v46 = v10;
      uint64_t v11 = v8 <= v6 ? v6 : v8;
      uint64_t v12 = v9 + 80 * v8;
      unint64_t v13 = v8;
      while (1)
      {
        if (v11 == v13)
        {
          __break(1u);
          return result;
        }
        uint64_t v53 = *(void *)(v12 - 24);
        CGFloat v14 = *(double *)(v12 - 16);
        CGFloat v15 = *(double *)(v12 - 8);
        CGFloat v16 = *(double *)v12;
        CGFloat v17 = *(double *)(v12 + 8);
        uint64_t v18 = *(void *)(v12 + 16);
        uint64_t v19 = *(void *)(v12 + 24);
        uint64_t v21 = *(void *)(v12 + 32);
        uint64_t v20 = *(void *)(v12 + 40);
        float v22 = *(float *)(v12 + 48);
        sub_1DCD43B04(a2 + 80, (uint64_t)v54, &qword_1EBE84A30);
        uint64_t result = sub_1DCD43B04((uint64_t)v54, (uint64_t)v55, &qword_1EBE84A30);
        if (v56)
        {
          if (v21 == v57 && v20 == v58 || (uint64_t result = sub_1DD048FA8(), (result & 1) != 0))
          {
            if (*(float *)(a2 + 116) < v22) {
              break;
            }
          }
        }
LABEL_9:
        ++v13;
        v12 += 80;
        if (v6 == v13) {
          return v46;
        }
      }
      float v47 = v22;
      CGFloat v23 = *a3;
      CGFloat v24 = a3[1];
      CGFloat v26 = a3[2];
      CGFloat v25 = a3[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60.origin.CGFloat x = v14;
      v60.origin.CGFloat y = v15;
      v60.size.width = v16;
      v60.size.height = v17;
      CGFloat Width = CGRectGetWidth(v60);
      CGFloat v28 = v14;
      double v29 = Width;
      CGFloat v51 = v15;
      CGFloat v52 = v28;
      v61.origin.CGFloat x = v28;
      v61.origin.CGFloat y = v15;
      v61.size.width = v16;
      v61.size.height = v17;
      double v30 = v29 * CGRectGetHeight(v61);
      v62.origin.CGFloat x = v23;
      v62.origin.CGFloat y = v24;
      v62.size.width = v26;
      v62.size.height = v25;
      double v31 = CGRectGetWidth(v62);
      v63.origin.CGFloat x = v23;
      v63.origin.CGFloat y = v24;
      v63.size.width = v26;
      v63.size.height = v25;
      double Height = CGRectGetHeight(v63);
      double v48 = v30;
      if (v30 <= 0.0) {
        break;
      }
      double v33 = v31 * Height;
      if (v33 <= 0.0) {
        break;
      }
      v64.origin.CGFloat y = v51;
      v64.origin.CGFloat x = v52;
      v64.size.width = v16;
      v64.size.height = v17;
      v68.origin.CGFloat x = v23;
      v68.origin.CGFloat y = v24;
      v68.size.width = v26;
      v68.size.height = v25;
      CGRect v65 = CGRectIntersection(v64, v68);
      CGFloat x = v65.origin.x;
      CGFloat y = v65.origin.y;
      CGFloat v36 = v65.size.width;
      CGFloat v37 = v65.size.height;
      if (CGRectIsNull(v65)) {
        break;
      }
      v66.origin.CGFloat x = x;
      v66.origin.CGFloat y = y;
      v66.size.width = v36;
      v66.size.height = v37;
      double v38 = CGRectGetWidth(v66);
      v67.origin.CGFloat x = x;
      v67.origin.CGFloat y = y;
      v67.size.width = v36;
      v67.size.height = v37;
      double v39 = v38 * CGRectGetHeight(v67);
      double v40 = v48;
      if (v33 < v48) {
        double v40 = v33;
      }
      float v41 = v39 / v40;
      if (v41 <= a4) {
        goto LABEL_8;
      }
LABEL_22:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = v46;
      uint64_t v59 = v46;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1DCFC4968(0, *(void *)(v46 + 16) + 1, 1);
        uint64_t v10 = v59;
      }
      unint64_t v43 = *(void *)(v10 + 16);
      unint64_t v42 = *(void *)(v10 + 24);
      if (v43 >= v42 >> 1)
      {
        uint64_t result = sub_1DCFC4968(v42 > 1, v43 + 1, 1);
        uint64_t v10 = v59;
      }
      *(void *)(v10 + 16) = v43 + 1;
      uint64_t v44 = v10 + 80 * v43;
      *(void *)(v44 + 32) = v53;
      unint64_t v8 = v13 + 1;
      *(CGFloat *)(v44 + 40) = v52;
      *(CGFloat *)(v44 + 48) = v51;
      *(CGFloat *)(v44 + 56) = v16;
      *(CGFloat *)(v44 + 64) = v17;
      *(void *)(v44 + 72) = v18;
      *(void *)(v44 + 80) = v19;
      *(void *)(v44 + 88) = v21;
      *(void *)(v44 + 96) = v20;
      *(float *)(v44 + 104) = v47;
      uint64_t v9 = v45;
      if (v6 - 1 == v13) {
        return v10;
      }
    }
    if (a4 < 0.0) {
      goto LABEL_22;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1DCFE1930(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCFE1994(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D08);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCFE1EEC();
  sub_1DD049138();
  uint64_t v15 = a2;
  char v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
  sub_1DCE2DA30(&qword_1EBE868A0);
  sub_1DD048F18();
  if (!v4)
  {
    char v13 = 1;
    sub_1DD048EB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1DCFE1B4C()
{
  if (*v0) {
    return 0x4E52556C65646F6DLL;
  }
  else {
    return 0x7365727574616566;
  }
}

uint64_t sub_1DCFE1B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCFE23EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCFE1BA8(uint64_t a1)
{
  unint64_t v2 = sub_1DCFE1EEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCFE1BE4(uint64_t a1)
{
  unint64_t v2 = sub_1DCFE1EEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCFE1C20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if (!sub_1DCFB799C(*a1, *a2)) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1DD048FA8();
}

uint64_t sub_1DCFE1CB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCFE24E0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1DCFE1CE0(void *a1)
{
  return sub_1DCFE1994(a1, *v1, v1[1], v1[2]);
}

uint64_t type metadata accessor for EmbeddingPostProcessor()
{
  return self;
}

uint64_t destroy for EmbeddingInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18VisualIntelligence13EmbeddingInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EmbeddingInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for EmbeddingInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmbeddingInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmbeddingInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbeddingInfo()
{
  return &type metadata for EmbeddingInfo;
}

unint64_t sub_1DCFE1EEC()
{
  unint64_t result = qword_1EBE82CE0;
  if (!qword_1EBE82CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82CE0);
  }
  return result;
}

unint64_t sub_1DCFE1F40(void *a1)
{
  id v3 = objc_msgSend(a1, sel_shape);
  sub_1DCD56524();
  uint64_t v4 = sub_1DD0486B8();

  id v5 = objc_msgSend(a1, sel_dataType);
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v7 = sub_1DCE4FFBC(v4, (uint64_t)v5);
  if (v1) {
    return (unint64_t)v7;
  }
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_count);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = result;
    if (result)
    {
      uint64_t v10 = 0;
      float v11 = 0.0;
      do
      {
        uint64_t v12 = v10 + 1;
        id v13 = objc_msgSend(a1, sel_objectAtIndexedSubscript_, v10);
        objc_msgSend(v13, sel_floatValue);
        float v15 = v14;

        id v16 = objc_msgSend(a1, sel_objectAtIndexedSubscript_, v10);
        objc_msgSend(v16, sel_floatValue);
        float v18 = v17;

        float v11 = v11 + (float)(v15 * v18);
        uint64_t v10 = v12;
      }
      while (v9 != v12);
    }
    else
    {
      float v11 = 0.0;
    }
    float v19 = sqrtf(v11);
    if (v19 > 1.0e-12) {
      float v20 = v19;
    }
    else {
      float v20 = 1.0e-12;
    }
    unint64_t result = (unint64_t)objc_msgSend(v7, sel_count);
    if ((result & 0x8000000000000000) == 0)
    {
      unint64_t v21 = result;
      if (result)
      {
        uint64_t v22 = 0;
        do
        {
          id v23 = objc_msgSend(a1, sel_objectAtIndexedSubscript_, v22);
          objc_msgSend(v23, sel_floatValue);
          float v25 = v24;

          id v26 = objc_allocWithZone(NSNumber);
          *(float *)&double v27 = v25 / v20;
          id v28 = objc_msgSend(v26, sel_initWithFloat_, v27);
          objc_msgSend(v7, sel_setObject_atIndexedSubscript_, v28, v22);

          ++v22;
        }
        while (v21 != v22);
      }
      return (unint64_t)v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCFE2178(void *a1)
{
  id v2 = objc_msgSend(a1, sel_count);
  uint64_t result = sub_1DCDE1CDC((unint64_t)v2, 0);
  if (__OFSUB__(v2, 1))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((((unint64_t)v2 - 1) & 0x8000000000000000) == 0)
  {
    uint64_t v4 = result;
    unint64_t v5 = 0;
    while (1)
    {
      id v6 = objc_msgSend(a1, sel_objectAtIndexedSubscript_, v5);
      objc_msgSend(v6, sel_floatValue);
      int v8 = v7;

      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCEC1C50(v4);
        uint64_t v4 = result;
      }
      if (v5 >= *(void *)(v4 + 16)) {
        break;
      }
      *(_DWORD *)(v4 + 4 * v5++ + 32) = v8;
      if (v2 == (id)v5) {
        return v4;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1DCFE2268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_1DCEAD1A4(a2, a3);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v11 = 0xD000000000000016;
    *(void *)(v11 + 8) = 0x80000001DD06D4E0;
    *(unsigned char *)(v11 + 16) = 4;
    swift_willThrow();
    return a2;
  }
  id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1DCFE1F40(v9);
  if (v3)
  {
  }
  else
  {
    id v13 = v10;
    a2 = sub_1DCFE2178(v10);
    type metadata accessor for MLModelInfo(0);
    swift_bridgeObjectRetain();
    sub_1DD048548();
  }
  return a2;
}

uint64_t sub_1DCFE23EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365727574616566 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E52556C65646F6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCFE24E0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04A38);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1DCFE1EEC();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
    v9[7] = 0;
    sub_1DCE2DA30(&qword_1EAB03748);
    sub_1DD048E28();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1DD048DC8();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for EmbeddingInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCFE27F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbeddingInfo.CodingKeys()
{
  return &type metadata for EmbeddingInfo.CodingKeys;
}

unint64_t sub_1DCFE282C()
{
  unint64_t result = qword_1EAB04A40;
  if (!qword_1EAB04A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04A40);
  }
  return result;
}

unint64_t sub_1DCFE2884()
{
  unint64_t result = qword_1EBE82CF0;
  if (!qword_1EBE82CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82CF0);
  }
  return result;
}

unint64_t sub_1DCFE28DC()
{
  unint64_t result = qword_1EBE82CE8;
  if (!qword_1EBE82CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82CE8);
  }
  return result;
}

void sub_1DCFE2930(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v2 - 8);
  float v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B40);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B38);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  float v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v24 - v15;
  os_unfair_lock_t v29 = (os_unfair_lock_t)(*(void *)(v1 + *(void *)(*(void *)v1 + 184)) + 16);
  os_unfair_lock_lock(v29);
  uint64_t v17 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  sub_1DCD2889C(v17, (uint64_t)v9, &qword_1EBE86B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE86B40);
    float v18 = *(void (**)(uint64_t))(v1 + *(void *)(*(void *)v1 + 160));
    if (v18)
    {
      uint64_t v19 = swift_retain();
      uint64_t v20 = (uint64_t)v25;
      unint64_t v21 = v27;
      v18(v19);
      if (v21)
      {
        *uint64_t v7 = v21;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        swift_beginAccess();
        id v22 = v21;
        sub_1DCE09968((uint64_t)v7, v17, &qword_1EBE86B40);
        swift_endAccess();
        swift_willThrow();
        sub_1DCD33E90((uint64_t)v18);
      }
      else
      {
        sub_1DCD33E90((uint64_t)v18);
        sub_1DCD2889C(v20, (uint64_t)v7, &qword_1EBE85DB0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        swift_beginAccess();
        sub_1DCE09968((uint64_t)v7, v17, &qword_1EBE86B40);
        swift_endAccess();
        sub_1DCD43B04(v20, v26, &qword_1EBE85DB0);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v23 = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v16, &qword_1EBE86B38);
    sub_1DCD2889C((uint64_t)v16, (uint64_t)v14, &qword_1EBE86B38);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = *v14;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1DCD43B04((uint64_t)v14, v26, &qword_1EBE85DB0);
    }
    sub_1DCD2479C((uint64_t)v16, &qword_1EBE86B38);
  }
  os_unfair_lock_unlock(v29);
}

void *sub_1DCFE2DA4()
{
  return sub_1DCFE3274((void (*)(void, void *))sub_1DCD33E90, (void (*)(uint64_t, uint64_t))sub_1DCFE4BBC);
}

void sub_1DCFE2DE4(uint64_t a1@<X8>)
{
  void (*v6)(long long *__return_ptr, uint64_t);
  uint64_t v7;
  id v8;
  unsigned char *v9;
  long long v10[2];
  unsigned __int8 v11;
  void v12[5];
  char v13;

  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v1 + 112) + 16);
  os_unfair_lock_lock(v4);
  uint64_t v5 = v1 + 24;
  swift_beginAccess();
  sub_1DCD2889C(v1 + 24, (uint64_t)v10, &qword_1EBE853D0);
  if (v11 == 255)
  {
    sub_1DCD2479C((uint64_t)v10, &qword_1EBE853D0);
    uint64_t v6 = *(void (**)(long long *__return_ptr, uint64_t))(v1 + 72);
    if (v6)
    {
      uint64_t v7 = swift_retain();
      v6(v10, v7);
      if (v2)
      {
        v12[0] = v2;
        uint64_t v13 = 1;
        swift_beginAccess();
        uint64_t v8 = v2;
        sub_1DCE09968((uint64_t)v12, v5, &qword_1EBE853D0);
        swift_endAccess();
        swift_willThrow();
        sub_1DCD33E90((uint64_t)v6);
      }
      else
      {
        sub_1DCD33E90((uint64_t)v6);
        sub_1DCD3A3BC((uint64_t)v10, (uint64_t)v12);
        uint64_t v13 = 0;
        swift_beginAccess();
        sub_1DCE09968((uint64_t)v12, v5, &qword_1EBE853D0);
        swift_endAccess();
        sub_1DCD3A4DC(v10, a1);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v9 = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DCD43B04((uint64_t)v10, (uint64_t)v12, &qword_1EBE853C8);
    sub_1DCD2889C((uint64_t)v12, (uint64_t)v10, &qword_1EBE853C8);
    if (v11)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1DCD3A4DC(v10, a1);
    }
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE853C8);
  }
  os_unfair_lock_unlock(v4);
}

void *sub_1DCFE3010()
{
  return sub_1DCFE3274((void (*)(void, void *))sub_1DCD33E90, (void (*)(uint64_t, uint64_t))sub_1DCD82558);
}

void *sub_1DCFE3050()
{
  return sub_1DCFE3274((void (*)(void, void *))sub_1DCFE4BC4, (void (*)(uint64_t, uint64_t))sub_1DCFE4BBC);
}

void *sub_1DCFE3090()
{
  return sub_1DCFE3CE8((void (*)(void, void *))sub_1DCD33E90, (void (*)(uint64_t, uint64_t))sub_1DCFE49EC);
}

uint64_t sub_1DCFE30D0()
{
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id v10;
  unsigned char *v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v15;

  uint64_t v2 = v0;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v0 + 80) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  int v4 = *(unsigned __int8 *)(v0 + 32);
  if (v4 == 255)
  {
    uint64_t v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v0 + 40);
    if (v5)
    {
      uint64_t v0 = *(void *)(v0 + 48);
      uint64_t v6 = swift_retain();
      v5(&v15, v6);
      if (v1)
      {
        uint64_t v7 = *(void **)(v2 + 24);
        *(void *)(v2 + 24) = v1;
        uint64_t v8 = *(unsigned char *)(v2 + 32);
        *(unsigned char *)(v2 + 32) = 1;
        id v9 = v1;
        sub_1DCFE4A2C(v7, v8);
        swift_willThrow();
        sub_1DCD33E90((uint64_t)v5);
      }
      else
      {
        sub_1DCD33E90((uint64_t)v5);
        uint64_t v0 = v15;
        uint64_t v12 = *(void **)(v2 + 24);
        *(void *)(v2 + 24) = v15;
        uint64_t v13 = *(unsigned char *)(v2 + 32);
        *(unsigned char *)(v2 + 32) = 0;
        swift_bridgeObjectRetain();
        sub_1DCFE4A2C(v12, v13);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *uint64_t v11 = 0;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v0 = *(void *)(v0 + 24);
    if (v4)
    {
      uint64_t v15 = *(void *)(v2 + 24);
      uint64_t v10 = (id)v0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  os_unfair_lock_unlock(v3);
  return v0;
}

void *sub_1DCFE3274(void (*a1)(void, void *), void (*a2)(uint64_t, uint64_t))
{
  void (*v10)(void **__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;

  uint64_t v6 = v2;
  uint64_t v7 = (os_unfair_lock_s *)(*(void *)(v2 + 80) + 16);
  os_unfair_lock_lock(v7);
  uint64_t v8 = (void *)(v2 + 24);
  swift_beginAccess();
  int v9 = *(unsigned __int8 *)(v6 + 32);
  if (v9 == 255)
  {
    uint64_t v10 = *(void (**)(void **__return_ptr, uint64_t))(v6 + 40);
    if (v10)
    {
      uint64_t v8 = *(void **)(v6 + 48);
      uint64_t v11 = swift_retain();
      v10(&v20, v11);
      if (v3)
      {
        uint64_t v12 = *(void *)(v6 + 24);
        *(void *)(v6 + 24) = v3;
        uint64_t v13 = *(unsigned __int8 *)(v6 + 32);
        *(unsigned char *)(v6 + 32) = 1;
        float v14 = v3;
        a2(v12, v13);
        swift_willThrow();
        a1(v10, v8);
      }
      else
      {
        a1(v10, v8);
        uint64_t v8 = v20;
        uint64_t v17 = *(void *)(v6 + 24);
        *(void *)(v6 + 24) = v20;
        float v18 = *(unsigned __int8 *)(v6 + 32);
        *(unsigned char *)(v6 + 32) = 0;
        swift_bridgeObjectRetain();
        a2(v17, v18);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v16 = 0;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)*v8;
    if (v9)
    {
      uint64_t v20 = v8;
      uint64_t v15 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  os_unfair_lock_unlock(v7);
  return v8;
}

void sub_1DCFE343C(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v2 - 8);
  float v25 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B50);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  int v9 = (char *)&v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B48);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v24 - v15;
  os_unfair_lock_t v29 = (os_unfair_lock_t)(*(void *)(v1 + *(void *)(*(void *)v1 + 184)) + 16);
  os_unfair_lock_lock(v29);
  uint64_t v17 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  sub_1DCD2889C(v17, (uint64_t)v9, &qword_1EBE86B50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE86B50);
    float v18 = *(void (**)(uint64_t))(v1 + *(void *)(*(void *)v1 + 160));
    if (v18)
    {
      uint64_t v19 = swift_retain();
      uint64_t v20 = (uint64_t)v25;
      unint64_t v21 = v27;
      v18(v19);
      if (v21)
      {
        *uint64_t v6 = v21;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
        swift_beginAccess();
        id v22 = v21;
        sub_1DCE09968((uint64_t)v6, v17, &qword_1EBE86B50);
        swift_endAccess();
        swift_willThrow();
        sub_1DCD33E90((uint64_t)v18);
      }
      else
      {
        sub_1DCD33E90((uint64_t)v18);
        sub_1DCFE4AF4(v20, (uint64_t)v6);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
        swift_beginAccess();
        sub_1DCE09968((uint64_t)v6, v17, &qword_1EBE86B50);
        swift_endAccess();
        sub_1DCFE4B58(v20, v26);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v23 = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v16, &qword_1EBE86B48);
    sub_1DCD2889C((uint64_t)v16, (uint64_t)v13, &qword_1EBE86B48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = *v13;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1DCFE4B58((uint64_t)v13, v26);
    }
    sub_1DCD2479C((uint64_t)v16, &qword_1EBE86B48);
  }
  os_unfair_lock_unlock(v29);
}

void sub_1DCFE3894()
{
  void (*v6)(void **__return_ptr, uint64_t);
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  id v12;
  unsigned char *v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;

  uint64_t v2 = v0;
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v0 + 80) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = (void **)(v0 + 24);
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v2 + 32);
  if (v5 != 255)
  {
    uint64_t v11 = *v4;
    if ((v5 & 1) == 0)
    {
      v11;
      os_unfair_lock_unlock(v3);
      return;
    }
    uint64_t v17 = v11;
    uint64_t v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
    swift_willThrowTypedImpl();
    goto LABEL_9;
  }
  uint64_t v6 = *(void (**)(void **__return_ptr, uint64_t))(v2 + 40);
  if (!v6)
  {
    sub_1DCD5C460();
    swift_allocError();
    *uint64_t v13 = 0;
    swift_willThrow();
    goto LABEL_9;
  }
  uint64_t v7 = swift_retain();
  v6(&v17, v7);
  if (v1)
  {
    uint64_t v8 = *(void **)(v2 + 24);
    *(void *)(v2 + 24) = v1;
    int v9 = *(unsigned char *)(v2 + 32);
    *(unsigned char *)(v2 + 32) = 1;
    uint64_t v10 = v1;
    sub_1DCD5C4B4(v8, v9);
    swift_willThrow();
    sub_1DCD33E90((uint64_t)v6);
LABEL_9:
    os_unfair_lock_unlock(v3);
    return;
  }
  sub_1DCD33E90((uint64_t)v6);
  uint64_t v14 = v17;
  uint64_t v15 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = v17;
  id v16 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 0;
  v14;
  sub_1DCD5C4B4(v15, v16);
  os_unfair_lock_unlock(v3);
}

void *sub_1DCFE3A4C()
{
  return sub_1DCFE3CE8((void (*)(void, void *))sub_1DCD33E90, (void (*)(uint64_t, uint64_t))sub_1DCFE4BC0);
}

void *sub_1DCFE3A8C()
{
  return sub_1DCFE3B0C((void (*)(void, void *))sub_1DCFE4BC4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DCFE4ABC);
}

void *sub_1DCFE3ACC()
{
  return sub_1DCFE3B0C((void (*)(void, void *))sub_1DCFE4BC4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DCFE4BCC);
}

void *sub_1DCFE3B0C(void (*a1)(void, void *), void (*a2)(uint64_t, uint64_t, uint64_t))
{
  void (*v10)(void *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void v22[2];
  uint64_t v23;

  uint64_t v6 = v2;
  uint64_t v7 = (os_unfair_lock_s *)(*(void *)(v2 + 88) + 16);
  os_unfair_lock_lock(v7);
  uint64_t v8 = (void *)(v2 + 24);
  swift_beginAccess();
  int v9 = *(unsigned __int8 *)(v6 + 40);
  if (v9 == 255)
  {
    uint64_t v10 = *(void (**)(void *__return_ptr, uint64_t))(v6 + 48);
    if (v10)
    {
      uint64_t v8 = *(void **)(v6 + 56);
      uint64_t v11 = swift_retain();
      v10(v22, v11);
      if (v3)
      {
        uint64_t v12 = *(void *)(v6 + 32);
        id v23 = *(void *)(v6 + 24);
        *(void *)(v6 + 24) = v3;
        *(void *)(v6 + 32) = 0;
        uint64_t v13 = *(unsigned __int8 *)(v6 + 40);
        *(unsigned char *)(v6 + 40) = 1;
        uint64_t v14 = v3;
        a2(v23, v12, v13);
        swift_willThrow();
        a1(v10, v8);
      }
      else
      {
        a1(v10, v8);
        uint64_t v8 = (void *)v22[0];
        uint64_t v17 = v22[1];
        float v18 = *(void *)(v6 + 24);
        uint64_t v19 = *(void *)(v6 + 32);
        *(void *)(v6 + 24) = v22[0];
        *(void *)(v6 + 32) = v17;
        uint64_t v20 = *(unsigned __int8 *)(v6 + 40);
        *(unsigned char *)(v6 + 40) = 0;
        swift_unknownObjectRetain();
        a2(v18, v19, v20);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v16 = 0;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)*v8;
    if (v9)
    {
      v22[0] = v8;
      uint64_t v15 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      swift_unknownObjectRetain();
    }
  }
  os_unfair_lock_unlock(v7);
  return v8;
}

void *sub_1DCFE3CE8(void (*a1)(void, void *), void (*a2)(uint64_t, uint64_t))
{
  void (*v10)(void **__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unsigned char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;

  uint64_t v6 = v2;
  uint64_t v7 = (os_unfair_lock_s *)(*(void *)(v2 + 80) + 16);
  os_unfair_lock_lock(v7);
  uint64_t v8 = (void *)(v2 + 24);
  swift_beginAccess();
  int v9 = *(unsigned __int8 *)(v6 + 32);
  if (v9 == 255)
  {
    uint64_t v10 = *(void (**)(void **__return_ptr, uint64_t))(v6 + 40);
    if (v10)
    {
      uint64_t v8 = *(void **)(v6 + 48);
      uint64_t v11 = swift_retain();
      v10(&v20, v11);
      if (v3)
      {
        uint64_t v12 = *(void *)(v6 + 24);
        *(void *)(v6 + 24) = v3;
        uint64_t v13 = *(unsigned __int8 *)(v6 + 32);
        *(unsigned char *)(v6 + 32) = 1;
        uint64_t v14 = v3;
        a2(v12, v13);
        swift_willThrow();
        a1(v10, v8);
      }
      else
      {
        a1(v10, v8);
        uint64_t v8 = v20;
        uint64_t v17 = *(void *)(v6 + 24);
        *(void *)(v6 + 24) = v20;
        float v18 = *(unsigned __int8 *)(v6 + 32);
        *(unsigned char *)(v6 + 32) = 0;
        swift_retain();
        a2(v17, v18);
      }
    }
    else
    {
      sub_1DCD5C460();
      swift_allocError();
      *id v16 = 0;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)*v8;
    if (v9)
    {
      uint64_t v20 = v8;
      uint64_t v15 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
    }
    else
    {
      swift_retain();
    }
  }
  os_unfair_lock_unlock(v7);
  return v8;
}

id VITextLookupFlowCompatible.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id VITextLookupFlowCompatible.init()()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86280);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = -1;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 40) = sub_1DCFE3FC8;
  *(void *)(v1 + 48) = 0;
  uint64_t v3 = v0;
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v1 + 72) = 0;
  swift_release();
  *(void *)&v3[OBJC_IVAR____TtC18VisualIntelligence26VITextLookupFlowCompatible_flow] = sub_1DCF31D08();

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for VITextLookupFlowCompatible();
  return objc_msgSendSuper2(&v5, sel_init);
}

void *sub_1DCFE3FC8@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1DCE772C4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

id sub_1DCFE4068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD048068();
  MEMORY[0x1F4188790](v5);
  sub_1DCFE3CE8((void (*)(void, void *))sub_1DCFE4BC4, (void (*)(uint64_t, uint64_t))sub_1DCFE4BC0);
  sub_1DCD6CCA4(v9);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  id v7 = sub_1DCE75440((uint64_t)v9, (uint64_t)sub_1DCFE463C, v6);
  swift_release();
  swift_release();
  sub_1DCFE4648((uint64_t)v9);
  return v7;
}

void sub_1DCFE42E0(void *a1, char a2, void (*a3)(id, void *))
{
  id v6 = objc_allocWithZone((Class)VITextLookupResult);
  if (a2)
  {
    id v8 = a1;
    sub_1DCFE4A6C();
    int v9 = (void *)sub_1DD0486A8();
    id v10 = objc_msgSend(v6, sel_initWithSections_, v9);

    id v11 = a1;
    a3(v10, a1);
    uint64_t v12 = (void (*)(id))MEMORY[0x1E4FBC898];
    sub_1DCFE4AAC(a1, 1, MEMORY[0x1E4FBC898]);

    sub_1DCFE4AAC(a1, 1, v12);
  }
  else
  {
    sub_1DCFE4A6C();
    swift_bridgeObjectRetain();
    id v7 = (void *)sub_1DD0486A8();
    sub_1DCFE4AAC(a1, 0, MEMORY[0x1E4FBC898]);
    id v13 = objc_msgSend(v6, sel_initWithSections_, v7);

    a3(v13, 0);
  }
}

id VITextLookupFlowCompatible.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VITextLookupFlowCompatible();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1DCFE4530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86280);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = -1;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v6 + 80) = v7;
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v6 + 72) = a1;
  swift_release();
  return sub_1DCF31D08();
}

uint64_t type metadata accessor for VITextLookupFlowCompatible()
{
  return self;
}

uint64_t sub_1DCFE4604()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DCFE463C(void *a1, char a2)
{
  sub_1DCFE42E0(a1, a2 & 1, *(void (**)(id, void *))(v2 + 16));
}

uint64_t sub_1DCFE4648(uint64_t a1)
{
  return a1;
}

uint64_t method lookup function for VITextLookupFlowCompatible(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VITextLookupFlowCompatible);
}

uint64_t dispatch thunk of VITextLookupFlowCompatible.lookupText(query:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

id sub_1DCFE46E8(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v4 = sub_1DD048068();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  _Block_copy(a3);
  sub_1DCFE3CE8((void (*)(void, void *))sub_1DCFE4BC4, (void (*)(uint64_t, uint64_t))sub_1DCFE4BC0);
  sub_1DCD6CCA4(v9);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1DCFE49E4;
  *(void *)(v6 + 24) = v5;
  swift_retain();
  id v7 = sub_1DCE75440((uint64_t)v9, (uint64_t)sub_1DCFE4BD0, v6);
  swift_release();
  swift_release();
  sub_1DCFE4648((uint64_t)v9);
  swift_release();
  return v7;
}

uint64_t sub_1DCFE49AC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1DCFE49E4(uint64_t a1, uint64_t a2)
{
  sub_1DCF8E0D8(a1, a2, *(void *)(v2 + 16));
}

void sub_1DCFE49EC(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1DCFE4AAC(a1, a2 & 1, MEMORY[0x1E4FBC8D0]);
  }
}

void sub_1DCFE4A2C(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1DCFE4AAC(a1, a2 & 1, MEMORY[0x1E4FBC898]);
  }
}

unint64_t sub_1DCFE4A6C()
{
  unint64_t result = qword_1EAB02A10;
  if (!qword_1EAB02A10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAB02A10);
  }
  return result;
}

void sub_1DCFE4AAC(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

void sub_1DCFE4ABC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_1DCFE4AE8(a1, a2, a3 & 1);
  }
}

void sub_1DCFE4AE8(id a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1DCFE4AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCFE4B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1DCFE4BD4(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v13 = type metadata accessor for MLModelInfo(0);
  sub_1DCD2581C(*(unsigned __int8 *)(a3 + *(int *)(v13 + 32)), v31);
  uint64_t v14 = *((void *)a1 + 18);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = sub_1DCEA469C((uint64_t)v31, v14);
  swift_release();
  sub_1DCD3A3BC(a2, (uint64_t)aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
  if (swift_dynamicCast())
  {
    id v16 = a7;
    uint64_t v17 = v32;
    float v18 = (void *)swift_allocObject();
    _OWORD v18[2] = v15;
    v18[3] = a5;
    void v18[4] = a6;
    id v19 = objc_allocWithZone(MEMORY[0x1E4F45730]);
    aBlock[4] = sub_1DCFE67B4;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DCFE5678;
    aBlock[3] = &block_descriptor_15;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = v17;
    swift_retain();
    swift_retain();
    swift_release();
    id v22 = objc_msgSend(v19, sel_initWithModel_completionHandler_, v21, v20);

    _Block_release(v20);
    objc_msgSend(v22, sel_setImageCropAndScaleOption_, a4);
    CGFloat v23 = a1[5];
    CGFloat v24 = a1[6];
    CGFloat v25 = a1[7];
    CGFloat v26 = a1[8];
    id v27 = v22;
    v35.origin.CGFloat x = 0.0;
    v35.origin.CGFloat y = 0.0;
    v35.size.width = 1.0;
    v35.size.height = 1.0;
    v33.origin.CGFloat x = v23;
    v33.origin.CGFloat y = v24;
    v33.size.width = v25;
    v33.size.height = v26;
    CGRect v34 = CGRectIntersection(v33, v35);
    objc_msgSend(v27, sel_setRegionOfInterest_, v34.origin.x, v34.origin.y, v34.size.width, v34.size.height);

    v16[3] = &type metadata for VisionModelRequest;
    void v16[4] = &off_1F383AF20;
    swift_release();

    *id v16 = v27;
  }
  else
  {
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v28 = 0xD00000000000001BLL;
    *(void *)(v28 + 8) = 0x80000001DD0688A0;
    *(unsigned char *)(v28 + 16) = 3;
    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_1DCFE4EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  *(void *)&long long v36 = a5;
  uint64_t v37 = a3;
  double v38 = a7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85788);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EspressoModel(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v36 - v19;
  sub_1DCD3A3BC(a2, (uint64_t)v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
  int v21 = swift_dynamicCast();
  id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v13, 0, 1, v14);
    sub_1DCFE67D8((uint64_t)v13, (uint64_t)v20);
    sub_1DCFE68E4((uint64_t)v20, (uint64_t)v17, type metadata accessor for EspressoModel);
    uint64_t v23 = *(void *)(a1 + 144);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v36;
    *(void *)(v24 + 24) = a6;
    uint64_t v25 = qword_1EBE84A80;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v26 = a4;
    if (v25 != -1) {
      swift_once();
    }
    long long v36 = xmmword_1EBE84A60;
    long long v27 = xmmword_1EBE84A70;
    type metadata accessor for EspressoRequest(0);
    uint64_t v28 = swift_allocObject();
    sub_1DCFE68E4((uint64_t)v17, v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model, type metadata accessor for EspressoModel);
    *(void *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features) = 0;
    *(void *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode) = v37;
    os_unfair_lock_t v29 = (long long *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
    *os_unfair_lock_t v29 = v36;
    v29[1] = v27;
    *(void *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs) = v26;
    double v30 = (uint64_t (**)(uint64_t, void *))(v28
                                                   + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
    void *v30 = sub_1DCFE6874;
    v30[1] = (uint64_t (*)(uint64_t, void *))v24;
    uint64_t v31 = qword_1EBE85738;
    swift_retain();
    if (v31 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_1EBE9C908;
    swift_retain();
    swift_release();
    sub_1DCFE694C((uint64_t)v17, type metadata accessor for EspressoModel);
    *(void *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v32;
    *(unsigned char *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly) = 0;
    *(void *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket) = v23;
    v40.origin.CGFloat x = 0.0;
    v40.origin.CGFloat y = 0.0;
    v40.size.width = 1.0;
    v40.size.height = 1.0;
    *(CGRect *)(v28 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest) = CGRectIntersection(*(CGRect *)(a1 + 40), v40);
    CGRect v33 = v38;
    v38[3] = (uint64_t)&type metadata for EspressoModelRequest;
    v33[4] = (uint64_t)&off_1F383B3D0;
    *CGRect v33 = v28;
    return sub_1DCFE694C((uint64_t)v20, type metadata accessor for EspressoModel);
  }
  else
  {
    v22(v13, 1, 1, v14);
    sub_1DCD2479C((uint64_t)v13, &qword_1EBE85788);
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v35 = 0xD00000000000001BLL;
    *(void *)(v35 + 8) = 0x80000001DD0688A0;
    *(unsigned char *)(v35 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1DCFE531C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_1DCD3A3BC(a2, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
  type metadata accessor for E5Model();
  if (swift_dynamicCast())
  {
    uint64_t v11 = *(void *)(a1 + 144);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a4;
    *(void *)(v12 + 24) = a5;
    type metadata accessor for E5Request();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_1DCDD45FC(v13, a3, 0, v11, (uint64_t)sub_1DCFE68AC, v12);
    swift_release();
    swift_release();
    v18.origin.CGFloat x = 0.0;
    v18.origin.CGFloat y = 0.0;
    v18.size.width = 1.0;
    v18.size.height = 1.0;
    *(CGRect *)(v14 + 56) = CGRectIntersection(*(CGRect *)(a1 + 40), v18);
    a6[3] = (uint64_t)&type metadata for E5ModelRequest;
    a6[4] = (uint64_t)&off_1F3839600;
    uint64_t result = swift_release();
    *a6 = v14;
  }
  else
  {
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v16 = 0xD00000000000001BLL;
    *(void *)(v16 + 8) = 0x80000001DD0688A0;
    *(unsigned char *)(v16 + 16) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1DCFE54E8(void *a1, void *a2, uint64_t a3, void (*a4)(void *))
{
  sub_1DCEA3DA4();
  if (a2)
  {
    sub_1DCD3A548();
    uint64_t v7 = swift_allocError();
    *(void *)uint64_t v8 = a2;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 1;
    v12[0] = v7;
    char v13 = 1;
    id v9 = a2;
  }
  else
  {
    v12[3] = sub_1DCD3A2E0();
    v12[4] = &off_1F383D738;
    v12[0] = a1;
    char v13 = 0;
    id v10 = a1;
  }
  a4(v12);
  return sub_1DCD2479C((uint64_t)v12, &qword_1EBE86B28);
}

uint64_t sub_1DCFE55B4(uint64_t a1, void *a2, void (*a3)(void *), uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  if (a2)
  {
    sub_1DCD3A548();
    uint64_t v8 = swift_allocError();
    *(void *)uint64_t v9 = a2;
    *(void *)(v9 + 8) = 0;
    *(unsigned char *)(v9 + 16) = 1;
    v14[0] = v8;
    char v15 = 1;
    id v10 = a2;
  }
  else
  {
    v14[3] = a5(0);
    v14[4] = a6;
    v14[0] = a1;
    char v15 = 0;
    swift_retain();
  }
  a3(v14);
  return sub_1DCD2479C((uint64_t)v14, &qword_1EBE86B28);
}

void sub_1DCFE5678(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void *sub_1DCFE5704(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a1 & 2) != 0)
  {
    uint64_t v19 = *(void *)(a2 + *(int *)(type metadata accessor for MLModelInfo(0) + 40));
    if (v19 && *(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1DCEAD1A4(a5, a6);
      if (v21)
      {
        uint64_t v11 = *(void **)(*(void *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if ((a1 & 1) == 0) {
          return v11;
        }
LABEL_3:
        uint64_t v12 = *(void *)(a2 + *(int *)(type metadata accessor for MLModelInfo(0) + 40));
        if (v12 && *(void *)(v12 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v13 = sub_1DCEAD1A4(a3, a4);
          if (v14)
          {
            uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v11)
            {
              swift_bridgeObjectRetain();
              uint64_t v16 = sub_1DCFA6E68(v15, v11);
              if (v6)
              {
                swift_bridgeObjectRelease_n();
LABEL_18:
                swift_bridgeObjectRelease();
                return v11;
              }
              uint64_t v25 = v16;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return (void *)v25;
            }
            return (void *)v15;
          }
          swift_bridgeObjectRelease();
        }
        sub_1DD048B98();
        swift_bridgeObjectRelease();
        sub_1DD048548();
        sub_1DCE8D638();
        swift_allocError();
        *uint64_t v23 = 0xD000000000000017;
        v23[1] = 0x80000001DD070660;
        swift_willThrow();
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
    }
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    uint64_t v11 = (void *)0x80000001DD070660;
    sub_1DCE8D638();
    swift_allocError();
    *id v22 = 0xD000000000000017;
    v22[1] = 0x80000001DD070660;
    swift_willThrow();
  }
  else
  {
    uint64_t v11 = 0;
    if (a1) {
      goto LABEL_3;
    }
  }
  return v11;
}

uint64_t sub_1DCFE5978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_116;
  }
  long long v105 = v10;
  uint64_t v11 = sub_1DCFE5704(a2, a3, 0x6972656767697274, 0xEA0000000000676ELL, 0x74696E676F636572, 0xEB000000006E6F69);
  if (v3) {
    return v12 & 1;
  }
  unint64_t v13 = v11;
  if (!v11)
  {
LABEL_116:
    char v12 = 0;
    return v12 & 1;
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DCFA34B0(v14);
  swift_bridgeObjectRelease();
  uint64_t v104 = *(void *)(v15 + 16);
  if (!v104)
  {
LABEL_113:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v12 = 1;
    return v12 & 1;
  }
  unint64_t v17 = 0;
  uint64_t v103 = v15 + 32;
  long long v97 = (void (**)(char *, uint64_t))(v8 + 8);
  long long v98 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  long long v93 = "coarseCategoryDistribution";
  v91[1] = 0;
  unint64_t v92 = 0x80000001DD067880;
  *(void *)&long long v16 = 136315138;
  long long v96 = v16;
  uint64_t v95 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v99 = a3;
  uint64_t v100 = v7;
  uint64_t v101 = v13;
  uint64_t v102 = v15;
  while (1)
  {
    if (v17 >= *(void *)(v15 + 16))
    {
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    CGRect v18 = (uint64_t *)(v103 + 16 * v17);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    uint64_t v21 = v13[2];
    swift_bridgeObjectRetain();
    if (v21) {
      break;
    }
LABEL_35:
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    uint64_t v109 = v19;
    if (byte_1EBE87188 != 1)
    {
LABEL_79:
      unint64_t v66 = v17;
      CGRect v67 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        CGRect v67 = qword_1EBE871A8;
      }
      goto LABEL_81;
    }
    id v43 = objc_msgSend(self, sel_mainBundle);
    id v44 = objc_msgSend(v43, sel_bundleIdentifier);

    if (v44)
    {
      uint64_t v45 = sub_1DD048408();
      uint64_t v47 = v46;

      if (v45 == 0xD00000000000002BLL && v47 == v92)
      {
        swift_bridgeObjectRelease();
LABEL_72:
        CGRect v63 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          CGRect v63 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_76;
      }
      char v62 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v62) {
        goto LABEL_72;
      }
    }
    CGRect v63 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      CGRect v63 = &qword_1EBE871E8;
    }
LABEL_76:
    CGRect v64 = *(void **)(*v63 + 32);
    swift_retain();
    CGRect v65 = (void *)sub_1DD0483D8();
    LODWORD(v64) = objc_msgSend(v64, sel_BOOLForKey_, v65);
    swift_release();

    uint64_t v7 = v100;
    unint64_t v13 = v101;
    if (!v64) {
      goto LABEL_79;
    }
    unint64_t v66 = v17;
    CGRect v67 = qword_1EAB02B70;
    if (qword_1EAB01C80 != -1)
    {
      swift_once();
      CGRect v67 = qword_1EAB02B70;
    }
LABEL_81:
    uint64_t v68 = __swift_project_value_buffer(v7, (uint64_t)v67);
    unint64_t v69 = v105;
    (*v98)(v105, v68, v7);
    swift_bridgeObjectRetain();
    os_log_t v70 = sub_1DD048048();
    os_log_type_t v71 = sub_1DD048848();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v107 = v73;
      *(_DWORD *)uint64_t v72 = v96;
      swift_bridgeObjectRetain();
      *(void *)(v72 + 4) = sub_1DCED7FA0(v109, v20, &v107);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v70, v71, "No model urn suffix for %s", (uint8_t *)v72, 0xCu);
      swift_arrayDestroy();
      uint64_t v74 = v73;
      a3 = v99;
      MEMORY[0x1E01B07E0](v74, -1, -1);
      uint64_t v75 = v72;
      uint64_t v7 = v100;
      unint64_t v13 = v101;
      MEMORY[0x1E01B07E0](v75, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*v97)(v69, v7);
    unint64_t v17 = v66;
LABEL_8:
    ++v17;
    uint64_t v15 = v102;
    if (v17 == v104) {
      goto LABEL_113;
    }
  }
  swift_bridgeObjectRetain();
  sub_1DCEAD1A4(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  uint64_t v23 = (uint64_t *)(a3 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  uint64_t v24 = v23[1];
  uint64_t v107 = *v23;
  uint64_t v108 = v24;
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  uint64_t v25 = v107;
  uint64_t v26 = v108;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v109 = v108;
  uint64_t v106 = v107;
  if (!v27)
  {
    double v30 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v48 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v48) {
      goto LABEL_49;
    }
LABEL_45:
    if (v30[5] == v25 && v30[6] == v26 || (sub_1DD048FA8() & 1) != 0)
    {
LABEL_100:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v48 == 1) {
        goto LABEL_49;
      }
      unint64_t v76 = v17;
      uint64_t v77 = v30 + 9;
      uint64_t v78 = 1;
      uint64_t v79 = v109;
      while (1)
      {
        uint64_t v80 = v78 + 1;
        if (__OFADD__(v78, 1)) {
          goto LABEL_129;
        }
        BOOL v81 = *(v77 - 1) == v106 && *v77 == v79;
        if (v81 || (sub_1DD048FA8() & 1) != 0) {
          break;
        }
        v77 += 3;
        ++v78;
        uint64_t v79 = v109;
        if (v80 == v48)
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = v100;
          unint64_t v13 = v101;
          unint64_t v17 = v76;
          if (!v27) {
            goto LABEL_93;
          }
LABEL_50:
          swift_bridgeObjectRetain();
          uint64_t v49 = 72;
          uint64_t v50 = (void *)MEMORY[0x1E4FBC860];
          while (2)
          {
            uint64_t v51 = *(void *)(a1 + v49);
            uint64_t v52 = *(void *)(v51 + 16);
            int64_t v53 = v50[2];
            int64_t v54 = v53 + v52;
            if (__OFADD__(v53, v52)) {
              goto LABEL_121;
            }
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
            if (isUniquelyReferenced_nonNull_native && v54 <= v50[3] >> 1)
            {
              if (!*(void *)(v51 + 16))
              {
LABEL_51:
                if (v52) {
                  goto LABEL_122;
                }
LABEL_52:
                swift_bridgeObjectRelease();
                v49 += 48;
                if (!--v27)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v7 = v100;
                  unint64_t v13 = v101;
                  goto LABEL_94;
                }
                continue;
              }
            }
            else
            {
              if (v53 <= v54) {
                int64_t v56 = v53 + v52;
              }
              else {
                int64_t v56 = v53;
              }
              uint64_t v50 = sub_1DCE9E6B8(isUniquelyReferenced_nonNull_native, v56, 1, v50);
              if (!*(void *)(v51 + 16)) {
                goto LABEL_51;
              }
            }
            break;
          }
          uint64_t v57 = v50[2];
          if ((v50[3] >> 1) - v57 < v52)
          {
            __break(1u);
LABEL_126:
            __break(1u);
            goto LABEL_127;
          }
          unint64_t v58 = (unint64_t)&v50[3 * v57 + 4];
          if (v51 + 32 < v58 + 24 * v52 && v58 < v51 + 32 + 24 * v52) {
            goto LABEL_130;
          }
          swift_arrayInitWithCopy();
          if (v52)
          {
            uint64_t v60 = v50[2];
            BOOL v41 = __OFADD__(v60, v52);
            uint64_t v61 = v60 + v52;
            if (v41) {
              goto LABEL_126;
            }
            v50[2] = v61;
          }
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v99;
      uint64_t v7 = v100;
      unint64_t v13 = v101;
      unint64_t v17 = v76;
    }
    goto LABEL_8;
  }
  unint64_t v94 = v17;
  swift_bridgeObjectRetain();
  uint64_t v28 = 64;
  uint64_t v29 = v27;
  double v30 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v31 = *(void *)(a1 + v28);
    uint64_t v32 = *(void *)(v31 + 16);
    int64_t v33 = v30[2];
    int64_t v34 = v33 + v32;
    if (__OFADD__(v33, v32))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_115;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v35 && v34 <= v30[3] >> 1)
    {
      if (!*(void *)(v31 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v33 <= v34) {
        int64_t v36 = v33 + v32;
      }
      else {
        int64_t v36 = v33;
      }
      double v30 = sub_1DCE9E590(v35, v36, 1, v30);
      if (!*(void *)(v31 + 16))
      {
LABEL_14:
        if (v32) {
          goto LABEL_119;
        }
        goto LABEL_15;
      }
    }
    uint64_t v37 = v30[2];
    if ((v30[3] >> 1) - v37 < v32) {
      goto LABEL_120;
    }
    unint64_t v38 = (unint64_t)&v30[3 * v37 + 4];
    if (v31 + 32 < v38 + 24 * v32 && v38 < v31 + 32 + 24 * v32) {
      goto LABEL_130;
    }
    swift_arrayInitWithCopy();
    if (v32)
    {
      uint64_t v40 = v30[2];
      BOOL v41 = __OFADD__(v40, v32);
      uint64_t v42 = v40 + v32;
      if (v41) {
        goto LABEL_123;
      }
      v30[2] = v42;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    v28 += 48;
    --v29;
  }
  while (v29);
  swift_bridgeObjectRelease();
  a3 = v99;
  uint64_t v7 = v100;
  unint64_t v13 = v101;
  unint64_t v17 = v94;
  uint64_t v26 = v109;
  uint64_t v25 = v106;
  uint64_t v48 = v30[2];
  if (v48) {
    goto LABEL_45;
  }
LABEL_49:
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_50;
  }
LABEL_93:
  uint64_t v50 = (void *)MEMORY[0x1E4FBC860];
LABEL_94:
  uint64_t v82 = v50[2];
  if (!v82) {
    goto LABEL_115;
  }
  BOOL v83 = v50[4] == v106 && v50[5] == v109;
  a3 = v99;
  if (v83 || (sub_1DD048FA8() & 1) != 0) {
    goto LABEL_100;
  }
  if (v82 == 1)
  {
LABEL_115:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_116;
  }
  unint64_t v84 = v17;
  int v85 = v50 + 8;
  uint64_t v86 = 1;
  uint64_t v87 = v109;
  while (1)
  {
    uint64_t v88 = v86 + 1;
    if (__OFADD__(v86, 1)) {
      break;
    }
    BOOL v89 = *(v85 - 1) == v106 && *v85 == v87;
    if (v89 || (sub_1DD048FA8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v99;
      unint64_t v17 = v84;
      goto LABEL_8;
    }
    v85 += 3;
    ++v86;
    uint64_t v87 = v109;
    if (v88 == v82) {
      goto LABEL_115;
    }
  }
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCFE6458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return 0;
  }
  if (a2)
  {
    uint64_t v9 = (uint64_t *)(a3 + *(int *)(v6 + 24));
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t v13 = *(void *)(a1 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = 72;
      do
      {
        uint64_t v15 = swift_bridgeObjectRetain();
        sub_1DCFDE93C(v15);
        v14 += 48;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
      uint64_t v12 = v41;
    }
    uint64_t v16 = *(void *)(v12 + 16);
    if (!v16)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      return 0;
    }
    unint64_t v17 = (void *)(v12 + 40);
    while (1)
    {
      BOOL v18 = *(v17 - 1) == v10 && *v17 == v11;
      if (v18 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      v17 += 3;
      if (!--v16) {
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
  }
  if ((a2 & 2) == 0) {
    return 1;
  }
  unint64_t v20 = (uint64_t *)(a3 + *(int *)(v6 + 24));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = 64;
    uint64_t v26 = v24;
    do
    {
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_1DCFDE7E0(v27);
      v25 += 48;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v23 = v41;
  }
  uint64_t v28 = *(void *)(v23 + 16);
  if (!v28)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1DCFE68E4(a3, (uint64_t)v8, type metadata accessor for MLModelInfo);
LABEL_45:
    sub_1DCFE694C((uint64_t)v8, type metadata accessor for MLModelInfo);
    return 0;
  }
  uint64_t v29 = (void *)(v23 + 48);
  while (1)
  {
    BOOL v30 = *(v29 - 1) == v21 && *v29 == v22;
    if (v30 || (sub_1DD048FA8() & 1) != 0) {
      break;
    }
    v29 += 3;
    if (!--v28) {
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  sub_1DCFE68E4(a3, (uint64_t)v8, type metadata accessor for MLModelInfo);
  uint64_t v31 = &v8[*(int *)(v6 + 24)];
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *((void *)v31 + 1);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v41 = MEMORY[0x1E4FBC860];
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = 72;
    do
    {
      uint64_t v36 = swift_bridgeObjectRetain();
      sub_1DCFDE93C(v36);
      v35 += 48;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
    uint64_t v34 = v41;
  }
  uint64_t v37 = *(void *)(v34 + 16);
  if (!v37)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  unint64_t v38 = (void *)(v34 + 40);
  while (1)
  {
    BOOL v39 = *(v38 - 1) == v32 && *v38 == v33;
    if (v39 || (sub_1DD048FA8() & 1) != 0) {
      break;
    }
    v38 += 3;
    if (!--v37) {
      goto LABEL_44;
    }
  }
  swift_bridgeObjectRelease();
  sub_1DCFE694C((uint64_t)v8, type metadata accessor for MLModelInfo);
  return 1;
}