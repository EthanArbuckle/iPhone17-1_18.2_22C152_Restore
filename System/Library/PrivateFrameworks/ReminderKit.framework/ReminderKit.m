void sub_1B9AA3E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1B9AA3F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AA435C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _REMGetLocalizedString(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New in %@";
      goto LABEL_89;
    case 1:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"This list is shared";
      goto LABEL_89;
    case 2:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Shared with %@";
      goto LABEL_89;
    case 3:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Shared with %@ & %u other(s)";
      goto LABEL_86;
    case 4:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Shared by %@";
      goto LABEL_89;
    case 5:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Invited by %@";
      goto LABEL_89;
    case 6:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"“%@” list is no longer shared.";
      goto LABEL_89;
    case 7:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Invitation to share a reminder list with %@.";
      goto LABEL_89;
    case 8:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%1$@ %2$@ your shared reminder list.";
      goto LABEL_89;
    case 9:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"joined";
      goto LABEL_89;
    case 10:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"declined";
      goto LABEL_89;
    case 11:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Reminders";
      goto LABEL_89;
    case 12:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Local";
      goto LABEL_89;
    case 13:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Untitled";
      goto LABEL_89;
    case 14:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Due Today";
      goto LABEL_89;
    case 15:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ and %lu other items";
      goto LABEL_86;
    case 16:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Arrived at location: %@";
      goto LABEL_89;
    case 17:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Left location: %@";
      goto LABEL_89;
    case 18:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Got in car";
      goto LABEL_89;
    case 19:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Got out of car";
      goto LABEL_89;
    case 20:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Because you’re messaging %@";
      goto LABEL_89;
    case 21:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"You have overdue reminders";
      goto LABEL_89;
    case 22:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New Reminder";
      goto LABEL_89;
    case 23:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%u more reminders";
      goto LABEL_89;
    case 24:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Ignore";
      goto LABEL_89;
    case 25:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Later";
      goto LABEL_89;
    case 26:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Mark as Completed";
      goto LABEL_89;
    case 27:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"MARK_AS_COMPLETED_SHORTENED_NOTIFICATION_ACTION";
      v5 = @"Mark as Completed";
      goto LABEL_90;
    case 28:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me Tomorrow";
      goto LABEL_89;
    case 29:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me in an Hour";
      goto LABEL_89;
    case 30:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me in the Morning";
      goto LABEL_89;
    case 31:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me Next Weekend";
      goto LABEL_89;
    case 32:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me This Afternoon";
      goto LABEL_89;
    case 33:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Remind Me Tonight";
      goto LABEL_89;
    case 34:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ assigned you a reminder";
      goto LABEL_89;
    case 35:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ assigned you %lu reminders";
      goto LABEL_86;
    case 36:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"You’ve been assigned a reminder";
      goto LABEL_89;
    case 37:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"You’ve been assigned %lu reminders";
      goto LABEL_86;
    case 38:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"“%@” in your “%@” list.";
      goto LABEL_89;
    case 39:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"See the “%@” list.";
      goto LABEL_89;
    case 40:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ assigned you an item";
      goto LABEL_89;
    case 41:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ assigned you %lu items";
      goto LABEL_86;
    case 42:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"You’ve been assigned an item";
      goto LABEL_89;
    case 43:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"You’ve been assigned %lu items";
      goto LABEL_86;
    case 44:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"View";
      goto LABEL_89;
    case 45:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Decline";
      goto LABEL_89;
    case 46:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Decline All";
      goto LABEL_89;
    case 47:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%u more lists with assignments";
      goto LABEL_89;
    case 48:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New Assignment";
      goto LABEL_89;
    case 49:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New List";
      goto LABEL_89;
    case 50:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Unknown";
      goto LABEL_89;
    case 51:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_MORNING_START_HOUR";
      goto LABEL_62;
    case 52:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_MORNING_END_HOUR";
      goto LABEL_65;
    case 53:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_AFTERNOON_START_HOUR";
      goto LABEL_65;
    case 54:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_AFTERNOON_END_HOUR";
      goto LABEL_58;
    case 55:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_EVENING_START_HOUR";
LABEL_58:
      v5 = @"17";
      goto LABEL_90;
    case 56:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_EVENING_END_HOUR";
      goto LABEL_69;
    case 57:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_NIGHT_START_HOUR";
      goto LABEL_69;
    case 58:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"CUSTOM_SMART_LIST_NIGHT_END_HOUR";
LABEL_62:
      v5 = @"6";
      goto LABEL_90;
    case 59:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_MORNING";
      v5 = @"9";
      goto LABEL_90;
    case 60:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_NOON";
LABEL_65:
      v5 = @"12";
      goto LABEL_90;
    case 61:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_AFTERNOON";
      v5 = @"15";
      goto LABEL_90;
    case 62:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_EVENING";
      goto LABEL_71;
    case 63:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_NIGHT";
LABEL_69:
      v5 = @"21";
      goto LABEL_90;
    case 64:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"TIME_OF_DAY_CREATION_TONIGHT";
LABEL_71:
      v5 = @"18";
      goto LABEL_90;
    case 65:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ added “%@” to %@";
      goto LABEL_89;
    case 66:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"“%@“ was added to %@";
      goto LABEL_89;
    case 67:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ added %lu reminders to %@";
      goto LABEL_86;
    case 68:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%lu reminders were added to %@";
      goto LABEL_86;
    case 69:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New reminders added";
      goto LABEL_89;
    case 70:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ added %lu items to %@";
      goto LABEL_86;
    case 71:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%lu items were added to %@";
      goto LABEL_86;
    case 72:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ completed “%@” in %@";
      goto LABEL_89;
    case 73:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"“%@“ was completed in %@";
      goto LABEL_89;
    case 74:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ completed %lu reminders in %@";
      goto LABEL_86;
    case 75:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%lu reminders were completed in %@";
      goto LABEL_86;
    case 76:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"New reminders completed";
      goto LABEL_89;
    case 77:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%@ completed %lu items in %@";
      goto LABEL_86;
    case 78:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"%lu items were completed in %@";
LABEL_86:
      v5 = &stru_1F1339A18;
      v6 = @"PluralLocalizable";
      goto LABEL_91;
    case 79:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"Family Groceries";
      goto LABEL_89;
    case 80:
      v2 = REMBundleGet();
      v3 = v2;
      v4 = @"None";
LABEL_89:
      v5 = &stru_1F1339A18;
LABEL_90:
      v6 = 0;
LABEL_91:
      v1 = [v2 localizedStringForKey:v4 value:v5 table:v6];

      break;
    default:
      break;
  }

  return v1;
}

id REMBundleGet()
{
  if (REMBundleGet_onceToken != -1) {
    dispatch_once(&REMBundleGet_onceToken, &__block_literal_global);
  }
  v0 = (void *)REMBundleGet_bundle;

  return v0;
}

uint64_t rem_currentRuntimeVersion()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v0 = +[REMUserDefaults daemonUserDefaults];
  v1 = [v0 remCurrentRuntimeVersionDebuggingOverride];

  if (v1)
  {
    uint64_t v2 = [v1 integerValue];
    v3 = +[REMLogStore write];
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v5 = 134217984;
      uint64_t v6 = v2;
      _os_log_impl(&dword_1B9AA2000, v3, OS_LOG_TYPE_INFO, "remCurrentRuntimeVersionDebuggingOverride = %ld", (uint8_t *)&v5, 0xCu);
    }
  }
  else
  {
    uint64_t v2 = 20240430;
  }

  return v2;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

uint64_t __Block_byref_object_dispose__15(uint64_t a1)
{
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a1 + 48);
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__18(uint64_t a1, uint64_t a2)
{
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t REMDynamicCast(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (objc_opt_isKindOfClass()) {
    return a2;
  }
  return 0;
}

BOOL REMSymbolicColorIsSupportedByDA(void *a1)
{
  id v1 = a1;
  uint64_t v2 = EKSymbolicColorToRGBMapping();
  v3 = [v2 objectForKeyedSubscript:v1];

  return v3 != 0;
}

BOOL REMSymbolicColorIsSupportedByCK(void *a1)
{
  id v1 = a1;
  uint64_t v2 = ckSymbolicColorNameToRGBMapping();
  v3 = [v2 objectForKeyedSubscript:v1];

  return v3 != 0;
}

id ckSymbolicColorNameToRGBMapping()
{
  if (ckSymbolicColorNameToRGBMapping_onceToken != -1) {
    dispatch_once(&ckSymbolicColorNameToRGBMapping_onceToken, &__block_literal_global_23);
  }
  v0 = (void *)ckSymbolicColorNameToRGBMapping_mapping;

  return v0;
}

void sub_1B9AAD0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,os_activity_scope_state_s state,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

uint64_t rem_feature_enabled(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 cStringUsingEncoding:1];
  id v6 = v4;
  uint64_t v7 = [v6 cStringUsingEncoding:1];

  return MEMORY[0x1F40C9FB0](v5, v7);
}

void sub_1B9AAD928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AADD44(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AAE16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AAE390(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1B9AAF04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AAF948(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AAFA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AAFC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void __ckSymbolicColorNameToRGBMapping_block_invoke()
{
  v3[12] = *MEMORY[0x1E4F143B8];
  v2[0] = @"red";
  v2[1] = @"orange";
  v3[0] = @"#FF3B30";
  v3[1] = @"#FF9500";
  v2[2] = @"yellow";
  v2[3] = @"green";
  v3[2] = @"#FFCC00";
  v3[3] = @"#4CD964";
  v2[4] = @"lightBlue";
  v2[5] = @"blue";
  v3[4] = @"#5AC8FA";
  v3[5] = @"#007AFF";
  v2[6] = @"indigo";
  v2[7] = @"purple";
  v3[6] = @"#5856D6";
  v3[7] = @"#E357A8";
  v2[8] = @"pink";
  v2[9] = @"rose";
  v3[8] = @"#FF2D55";
  v3[9] = @"#D9A69F";
  v2[10] = @"brown";
  v2[11] = @"gray";
  v3[10] = @"#9D8563";
  v3[11] = @"#5B626A";
  uint64_t v0 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v3 forKeys:v2 count:12];
  uint64_t v1 = (void *)ckSymbolicColorNameToRGBMapping_mapping;
  ckSymbolicColorNameToRGBMapping_mapping = v0;
}

uint64_t __REMBundleGet_block_invoke()
{
  REMBundleGet_bundle = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];

  return MEMORY[0x1F41817F8]();
}

void OUTLINED_FUNCTION_0(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t buf)
{
  _os_log_fault_impl(a1, v11, OS_LOG_TYPE_FAULT, a4, &buf, 0x16u);
}

void sub_1B9AB3184(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB331C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB35B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB36BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB38C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3BD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3EAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB3F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB4038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB4228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB45A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB46D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB47A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB4B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB4FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB508C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB51A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB5768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB5944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id clientDescription(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSString;
  uint64_t v3 = objc_opt_class();
  id v4 = [v1 crdtID];
  uint64_t v5 = [v2 stringWithFormat:@"<%@: %p>{crdtID: %@}", v3, v1, v4];

  return v5;
}

void sub_1B9AB59FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB5AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB5CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB5DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB5F90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB60E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB61BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB63C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB650C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB6FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB7178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB7300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  replica_manager::ReplicaManager::~ReplicaManager((replica_manager::ReplicaManager *)&a9);
  _Unwind_Resume(a1);
}

void sub_1B9AB75EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1B9AB77B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Block_object_dispose((const void *)(v22 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB795C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB7C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB7F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB7FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AB8280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB85B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB89D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8A78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8B3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8C74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8D58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8DD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB8F64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9AB9094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<replica_manager::VectorTimestampElement>::New()
{
}

void sub_1B9AB912C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C405ACC521ELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9AB920C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9AB92E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    id v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9AB93C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<replica_manager::ReplicaEntry>::New()
{
}

void sub_1B9AB9424(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C409202FEF5);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_0_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(void *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  return result;
}

id REMGetRecurrenceUIDFromRealUID(void *a1, void *a2)
{
  uint64_t v3 = NSString;
  id v4 = a2;
  uint64_t v5 = REMGetRealUIDFromRecurrenceUID(a1);
  [v4 timeIntervalSinceReferenceDate];
  double v7 = v6;

  v8 = [v3 stringWithFormat:@"%@/RID=%llu", v5, (unint64_t)v7];

  return v8;
}

id REMGetRealUIDFromRecurrenceUID(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 componentsSeparatedByString:@"/RID="];
  uint64_t v3 = v1;
  if ([v2 count])
  {
    uint64_t v3 = [v2 objectAtIndex:0];
  }

  return v3;
}

id _iCalendarDataFromICSCalendar(void *a1, int a2)
{
  id v3 = a1;
  id v4 = (void *)MEMORY[0x1BA9DB950]();
  uint64_t v5 = (void *)[objc_alloc(MEMORY[0x1E4FB7F48]) initWithCalendar:v3];
  double v6 = v5;
  if (a2) {
    uint64_t v7 = 68;
  }
  else {
    uint64_t v7 = 4;
  }
  v8 = [v5 ICSDataWithOptions:v7];

  return v8;
}

id REMiCalendarDataFromICSCalendar(void *a1)
{
  return _iCalendarDataFromICSCalendar(a1, 0);
}

uint64_t REMWeekdayFromICSWeekday(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((unint64_t)(a1 - 1) >= 7)
  {
    uint64_t v2 = +[REMLogStore write];
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      REMWeekdayFromICSWeekday_cold_1(v1, v2);
    }

    return 1;
  }
  return v1;
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

BOOL rem_isNonceUnset(double a1)
{
  return fabs(a1) < 2.22044605e-16;
}

BOOL rem_isEqualNonces(double a1, double a2)
{
  return vabdd_f64(a1, a2) < 2.22044605e-16;
}

void sub_1B9AC52A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, v5, OS_LOG_TYPE_FAULT, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_1B9AC7E20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AC8140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AC9674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AC9A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AC9FE8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACB120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACB7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,os_activity_scope_state_s state,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_1B9ACD730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACDB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACEBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACF340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9ACF668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD3688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD53D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD57A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD5DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD6510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD67B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AD6A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_4_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_5_0(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_7_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void OUTLINED_FUNCTION_8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_12(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_21()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_22(uint64_t a1)
{
  return *(void *)a1;
}

void OUTLINED_FUNCTION_25(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_26()
{
  return NSNumber;
}

void sub_1B9ADD1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __cdKeyToStorageKeyMap_block_invoke()
{
  uint64_t v0 = (void *)cdKeyToStorageKeyMap_mapping;
  cdKeyToStorageKeyMap_mapping = MEMORY[0x1E4F1CC08];
}

void sub_1B9ADF070(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t recurrenceDateMatchesAnyDaySpecifiedInByDayList(void *a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    uint64_t v8 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    [v8 setTimeZone:v7];
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v9 = v5;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v10)
    {
      id v18 = v5;
      uint64_t v11 = *(void *)v20;
      while (2)
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v20 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          uint64_t v14 = [v8 components:512 fromDate:v6];
          uint64_t v15 = [v13 dayOfTheWeek];
          uint64_t v16 = [v14 weekday];

          if (v15 == v16)
          {
            uint64_t v10 = 1;
            goto LABEL_12;
          }
        }
        uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
        if (v10) {
          continue;
        }
        break;
      }
LABEL_12:
      id v5 = v18;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

uint64_t recurrenceDateMatchesAnyDaySpecifiedInByMonthDayList(void *a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    uint64_t v8 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    [v8 setTimeZone:v7];
    id v9 = [v8 components:16 fromDate:v6];
    uint64_t v10 = [v9 day];

    [v8 rangeOfUnit:16 inUnit:8 forDate:v6];
    uint64_t v12 = v11;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v13 = v5;
    uint64_t v14 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v24;
      uint64_t v17 = v12 + 1;
      while (2)
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v24 != v16) {
            objc_enumerationMutation(v13);
          }
          uint64_t v19 = objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * i), "integerValue", (void)v23);
          if (v19 < 0)
          {
            if (v19 == v10 || v17 + v19 == v10)
            {
LABEL_17:
              uint64_t v21 = 1;
              goto LABEL_18;
            }
          }
          else if (v19 == v10)
          {
            goto LABEL_17;
          }
        }
        uint64_t v15 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v15) {
          continue;
        }
        break;
      }
    }
    uint64_t v21 = 0;
LABEL_18:
  }
  else
  {
    uint64_t v21 = 0;
  }

  return v21;
}

uint64_t recurrenceMonthMatchesAnyMonthSpecifiedInByMonthList(void *a1, void *a2, void *a3)
{
  if (!a2) {
    return 0;
  }
  id v5 = (void *)MEMORY[0x1E4F1C9A8];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  id v9 = [v5 currentCalendar];
  [v9 setTimeZone:v6];

  uint64_t v10 = NSNumber;
  uint64_t v11 = [v9 components:8 fromDate:v7];

  uint64_t v12 = objc_msgSend(v10, "numberWithInteger:", objc_msgSend(v11, "month"));

  uint64_t v13 = [v8 containsObject:v12];
  return v13;
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return v0;
}

id dynamicMethodIMP(void *a1, const char *a2)
{
  id v3 = a1;
  uint64_t v4 = NSStringFromSelector(a2);
  uint64_t v5 = objc_opt_class();
  id v6 = REMCheckedDynamicCast(v5, (uint64_t)v3);

  id v7 = [v6 storage];
  id v8 = [v7 valueForKey:v4];

  return v8;
}

id _REMDateGetDateComponents(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    id v5 = a3;
    id v6 = a1;
    id v7 = _REMSharedGregorianCalendarForTimeZone(v5);
    id v8 = [v7 components:a2 fromDate:v6];

    [v8 setTimeZone:v5];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

id REMDateComponentsGetDateWithTimeZone(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!objc_msgSend(v3, "rem_isValidDateComponents"))
  {
    uint64_t v10 = 0;
    goto LABEL_14;
  }
  id v5 = (void *)[v3 copy];
  if (objc_msgSend(v5, "rem_isAllDayDateComponents")) {
    [v5 setTimeZone:0];
  }
  id v6 = [v5 calendar];

  if (v6)
  {
    id v7 = [v5 calendar];
    id v8 = (void *)[v7 copy];
    [v5 setCalendar:v8];

    if (v4)
    {
      id v9 = v4;
    }
    else
    {
      id v9 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
    }
    uint64_t v13 = v9;
    uint64_t v15 = [v5 calendar];
    [v15 setTimeZone:v13];

    [v5 setTimeZone:v13];
    uint64_t v12 = [v5 calendar];
    id v11 = v12;
    id v14 = v5;
  }
  else
  {
    if (!v5)
    {
      uint64_t v10 = 0;
      goto LABEL_13;
    }
    id v11 = v5;
    uint64_t v12 = _REMSharedGregorianCalendarForTimeZone(v4);
    uint64_t v13 = v12;
    id v14 = v11;
  }
  uint64_t v10 = [v12 dateFromComponents:v14];

LABEL_13:
LABEL_14:

  return v10;
}

id _REMSharedGregorianCalendarForTimeZone(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 name];
  id v3 = v2;
  if (v1)
  {
    if (!v2)
    {
      id v4 = 0;
      goto LABEL_14;
    }
  }
  else
  {

    id v3 = @"__floating";
  }
  os_unfair_lock_lock((os_unfair_lock_t)&_REMSharedGregorianCalendarForTimeZone___sharedGeorgianCalendarLock);
  id v5 = (void *)_REMSharedGregorianCalendarForTimeZone___calendarCache;
  if (!_REMSharedGregorianCalendarForTimeZone___calendarCache)
  {
    uint64_t v6 = [objc_alloc(MEMORY[0x1E4F1CA60]) initWithCapacity:1];
    id v7 = (void *)_REMSharedGregorianCalendarForTimeZone___calendarCache;
    _REMSharedGregorianCalendarForTimeZone___calendarCache = v6;

    id v5 = (void *)_REMSharedGregorianCalendarForTimeZone___calendarCache;
  }
  id v4 = [v5 objectForKeyedSubscript:v3];
  if (v4) {
    goto LABEL_10;
  }
  id v8 = objc_alloc(MEMORY[0x1E4F1C9A8]);
  id v9 = (void *)[v8 initWithCalendarIdentifier:*MEMORY[0x1E4F1C318]];
  id v4 = v9;
  if (v9)
  {
    [v9 setTimeZone:v1];
    [(id)_REMSharedGregorianCalendarForTimeZone___calendarCache setObject:v4 forKeyedSubscript:v3];
LABEL_10:
    if ([(__CFString *)v3 isEqualToString:@"__floating"])
    {
      uint64_t v10 = [v4 timeZone];
      id v11 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
      char v12 = objc_msgSend(v10, "rem_isEquivalentTo:", v11);

      if ((v12 & 1) == 0)
      {
        uint64_t v13 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
        [v4 setTimeZone:v13];
      }
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&_REMSharedGregorianCalendarForTimeZone___sharedGeorgianCalendarLock);
LABEL_14:

  return v4;
}

OS_os_log *rem_logObject()
{
  return +[REMLog utility];
}

void sub_1B9AE6F94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
}

id REMInvalidICSAlarmDateComponents()
{
  if (REMInvalidICSAlarmDateComponents_onceToken != -1) {
    dispatch_once(&REMInvalidICSAlarmDateComponents_onceToken, &__block_literal_global_7);
  }
  uint64_t v0 = (void *)REMInvalidICSAlarmDateComponents_sInvalidDate;

  return v0;
}

void __REMInvalidICSAlarmDateComponents_block_invoke()
{
  id v0 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
  id v1 = (void *)REMInvalidICSAlarmDateComponents_sInvalidDate;
  REMInvalidICSAlarmDateComponents_sInvalidDate = (uint64_t)v0;

  id v2 = objc_alloc(MEMORY[0x1E4F1C9A8]);
  id v5 = (id)[v2 initWithCalendarIdentifier:*MEMORY[0x1E4F1C3B0]];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setCalendar:v5];
  id v3 = (void *)REMInvalidICSAlarmDateComponents_sInvalidDate;
  id v4 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
  [v3 setTimeZone:v4];

  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setYear:1976];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setMonth:4];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setDay:1];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setHour:0];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setMinute:55];
  [(id)REMInvalidICSAlarmDateComponents_sInvalidDate setSecond:45];
}

uint64_t REMIsInvalidICSAlarmDateComponents(void *a1)
{
  id v1 = a1;
  id v2 = REMInvalidICSAlarmDateComponents();
  if ([v2 isEqual:v1])
  {
    uint64_t v3 = 1;
  }
  else
  {
    uint64_t v4 = [v2 year];
    if (v4 == [v1 year]
      && (uint64_t v5 = [v2 month], v5 == objc_msgSend(v1, "month"))
      && (uint64_t v6 = [v2 day], v6 == objc_msgSend(v1, "day"))
      && (uint64_t v7 = [v2 hour], v7 == objc_msgSend(v1, "hour"))
      && (uint64_t v8 = [v2 minute], v8 == objc_msgSend(v1, "minute"))
      && (uint64_t v9 = [v2 second], v9 == objc_msgSend(v1, "second")))
    {
      uint64_t v10 = [v1 timeZone];
      if (v10)
      {
        id v11 = [v2 timeZone];
        char v12 = [v1 timeZone];
        uint64_t v3 = objc_msgSend(v11, "rem_isEquivalentTo:", v12);
      }
      else
      {
        uint64_t v3 = 1;
      }
    }
    else
    {
      uint64_t v3 = 0;
    }
  }

  return v3;
}

void *REMSpecificCast(uint64_t a1, void *a2)
{
  if (!a2) {
    return 0;
  }
  if ([a2 isMemberOfClass:a1]) {
    return a2;
  }
  return 0;
}

void *REMProtocolCast(uint64_t a1, void *a2)
{
  if (!a2) {
    return 0;
  }
  if ([a2 conformsToProtocol:a1]) {
    return a2;
  }
  return 0;
}

void *REMClassAndProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = a1;
  if (a1)
  {
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return 0;
    }
    uint64_t v13 = &a9;
    if (a3)
    {
      while (1)
      {
        id v11 = v13++;
        if (([v9 conformsToProtocol:*v11] & 1) == 0) {
          break;
        }
        if (!--a3) {
          return v9;
        }
      }
      return 0;
    }
  }
  return v9;
}

CFTypeRef REMCFTypeCast(uint64_t a1, CFTypeRef cf)
{
  if (!cf) {
    return 0;
  }
  if (CFGetTypeID(cf) == a1) {
    return cf;
  }
  return 0;
}

uint64_t REMCheckedDynamicCast(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 && (objc_opt_isKindOfClass() & 1) == 0)
  {
    uint64_t v5 = +[REMLog utility];
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_FAULT)) {
      REMCheckedDynamicCast_cold_1(v2, a1, v5);
    }
    return 0;
  }
  return v2;
}

void *REMCheckedProtocolCast(Protocol *a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    uint64_t v5 = +[REMLog utility];
    if (os_log_type_enabled((os_log_t)v5, OS_LOG_TYPE_FAULT)) {
      REMCheckedProtocolCast_cold_1((uint64_t)a2, v5);
    }
  }
  if (a2 && ([a2 conformsToProtocol:a1] & 1) == 0)
  {
    uint64_t v6 = +[REMLog utility];
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_FAULT))
    {
      uint64_t v7 = objc_opt_class();
      if (a1) {
        Name = protocol_getName(a1);
      }
      else {
        Name = "<No protocol supplied>";
      }
      int v9 = 138412546;
      uint64_t v10 = v7;
      __int16 v11 = 2080;
      char v12 = Name;
      _os_log_fault_impl(&dword_1B9AA2000, (os_log_t)v6, OS_LOG_TYPE_FAULT, "rem_log_fault_if (src != nil && result == nil) -- Unexpected object type in checked protocol cast %@ expects %s", (uint8_t *)&v9, 0x16u);
    }
    return 0;
  }
  return a2;
}

void sub_1B9AED570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __cdSavedReminderKeyToStorageKeyMap_block_invoke()
{
  objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"titleDocumentData", @"metadata", @"titleDocument", @"metadata", @"priority", @"metadata", @"flagged", @"metadata", @"creationDate", @"metadata", @"recurrenceRules", @"metadata", @"startDateComponents", @"metadata", @"dueDateComponents", @"metadata", @"timeZone",
    @"metadata",
    @"allDay",
    @"metadata",
    @"notesDocumentData",
    @"metadata",
    @"notesDocument",
    @"metadata",
    @"alarms",
    @"metadata",
    @"dueDateDeltaAlertsData",
    @"metadata",
    @"hashtags",
    @"metadata",
    @"contactHandles",
    @"metadata",
    @"parentReminderID",
    @"parentSavedReminderIdentifier",
    @"listID",
    @"template",
  cdSavedReminderKeyToStorageKeyMap_mapping = 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t __cdReminderKeyToStorageKeyMap_block_invoke()
{
  cdReminderKeyToStorageKeyMap_mapping = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"startDateComponents", @"startDate", @"dueDateComponents", @"dueDate", @"alarms", @"alarmStorage", @"listID", @"list", @"parentReminderID", @"parentReminder", 0);

  return MEMORY[0x1F41817F8]();
}

void OUTLINED_FUNCTION_1_3(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

void sub_1B9AF0398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF0C64(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_1B9AF7448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF7904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF7BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF7F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF8350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF86C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF8988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF8D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF9180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF945C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF9660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF9940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B9AF9B8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9AFA648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_1B9AFAE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __cdSmartListSectionKeyToStorageKeyMap_block_invoke()
{
  cdSmartListSectionKeyToStorageKeyMap_mapping = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentID", @"smartList", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t __cdTemplateSectionKeyToStorageKeyMap_block_invoke()
{
  cdTemplateSectionKeyToStorageKeyMap_mapping = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentID", @"template", 0);

  return MEMORY[0x1F41817F8]();
}

uint64_t __cdListSectionKeyToStorageKeyMap_block_invoke()
{
  cdListSectionKeyToStorageKeyMap_mapping = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentID", @"list", 0);

  return MEMORY[0x1F41817F8]();
}

BOOL rem_isUnsupportedVersionByRuntime(uint64_t a1)
{
  return rem_currentRuntimeVersion() < a1;
}

uint64_t rem_loggableSupportedVersionFrom(void *a1)
{
  uint64_t v1 = NSString;
  id v2 = a1;
  uint64_t v3 = [v2 minimumSupportedVersion];
  uint64_t v4 = [v2 effectiveMinimumSupportedVersion];
  int v5 = [v2 isUnsupported];

  uint64_t v6 = @"N";
  if (v5) {
    uint64_t v6 = @"Y";
  }
  return [v1 stringWithFormat:@"supportedVersion=(V:%lld,EV:%lld,U:%@)", v3, v4, v6];
}

void sub_1B9B08D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,os_activity_scope_state_s state,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_1B9B091D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1B9B09574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B1582C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1B9B15D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _defaultPropertiesAffectingIsConcealed()
{
  v2[2] = *MEMORY[0x1E4F143B8];
  v2[0] = @"markedForDeletion";
  v2[1] = @"effectiveMinimumSupportedAppVersion";
  id v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:2];

  return v0;
}

void OUTLINED_FUNCTION_4_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_5_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t REMLocalizedTimeOfDayCreationHour(unint64_t a1)
{
  if (a1 >= 6) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1 + 59;
  }
  uint64_t v3 = _REMGetLocalizedString(v2);
  uint64_t v4 = v3;
  if (v3)
  {
    uint64_t v5 = [v3 integerValue];
  }
  else if (a1 - 1 > 4)
  {
    uint64_t v5 = 9;
  }
  else
  {
    uint64_t v5 = qword_1B9BF2188[a1 - 1];
  }

  return v5;
}

void OUTLINED_FUNCTION_4_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_1_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_2_2(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_4(uint64_t result, float a2)
{
  float *v3 = a2;
  void *v2 = result;
  return result;
}

uint64_t _auto_REMAccountTypeForPrimaryCloudKit()
{
  return 2;
}

id cloudBasedAccountTypes()
{
  if (cloudBasedAccountTypes_onceToken != -1) {
    dispatch_once(&cloudBasedAccountTypes_onceToken, &__block_literal_global_19);
  }
  id v0 = (void *)cloudBasedAccountTypes_result;

  return v0;
}

void __cloudBasedAccountTypes_block_invoke()
{
  id v0 = (void *)cloudBasedAccountTypes_result;
  cloudBasedAccountTypes_result = (uint64_t)&unk_1F136C110;
}

id cloudKitAccountTypes()
{
  if (cloudKitAccountTypes_onceToken != -1) {
    dispatch_once(&cloudKitAccountTypes_onceToken, &__block_literal_global_9);
  }
  id v0 = (void *)cloudKitAccountTypes_result;

  return v0;
}

void __cloudKitAccountTypes_block_invoke()
{
  id v0 = (void *)cloudKitAccountTypes_result;
  cloudKitAccountTypes_result = (uint64_t)&unk_1F136C128;
}

BOOL REMAccountTypeMaskContainsType(unint64_t a1, char a2)
{
  return ((1 << a2) & a1) != 0;
}

__CFString *NSStringFromREMAccountType(uint64_t a1)
{
  result = @"Local";
  switch(a1)
  {
    case 0:
      uint64_t v4 = +[REMLogStore read];
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        NSStringFromREMAccountType_cold_2();
      }

      goto LABEL_11;
    case 1:
      return result;
    case 2:
      result = @"iCloud";
      break;
    case 3:
      result = @"CalDAV";
      break;
    case 4:
      result = @"Exchange";
      break;
    case 6:
      result = @"iCloud Non-primary";
      break;
    default:
      uint64_t v5 = +[REMLogStore read];
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        NSStringFromREMAccountType_cold_1(a1);
      }

LABEL_11:
      result = @"Unknown";
      break;
  }
  return result;
}

__CFString *REMInternalDescriptionFromREMAccountType(uint64_t a1)
{
  result = @"Unknown";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = @"Local";
      break;
    case 2:
      result = @"CloudKit_Primary";
      break;
    case 3:
      result = @"CalDav";
      break;
    case 4:
      result = @"Exchange";
      break;
    case 5:
      result = @"LocalInternal";
      break;
    case 6:
      result = @"CloudKit_Full";
      break;
    case 7:
      uint64_t v5 = +[REMLogStore read];
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        REMInternalDescriptionFromREMAccountType_cold_2();
      }

      result = @"count";
      break;
    default:
      uint64_t v4 = +[REMLogStore read];
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
        NSStringFromREMAccountType_cold_1(a1);
      }

      result = @"Undefined";
      break;
  }
  return result;
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2_3(uint64_t a1@<X8>)
{
  *(void *)(v1 - _Block_object_dispose(&STACK[0x260], 8) = a1;
}

void sub_1B9B324D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B3261C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B32778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B329C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B32CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B33A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B342C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getUMUserManagerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getUMUserManagerClass_softClass;
  uint64_t v7 = getUMUserManagerClass_softClass;
  if (!getUMUserManagerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getUMUserManagerClass_block_invoke;
    v3[3] = &unk_1E61DDA60;
    v3[4] = &v4;
    __getUMUserManagerClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_1B9B343B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getUMUserManagerClass_block_invoke(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("UMUserManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUMUserManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getUMUserManagerClass_block_invoke_cold_1();
    UserManagementLibrary();
  }
}

void UserManagementLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __UserManagementLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E61DDA80;
    uint64_t v3 = 0;
    UserManagementLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v0 = (void *)v1[0];
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    id v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __UserManagementLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UserManagementLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getUMUserPersonaAttributesClass_block_invoke(uint64_t a1)
{
  UserManagementLibrary();
  Class result = objc_getClass("UMUserPersonaAttributes");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUMUserPersonaAttributesClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)__getUMUserPersonaAttributesClass_block_invoke_cold_1();
    return (Class)+[_REMNSPersistentHistoryTransactionStorage supportsSecureCoding];
  }
  return result;
}

void sub_1B9B3BA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

char *NewBase64Decode(char *__s, size_t a2, uint64_t *a3)
{
  size_t v4 = a2;
  if (a2 == -1) {
    size_t v4 = strlen(__s);
  }
  Class result = (char *)malloc_type_calloc(3 * (v4 >> 2), 1uLL, 0x100004077774924uLL);
  uint64_t v7 = 0;
  if (v4)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = 0;
      int v15 = 0;
      do
      {
        uint64_t v10 = v8;
        int v11 = base64DecodeLookup[__s[v8]];
        if (v11 != 65)
        {
          *((unsigned char *)&v15 + v9++) = v11;
          if (v9 == 4) {
            break;
          }
        }
        uint64_t v8 = v10 + 1;
      }
      while (v10 + 1 < v4);
      char v12 = BYTE1(v15);
      uint64_t v13 = &result[v7];
      char *v13 = (BYTE1(v15) >> 4) | (4 * v15);
      char v14 = BYTE2(v15);
      v13[1] = (BYTE2(v15) >> 2) | (16 * v12);
      v13[2] = HIBYTE(v15) | (v14 << 6);
      uint64_t v7 = v7 + v9 - 1;
      uint64_t v8 = v10 + 1;
    }
    while (v10 + 1 < v4);
  }
  if (a3) {
    *a3 = v7;
  }
  return result;
}

unsigned char *NewBase64Encode(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  if (a2 == 3 * (a2 / 3)) {
    unint64_t v8 = a2 / 3;
  }
  else {
    unint64_t v8 = a2 / 3 + 1;
  }
  uint64_t v9 = (v8 >> 3) & 0x7FFFFFFFFFFFFFFLL;
  if (!a3) {
    uint64_t v9 = 0;
  }
  Class result = malloc_type_calloc((v9 + 4 * v8) | 1, 1uLL, 0x100004077774924uLL);
  if (result)
  {
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    if (a3) {
      uint64_t v13 = 48;
    }
    else {
      uint64_t v13 = a2;
    }
    unint64_t v14 = v13;
    while (1)
    {
      unint64_t v15 = v14 >= a2 ? a2 : v14;
      if (v11 + 2 >= v15)
      {
        unint64_t v17 = v11;
      }
      else
      {
        do
        {
          uint64_t v16 = &result[v12 + 3];
          *(v16 - 3) = base64EncodeLookup[(unint64_t)*(unsigned __int8 *)(a1 + v11) >> 2];
          *(v16 - 2) = base64EncodeLookup[((unint64_t)*(unsigned __int8 *)(a1 + v11 + 1) >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (*(unsigned char *)(a1 + v11) & 3))];
          *(v16 - 1) = base64EncodeLookup[((unint64_t)*(unsigned __int8 *)(a1 + v11 + 2) >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (*(unsigned char *)(a1 + v11 + 1) & 0xF))];
          unint64_t v17 = v11 + 3;
          v12 += 4;
          unsigned char *v16 = base64EncodeLookup[*(unsigned char *)(a1 + v11 + 2) & 0x3F];
          unint64_t v18 = v11 + 5;
          v11 += 3;
        }
        while (v18 < v15);
      }
      if (v14 >= a2) {
        break;
      }
      *(_WORD *)&result[v12] = 2573;
      v12 += 2;
      unint64_t v14 = v15 + v13;
      unint64_t v11 = v17;
    }
    unint64_t v19 = v17 + 1;
    if (v17 + 1 >= a2)
    {
      if (v17 >= a2) {
        goto LABEL_25;
      }
      long long v22 = &result[v12];
      unsigned char *v22 = base64EncodeLookup[(unint64_t)*(unsigned __int8 *)(a1 + v17) >> 2];
      v22[1] = base64EncodeLookup[16 * (*(unsigned char *)(a1 + v17) & 3)];
      char v21 = 61;
    }
    else
    {
      long long v20 = &result[v12];
      unsigned char *v20 = base64EncodeLookup[(unint64_t)*(unsigned __int8 *)(a1 + v17) >> 2];
      v20[1] = base64EncodeLookup[((unint64_t)*(unsigned __int8 *)(a1 + v19) >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (*(unsigned char *)(a1 + v17) & 3))];
      char v21 = base64EncodeLookup[4 * (*(unsigned char *)(a1 + v19) & 0xF)];
    }
    long long v23 = &result[v12];
    v23[2] = v21;
    v12 += 4;
    v23[3] = 61;
LABEL_25:
    result[v12] = 0;
    if (a4) {
      *a4 = v12;
    }
  }
  return result;
}

void sub_1B9B3F29C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0xCu);
}

uint64_t __cdKeyToStorageKeyMap_block_invoke_0()
{
  cdKeyToStorageKeyMap_mapping_0 = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentAccountID", @"parentAccount", @"parentListID", @"parentList", 0);

  return MEMORY[0x1F41817F8]();
}

void sub_1B9B47D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_10_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_fault_impl(a1, v4, OS_LOG_TYPE_FAULT, a4, v5, 0xCu);
}

__CFString *NSStringFromREMFetchRequestType(unint64_t a1)
{
  if (a1 >= 5)
  {
    objc_msgSend(NSString, "stringWithFormat:", @"Unknown REMFetchRequestType %ld", a1);
    id v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v1 = off_1E61DDBC0[a1];
  }

  return v1;
}

uint64_t __cdKeyToStorageKeyMap_block_invoke_1()
{
  cdKeyToStorageKeyMap_mapping_1 = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentAccountID", @"parentAccount", @"parentListID", @"parentList", 0);

  return MEMORY[0x1F41817F8]();
}

void sub_1B9B5669C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getUMUserManagerClass_block_invoke_0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("UMUserManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUMUserManagerClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getUMUserManagerClass_block_invoke_cold_1();
    UserManagementLibrary_0();
  }
}

void UserManagementLibrary_0()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!UserManagementLibraryCore_frameworkLibrary_0)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __UserManagementLibraryCore_block_invoke_0;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E61DDDA8;
    uint64_t v3 = 0;
    UserManagementLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  id v0 = (void *)v1[0];
  if (!UserManagementLibraryCore_frameworkLibrary_0)
  {
    id v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __UserManagementLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  UserManagementLibraryCore_frameworkLibrary_0 = result;
  return result;
}

Class __getUMUserPersonaAttributesClass_block_invoke_0(uint64_t a1)
{
  UserManagementLibrary_0();
  Class result = objc_getClass("UMUserPersonaAttributes");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUMUserPersonaAttributesClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (void *)__getUMUserPersonaAttributesClass_block_invoke_cold_1();
    return (Class)+[REMDisplayDateUtils _displayDateWithDueDateComponents:v5 alarms:v6 hasAlarmDateComponents:v7 floatingDateComponents:v8 nonFloatingDateComponents:v9 displayDateUtils:v10];
  }
  return result;
}

void sub_1B9B5D3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __cdKeyToStorageKeyMap_block_invoke_2()
{
  cdKeyToStorageKeyMap_mapping_2 = objc_msgSend(MEMORY[0x1E4F1C9E8], "dictionaryWithObjectsAndKeys:", @"parentAccountID", @"parentAccount", 0);

  return MEMORY[0x1F41817F8]();
}

id rem_ICSDateFromNSDate(void *a1, void *a2)
{
  if (a2) {
    rem_ICSDateFromNSDateInTimezone(a1, a2);
  }
  else {
  long long v2 = rem_ICSFloatingDateTimeFromNSDateInTimezone(a1, 0);
  }

  return v2;
}

id rem_ICSDateFromNSDateInTimezone(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v4)
  {
    id v4 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
  }
  [v3 timeIntervalSinceReferenceDate];
  id v6 = rem_DateComponentsFromAbsoluteTime(v4, v5);
  BOOL v7 = objc_msgSend(objc_alloc(MEMORY[0x1E4FB7F28]), "initWithYear:month:day:hour:minute:second:timeZone:", objc_msgSend(v6, "year"), objc_msgSend(v6, "month"), objc_msgSend(v6, "day"), objc_msgSend(v6, "hour"), objc_msgSend(v6, "minute"), objc_msgSend(v6, "second"), v4);

  return v7;
}

id rem_DateComponentsFromAbsoluteTime(void *a1, double a2)
{
  id v3 = a1;
  id v4 = [MEMORY[0x1E4F1C9C8] dateWithTimeIntervalSinceReferenceDate:a2];
  double v5 = [MEMORY[0x1E4F1C9A8] CalGregorianGMTCalendar];
  id v6 = (void *)[v5 copy];

  if (v3)
  {
    [v6 setTimeZone:v3];
  }
  else
  {
    BOOL v7 = [MEMORY[0x1E4F1CAF0] timeZoneWithName:@"UTC"];
    [v6 setTimeZone:v7];
  }
  id v8 = [v6 components:252 fromDate:v4];

  return v8;
}

id rem_ICSFloatingDateTimeFromNSDateInTimezone(void *a1, void *a2)
{
  id v3 = a2;
  [a1 timeIntervalSinceReferenceDate];
  double v5 = rem_DateComponentsFromAbsoluteTime(v3, v4);

  id v6 = objc_msgSend(objc_alloc(MEMORY[0x1E4FB7F28]), "initWithYear:month:day:hour:minute:second:", objc_msgSend(v5, "year"), objc_msgSend(v5, "month"), objc_msgSend(v5, "day"), objc_msgSend(v5, "hour"), objc_msgSend(v5, "minute"), objc_msgSend(v5, "second"));

  return v6;
}

void ___setSubcomponentsOnICSComponent_block_invoke()
{
  REMInvalidICSAlarmDateComponents();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v0 = objc_msgSend(objc_alloc(MEMORY[0x1E4FB7F30]), "initWithYear:month:day:hour:minute:second:", objc_msgSend(v3, "year"), objc_msgSend(v3, "month"), objc_msgSend(v3, "day"), objc_msgSend(v3, "hour"), objc_msgSend(v3, "minute"), objc_msgSend(v3, "second"));
  uint64_t v1 = [objc_alloc(MEMORY[0x1E4FB7FA8]) initWithDate:v0];
  long long v2 = (void *)_setSubcomponentsOnICSComponent_sInvalidTrigger;
  _setSubcomponentsOnICSComponent_sInvalidTrigger = v1;
}

uint64_t REMReminderPriorityLevelForPriority(unint64_t a1)
{
  uint64_t v1 = 3;
  uint64_t v2 = 1;
  if (a1 == 5) {
    uint64_t v2 = 2;
  }
  if (a1 >= 5) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t REMReminderDefaultPriorityForPriorityLevel(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 3) {
    return 0;
  }
  else {
    return 9 - 4 * (a1 - 1);
  }
}

__CFString *NSStringFromPriorityLevel(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"none";
  }
  else {
    return off_1E61DDE88[a1 - 1];
  }
}

__CFString *PropertyNameFromREMReminderChangeTrackingProperty(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 0x11) {
    return off_1E61DDEA0[a1 - 1];
  }
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"Unexpected REMReminderChangeTrackingProperty key."];
  return 0;
}

void OUTLINED_FUNCTION_0_7(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_1B9B69D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B72914(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72D98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72EF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B72FC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7387C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v4, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B73A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B73B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B73D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B73EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void sub_1B9B73F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B73FDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7406C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B740F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B742C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B743D4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v2, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B74478(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1B9B74550(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Document_DocObject>::New()
{
}

void sub_1B9B746E8(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Document_CustomObject_MapEntry>::New()
{
}

void sub_1B9B7474C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40078F06BDLL);
  _Unwind_Resume(a1);
}

void std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E61DBD50, MEMORY[0x1E4FBA1C8]);
}

{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E61DBD50, MEMORY[0x1E4FBA1C8]);
}

void sub_1B9B747D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  Class result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    id v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    id v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    id v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    id v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

void sub_1B9B749A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74AF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74BE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74DB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B74F6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7502C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B75184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B7541C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7553C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7561C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7584C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B759D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B75E1C(_Unwind_Exception *a1)
{
  size_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1B9B75FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B760C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B76160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B763B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B76500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B76918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9B76BF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B76EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9B770E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B773D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::Dictionary_Element>::New()
{
}

void sub_1B9B77548(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C4079506790);
  _Unwind_Resume(a1);
}

void sub_1B9B78960(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *removeDirectToSinkEdges(void *result)
{
  uint64_t v1 = result[7];
  uint64_t v2 = v1 - result[6];
  if ((unint64_t)v2 >= 9)
  {
    id v3 = result;
    unint64_t v4 = 0;
    unint64_t v5 = v2 >> 3;
    do
    {
      uint64_t v6 = v3[6] + 8 * v4;
      unsigned int v7 = *(_DWORD *)(*(void *)v6 + 72);
      if (v7 < 2)
      {
        ++v4;
      }
      else
      {
        *(_DWORD *)(*(void *)v6 + 72) = v7 - 1;
        uint64_t v8 = v1 - (v6 + 8);
        if (v1 != v6 + 8) {
          Class result = memmove((void *)v6, (const void *)(v6 + 8), v1 - (v6 + 8));
        }
        uint64_t v1 = v6 + v8;
        v3[7] = v6 + v8;
        --v5;
      }
    }
    while (v4 < v5);
  }
  return result;
}

void minIdPath(TopoSubstring *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  id v3 = *(id *)a1;
  uint64_t v4 = *((unsigned int *)v2 + 2);
  v72 = 0;
  v73 = 0;
  uint64_t v74 = 0;
  long long v69 = 0u;
  long long v70 = 0u;
  float v71 = 1.0;
  uint64_t v6 = (TopoSubstring ***)((char *)v2 + 48);
  unint64_t v5 = (TopoSubstring **)*((void *)v2 + 6);
  uint64_t v8 = (void *)((char *)v2 + 56);
  unsigned int v7 = (TopoSubstring **)*((void *)v2 + 7);
  if (v7 == v5)
  {
    unint64_t v9 = 0;
  }
  else
  {
    unint64_t v9 = 0;
    while (1)
    {
      if ((unint64_t)((char *)v7 - (char *)v5) >= 9)
      {
        uint64_t v10 = v2;
        unint64_t v11 = v6;
        uint64_t v12 = v8;
        removeDirectToSinkEdges(v10);
        uint64_t v8 = v12;
        uint64_t v6 = v11;
        unsigned int v7 = (TopoSubstring **)*v12;
        unint64_t v5 = *v11;
      }
      uint64_t v13 = (char *)v7 - (char *)v5;
      if (v13 != 8) {
        break;
      }
      uint64_t v2 = *v5;
      if (*((_DWORD *)*v5 + 18) > 1u)
      {
        unint64_t v9 = 1;
        goto LABEL_76;
      }
      id v14 = v3;
      id v15 = *(id *)v2;
      uint64_t v16 = v15;
      uint64_t v17 = *((unsigned int *)v2 + 2);
      if (v4 < v17)
      {
        unint64_t v18 = v14;
LABEL_70:
        uint64_t v17 = v4;
        goto LABEL_71;
      }
      unint64_t v18 = v15;
      if (v4 == v17)
      {
        if ([v14 TTCompare:v15] == -1) {
          unint64_t v18 = v14;
        }
        else {
          unint64_t v18 = v16;
        }
        goto LABEL_70;
      }
LABEL_71:
      id v3 = v18;

      uint64_t v4 = v17;
LABEL_72:
      uint64_t v6 = (TopoSubstring ***)((char *)v2 + 48);
      unint64_t v5 = (TopoSubstring **)*((void *)v2 + 6);
      uint64_t v8 = (void *)((char *)v2 + 56);
      unsigned int v7 = (TopoSubstring **)*((void *)v2 + 7);
      if (v7 == v5) {
        goto LABEL_76;
      }
    }
    v60 = (id **)v8;
    v61 = (id **)v6;
    uint64_t v19 = (uint64_t)v72;
    long long v20 = v73;
    if (v73 != v72)
    {
      do
      {
        char v21 = *(v20 - 5);
        v20 -= 5;
      }
      while (v20 != (id *)v19);
      uint64_t v13 = (char *)*v60 - (char *)*v61;
    }
    v73 = (id *)v19;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve((uint64_t *)&v72, v13 >> 3);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(&v69);
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>((uint64_t)&v69, vcvtps_u32_f32((float)(unint64_t)(*v60 - *v61) / v71));
    long long v22 = *v61;
    long long v23 = *v60;
    while (v22 != v23)
    {
      id obj = 0;
      id obj = *v22;
      *(void *)&long long v66 = &obj;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v69, &obj, (uint64_t)&std::piecewise_construct, (void **)&v66)[3] = 1;
      *(void *)&long long v66 = 0;
      DWORD2(v66) = 0;
      long long v67 = (unint64_t)obj;
      id v68 = obj;
      std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100]((uint64_t *)&v72, (uint64_t *)&v66);

      ++v22;
    }
    do
    {
      long long v66 = 0u;
      long long v67 = 0u;
      LODWORD(v6_Block_object_dispose(&STACK[0x260], 8) = 1065353216;
      long long v24 = (void *)v70;
      if ((void)v70)
      {
        while (1)
        {
          uint64_t v25 = v24[2];
          unint64_t v26 = v24[3];
          id v65 = (id)v25;
          if (v26 < *(unsigned int *)(v25 + 72)) {
            goto LABEL_47;
          }
          minIdPath((uint64_t *)&obj, (TopoSubstring *)v25);
          if (v73 == v72) {
            goto LABEL_39;
          }
          uint64_t v27 = 0;
          id v28 = obj;
          if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1) {
            uint64_t v29 = 1;
          }
          else {
            uint64_t v29 = ((char *)v73 - (char *)v72) / 40;
          }
          do
          {
            if (v72[v27 + 2] == v65 && v72[v27])
            {
              id v30 = v28;
              unsigned int v31 = v63;
              v32 = &v72[v27];
              id v33 = v72[v27];
              v34 = v33;
              unsigned int v35 = *((_DWORD *)v32 + 2);
              if (v31 < v35)
              {
                v36 = v30;
                goto LABEL_29;
              }
              v36 = v33;
              if (v31 == v35)
              {
                if ([v30 TTCompare:v33] == -1) {
                  v36 = v30;
                }
                else {
                  v36 = v34;
                }
LABEL_29:
                unsigned int v35 = v31;
              }
              id v28 = v36;

              unsigned int v63 = v35;
            }
            v27 += 5;
            --v29;
          }
          while (v29);
          id obj = v28;
          if (v73 != v72)
          {
            uint64_t v37 = 0;
            unsigned int v38 = v63;
            if ((unint64_t)(((char *)v73 - (char *)v72) / 40) <= 1) {
              uint64_t v39 = 1;
            }
            else {
              uint64_t v39 = ((char *)v73 - (char *)v72) / 40;
            }
            do
            {
              v40 = &v72[v37];
              v41 = &v72[v37 + 2];
              if (*v41 == v65)
              {
                objc_storeStrong(&v72[v37], v28);
                *((_DWORD *)v40 + 2) = v38;
                *(_OWORD *)v41 = v64;
              }
              v37 += 5;
              --v39;
            }
            while (v39);
          }
LABEL_39:
          id v42 = v3;
          id v43 = obj;
          v44 = v43;
          uint64_t v45 = v63;
          if (v4 < v63)
          {
            v46 = v42;
            goto LABEL_45;
          }
          v46 = v43;
          if (v4 == v63)
          {
            if ([v42 TTCompare:v43] == -1) {
              v46 = v42;
            }
            else {
              v46 = v44;
            }
LABEL_45:
            uint64_t v45 = v4;
          }
          id v3 = v46;

          unint64_t v26 = *((void *)&v64 + 1);
          id v65 = (id)v64;

          uint64_t v4 = v45;
LABEL_47:
          v47 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(&v66, &v65);
          if (v47)
          {
            v47[3] += v26;
          }
          else
          {
            id obj = &v65;
            std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)&v66, &v65, (uint64_t)&std::piecewise_construct, (void **)&obj)[3] = v26;
          }
          long long v24 = (void *)*v24;
          if (!v24)
          {
            float v48 = *(float *)&v68;
            v49 = (__n128 *)v67;
            goto LABEL_53;
          }
        }
      }
      v49 = 0;
      float v48 = 1.0;
LABEL_53:
      float v71 = v48;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(&v69, v49, 0);
      uint64_t v50 = (uint64_t)v72;
      v51 = v73;
      if ((char *)v73 - (char *)v72 < 1)
      {
        v52 = 0;
        uint64_t v54 = 0;
      }
      else
      {
        v52 = (void **)std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(0xCCCCCCCCCCCCCCCDLL * (v73 - v72));
        uint64_t v54 = v53;
      }
      std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v50, v51, 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v51 - v50) >> 3), v52, v54);
      if (v52) {
        operator delete(v52);
      }
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v66);
    }
    while (*((void *)&v70 + 1) > 1uLL);
    if (*v60 != *v61)
    {
      uint64_t v55 = 0;
      unint64_t v56 = *v60 - *v61;
      if (v56 <= 1) {
        unint64_t v56 = 1;
      }
      uint64_t v57 = 4;
      do
      {
        (*v61)[v55++] = v72[v57];
        v57 += 5;
      }
      while (v56 != v55);
    }
    uint64_t v2 = *(TopoSubstring **)(v70 + 16);
    unint64_t v9 = *(void *)(v70 + 24);
    if (v9 >= *((unsigned int *)v2 + 18)) {
      goto LABEL_72;
    }
  }
LABEL_76:
  id v58 = v3;
  *(void *)a2 = v58;
  *(_DWORD *)(a2 + _Block_object_dispose(&STACK[0x260], 8) = v4;
  *(void *)(a2 + 16) = v2;
  *(void *)(a2 + 24) = v9;
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&v69);
  *(void *)&long long v69 = &v72;
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v69);
}

void sub_1B9B78FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a23);
  a23 = (void **)(v25 - 120);
  std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](&a23);

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::reserve(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x666666666666667) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 40 * v6;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v7);
  }
  return result;
}

void sub_1B9B790F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<minIdPathData,TopoSubstring *>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - *a1) >> 3);
    unint64_t v11 = v10 + 1;
    if (v10 + 1 > 0x666666666666666) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x333333333333333) {
      unint64_t v13 = 0x666666666666666;
    }
    else {
      unint64_t v13 = v11;
    }
    v18[4] = result;
    id v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(result, v13);
    id v15 = &v14[40 * v10];
    v18[0] = v14;
    v18[1] = v15;
    v18[3] = &v14[40 * v16];
    uint64_t v17 = *a2;
    *a2 = 0;
    *(void *)id v15 = v17;
    *((_DWORD *)v15 + 2) = *((_DWORD *)a2 + 2);
    *((_OWORD *)v15 + 1) = *((_OWORD *)a2 + 1);
    *((void *)v15 + 4) = a2[4];
    v18[2] = v15 + 40;
    std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(a1, v18);
    uint64_t v9 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)v18);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)a2 + 2);
    *(_OWORD *)(v7 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(v7 + 32) = a2[4];
    uint64_t v9 = v7 + 40;
    a1[1] = v7 + 40;
  }
  a1[1] = v9;
  return result;
}

void sub_1B9B79240(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t traverseRecursive(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v17 = a1;
  unint64_t v5 = a3;
  char v16 = 0;
  if (*(_DWORD *)(v4 + 72) >= 2u)
  {
    unint64_t v6 = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(a2, &v17);
    if (!v6)
    {
      int v11 = *(_DWORD *)(v17 + 72);
      unint64_t v18 = &v17;
      uint64_t v10 = 0;
      *((_DWORD *)std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>((uint64_t)a2, &v17, (uint64_t)&std::piecewise_construct, &v18)+ 6) = v11 - 1;
      goto LABEL_20;
    }
    int v7 = *((_DWORD *)v6 + 6) - 1;
    *((_DWORD *)v6 + 6) = v7;
    if (v7)
    {
LABEL_19:
      uint64_t v10 = 0;
      goto LABEL_20;
    }
    uint64_t v4 = v17;
  }
  v5[2](v5, v4, &v16);
  while (1)
  {
    if (v16)
    {
      uint64_t v10 = 1;
      goto LABEL_20;
    }
    uint64_t v8 = *(uint64_t **)(v17 + 48);
    uint64_t v9 = *(uint64_t **)(v17 + 56);
    if ((char *)v9 - (char *)v8 != 8 || *(_DWORD *)(*v8 + 72) != 1) {
      break;
    }
    uint64_t v17 = *v8;
    ((void (*)(void (**)(id, uint64_t, char *)))v5[2])(v5);
  }
  if (v8 == v9) {
    goto LABEL_19;
  }
  unint64_t v12 = v8 + 1;
  do
  {
    uint64_t v13 = traverseRecursive(*(v12 - 1), a2, v5);
    uint64_t v10 = v13;
    if (v12 == v9) {
      char v14 = 1;
    }
    else {
      char v14 = v13;
    }
    ++v12;
  }
  while ((v14 & 1) == 0);
LABEL_20:

  return v10;
}

void sub_1B9B793B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void traverseRecursive(uint64_t a1, void *a2)
{
}

void sub_1B9B79468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void traverseUnorderedSimple(uint64_t a1, void *a2)
{
  uint64_t v14 = a1;
  uint64_t v2 = a2;
  memset(v12, 0, sizeof(v12));
  int v13 = 1065353216;
  long long v11 = 0u;
  memset(v10, 0, sizeof(v10));
  char v9 = 0;
  std::deque<TopoSubstring *>::push_back(v10, &v14);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v12, &v14, &v14);
  for (uint64_t i = *((void *)&v11 + 1); *((void *)&v11 + 1); uint64_t i = *((void *)&v11 + 1))
  {
    uint64_t v4 = i - 1;
    uint64_t v5 = *(void *)(*(void *)(*((void *)&v10[0] + 1) + (((unint64_t)(v11 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v11 + v4) & 0x1FF));
    *((void *)&v11 + 1) = v4;
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v10, 1);
    v2[2](v2, v5, &v9);
    if (v9) {
      break;
    }
    int v7 = *(uint64_t **)(v5 + 48);
    unint64_t v6 = *(uint64_t **)(v5 + 56);
    while (v7 != v6)
    {
      uint64_t v8 = 0;
      uint64_t v8 = *v7;
      if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v12, &v8))
      {
        std::deque<TopoSubstring *>::push_back(v10, &v8);
        std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v12, &v8, &v8);
      }
      ++v7;
    }
  }
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v10);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v12);
}

void sub_1B9B795B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

void traverseUnordered(uint64_t a1, void *a2)
{
  uint64_t v15 = a1;
  uint64_t v2 = a2;
  memset(v13, 0, sizeof(v13));
  int v14 = 1065353216;
  long long v12 = 0u;
  memset(v11, 0, sizeof(v11));
  char v10 = 0;
  std::deque<TopoSubstring *>::push_back(v11, &v15);
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v13, &v15, &v15);
  for (uint64_t i = *((void *)&v12 + 1); *((void *)&v12 + 1); uint64_t i = *((void *)&v12 + 1))
  {
    uint64_t v4 = i - 1;
    uint64_t v5 = *(void *)(*(void *)(*((void *)&v11[0] + 1) + (((unint64_t)(v12 + v4) >> 6) & 0x3FFFFFFFFFFFFF8))
                   + 8 * ((v12 + v4) & 0x1FF));
    *((void *)&v12 + 1) = v4;
    std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](v11, 1);
    v2[2](v2, v5, &v10);
    uint64_t v6 = v5;
    if (v10) {
      break;
    }
    while (1)
    {
      uint64_t v8 = *(char **)(v6 + 48);
      uint64_t v7 = *(char **)(v6 + 56);
      if (v7 - v8 != 8) {
        break;
      }
      uint64_t v6 = *(void *)v8;
      if (*(_DWORD *)(*(void *)v8 + 72) != 1) {
        break;
      }
      v2[2](v2, *(void *)v8, &v10);
      if (v10 || v6 == v5) {
        goto LABEL_15;
      }
    }
    while (v8 != v7)
    {
      uint64_t v9 = 0;
      uint64_t v9 = *(void *)v8;
      if (*(_DWORD *)(v9 + 72) > 1u)
      {
        if (!std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(v13, &v9))
        {
          std::deque<TopoSubstring *>::push_back(v11, &v9);
          std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>((uint64_t)v13, &v9, &v9);
        }
      }
      else
      {
        std::deque<TopoSubstring *>::push_back(v11, &v9);
      }
      v8 += 8;
    }
  }
LABEL_15:
  std::deque<TopoSubstring *>::~deque[abi:ne180100](v11);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)v13);
}

void sub_1B9B79774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  std::deque<TopoSubstring *>::~deque[abi:ne180100]((uint64_t *)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);

  _Unwind_Resume(a1);
}

void hasLoop(TopoSubstring *a1)
{
  v4[0] = 0;
  v4[1] = v4;
  v4[2] = 0x2020000000;
  v4[3] = 0;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  v3[2] = ___Z7hasLoopP13TopoSubstring_block_invoke;
  v3[3] = &unk_1E61DE090;
  v3[4] = v4;
  traverseUnordered((uint64_t)a1, v3);
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = ___Z7hasLoopP13TopoSubstring_block_invoke_2;
  void v2[3] = &unk_1E61DE090;
  v2[4] = v4;
  traverseRecursive((uint64_t)a1, v2);
}

void sub_1B9B798A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke(uint64_t result)
{
  return result;
}

uint64_t ___Z7hasLoopP13TopoSubstring_block_invoke_2(uint64_t result)
{
  return result;
}

id updateTopoID(const TopoID *a1, const TopoIDRange *a2, const TopoIDRange *a3)
{
  id v6 = a1->var0;
  if ([a1->var0 isEqual:a2->var0.var0])
  {
    unsigned int var1 = a1->var1;
    unsigned int v8 = a2->var0.var1;
    if (var1 >= v8 && var1 < a2->var1 + v8)
    {
      id v9 = a3->var0.var0;

      return v9;
    }
  }
  return v6;
}

void sub_1B9B79994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void updateTopoIDRange(TopoIDRange *a1, void *a2, uint64_t a3, uint64_t *a4)
{
  if (([a1->var0.var0 isEqual:*a2] & 1) == 0)
  {
LABEL_5:
    unint64_t v13 = a4[1];
    if (v13 >= a4[2])
    {
      uint64_t v14 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)a1);
    }
    else
    {
      *(void *)unint64_t v13 = a1->var0.var0;
      *(_DWORD *)(v13 + _Block_object_dispose(&STACK[0x260], 8) = a1->var0.var1;
      *(_DWORD *)(v13 + 16) = a1->var1;
      uint64_t v14 = v13 + 24;
    }
    a4[1] = v14;
    return;
  }
  id v8 = a1->var0.var0;
  uint64_t v9 = a1->var1 + a1->var0.var1;
  id location = v8;
  uint64_t v56 = v9;
  if (TopoID::operator<=((uint64_t)&location, a2))
  {

    goto LABEL_5;
  }
  id v10 = (id)*a2;
  uint64_t v11 = (*((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2));
  id v52 = v10;
  uint64_t v53 = v11;
  BOOL v12 = TopoID::operator>=((uint64_t)a1, &v52);

  if (v12) {
    goto LABEL_5;
  }
  unsigned int var1 = a1->var0.var1;
  unsigned int v16 = *((_DWORD *)a2 + 2);
  if (v16 > var1)
  {
    TopoIDRange::splitPairAt(a1, v16 - var1, (uint64_t)&location);
    id v17 = (id)*a2;
    unsigned int v18 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
    id v19 = v58;
    long long v20 = v19;
    if (v18 >= v60 + v59)
    {
      if (v18 != v60 + v59)
      {

        goto LABEL_31;
      }
      uint64_t v39 = [v17 TTCompare:v19];

      if (v39 != -1)
      {
LABEL_31:
        id v41 = *(id *)a3;
        int v42 = *(_DWORD *)(a3 + 8);
        objc_storeStrong(&v58, v41);
        int v59 = v42;
        unint64_t v43 = a4[1];
        if (v43 >= a4[2])
        {
          unint64_t v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
        }
        else
        {
          *(void *)unint64_t v43 = location;
          *(_DWORD *)(v43 + _Block_object_dispose(&STACK[0x260], 8) = v56;
          *(_DWORD *)(v43 + 16) = v57;
          unint64_t v38 = v43 + 24;
        }
        a4[1] = v38;
        if (v38 < a4[2])
        {
LABEL_35:
          *(void *)unint64_t v38 = v58;
          *(_DWORD *)(v38 + _Block_object_dispose(&STACK[0x260], 8) = v59;
          *(_DWORD *)(v38 + 16) = v60;
          uint64_t v44 = v38 + 24;
LABEL_37:
          a4[1] = v44;

          return;
        }
LABEL_36:
        uint64_t v44 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v58);
        goto LABEL_37;
      }
    }
    else
    {
    }
    int v21 = *((_DWORD *)a2 + 4);
    id v22 = v58;
    int v23 = v59 + v21;
    id v52 = v22;
    uint64_t v53 = (v59 + v21);
    int v24 = v60 - v21;
    int v54 = v60 - v21;
    int v60 = v21;
    unint64_t v25 = a4[1];
    if (v25 >= a4[2])
    {
      uint64_t v27 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&v52);
      id v26 = v52;
    }
    else
    {
      id v26 = v22;
      *(void *)unint64_t v25 = v26;
      *(_DWORD *)(v25 + _Block_object_dispose(&STACK[0x260], 8) = v23;
      *(_DWORD *)(v25 + 16) = v24;
      uint64_t v27 = v25 + 24;
    }
    a4[1] = v27;

    goto LABEL_31;
  }
  id v28 = a1->var0.var0;
  unsigned int v29 = a1->var1 + a1->var0.var1;
  id v30 = (id)*a2;
  unsigned int v31 = v30;
  unsigned int v32 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2);
  if (v29 > v32)
  {

    goto LABEL_16;
  }
  if (v29 == v32)
  {
    uint64_t v40 = [v28 TTCompare:v30];

    if (v40 == 1)
    {
LABEL_16:
      int v33 = *((_DWORD *)a2 + 4) + *((_DWORD *)a2 + 2) - a1->var0.var1;
      id v34 = (id)*a2;
      TopoIDRange::splitPairAt(a1, v33, (uint64_t)&location);

      id v35 = *(id *)a3;
      int v36 = a1->var0.var1 + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
      objc_storeStrong(&location, v35);
      LODWORD(v56) = v36;
      unint64_t v37 = a4[1];
      if (v37 >= a4[2])
      {
        unint64_t v38 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
      }
      else
      {
        *(void *)unint64_t v37 = location;
        *(_DWORD *)(v37 + _Block_object_dispose(&STACK[0x260], 8) = v56;
        *(_DWORD *)(v37 + 16) = v57;
        unint64_t v38 = v37 + 24;
      }
      a4[1] = v38;
      if (v38 < a4[2]) {
        goto LABEL_35;
      }
      goto LABEL_36;
    }
  }
  else
  {
  }
  id v45 = a1->var0.var0;
  unsigned int v46 = a1->var1;
  unsigned int v57 = v46;
  id v47 = *(id *)a3;
  int v48 = a1->var0.var1 + *(_DWORD *)(a3 + 8) - *((_DWORD *)a2 + 2);
  id location = v47;

  LODWORD(v56) = v48;
  unint64_t v49 = a4[1];
  if (v49 >= a4[2])
  {
    uint64_t v51 = std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(a4, (uint64_t)&location);
    id v50 = location;
  }
  else
  {
    id v50 = v47;
    *(void *)unint64_t v49 = v50;
    *(_DWORD *)(v49 + _Block_object_dispose(&STACK[0x260], 8) = v48;
    *(_DWORD *)(v49 + 16) = v46;
    uint64_t v51 = v49 + 24;
  }
  a4[1] = v51;
}

void sub_1B9B79E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

BOOL TopoID::operator<=(uint64_t a1, void *a2)
{
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  unsigned int v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ([*(id *)a1 isEqual:*a2]) {
      return 1;
    }
    unsigned int v4 = *(_DWORD *)(a1 + 8);
    unsigned int v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 < v5) {
    return 1;
  }
  return v4 == v5 && [*(id *)a1 TTCompare:*a2] == -1;
}

BOOL TopoID::operator>=(uint64_t a1, void *a2)
{
  unsigned int v4 = *(_DWORD *)(a1 + 8);
  unsigned int v5 = *((_DWORD *)a2 + 2);
  if (v4 == v5)
  {
    if ([*(id *)a1 isEqual:*a2]) {
      return 1;
    }
    unsigned int v4 = *(_DWORD *)(a1 + 8);
    unsigned int v5 = *((_DWORD *)a2 + 2);
  }
  if (v4 > v5) {
    return 1;
  }
  return v4 == v5 && [*(id *)a1 TTCompare:*a2] == 1;
}

void TopoIDRange::splitPairAt(TopoIDRange *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  id v6 = this->var0.var0;
  unsigned int var1 = this->var0.var1;
  id v8 = this->var0.var0;
  int v9 = this->var0.var1 + a2;
  int v10 = this->var1 - a2;
  *(void *)a3 = v6;
  *(_DWORD *)(a3 + _Block_object_dispose(&STACK[0x260], 8) = var1;
  *(_DWORD *)(a3 + 16) = a2;
  *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v8;
  *(_DWORD *)(a3 + 32) = v9;
  *(_DWORD *)(a3 + 40) = v10;
  id v11 = v6;
}

void sub_1B9B7A22C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7A430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Block_object_dispose(&a17, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(v17);
  a9.super_class = (Class)TTMergeableString;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_1B9B7A53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);
  _Unwind_Resume(a1);
}

void sub_1B9B7A634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7A6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7A764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7A834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7A8F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B9B7AA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7AE7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7B2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7B434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7B568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7B63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1B9B7B7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7BBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(void *)(result + 4_Block_object_dispose(&STACK[0x260], 8) = v2;
  *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  return result;
}

char *std::vector<TopoSubstring *>::insert(uint64_t a1, char *__src, char *a3)
{
  id v3 = a3;
  unsigned int v4 = __src;
  id v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    unint64_t v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 3) + 1;
    if (v14 >> 61) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 3;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 2 > v14) {
      unint64_t v14 = v17 >> 2;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      id v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(a1 + 16, v18);
    }
    else {
      id v19 = 0;
    }
    long long v20 = &v19[8 * v16];
    __p = v19;
    uint64_t v27 = v20;
    id v28 = v20;
    unsigned int v29 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 2;
        }
        int v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v8, v22);
        long long v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        uint64_t v27 = v20;
        unsigned int v29 = &v23[8 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 8 * (v21 >> 1);
        uint64_t v27 = v20;
      }
    }
    *(void *)long long v20 = *(void *)v3;
    id v28 = v20 + 8;
    unsigned int v4 = std::vector<TopoSubstring *>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(void *)__src = *(void *)a3;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = __src + 8;
  }
  else
  {
    int v9 = __src + 8;
    int v10 = v6 - 8;
    id v11 = *(void **)(a1 + 8);
    while (v10 < v6)
    {
      uint64_t v12 = *(void *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 8 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(void *)unsigned int v4 = *(void *)v3;
  }
  return v4;
}

void sub_1B9B7BE7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B9B7BF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)va);

  _Unwind_Resume(a1);
}

void sub_1B9B7BFD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B9B7C4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7C9D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7CC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<_NSRange>::reserve(void **a1, unint64_t a2)
{
  unsigned int v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    id v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    int v9 = &v6[16 * v8];
    id v11 = (char *)*a1;
    int v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      int v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1B9B7CE3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7CF28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7CFB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7D0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7D270(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7D464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B7D67C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::shrink_to_fit(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = *(void *)(a1 + 16);
  unsigned int v4 = *(char **)a1;
  int64_t v5 = *(unsigned char **)(a1 + 8);
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (uint64_t)v4) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    id v11 = 0;
    uint64_t v9 = 8 * v6;
    goto LABEL_8;
  }
  unint64_t v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v2, v6);
  unsigned int v4 = *(char **)a1;
  uint64_t v8 = *(char **)(a1 + 8);
  uint64_t v9 = (uint64_t)&v7[8 * v6];
  id v11 = &v7[8 * v10];
  if (v8 == *(char **)a1)
  {
LABEL_8:
    uint64_t v12 = v9;
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  do
  {
    uint64_t v13 = *((void *)v8 - 1);
    v8 -= 8;
    *(void *)(v12 - _Block_object_dispose(&STACK[0x260], 8) = v13;
    v12 -= 8;
  }
  while (v8 != v4);
  unsigned int v4 = *(char **)a1;
LABEL_9:
  *(void *)a1 = v12;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v9;
  *(void *)(a1 + 16) = v11;
  if (v4)
  {
    operator delete(v4);
  }
}

void sub_1B9B7DA34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7DD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a11);
  _Block_object_dispose((const void *)(v31 - 208), 8);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(a12);
  _Block_object_dispose((const void *)(v31 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1B9B7E158(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7E344(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7E4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7E560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7E794(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7E94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table((uint64_t)va);

  _Unwind_Resume(a1);
}

void sub_1B9B7EBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7EE24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void sub_1B9B7F010(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7F23C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B7F62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8020C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a19);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a25);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a31);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a37);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v39 - 176);

  _Unwind_Resume(a1);
}

void TopoSubstring::addChild(TopoSubstring *this, TopoSubstring *a2)
{
  unint64_t v6 = *((void *)this + 8);
  unsigned int v4 = (char *)this + 64;
  unint64_t v5 = v6;
  unint64_t v7 = (void *)*((void *)v4 - 1);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = (void **)(v4 - 16);
    uint64_t v10 = *((void *)v4 - 2);
    uint64_t v11 = ((uint64_t)v7 - v10) >> 3;
    if ((unint64_t)(v11 + 1) >> 61) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v5 - v10;
    uint64_t v13 = v12 >> 2;
    if (v12 >> 2 <= (unint64_t)(v11 + 1)) {
      uint64_t v13 = v11 + 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14) {
      uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>((uint64_t)v4, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = &v15[8 * v11];
    uint64_t v17 = &v15[8 * v14];
    *(void *)uint64_t v16 = a2;
    uint64_t v8 = v16 + 8;
    id v19 = (char *)*((void *)this + 6);
    unint64_t v18 = (char *)*((void *)this + 7);
    if (v18 != v19)
    {
      do
      {
        uint64_t v20 = *((void *)v18 - 1);
        v18 -= 8;
        *((void *)v16 - 1) = v20;
        v16 -= 8;
      }
      while (v18 != v19);
      unint64_t v18 = (char *)*v9;
    }
    *((void *)this + 6) = v16;
    *((void *)this + 7) = v8;
    *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *unint64_t v7 = a2;
    uint64_t v8 = v7 + 1;
  }
  *((void *)this + 7) = v8;
  ++*((_DWORD *)a2 + 18);
}

void std::vector<TopoSubstring *>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    std::vector<TopoSubstring *>::__append((void **)a1, a2 - v2);
  }
}

void sub_1B9B8059C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B80644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B806D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8095C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(v13);
  _Block_object_dispose((const void *)(v14 - 112), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__63(uint64_t a1, uint64_t a2)
{
  return std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(a1 + 48, (uint64_t *)(a2 + 48));
}

uint64_t __Block_byref_object_dispose__64(uint64_t a1)
{
  return std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(a1 + 48);
}

void sub_1B9B80AF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B80E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::deque<TopoSubstring *>::~deque[abi:ne180100](void *a1)
{
  unint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      unint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    unint64_t v7 = *v2++;
    operator delete(v7);
  }

  return std::__split_buffer<TopoSubstring **>::~__split_buffer((uint64_t)a1);
}

uint64_t std::__split_buffer<TopoSubstring **>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoID a2, int a3, int a4)
{
  unsigned int var1 = a2.var1;
  id var0 = a2.var0;
  *(void *)this = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((unsigned char *)this + 44) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  objc_storeStrong((id *)this, a2.var0);
  *((_DWORD *)this + 2) = var1;
  *((_DWORD *)this + 4) = a4;
  uint64_t v8 = (void *)*((void *)this + 3);
  *((void *)this + 3) = var0;
  id v9 = var0;

  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = var1;
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoIDRange *a2, int a3)
{
  *(void *)this = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 10) = a3;
  *((unsigned char *)this + 44) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  objc_storeStrong((id *)this, a2->var0.var0);
  *((_DWORD *)this + 2) = a2->var0.var1;
  *((_DWORD *)this + 4) = a2->var1;
}

void TopoSubstring::TopoSubstring(TopoSubstring *this, TopoSubstring *a2)
{
  *(void *)this = *(id *)a2;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((void *)this + 3) = *((id *)a2 + 3);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
  *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 6) = 0;
}

void std::vector<std::pair<minIdPathData,TopoSubstring *>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    unint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (void *)*((void *)v4 - 5);
        v4 -= 40;
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t *std::vector<std::pair<minIdPathData,TopoSubstring *>>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 40);
    v2 -= 40;
    *(void *)uint64_t v2 = 0;
    *(void *)(v4 - 40) = v5;
    v4 -= 40;
    *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v2 + 8);
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(v2 + 16);
    *(void *)(v4 + 32) = *(void *)(v2 + 32);
  }
  a2[1] = v4;
  uint64_t v6 = *result;
  std::logic_error *result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<minIdPathData,TopoSubstring *>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

uint64_t std::__split_buffer<std::pair<minIdPathData,TopoSubstring *>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::clear(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    uint64_t result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        uint64_t result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v_Block_object_dispose(&STACK[0x260], 8) = a1 + 16;
      uint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            uint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          uint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  }
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    unint64_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  *uint64_t i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    *uint64_t i = *v22;
LABEL_38:
    void *v22 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    unint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B81988(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  unint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  uint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::__hash_value_type<TopoSubstring *,unsigned long>,void *> *>>(void *a1, __n128 *a2, __n128 *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  unint64_t v8 = (void *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = a2[1].n128_u64[1];
      std::string v8[2] = a2[1].n128_u64[0];
      v8[3] = v9;
      unint64_t v10 = (void *)*v8;
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v8);
      a2 = (__n128 *)a2->n128_u64[0];
      unint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      uint8x8_t v11 = (void *)*v8;
      operator delete(v8);
      unint64_t v8 = v11;
    }
    while (v11);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(a1, a2 + 1);
      a2 = (__n128 *)a2->n128_u64[0];
    }
  }
}

void sub_1B9B81B4C(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    int8x8_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1B9B81B6C(_Unwind_Exception *a1)
{
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(void *a1, void *a2)
{
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a2[2];
  unint64_t v6 = HIDWORD(v5);
  unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * v5) + 8) ^ HIDWORD(v5));
  unint64_t v8 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
  a2[1] = v8;
  inserted = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare((uint64_t)a1, v8, v4);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(a1, a2, inserted);
  return a2;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_prepare(uint64_t a1, unint64_t a2, void *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  float v16 = *(void **)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    float v16 = (void *)*v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = v16[1];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = v16[1];
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2 && v16[2] == *a3;
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi_perform(void *result, void *a2, void *a3)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(void *)(*result + 8 * v4) = result + 2;
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
LABEL_18:
    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
    if (v6 != v4) {
      goto LABEL_18;
    }
  }
LABEL_19:
  ++result[3];
  return result;
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<false>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__do_rehash<false>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v_Block_object_dispose(&STACK[0x260], 8) = a1 + 16;
      for (uint64_t i = (void *)*v7; *v7; uint64_t i = (void *)*v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (void *)*v13;
            }
            while (v13 && i[2] == v13[2]);
            *uint64_t v7 = v13;
            void *v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  }
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__emplace_multi<std::pair<TopoSubstring * const,unsigned long> const&>(void *a1, __n128 *a2)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>((uint64_t)a1, a2, (uint64_t)&v4);
  return std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__node_insert_multi(a1, v4);
}

void sub_1B9B820E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__construct_node<std::pair<TopoSubstring * const,unsigned long> const&>@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = (__n128 *)operator new(0x20uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x260], 8) = v5;
  __n128 result = *a2;
  v6[1] = *a2;
  *(unsigned char *)(a3 + 16) = 1;
  unint64_t v8 = v6[1].n128_u64[0];
  unint64_t v9 = HIDWORD(v8);
  unint64_t v10 = 0x9DDFEA08EB382D69 * (((8 * v8) + 8) ^ HIDWORD(v8));
  v6->n128_u64[0] = 0;
  v6->n128_u64[1] = 0x9DDFEA08EB382D69
                  * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69
                                                                         * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
  return result;
}

void *std::get_temporary_buffer[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *>>(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0x333333333333333) {
    unint64_t v1 = 0x333333333333333;
  }
  else {
    unint64_t v1 = a1;
  }
  int8x8_t v2 = (const std::nothrow_t *)MEMORY[0x1E4FBA2D0];
  while (1)
  {
    __n128 result = operator new(40 * v1, v2);
    if (result) {
      break;
    }
    BOOL v4 = v1 > 1;
    v1 >>= 1;
    if (!v4) {
      return 0;
    }
  }
  return result;
}

void std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, void **a4, uint64_t a5)
{
  if (a3 < 2) {
    return;
  }
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  if (a3 == 2)
  {
    uint64_t v7 = (uint64_t)(a2 - 5);
    id v92 = *(a2 - 5);
    unsigned int v8 = *(_DWORD *)(v7 + 8);
    unint64_t v9 = *(void *)(v7 + 16);
    id v10 = *(id *)v6;
    size_t v11 = v10;
    unint64_t v12 = *(void *)(v6 + 16);
    if (v9 == v12)
    {
      unsigned int v20 = *(_DWORD *)(v6 + 8);
      if (v8 >= v20)
      {
        if (v8 != v20)
        {

          return;
        }
        uint64_t v74 = [v92 TTCompare:v10];

        if (v74 != -1) {
          return;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v9 >= v12) {
        return;
      }
    }
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)v6, v7);
    return;
  }
  if ((uint64_t)a3 <= 0)
  {
    if ((id *)a1 == a2) {
      return;
    }
    BOOL v21 = (id *)(a1 + 40);
    if ((id *)(a1 + 40) == a2) {
      return;
    }
    uint64_t v88 = 0;
    uint64_t v22 = a1;
    while (1)
    {
      uint64_t v23 = v22;
      v86 = v21;
      id v93 = *v21;
      unsigned int v24 = *(_DWORD *)(v22 + 48);
      unint64_t v25 = *(void *)(v22 + 56);
      id v26 = *(id *)v23;
      uint64_t v27 = v26;
      unsigned int v29 = (_OWORD *)(v23 + 16);
      unint64_t v28 = *(void *)(v23 + 16);
      if (v25 == v28)
      {
        unsigned int v31 = *(_DWORD *)(v23 + 8);
        if (v24 >= v31)
        {
          if (v24 != v31)
          {

            uint64_t v22 = (uint64_t)v86;
            goto LABEL_46;
          }
          uint64_t v50 = [v93 TTCompare:v26];

          uint64_t v22 = (uint64_t)v86;
          if (v50 != -1) {
            goto LABEL_46;
          }
        }
        else
        {

          uint64_t v22 = (uint64_t)v86;
        }
      }
      else
      {

        BOOL v30 = v25 >= v28;
        uint64_t v22 = (uint64_t)v86;
        if (v30) {
          goto LABEL_46;
        }
      }
      id v94 = *(id *)v22;
      *(void *)uint64_t v22 = 0;
      unsigned int v90 = *(_DWORD *)(v23 + 48);
      unint64_t v32 = *(void *)(v23 + 56);
      uint64_t v33 = *(void *)(v23 + 64);
      uint64_t v34 = *(void *)(v23 + 72);
      id v35 = *(id *)v23;
      *(void *)uint64_t v23 = 0;
      *(void *)uint64_t v22 = v35;
      *(_DWORD *)(v22 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v23 + 8);
      *(_OWORD *)(v22 + 16) = *v29;
      *(void *)(v22 + 32) = *(void *)(v23 + 32);
      if (v23 == v6)
      {
        uint64_t v23 = v6;
        goto LABEL_45;
      }
      uint64_t v84 = v34;
      uint64_t v85 = v33;
      uint64_t v36 = v6;
      uint64_t v37 = v88;
      while (1)
      {
        uint64_t v38 = v36;
        uint64_t v39 = v36 + v37;
        id v40 = v94;
        id v41 = *(id *)(v36 + v37 - 40);
        int v42 = v41;
        unint64_t v43 = (unint64_t *)(v36 + v37 - 24);
        unint64_t v44 = *v43;
        if (v32 != *v43)
        {

          if (v32 >= v44) {
            goto LABEL_43;
          }
          goto LABEL_36;
        }
        unsigned int v45 = *(_DWORD *)(v39 - 32);
        if (v90 < v45)
        {

          goto LABEL_36;
        }
        if (v90 != v45) {
          break;
        }
        uint64_t v46 = [v40 TTCompare:v41];

        if (v46 != -1)
        {
          uint64_t v6 = v38;
          goto LABEL_44;
        }
LABEL_36:
        unsigned int v29 = (_OWORD *)(v23 - 24);
        uint64_t v47 = *(void *)(v39 - 40);
        *(void *)(v39 - 40) = 0;
        uint64_t v36 = v38;
        uint64_t v48 = v38 + v37;
        unint64_t v49 = *(void **)(v38 + v37);
        *(void *)(v38 + v37) = v47;

        *(_DWORD *)(v48 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v39 - 32);
        *(_OWORD *)(v48 + 16) = *(_OWORD *)v43;
        *(void *)(v48 + 32) = *(void *)(v48 - 8);
        v23 -= 40;
        v37 -= 40;
        if (!v37)
        {
          unsigned int v29 = (_OWORD *)(v38 + 16);
          uint64_t v23 = v38;
          uint64_t v6 = v38;
          goto LABEL_44;
        }
      }

LABEL_43:
      uint64_t v23 = v38 + v37;
      uint64_t v6 = v38;
      unsigned int v29 = (_OWORD *)(v23 + 16);
LABEL_44:
      uint64_t v5 = a2;
      uint64_t v34 = v84;
      uint64_t v33 = v85;
      uint64_t v22 = (uint64_t)v86;
LABEL_45:
      id v51 = *(id *)v23;
      *(void *)uint64_t v23 = v94;

      *(_DWORD *)(v23 + _Block_object_dispose(&STACK[0x260], 8) = v90;
      *(void *)unsigned int v29 = v32;
      *(void *)(v23 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v33;
      *(void *)(v23 + 32) = v34;
LABEL_46:
      BOOL v21 = (id *)(v22 + 40);
      v88 += 40;
      if ((id *)(v22 + 40) == v5) {
        return;
      }
    }
  }
  uint64_t v16 = a3 >> 1;
  uint64_t v18 = a1 + 40 * (a3 >> 1);
  if ((uint64_t)a3 > a5)
  {
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, a1 + 40 * (a3 >> 1), a3 >> 1, a4, a5);
    uint64_t v19 = a3 - v16;
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, v19, a4, a5);
    std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v18, (uint64_t)v5, v16, v19, a4, a5);
    return;
  }
  std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, (id *)(a1 + 40 * (a3 >> 1)), a3 >> 1, (char *)a4);
  id v52 = (char *)&a4[5 * v16];
  std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v18, v5, a3 - v16, v52);
  unint64_t v87 = a3;
  uint64_t v53 = &a4[5 * a3];
  int v54 = (void *)(a1 + 32);
  uint64_t v55 = a4;
  uint64_t v56 = v52;
  v91 = v52;
  v95 = v53;
  while (v56 != (char *)v53)
  {
    id v57 = *(id *)v56;
    id v58 = (void *)*((void *)v56 + 2);
    unsigned int v59 = *((_DWORD *)v56 + 2);
    id v60 = *v55;
    v61 = v60;
    v62 = v55[2];
    if (v58 == v62)
    {
      unsigned int v63 = *((_DWORD *)v55 + 2);
      if (v59 >= v63)
      {
        if (v59 != v63)
        {

LABEL_60:
          id v67 = *v55;
          *uint64_t v55 = 0;
          id v68 = (void *)*(v54 - 4);
          *(v54 - 4) = v67;

          *((_DWORD *)v54 - 6) = *((_DWORD *)v55 + 2);
          *((_OWORD *)v54 - 1) = *((_OWORD *)v55 + 1);
          *int v54 = v55[4];
          v55 += 5;
          goto LABEL_61;
        }
        uint64_t v66 = [v57 TTCompare:v60];

        if (v66 != -1) {
          goto LABEL_60;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v58 >= v62) {
        goto LABEL_60;
      }
    }
    id v64 = *(id *)v56;
    *(void *)uint64_t v56 = 0;
    id v65 = (void *)*(v54 - 4);
    *(v54 - 4) = v64;

    *((_DWORD *)v54 - 6) = *((_DWORD *)v56 + 2);
    *((_OWORD *)v54 - 1) = *((_OWORD *)v56 + 1);
    *int v54 = *((void *)v56 + 4);
    v56 += 40;
LABEL_61:
    id v52 = v91;
    uint64_t v53 = v95;
    v54 += 5;
    if (v55 == (void **)v91)
    {
      if (v56 != (char *)v95)
      {
        unint64_t v69 = 0;
        do
        {
          long long v70 = &v56[v69];
          float v71 = &v54[v69 / 8];
          uint64_t v72 = *(void *)&v56[v69];
          *(void *)&v56[v69] = 0;
          v73 = (void *)v54[v69 / 8 - 4];
          v54[v69 / 8 - 4] = v72;

          *((_DWORD *)v71 - 6) = *(_DWORD *)&v56[v69 + 8];
          *((_OWORD *)v71 - 1) = *(_OWORD *)&v56[v69 + 16];
          *float v71 = *(void *)&v56[v69 + 32];
          v69 += 40;
        }
        while (v70 + 40 != (char *)v95);
      }
      goto LABEL_73;
    }
  }
  if (v55 != (void **)v52)
  {
    uint64_t v75 = 0;
    do
    {
      v76 = &v54[v75];
      v77 = &v55[v75];
      v78 = v55[v75];
      v55[v75] = 0;
      v79 = (void *)v54[v75 - 4];
      v54[v75 - 4] = v78;

      *((_DWORD *)v76 - 6) = v55[v75 + 1];
      *((_OWORD *)v76 - 1) = *(_OWORD *)&v55[v75 + 2];
      void *v76 = v55[v75 + 4];
      v75 += 5;
    }
    while (v77 + 5 != (void **)v52);
  }
LABEL_73:
  v80 = a4;
  if (a4)
  {
    unint64_t v81 = v87;
    do
    {
      v82 = *v80;
      v80 += 5;

      --v81;
    }
    while (v81);
  }
}

void sub_1B9B8288C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  _Unwind_Resume(a1);
}

void std::__stable_sort_move<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, id *a2, unint64_t a3, char *a4)
{
  if (!a3) {
    return;
  }
  BOOL v4 = a4;
  uint64_t v7 = (id *)a1;
  if (a3 == 2)
  {
    id v11 = *(a2 - 5);
    id v14 = *(a2 - 3);
    unint64_t v12 = a2 - 3;
    id v13 = v14;
    unsigned int v15 = *((_DWORD *)v12 - 2);
    id v16 = *v7;
    int v17 = v16;
    uint64_t v19 = v7 + 2;
    id v18 = v7[2];
    if (v14 != v18)
    {

      BOOL v20 = v13 >= v18;
      BOOL v21 = a4;
      if (!v20) {
        goto LABEL_60;
      }
LABEL_68:
      id v10 = v12 + 2;
      id v86 = *v7;
      *uint64_t v7 = 0;
      *(void *)BOOL v21 = v86;
      *((_DWORD *)v21 + 2) = *((_DWORD *)v7 + 2);
      *((_OWORD *)v21 + 1) = *v19;
      id v87 = v7[4];
      uint64_t v88 = (uint64_t)*(a2 - 5);
      *(a2 - 5) = 0;
      *((void *)v21 + 4) = v87;
      *((void *)v21 + 5) = v88;
      *((_DWORD *)v21 + 12) = *((_DWORD *)a2 - 8);
      long long v79 = *(_OWORD *)v12;
      goto LABEL_69;
    }
    unsigned int v75 = *((_DWORD *)v7 + 2);
    if (v15 >= v75)
    {
      BOOL v21 = a4;
      if (v15 != v75)
      {

        goto LABEL_68;
      }
      uint64_t v85 = [v11 TTCompare:v16];

      if (v85 != -1) {
        goto LABEL_68;
      }
    }
    else
    {

      BOOL v21 = a4;
    }
LABEL_60:
    id v10 = v7 + 4;
    uint64_t v76 = (uint64_t)*(a2 - 5);
    *(a2 - 5) = 0;
    *(void *)BOOL v21 = v76;
    *((_DWORD *)v21 + 2) = *((_DWORD *)a2 - 8);
    *((_OWORD *)v21 + 1) = *(_OWORD *)v12;
    uint64_t v77 = (uint64_t)*(a2 - 1);
    id v78 = *v7;
    *uint64_t v7 = 0;
    *((void *)v21 + 4) = v77;
    *((void *)v21 + 5) = v78;
    *((_DWORD *)v21 + 12) = *((_DWORD *)v7 + 2);
    long long v79 = *v19;
LABEL_69:
    *(_OWORD *)(v21 + 56) = v79;
    unint64_t v9 = v21 + 72;
    goto LABEL_70;
  }
  if (a3 == 1)
  {
    id v8 = *(id *)a1;
    *(void *)a1 = 0;
    *(void *)a4 = v8;
    *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
    *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
    unint64_t v9 = a4 + 32;
    id v10 = (void *)(a1 + 32);
LABEL_70:
    void *v9 = *v10;
    return;
  }
  if ((uint64_t)a3 > 8)
  {
    int v54 = (id *)(a1 + 40 * (a3 >> 1));
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1, v54, a3 >> 1, a4, a3 >> 1);
    std::__stable_sort<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(&v7[5 * (a3 >> 1)], a2, a3 - (a3 >> 1), &v4[40 * (a3 >> 1)], a3 - (a3 >> 1));
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    id v57 = &v7[5 * (a3 >> 1)];
    v96 = v57;
    while (1)
    {
      if (v57 == a2)
      {
        if (v7 != v54)
        {
          uint64_t v80 = 0;
          unint64_t v81 = &v4[v56];
          do
          {
            v82 = &v7[v80];
            id v83 = v7[v80];
            id *v82 = 0;
            *(void *)&v81[v80 * 8] = v83;
            uint64_t v84 = &v4[v80 * 8 + v56];
            *((_DWORD *)v84 + 2) = v7[v80 + 1];
            *((_OWORD *)v84 + 1) = *(_OWORD *)&v7[v80 + 2];
            *(void *)&v81[v80 * 8 + 32] = v7[v80 + 4];
            v80 += 5;
          }
          while (v82 + 5 != v54);
        }
        return;
      }
      id v58 = *v57;
      id v59 = v57[2];
      unsigned int v60 = *((_DWORD *)v57 + 2);
      id v61 = *v7;
      id v62 = v7[2];
      if (v59 == v62)
      {
        unsigned int v63 = *((_DWORD *)v7 + 2);
        if (v60 >= v63)
        {
          if (v60 != v63)
          {

LABEL_52:
            id v68 = *v7;
            *uint64_t v7 = 0;
            unint64_t v69 = &a4[v56];
            *(void *)unint64_t v69 = v68;
            *((_DWORD *)v69 + 2) = *((_DWORD *)v7 + 2);
            BOOL v4 = a4;
            *((_OWORD *)v69 + 1) = *((_OWORD *)v7 + 1);
            *((void *)v69 + 4) = v7[4];
            v7 += 5;
            goto LABEL_53;
          }
          uint64_t v66 = v61;
          uint64_t v67 = [v58 TTCompare:v61];

          if (v67 != -1) {
            goto LABEL_52;
          }
        }
        else
        {
        }
      }
      else
      {

        if (v59 >= v62) {
          goto LABEL_52;
        }
      }
      id v64 = *v57;
      *id v57 = 0;
      BOOL v4 = a4;
      id v65 = &a4[v56];
      *(void *)id v65 = v64;
      *((_DWORD *)v65 + 2) = *((_DWORD *)v57 + 2);
      *((_OWORD *)v65 + 1) = *((_OWORD *)v57 + 1);
      *((void *)v65 + 4) = v57[4];
      v57 += 5;
LABEL_53:
      int v54 = v96;
      v56 += 40;
      --v55;
      if (v7 == v96)
      {
        if (v57 != a2)
        {
          uint64_t v70 = 0;
          float v71 = &v4[v56];
          do
          {
            uint64_t v72 = &v57[v70];
            id v73 = v57[v70];
            id *v72 = 0;
            *(void *)&v71[v70 * 8] = v73;
            uint64_t v74 = &v4[v70 * 8 + v56];
            *((_DWORD *)v74 + 2) = v57[v70 + 1];
            *((_OWORD *)v74 + 1) = *(_OWORD *)&v57[v70 + 2];
            *(void *)&v71[v70 * 8 + 32] = v57[v70 + 4];
            v70 += 5;
          }
          while (v72 + 5 != a2);
        }
        return;
      }
    }
  }
  if ((id *)a1 == a2) {
    return;
  }
  id v22 = *(id *)a1;
  *(void *)a1 = 0;
  *(void *)a4 = v22;
  *((_DWORD *)a4 + 2) = *(_DWORD *)(a1 + 8);
  *((_OWORD *)a4 + 1) = *(_OWORD *)(a1 + 16);
  *((void *)a4 + 4) = *(void *)(a1 + 32);
  uint64_t v23 = (id *)(a1 + 40);
  if ((id *)(a1 + 40) == a2) {
    return;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 1;
  id v26 = a4;
  do
  {
    v95 = v23;
    id v27 = *v23;
    id v28 = v7[7];
    v91 = v7 + 7;
    unsigned int v29 = *((_DWORD *)v7 + 12);
    id v30 = *(id *)v26;
    unsigned int v31 = v30;
    id v32 = (id)*((void *)v26 + 2);
    id v92 = v26 + 16;
    if (v28 == v32)
    {
      unsigned int v33 = *((_DWORD *)v26 + 2);
      if (v29 >= v33)
      {
        if (v29 != v33)
        {

LABEL_34:
          uint64_t v36 = v95;
          id v51 = *v95;
          id *v95 = 0;
          *((void *)v26 + 5) = v51;
          *((_DWORD *)v26 + 12) = *((_DWORD *)v7 + 12);
          *(_OWORD *)(v26 + 56) = *v91;
          *((void *)v26 + 9) = v7[9];
          ++v25;
          goto LABEL_38;
        }
        uint64_t v50 = [v27 TTCompare:v30];

        if (v50 != -1) {
          goto LABEL_34;
        }
      }
      else
      {
      }
    }
    else
    {

      if (v28 >= v32) {
        goto LABEL_34;
      }
    }
    id v34 = *(id *)v26;
    *(void *)id v26 = 0;
    *((void *)v26 + 5) = v34;
    *((_DWORD *)v26 + 12) = *((_DWORD *)v26 + 2);
    *(_OWORD *)(v26 + 56) = *v92;
    *((void *)v26 + 9) = *((void *)v26 + 4);
    ++v25;
    id v35 = v4;
    uint64_t v36 = v95;
    if (v26 == v4) {
      goto LABEL_37;
    }
    uint64_t v89 = v24;
    uint64_t v90 = v25;
    while (1)
    {
      uint64_t v37 = &v4[v24];
      id v38 = *v36;
      unsigned int v39 = *((_DWORD *)v7 + 12);
      id v40 = v7[7];
      id v41 = *(id *)&v4[v24 - 40];
      int v42 = v41;
      unint64_t v44 = (id *)&v4[v24 - 24];
      unint64_t v43 = (unint64_t)*v44;
      if (v40 != *v44)
      {

        BOOL v20 = (unint64_t)v40 >= v43;
        BOOL v4 = a4;
        if (v20) {
          goto LABEL_35;
        }
        goto LABEL_29;
      }
      unsigned int v45 = *((_DWORD *)v37 - 8);
      if (v39 < v45)
      {

        BOOL v4 = a4;
        goto LABEL_29;
      }
      BOOL v4 = a4;
      if (v39 != v45)
      {

LABEL_35:
        id v35 = &v4[v24];
        goto LABEL_36;
      }
      uint64_t v46 = [v38 TTCompare:v41];

      if (v46 != -1) {
        break;
      }
LABEL_29:
      v26 -= 40;
      uint64_t v47 = *((void *)v37 - 5);
      *((void *)v37 - 5) = 0;
      uint64_t v48 = &v4[v24];
      unint64_t v49 = *(void **)&v4[v24];
      *(void *)&v4[v24] = v47;

      *((_DWORD *)v48 + 2) = *((_DWORD *)v37 - 8);
      *((_OWORD *)v48 + 1) = *(_OWORD *)v44;
      *((void *)v48 + 4) = *((void *)v37 - 1);
      v24 -= 40;
      uint64_t v36 = v95;
      if (!v24)
      {
        id v35 = v4;
        uint64_t v24 = v89;
        uint64_t v25 = v90;
        goto LABEL_37;
      }
    }
    id v35 = v26;
LABEL_36:
    uint64_t v24 = v89;
    uint64_t v25 = v90;
    uint64_t v36 = v95;
LABEL_37:
    id v52 = *v36;
    id *v36 = 0;
    uint64_t v53 = *(void **)v35;
    *(void *)id v35 = v52;

    *((_DWORD *)v35 + 2) = *((_DWORD *)v7 + 12);
    *((_OWORD *)v35 + 1) = *v91;
    *((void *)v35 + 4) = v7[9];
LABEL_38:
    id v26 = (char *)v92 + 24;
    uint64_t v23 = v36 + 5;
    v24 += 40;
    uint64_t v7 = v36;
  }
  while (v36 + 5 != a2);
}

void sub_1B9B82F6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void **a6, uint64_t a7)
{
  uint64_t v101 = a5;
  if (!a5) {
    return;
  }
  while (1)
  {
    uint64_t v111 = a1;
    if (v101 <= a7 || a4 <= a7) {
      break;
    }
    if (!a4) {
      return;
    }
    uint64_t v9 = 0;
    uint64_t v10 = -a4;
    while (1)
    {
      uint64_t v11 = a1 + v9;
      uint64_t v12 = a2;
      id v13 = *(id *)a2;
      unsigned int v14 = *(_DWORD *)(a2 + 8);
      unint64_t v15 = *(void *)(a2 + 16);
      id v16 = *(id *)v11;
      int v17 = v16;
      unint64_t v18 = *(void *)(v11 + 16);
      if (v15 == v18) {
        break;
      }

      BOOL v19 = v15 >= v18;
      a1 = v111;
      if (!v19) {
        goto LABEL_17;
      }
LABEL_13:
      v9 += 40;
      BOOL v19 = __CFADD__(v10++, 1);
      if (v19) {
        return;
      }
    }
    unsigned int v20 = *(_DWORD *)(v11 + 8);
    if (v14 >= v20)
    {
      a1 = v111;
      if (v14 == v20)
      {
        uint64_t v21 = [v13 TTCompare:v16];

        if (v21 == -1) {
          goto LABEL_17;
        }
      }
      else
      {
      }
      goto LABEL_13;
    }

    a1 = v111;
LABEL_17:
    uint64_t v22 = -v10;
    uint64_t v97 = a1 + v9;
    if (-v10 >= v101)
    {
      if (v10 == -1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100]((__n128 *)(a1 + v9), a2);
        return;
      }
      if (v10 > 0) {
        uint64_t v22 = 1 - v10;
      }
      uint64_t v96 = v22 >> 1;
      v105 = (id *)(a1 + 40 * (v22 >> 1) + v9);
      uint64_t v25 = a2;
      if (a2 == a3)
      {
LABEL_39:
        a1 = v111;
        uint64_t v12 = a2;
        uint64_t v24 = 0xCCCCCCCCCCCCCCCDLL * ((v25 - a2) >> 3);
        unint64_t v38 = v96;
        id v26 = (__n128 *)(v111 + 40 * v96 + v9);
        goto LABEL_40;
      }
      uint64_t v25 = a2;
      unint64_t v44 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3);
      uint64_t v103 = v111 + 40 * v96 + v9;
      while (2)
      {
        unint64_t v45 = v44 >> 1;
        uint64_t v108 = v25;
        unint64_t v46 = v25 + 40 * (v44 >> 1);
        id v47 = *(id *)v46;
        unsigned int v48 = *(_DWORD *)(v46 + 8);
        unint64_t v49 = *(void *)(v46 + 16);
        id v50 = *v105;
        id v51 = v50;
        unint64_t v52 = *(void *)(v103 + 16);
        if (v49 == v52)
        {
          unsigned int v53 = *(_DWORD *)(v103 + 8);
          if (v48 < v53)
          {

            goto LABEL_55;
          }
          if (v48 == v53)
          {
            uint64_t v25 = v108;
            uint64_t v54 = [v47 TTCompare:v50];

            if (v54 == -1)
            {
LABEL_55:
              uint64_t v25 = v46 + 40;
              unint64_t v45 = v44 + ~v45;
            }
          }
          else
          {

            uint64_t v25 = v108;
          }
        }
        else
        {

          BOOL v19 = v49 >= v52;
          uint64_t v25 = v108;
          if (!v19) {
            goto LABEL_55;
          }
        }
        unint64_t v44 = v45;
        if (!v45) {
          goto LABEL_39;
        }
        continue;
      }
    }
    if (v101 >= 0) {
      uint64_t v23 = v101;
    }
    else {
      uint64_t v23 = v101 + 1;
    }
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = a2 + 40 * (v23 >> 1);
    id v26 = (__n128 *)(a1 + v9);
    v105 = (id *)(a1 + v9);
    if (a2 - a1 != v9)
    {
      uint64_t v102 = v23 >> 1;
      v105 = (id *)(a1 + v9);
      unint64_t v27 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1 - v9) >> 3);
      uint64_t v107 = a2 + 40 * (v23 >> 1);
      while (1)
      {
        unint64_t v28 = v27 >> 1;
        unsigned int v29 = &v105[5 * (v27 >> 1)];
        id v30 = *(id *)v25;
        unsigned int v31 = *(_DWORD *)(v25 + 8);
        id v32 = *(id *)(v25 + 16);
        id v33 = *v29;
        id v34 = v33;
        id v35 = v29[2];
        if (v32 != v35) {
          break;
        }
        unsigned int v36 = *((_DWORD *)v29 + 2);
        if (v31 >= v36)
        {
          uint64_t v25 = v107;
          if (v31 != v36)
          {

LABEL_31:
            v105 = v29 + 5;
            unint64_t v28 = v27 + ~v28;
            goto LABEL_32;
          }
          uint64_t v37 = [v30 TTCompare:v33];

          if (v37 != -1) {
            goto LABEL_31;
          }
        }
        else
        {

          uint64_t v25 = v107;
        }
LABEL_32:
        unint64_t v27 = v28;
        if (!v28)
        {
          uint64_t v24 = v102;
          id v26 = (__n128 *)v105;
          a1 = v111;
          uint64_t v12 = a2;
          goto LABEL_34;
        }
      }

      BOOL v19 = v32 >= v35;
      uint64_t v25 = v107;
      if (!v19) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
LABEL_34:
    unint64_t v38 = 0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v26 - a1 - v9) >> 3);
LABEL_40:
    uint64_t v39 = v25;
    if (v105 != (id *)v12)
    {
      uint64_t v39 = (uint64_t)v26;
      if (v25 != v12)
      {
        unint64_t v40 = v38;
        id v41 = std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v26, v12, v25);
        unint64_t v38 = v40;
        uint64_t v39 = (uint64_t)v41;
      }
    }
    a4 = -(uint64_t)(v38 + v10);
    uint64_t v42 = v101 - v24;
    if ((uint64_t)(v38 + v24) >= (uint64_t)(v101 - (v38 + v24) - v10))
    {
      unint64_t v43 = v38;
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(v39, v25, a3, -(uint64_t)(v38 + v10), v101 - v24, a6, a7);
      uint64_t v25 = (uint64_t)v26;
      uint64_t v42 = v24;
      a4 = v43;
      a3 = v39;
      a1 = v97;
    }
    else
    {
      std::__inplace_merge<std::_ClassicAlgPolicy,minIdPath(TopoSubstring *)::$_0 &,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(a1 + v9, v26, v39, v38, v24, a6, a7);
      a1 = v39;
    }
    uint64_t v101 = v42;
    a2 = v25;
    if (!v42) {
      return;
    }
  }
  if (a4 <= v101)
  {
    if (a1 == a2) {
      return;
    }
    unint64_t v78 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = (uint64_t)a6;
    do
    {
      long long v79 = &a6[v78 / 8];
      uint64_t v80 = (void *)(a1 + v78);
      unint64_t v81 = *(void **)(a1 + v78);
      *uint64_t v80 = 0;
      void *v79 = v81;
      *((_DWORD *)v79 + 2) = *(_DWORD *)(a1 + v78 + 8);
      *((_OWORD *)v79 + 1) = *(_OWORD *)(a1 + v78 + 16);
      v79[4] = *(void **)(a1 + v78 + 32);
      ++v56;
      v78 += 40;
    }
    while (v80 + 5 != (void *)a2);
    if (!v78) {
      goto LABEL_104;
    }
    v110 = (uint64_t *)&a6[v78 / 8];
    v82 = a6;
    while (1)
    {
      if (a2 == a3)
      {
        std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>((uint64_t)v113, (uint64_t *)v82, v110, a1);
        goto LABEL_104;
      }
      id v83 = *(id *)a2;
      uint64_t v84 = *(void **)(a2 + 16);
      unsigned int v85 = *(_DWORD *)(a2 + 8);
      id v86 = *v82;
      id v87 = v86;
      uint64_t v88 = v82[2];
      if (v84 == v88)
      {
        unsigned int v89 = *((_DWORD *)v82 + 2);
        if (v85 >= v89)
        {
          if (v85 != v89)
          {

LABEL_96:
            uint64_t v93 = (uint64_t)*v82;
            id *v82 = 0;
            id v94 = *(void **)a1;
            *(void *)a1 = v93;

            *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)v82 + 2);
            *(_OWORD *)(a1 + 16) = *((_OWORD *)v82 + 1);
            *(void *)(a1 + 32) = v82[4];
            v82 += 5;
            goto LABEL_97;
          }
          uint64_t v92 = [v83 TTCompare:v86];

          if (v92 != -1) {
            goto LABEL_96;
          }
        }
        else
        {
        }
      }
      else
      {

        if (v84 >= v88) {
          goto LABEL_96;
        }
      }
      id v90 = *(id *)a2;
      *(void *)a2 = 0;
      v91 = *(void **)a1;
      *(void *)a1 = v90;

      *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      a2 += 40;
LABEL_97:
      uint64_t v57 = (uint64_t)a6;
      a1 += 40;
      if (v110 == (uint64_t *)v82) {
        goto LABEL_104;
      }
    }
  }
  if (a3 == a2) {
    return;
  }
  unint64_t v55 = 0;
  uint64_t v56 = 0;
  uint64_t v58 = a3;
  uint64_t v57 = (uint64_t)a6;
  do
  {
    id v59 = &a6[v55 / 8];
    unsigned int v60 = (void *)(a2 + v55);
    id v61 = *(void **)(a2 + v55);
    *unsigned int v60 = 0;
    *id v59 = v61;
    *((_DWORD *)v59 + 2) = *(_DWORD *)(a2 + v55 + 8);
    *((_OWORD *)v59 + 1) = *(_OWORD *)(a2 + v55 + 16);
    v59[4] = *(void **)(a2 + v55 + 32);
    ++v56;
    v55 += 40;
  }
  while (v60 + 5 != (void *)a3);
  if (!v55) {
    goto LABEL_104;
  }
  uint64_t v62 = (uint64_t)&a6[v55 / 8];
  uint64_t v63 = a3 - 40;
  uint64_t v104 = (uint64_t)&a6[v55 / 8];
  while (a2 != a1)
  {
    uint64_t v106 = v62 - 40;
    id v64 = *(id *)(v62 - 40);
    uint64_t v109 = v62;
    unint64_t v67 = *(void *)(v62 - 24);
    uint64_t v66 = (_OWORD *)(v62 - 24);
    unint64_t v65 = v67;
    unsigned int v68 = *((_DWORD *)v66 - 2);
    id v69 = *(id *)(a2 - 40);
    uint64_t v70 = (_OWORD *)(a2 - 24);
    unint64_t v71 = *(void *)(a2 - 24);
    if (v67 == v71)
    {
      unsigned int v73 = *(_DWORD *)(a2 - 32);
      if (v68 < v73)
      {

        uint64_t v72 = a2;
        a2 -= 40;
        uint64_t v57 = (uint64_t)a6;
        goto LABEL_74;
      }
      if (v68 != v73)
      {

        uint64_t v57 = (uint64_t)a6;
LABEL_78:
        uint64_t v70 = v66;
        uint64_t v62 = v106;
        uint64_t v72 = v109;
        goto LABEL_79;
      }
      uint64_t v74 = v69;
      uint64_t v75 = [v64 TTCompare:v69];

      uint64_t v57 = (uint64_t)a6;
      if (v75 != -1) {
        goto LABEL_78;
      }
    }
    else
    {

      BOOL v19 = v65 >= v71;
      uint64_t v57 = (uint64_t)a6;
      if (v19) {
        goto LABEL_78;
      }
    }
    uint64_t v72 = a2;
    a2 -= 40;
LABEL_74:
    uint64_t v62 = v109;
LABEL_79:
    uint64_t v76 = *(void *)(v72 - 40);
    *(void *)(v72 - 40) = 0;
    uint64_t v77 = *(void **)v63;
    *(void *)uint64_t v63 = v76;

    *(_DWORD *)(v63 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v72 - 32);
    *(_OWORD *)(v63 + 16) = *v70;
    *(void *)(v63 + 32) = *(void *)(v72 - 8);
    v58 -= 40;
    v63 -= 40;
    a1 = v111;
    if (v62 == v57) {
      goto LABEL_104;
    }
  }
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(v104, v62, v57, a3, v58, v113);
LABEL_104:
  if (v57)
  {
    do
    {
      v95 = *a6;
      a6 += 5;

      --v56;
    }
    while (v56);
  }
}

void sub_1B9B83820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  if (a13)
  {
    unint64_t v15 = a13;
    do
    {
      id v16 = *v15;
      v15 += 5;

      --v13;
    }
    while (v13);
  }
  _Unwind_Resume(exception_object);
}

__n128 std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](__n128 *a1, uint64_t a2)
{
  unint64_t v4 = a1->n128_u64[0];
  a1->n128_u64[0] = 0;
  unsigned __int32 v5 = a1->n128_u32[2];
  __n128 v11 = a1[1];
  uint64_t v6 = *(void **)a2;
  *(void *)a2 = 0;
  uint64_t v7 = (void *)a1->n128_u64[0];
  a1->n128_u64[0] = (unint64_t)v6;

  a1->n128_u32[2] = *(_DWORD *)(a2 + 8);
  a1[1] = *(__n128 *)(a2 + 16);
  id v8 = *(void **)a2;
  *(void *)a2 = v4;

  *(_DWORD *)(a2 + _Block_object_dispose(&STACK[0x260], 8) = v5;
  __n128 result = v11;
  *(__n128 *)(a2 + 16) = v11;
  unint64_t v10 = a1[2].n128_u64[0];
  a1[2].n128_u64[0] = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = v10;
  return result;
}

uint64_t *std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *,std::pair<minIdPathData,TopoSubstring *> *>(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  unsigned __int32 v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v7 = *v5;
    uint64_t *v5 = 0;
    id v8 = *(void **)a4;
    *(void *)a4 = v7;

    *(_DWORD *)(a4 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)v5 + 2);
    *(_OWORD *)(a4 + 16) = *((_OWORD *)v5 + 1);
    *(void *)(a4 + 32) = v5[4];
    a4 += 40;
    v5 += 5;
  }
  while (v5 != v6);
  return v6;
}

void std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::pair<minIdPathData,TopoSubstring *> *>,std::reverse_iterator<std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>,0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v6 = a5;
  uint64_t v8 = a2;
  if (a2 != a3)
  {
    uint64_t v12 = a5 - 40;
    do
    {
      uint64_t v13 = *(void *)(v8 - 40);
      v8 -= 40;
      *(void *)uint64_t v8 = 0;
      unsigned int v14 = *(void **)v12;
      *(void *)uint64_t v12 = v13;

      *(_DWORD *)(v12 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v8 + 8);
      *(_OWORD *)(v12 + 16) = *(_OWORD *)(v8 + 16);
      *(void *)(v12 + 32) = *(void *)(v8 + 32);
      v6 -= 40;
      v12 -= 40;
    }
    while (v8 != a3);
    uint64_t v8 = a3;
  }
  *a6 = a1;
  a6[1] = v8;
  a6[2] = a4;
  a6[3] = v6;
}

__n128 *std::__rotate_forward[abi:ne180100]<std::_ClassicAlgPolicy,std::__wrap_iter<std::pair<minIdPathData,TopoSubstring *> *>>(__n128 *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (__n128 *)a2;
  std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](a1, a2);
  uint64_t v6 = (__n128 *)((char *)a1 + 40);
  for (uint64_t i = (uint64_t)&v4[2].n128_i64[1]; i != a3; i += 40)
  {
    if (v6 == v4) {
      unint64_t v4 = (__n128 *)i;
    }
    std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v6, i);
    uint64_t v6 = (__n128 *)((char *)v6 + 40);
  }
  if (v6 != v4)
  {
    uint64_t v8 = v6;
    uint64_t v9 = (uint64_t)v4;
    do
    {
      while (1)
      {
        std::pair<minIdPathData,TopoSubstring *>::swap[abi:ne180100](v8, v9);
        uint64_t v8 = (__n128 *)((char *)v8 + 40);
        v9 += 40;
        if (v9 == a3) {
          break;
        }
        if (v8 == v4) {
          unint64_t v4 = (__n128 *)v9;
        }
      }
      uint64_t v9 = (uint64_t)v4;
    }
    while (v8 != v4);
  }
  return v6;
}

void *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned int>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned int>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned int>>>::__emplace_unique_key_args<TopoSubstring *,std::piecewise_construct_t const&,std::tuple<TopoSubstring * const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    uint64_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      uint64_t v13 = *v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == *a2) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          uint64_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  uint64_t v13 = operator new(0x20uLL);
  void *v13 = 0;
  v13[1] = v9;
  _OWORD v13[2] = **a4;
  *((_DWORD *)v13 + 6) = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    void *v13 = *v22;
LABEL_38:
    void *v22 = v13;
    goto LABEL_39;
  }
  void *v13 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v13;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*v13)
  {
    unint64_t v23 = *(void *)(*v13 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    uint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v13;
}

void sub_1B9B83D68(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::deque<TopoSubstring *>::push_back(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    std::deque<TopoSubstring *>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void std::deque<TopoSubstring *>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      id v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v5, v33);
      id v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      unint64_t v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        id v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)id v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      std::__split_buffer<TopoSubstring **>::push_back(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)a1, &v54);
    unint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      id v34 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>((uint64_t)(a1 + 3), v46);
      id v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      unsigned int v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        id v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)id v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      unint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  unsigned int v53 = operator new(0x1000uLL);
  std::__split_buffer<TopoSubstring **>::push_back(&v54, &v53);
  unint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    std::__split_buffer<TopoSubstring **>::push_front((uint64_t)&v54, v27);
  }
  unsigned int v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1B9B840D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void std::__split_buffer<TopoSubstring **>::push_back(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      unint64_t v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      unint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        int64_t v16 = 1;
      }
      else {
        int64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(a1[4], v16);
      unint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        unint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      uint64_t v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        BOOL v10 = v9;
      }
      else {
        BOOL v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      uint64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void std::__split_buffer<TopoSubstring **>::push_front(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

{
  char *v4;
  char *v5;
  unsigned char *v6;
  unsigned char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        uint64_t v11 = 1;
      }
      else {
        uint64_t v11 = (v7 - v4) >> 2;
      }
      unint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      int64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        int64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__emplace_unique_key_args<TopoSubstring *,TopoSubstring * const&>(uint64_t a1, void *a2, void *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    uint64_t v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x18uLL);
  *uint64_t i = 0;
  i[1] = v8;
  i[2] = *a3;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    *uint64_t i = *v21;
LABEL_38:
    *uint64_t v21 = i;
    goto LABEL_39;
  }
  *uint64_t i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }
    else
    {
      v22 &= v9 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B847C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::deque<TopoSubstring *>::__maybe_remove_back_spare[abi:ne180100](void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = ((v2 - v3) << 6) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x200) {
    a2 = 1;
  }
  if (v5 < 0x400) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t std::vector<TopoIDRange>::__push_back_slow_path<TopoIDRange const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint8x8_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(v7, v9);
  }
  else {
    uint8x8_t v10 = 0;
  }
  uint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[24 * v9];
  *(void *)uint64_t v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((_DWORD *)v11 + 4) = *(_DWORD *)(a2 + 16);
  v14[2] = v11 + 24;
  std::vector<TopoIDRange>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1B9B8494C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<TopoIDRange>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *std::vector<TopoIDRange>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    uint64_t v5 = *(void *)(v2 - 24);
    v2 -= 24;
    *(void *)uint64_t v2 = 0;
    *(void *)(v4 - --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v5;
    v4 -= 24;
    *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v2 + 8);
    *(_DWORD *)(v4 + 16) = *(_DWORD *)(v2 + 16);
  }
  a2[1] = v4;
  uint64_t v6 = *result;
  void *result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__split_buffer<TopoIDRange>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

char *std::vector<TopoSubstring *>::__assign_with_size[abi:ne180100]<TopoSubstring * const*,TopoSubstring * const*>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 3)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 61) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 2;
    if (v8 >> 2 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    __n128 result = std::vector<TopoSubstring *>::__vallocate[abi:ne180100](v7, v11);
    unint64_t v13 = (char *)v7[1];
    uint64_t v12 = (void **)(v7 + 1);
    unint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unint64_t v18 = v9;
      size_t v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v12 = (void **)(result + 8);
  float v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 3;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  BOOL v16 = &__src[8 * v15];
  if (v14 != v9)
  {
    __n128 result = (char *)memmove(*(void **)result, __src, v14 - v9);
    unint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unint64_t v18 = v9;
    size_t v19 = v16;
LABEL_18:
    __n128 result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *uint64_t v12 = &v9[v17];
  return result;
}

char *std::vector<TopoSubstring *>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
  }
  __n128 result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)__n128 result = v2;
  *(void *)(result + _Block_object_dispose(&STACK[0x260], 8) = a2[1];
  a2[1] = 0;
  uint64_t v5 = a2[2];
  uint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 16;
    void *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<_NSRange>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__push_back_slow_path<std::pair<TopoID,TopoID> const&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[32 * v9];
  *(void *)unint64_t v11 = *(id *)a2;
  *((_DWORD *)v11 + 2) = *(_DWORD *)(a2 + 8);
  *((void *)v11 + 2) = *(id *)(a2 + 16);
  *((_DWORD *)v11 + 6) = *(_DWORD *)(a2 + 24);
  v14[2] = v11 + 32;
  std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v14);
  uint64_t v12 = a1[1];
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v14);
  return v12;
}

void sub_1B9B84D4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(32 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a7 + v7;
      uint64_t v9 = a3 + v7;
      uint64_t v10 = *(void *)(a3 + v7 - 32);
      *(void *)(v9 - 32) = 0;
      *(void *)(v8 - 32) = v10;
      *(_DWORD *)(v8 - --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(_DWORD *)(a3 + v7 - 24);
      uint64_t v11 = *(void *)(a3 + v7 - 16);
      *(void *)(v9 - 16) = 0;
      *(void *)(v8 - 16) = v11;
      *(_DWORD *)(v8 - _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(a3 + v7 - 8);
      v7 -= 32;
    }
    while (a3 + v7 != a5);
    *((void *)&v17 + 1) = a7 + v7;
    uint64_t v12 = v17;
  }
  char v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::pair<TopoID,TopoID>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoID,TopoID>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(void *)(a2 + 32) = i)
  {

    uint64_t i = (id *)(*(void *)(a2 + 32) + 32);
  }
}

uint64_t std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::pair<TopoID,TopoID>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
  }
}

long long *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(long long *result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *a3;
  if (*(void *)result >= *a2)
  {
    if (v3 < v4)
    {
      long long v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*(void *)result < *a2)
      {
        long long v7 = *result;
        char *result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v3 >= v4)
    {
      long long v8 = *result;
      char *result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a2 >= *a3) {
        return result;
      }
      long long v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      long long v5 = *result;
      char *result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v6 = a2 - 1;
      if (*(void *)a1 < *((void *)a2 - 2))
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        long long *v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((long long *)a1, (unint64_t *)(a1 + 16), (unint64_t *)a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,[(TTMergeableString *)(long long *)a1 deleteSubstrings:(unint64_t *)(a1 + 32) withCharacterRanges:a2 - 1];
      return 1;
    case 5:
      uint64_t v17 = (long long *)(a1 + 16);
      uint64_t v18 = (long long *)(a1 + 32);
      size_t v19 = (long long *)(a1 + 48);
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,[(TTMergeableString *)(long long *)a1 deleteSubstrings:(unint64_t *)(a1 + 32) withCharacterRanges:(_OWORD *)(a1 + 48)];
      unint64_t v21 = *((void *)a2 - 2);
      uint64_t v20 = a2 - 1;
      if (*(void *)(a1 + 48) < v21)
      {
        long long v22 = *v19;
        *size_t v19 = *v20;
        long long *v20 = v22;
        if (*(void *)v18 < *(void *)v19)
        {
          long long v23 = *v18;
          *uint64_t v18 = *v19;
          *size_t v19 = v23;
          if (*(void *)v17 < *(void *)v18)
          {
            long long v24 = *v17;
            long long *v17 = *v18;
            *uint64_t v18 = v24;
            if (*(void *)a1 < *(void *)(a1 + 16))
            {
              long long v25 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v17;
              long long *v17 = v25;
            }
          }
        }
      }
      return 1;
    default:
      long long v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>((long long *)a1, (unint64_t *)(a1 + 16), (unint64_t *)(a1 + 32));
      uint64_t v9 = (_OWORD *)(a1 + 48);
      if ((_OWORD *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    long long v12 = *v9;
    unint64_t v13 = *(void *)v9;
    if (*v8 < *(void *)v9)
    {
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 4_Block_object_dispose(&STACK[0x260], 8) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        unint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v15 >= v13)
        {
          uint64_t v16 = (_OWORD *)(a1 + v14 + 48);
          goto LABEL_13;
        }
      }
      uint64_t v16 = (_OWORD *)a1;
LABEL_13:
      _OWORD *v16 = v12;
      if (++v11 == 8) {
        return v9 + 1 == a2;
      }
    }
    long long v8 = v9;
    v10 += 16;
    if (++v9 == a2) {
      return 1;
    }
  }
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(long long *a1, unint64_t *a2, unint64_t *a3, _OWORD *a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,-[TTMergeableString deleteSubstrings:withCharacterRanges:]::$_1 &,_NSRange *>(a1, a2, a3);
  if (*a3 < *(void *)a4)
  {
    __n128 result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a2 < *a3)
    {
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*(void *)a1 < *a2)
      {
        __n128 result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

char *std::vector<TopoSubstring *>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  long long v5 = *(char **)(a2 + 8);
  long long v6 = (char *)*a1;
  long long v7 = v5;
  if (*a1 != __src)
  {
    long long v8 = __src;
    long long v7 = *(char **)(a2 + 8);
    do
    {
      uint64_t v9 = *((void *)v8 - 1);
      v8 -= 8;
      *((void *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    long long v7 = *(char **)(a2 + 8);
  }
  *(void *)(a2 + 16) = v11 + v12;
  unint64_t v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x260], 8) = v13;
  uint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  unint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  unint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = (void *)*((void *)v4 - 3);
        v4 -= 24;
      }
      while (v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  unint64_t v3 = __p;
  __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  long long v6 = *(void **)(*result + 8 * v4);
  do
  {
    long long v7 = v6;
    long long v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *long long v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x260], 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(a1, *(id **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__deallocate_node(uint64_t a1, id *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      int8x8_t v3 = (id *)*v2;

      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID>(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v7 = *((unsigned int *)a2 + 2);
  uint64_t v8 = [(id)*a2 hash];
  unint64_t v9 = v8 ^ v7;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8 ^ v7;
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x20uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v9;
  uint64_t v17 = *a3;
  *a3 = 0;
  *((void *)i + 2) = v17;
  *((_DWORD *)i + 6) = *((_DWORD *)a3 + 2);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v23);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v24 = *(void *)a1;
  long long v25 = *(void **)(*(void *)a1 + 8 * v3);
  if (v25)
  {
    *(void *)uint64_t i = *v25;
LABEL_39:
    *long long v25 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v16;
  void *v16 = i;
  *(void *)(v24 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v26 = *(void *)(*(void *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10) {
        v26 %= v10;
      }
    }
    else
    {
      v26 &= v10 - 1;
    }
    long long v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B860C0(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](uint64_t a1, id *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

void *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__emplace_unique_key_args<TopoID,TopoID const&>(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *((unsigned int *)a2 + 2);
  uint64_t v8 = [(id)*a2 hash];
  unint64_t v9 = v8 ^ v7;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8 ^ v7;
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x20uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v9;
  *((void *)i + 2) = *(id *)a3;
  *((_DWORD *)i + 6) = *(_DWORD *)(a3 + 8);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_39:
    void *v24 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v16;
  void *v16 = i;
  *(void *)(v23 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B86398(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::__erase_unique<TopoID>(void *a1, void *a2)
{
  __n128 result = std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t *std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::find<TopoID>(void *a1, void *a2)
{
  uint64_t v4 = *((unsigned int *)a2 + 2);
  uint64_t v5 = [(id)*a2 hash];
  int8x8_t v6 = (int8x8_t)a1[1];
  if (!*(void *)&v6) {
    return 0;
  }
  unint64_t v7 = v5 ^ v4;
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v7;
    if (v7 >= *(void *)&v6) {
      unint64_t v10 = v7 % *(void *)&v6;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v6 - 1) & v7;
  }
  uint8x8_t v11 = *(uint64_t ***)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  for (uint64_t i = *v11; i; uint64_t i = (uint64_t *)*i)
  {
    unint64_t v13 = i[1];
    if (v13 == v7)
    {
      if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([(id)i[2] isEqual:*a2] & 1) != 0) {
        return i;
      }
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(void *)&v6) {
          v13 %= *(void *)&v6;
        }
      }
      else
      {
        v13 &= *(void *)&v6 - 1;
      }
      if (v13 != v10) {
        return 0;
      }
    }
  }
  return i;
}

uint64_t std::__hash_table<TopoID,std::hash<TopoID>,std::equal_to<TopoID>,std::allocator<TopoID>>::erase(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::remove(a1, a2, (uint64_t)&__p);
  unint64_t v3 = (id *)__p;
  __p = 0;
  if (v3)
  {
    if (v6) {

    }
    operator delete(v3);
  }
  return v2;
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  float v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x28uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  *((void *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((void *)i + 4) = 0;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v25 = *(void *)a1;
  unint64_t v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)uint64_t i = *v26;
LABEL_39:
    *unint64_t v26 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v25 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v27 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11) {
        v27 %= v11;
      }
    }
    else
    {
      v27 &= v11 - 1;
    }
    unint64_t v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B867C0(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<TopoID,TopoSubstring *>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,TopoSubstring *>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,TopoSubstring *>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID&&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  float v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x28uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  uint64_t v19 = **a4;
  *uint64_t v18 = 0;
  *((void *)i + 2) = v19;
  *((_DWORD *)i + 6) = *((_DWORD *)v18 + 2);
  *((void *)i + 4) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  unint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_39:
    *unint64_t v27 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    unint64_t v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B86A48(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__erase_unique<TopoSubstring *>(void *a1, void *a2)
{
  __n128 result = std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::find<TopoSubstring *>(a1, a2);
  if (result)
  {
    std::__hash_table<TopoSubstring *,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,std::allocator<TopoSubstring *>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

void std::vector<TopoSubstring *>::__append(void **a1, unint64_t a2)
{
  char v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      unint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v4, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    unint64_t v16 = &v14[8 * a2];
    uint64_t v18 = (char *)*a1;
    float v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      float v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void *std::__hash_table<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::__unordered_map_hasher<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::hash<TopoID>,std::equal_to<TopoID>,true>,std::__unordered_map_equal<TopoID,std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>,std::equal_to<TopoID>,std::hash<TopoID>,true>,std::allocator<std::__hash_value_type<TopoID,std::pair<TopoSubstring *,TopoSubstring *>>>>::__emplace_unique_key_args<TopoID,std::piecewise_construct_t const&,std::tuple<TopoID const&>,std::tuple<>>(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *((unsigned int *)a2 + 2);
  uint64_t v9 = [(id)*a2 hash];
  unint64_t v10 = v9 ^ v8;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9 ^ v8;
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
    uint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (*((_DWORD *)i + 6) == *((_DWORD *)a2 + 2) && ([*((id *)i + 2) isEqual:*a2] & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  float v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  uint64_t v18 = *a4;
  *((void *)i + 2) = *(id *)v18;
  *((_DWORD *)i + 6) = *(_DWORD *)(v18 + 8);
  *((void *)i + 4) = 0;
  *((void *)i + 5) = 0;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v11 || (float)(v20 * (float)v11) < v19)
  {
    BOOL v21 = 1;
    if (v11 >= 3) {
      BOOL v21 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v11);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::__rehash<true>(a1, v24);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v25 = *(void *)a1;
  uint64_t v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)uint64_t i = *v26;
LABEL_39:
    *uint64_t v26 = i;
    goto LABEL_40;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v25 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v27 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v27 >= v11) {
        v27 %= v11;
      }
    }
    else
    {
      v27 &= v11 - 1;
    }
    uint64_t v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_39;
  }
LABEL_40:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1B9B86E1C(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<TopoID,void *>>>::operator()[abi:ne180100](v2, v1);
  _Unwind_Resume(a1);
}

void sub_1B9B87158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B872D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B877B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B87FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B88070(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B881B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B88358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::Selection::~Selection((topotext::Selection *)&a9);

  _Unwind_Resume(a1);
}

void sub_1B9B8857C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoID,TopoID>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    unint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    unint64_t v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)unint64_t v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    uint64_t v19 = a2[2];
    a2[2] = 0;
    *((void *)v16 + 2) = v19;
    *((_DWORD *)v16 + 6) = *((_DWORD *)a2 + 6);
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoID,TopoID>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)a2 + 2);
    uint64_t v9 = a2[2];
    a2[2] = 0;
    *(void *)(v7 + 16) = v9;
    *(_DWORD *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *((_DWORD *)a2 + 6);
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1B9B88708(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoID,TopoID>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1B9B88B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1B9B88C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B88CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1B9B88E20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B88F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B89028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Selection_Range>::New()
{
}

void sub_1B9B89088(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoID,TopoID>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::pair<TopoID,TopoID>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 32)
  {

    unint64_t v5 = *(void **)(i - 32);
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = a2;
}

void sub_1B9B891E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B89264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B89408(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B894F4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40A258B440);
  _Unwind_Resume(a1);
}

void sub_1B9B8987C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);

  versioned_document::Version::~Version((versioned_document::Version *)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::DeleteSubrange(google::protobuf::internal::RepeatedPtrFieldBase *a1, int a2, int a3)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1134);
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1135);
  char v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)a1 + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1136);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    int v9 = a2;
    int v10 = a3;
    do
    {
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a1, v9);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
      ++v9;
      --v10;
    }
    while (v10);
  }
  google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(a1, a2, a3, 0);
}

void sub_1B9B89A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9B89BE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B89C60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B89D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9B89FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);

  _Unwind_Resume(a1);
}

void sub_1B9B8A160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B8A244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New()
{
}

{
  operator new();
}

void sub_1B9B8A2A4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)versioned_document::Version::MergeFrom(*(versioned_document::Version **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

{
  std::string *v4;
  uint64_t result;
  int v6;
  const versioned_document::Version *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  std::string v12[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)versioned_document::Version::MergeFrom(*(versioned_document::Version **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9B8A460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 894);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 895);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B8A534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<versioned_document::Version>::ExtractSubrange(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2, int a3, uint64_t *a4)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1145);
    int v8 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    if ((a3 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a3 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1146);
  uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (num) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
LABEL_6:
  if (a3 + a2 > *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 1147);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (start + num) <= (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a3 >= 1)
  {
    if (a4)
    {
      uint64_t v11 = a3;
      int v12 = a2;
      do
      {
        *a4++ = google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this, v12++);
        --v11;
      }
      while (v11);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::CloseGap((uint64_t)this, a2, a3);
  }
}

void sub_1B9B8A6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(uint64_t this, int a2, int a3)
{
  uint64_t v3 = *(int *)(this + 12);
  if (a3 + a2 < (int)v3)
  {
    uint64_t v4 = a2;
    do
    {
      *(void *)(*(void *)this + 8 * v4) = *(void *)(*(void *)this + 8 * v4 + 8 * a3);
      ++v4;
    }
    while (a3 + v4 < v3);
  }
  *(_DWORD *)(this + 8) -= a3;
  *(_DWORD *)(this + 12) = v3 - a3;
  return this;
}

void OUTLINED_FUNCTION_0_8(float a1, uint64_t a2, uint64_t a3, int a4)
{
  *(float *)a3 = a1;
  *(_DWORD *)(a3 + 4) = a4;
  *(_WORD *)(a3 + _Block_object_dispose(&STACK[0x260], 8) = 1024;
  *(_DWORD *)(a3 + 10) = v4;
}

void sub_1B9B8A7C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8A860(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1B9B8A940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8AA2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8AB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::VectorTimestamp::~VectorTimestamp((topotext::VectorTimestamp *)&a9);

  _Unwind_Resume(a1);
}

void sub_1B9B8AD4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8B080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8B178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B8B258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B8B334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New()
{
}

{
  operator new();
}

void sub_1B9B8B394(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock_ReplicaClock>::New()
{
}

void sub_1B9B8B3F8(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40110CF19CLL);
  _Unwind_Resume(a1);
}

void sub_1B9B8B518(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::ParagraphStyle::~ParagraphStyle((topotext::ParagraphStyle *)va);

  _Unwind_Resume(a1);
}

void sub_1B9B8B624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8B830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::ParagraphStyle::~ParagraphStyle((topotext::ParagraphStyle *)va);
  _Unwind_Resume(a1);
}

void sub_1B9B8B8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8B958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BA10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BD68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BE9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8BFD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8C090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

CGColorSpaceRef ___Z22TSUDeviceRGBColorSpacev_block_invoke()
{
  CGColorSpaceRef result = CGColorSpaceCreateDeviceRGB();
  TSUDeviceRGBColorSpace(void)::sDeviceRGBColorSpace = (uint64_t)result;
  return result;
}

void sub_1B9B8C940(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8CEA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8D65C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v7, 0x10B3C400074EEDFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B8D800(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8D938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8D9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1B9B8DA84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B8DB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New()
{
}

{
  operator new();
}

void sub_1B9B8DBB0(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40BCC55259);
  _Unwind_Resume(a1);
}

void sub_1B9B8E764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9B8F3A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8F6E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B8FF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9B901A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B90230(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B90310(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B90388(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B904E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B905D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  unint64_t v14 = v13;

  _Unwind_Resume(a1);
}

void sub_1B9B908D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B909CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B90C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B90D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9B90E44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B90F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B9102C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v12, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B910D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B911C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9B912A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91620(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B916A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B916F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B918C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91934(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B919A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91E00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B91EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1B9B91F58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9201C(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1B9B920C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9224C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B92308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9243C(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1B9B92518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B925D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B926A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B92818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B929A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v11, 0x10B3C407D90225ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B92B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B92CC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B92E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B92F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9301C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B930E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93254(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9331C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B933FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B935FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B938EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93BA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1B9B93DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B93EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B94098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B942A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B94E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B94F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B94FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B952E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  a11 = (void **)&a18;
  std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destroy_vector::operator()[abi:ne180100](&a11);

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    unint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    unint64_t v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)unint64_t v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    uint64_t v19 = a2[3];
    a2[3] = 0;
    *((void *)v16 + 3) = v19;
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v9 = a2[3];
    a2[3] = 0;
    *(void *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1B9B956B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1B9B9582C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  _Unwind_Resume(a1);
}

void sub_1B9B95900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B959F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__base_destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 32)
  {

    unint64_t v5 = *(void **)(i - 32);
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = a2;
}

uint64_t std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  std::string v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      uint64_t v9 = *(void *)(a3 - 32);
      a3 -= 32;
      *(void *)a3 = 0;
      *(void *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *(void *)(v8 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v8;
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v14 = v3;
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v9 = v7;
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(v4, (uint64_t)v13, (uint64_t)v8);
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>,std::reverse_iterator<std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(id **)(a2 + 32); i != *(id **)(a3 + 32); *(void *)(a2 + 32) = i)
  {

    uint64_t i = (id *)(*(void *)(a2 + 32) + 32);
  }
}

uint64_t std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__destruct_at_end[abi:ne180100](uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
  }
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__assign_with_size[abi:ne180100]<std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = (uint64_t)(a1 + 2);
  uint64_t v9 = *a1;
  if (a4 > (a1[2] - *a1) >> 5)
  {
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(a1);
    if (a4 >> 59) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = a1[2] - *a1;
    uint64_t v11 = v10 >> 4;
    if (v10 >> 4 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](a1, v12);
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v6, a3, a1[1]);
LABEL_15:
    a1[1] = v13;
    return;
  }
  uint64_t v14 = a1[1];
  unint64_t v15 = (v14 - v9) >> 5;
  if (v15 < a4)
  {
    uint64_t v16 = a2 + 32 * v15;
    if (v14 != v9)
    {
      uint64_t v17 = 32 * v15;
      do
      {
        std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
        v6 += 32;
        v9 += 32;
        v17 -= 32;
      }
      while (v17);
      uint64_t v9 = a1[1];
    }
    uint64_t v13 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(v8, v16, a3, v9);
    goto LABEL_15;
  }
  if (a2 == a3)
  {
    uint64_t v18 = *a1;
  }
  else
  {
    uint64_t v18 = *a1;
    do
    {
      std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](v9, v6);
      v6 += 32;
      v9 += 32;
      v18 += 32;
    }
    while (v6 != a3);
  }

  std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, v18);
}

void sub_1B9B95F0C(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, *a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<std::pair<TopoIDRange,NSDictionary * {__strong}>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*,std::pair<TopoIDRange,NSDictionary * {__strong}>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 == a3)
  {
    uint64_t v7 = a4;
  }
  else
  {
    uint64_t v6 = a2;
    uint64_t v7 = v12;
    do
    {
      *(void *)uint64_t v4 = *(id *)v6;
      *(_DWORD *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(v4 + 16) = *(_DWORD *)(v6 + 16);
      *(void *)(v4 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(id *)(v6 + 24);
      v7 += 32;
      v6 += 32;
      uint64_t v4 = v7;
    }
    while (v6 != a3);
    uint64_t v12 = v7;
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v7;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(*(void *)a1, **(void **)(a1 + 16), **(void **)(a1 + 16), **(void **)(a1 + 8), **(void **)(a1 + 8));
  }
  return a1;
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 != a5)
  {
    uint64_t v6 = a3;
    do
    {

      uint64_t v7 = *(void **)(v6 - 32);
      v6 -= 32;
    }
    while (v6 != a5);
  }
}

uint64_t std::pair<TopoIDRange,NSDictionary * {__strong}>::operator=[abi:ne180100](uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  objc_storeStrong((id *)(a1 + 24), *(id *)(a2 + 24));
  return a1;
}

void sub_1B9B961D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B963E0(_Unwind_Exception *a1, void *a2, void *a3, ...)
{
  va_start(va, a3);
  uint64_t v7 = v4;

  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment((CRDT::StringArray_ArrayAttachment *)va);
  _Unwind_Resume(a1);
}

void sub_1B9B9665C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v2, 0x10B3C406C843DA2);

  _Unwind_Resume(a1);
}

void sub_1B9B96718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9699C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  unint64_t v15 = v10;
  uint64_t v13 = v12;

  _Unwind_Resume(a1);
}

void sub_1B9B96B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x10B3C40E3C8ABF7);

  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New()
{
}

{
  operator new();
}

void sub_1B9B96B8C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

void sub_1B9B96D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B96ED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9704C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B97154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B971F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9750C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1B9B97668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B97758(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B979BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B97CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1B9B97E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void setPropertyIMP(void *a1, uint64_t a2, void *a3)
{
  id v11 = a1;
  id v5 = a3;
  uint64_t v6 = +[CRObject keyFromSelector:a2];
  uint64_t v7 = [v11 fields];
  uint64_t v8 = [v7 objectForKey:v6];

  if (objc_opt_respondsToSelector())
  {
    [v8 setContents:v5];
  }
  else
  {
    uint64_t v9 = +[CRConstant constant];
    int v10 = [v8 isEqual:v9];

    if (v10) {
      [v11 setFieldKey:v6 value:v5];
    }
  }
}

id propertyIMP(void *a1, const char *a2)
{
  uint64_t v3 = [a1 fields];
  uint64_t v4 = NSStringFromSelector(a2);
  id v5 = [v3 objectForKey:v4];

  if (objc_opt_respondsToSelector())
  {
    id v6 = [v5 contents];
  }
  else
  {
    id v6 = v5;
  }
  uint64_t v7 = v6;

  return v7;
}

void sub_1B9B9A358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v9);
  _Unwind_Resume(a1);
}

void sub_1B9B9ABB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9AC58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9AD18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9ADD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9AE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v12 = v11;

  _Unwind_Resume(a1);
}

void sub_1B9B9AF14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B114(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::Font::~Font((topotext::Font *)va);

  _Unwind_Resume(a1);
}

void sub_1B9B9B204(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B340(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B3F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  topotext::Font::~Font((topotext::Font *)va);
  _Unwind_Resume(a1);
}

void sub_1B9B9B490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B5F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B9B730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B9B818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9B910(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1B9B9BF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);

  _Unwind_Resume(a1);
}

void sub_1B9B9CA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41)
{
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)&a25);
  if (__p)
  {
    a41 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void std::vector<TopoSubstring *>::reserve(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    id v6 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1B9B9D34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  MEMORY[0x1BA9DB510](v11, 0x1093C4020A6E6BFLL);

  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1B9B9D510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1B9B9D9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va);
  std::__hash_table<std::__hash_value_type<TopoSubstring *,unsigned long>,std::__unordered_map_hasher<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::hash<TopoSubstring *>,std::equal_to<TopoSubstring *>,true>,std::__unordered_map_equal<TopoSubstring *,std::__hash_value_type<TopoSubstring *,unsigned long>,std::equal_to<TopoSubstring *>,std::hash<TopoSubstring *>,true>,std::allocator<std::__hash_value_type<TopoSubstring *,unsigned long>>>::~__hash_table((uint64_t)va1);
  uint64_t v12 = *(void **)(v10 - 112);
  if (v12)
  {
    *(void *)(v10 - 104) = v12;
    operator delete(v12);
  }

  _Unwind_Resume(a1);
}

void sub_1B9B9DB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  topotext::String::~String((topotext::String *)&a9);

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9B9DC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Get(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 664);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 665);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1 + 4 * a2;
}

{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 664);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 665);
    int64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1 + 4 * a2;
}

void sub_1B9B9DCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Substring>::New()
{
}

void sub_1B9B9DD58(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C403C0DBAE8);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Reserve(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

void sub_1B9B9DE98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9DF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x1093C405ACC521ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B9E020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E0E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E180(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E39C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E410(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E4B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E52C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E5EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E660(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E6BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E824(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9E91C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x10B3C40CCCF3E6ELL);

  _Unwind_Resume(a1);
}

void sub_1B9B9EA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v11, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B9EB44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9EC3C(_Unwind_Exception *a1)
{
  int64_t v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1B9B9ED08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9ED88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9EE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  MEMORY[0x1BA9DB510](v10, 0x1093C4020A6E6BFLL);

  _Unwind_Resume(a1);
}

void sub_1B9B9EF74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F1A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F21C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F3A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F3EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F704(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9F97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9FB98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9FDAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9B9FE50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA005C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA024C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CRDT::VectorTimestamp_Element>::New()
{
}

void sub_1B9BA02E4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40D780A9F4);
  _Unwind_Resume(a1);
}

void sub_1B9BA0498(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA05B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA0620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA06D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA087C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::push_back[abi:ne180100](uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    uint64_t v11 = (uint64_t)(v7 - *a1) >> 5;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 59) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = v5 - *a1;
    if (v13 >> 4 > v12) {
      unint64_t v12 = v13 >> 4;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v14 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = result;
    uint64_t v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<TopoID,TopoID>>>(result, v14);
    uint64_t v16 = &v15[32 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[32 * v17];
    uint64_t v18 = *a2;
    *a2 = 0;
    *(void *)uint64_t v16 = v18;
    *((_DWORD *)v16 + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)v16 + 4) = *((_DWORD *)a2 + 4);
    uint64_t v19 = a2[3];
    a2[3] = 0;
    *((void *)v16 + 3) = v19;
    v20[2] = v16 + 32;
    std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(a1, v20);
    uint64_t v10 = a1[1];
    uint64_t result = std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)v20);
  }
  else
  {
    uint64_t v8 = *a2;
    *a2 = 0;
    *(void *)unint64_t v7 = v8;
    *(_DWORD *)(v7 + _Block_object_dispose(&STACK[0x260], 8) = *((_DWORD *)a2 + 2);
    *(_DWORD *)(v7 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v9 = a2[3];
    a2[3] = 0;
    *(void *)(v7 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v9;
    uint64_t v10 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v10;
  return result;
}

void sub_1B9BA09DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::pair<TopoIDRange,NSDictionary * {__strong}>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1B9BA0D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
}

void sub_1B9BA0F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::pair<TopoIDRange,NSAttributedString * {__strong}>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  std::string v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      uint64_t v9 = *(void *)(a3 - 32);
      a3 -= 32;
      *(void *)a3 = 0;
      *(void *)(v8 - 32) = v9;
      v8 -= 32;
      *(_DWORD *)(v8 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(a3 + 8);
      *(_DWORD *)(v8 + 16) = *(_DWORD *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      *(void *)(a3 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      *(void *)(v8 + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v10;
      v7 -= 32;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v8;
    uint64_t v11 = v16;
  }
  char v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSAttributedString * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSAttributedString * {__strong}>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::pair<TopoIDRange,NSDictionary * {__strong}>>,std::reverse_iterator<std::pair<TopoIDRange,NSDictionary * {__strong}>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void sub_1B9BA2E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B9BA37C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA3980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  *(void *)(v17 - 56) = &a15;
  std::vector<TopoIDRange>::__destroy_vector::operator()[abi:ne180100]((void ***)(v17 - 56));

  _Unwind_Resume(a1);
}

void sub_1B9BA3A98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA3BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA3CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA3DBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B9BA3F18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<TopoIDRange>::__assign_with_size[abi:ne180100]<TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(id **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    std::vector<TopoIDRange>::__vdeallocate((void **)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<TopoIDRange>::__vallocate[abi:ne180100]((void *)a1, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v18, a2, v13, v9);
    uint64_t v12 = std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v12;
    return;
  }
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>((int)&v19, a2, a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      uint64_t v17 = *(void **)(v16 - 24);
      v16 -= 24;
    }
    while (v16 != v15);
  }
  *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = v15;
}

void sub_1B9BA40C4(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1B9BA40CC(_Unwind_Exception *a1)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<TopoIDRange>::__vdeallocate(void **a1)
{
  uint64_t v1 = (char *)*a1;
  if (*a1)
  {
    int v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        uint64_t v5 = (void *)*((void *)v3 - 3);
        v3 -= 24;
      }
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<TopoIDRange>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<CRDT::Document_DocObject *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<TopoIDRange>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy[abi:ne180100]<std::allocator<TopoIDRange>,TopoIDRange*,TopoIDRange*,TopoIDRange*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)a4 = *(id *)v6;
      *(_DWORD *)(a4 + _Block_object_dispose(&STACK[0x260], 8) = *(_DWORD *)(v6 + 8);
      *(_DWORD *)(a4 + 16) = *(_DWORD *)(v6 + 16);
      a4 += 24;
      v6 += 24;
    }
    while (v6 != a3);
  }
  return a4;
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<TopoIDRange *,TopoIDRange *,TopoIDRange *>(int a1, uint64_t a2, uint64_t a3, id *location)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    objc_storeStrong(location, *(id *)v5);
    *((_DWORD *)location + 2) = *(_DWORD *)(v5 + 8);
    *((_DWORD *)location + 4) = *(_DWORD *)(v5 + 16);
    location += 3;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

atomic_ullong *google::protobuf::GoogleOnceInitImpl(atomic_ullong *result, uint64_t a2)
{
  atomic_ullong v2 = *result;
  __dmb(0xBu);
  if (v2 != 2)
  {
    int v3 = result;
    do
    {
      uint64_t v4 = 0;
      atomic_compare_exchange_strong(result, (unint64_t *)&v4, 1uLL);
      if (!v4)
      {
        uint64_t result = (atomic_ullong *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
        __dmb(0xBu);
        uint64_t *v3 = 2;
        return result;
      }
    }
    while (!*result);
    if (*result == 1)
    {
      do
      {
        uint64_t result = (atomic_ullong *)sched_yield();
        uint64_t v5 = *v3;
        __dmb(0xBu);
      }
      while (v5 == 1);
    }
  }
  return result;
}

void *google::protobuf::MessageLite::InitializationErrorString@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

BOOL google::protobuf::MessageLite::ParseFromArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  v7[0] = 0;
  v7[1] = a2;
  v7[2] = &a2[a3];
  int v8 = a3;
  uint64_t v9 = 0;
  __int16 v10 = 0;
  int v11 = a3;
  long long v12 = xmmword_1B9BF23E0;
  int v13 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)this + 32))(this);
  if (!(*(unsigned int (**)(google::protobuf::MessageLite *, void *))(*(void *)this + 64))(this, v7))
  {
LABEL_7:
    BOOL v4 = 0;
    goto LABEL_8;
  }
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 123);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v18, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    goto LABEL_7;
  }
  BOOL v4 = (_BYTE)v10 != 0;
LABEL_8:
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v7);
  return v4;
}

void sub_1B9BA5778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v25 - 64));
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::MessageLite::SerializeWithCachedSizesToArray(google::protobuf::MessageLite *this, unsigned __int8 *a2)
{
  int v4 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 96))(this);
  google::protobuf::io::ArrayOutputStream::ArrayOutputStream((uint64_t)v10, a2, v4, -1);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9, (google::protobuf::io::ZeroCopyOutputStream *)v10);
  (*(void (**)(google::protobuf::MessageLite *, unsigned char *))(*(void *)this + 80))(this, v9);
  if (v9[24])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 224);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !coded_out.HadError(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v9);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)v10);
  return &a2[v4];
}

void sub_1B9BA58BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v5 = va_arg(va1, void *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va1);
  google::protobuf::io::ArrayOutputStream::~ArrayOutputStream((google::protobuf::io::ArrayOutputStream *)(v3 - 64));
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::InitializationErrorMessage(const std::string::value_type *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a3, "Can't ");
  std::string::append(a3, a1);
  std::string::append(a3, " message of type \"");
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 16))(&__p, a2);
  if ((v12 & 0x80u) == 0) {
    p_p = (const std::string::value_type *)&__p;
  }
  else {
    p_p = (const std::string::value_type *)__p;
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v7 = v12;
  }
  else {
    std::string::size_type v7 = v11;
  }
  std::string::append(a3, p_p, v7);
  if ((char)v12 < 0) {
    operator delete(__p);
  }
  std::string::append(a3, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 48))(&__p, a2);
  if ((v12 & 0x80u) == 0) {
    uint64_t v8 = (const std::string::value_type *)&__p;
  }
  else {
    uint64_t v8 = (const std::string::value_type *)__p;
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v9 = v12;
  }
  else {
    std::string::size_type v9 = v11;
  }
  std::string::append(a3, v8, v9);
  if ((char)v12 < 0) {
    operator delete(__p);
  }
}

void sub_1B9BA5A34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ByteSizeConsistencyError(google::protobuf::_anonymous_namespace_ *this, int a2, int a3)
{
  int v4 = (int)this;
  if (this != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 63);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ");
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Protocol message was modified concurrently during serialization.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (a3 != v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 65);
    std::string::size_type v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 69);
  std::string::size_type v9 = google::protobuf::internal::LogMessage::operator<<(v11, "This shouldn't be called if all the sizes are equal.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, (google::protobuf::internal::LogMessage *)v9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
}

void sub_1B9BA5B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializeToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 40))(this) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/message_lite.cc", 301);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: IsInitialized(): ");
    std::string::size_type v7 = google::protobuf::internal::LogMessage::operator<<(v6, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::MessageLite::SerializePartialToArray(this, a2, a3);
}

void sub_1B9BA5C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializePartialToArray(google::protobuf::MessageLite *this, void *a2, int a3)
{
  uint64_t v6 = (google::protobuf::_anonymous_namespace_ *)(*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 72))(this);
  if ((int)v6 <= a3)
  {
    uint64_t v7 = (*(uint64_t (**)(google::protobuf::MessageLite *, void *))(*(void *)this + 88))(this, a2)
       - (void)a2;
    if (v7 != (int)v6)
    {
      int v8 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 72))(this);
    }
  }
  return (int)v6 <= a3;
}

void sub_1B9BA5EA4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ArrayOutputStream(uint64_t this, void *a2, int a3, int a4)
{
  *(void *)this = &unk_1F1337C48;
  *(void *)(this + _Block_object_dispose(&STACK[0x260], 8) = a2;
  if (a4 <= 0) {
    int v4 = a3;
  }
  else {
    int v4 = a4;
  }
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(void *)(this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return this;
}

void google::protobuf::io::ArrayOutputStream::~ArrayOutputStream(google::protobuf::io::ArrayOutputStream *this)
{
  TTBoundedCheckedCastNSUIntegerToUInt32(this);

  JUMPOUT(0x1BA9DB510);
}

BOOL google::protobuf::io::ArrayOutputStream::Next(google::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayOutputStream::BackUp(google::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 136);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 138);
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 139);
    int v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_1B9BA608C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayOutputStream::ByteCount(google::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

void *google::protobuf::io::StringOutputStream::StringOutputStream(void *result, uint64_t a2)
{
  char *result = &unk_1F1337C90;
  result[1] = a2;
  return result;
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
  TTBoundedCheckedCastNSUIntegerToUInt32(this);

  JUMPOUT(0x1BA9DB510);
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6 = *((void *)this + 1);
  if (*(char *)(v6 + 23) < 0)
  {
    uint64_t v9 = *(void *)(v6 + 8);
    uint64_t v7 = (int)v9;
    std::string::size_type v8 = (*(void *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v9 < v8) {
      goto LABEL_11;
    }
    uint64_t v10 = *(void *)(v6 + 8);
    if ((int)v9 >= 0x40000000)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 170);
      std::string::size_type v11 = google::protobuf::internal::LogMessage::operator<<(v18, "Cannot allocate buffer larger than kint32max for ");
      unsigned __int8 v12 = google::protobuf::internal::LogMessage::operator<<(v11, "StringOutputStream.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      return 0;
    }
  }
  else
  {
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      std::string::size_type v8 = 22;
      LODWORD(v9) = *(unsigned __int8 *)(v6 + 23);
      goto LABEL_11;
    }
    LODWORD(v10) = *(unsigned __int8 *)(v6 + 23);
    LODWORD(v9) = v10;
  }
  int v14 = 2 * v10;
  if (v14 <= 16) {
    std::string::size_type v8 = 16;
  }
  else {
    std::string::size_type v8 = v14;
  }
LABEL_11:
  std::string::resize((std::string *)v6, v8, 0);
  uint64_t v15 = (uint64_t *)*((void *)this + 1);
  if (*((char *)v15 + 23) < 0)
  {
    if (!v15[1])
    {
LABEL_16:
      uint64_t v15 = 0;
      goto LABEL_17;
    }
    uint64_t v15 = (uint64_t *)*v15;
  }
  else if (!*((unsigned char *)v15 + 23))
  {
    goto LABEL_16;
  }
LABEL_17:
  *a2 = (char *)v15 + v7;
  uint64_t v16 = *((void *)this + 1);
  if (*(char *)(v16 + 23) < 0) {
    uint64_t v16 = *(void *)(v16 + 8);
  }
  else {
    LODWORD(v16) = *(unsigned __int8 *)(v16 + 23);
  }
  *a3 = v16 - v9;
  return 1;
}

void sub_1B9BA6268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 188);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)this + 1);
  LODWORD(v6) = *(char *)(v5 + 23);
  if ((v6 & 0x80000000) != 0) {
    unint64_t v7 = *(void *)(v5 + 8);
  }
  else {
    unint64_t v7 = *(unsigned __int8 *)(v5 + 23);
  }
  if (v7 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream_impl_lite.cc", 189);
    std::string::size_type v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, (google::protobuf::internal::LogMessage *)v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 1);
    LOBYTE(v6) = *(unsigned char *)(v5 + 23);
  }
  if ((v6 & 0x80) != 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = v6;
  }
  std::string::resize((std::string *)v5, v6 - a2, 0);
}

void sub_1B9BA6370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t replica_manager::protobuf_ShutdownFile_replica_2dmanager_2eproto(replica_manager *this)
{
  if (replica_manager::VectorTimestampElement::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)replica_manager::VectorTimestampElement::default_instance_ + 8))(replica_manager::VectorTimestampElement::default_instance_);
  }
  if (replica_manager::ReplicaEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)replica_manager::ReplicaEntry::default_instance_ + 8))(replica_manager::ReplicaEntry::default_instance_);
  }
  uint64_t result = replica_manager::ReplicaManager::default_instance_;
  if (replica_manager::ReplicaManager::default_instance_)
  {
    atomic_ullong v2 = *(uint64_t (**)(void))(*(void *)replica_manager::ReplicaManager::default_instance_ + 8);
    return v2();
  }
  return result;
}

void replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto_impl(replica_manager *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1B9BA658C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40BC69FF43);
  _Unwind_Resume(a1);
}

double replica_manager::VectorTimestampElement::VectorTimestampElement(replica_manager::VectorTimestampElement *this)
{
  *(void *)this = &unk_1F13371D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double replica_manager::ReplicaEntry::ReplicaEntry(replica_manager::ReplicaEntry *this)
{
  *(void *)this = &unk_1F13370E0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

void replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto(replica_manager *this)
{
  uint64_t v1 = replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1337CD8;
    v2[1] = replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1B9BA669C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

replica_manager::VectorTimestampElement *replica_manager::VectorTimestampElement::VectorTimestampElement(replica_manager::VectorTimestampElement *this, const replica_manager::VectorTimestampElement *a2)
{
  *(void *)this = &unk_1F13371D0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  replica_manager::VectorTimestampElement::MergeFrom(this, a2);
  return this;
}

void sub_1B9BA6710(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

std::string *replica_manager::VectorTimestampElement::MergeFrom(replica_manager::VectorTimestampElement *this, const replica_manager::VectorTimestampElement *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/replica-manager.pb.cc", 260);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v7;
    }
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  char v9 = (char *)a2 + 8;
  std::string::size_type v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    unsigned __int8 v12 = v9;
  }
  else {
    unsigned __int8 v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BA6804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void replica_manager::VectorTimestampElement::~VectorTimestampElement(void **this)
{
  *this = &unk_1F13371D0;
  replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto((replica_manager *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  replica_manager::VectorTimestampElement::~VectorTimestampElement(this);

  JUMPOUT(0x1BA9DB510);
}

void replica_manager::VectorTimestampElement::New(replica_manager::VectorTimestampElement *this)
{
}

uint64_t replica_manager::VectorTimestampElement::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t replica_manager::VectorTimestampElement::MergePartialFromCodedStream(replica_manager::VectorTimestampElement *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((void *)this + 6) = *v13;
      int v14 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 6)) {
      break;
    }
    int v14 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1B9BA6B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t replica_manager::VectorTimestampElement::SerializeWithCachedSizes(replica_manager::VectorTimestampElement *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t replica_manager::VectorTimestampElement::ByteSize(replica_manager::VectorTimestampElement *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_7:
  }
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *replica_manager::VectorTimestampElement::CheckTypeAndMergeFrom(replica_manager::VectorTimestampElement *this, const google::protobuf::MessageLite *lpsrc)
{
  return replica_manager::VectorTimestampElement::MergeFrom(this, lpsrc);
}

uint64_t replica_manager::VectorTimestampElement::IsInitialized(replica_manager::VectorTimestampElement *this)
{
  return 1;
}

void *replica_manager::VectorTimestampElement::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "replica_manager.VectorTimestampElement");
}

std::string *replica_manager::ReplicaEntry::MergeFrom(replica_manager::ReplicaEntry *this, const replica_manager::ReplicaEntry *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/replica-manager.pb.cc", 528);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((replica_manager::ReplicaEntry *)((char *)this + 48), (const replica_manager::ReplicaEntry *)((char *)a2 + 48));
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v9 = (char *)a2 + 8;
  uint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    BOOL v12 = v9;
  }
  else {
    BOOL v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BA6DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void replica_manager::ReplicaEntry::~ReplicaEntry(replica_manager::ReplicaEntry *this)
{
  *(void *)this = &unk_1F13370E0;
  replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  replica_manager::ReplicaEntry::~ReplicaEntry(this);

  JUMPOUT(0x1BA9DB510);
}

void replica_manager::ReplicaEntry::New(replica_manager::ReplicaEntry *this)
{
}

uint64_t replica_manager::ReplicaEntry::Clear(replica_manager::ReplicaEntry *this)
{
  *((void *)this + 5) = 0;
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t replica_manager::ReplicaEntry::MergePartialFromCodedStream(replica_manager::ReplicaEntry *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v31, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30, (google::protobuf::io::ZeroCopyOutputStream *)v31);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v7 == 16)
        {
          int v14 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_61;
        }
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if (v7 != 8) {
          goto LABEL_22;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_60; {
          BOOL v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v11;
          BOOL v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          int v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
LABEL_32:
          if ((unint64_t)v14 >= v10 || *v14 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11))goto LABEL_60; {
            char v15 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 11) = *v14;
            char v15 = v14 + 1;
            *((void *)a2 + 1) = v15;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v15 < v10 && *v15 == 26) {
            goto LABEL_39;
          }
        }
      }
      else
      {
LABEL_13:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
LABEL_61:
          uint64_t v28 = 1;
          goto LABEL_62;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v30, v4))goto LABEL_60; {
      }
        }
    }
    if (v7 != 26) {
      goto LABEL_22;
    }
    while (2)
    {
      int v16 = *((_DWORD *)this + 15);
      uint64_t v17 = *((int *)this + 14);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 16)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v16 + 1);
        }
        operator new();
      }
      uint64_t v18 = *((void *)this + 6);
      *((_DWORD *)this + 14) = v17 + 1;
      char v19 = *(replica_manager::VectorTimestampElement **)(v18 + 8 * v17);
      unsigned int v32 = 0;
      float v20 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32)) {
          goto LABEL_60;
        }
      }
      else
      {
        unsigned int v32 = *v20;
        *((void *)a2 + 1) = v20 + 1;
      }
      int v21 = *((_DWORD *)a2 + 14);
      int v22 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v21 + 1;
      if (v21 >= v22
        || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32),
            !replica_manager::VectorTimestampElement::MergePartialFromCodedStream(v19, a2))
        || !*((unsigned char *)a2 + 36))
      {
LABEL_60:
        uint64_t v28 = 0;
        goto LABEL_62;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
      int v24 = *((_DWORD *)a2 + 14);
      BOOL v25 = __OFSUB__(v24, 1);
      int v26 = v24 - 1;
      if (v26 < 0 == v25) {
        *((_DWORD *)a2 + 14) = v26;
      }
      char v15 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v27 = (unsigned char *)*((void *)a2 + 2);
      if (v15 < v27 && *v15 == 26)
      {
LABEL_39:
        *((void *)a2 + 1) = v15 + 1;
        continue;
      }
      break;
    }
  }
  while (v15 != v27 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v28 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_62:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v30);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v31);
  return v28;
}

void sub_1B9BA7304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t replica_manager::ReplicaEntry::SerializeWithCachedSizes(replica_manager::ReplicaEntry *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t)this + 48, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    unsigned int v9 = (char *)*((void *)this + 1);
    uint64_t v10 = *((void *)this + 2);
  }
  else
  {
    unsigned int v9 = (char *)this + 8;
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t replica_manager::ReplicaEntry::ByteSize(replica_manager::ReplicaEntry *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  int v7 = *((_DWORD *)this + 14);
  int v8 = v7 + v3;
  if (v7 >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = (replica_manager::VectorTimestampElement *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t)this + 48, v9);
      int v11 = (google::protobuf::io::CodedOutputStream *)replica_manager::VectorTimestampElement::ByteSize(v10);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      }
      else {
        int v13 = 1;
      }
      v8 += v12 + v13;
      ++v9;
    }
    while (v9 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v14 = *((void *)this + 2);
  }
  else {
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v8 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *replica_manager::ReplicaEntry::CheckTypeAndMergeFrom(replica_manager::ReplicaEntry *this, const google::protobuf::MessageLite *lpsrc)
{
  return replica_manager::ReplicaEntry::MergeFrom(this, lpsrc);
}

uint64_t replica_manager::ReplicaEntry::IsInitialized(replica_manager::ReplicaEntry *this)
{
  return 1;
}

void *replica_manager::ReplicaEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "replica_manager.ReplicaEntry");
}

replica_manager::ReplicaManager *replica_manager::ReplicaManager::ReplicaManager(replica_manager::ReplicaManager *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F1337158;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  replica_manager::ReplicaManager::SharedCtor(this);
  return this;
}

void sub_1B9BA7634(_Unwind_Exception *a1)
{
  int v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v5);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void replica_manager::ReplicaManager::SharedCtor(replica_manager::ReplicaManager *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
}

void sub_1B9BA7724(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *replica_manager::ReplicaManager::MergeFrom(replica_manager::ReplicaManager *this, const replica_manager::ReplicaManager *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/replica-manager.pb.cc", 783);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((replica_manager::ReplicaManager *)((char *)this + 40), (const replica_manager::ReplicaManager *)((char *)a2 + 40));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((replica_manager::ReplicaManager *)((char *)this + 64), (const replica_manager::ReplicaManager *)((char *)a2 + 64));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>((replica_manager::ReplicaManager *)((char *)this + 88), (const replica_manager::ReplicaManager *)((char *)a2 + 88));
  int v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BA77F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void replica_manager::ReplicaManager::~ReplicaManager(replica_manager::ReplicaManager *this)
{
  *(void *)this = &unk_1F1337158;
  replica_manager::protobuf_AddDesc_replica_2dmanager_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 11);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 16);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 10);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  replica_manager::ReplicaManager::~ReplicaManager(this);

  JUMPOUT(0x1BA9DB510);
}

void replica_manager::ReplicaManager::New(replica_manager::ReplicaManager *this)
{
}

void sub_1B9BA7910(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40BC69FF43);
  _Unwind_Resume(a1);
}

uint64_t replica_manager::ReplicaManager::Clear(replica_manager::ReplicaManager *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 64);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 88);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t replica_manager::ReplicaManager::MergePartialFromCodedStream(replica_manager::ReplicaManager *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v35, (uint64_t)this + 8);
  unint64_t TagFallback = (unint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v34, (google::protobuf::io::ZeroCopyOutputStream *)v35);
  do
  {
    while (1)
    {
LABEL_2:
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 1)
      {
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v7 = *v6;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
        *((void *)a2 + 1) = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
      }
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v8 != 18)
        {
LABEL_31:
          if (!v8 || (v8 & 7) == 4) {
            goto LABEL_67;
          }
          goto LABEL_33;
        }
        while (1)
        {
          int v16 = *((_DWORD *)this + 19);
          uint64_t v17 = *((int *)this + 18);
          if ((int)v17 >= v16)
          {
            if (v16 == *((_DWORD *)this + 20)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 64, v16 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v18 = *((void *)this + 8);
          *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v17 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v18 + 8 * v17));
          if (!TagFallback) {
            goto LABEL_66;
          }
          uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v19 = *v14;
          if (v19 != 18)
          {
            if (v19 != 26) {
              goto LABEL_2;
            }
            goto LABEL_45;
          }
LABEL_35:
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else if (v9 == 1)
      {
        if (v8 != 10) {
          goto LABEL_31;
        }
        while (1)
        {
          int v11 = *((_DWORD *)this + 13);
          uint64_t v12 = *((int *)this + 12);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 14)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v11 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v13 = *((void *)this + 5);
          *((_DWORD *)this + 12) = v12 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v13 + 8 * v12));
          if (!TagFallback) {
            goto LABEL_66;
          }
          uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v15 = *v14;
          if (v15 != 10)
          {
            if (v15 != 18) {
              goto LABEL_2;
            }
            goto LABEL_35;
          }
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else
      {
LABEL_11:
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
LABEL_67:
          uint64_t v32 = 1;
          goto LABEL_68;
        }
LABEL_33:
        unint64_t TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v34, v5);
        if ((TagFallback & 1) == 0) {
          goto LABEL_66;
        }
      }
    }
    if (v8 != 26) {
      goto LABEL_31;
    }
    while (1)
    {
      int v20 = *((_DWORD *)this + 25);
      uint64_t v21 = *((int *)this + 24);
      if ((int)v21 >= v20)
      {
        if (v20 == *((_DWORD *)this + 26)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 88, v20 + 1);
        }
        operator new();
      }
      uint64_t v22 = *((void *)this + 11);
      *((_DWORD *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v21 + 1;
      int v23 = *(replica_manager::ReplicaEntry **)(v22 + 8 * v21);
      unsigned int v36 = 0;
      int v24 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36)) {
          goto LABEL_66;
        }
      }
      else
      {
        unsigned int v36 = *v24;
        *((void *)a2 + 1) = v24 + 1;
      }
      int v25 = *((_DWORD *)a2 + 14);
      int v26 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v25 + 1;
      if (v25 >= v26
        || (int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36),
            !replica_manager::ReplicaEntry::MergePartialFromCodedStream(v23, a2))
        || !*((unsigned char *)a2 + 36))
      {
LABEL_66:
        uint64_t v32 = 0;
        goto LABEL_68;
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v27);
      int v28 = *((_DWORD *)a2 + 14);
      BOOL v29 = __OFSUB__(v28, 1);
      int v30 = v28 - 1;
      if (v30 < 0 == v29) {
        *((_DWORD *)a2 + 14) = v30;
      }
      uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
      long long v31 = (unsigned char *)*((void *)a2 + 2);
      if (v14 >= v31 || *v14 != 26) {
        break;
      }
LABEL_45:
      *((void *)a2 + 1) = v14 + 1;
    }
  }
  while (v14 != v31 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v32 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_68:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v34);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v35);
  return v32;
}

void sub_1B9BA7D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t replica_manager::ReplicaManager::SerializeWithCachedSizes(replica_manager::ReplicaManager *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteBytes(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((int *)this + 18) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 64, v6);
      google::protobuf::internal::WireFormatLite::WriteString(2, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 18));
  }
  if (*((int *)this + 24) >= 1)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>((uint64_t)this + 88, v8);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)this + 24));
  }
  if (*((char *)this + 31) < 0)
  {
    BOOL v10 = (char *)*((void *)this + 1);
    uint64_t v11 = *((void *)this + 2);
  }
  else
  {
    BOOL v10 = (char *)this + 8;
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t replica_manager::ReplicaManager::ByteSize(replica_manager::ReplicaManager *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      uint64_t v4 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v3);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      v2 += v9 + v5;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  int v10 = *((_DWORD *)this + 18);
  int v11 = v10 + v2;
  if (v10 >= 1)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 64, v12);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      char v15 = v14;
      uint64_t v16 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
      }
      else {
        unint64_t v17 = v16;
      }
      if (v17 >= 0x80)
      {
        int v18 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v17);
        int v14 = *(unsigned __int8 *)(v13 + 23);
        uint64_t v16 = *(void *)(v13 + 8);
        char v15 = *(unsigned char *)(v13 + 23);
      }
      else
      {
        int v18 = 1;
      }
      if (v15 < 0) {
        int v14 = v16;
      }
      v11 += v18 + v14;
      ++v12;
    }
    while (v12 < *((_DWORD *)this + 18));
  }
  int v19 = *((_DWORD *)this + 24);
  int v20 = v19 + v11;
  if (v19 >= 1)
  {
    int v21 = 0;
    do
    {
      uint64_t v22 = (replica_manager::ReplicaEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>((uint64_t)this + 88, v21);
      int v23 = (google::protobuf::io::CodedOutputStream *)replica_manager::ReplicaEntry::ByteSize(v22);
      int v24 = (int)v23;
      if (v23 >= 0x80) {
        int v25 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      }
      else {
        int v25 = 1;
      }
      v20 += v24 + v25;
      ++v21;
    }
    while (v21 < *((_DWORD *)this + 24));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v26 = *((void *)this + 2);
  }
  else {
    LODWORD(v26) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v20 + v26);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *replica_manager::ReplicaManager::CheckTypeAndMergeFrom(replica_manager::ReplicaManager *this, const google::protobuf::MessageLite *lpsrc)
{
  return replica_manager::ReplicaManager::MergeFrom(this, lpsrc);
}

uint64_t replica_manager::ReplicaManager::IsInitialized(replica_manager::ReplicaManager *this)
{
  return 1;
}

void *replica_manager::ReplicaManager::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "replica_manager.ReplicaManager");
}

uint64_t replica_manager::VectorTimestampElement::GetCachedSize(replica_manager::VectorTimestampElement *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t replica_manager::ReplicaEntry::GetCachedSize(replica_manager::ReplicaEntry *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t replica_manager::ReplicaManager::GetCachedSize(replica_manager::ReplicaManager *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      uint64_t v2 = *(void *)(*(void *)result + 8 * v1);
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
      ++v1;
    }
    while (v1 < *(int *)(result + 8));
  }
  *(_DWORD *)(result + _Block_object_dispose(&STACK[0x260], 8) = 0;
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x1BA9DB4F0);
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (const replica_manager::VectorTimestampElement *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)replica_manager::VectorTimestampElement::MergeFrom(*(replica_manager::VectorTimestampElement **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BA8398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(int *a1)
{
  if (a1[3] >= 1)
  {
    uint64_t v2 = 0;
    do
      google::protobuf::internal::StringTypeHandlerBase::Delete(*(void *)(*(void *)a1 + 8 * v2++));
    while (v2 < a1[3]);
  }
  uint64_t result = *(void *)a1;
  if (*(void *)a1)
  {
    JUMPOUT(0x1BA9DB4F0);
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          uint64_t v7 = (google::protobuf::internal::StringTypeHandlerBase *)google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::StringTypeHandlerBase::New(v7);
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)std::string::operator=(*(std::string **)(v10 + 8 * v9), (const std::string *)v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BA8558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (const replica_manager::ReplicaEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<replica_manager::ReplicaEntry>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)replica_manager::ReplicaEntry::MergeFrom(*(replica_manager::ReplicaEntry **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BA86DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void replica_manager::VectorTimestampElement::CheckTypeAndMergeFrom()
{
  __assert_rtn("down_cast", "common.h", 344, "f == NULL || dynamic_cast<To>(f) != NULL");
}

void replica_manager::ReplicaManager::SharedCtor()
{
  __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Reserve(uint64_t this, int a2)
{
  int v2 = *(_DWORD *)(this + 16);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(this + 16) = v3;
    operator new[]();
  }
  return this;
}

void google::protobuf::internal::StringTypeHandlerBase::New(google::protobuf::internal::StringTypeHandlerBase *this)
{
}

uint64_t google::protobuf::internal::StringTypeHandlerBase::Delete(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x1BA9DB510);
  }
  return result;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/zero_copy_stream.cc", 49);
  int v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1B9BA88EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::protobuf_ShutdownFile_versioned_2ddocument_2eproto(versioned_document *this)
{
  if (versioned_document::Document::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)versioned_document::Document::default_instance_ + 8))(versioned_document::Document::default_instance_);
  }
  uint64_t result = versioned_document::Version::default_instance_;
  if (versioned_document::Version::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)versioned_document::Version::default_instance_ + 8);
    return v2();
  }
  return result;
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl(versioned_document *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1B9BA8A64(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

double versioned_document::Document::Document(versioned_document::Document *this)
{
  *(void *)this = &unk_1F13372C0;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

void versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(versioned_document *this)
{
  uint64_t v1 = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1337CD8;
    v2[1] = versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1B9BA8B48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *versioned_document::Document::MergeFrom(versioned_document::Document *this, const versioned_document::Document *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/versioned-document.pb.cc", 244);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((versioned_document::Document *)((char *)this + 40), (const versioned_document::Document *)((char *)a2 + 40));
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 16) = v5;
  }
  int v8 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v7 = (char *)a2 + 8;
  int v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1B9BA8C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void versioned_document::Document::~Document(versioned_document::Document *this)
{
  *(void *)this = &unk_1F13372C0;
  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  versioned_document::Document::~Document(this);

  JUMPOUT(0x1BA9DB510);
}

void versioned_document::Document::New(versioned_document::Document *this)
{
}

uint64_t versioned_document::Document::Clear(versioned_document::Document *this)
{
  *((_DWORD *)this + 16) = 0;
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t versioned_document::Document::MergePartialFromCodedStream(versioned_document::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v28, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27, (google::protobuf::io::ZeroCopyOutputStream *)v28);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_27;
        }
LABEL_19:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_16;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_48:
        uint64_t v25 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v27, v4))goto LABEL_47; {
    }
      }
    if (v7 != 8) {
      goto LABEL_19;
    }
    int v9 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16)) {
        goto LABEL_47;
      }
      std::string::size_type v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
    }
    else
    {
      *((_DWORD *)this + 16) = *v9;
      std::string::size_type v11 = v9 + 1;
      *((void *)a2 + 1) = v11;
    }
    *((_DWORD *)this + 8) |= 1u;
    if ((unint64_t)v11 < v10 && *v11 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v11 + 1;
LABEL_27:
        int v13 = *((_DWORD *)this + 13);
        uint64_t v14 = *((int *)this + 12);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v13 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<versioned_document::Version>::New();
        }
        uint64_t v15 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v14 + 1;
        uint64_t v16 = *(versioned_document::Version **)(v15 + 8 * v14);
        unsigned int v29 = 0;
        unint64_t v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v29 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19
          || (int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29),
              !versioned_document::Version::MergePartialFromCodedStream(v16, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v25 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        std::string::size_type v11 = (unsigned char *)*((void *)a2 + 1);
        int v24 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v11 < v24 && *v11 == 18);
      if (v11 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v25 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v27);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v28);
  return v25;
}

void sub_1B9BA9068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Document::SerializeWithCachedSizes(versioned_document::Document *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    int v8 = (char *)*((void *)this + 1);
    uint64_t v9 = *((void *)this + 2);
  }
  else
  {
    int v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t versioned_document::Document::ByteSize(versioned_document::Document *this)
{
  if (*((unsigned char *)this + 32))
  {
    char v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v3 >= 0x80) {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (versioned_document::Version *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40, v6);
      int v8 = (google::protobuf::io::CodedOutputStream *)versioned_document::Version::ByteSize(v7);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Document::CheckTypeAndMergeFrom(versioned_document::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  return versioned_document::Document::MergeFrom(this, lpsrc);
}

uint64_t versioned_document::Document::IsInitialized(versioned_document::Document *this)
{
  return 1;
}

void *versioned_document::Document::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Document");
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this)
{
  *(void *)this = &unk_1F1337248;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this);
  return this;
}

void sub_1B9BA930C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void versioned_document::Version::SharedCtor(versioned_document::Version *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1B9BA93D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

versioned_document::Version *versioned_document::Version::Version(versioned_document::Version *this, const versioned_document::Version *a2)
{
  *(void *)this = &unk_1F1337248;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  versioned_document::Version::SharedCtor(this);
  versioned_document::Version::MergeFrom(this, a2);
  return this;
}

void sub_1B9BA9454(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

std::string *versioned_document::Version::MergeFrom(versioned_document::Version *this, const versioned_document::Version *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/versioned-document.pb.cc", 519);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    int v8 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 4u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v9 = (std::string *)*((void *)this + 6);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v9, v8);
  }
LABEL_14:
  BOOL v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1B9BA95C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void versioned_document::Version::~Version(void **this)
{
  *this = &unk_1F1337248;
  versioned_document::Version::SharedDtor((versioned_document::Version *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  versioned_document::Version::~Version(this);

  JUMPOUT(0x1BA9DB510);
}

void versioned_document::Version::SharedDtor(versioned_document::Version *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 6);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (versioned_document::Version *)MEMORY[0x1BA9DB510](v1, 0x1012C40EC159624);
  }

  versioned_document::protobuf_AddDesc_versioned_2ddocument_2eproto(this);
}

void versioned_document::Version::New(versioned_document::Version *this)
{
}

void sub_1B9BA9738(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 7) != 0)
  {
    *(void *)(this + 40) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 48);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t versioned_document::Version::MergePartialFromCodedStream(versioned_document::Version *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
        {
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v6 = *v5;
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
          *((void *)a2 + 1) = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
        }
        unsigned int v9 = v7 >> 3;
        if (v7 >> 3 == 3)
        {
          if (v7 == 26)
          {
            int v15 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
LABEL_22:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_48;
          }
          goto LABEL_24;
        }
        if (v9 == 2) {
          break;
        }
        if (v9 == 1)
        {
          if (v7 != 8) {
            goto LABEL_22;
          }
          uint64_t v11 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_49; {
            BOOL v12 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((_DWORD *)this + 10) = *v11;
            BOOL v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
          }
          *((_DWORD *)this + 8) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            uint64_t v14 = v12 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_32;
          }
        }
        else
        {
LABEL_13:
          if (v7) {
            BOOL v13 = (v7 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
LABEL_48:
            uint64_t v18 = 1;
            goto LABEL_50;
          }
LABEL_24:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_49; {
        }
          }
      }
      if (v7 != 16) {
        goto LABEL_22;
      }
      uint64_t v14 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
LABEL_32:
      if ((unint64_t)v14 >= v10 || *v14 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
          goto LABEL_49;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        *((_DWORD *)this + 11) = *v14;
        uint64_t v16 = v14 + 1;
        *((void *)a2 + 1) = v16;
      }
      int v15 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15;
    }
    while ((unint64_t)v16 >= v10 || *v16 != 26);
    *((void *)a2 + 1) = v16 + 1;
LABEL_40:
    *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15 | 4;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    char v17 = (std::string *)*((void *)this + 6);
    if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v17)) {
      break;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v18 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_50;
    }
  }
LABEL_49:
  uint64_t v18 = 0;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1B9BA9AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t versioned_document::Version::SerializeWithCachedSizes(versioned_document::Version *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 6), a2);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t versioned_document::Version::ByteSize(versioned_document::Version *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 8);
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80)
  {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = *((void *)this + 6);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11 >= 0x80)
    {
      int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v10 = *(void *)(v7 + 8);
      char v9 = *(unsigned char *)(v7 + 23);
    }
    else
    {
      int v12 = 1;
    }
    if (v9 < 0) {
      int v8 = v10;
    }
    v3 += v12 + v8 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v13 = *((void *)this + 2);
  }
  else {
    LODWORD(v13) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v13);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *versioned_document::Version::CheckTypeAndMergeFrom(versioned_document::Version *this, const google::protobuf::MessageLite *lpsrc)
{
  return versioned_document::Version::MergeFrom(this, lpsrc);
}

uint64_t versioned_document::Version::IsInitialized(versioned_document::Version *this)
{
  return 1;
}

void *versioned_document::Version::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "versioned_document.Version");
}

uint64_t versioned_document::Document::GetCachedSize(versioned_document::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t versioned_document::Version::GetCachedSize(versioned_document::Version *this)
{
  return *((unsigned int *)this + 9);
}

void sub_1B9BA9D6C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

void sub_1B9BA9E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BA9F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::protobuf_ShutdownFile_topotext_2eproto(topotext *this)
{
  if (topotext::String::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::String::default_instance_ + 8))(topotext::String::default_instance_);
  }
  if (topotext::VectorTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp::default_instance_ + 8))(topotext::VectorTimestamp::default_instance_);
  }
  if (topotext::VectorTimestamp_Clock::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp_Clock::default_instance_ + 8))(topotext::VectorTimestamp_Clock::default_instance_);
  }
  if (topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_ + 8))(topotext::VectorTimestamp_Clock_ReplicaClock::default_instance_);
  }
  if (topotext::CharID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::CharID::default_instance_ + 8))(topotext::CharID::default_instance_);
  }
  if (topotext::Substring::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Substring::default_instance_ + 8))(topotext::Substring::default_instance_);
  }
  if (topotext::Selection::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Selection::default_instance_ + 8))(topotext::Selection::default_instance_);
  }
  if (topotext::Selection_Range::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Selection_Range::default_instance_ + 8))(topotext::Selection_Range::default_instance_);
  }
  if (topotext::AttributeRun::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::AttributeRun::default_instance_ + 8))(topotext::AttributeRun::default_instance_);
  }
  if (topotext::Font::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Font::default_instance_ + 8))(topotext::Font::default_instance_);
  }
  if (topotext::ParagraphStyle::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::ParagraphStyle::default_instance_ + 8))(topotext::ParagraphStyle::default_instance_);
  }
  if (topotext::HashtagInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::HashtagInfo::default_instance_ + 8))(topotext::HashtagInfo::default_instance_);
  }
  if (topotext::AttachmentInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::AttachmentInfo::default_instance_ + 8))(topotext::AttachmentInfo::default_instance_);
  }
  if (topotext::Attachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Attachment::default_instance_ + 8))(topotext::Attachment::default_instance_);
  }
  if (topotext::Location::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Location::default_instance_ + 8))(topotext::Location::default_instance_);
  }
  if (topotext::Media::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Media::default_instance_ + 8))(topotext::Media::default_instance_);
  }
  if (topotext::PreviewImage::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::PreviewImage::default_instance_ + 8))(topotext::PreviewImage::default_instance_);
  }
  if (topotext::Todo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)topotext::Todo::default_instance_ + 8))(topotext::Todo::default_instance_);
  }
  uint64_t result = topotext::Color::default_instance_;
  if (topotext::Color::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)topotext::Color::default_instance_ + 8);
    return v2();
  }
  return result;
}

void topotext::protobuf_AddDesc_topotext_2eproto_impl(topotext *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void sub_1B9BAA858(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1BA9DB510](v2, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

double topotext::VectorTimestamp::VectorTimestamp(topotext::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1338048;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double topotext::VectorTimestamp_Clock_ReplicaClock::VectorTimestamp_Clock_ReplicaClock(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  *(void *)this = &unk_1F1338138;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double topotext::CharID::CharID(topotext::CharID *this)
{
  *(void *)this = &unk_1F1338390;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double topotext::Substring::Substring(topotext::Substring *this)
{
  *(void *)this = &unk_1F1338570;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(void *)((char *)this + 53) = 0;
  return result;
}

double topotext::Selection_Range::Selection_Range(topotext::Selection_Range *this)
{
  *(void *)this = &unk_1F1337FD0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double topotext::ParagraphStyle::ParagraphStyle(topotext::ParagraphStyle *this)
{
  *(void *)this = &unk_1F1337F58;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double topotext::Color::Color(topotext::Color *this)
{
  *(void *)this = &unk_1F13382A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void topotext::protobuf_AddDesc_topotext_2eproto(topotext *this)
{
  uint64_t v1 = topotext::protobuf_AddDesc_topotext_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1337CD8;
    v2[1] = topotext::protobuf_AddDesc_topotext_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&topotext::protobuf_AddDesc_topotext_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1B9BAAB8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

topotext::String *topotext::String::String(topotext::String *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F1338408;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  topotext::String::SharedCtor(this);
  return this;
}

void sub_1B9BAAC30(_Unwind_Exception *a1)
{
  int v6 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v2);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v5);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::String::SharedCtor(topotext::String *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((void *)this + 9) = 0;
}

void sub_1B9BAAD24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::String::MergeFrom(topotext::String *this, const topotext::String *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 402);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((topotext::String *)((char *)this + 48), (const topotext::String *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((topotext::String *)((char *)this + 80), (const topotext::String *)((char *)a2 + 80));
  char v5 = (topotext *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((topotext::String *)((char *)this + 104), (const topotext::String *)((char *)a2 + 104));
  LOBYTE(v6) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v6)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v7 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v8 = (std::string *)*((void *)this + 5);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      char v5 = (topotext *)std::string::operator=(v8, v7);
      int v6 = *((_DWORD *)a2 + 8);
    }
    if ((v6 & 4) != 0)
    {
      *((_DWORD *)this + 8) |= 4u;
      char v9 = (topotext::VectorTimestamp *)*((void *)this + 9);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = (const topotext::VectorTimestamp *)*((void *)a2 + 9);
      if (!v10)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(v5);
        uint64_t v10 = *(const topotext::VectorTimestamp **)(topotext::String::default_instance_ + 72);
      }
      topotext::VectorTimestamp::MergeFrom(v9, v10);
    }
  }
  uint64_t v13 = (const std::string::value_type *)*((void *)a2 + 1);
  int v12 = (char *)a2 + 8;
  unint64_t v11 = v13;
  int v14 = v12[23];
  if (v14 >= 0) {
    int v15 = v12;
  }
  else {
    int v15 = v11;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = v12[23];
  }
  else {
    std::string::size_type v16 = *((void *)v12 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v15, v16);
}

void sub_1B9BAAEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::String::~String(topotext::String *this)
{
  *(void *)this = &unk_1F1338408;
  topotext::String::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 13);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 10);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::String::~String(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::String::SharedDtor(topotext::String *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (topotext::String *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::String *)topotext::String::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 9);
    if (v4)
    {
      char v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t topotext::String::default_instance(topotext::String *this)
{
  return topotext::String::default_instance_;
}

void topotext::String::New(topotext::String *this)
{
}

void sub_1B9BAB0F0(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::Clear(topotext::String *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 5) != 0)
  {
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *((void *)this + 5);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 4) != 0)
    {
      uint64_t v4 = *((void *)this + 9);
      if (v4)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4 + 40);
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 80);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 104);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::VectorTimestamp::Clear(topotext::VectorTimestamp *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::String::MergePartialFromCodedStream(topotext::String *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v57, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v56, (google::protobuf::io::ZeroCopyOutputStream *)v57);
  while (1)
  {
LABEL_2:
    char v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && *v5 >= 1)
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
LABEL_6:
      switch(v7 >> 3)
      {
        case 2u:
          if (v7 != 18) {
            goto LABEL_28;
          }
          *((_DWORD *)this + 8) |= 1u;
          if (!google::protobuf::internal::empty_string_) {
            __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
          }
          char v9 = (std::string *)*((void *)this + 5);
          if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
            operator new();
          }
          if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9)) {
            goto LABEL_103;
          }
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 26) {
            continue;
          }
          break;
        case 3u:
          if (v7 != 26) {
            goto LABEL_28;
          }
          goto LABEL_33;
        case 4u:
          if (v7 == 34) {
            goto LABEL_51;
          }
          goto LABEL_28;
        case 5u:
          if (v7 == 42) {
            goto LABEL_65;
          }
          goto LABEL_28;
        case 6u:
          if (v7 == 50) {
            goto LABEL_83;
          }
LABEL_28:
          if (v7 && (v7 & 7) != 4) {
            goto LABEL_30;
          }
          goto LABEL_104;
        default:
          goto LABEL_15;
      }
      while (1)
      {
        *((void *)a2 + 1) = v10 + 1;
LABEL_33:
        int v12 = *((_DWORD *)this + 15);
        uint64_t v13 = *((int *)this + 14);
        if ((int)v13 >= v12)
        {
          if (v12 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v12 + 1);
          }
          operator new();
        }
        uint64_t v14 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v13 + 1;
        int v15 = *(topotext::Substring **)(v14 + 8 * v13);
        unsigned int v58 = 0;
        std::string::size_type v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
            break;
          }
        }
        else
        {
          unsigned int v58 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          break;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
        if (!topotext::Substring::MergePartialFromCodedStream(v15, a2) || !*((unsigned char *)a2 + 36)) {
          break;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2)) {
          goto LABEL_2;
        }
        int v23 = *v10;
        if (v23 != 26)
        {
          if (v23 != 34) {
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v10 + 1;
LABEL_51:
          *((_DWORD *)this + 8) |= 4u;
          int v24 = (topotext::VectorTimestamp *)*((void *)this + 9);
          if (!v24) {
            operator new();
          }
          unsigned int v58 = 0;
          uint64_t v25 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
              break;
            }
          }
          else
          {
            unsigned int v58 = *v25;
            *((void *)a2 + 1) = v25 + 1;
          }
          int v26 = *((_DWORD *)a2 + 14);
          int v27 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v26 + 1;
          if (v26 < v27)
          {
            int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
            if (topotext::VectorTimestamp::MergePartialFromCodedStream(v24, a2))
            {
              if (*((unsigned char *)a2 + 36))
              {
                google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
                int v29 = *((_DWORD *)a2 + 14);
                BOOL v21 = __OFSUB__(v29, 1);
                int v30 = v29 - 1;
                if (v30 < 0 == v21) {
                  *((_DWORD *)a2 + 14) = v30;
                }
                long long v31 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 42) {
                  goto LABEL_2;
                }
                while (1)
                {
                  *((void *)a2 + 1) = v31 + 1;
LABEL_65:
                  int v32 = *((_DWORD *)this + 23);
                  uint64_t v33 = *((int *)this + 22);
                  if ((int)v33 >= v32)
                  {
                    if (v32 == *((_DWORD *)this + 24)) {
                      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 80, v32 + 1);
                    }
                    google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
                  }
                  uint64_t v34 = *((void *)this + 10);
                  *((_DWORD *)this + 22) = v33 + 1;
                  id v35 = *(topotext::AttributeRun **)(v34 + 8 * v33);
                  unsigned int v58 = 0;
                  unsigned int v36 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
                  {
                    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
                      goto LABEL_103;
                    }
                  }
                  else
                  {
                    unsigned int v58 = *v36;
                    *((void *)a2 + 1) = v36 + 1;
                  }
                  int v37 = *((_DWORD *)a2 + 14);
                  int v38 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v37 + 1;
                  if (v37 >= v38) {
                    break;
                  }
                  int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
                  if (!topotext::AttributeRun::MergePartialFromCodedStream(v35, a2)
                    || !*((unsigned char *)a2 + 36))
                  {
                    break;
                  }
                  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v39);
                  int v40 = *((_DWORD *)a2 + 14);
                  BOOL v21 = __OFSUB__(v40, 1);
                  int v41 = v40 - 1;
                  if (v41 < 0 == v21) {
                    *((_DWORD *)a2 + 14) = v41;
                  }
                  long long v31 = (unsigned char *)*((void *)a2 + 1);
                  if ((unint64_t)v31 >= *((void *)a2 + 2)) {
                    goto LABEL_2;
                  }
                  int v42 = *v31;
                  if (v42 != 42)
                  {
                    if (v42 != 50) {
                      goto LABEL_2;
                    }
                    while (1)
                    {
                      *((void *)a2 + 1) = v31 + 1;
LABEL_83:
                      int v43 = *((_DWORD *)this + 29);
                      uint64_t v44 = *((int *)this + 28);
                      if ((int)v44 >= v43)
                      {
                        if (v43 == *((_DWORD *)this + 30)) {
                          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 104, v43 + 1);
                        }
                        google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
                      }
                      uint64_t v45 = *((void *)this + 13);
                      *((_DWORD *)this + 2_Block_object_dispose(&STACK[0x260], 8) = v44 + 1;
                      unint64_t v46 = *(topotext::Attachment **)(v45 + 8 * v44);
                      unsigned int v58 = 0;
                      uint64_t v47 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
                      {
                        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v58)) {
                          goto LABEL_103;
                        }
                      }
                      else
                      {
                        unsigned int v58 = *v47;
                        *((void *)a2 + 1) = v47 + 1;
                      }
                      int v48 = *((_DWORD *)a2 + 14);
                      int v49 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v48 + 1;
                      if (v48 >= v49) {
                        goto LABEL_103;
                      }
                      int v50 = google::protobuf::io::CodedInputStream::PushLimit(a2, v58);
                      if (!topotext::Attachment::MergePartialFromCodedStream(v46, a2)
                        || !*((unsigned char *)a2 + 36))
                      {
                        goto LABEL_103;
                      }
                      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v50);
                      int v51 = *((_DWORD *)a2 + 14);
                      BOOL v21 = __OFSUB__(v51, 1);
                      int v52 = v51 - 1;
                      if (v52 < 0 == v21) {
                        *((_DWORD *)a2 + 14) = v52;
                      }
                      long long v31 = (unsigned char *)*((void *)a2 + 1);
                      unsigned int v53 = (unsigned char *)*((void *)a2 + 2);
                      if (v31 >= v53 || *v31 != 50)
                      {
                        if (v31 == v53 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
                          uint64_t v54 = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          goto LABEL_105;
                        }
                        goto LABEL_2;
                      }
                    }
                  }
                }
              }
            }
          }
          break;
        }
      }
LABEL_103:
      uint64_t v54 = 0;
      goto LABEL_105;
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_6;
    }
LABEL_15:
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
LABEL_30:
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v56, v4))goto LABEL_103; {
  }
    }
LABEL_104:
  uint64_t v54 = 1;
LABEL_105:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v56);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v57);
  return v54;
}

void sub_1B9BAB940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::SerializeWithCachedSizes(topotext::String *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  if (*((unsigned char *)this + 32)) {
    this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 5), a2);
  }
  if (*((int *)v3 + 14) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)v3 + 48, v4);
      this = (topotext::String *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)v3 + 14));
  }
  if ((*((unsigned char *)v3 + 32) & 4) != 0)
  {
    uint64_t v6 = *((void *)v3 + 9);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v6 = *(void *)(topotext::String::default_instance_ + 72);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v6, a2);
  }
  if (*((int *)v3 + 22) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)v3 + 80, v7);
      google::protobuf::internal::WireFormatLite::WriteMessage(5, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v3 + 104, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(6, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 28));
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v11 = (char *)*((void *)v3 + 1);
    uint64_t v12 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v11 = (char *)v3 + 8;
    LODWORD(v12) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v11, v12);
}

uint64_t topotext::String::ByteSize(topotext::String *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_21;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 4) != 0)
  {
LABEL_15:
    unint64_t v11 = (topotext::VectorTimestamp *)*((void *)this + 9);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      unint64_t v11 = *(topotext::VectorTimestamp **)(topotext::String::default_instance_ + 72);
    }
    uint64_t v12 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
  }
LABEL_21:
  int v15 = *((_DWORD *)this + 14);
  int v16 = v15 + v3;
  if (v15 >= 1)
  {
    int v17 = 0;
    do
    {
      int v18 = (topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)this + 48, v17);
      int v19 = (google::protobuf::io::CodedOutputStream *)topotext::Substring::ByteSize(v18);
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v16 += v20 + v21;
      ++v17;
    }
    while (v17 < *((_DWORD *)this + 14));
  }
  int v22 = *((_DWORD *)this + 22);
  int v23 = v22 + v16;
  if (v22 >= 1)
  {
    int v24 = 0;
    do
    {
      uint64_t v25 = (topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)this + 80, v24);
      int v26 = (google::protobuf::io::CodedOutputStream *)topotext::AttributeRun::ByteSize(v25);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      }
      else {
        int v28 = 1;
      }
      v23 += v27 + v28;
      ++v24;
    }
    while (v24 < *((_DWORD *)this + 22));
  }
  int v29 = *((_DWORD *)this + 28);
  int v30 = v29 + v23;
  if (v29 >= 1)
  {
    int v31 = 0;
    do
    {
      int v32 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 104, v31);
      uint64_t v33 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v32);
      int v34 = (int)v33;
      if (v33 >= 0x80) {
        int v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      }
      else {
        int v35 = 1;
      }
      v30 += v34 + v35;
      ++v31;
    }
    while (v31 < *((_DWORD *)this + 28));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v36 = *((void *)this + 2);
  }
  else {
    LODWORD(v36) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v30 + v36);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::String::CheckTypeAndMergeFrom(topotext::String *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::String::MergeFrom(this, lpsrc);
}

std::string *topotext::VectorTimestamp::MergeFrom(topotext::VectorTimestamp *this, const topotext::VectorTimestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 1070);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((topotext::VectorTimestamp *)((char *)this + 40), (const topotext::VectorTimestamp *)((char *)a2 + 40));
  uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  char v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BABE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::String::IsInitialized(topotext::String *this)
{
  return 1;
}

void *topotext::String::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.String");
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const topotext::VectorTimestamp_Clock_ReplicaClock *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 646);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  std::string::size_type v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  int v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    char v12 = v9;
  }
  else {
    char v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BABF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(void **this)
{
  *this = &unk_1F1338138;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::VectorTimestamp_Clock_ReplicaClock::~VectorTimestamp_Clock_ReplicaClock(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::VectorTimestamp_Clock_ReplicaClock::New(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        std::string::size_type v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      int v14 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
      break;
    }
    int v14 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1B9BAC26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock_ReplicaClock *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock_ReplicaClock::CheckTypeAndMergeFrom(topotext::VectorTimestamp_Clock_ReplicaClock *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::IsInitialized(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return 1;
}

void *topotext::VectorTimestamp_Clock_ReplicaClock::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock.ReplicaClock");
}

topotext::VectorTimestamp_Clock *topotext::VectorTimestamp_Clock::VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this)
{
  *(void *)this = &unk_1F13380C0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  topotext::VectorTimestamp_Clock::SharedCtor(this);
  return this;
}

void sub_1B9BAC4BC(_Unwind_Exception *a1)
{
  uint64_t v4 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v4);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v3);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock::SharedCtor(topotext::VectorTimestamp_Clock *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1B9BAC594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::VectorTimestamp_Clock::MergeFrom(topotext::VectorTimestamp_Clock *this, const topotext::VectorTimestamp_Clock *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 878);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((topotext::VectorTimestamp_Clock *)((char *)this + 48), (const topotext::VectorTimestamp_Clock *)((char *)a2 + 48));
  if (*((unsigned char *)a2 + 32))
  {
    char v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  unint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    int v11 = v8;
  }
  else {
    int v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BAC6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(topotext::VectorTimestamp_Clock *this)
{
  *(void *)this = &unk_1F13380C0;
  topotext::VectorTimestamp_Clock::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::VectorTimestamp_Clock::~VectorTimestamp_Clock(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::VectorTimestamp_Clock::SharedDtor(topotext::VectorTimestamp_Clock *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 5);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (topotext::VectorTimestamp_Clock *)MEMORY[0x1BA9DB510](v1, 0x1012C40EC159624);
  }

  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::VectorTimestamp_Clock::New(topotext::VectorTimestamp_Clock *this)
{
}

void sub_1B9BAC834(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::Clear(topotext::VectorTimestamp_Clock *this)
{
  if (*((unsigned char *)this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    uint64_t v2 = *((void *)this + 5);
    if (v2 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(topotext::VectorTimestamp_Clock *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v27, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v26, (google::protobuf::io::ZeroCopyOutputStream *)v27);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_27;
        }
LABEL_23:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_20;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_16:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_48:
        uint64_t v24 = 1;
        goto LABEL_49;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v26, v4))goto LABEL_47; {
    }
      }
    if (v7 != 10) {
      goto LABEL_23;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    unint64_t v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9)) {
      goto LABEL_47;
    }
    int v10 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v10 + 1;
LABEL_27:
        int v12 = *((_DWORD *)this + 15);
        uint64_t v13 = *((int *)this + 14);
        if ((int)v13 >= v12)
        {
          if (v12 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v12 + 1);
          }
          operator new();
        }
        uint64_t v14 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v13 + 1;
        uint64_t v15 = *(topotext::VectorTimestamp_Clock_ReplicaClock **)(v14 + 8 * v13);
        unsigned int v28 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v28 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18
          || (int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v28),
              !topotext::VectorTimestamp_Clock_ReplicaClock::MergePartialFromCodedStream(v15, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v24 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        int v23 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v10 < v23 && *v10 == 18);
      if (v10 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v24 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v26);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v27);
  return v24;
}

void sub_1B9BACC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp_Clock::SerializeWithCachedSizes(topotext::VectorTimestamp_Clock *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp_Clock::ByteSize(topotext::VectorTimestamp_Clock *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  int v10 = *((_DWORD *)this + 14);
  int v11 = v10 + v2;
  if (v10 >= 1)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = (topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)this + 48, v12);
      uint64_t v14 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock_ReplicaClock::ByteSize(v13);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v16 = 1;
      }
      v11 += v15 + v16;
      ++v12;
    }
    while (v12 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v11 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp_Clock::CheckTypeAndMergeFrom(topotext::VectorTimestamp_Clock *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp_Clock::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp_Clock::IsInitialized(topotext::VectorTimestamp_Clock *this)
{
  return 1;
}

void *topotext::VectorTimestamp_Clock::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp.Clock");
}

void topotext::VectorTimestamp::~VectorTimestamp(topotext::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1338048;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::VectorTimestamp::~VectorTimestamp(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::VectorTimestamp::New(topotext::VectorTimestamp *this)
{
}

uint64_t topotext::VectorTimestamp::MergePartialFromCodedStream(topotext::VectorTimestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        int v12 = *(topotext::VectorTimestamp_Clock **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        uint64_t v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !topotext::VectorTimestamp_Clock::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)a2 + 1);
        BOOL v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BAD214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::VectorTimestamp::SerializeWithCachedSizes(topotext::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::VectorTimestamp::ByteSize(topotext::VectorTimestamp *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (topotext::VectorTimestamp_Clock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp_Clock::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::VectorTimestamp::CheckTypeAndMergeFrom(topotext::VectorTimestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t topotext::VectorTimestamp::IsInitialized(topotext::VectorTimestamp *this)
{
  return 1;
}

void *topotext::VectorTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.VectorTimestamp");
}

std::string *topotext::CharID::MergeFrom(topotext::CharID *this, const topotext::CharID *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 1300);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
    }
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  uint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    int v12 = v9;
  }
  else {
    int v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BAD4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::CharID::~CharID(void **this)
{
  *this = &unk_1F1338390;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::CharID::~CharID(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::CharID::New(topotext::CharID *this)
{
}

uint64_t topotext::CharID::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::CharID::MergePartialFromCodedStream(topotext::CharID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v15 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      *((_DWORD *)this + 11) = *v13;
      int v14 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v14;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 11)) {
      break;
    }
    int v14 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((_DWORD *)this + 8) |= 2u;
    if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v15 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1B9BAD830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::CharID::SerializeWithCachedSizes(topotext::CharID *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)this + 11), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::CharID::ByteSize(topotext::CharID *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  if (v5 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  if (*((char *)this + 31) < 0) {
    uint64_t v7 = *((void *)this + 2);
  }
  else {
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v7);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::CharID::CheckTypeAndMergeFrom(topotext::CharID *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::CharID::MergeFrom(this, lpsrc);
}

uint64_t topotext::CharID::IsInitialized(topotext::CharID *this)
{
  return 1;
}

void *topotext::CharID::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.CharID");
}

std::string *topotext::Substring::MergeFrom(topotext::Substring *this, const topotext::Substring *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 1651);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 729);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  int v6 = *((_DWORD *)a2 + 18);
  if (v6)
  {
    google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)v3 + 64, *((_DWORD *)v3 + 18) + v6);
    this = (topotext::Substring *)memcpy((void *)(*((void *)v3 + 8) + 4 * *((int *)v3 + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)v3 + 18) += *((_DWORD *)a2 + 18);
  }
  LOBYTE(v7) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v7) {
    goto LABEL_11;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    int v18 = *((_DWORD *)a2 + 14);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 14) = v18;
    int v7 = *((_DWORD *)a2 + 8);
    if ((v7 & 4) == 0)
    {
LABEL_9:
      if ((v7 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_24;
  }
  *((_DWORD *)v3 + 8) |= 1u;
  int v16 = (topotext::CharID *)*((void *)v3 + 5);
  if (!v16) {
    operator new();
  }
  int v17 = (const topotext::CharID *)*((void *)a2 + 5);
  if (!v17)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    int v17 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 40);
  }
  this = (topotext::Substring *)topotext::CharID::MergeFrom(v16, v17);
  int v7 = *((_DWORD *)a2 + 8);
  if ((v7 & 2) != 0) {
    goto LABEL_23;
  }
LABEL_8:
  if ((v7 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_24:
  *((_DWORD *)v3 + 8) |= 4u;
  int v19 = (topotext::CharID *)*((void *)v3 + 6);
  if (!v19) {
    operator new();
  }
  int v20 = (const topotext::CharID *)*((void *)a2 + 6);
  if (!v20)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    int v20 = *(const topotext::CharID **)(topotext::Substring::default_instance_ + 48);
  }
  topotext::CharID::MergeFrom(v19, v20);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_10:
    char v8 = *((unsigned char *)a2 + 60);
    *((_DWORD *)v3 + 8) |= 8u;
    *((unsigned char *)v3 + 60) = v8;
  }
LABEL_11:
  int v11 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v10 = (char *)a2 + 8;
  unint64_t v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    std::string::size_type v13 = v10;
  }
  else {
    std::string::size_type v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v13, v14);
}

void sub_1B9BADC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Substring::~Substring(void **this)
{
  *this = &unk_1F1338570;
  topotext::Substring::SharedDtor((topotext::Substring *)this);
  char v2 = this[8];
  if (v2) {
    MEMORY[0x1BA9DB4F0](v2, 0x1000C8052888210);
  }
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Substring::~Substring(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Substring::SharedDtor(topotext::Substring *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Substring *)topotext::Substring::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t topotext::Substring::default_instance(topotext::Substring *this)
{
  return topotext::Substring::default_instance_;
}

void topotext::Substring::New(topotext::Substring *this)
{
}

uint64_t topotext::Substring::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    *(unsigned char *)(this + 60) = 0;
    *(_DWORD *)(this + 56) = 0;
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 40);
      if (v2)
      {
        *(void *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(unsigned char **)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 48);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Substring::MergePartialFromCodedStream(topotext::Substring *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v50, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49, (google::protobuf::io::ZeroCopyOutputStream *)v50);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
      {
LABEL_13:
        if (v7) {
          BOOL v11 = (v7 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          goto LABEL_97;
        }
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 8) |= 1u;
        unint64_t v9 = (topotext::CharID *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53)) {
            goto LABEL_96;
          }
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          goto LABEL_96;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v20);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        uint64_t v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v12 || *v24 != 16) {
          continue;
        }
        std::string::size_type v13 = v24 + 1;
        *((void *)a2 + 1) = v13;
LABEL_43:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 14))goto LABEL_96; {
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 14) = *v13;
          uint64_t v25 = v13 + 1;
          *((void *)a2 + 1) = v25;
        }
        int v14 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v14;
        if ((unint64_t)v25 >= v12 || *v25 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_51:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v14 | 4;
        int v26 = (topotext::CharID *)*((void *)this + 6);
        if (!v26) {
          operator new();
        }
        LODWORD(v53[0].__r_.__value_.__l.__data_) = 0;
        unsigned int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53)) {
            goto LABEL_96;
          }
        }
        else
        {
          LODWORD(v53[0].__r_.__value_.__l.__data_) = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          goto LABEL_96;
        }
        int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, (int)v53[0].__r_.__value_.__l.__data_);
        if (!topotext::CharID::MergePartialFromCodedStream(v26, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_96;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v30);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v32;
        }
        uint64_t v33 = (char *)*((void *)a2 + 1);
        uint64_t v15 = (char *)*((void *)a2 + 2);
        if (v33 >= v15 || *v33 != 32) {
          continue;
        }
        int v16 = v33 + 1;
        *((void *)a2 + 1) = v16;
LABEL_65:
        v53[0].__r_.__value_.__r.__words[0] = 0;
        if (v16 >= v15 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v53)) {
            goto LABEL_96;
          }
          std::string::size_type v34 = v53[0].__r_.__value_.__r.__words[0];
          int v35 = (char *)*((void *)a2 + 1);
          uint64_t v15 = (char *)*((void *)a2 + 2);
        }
        else
        {
          std::string::size_type v34 = *v16;
          int v35 = v16 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((unsigned char *)this + 60) = v34 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v35 < v15 && *v35 == 40) {
          goto LABEL_72;
        }
        continue;
      case 2u:
        if (v7 != 16) {
          goto LABEL_27;
        }
        std::string::size_type v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_43;
      case 3u:
        if (v7 != 26) {
          goto LABEL_27;
        }
        int v14 = *((_DWORD *)this + 8);
        goto LABEL_51;
      case 4u:
        if (v7 != 32) {
          goto LABEL_27;
        }
        int v16 = (char *)*((void *)a2 + 1);
        uint64_t v15 = (char *)*((void *)a2 + 2);
        goto LABEL_65;
      case 5u:
        if (v7 != 40)
        {
          if (v7 == 42)
          {
            if (!google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(a2, (uint64_t)this + 64))goto LABEL_96; {
            goto LABEL_90;
            }
          }
LABEL_27:
          if (!v7 || (v7 & 7) == 4)
          {
LABEL_97:
            uint64_t v47 = 1;
            goto LABEL_98;
          }
LABEL_29:
          if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v49, v4))goto LABEL_96; {
          continue;
          }
        }
        int v17 = (char *)*((void *)a2 + 1);
        uint64_t v15 = (char *)*((void *)a2 + 2);
        while (1)
        {
          unsigned int v51 = 0;
          if (v17 >= v15 || *v17 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))
            {
LABEL_96:
              uint64_t v47 = 0;
              goto LABEL_98;
            }
          }
          else
          {
            unsigned int v51 = *v17;
            *((void *)a2 + 1) = v17 + 1;
          }
          int v36 = *((_DWORD *)this + 18);
          if (v36 == *((_DWORD *)this + 19))
          {
            google::protobuf::RepeatedField<unsigned int>::Reserve((uint64_t)this + 64, v36 + 1);
            int v36 = *((_DWORD *)this + 18);
          }
          unsigned int v37 = v51;
          uint64_t v38 = *((void *)this + 8);
          *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v36 + 1;
          *(_DWORD *)(v38 + 4 * v36) = v37;
          int v39 = *((_DWORD *)this + 19) - *((_DWORD *)this + 18);
          if (v39 >= 1)
          {
            int v40 = v39 + 1;
            do
            {
              int v41 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v42 = *((void *)a2 + 2);
              if ((unint64_t)v41 >= v42 || *v41 != 40) {
                break;
              }
              *((void *)a2 + 1) = v41 + 1;
              if ((unint64_t)(v41 + 1) >= v42 || (char)v41[1] < 0)
              {
                if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51)) {
                  goto LABEL_96;
                }
              }
              else
              {
                unsigned int v51 = v41[1];
                *((void *)a2 + 1) = v41 + 2;
              }
              int v43 = *((_DWORD *)this + 18);
              if (v43 >= *((_DWORD *)this + 19))
              {
                google::protobuf::internal::LogMessage::LogMessage((uint64_t)v53, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 642);
                uint64_t v44 = google::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: (size()) < (Capacity()): ");
                google::protobuf::internal::LogFinisher::operator=((uint64_t)&v52, (google::protobuf::internal::LogMessage *)v44);
                google::protobuf::internal::LogMessage::~LogMessage((void **)&v53[0].__r_.__value_.__l.__data_);
                int v43 = *((_DWORD *)this + 18);
              }
              unsigned int v45 = v51;
              uint64_t v46 = *((void *)this + 8);
              *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v43 + 1;
              *(_DWORD *)(v46 + 4 * v43) = v45;
              --v40;
            }
            while (v40 > 1);
          }
LABEL_90:
          int v35 = (char *)*((void *)a2 + 1);
          uint64_t v15 = (char *)*((void *)a2 + 2);
          if (v35 >= v15 || *v35 != 40) {
            break;
          }
LABEL_72:
          int v17 = v35 + 1;
          *((void *)a2 + 1) = v17;
        }
        if (v35 != v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v47 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_98:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v49);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v50);
        return v47;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1B9BAE568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<unsigned int,(google::protobuf::internal::WireFormatLite::FieldType)13>(google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v13 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v12 = 0;
      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      unsigned int v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + _Block_object_dispose(&STACK[0x260], 8) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  google::protobuf::io::CodedInputStream::PopLimit((uint64_t)this, v7);
  return 1;
}

uint64_t topotext::Substring::SerializeWithCachedSizes(topotext::Substring *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    uint64_t v12 = *((void *)this + 5);
    if (!v12)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v12 = *(void *)(topotext::Substring::default_instance_ + 40);
    }
    this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v12, a2);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Substring *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 14), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v13 = *((void *)v5 + 6);
  if (!v13)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v13 = *(void *)(topotext::Substring::default_instance_ + 48);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(3, v13, a2);
  if ((*((_DWORD *)v5 + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)v5 + 60), a2, a4);
LABEL_6:
  if (*((int *)v5 + 18) >= 1)
  {
    int v7 = 0;
    do
    {
      char v8 = (unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)v5 + 64, v7);
      google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *v8, a2, v9);
      ++v7;
    }
    while (v7 < *((_DWORD *)v5 + 18));
  }
  if (*((char *)v5 + 31) < 0)
  {
    unsigned int v10 = (char *)*((void *)v5 + 1);
    uint64_t v11 = *((void *)v5 + 2);
  }
  else
  {
    unsigned int v10 = (char *)v5 + 8;
    LODWORD(v11) = *((unsigned __int8 *)v5 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Substring::ByteSize(topotext::Substring *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_26;
  }
  if (*((unsigned char *)this + 32))
  {
    unsigned int v5 = (topotext::CharID *)*((void *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      unsigned int v5 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 40);
    }
    int v6 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v5);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    }
    else {
      int v8 = 1;
    }
    int v3 = v7 + v8 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_12:
    int v9 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v9 >= 0x80)
    {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v10 = 2;
    }
    v3 += v10;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = (topotext::CharID *)*((void *)this + 6);
    if (!v11)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      uint64_t v11 = *(topotext::CharID **)(topotext::Substring::default_instance_ + 48);
    }
    uint64_t v12 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  if ((v2 & 8) != 0) {
    int v4 = v3 + 2;
  }
  else {
    int v4 = v3;
  }
LABEL_26:
  int v15 = *((_DWORD *)this + 18);
  if (v15 < 1)
  {
    int v17 = 0;
  }
  else
  {
    int v16 = 0;
    int v17 = 0;
    do
    {
      int v18 = (google::protobuf::io::CodedOutputStream *)*(unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get((uint64_t)this + 64, v16);
      if (v18 >= 0x80) {
        int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      }
      else {
        int v19 = 1;
      }
      v17 += v19;
      ++v16;
      int v15 = *((_DWORD *)this + 18);
    }
    while (v16 < v15);
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v17 + v4 + v15 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Substring::CheckTypeAndMergeFrom(topotext::Substring *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Substring::MergeFrom(this, lpsrc);
}

uint64_t topotext::Substring::IsInitialized(topotext::Substring *this)
{
  return 1;
}

void *topotext::Substring::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Substring");
}

BOOL topotext::Selection_Affinity_IsValid(topotext *this)
{
  return this < 2;
}

std::string *topotext::Selection_Range::MergeFrom(topotext::Selection_Range *this, const topotext::Selection_Range *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 1921);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (topotext::CharID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const topotext::CharID *)*((void *)a2 + 5);
      if (!v7)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v7 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
      }
      this = (topotext::Selection_Range *)topotext::CharID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      int v8 = (topotext::CharID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const topotext::CharID *)*((void *)a2 + 6);
      if (!v9)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v9 = *(const topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
      }
      topotext::CharID::MergeFrom(v8, v9);
    }
  }
  uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1B9BAEBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection_Range::~Selection_Range(void **this)
{
  *this = &unk_1F1337FD0;
  topotext::Selection_Range::SharedDtor((topotext::Selection_Range *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Selection_Range::~Selection_Range(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Selection_Range::SharedDtor(topotext::Selection_Range *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Selection_Range *)topotext::Selection_Range::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t topotext::Selection_Range::default_instance(topotext::Selection_Range *this)
{
  return topotext::Selection_Range::default_instance_;
}

void topotext::Selection_Range::New(topotext::Selection_Range *this)
{
}

uint64_t topotext::Selection_Range::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 40);
      if (v2)
      {
        *(void *)(v2 + 40) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        if (*(char *)(v2 + 31) < 0)
        {
          **(unsigned char **)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v2 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 48);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Selection_Range::MergePartialFromCodedStream(topotext::Selection_Range *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (topotext::CharID *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!topotext::CharID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      int v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (topotext::CharID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !topotext::CharID::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BAF1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection_Range::SerializeWithCachedSizes(topotext::Selection_Range *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v5 = *(void *)(topotext::Selection_Range::default_instance_ + 40);
    }
    this = (topotext::Selection_Range *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v6 = *(void *)(topotext::Selection_Range::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Selection_Range::ByteSize(topotext::Selection_Range *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (topotext::CharID *)*((void *)this + 5);
  if (!v3)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    uint64_t v3 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (topotext::CharID *)*((void *)this + 6);
    if (!v7)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      unint64_t v7 = *(topotext::CharID **)(topotext::Selection_Range::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)topotext::CharID::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection_Range::CheckTypeAndMergeFrom(topotext::Selection_Range *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Selection_Range::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection_Range::IsInitialized(topotext::Selection_Range *this)
{
  return 1;
}

void *topotext::Selection_Range::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection.Range");
}

topotext::Selection *topotext::Selection::Selection(topotext::Selection *this)
{
  *(void *)this = &unk_1F13384F8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  topotext::Selection::SharedCtor(this);
  return this;
}

void sub_1B9BAF498(_Unwind_Exception *a1)
{
  int v5 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v4);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::Selection::SharedCtor(topotext::Selection *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 4) = 0;
}

void sub_1B9BAF580(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Selection::MergeFrom(topotext::Selection *this, const topotext::Selection *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 2183);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((topotext::Selection *)((char *)this + 40), (const topotext::Selection *)((char *)a2 + 40));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((topotext::Selection *)((char *)this + 64), (const topotext::Selection *)((char *)a2 + 64));
  if ((*((unsigned char *)a2 + 32) & 4) != 0)
  {
    unsigned int v5 = *((_DWORD *)a2 + 22);
    if (v5 >= 2) {
      topotext::Selection::MergeFrom();
    }
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 22) = v5;
  }
  uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v7 = (char *)a2 + 8;
  int v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1B9BAF668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection::~Selection(topotext::Selection *this)
{
  *(void *)this = &unk_1F13384F8;
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 10);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Selection::~Selection(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Selection::New(topotext::Selection *this)
{
}

void sub_1B9BAF77C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C40848840D4);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::Clear(topotext::Selection *this)
{
  *((_DWORD *)this + 22) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 64);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::Selection::MergePartialFromCodedStream(topotext::Selection *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v34, (uint64_t)this + 8);
  uint64_t TagFallback = (uint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v33, (google::protobuf::io::ZeroCopyOutputStream *)v34);
  do
  {
    while (1)
    {
LABEL_2:
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 1)
      {
        uint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v7 = *v6;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
        *((void *)a2 + 1) = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
      }
      unsigned int v9 = v8 >> 3;
      if (v8 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v8 != 18)
        {
LABEL_31:
          if (!v8 || (v8 & 7) == 4) {
            goto LABEL_67;
          }
          goto LABEL_33;
        }
        while (1)
        {
          int v18 = *((_DWORD *)this + 19);
          uint64_t v19 = *((int *)this + 18);
          if ((int)v19 >= v18)
          {
            if (v18 == *((_DWORD *)this + 20)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 64, v18 + 1);
            }
            operator new();
          }
          uint64_t v20 = *((void *)this + 8);
          *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v19 + 1;
          int v21 = *(topotext::Selection_Range **)(v20 + 8 * v19);
          unsigned int v35 = 0;
          int v22 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35)) {
              goto LABEL_66;
            }
          }
          else
          {
            unsigned int v35 = *v22;
            *((void *)a2 + 1) = v22 + 1;
          }
          int v23 = *((_DWORD *)a2 + 14);
          int v24 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v23 + 1;
          if (v23 >= v24
            || (int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35),
                !topotext::Selection_Range::MergePartialFromCodedStream(v21, a2))
            || !*((unsigned char *)a2 + 36))
          {
LABEL_66:
            uint64_t v31 = 0;
            goto LABEL_68;
          }
          uint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v25);
          int v26 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v26, 1);
          int v28 = v26 - 1;
          if (v28 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v28;
          }
          int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
          if ((unint64_t)v14 >= v17) {
            break;
          }
          int v29 = *v14;
          if (v29 != 18)
          {
            if (v29 != 24) {
              goto LABEL_2;
            }
            BOOL v16 = (char *)(v14 + 1);
            *((void *)a2 + 1) = v16;
            goto LABEL_54;
          }
LABEL_35:
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else if (v9 == 1)
      {
        if (v8 != 10) {
          goto LABEL_31;
        }
        while (1)
        {
          int v11 = *((_DWORD *)this + 13);
          uint64_t v12 = *((int *)this + 12);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 14)) {
              uint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v11 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v13 = *((void *)this + 5);
          *((_DWORD *)this + 12) = v12 + 1;
          uint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v13 + 8 * v12));
          if (!TagFallback) {
            goto LABEL_66;
          }
          int v14 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v14 >= *((void *)a2 + 2)) {
            break;
          }
          int v15 = *v14;
          if (v15 != 10)
          {
            if (v15 != 18) {
              goto LABEL_2;
            }
            goto LABEL_35;
          }
          *((void *)a2 + 1) = v14 + 1;
        }
      }
      else
      {
LABEL_11:
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
LABEL_67:
          uint64_t v31 = 1;
          goto LABEL_68;
        }
LABEL_33:
        uint64_t TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v33, v5);
        if ((TagFallback & 1) == 0) {
          goto LABEL_66;
        }
      }
    }
    if (v8 != 24) {
      goto LABEL_31;
    }
    BOOL v16 = (char *)*((void *)a2 + 1);
    unint64_t v17 = *((void *)a2 + 2);
LABEL_54:
    unsigned int v35 = 0;
    if ((unint64_t)v16 >= v17 || *v16 < 0)
    {
      uint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
      if ((TagFallback & 1) == 0) {
        goto LABEL_66;
      }
      unsigned int v30 = v35;
    }
    else
    {
      unsigned int v30 = *v16;
      *((void *)a2 + 1) = v16 + 1;
    }
    if (v30 > 1)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v33, v8);
      uint64_t TagFallback = google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v33, v30);
    }
    else
    {
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 22) = v30;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v31 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_68:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v33);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v34);
  return v31;
}

void sub_1B9BAFBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Selection::SerializeWithCachedSizes(topotext::Selection *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteBytes(1, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((int *)this + 18) >= 1)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v8);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v9, a2);
      ++v8;
    }
    while (v8 < *((_DWORD *)this + 18));
  }
  if ((*((unsigned char *)this + 32) & 4) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 22), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    BOOL v10 = (char *)*((void *)this + 1);
    uint64_t v11 = *((void *)this + 2);
  }
  else
  {
    BOOL v10 = (char *)this + 8;
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v10, v11);
}

uint64_t topotext::Selection::ByteSize(topotext::Selection *this)
{
  if ((*((unsigned char *)this + 32) & 4) != 0)
  {
    uint64_t v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v3 & 0x80000000) != 0)
    {
      int v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40, v6);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      char v9 = v8;
      uint64_t v10 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11 >= 0x80)
      {
        int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v11);
        int v8 = *(unsigned __int8 *)(v7 + 23);
        uint64_t v10 = *(void *)(v7 + 8);
        char v9 = *(unsigned char *)(v7 + 23);
      }
      else
      {
        int v12 = 1;
      }
      if (v9 < 0) {
        int v8 = v10;
      }
      v5 += v12 + v8;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  int v13 = *((_DWORD *)this + 18);
  int v14 = v13 + v5;
  if (v13 >= 1)
  {
    int v15 = 0;
    do
    {
      BOOL v16 = (topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)this + 64, v15);
      unint64_t v17 = (google::protobuf::io::CodedOutputStream *)topotext::Selection_Range::ByteSize(v16);
      int v18 = (int)v17;
      if (v17 >= 0x80) {
        int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v19 = 1;
      }
      v14 += v18 + v19;
      ++v15;
    }
    while (v15 < *((_DWORD *)this + 18));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v14 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Selection::CheckTypeAndMergeFrom(topotext::Selection *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Selection::MergeFrom(this, lpsrc);
}

uint64_t topotext::Selection::IsInitialized(topotext::Selection *this)
{
  return 1;
}

void *topotext::Selection::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Selection");
}

BOOL topotext::AttributeRun_WritingDirection_IsValid(topotext *this)
{
  return this < 5;
}

topotext::AttributeRun *topotext::AttributeRun::AttributeRun(topotext::AttributeRun *this)
{
  *(void *)this = &unk_1F1337DF0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::AttributeRun::SharedCtor(this);
  return this;
}

void sub_1B9BAFF74(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

double topotext::AttributeRun::SharedCtor(topotext::AttributeRun *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v5[0] = &unk_1F1337CD8;
    v5[1] = google::protobuf::internal::InitEmptyString;
    char v6 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *((_DWORD *)this + 17) = 0;
  *((void *)this + 9) = v3;
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *((_DWORD *)this + 29) = 0;
  return result;
}

void sub_1B9BB0060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::AttributeRun::MergeFrom(topotext::AttributeRun *this, const topotext::AttributeRun *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 2832);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v32, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)a2 + 8);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_DWORD *)v3 + 12) = v6;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 8) |= 2u;
    uint64_t v7 = (topotext::ParagraphStyle *)*((void *)v3 + 5);
    if (!v7) {
      operator new();
    }
    int v8 = (const topotext::ParagraphStyle *)*((void *)a2 + 5);
    if (!v8)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      int v8 = *(const topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
    }
    this = (topotext::AttributeRun *)topotext::ParagraphStyle::MergeFrom(v7, v8);
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
LABEL_19:
    *((_DWORD *)v3 + 8) |= 4u;
    char v9 = (topotext::Font *)*((void *)v3 + 7);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = (const topotext::Font *)*((void *)a2 + 7);
    if (!v10)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v10 = *(const topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
    }
    this = (topotext::AttributeRun *)topotext::Font::MergeFrom(v9, v10);
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
LABEL_24:
    int v11 = *((_DWORD *)a2 + 13);
    *((_DWORD *)v3 + 8) |= 8u;
    *((_DWORD *)v3 + 13) = v11;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
LABEL_25:
    int v12 = *((_DWORD *)a2 + 16);
    *((_DWORD *)v3 + 8) |= 0x10u;
    *((_DWORD *)v3 + 16) = v12;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
LABEL_26:
    int v13 = *((_DWORD *)a2 + 17);
    *((_DWORD *)v3 + 8) |= 0x20u;
    *((_DWORD *)v3 + 17) = v13;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
LABEL_27:
    int v14 = *((_DWORD *)a2 + 20);
    *((_DWORD *)v3 + 8) |= 0x40u;
    *((_DWORD *)v3 + 20) = v14;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x80) == 0) {
      goto LABEL_32;
    }
LABEL_28:
    int v15 = (const std::string *)*((void *)a2 + 9);
    *((_DWORD *)v3 + 8) |= 0x80u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    BOOL v16 = (std::string *)*((void *)v3 + 9);
    if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    this = (topotext::AttributeRun *)std::string::operator=(v16, v15);
    int v5 = *((_DWORD *)a2 + 8);
  }
LABEL_32:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x100u;
      unint64_t v17 = (topotext::Color *)*((void *)v3 + 11);
      if (!v17) {
        operator new();
      }
      int v18 = (const topotext::Color *)*((void *)a2 + 11);
      if (!v18)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v18 = *(const topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
      }
      this = (topotext::AttributeRun *)topotext::Color::MergeFrom(v17, v18);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x200) != 0)
    {
      unsigned int v19 = *((_DWORD *)a2 + 21);
      if (v19 >= 5) {
        topotext::AttributeRun::MergeFrom();
      }
      *((_DWORD *)v3 + 8) |= 0x200u;
      *((_DWORD *)v3 + 21) = v19;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x400) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x400u;
      uint64_t v20 = (topotext::AttachmentInfo *)*((void *)v3 + 12);
      if (!v20) {
        operator new();
      }
      int v21 = (const topotext::AttachmentInfo *)*((void *)a2 + 12);
      if (!v21)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v21 = *(const topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 96);
      }
      this = (topotext::AttributeRun *)topotext::AttachmentInfo::MergeFrom(v20, v21);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x800) != 0)
    {
      uint64_t v22 = *((void *)a2 + 13);
      *((_DWORD *)v3 + 8) |= 0x800u;
      *((void *)v3 + 13) = v22;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x1000) != 0)
    {
      *((_DWORD *)v3 + 8) |= 0x1000u;
      int v23 = (topotext::HashtagInfo *)*((void *)v3 + 14);
      if (!v23) {
        operator new();
      }
      int v24 = (const topotext::HashtagInfo *)*((void *)a2 + 14);
      if (!v24)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        int v24 = *(const topotext::HashtagInfo **)(topotext::AttributeRun::default_instance_ + 112);
      }
      topotext::HashtagInfo::MergeFrom(v23, v24);
    }
  }
  BOOL v27 = (const std::string::value_type *)*((void *)a2 + 1);
  int v26 = (char *)a2 + 8;
  int v25 = v27;
  int v28 = v26[23];
  if (v28 >= 0) {
    int v29 = v26;
  }
  else {
    int v29 = v25;
  }
  if (v28 >= 0) {
    std::string::size_type v30 = v26[23];
  }
  else {
    std::string::size_type v30 = *((void *)v26 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v29, v30);
}

void sub_1B9BB04A8(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

void topotext::AttributeRun::~AttributeRun(void **this)
{
  *this = &unk_1F1337DF0;
  topotext::AttributeRun::SharedDtor((topotext::AttributeRun *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::AttributeRun::~AttributeRun(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::AttributeRun::SharedDtor(topotext::AttributeRun *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 9);
  if (v2) {
    BOOL v3 = v2 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (topotext::AttributeRun *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::AttributeRun *)topotext::AttributeRun::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 5);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)v1 + 7);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)v1 + 11);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)v1 + 12);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)v1 + 14);
    if (v8)
    {
      char v9 = *(void (**)(void))(*(void *)v8 + 8);
      v9();
    }
  }
}

uint64_t topotext::AttributeRun::default_instance(topotext::AttributeRun *this)
{
  return topotext::AttributeRun::default_instance_;
}

void topotext::AttributeRun::New(topotext::AttributeRun *this)
{
}

void sub_1B9BB0780(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40BCC55259);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 64) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = topotext::ParagraphStyle::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = topotext::Font::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    *(_DWORD *)(v1 + 80) = 0;
    if ((v2 & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *(void *)(v1 + 72);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  int v4 = *(_DWORD *)(v1 + 32);
  if ((v4 & 0x1F00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 88);
      if (v5)
      {
        *(void *)(v5 + 40) = 0;
        *(void *)(v5 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(unsigned char **)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v5 + 31) = 0;
        }
      }
    }
    *(_DWORD *)(v1 + 84) = 0;
    int v6 = *(_DWORD *)(v1 + 32);
    if ((v6 & 0x400) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = topotext::AttachmentInfo::Clear(this);
        int v6 = *(_DWORD *)(v1 + 32);
      }
    }
    *(void *)(v1 + 104) = 0;
    if ((v6 & 0x1000) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this) {
        this = topotext::HashtagInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0x7F) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 64) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 56);
      if (this) {
        this = topotext::Todo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t topotext::Font::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 7) != 0)
  {
    *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Color::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttachmentInfo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::HashtagInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    uint64_t v1 = *(void *)(this + 40);
    if (v1 != google::protobuf::internal::empty_string_)
    {
      if (*(char *)(v1 + 23) < 0)
      {
        **(unsigned char **)uint64_t v1 = 0;
        *(void *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v1 = 0;
        *(unsigned char *)(v1 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::AttributeRun::MergePartialFromCodedStream(topotext::AttributeRun *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v78, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v77, (google::protobuf::io::ZeroCopyOutputStream *)v78);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_12;
      }
LABEL_6:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
LABEL_179:
        uint64_t v75 = 1;
        goto LABEL_180;
      }
LABEL_42:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v77, v4))goto LABEL_178; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_12:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_40;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 12))goto LABEL_178; {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 12) = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        int v20 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v20;
        if ((unint64_t)v12 >= v10 || *v12 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_49:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v20 | 2;
        int v25 = (topotext::ParagraphStyle *)*((void *)this + 5);
        if (!v25) {
          operator new();
        }
        unsigned int v79 = 0;
        int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
        }
        else
        {
          unsigned int v79 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          goto LABEL_178;
        }
        int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, v79);
        if (!topotext::ParagraphStyle::MergePartialFromCodedStream(v25, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_178;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v29);
        int v30 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v30, 1);
        int v32 = v30 - 1;
        if (v32 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v32;
        }
        uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_63:
        *((_DWORD *)this + 8) |= 4u;
        std::string::size_type v34 = (topotext::Font *)*((void *)this + 7);
        if (!v34) {
          operator new();
        }
        unsigned int v79 = 0;
        unsigned int v35 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
        }
        else
        {
          unsigned int v79 = *v35;
          *((void *)a2 + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)a2 + 14);
        int v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37) {
          goto LABEL_178;
        }
        int v38 = google::protobuf::io::CodedInputStream::PushLimit(a2, v79);
        if (!topotext::Font::MergePartialFromCodedStream(v34, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_178;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v38);
        int v39 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v41 >= v13 || *v41 != 40) {
          continue;
        }
        unsigned int v19 = v41 + 1;
        *((void *)a2 + 1) = v19;
LABEL_77:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))goto LABEL_178; {
          unint64_t v42 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v19;
          unint64_t v42 = v19 + 1;
          *((void *)a2 + 1) = v42;
        }
        *((_DWORD *)this + 8) |= 8u;
        if ((unint64_t)v42 >= v13 || *v42 != 48) {
          continue;
        }
        int v14 = v42 + 1;
        *((void *)a2 + 1) = v14;
LABEL_85:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_178; {
          int v43 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v14;
          int v43 = v14 + 1;
          *((void *)a2 + 1) = v43;
        }
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v43 >= v13 || *v43 != 56) {
          continue;
        }
        BOOL v16 = v43 + 1;
        *((void *)a2 + 1) = v16;
LABEL_93:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))goto LABEL_178; {
          uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v16;
          uint64_t v44 = v16 + 1;
          *((void *)a2 + 1) = v44;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v44 >= v13 || *v44 != 64) {
          continue;
        }
        int v21 = v44 + 1;
        *((void *)a2 + 1) = v21;
LABEL_101:
        unsigned int v79 = 0;
        if ((unint64_t)v21 >= v13 || *v21 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
          unsigned int v45 = v79;
          uint64_t v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v21;
          uint64_t v46 = v21 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((_DWORD *)this + 20) = v45;
        int v22 = *((_DWORD *)this + 8) | 0x40;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v22;
        if ((unint64_t)v46 >= v13 || *v46 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
LABEL_109:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v22 | 0x80;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        uint64_t v47 = (std::string *)*((void *)this + 9);
        if (v47 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v47)) {
          goto LABEL_178;
        }
        int v48 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v48 + 1;
LABEL_116:
        *((_DWORD *)this + 8) |= 0x100u;
        int v49 = (topotext::Color *)*((void *)this + 11);
        if (!v49) {
          operator new();
        }
        unsigned int v79 = 0;
        int v50 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
        }
        else
        {
          unsigned int v79 = *v50;
          *((void *)a2 + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)a2 + 14);
        int v52 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v51 + 1;
        if (v51 >= v52) {
          goto LABEL_178;
        }
        int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v79);
        if (!topotext::Color::MergePartialFromCodedStream(v49, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_178;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v53);
        int v54 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v55;
        }
        uint64_t v56 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v56 >= v23 || *v56 != 88) {
          continue;
        }
        int v24 = v56 + 1;
        *((void *)a2 + 1) = v24;
LABEL_130:
        unsigned int v79 = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79) & 1) == 0) {
            goto LABEL_178;
          }
          unsigned int v57 = v79;
        }
        else
        {
          unsigned int v57 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        if (v57 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v77, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v77, v57);
        }
        else
        {
          *((_DWORD *)this + 8) |= 0x200u;
          *((_DWORD *)this + 21) = v57;
        }
        unsigned int v58 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v58 >= *((void *)a2 + 2) || *v58 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v58 + 1;
LABEL_141:
        *((_DWORD *)this + 8) |= 0x400u;
        id v59 = (topotext::AttachmentInfo *)*((void *)this + 12);
        if (!v59) {
          operator new();
        }
        unsigned int v79 = 0;
        unsigned int v60 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v60 >= *((void *)a2 + 2) || *v60 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
        }
        else
        {
          unsigned int v79 = *v60;
          *((void *)a2 + 1) = v60 + 1;
        }
        int v61 = *((_DWORD *)a2 + 14);
        int v62 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v61 + 1;
        if (v61 >= v62) {
          goto LABEL_178;
        }
        int v63 = google::protobuf::io::CodedInputStream::PushLimit(a2, v79);
        if (!topotext::AttachmentInfo::MergePartialFromCodedStream(v59, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_178;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v63);
        int v64 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v65;
        }
        uint64_t v66 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v66 >= v17 || *v66 != 104) {
          continue;
        }
        int v18 = v66 + 1;
        *((void *)a2 + 1) = v18;
LABEL_155:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 13))goto LABEL_178; {
          unint64_t v67 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 13) = *v18;
          unint64_t v67 = v18 + 1;
          *((void *)a2 + 1) = v67;
        }
        int v15 = *((_DWORD *)this + 8) | 0x800;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15;
        if ((unint64_t)v67 >= v17 || *v67 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 1;
        goto LABEL_163;
      case 2u:
        if (v7 != 18) {
          goto LABEL_40;
        }
        int v20 = *((_DWORD *)this + 8);
        goto LABEL_49;
      case 3u:
        if (v7 == 26) {
          goto LABEL_63;
        }
        goto LABEL_40;
      case 5u:
        if (v7 != 40) {
          goto LABEL_40;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_77;
      case 6u:
        if (v7 != 48) {
          goto LABEL_40;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_85;
      case 7u:
        if (v7 != 56) {
          goto LABEL_40;
        }
        BOOL v16 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_93;
      case 8u:
        if (v7 != 64) {
          goto LABEL_40;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_101;
      case 9u:
        if (v7 != 74) {
          goto LABEL_40;
        }
        int v22 = *((_DWORD *)this + 8);
        goto LABEL_109;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_40;
        }
        goto LABEL_116;
      case 0xBu:
        if (v7 != 88) {
          goto LABEL_40;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_130;
      case 0xCu:
        if (v7 == 98) {
          goto LABEL_141;
        }
        goto LABEL_40;
      case 0xDu:
        if (v7 != 104) {
          goto LABEL_40;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_155;
      case 0xEu:
        if (v7 != 114)
        {
LABEL_40:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_179;
          }
          goto LABEL_42;
        }
        int v15 = *((_DWORD *)this + 8);
LABEL_163:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15 | 0x1000;
        unsigned int v68 = (topotext::HashtagInfo *)*((void *)this + 14);
        if (!v68) {
          operator new();
        }
        unsigned int v79 = 0;
        id v69 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v69 >= *((void *)a2 + 2) || *v69 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v79)) {
            goto LABEL_178;
          }
        }
        else
        {
          unsigned int v79 = *v69;
          *((void *)a2 + 1) = v69 + 1;
        }
        int v70 = *((_DWORD *)a2 + 14);
        int v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71
          || (int v72 = google::protobuf::io::CodedInputStream::PushLimit(a2, v79),
              !topotext::HashtagInfo::MergePartialFromCodedStream(v68, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_178:
          uint64_t v75 = 0;
          goto LABEL_180;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v72);
        int v73 = *((_DWORD *)a2 + 14);
        BOOL v31 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v31) {
          *((_DWORD *)a2 + 14) = v74;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v75 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_180:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v77);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v78);
        return v75;
      default:
        goto LABEL_6;
    }
  }
}

void sub_1B9BB15CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C4020611389);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::SerializeWithCachedSizes(topotext::AttributeRun *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 5);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v7 = *(void *)(topotext::AttributeRun::default_instance_ + 40);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v8 = *((void *)v5 + 7);
  if (!v8)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v8 = *(void *)(topotext::AttributeRun::default_instance_ + 56);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)v5 + 13), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)8, *((_DWORD *)v5 + 20), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((void *)v5 + 9), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v9 = *((void *)v5 + 11);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v9 = *(void *)(topotext::AttributeRun::default_instance_ + 88);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v9, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xB, *((_DWORD *)v5 + 21), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v10 = *((void *)v5 + 12);
  if (!v10)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v10 = *(void *)(topotext::AttributeRun::default_instance_ + 96);
  }
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = (topotext::AttributeRun *)google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xD, *((void *)v5 + 13), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x1000) == 0) {
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v11 = *((void *)v5 + 14);
  if (!v11)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v11 = *(void *)(topotext::AttributeRun::default_instance_ + 112);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(14, v11, a2);
LABEL_38:
  if (*((char *)v5 + 31) < 0)
  {
    int v12 = (char *)*((void *)v5 + 1);
    uint64_t v13 = *((void *)v5 + 2);
  }
  else
  {
    int v12 = (char *)v5 + 8;
    LODWORD(v13) = *((unsigned __int8 *)v5 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
}

uint64_t topotext::AttributeRun::ByteSize(topotext::AttributeRun *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_56;
  }
  if (v2)
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if (v4 >= 0x80)
    {
      int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v5 = 1;
    }
    int v3 = v5 + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
  }
  int v6 = (topotext::ParagraphStyle *)*((void *)this + 5);
  if (!v6)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    int v6 = *(topotext::ParagraphStyle **)(topotext::AttributeRun::default_instance_ + 40);
  }
  uint64_t v7 = (google::protobuf::io::CodedOutputStream *)topotext::ParagraphStyle::ByteSize(v6);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
  }
  else {
    int v9 = 1;
  }
  v3 += v8 + v9 + 1;
  int v2 = *((_DWORD *)this + 8);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (topotext::Font *)*((void *)this + 7);
    if (!v10)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      uint64_t v10 = *(topotext::Font **)(topotext::AttributeRun::default_instance_ + 56);
    }
    uint64_t v11 = (google::protobuf::io::CodedOutputStream *)topotext::Font::ByteSize(v10);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
    }
    else {
      int v13 = 1;
    }
    v3 += v12 + v13 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v14 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v15 = 1;
  }
  v3 += v15 + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_33:
  BOOL v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v16 >= 0x80)
  {
    int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v17 = 1;
  }
  v3 += v17 + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_41:
    int v20 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v21 = 1;
    }
    v3 += v21 + 1;
    if ((v2 & 0x80) == 0) {
      goto LABEL_56;
    }
    goto LABEL_47;
  }
LABEL_37:
  int v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  if (v18 >= 0x80)
  {
    int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v19 = 1;
  }
  v3 += v19 + 1;
  if ((v2 & 0x40) != 0) {
    goto LABEL_41;
  }
LABEL_21:
  if ((v2 & 0x80) == 0) {
    goto LABEL_56;
  }
LABEL_47:
  uint64_t v22 = *((void *)this + 9);
  int v23 = *(unsigned __int8 *)(v22 + 23);
  char v24 = v23;
  uint64_t v25 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    unint64_t v26 = *(unsigned __int8 *)(v22 + 23);
  }
  else {
    unint64_t v26 = v25;
  }
  if (v26 >= 0x80)
  {
    int v27 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v26);
    int v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v25 = *(void *)(v22 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v24 = *(unsigned char *)(v22 + 23);
  }
  else
  {
    int v27 = 1;
  }
  if (v24 < 0) {
    int v23 = v25;
  }
  v3 += v27 + v23 + 1;
LABEL_56:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v2 & 0x100) != 0)
  {
    int v28 = (topotext::Color *)*((void *)this + 11);
    if (!v28)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(0);
      int v28 = *(topotext::Color **)(topotext::AttributeRun::default_instance_ + 88);
    }
    int v29 = (google::protobuf::io::CodedOutputStream *)topotext::Color::ByteSize(v28);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    }
    else {
      int v31 = 1;
    }
    v3 += v30 + v31 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 0x200) == 0)
    {
LABEL_59:
      if ((v2 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_75;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  int v32 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 11;
  }
  else if (v32 >= 0x80)
  {
    int v33 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v33 = 2;
  }
  v3 += v33;
  if ((v2 & 0x400) == 0)
  {
LABEL_60:
    if ((v2 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_81;
  }
LABEL_75:
  std::string::size_type v34 = (topotext::AttachmentInfo *)*((void *)this + 12);
  if (!v34)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    std::string::size_type v34 = *(topotext::AttachmentInfo **)(topotext::AttributeRun::default_instance_ + 96);
  }
  unsigned int v35 = (google::protobuf::io::CodedOutputStream *)topotext::AttachmentInfo::ByteSize(v34);
  int v36 = (int)v35;
  if (v35 >= 0x80) {
    int v37 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
  }
  else {
    int v37 = 1;
  }
  v3 += v36 + v37 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x800) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_82;
  }
LABEL_81:
  v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 13)) + 1;
  if ((*((_DWORD *)this + 8) & 0x1000) == 0) {
    goto LABEL_88;
  }
LABEL_82:
  int v38 = (topotext::HashtagInfo *)*((void *)this + 14);
  if (!v38)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    int v38 = *(topotext::HashtagInfo **)(topotext::AttributeRun::default_instance_ + 112);
  }
  int v39 = (google::protobuf::io::CodedOutputStream *)topotext::HashtagInfo::ByteSize(v38);
  int v40 = (int)v39;
  if (v39 >= 0x80) {
    int v41 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
  }
  else {
    int v41 = 1;
  }
  v3 += v40 + v41 + 1;
LABEL_88:
  if (*((char *)this + 31) < 0) {
    uint64_t v42 = *((void *)this + 2);
  }
  else {
    LODWORD(v42) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v42);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttributeRun::CheckTypeAndMergeFrom(topotext::AttributeRun *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::AttributeRun::MergeFrom(this, lpsrc);
}

std::string *topotext::ParagraphStyle::MergeFrom(topotext::ParagraphStyle *this, const topotext::ParagraphStyle *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 3587);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 10);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 10) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 11);
      if (v7 >= 5) {
        -[TTParagraphStyle(TTParagraphStylePersistenceAdditions) saveToArchive:]();
      }
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 11) = v7;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      unsigned int v8 = *((_DWORD *)a2 + 12);
      if (v8 >= 5) {
        -[TTParagraphStyle(TTParagraphStylePersistenceAdditions) saveToArchive:]();
      }
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 12) = v8;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      int v9 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 8u;
      *((_DWORD *)this + 13) = v9;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      *((_DWORD *)this + 8) |= 0x10u;
      uint64_t v10 = (topotext::Todo *)*((void *)this + 7);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const topotext::Todo *)*((void *)a2 + 7);
      if (!v11)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(this);
        uint64_t v11 = *(const topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
      }
      topotext::Todo::MergeFrom(v10, v11);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x20) != 0)
    {
      int v12 = *((_DWORD *)a2 + 16);
      *((_DWORD *)this + 8) |= 0x20u;
      *((_DWORD *)this + 16) = v12;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x40) != 0)
    {
      int v13 = *((_DWORD *)a2 + 17);
      *((_DWORD *)this + 8) |= 0x40u;
      *((_DWORD *)this + 17) = v13;
    }
  }
  BOOL v16 = (const std::string::value_type *)*((void *)a2 + 1);
  int v15 = (char *)a2 + 8;
  int v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    int v18 = v15;
  }
  else {
    int v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v18, v19);
}

void sub_1B9BB1E64(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

std::string *topotext::Font::MergeFrom(topotext::Font *this, const topotext::Font *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 3153);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      unsigned int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 12) = v8;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v9 = *((_DWORD *)a2 + 13);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 13) = v9;
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1B9BB1FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Color::MergeFrom(topotext::Color *this, const topotext::Color *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 7065);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    int v15 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 11) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  int v14 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 8) |= 1u;
  *((_DWORD *)this + 10) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 8) |= 4u;
  *((_DWORD *)this + 12) = v16;
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    int v6 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 13) = v6;
  }
LABEL_9:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  unsigned int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BB2108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::AttachmentInfo::MergeFrom(topotext::AttachmentInfo *this, const topotext::AttachmentInfo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 4045);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      unsigned int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
  std::string::size_type v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v14, v15);
}

void sub_1B9BB2288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::HashtagInfo::MergeFrom(topotext::HashtagInfo *this, const topotext::HashtagInfo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 3809);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v6 = (std::string *)*((void *)this + 5);
    if (v6 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v6, v5);
  }
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  int v8 = (char *)a2 + 8;
  unsigned int v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BB23A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttributeRun::IsInitialized(topotext::AttributeRun *this)
{
  return 1;
}

void *topotext::AttributeRun::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttributeRun");
}

topotext::Font *topotext::Font::Font(topotext::Font *this)
{
  *(void *)this = &unk_1F13381B0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Font::SharedCtor(this);
  return this;
}

void sub_1B9BB2428(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::Font::SharedCtor(topotext::Font *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
}

void sub_1B9BB24F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::Font::~Font(void **this)
{
  *this = &unk_1F13381B0;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Font::~Font(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Font::New(topotext::Font *this)
{
}

void sub_1B9BB25EC(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C4020611389);
  _Unwind_Resume(a1);
}

uint64_t topotext::Font::MergePartialFromCodedStream(topotext::Font *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v20, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19, (google::protobuf::io::ZeroCopyOutputStream *)v20);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 == 24)
        {
          std::string::size_type v15 = (char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          goto LABEL_34;
        }
LABEL_29:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_43;
        }
        goto LABEL_31;
      }
      if (v9 == 2)
      {
        if (v7 == 21) {
          goto LABEL_24;
        }
        goto LABEL_29;
      }
      if (v9 == 1) {
        break;
      }
LABEL_17:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_43:
        uint64_t v17 = 1;
        goto LABEL_45;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v19, v4))goto LABEL_44; {
    }
      }
    if (v7 != 10) {
      goto LABEL_29;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v10 = (std::string *)*((void *)this + 5);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v10)) {
      break;
    }
    uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 21)
    {
      *((void *)a2 + 1) = v11 + 1;
LABEL_24:
      unsigned int v21 = 0;
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21)) {
        break;
      }
      *((_DWORD *)this + 12) = v21;
      *((_DWORD *)this + 8) |= 2u;
      char v14 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v13 = *((void *)a2 + 2);
      if ((unint64_t)v14 < v13 && *v14 == 24)
      {
        std::string::size_type v15 = v14 + 1;
        *((void *)a2 + 1) = v15;
LABEL_34:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 13))break; {
          int v16 = (unsigned __int8 *)*((void *)a2 + 1);
          }
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 13) = *v15;
          int v16 = (unsigned __int8 *)(v15 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 8) |= 4u;
        if (v16 == (unsigned __int8 *)v13 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v17 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
  }
LABEL_44:
  uint64_t v17 = 0;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v19);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v20);
  return v17;
}

void sub_1B9BB28AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Font::SerializeWithCachedSizes(topotext::Font *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)this + 13), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Font::ByteSize(topotext::Font *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v5 = *((void *)this + 5);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        int v10 = v11 + 1;
        int v2 = *((_DWORD *)this + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 2;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      int v3 = v10 + v6;
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      int v4 = v3 + 5;
    }
    else {
      int v4 = v3;
    }
    if ((v2 & 4) != 0)
    {
      BOOL v12 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if (v12 >= 0x80) {
        int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      }
      else {
        int v13 = 2;
      }
      v4 += v13;
    }
  }
  else
  {
    int v4 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v14 = *((void *)this + 2);
  }
  else {
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v4 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Font::CheckTypeAndMergeFrom(topotext::Font *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Font::MergeFrom(this, lpsrc);
}

uint64_t topotext::Font::IsInitialized(topotext::Font *this)
{
  return 1;
}

void *topotext::Font::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Font");
}

void topotext::ParagraphStyle::~ParagraphStyle(void **this)
{
  *this = &unk_1F1337F58;
  topotext::ParagraphStyle::SharedDtor((topotext::ParagraphStyle *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::ParagraphStyle::~ParagraphStyle(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::ParagraphStyle::SharedDtor(topotext::ParagraphStyle *this)
{
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::ParagraphStyle *)topotext::ParagraphStyle::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 7);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

void topotext::ParagraphStyle::New(topotext::ParagraphStyle *this)
{
}

uint64_t topotext::Todo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::ParagraphStyle::MergePartialFromCodedStream(topotext::ParagraphStyle *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v42, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v41, (google::protobuf::io::ZeroCopyOutputStream *)v42);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_11:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_100:
        uint64_t v39 = 1;
        goto LABEL_101;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v41, v4))goto LABEL_99; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_28;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))goto LABEL_99; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 10) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 >= v9 || *v11 != 16) {
          continue;
        }
        int v13 = v11 + 1;
        *((void *)a2 + 1) = v13;
LABEL_38:
        unsigned int v43 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43) & 1) == 0) {
            goto LABEL_99;
          }
          unsigned int v22 = v43;
        }
        else
        {
          unsigned int v22 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v22 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v41, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v41, v22);
        }
        else
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 11) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v14 || *v23 != 24) {
          continue;
        }
        std::string::size_type v15 = v23 + 1;
        *((void *)a2 + 1) = v15;
LABEL_49:
        unsigned int v43 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          if ((google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43) & 1) == 0) {
            goto LABEL_99;
          }
          unsigned int v24 = v43;
        }
        else
        {
          unsigned int v24 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v24 > 4)
        {
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v41, v7);
          google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)v41, v24);
        }
        else
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 12) = v24;
        }
        uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v25 >= v16 || *v25 != 32) {
          continue;
        }
        uint64_t v17 = v25 + 1;
        *((void *)a2 + 1) = v17;
LABEL_60:
        unsigned int v43 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43)) {
            goto LABEL_99;
          }
          unsigned int v26 = v43;
          int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          int v27 = v17 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 13) = v26;
        int v18 = *((_DWORD *)this + 8) | 8;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v18;
        if ((unint64_t)v27 >= v16 || *v27 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_68:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v18 | 0x10;
        int v28 = (topotext::Todo *)*((void *)this + 7);
        if (!v28) {
          operator new();
        }
        unsigned int v43 = 0;
        int v29 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v43)) {
            goto LABEL_99;
          }
        }
        else
        {
          unsigned int v43 = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)a2 + 14);
        int v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31) {
          goto LABEL_99;
        }
        int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
        if (!topotext::Todo::MergePartialFromCodedStream(v28, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_99;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v32);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v34 = __OFSUB__(v33, 1);
        int v35 = v33 - 1;
        if (v35 < 0 == v34) {
          *((_DWORD *)a2 + 14) = v35;
        }
        int v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v19 || *v36 != 48) {
          continue;
        }
        int v20 = v36 + 1;
        *((void *)a2 + 1) = v20;
LABEL_82:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 16))goto LABEL_99; {
          int v37 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 16) = *v20;
          int v37 = v20 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v37 >= v19 || *v37 != 56) {
          continue;
        }
        unsigned int v21 = v37 + 1;
        *((void *)a2 + 1) = v21;
        goto LABEL_90;
      case 2u:
        if (v7 != 16) {
          goto LABEL_28;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_38;
      case 3u:
        if (v7 != 24) {
          goto LABEL_28;
        }
        std::string::size_type v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_49;
      case 4u:
        if (v7 != 32) {
          goto LABEL_28;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_60;
      case 5u:
        if (v7 != 42) {
          goto LABEL_28;
        }
        int v18 = *((_DWORD *)this + 8);
        goto LABEL_68;
      case 6u:
        if (v7 != 48) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_82;
      case 7u:
        if (v7 != 56)
        {
LABEL_28:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_100;
          }
          goto LABEL_30;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
LABEL_90:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 17))
          {
LABEL_99:
            uint64_t v39 = 0;
            goto LABEL_101;
          }
          int v38 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *((_DWORD *)this + 17) = *v21;
          int v38 = (unsigned __int8 *)(v21 + 1);
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 8) |= 0x40u;
        if (v38 != (unsigned __int8 *)v19 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v39 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_101:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v41);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v42);
        return v39;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1B9BB3248(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C40417120EDLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::SerializeWithCachedSizes(topotext::ParagraphStyle *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 10), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)2, *((_DWORD *)v5 + 11), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)3, *((_DWORD *)v5 + 12), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = (topotext::ParagraphStyle *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)4, *((_DWORD *)v5 + 13), a2, a4);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *((void *)v5 + 7);
  if (!v9)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v9 = *(void *)(topotext::ParagraphStyle::default_instance_ + 56);
  }
  google::protobuf::internal::WireFormatLite::WriteMessage(5, v9, a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_18:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)v5 + 16), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x40) != 0) {
LABEL_8:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)7, *((_DWORD *)v5 + 17), a2, a4);
LABEL_9:
  if (*((char *)v5 + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)v5 + 1);
    uint64_t v8 = *((void *)v5 + 2);
  }
  else
  {
    uint64_t v7 = (char *)v5 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v5 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::ParagraphStyle::ByteSize(topotext::ParagraphStyle *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_48;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v4 >= 0x80)
  {
    int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v5 = 1;
  }
  int v3 = v5 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_10:
    int v6 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v7 = 2;
    }
    v3 += v7;
  }
LABEL_16:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v9 = 2;
    }
    v3 += v9;
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v10 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v11 = 2;
  }
  v3 += v11;
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  BOOL v12 = (topotext::Todo *)*((void *)this + 7);
  if (!v12)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(0);
    BOOL v12 = *(topotext::Todo **)(topotext::ParagraphStyle::default_instance_ + 56);
  }
  int v13 = (google::protobuf::io::CodedOutputStream *)topotext::Todo::ByteSize(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
LABEL_40:
  unint64_t v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  if (v16 >= 0x80)
  {
    int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v17 = 2;
  }
  v3 += v17;
  if ((v2 & 0x40) != 0)
  {
LABEL_44:
    int v18 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if (v18 >= 0x80) {
      int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else {
      int v19 = 2;
    }
    v3 += v19;
  }
LABEL_48:
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::ParagraphStyle::CheckTypeAndMergeFrom(topotext::ParagraphStyle *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::ParagraphStyle::MergeFrom(this, lpsrc);
}

std::string *topotext::Todo::MergeFrom(topotext::Todo *this, const topotext::Todo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 6777);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      char v8 = *((unsigned char *)a2 + 48);
      *((_DWORD *)this + 8) |= 2u;
      *((unsigned char *)this + 4_Block_object_dispose(&STACK[0x260], 8) = v8;
    }
  }
  int v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1B9BB374C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::ParagraphStyle::IsInitialized(topotext::ParagraphStyle *this)
{
  return 1;
}

void *topotext::ParagraphStyle::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.ParagraphStyle");
}

topotext::HashtagInfo *topotext::HashtagInfo::HashtagInfo(topotext::HashtagInfo *this)
{
  *(void *)this = &unk_1F1337D78;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::HashtagInfo::SharedCtor(this);
  return this;
}

void sub_1B9BB37D4(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::HashtagInfo::SharedCtor(topotext::HashtagInfo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
}

void sub_1B9BB389C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::HashtagInfo::~HashtagInfo(void **this)
{
  *this = &unk_1F1337D78;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::HashtagInfo::~HashtagInfo(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::HashtagInfo::New(topotext::HashtagInfo *this)
{
}

void sub_1B9BB3994(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C400074EEDFLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::HashtagInfo::MergePartialFromCodedStream(topotext::HashtagInfo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v14, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13, (google::protobuf::io::ZeroCopyOutputStream *)v14);
  do
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 == 10) {
        break;
      }
LABEL_15:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        uint64_t v11 = 1;
        goto LABEL_23;
      }
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v13, v4))goto LABEL_20; {
    }
      }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9))
    {
LABEL_20:
      uint64_t v11 = 0;
      goto LABEL_23;
    }
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v11 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_23:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v13);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v14);
  return v11;
}

void sub_1B9BB3B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::HashtagInfo::SerializeWithCachedSizes(topotext::HashtagInfo *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v4 = (char *)*((void *)this + 1);
    uint64_t v5 = *((void *)this + 2);
  }
  else
  {
    uint64_t v4 = (char *)this + 8;
    LODWORD(v5) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v4, v5);
}

uint64_t topotext::HashtagInfo::ByteSize(topotext::HashtagInfo *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = *((void *)this + 5);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    char v5 = v4;
    uint64_t v6 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 >= 0x80)
    {
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
      int v4 = *(unsigned __int8 *)(v3 + 23);
      uint64_t v6 = *(void *)(v3 + 8);
      int v8 = v9 + 1;
      char v5 = *(unsigned char *)(v3 + 23);
    }
    else
    {
      int v8 = 2;
    }
    if (v5 < 0) {
      int v4 = v6;
    }
    int v2 = v8 + v4;
  }
  else
  {
    int v2 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v10 + v2);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::HashtagInfo::CheckTypeAndMergeFrom(topotext::HashtagInfo *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::HashtagInfo::MergeFrom(this, lpsrc);
}

uint64_t topotext::HashtagInfo::IsInitialized(topotext::HashtagInfo *this)
{
  return 1;
}

void *topotext::HashtagInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.HashtagInfo");
}

topotext::AttachmentInfo *topotext::AttachmentInfo::AttachmentInfo(topotext::AttachmentInfo *this)
{
  *(void *)this = &unk_1F1337EE0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::AttachmentInfo::SharedCtor(this);
  return this;
}

void sub_1B9BB3D7C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::SharedCtor(topotext::AttachmentInfo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1B9BB3E48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::AttachmentInfo::~AttachmentInfo(void **this)
{
  *this = &unk_1F1337EE0;
  topotext::AttachmentInfo::SharedDtor((topotext::AttachmentInfo *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::AttachmentInfo::~AttachmentInfo(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::AttachmentInfo::SharedDtor(topotext::AttachmentInfo *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::AttachmentInfo *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::AttachmentInfo *)MEMORY[0x1BA9DB510](v3, 0x1012C40EC159624);
  }

  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::AttachmentInfo::New(topotext::AttachmentInfo *this)
{
}

void sub_1B9BB400C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40CCCF3E6ELL);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttachmentInfo::MergePartialFromCodedStream(topotext::AttachmentInfo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_23;
      }
LABEL_26:
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
LABEL_37:
      }
        __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
      int v12 = (std::string *)*((void *)this + 6);
      if (v12 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v12))
      {
LABEL_34:
        uint64_t v13 = 0;
        goto LABEL_36;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_36;
      }
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        goto LABEL_37;
      }
      int v9 = (std::string *)*((void *)this + 5);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9)) {
        goto LABEL_34;
      }
      uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
      {
        *((void *)a2 + 1) = v10 + 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_23:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_35;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))goto LABEL_34; {
    }
      }
  }
LABEL_16:
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_20;
  }
LABEL_35:
  uint64_t v13 = 1;
LABEL_36:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1B9BB427C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::AttachmentInfo::SerializeWithCachedSizes(topotext::AttachmentInfo *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v4 = *((_DWORD *)this + 8);
  }
  if ((v4 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    char v5 = (char *)*((void *)this + 1);
    uint64_t v6 = *((void *)this + 2);
  }
  else
  {
    char v5 = (char *)this + 8;
    LODWORD(v6) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v5, v6);
}

uint64_t topotext::AttachmentInfo::ByteSize(topotext::AttachmentInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_24;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::AttachmentInfo::CheckTypeAndMergeFrom(topotext::AttachmentInfo *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::AttachmentInfo::MergeFrom(this, lpsrc);
}

uint64_t topotext::AttachmentInfo::IsInitialized(topotext::AttachmentInfo *this)
{
  return 1;
}

void *topotext::AttachmentInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.AttachmentInfo");
}

topotext::Attachment *topotext::Attachment::Attachment(topotext::Attachment *this)
{
  *(void *)this = &unk_1F1337D00;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  *((_DWORD *)this + 54) = 0;
  topotext::Attachment::SharedCtor(this);
  return this;
}

void sub_1B9BB4544(_Unwind_Exception *a1)
{
  int v5 = v2;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v3);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v4);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

double topotext::Attachment::SharedCtor(topotext::Attachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v5[0] = &unk_1F1337CD8;
    v5[1] = google::protobuf::internal::InitEmptyString;
    char v6 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v5);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v5);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 6) = google::protobuf::internal::empty_string_;
  *((void *)this + 7) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = v3;
  *((void *)this + 9) = v3;
  *((void *)this + 10) = v3;
  *((void *)this + 11) = v3;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 40) = 0;
  *((unsigned char *)this + 164) = 0;
  *((void *)this + 39) = v3;
  *((void *)this + 40) = 0;
  *((void *)this + 21) = v3;
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v3;
  double result = 0.0;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = v3;
  *((void *)this + 3_Block_object_dispose(&STACK[0x260], 8) = v3;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  return result;
}

void sub_1B9BB4668(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Attachment::MergeFrom(topotext::Attachment *this, const topotext::Attachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 5330);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v61, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((topotext::Attachment *)((char *)this + 112), (const topotext::Attachment *)((char *)a2 + 112));
  int v5 = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((topotext::Attachment *)((char *)this + 200));
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (!(_BYTE)v6) {
    goto LABEL_39;
  }
  if (v6)
  {
    uint64_t v7 = (const std::string *)*((void *)a2 + 5);
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    unint64_t v8 = (std::string *)*((void *)this + 5);
    if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v8, v7);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 2) != 0)
  {
    int v9 = (const std::string *)*((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v10 = (std::string *)*((void *)this + 6);
    if (v10 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v10, v9);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 4) != 0)
  {
    int v11 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 14) = v11;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 8) == 0)
    {
LABEL_16:
      if ((v6 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v12 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 8) |= 8u;
  *((_DWORD *)this + 15) = v12;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_17:
    if ((v6 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_27:
    unint64_t v15 = (const std::string *)*((void *)a2 + 9);
    *((_DWORD *)this + 8) |= 0x20u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v16 = (std::string *)*((void *)this + 9);
    if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v16, v15);
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x40) == 0)
    {
LABEL_19:
      if ((v6 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_23:
  char v13 = (const std::string *)*((void *)a2 + 8);
  *((_DWORD *)this + 8) |= 0x10u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v14 = (std::string *)*((void *)this + 8);
  if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  int v5 = std::string::operator=(v14, v13);
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_18:
  if ((v6 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_31:
  uint64_t v17 = (const std::string *)*((void *)a2 + 10);
  *((_DWORD *)this + 8) |= 0x40u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  int v18 = (std::string *)*((void *)this + 10);
  if (v18 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  int v5 = std::string::operator=(v18, v17);
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x80) != 0)
  {
LABEL_35:
    int v19 = (const std::string *)*((void *)a2 + 11);
    *((_DWORD *)this + 8) |= 0x80u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    uint64_t v20 = (std::string *)*((void *)this + 11);
    if (v20 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    int v5 = std::string::operator=(v20, v19);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_39:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_58;
  }
  if ((v6 & 0x100) != 0)
  {
    *((_DWORD *)this + 8) |= 0x100u;
    unsigned int v21 = (topotext::Location *)*((void *)this + 12);
    if (!v21) {
      operator new();
    }
    unsigned int v22 = (const topotext::Location *)*((void *)a2 + 12);
    if (!v22)
    {
      topotext::protobuf_AddDesc_topotext_2eproto((topotext *)v5);
      unsigned int v22 = *(const topotext::Location **)(topotext::Attachment::default_instance_ + 96);
    }
    int v5 = topotext::Location::MergeFrom(v21, v22);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x200) != 0)
  {
    *((_DWORD *)this + 8) |= 0x200u;
    int v23 = (topotext::Media *)*((void *)this + 13);
    if (!v23) {
      operator new();
    }
    unsigned int v24 = (const topotext::Media *)*((void *)a2 + 13);
    if (!v24)
    {
      topotext::protobuf_AddDesc_topotext_2eproto((topotext *)v5);
      unsigned int v24 = *(const topotext::Media **)(topotext::Attachment::default_instance_ + 104);
    }
    topotext::Media::MergeFrom(v23, v24);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x800) != 0)
  {
    int v43 = *((_DWORD *)a2 + 34);
    *((_DWORD *)this + 8) |= 0x800u;
    *((_DWORD *)this + 34) = v43;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x1000) == 0)
    {
LABEL_54:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_105;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_54;
  }
  int v44 = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 8) |= 0x1000u;
  *((_DWORD *)this + 35) = v44;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x2000) == 0)
  {
LABEL_55:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_106;
  }
LABEL_105:
  int v45 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 8) |= 0x2000u;
  *((_DWORD *)this + 40) = v45;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x4000) == 0)
  {
LABEL_56:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_57;
  }
LABEL_106:
  uint64_t v46 = *((void *)a2 + 18);
  *((_DWORD *)this + 8) |= 0x4000u;
  *((void *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v46;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x8000) != 0)
  {
LABEL_57:
    uint64_t v25 = *((void *)a2 + 19);
    *((_DWORD *)this + 8) |= 0x8000u;
    *((void *)this + 19) = v25;
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_58:
  if ((v6 & 0xFF0000) == 0) {
    goto LABEL_71;
  }
  if ((v6 & 0x10000) != 0)
  {
    unsigned int v26 = (const std::string *)*((void *)a2 + 21);
    *((_DWORD *)this + 8) |= 0x10000u;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
    int v27 = (std::string *)*((void *)this + 21);
    if (v27 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    std::string::operator=(v27, v26);
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
  if ((v6 & 0x20000) != 0)
  {
    char v47 = *((unsigned char *)a2 + 164);
    *((_DWORD *)this + 8) |= 0x20000u;
    *((unsigned char *)this + 164) = v47;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x40000) == 0)
    {
LABEL_66:
      if ((v6 & 0x80000) == 0) {
        goto LABEL_67;
      }
      goto LABEL_110;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_66;
  }
  uint64_t v48 = *((void *)a2 + 22);
  *((_DWORD *)this + 8) |= 0x40000u;
  *((void *)this + 22) = v48;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x80000) == 0)
  {
LABEL_67:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t v49 = *((void *)a2 + 23);
  *((_DWORD *)this + 8) |= 0x80000u;
  *((void *)this + 23) = v49;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x100000) == 0)
  {
LABEL_68:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_112;
  }
LABEL_111:
  int v50 = *((_DWORD *)a2 + 80);
  *((_DWORD *)this + 8) |= 0x100000u;
  *((_DWORD *)this + 80) = v50;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x200000) == 0)
  {
LABEL_69:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_70;
  }
LABEL_112:
  int v51 = (const std::string *)*((void *)a2 + 24);
  *((_DWORD *)this + 8) |= 0x200000u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  int v52 = (std::string *)*((void *)this + 24);
  if (v52 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v52, v51);
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x800000) != 0)
  {
LABEL_70:
    uint64_t v28 = *((void *)a2 + 28);
    *((_DWORD *)this + 8) |= 0x800000u;
    *((void *)this + 2_Block_object_dispose(&STACK[0x260], 8) = v28;
    unsigned int v6 = *((_DWORD *)a2 + 8);
  }
LABEL_71:
  if (!HIBYTE(v6)) {
    goto LABEL_80;
  }
  if ((v6 & 0x1000000) != 0)
  {
    uint64_t v53 = *((void *)a2 + 29);
    *((_DWORD *)this + 8) |= 0x1000000u;
    *((void *)this + 29) = v53;
    unsigned int v6 = *((_DWORD *)a2 + 8);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_74:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_119;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_74;
  }
  uint64_t v54 = *((void *)a2 + 30);
  *((_DWORD *)this + 8) |= 0x2000000u;
  *((void *)this + 30) = v54;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_75:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v55 = *((void *)a2 + 31);
  *((_DWORD *)this + 8) |= 0x4000000u;
  *((void *)this + 31) = v55;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_76:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t v56 = *((void *)a2 + 32);
  *((_DWORD *)this + 8) |= 0x8000000u;
  *((void *)this + 32) = v56;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t v57 = *((void *)a2 + 33);
  *((_DWORD *)this + 8) |= 0x10000000u;
  *((void *)this + 33) = v57;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_78:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_79;
    }
LABEL_123:
    uint64_t v59 = *((void *)a2 + 35);
    *((_DWORD *)this + 8) |= 0x40000000u;
    *((void *)this + 35) = v59;
    if ((*((_DWORD *)a2 + 8) & 0x80000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_124;
  }
LABEL_122:
  uint64_t v58 = *((void *)a2 + 34);
  *((_DWORD *)this + 8) |= 0x20000000u;
  *((void *)this + 34) = v58;
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_123;
  }
LABEL_79:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_80;
  }
LABEL_124:
  uint64_t v60 = *((void *)a2 + 36);
  *((_DWORD *)this + 8) |= 0x80000000;
  *((void *)this + 36) = v60;
LABEL_80:
  LOBYTE(v29) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v29)
  {
    if (*((unsigned char *)a2 + 36))
    {
      int v30 = (const std::string *)*((void *)a2 + 37);
      *((_DWORD *)this + 9) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v31 = (std::string *)*((void *)this + 37);
      if (v31 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v31, v30);
      int v29 = *((_DWORD *)a2 + 9);
    }
    if ((v29 & 2) != 0)
    {
      int v32 = (const std::string *)*((void *)a2 + 38);
      *((_DWORD *)this + 9) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v33 = (std::string *)*((void *)this + 38);
      if (v33 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v33, v32);
      int v29 = *((_DWORD *)a2 + 9);
    }
    if ((v29 & 4) != 0)
    {
      BOOL v34 = (const std::string *)*((void *)a2 + 39);
      *((_DWORD *)this + 9) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      int v35 = (std::string *)*((void *)this + 39);
      if (v35 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v35, v34);
    }
  }
  int v38 = (const std::string::value_type *)*((void *)a2 + 1);
  int v37 = (char *)a2 + 8;
  int v36 = v38;
  int v39 = v37[23];
  if (v39 >= 0) {
    int v40 = v37;
  }
  else {
    int v40 = v36;
  }
  if (v39 >= 0) {
    std::string::size_type v41 = v37[23];
  }
  else {
    std::string::size_type v41 = *((void *)v37 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v40, v41);
}

void sub_1B9BB4EF4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

void topotext::Attachment::~Attachment(topotext::Attachment *this)
{
  *(void *)this = &unk_1F1337D00;
  topotext::Attachment::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 25);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 14);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Attachment::~Attachment(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Attachment::SharedDtor(topotext::Attachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 8);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 9);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v6, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v7 = *((void *)v1 + 10);
  if (v7 != v2 && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v7, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v8 = *((void *)v1 + 11);
  if (v8 != v2 && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v8, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v9 = *((void *)v1 + 21);
  if (v9 != v2 && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v9, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v10 = *((void *)v1 + 24);
  if (v10 != v2 && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v10, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v11 = *((void *)v1 + 37);
  if (v11 != v2 && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v11, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v12 = *((void *)v1 + 38);
  if (v12 != v2 && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v12, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v13 = *((void *)v1 + 39);
  if (v13 && v13 != v2)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    this = (topotext::Attachment *)MEMORY[0x1BA9DB510](v13, 0x1012C40EC159624);
  }
  topotext::protobuf_AddDesc_topotext_2eproto(this);
  if ((topotext::Attachment *)topotext::Attachment::default_instance_ != v1)
  {
    uint64_t v14 = *((void *)v1 + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = *((void *)v1 + 13);
    if (v15)
    {
      int v16 = *(void (**)(void))(*(void *)v15 + 8);
      v16();
    }
  }
}

void topotext::Attachment::New(topotext::Attachment *this)
{
}

void sub_1B9BB53E4(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40207117CFLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::Clear(topotext::Attachment *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (v2)
  {
    *((void *)this + 7) = 0;
    if (v2)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *((void *)this + 5);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v4 = *((void *)this + 6);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x10) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v5 = *((void *)this + 8);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x20) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v6 = *((void *)this + 9);
      if (v6 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x40) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v7 = *((void *)this + 10);
      if (v7 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x80) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v8 = *((void *)this + 11);
      if (v8 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
  }
  unsigned int v9 = *((_DWORD *)this + 8);
  if ((v9 & 0xFB00) != 0)
  {
    *((void *)this + 17) = 0;
    *((void *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
    *((_DWORD *)this + 40) = 0;
    *((void *)this + 19) = 0;
    if ((v9 & 0x100) != 0)
    {
      uint64_t v10 = *((void *)this + 12);
      if (v10)
      {
        topotext::Location::Clear(v10);
        unsigned int v9 = *((_DWORD *)this + 8);
      }
    }
    if ((v9 & 0x200) != 0)
    {
      uint64_t v11 = *((void *)this + 13);
      if (v11)
      {
        topotext::Media::Clear(v11);
        unsigned int v9 = *((_DWORD *)this + 8);
      }
    }
  }
  if ((v9 & 0xBF0000) != 0)
  {
    *((void *)this + 22) = 0;
    *((void *)this + 23) = 0;
    if ((v9 & 0x10000) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v12 = *((void *)this + 21);
      if (v12 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v12 + 23) < 0)
        {
          **(unsigned char **)uint64_t v12 = 0;
          *(void *)(v12 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v12 = 0;
          *(unsigned char *)(v12 + 23) = 0;
        }
      }
    }
    *((unsigned char *)this + 164) = 0;
    *((_DWORD *)this + 80) = 0;
    if ((*((unsigned char *)this + 34) & 0x20) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v13 = *((void *)this + 24);
      if (v13 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v13 + 23) < 0)
        {
          **(unsigned char **)uint64_t v13 = 0;
          *(void *)(v13 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v13 = 0;
          *(unsigned char *)(v13 + 23) = 0;
        }
      }
    }
    *((void *)this + 2_Block_object_dispose(&STACK[0x260], 8) = 0;
    unsigned int v9 = *((_DWORD *)this + 8);
  }
  if (HIBYTE(v9))
  {
    *(_OWORD *)((char *)this + 232) = 0u;
    *(_OWORD *)((char *)this + 264) = 0u;
    *(_OWORD *)((char *)this + 280) = 0u;
    *(_OWORD *)((char *)this + 24_Block_object_dispose(&STACK[0x260], 8) = 0u;
  }
  int v14 = *((_DWORD *)this + 9);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v15 = *((void *)this + 37);
      if (v15 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v15 + 23) < 0)
        {
          **(unsigned char **)uint64_t v15 = 0;
          *(void *)(v15 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v15 = 0;
          *(unsigned char *)(v15 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v16 = *((void *)this + 38);
      if (v16 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v16 + 23) < 0)
        {
          **(unsigned char **)uint64_t v16 = 0;
          *(void *)(v16 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v16 = 0;
          *(unsigned char *)(v16 + 23) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 36) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v17 = *((void *)this + 39);
      if (v17 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v17 + 23) < 0)
        {
          **(unsigned char **)uint64_t v17 = 0;
          *(void *)(v17 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v17 = 0;
          *(unsigned char *)(v17 + 23) = 0;
        }
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 112);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 200);
  *((void *)this + 4) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t topotext::Location::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0xF) != 0)
  {
    *(void *)(this + 40) = 0;
    *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 56);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(this + 64) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Media::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0x1F) != 0)
  {
    if (v1)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 48);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v4 = *(void *)(this + 56);
      if (v4 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v5 = *(void *)(this + 64);
      if (v5 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(void *)(this + 72) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::Attachment::MergePartialFromCodedStream(topotext::Attachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v113, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v112, (google::protobuf::io::ZeroCopyOutputStream *)v113);
LABEL_2:
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      unint64_t v6 = *((void *)a2 + 2);
      if ((unint64_t)v5 < v6)
      {
        uint64_t v7 = *v5;
        if (*v5 >= 1)
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
          uint64_t v8 = (unsigned __int8 *)(v5 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v5 + 1) < v6)
        {
          int v9 = v5[1];
          if ((v7 & ~v9) >= 0x80) {
            break;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) != 0) {
        goto LABEL_16;
      }
LABEL_9:
      if (v10) {
        BOOL v11 = (v10 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_351:
        uint64_t v110 = 1;
        goto LABEL_352;
      }
LABEL_138:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, (google::protobuf::io::CodedOutputStream *)v112, v4))goto LABEL_350; {
    }
      }
    uint64_t v7 = (v7 + (v9 << 7) - 128);
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
    uint64_t v8 = (unsigned __int8 *)(v5 + 2);
LABEL_8:
    *((void *)a2 + 1) = v8;
    unint64_t v10 = v7 | 0x100000000;
LABEL_16:
    switch(v10 >> 3)
    {
      case 2u:
        if (v10 != 18) {
          goto LABEL_136;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        uint64_t v13 = (std::string *)*((void *)this + 5);
        if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v13)) {
          goto LABEL_350;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_56:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        uint64_t v17 = (std::string *)*((void *)this + 6);
        if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v17)) {
          goto LABEL_350;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_63:
        v114[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v114)) {
          goto LABEL_350;
        }
        *((_DWORD *)this + 14) = v114[0];
        *((_DWORD *)this + 8) |= 4u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_67:
        v114[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v114)) {
          goto LABEL_350;
        }
        *((_DWORD *)this + 15) = v114[0];
        int v16 = *((_DWORD *)this + 8) | 8;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v16;
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_71:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v16 | 0x10;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        unsigned int v21 = (std::string *)*((void *)this + 8);
        if (v21 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v21)) {
          goto LABEL_350;
        }
        unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_85:
        *((_DWORD *)this + 8) |= 0x20u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        int v27 = (std::string *)*((void *)this + 9);
        if (v27 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v27)) {
          goto LABEL_350;
        }
        uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_97:
        *((_DWORD *)this + 8) |= 0x40u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        int v32 = (std::string *)*((void *)this + 10);
        if (v32 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v32)) {
          goto LABEL_350;
        }
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_104:
        *((_DWORD *)this + 8) |= 0x80u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        BOOL v34 = (std::string *)*((void *)this + 11);
        if (v34 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v34)) {
          goto LABEL_350;
        }
        int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_116:
        *((_DWORD *)this + 8) |= 0x100u;
        int v37 = (topotext::Location *)*((void *)this + 12);
        if (!v37) {
          operator new();
        }
        v114[0] = 0;
        int v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
            goto LABEL_350;
          }
        }
        else
        {
          v114[0] = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42) {
          goto LABEL_350;
        }
        int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114[0]);
        if (!topotext::Location::MergePartialFromCodedStream(v37, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_350;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v43);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v45 = __OFSUB__(v44, 1);
        int v46 = v44 - 1;
        if (v46 < 0 == v45) {
          *((_DWORD *)a2 + 14) = v46;
        }
        char v47 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_149:
        *((_DWORD *)this + 8) |= 0x200u;
        uint64_t v48 = (topotext::Media *)*((void *)this + 13);
        if (!v48) {
          operator new();
        }
        v114[0] = 0;
        uint64_t v49 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
            goto LABEL_350;
          }
        }
        else
        {
          v114[0] = *v49;
          *((void *)a2 + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)a2 + 14);
        int v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51) {
          goto LABEL_350;
        }
        int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114[0]);
        if (!topotext::Media::MergePartialFromCodedStream(v48, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_350;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v52);
        int v53 = *((_DWORD *)a2 + 14);
        BOOL v45 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v45) {
          *((_DWORD *)a2 + 14) = v54;
        }
        uint64_t v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 98) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v55 + 1;
LABEL_163:
          int v56 = *((_DWORD *)this + 31);
          uint64_t v57 = *((int *)this + 30);
          if ((int)v57 >= v56)
          {
            if (v56 == *((_DWORD *)this + 32)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 112, v56 + 1);
            }
            google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
          }
          uint64_t v58 = *((void *)this + 14);
          *((_DWORD *)this + 30) = v57 + 1;
          uint64_t v59 = *(topotext::PreviewImage **)(v58 + 8 * v57);
          v114[0] = 0;
          uint64_t v60 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v60 >= *((void *)a2 + 2) || *v60 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
              goto LABEL_350;
            }
          }
          else
          {
            v114[0] = *v60;
            *((void *)a2 + 1) = v60 + 1;
          }
          int v61 = *((_DWORD *)a2 + 14);
          int v62 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v61 + 1;
          if (v61 >= v62) {
            goto LABEL_350;
          }
          int v63 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114[0]);
          if (!topotext::PreviewImage::MergePartialFromCodedStream(v59, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_350;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v63);
          int v64 = *((_DWORD *)a2 + 14);
          BOOL v45 = __OFSUB__(v64, 1);
          int v65 = v64 - 1;
          if (v65 < 0 == v45) {
            *((_DWORD *)a2 + 14) = v65;
          }
          uint64_t v55 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v55 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v66 = *v55;
        }
        while (v66 == 98);
        if (v66 != 109) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_181:
        v114[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v114)) {
          goto LABEL_350;
        }
        *((_DWORD *)this + 34) = v114[0];
        *((_DWORD *)this + 8) |= 0x800u;
        unint64_t v67 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 != 117) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 1;
LABEL_185:
        v114[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v114)) {
          goto LABEL_350;
        }
        *((_DWORD *)this + 35) = v114[0];
        *((_DWORD *)this + 8) |= 0x1000u;
        unsigned int v68 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        if ((unint64_t)v68 >= v30 || *v68 != 120) {
          continue;
        }
        int v31 = v68 + 1;
        *((void *)a2 + 1) = v31;
LABEL_189:
        v114[0] = 0;
        if ((unint64_t)v31 >= v30 || (char)*v31 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
            goto LABEL_350;
          }
          unsigned int v69 = v114[0];
          int v70 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v30 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v69 = *v31;
          int v70 = v31 + 1;
          *((void *)a2 + 1) = v70;
        }
        *((_DWORD *)this + 40) = v69;
        *((_DWORD *)this + 8) |= 0x2000u;
        if ((int)v30 - (int)v70 < 2 || *v70 != 129 || v70[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 2;
LABEL_198:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 1_Block_object_dispose(&STACK[0x260], 8) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x4000u;
        int v71 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v71 < 2 || *v71 != 137 || v71[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 2;
LABEL_203:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 19) = *(void *)v114;
        int v15 = *((_DWORD *)this + 8) | 0x8000;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15;
        int v72 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v72 < 2 || *v72 != 146 || v72[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v72 + 2;
LABEL_208:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15 | 0x10000;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        int v73 = (std::string *)*((void *)this + 21);
        if (v73 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v73)) {
          goto LABEL_350;
        }
        int v74 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((int)v23 - (int)v74 < 2 || *v74 != 152 || v74[1] != 1) {
          continue;
        }
        unsigned int v24 = v74 + 2;
        *((void *)a2 + 1) = v24;
LABEL_216:
        *(void *)v114 = 0;
        if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v114)) {
            goto LABEL_350;
          }
          uint64_t v75 = *(void *)v114;
          uint64_t v76 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v75 = *v24;
          uint64_t v76 = v24 + 1;
          *((void *)a2 + 1) = v76;
        }
        *((unsigned char *)this + 164) = v75 != 0;
        *((_DWORD *)this + 8) |= 0x20000u;
        if ((int)v23 - (int)v76 < 2 || *v76 != 160 || v76[1] != 1) {
          continue;
        }
        int v36 = v76 + 2;
        *((void *)a2 + 1) = v36;
LABEL_225:
        *(void *)v114 = 0;
        if ((unint64_t)v36 >= v23 || (char)*v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v114)) {
            goto LABEL_350;
          }
          uint64_t v77 = *(void *)v114;
          unint64_t v78 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v77 = *v36;
          unint64_t v78 = v36 + 1;
          *((void *)a2 + 1) = v78;
        }
        *((void *)this + 22) = v77;
        *((_DWORD *)this + 8) |= 0x40000u;
        if ((int)v23 - (int)v78 < 2 || *v78 != 169 || v78[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v78 + 2;
LABEL_234:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 23) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x80000u;
        unsigned int v79 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        if ((int)v25 - (int)v79 < 2 || *v79 != 176 || v79[1] != 1) {
          continue;
        }
        unsigned int v26 = v79 + 2;
        *((void *)a2 + 1) = v26;
LABEL_239:
        v114[0] = 0;
        if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
            goto LABEL_350;
          }
          unsigned int v80 = v114[0];
          unint64_t v81 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v25 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v80 = *v26;
          unint64_t v81 = v26 + 1;
          *((void *)a2 + 1) = v81;
        }
        *((_DWORD *)this + 80) = v80;
        int v29 = *((_DWORD *)this + 8) | 0x100000;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v29;
        if ((int)v25 - (int)v81 < 2 || *v81 != 186 || v81[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v81 + 2;
LABEL_248:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v29 | 0x200000;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        v82 = (std::string *)*((void *)this + 24);
        if (v82 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v82)) {
          goto LABEL_350;
        }
        id v83 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v83 < 2 || *v83 != 194 || v83[1] != 1) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v83 + 2;
LABEL_256:
          int v84 = *((_DWORD *)this + 53);
          uint64_t v85 = *((int *)this + 52);
          if ((int)v85 >= v84)
          {
            if (v84 == *((_DWORD *)this + 54)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 200, v84 + 1);
            }
            google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
          }
          uint64_t v86 = *((void *)this + 25);
          *((_DWORD *)this + 52) = v85 + 1;
          id v87 = *(topotext::Attachment **)(v86 + 8 * v85);
          v114[0] = 0;
          uint64_t v88 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v88 >= *((void *)a2 + 2) || *v88 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v114)) {
              goto LABEL_350;
            }
          }
          else
          {
            v114[0] = *v88;
            *((void *)a2 + 1) = v88 + 1;
          }
          int v89 = *((_DWORD *)a2 + 14);
          int v90 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v89 + 1;
          if (v89 >= v90) {
            goto LABEL_350;
          }
          int v91 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114[0]);
          if (!topotext::Attachment::MergePartialFromCodedStream(v87, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_350;
          }
          google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v91);
          int v92 = *((_DWORD *)a2 + 14);
          BOOL v45 = __OFSUB__(v92, 1);
          int v93 = v92 - 1;
          if (v93 < 0 == v45) {
            *((_DWORD *)a2 + 14) = v93;
          }
          id v83 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v39 = *((void *)a2 + 2);
          if ((int)v39 - (int)v83 <= 1) {
            goto LABEL_2;
          }
          int v94 = *v83;
          if (v94 == 200) {
            break;
          }
          if (v94 != 194 || v83[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v83[1] != 1) {
          continue;
        }
        int v40 = v83 + 2;
        *((void *)a2 + 1) = v40;
LABEL_277:
        *(void *)v114 = 0;
        if ((unint64_t)v40 >= v39 || (char)*v40 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v114)) {
            goto LABEL_350;
          }
          uint64_t v95 = *(void *)v114;
          uint64_t v96 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v39 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v95 = *v40;
          uint64_t v96 = v40 + 1;
          *((void *)a2 + 1) = v96;
        }
        *((void *)this + 2_Block_object_dispose(&STACK[0x260], 8) = v95;
        *((_DWORD *)this + 8) |= 0x800000u;
        if ((int)v39 - (int)v96 < 2 || *v96 != 209 || v96[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v96 + 2;
LABEL_286:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 29) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x1000000u;
        uint64_t v97 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v97 < 2 || *v97 != 217 || v97[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v97 + 2;
LABEL_291:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 30) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x2000000u;
        v98 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v98 < 2 || *v98 != 225 || v98[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v98 + 2;
LABEL_296:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 31) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x4000000u;
        v99 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v99 < 2 || *v99 != 233 || v99[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v99 + 2;
LABEL_301:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 32) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x8000000u;
        v100 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v100 < 2 || *v100 != 241 || v100[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v100 + 2;
LABEL_306:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 33) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x10000000u;
        uint64_t v101 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v101 < 2 || *v101 != 249 || v101[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v101 + 2;
LABEL_311:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 34) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x20000000u;
        uint64_t v102 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v102 < 2 || *v102 != 129 || v102[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v102 + 2;
LABEL_316:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 35) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x40000000u;
        uint64_t v103 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v103 < 2 || *v103 != 137 || v103[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v103 + 2;
LABEL_321:
        *(void *)v114 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v114)) {
          goto LABEL_350;
        }
        *((void *)this + 36) = *(void *)v114;
        *((_DWORD *)this + 8) |= 0x80000000;
        uint64_t v104 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v104 < 2 || *v104 != 146 || v104[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v104 + 2;
LABEL_326:
        *((_DWORD *)this + 9) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        v105 = (std::string *)*((void *)this + 37);
        if (v105 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v105)) {
          goto LABEL_350;
        }
        uint64_t v106 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v106 < 2 || *v106 != 154 || v106[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v106 + 2;
LABEL_334:
        *((_DWORD *)this + 9) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_353;
        }
        uint64_t v107 = (std::string *)*((void *)this + 38);
        if (v107 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v107)) {
          goto LABEL_350;
        }
        uint64_t v108 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v108 < 2 || *v108 != 162 || v108[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v108 + 2;
LABEL_342:
        *((_DWORD *)this + 9) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_353:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        uint64_t v109 = (std::string *)*((void *)this + 39);
        if (v109 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v109))
        {
LABEL_350:
          uint64_t v110 = 0;
          goto LABEL_352;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v110 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_352:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v112);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v113);
        return v110;
      case 3u:
        if (v10 == 26) {
          goto LABEL_56;
        }
        goto LABEL_136;
      case 4u:
        if (v10 == 37) {
          goto LABEL_63;
        }
        goto LABEL_136;
      case 5u:
        if (v10 == 45) {
          goto LABEL_67;
        }
        goto LABEL_136;
      case 6u:
        if (v10 != 50) {
          goto LABEL_136;
        }
        int v16 = *((_DWORD *)this + 8);
        goto LABEL_71;
      case 7u:
        if (v10 == 58) {
          goto LABEL_85;
        }
        goto LABEL_136;
      case 8u:
        if (v10 == 66) {
          goto LABEL_97;
        }
        goto LABEL_136;
      case 9u:
        if (v10 == 74) {
          goto LABEL_104;
        }
        goto LABEL_136;
      case 0xAu:
        if (v10 == 82) {
          goto LABEL_116;
        }
        goto LABEL_136;
      case 0xBu:
        if (v10 == 90) {
          goto LABEL_149;
        }
        goto LABEL_136;
      case 0xCu:
        if (v10 == 98) {
          goto LABEL_163;
        }
        goto LABEL_136;
      case 0xDu:
        if (v10 == 109) {
          goto LABEL_181;
        }
        goto LABEL_136;
      case 0xEu:
        if (v10 == 117) {
          goto LABEL_185;
        }
        goto LABEL_136;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_136;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        goto LABEL_189;
      case 0x10u:
        if (v10 == 129) {
          goto LABEL_198;
        }
        goto LABEL_136;
      case 0x11u:
        if (v10 == 137) {
          goto LABEL_203;
        }
        goto LABEL_136;
      case 0x12u:
        if (v10 != 146) {
          goto LABEL_136;
        }
        int v15 = *((_DWORD *)this + 8);
        goto LABEL_208;
      case 0x13u:
        if (v10 != 152) {
          goto LABEL_136;
        }
        unsigned int v24 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_216;
      case 0x14u:
        if (v10 != 160) {
          goto LABEL_136;
        }
        int v36 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_225;
      case 0x15u:
        if (v10 == 169) {
          goto LABEL_234;
        }
        goto LABEL_136;
      case 0x16u:
        if (v10 != 176) {
          goto LABEL_136;
        }
        unsigned int v26 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v25 = *((void *)a2 + 2);
        goto LABEL_239;
      case 0x17u:
        if (v10 != 186) {
          goto LABEL_136;
        }
        int v29 = *((_DWORD *)this + 8);
        goto LABEL_248;
      case 0x18u:
        if (v10 == 194) {
          goto LABEL_256;
        }
        goto LABEL_136;
      case 0x19u:
        if (v10 != 200) {
          goto LABEL_136;
        }
        int v40 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v39 = *((void *)a2 + 2);
        goto LABEL_277;
      case 0x1Au:
        if (v10 == 209) {
          goto LABEL_286;
        }
        goto LABEL_136;
      case 0x1Bu:
        if (v10 == 217) {
          goto LABEL_291;
        }
        goto LABEL_136;
      case 0x1Cu:
        if (v10 != 225) {
          goto LABEL_136;
        }
        goto LABEL_296;
      case 0x1Du:
        if (v10 == 233) {
          goto LABEL_301;
        }
        goto LABEL_136;
      case 0x1Eu:
        if (v10 == 241) {
          goto LABEL_306;
        }
        goto LABEL_136;
      case 0x1Fu:
        if (v10 == 249) {
          goto LABEL_311;
        }
        goto LABEL_136;
      case 0x20u:
        if (v10 == 257) {
          goto LABEL_316;
        }
        goto LABEL_136;
      case 0x21u:
        if (v10 == 265) {
          goto LABEL_321;
        }
        goto LABEL_136;
      case 0x22u:
        if (v10 == 274) {
          goto LABEL_326;
        }
        goto LABEL_136;
      case 0x23u:
        if (v10 == 282) {
          goto LABEL_334;
        }
        goto LABEL_136;
      case 0x24u:
        if (v10 == 290) {
          goto LABEL_342;
        }
LABEL_136:
        if (v10 && (v10 & 7) != 4) {
          goto LABEL_138;
        }
        goto LABEL_351;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1B9BB6E94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C40DF275E33);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::SerializeWithCachedSizes(topotext::Attachment *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)v5 + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)v5 + 6), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)v5 + 14), a3);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)5, a2, *((float *)v5 + 15), a3);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(6, *((void *)v5 + 8), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(7, *((void *)v5 + 9), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(8, *((void *)v5 + 10), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(9, *((void *)v5 + 11), a2);
  int v6 = *((_DWORD *)v5 + 8);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_26;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v7 = *((void *)v5 + 12);
  if (!v7)
  {
    topotext::protobuf_AddDesc_topotext_2eproto(this);
    uint64_t v7 = *(void *)(topotext::Attachment::default_instance_ + 96);
  }
  this = (topotext::Attachment *)google::protobuf::internal::WireFormatLite::WriteMessage(10, v7, a2);
  if ((*((_DWORD *)v5 + 8) & 0x200) != 0)
  {
LABEL_23:
    uint64_t v8 = *((void *)v5 + 13);
    if (!v8)
    {
      topotext::protobuf_AddDesc_topotext_2eproto(this);
      uint64_t v8 = *(void *)(topotext::Attachment::default_instance_ + 104);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(11, v8, a2);
  }
LABEL_26:
  if (*((int *)v5 + 30) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)v5 + 112, v9);
      google::protobuf::internal::WireFormatLite::WriteMessage(12, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v5 + 30));
  }
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x800) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xD, a2, *((float *)v5 + 34), a3);
    int v11 = *((_DWORD *)v5 + 8);
    if ((v11 & 0x1000) == 0)
    {
LABEL_31:
      if ((v11 & 0x2000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_61;
    }
  }
  else if ((v11 & 0x1000) == 0)
  {
    goto LABEL_31;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)0xE, a2, *((float *)v5 + 35), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x2000) == 0)
  {
LABEL_32:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_62;
  }
LABEL_61:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0xF, *((_DWORD *)v5 + 40), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x4000) == 0)
  {
LABEL_33:
    if ((v11 & 0x8000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_63;
  }
LABEL_62:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x10, a2, *((double *)v5 + 18), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x8000) == 0)
  {
LABEL_34:
    if ((v11 & 0x10000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_64;
  }
LABEL_63:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x11, a2, *((double *)v5 + 19), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x10000) == 0)
  {
LABEL_35:
    if ((v11 & 0x20000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_65;
  }
LABEL_64:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(18, *((void *)v5 + 21), a2);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x20000) == 0)
  {
LABEL_36:
    if ((v11 & 0x40000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_66;
  }
LABEL_65:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)0x13, *((unsigned __int8 *)v5 + 164), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x40000) == 0)
  {
LABEL_37:
    if ((v11 & 0x80000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_67;
  }
LABEL_66:
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x14, *((void *)v5 + 22), a2, a4);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x80000) == 0)
  {
LABEL_38:
    if ((v11 & 0x100000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_68;
  }
LABEL_67:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x15, a2, *((double *)v5 + 23), a3);
  int v11 = *((_DWORD *)v5 + 8);
  if ((v11 & 0x100000) == 0)
  {
LABEL_39:
    if ((v11 & 0x200000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_68:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)0x16, *((_DWORD *)v5 + 80), a2, a4);
  if ((*((_DWORD *)v5 + 8) & 0x200000) != 0) {
LABEL_40:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(23, *((void *)v5 + 24), a2);
LABEL_41:
  if (*((int *)v5 + 52) >= 1)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)v5 + 200, v12);
      google::protobuf::internal::WireFormatLite::WriteMessage(24, v13, a2);
      ++v12;
    }
    while (v12 < *((_DWORD *)v5 + 52));
  }
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x800000) != 0)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0x19, *((void *)v5 + 28), a2, a4);
    int v14 = *((_DWORD *)v5 + 8);
    if ((v14 & 0x1000000) == 0)
    {
LABEL_46:
      if ((v14 & 0x2000000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_72;
    }
  }
  else if ((v14 & 0x1000000) == 0)
  {
    goto LABEL_46;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1A, a2, *((double *)v5 + 29), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x2000000) == 0)
  {
LABEL_47:
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_73;
  }
LABEL_72:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1B, a2, *((double *)v5 + 30), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_48:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_74;
  }
LABEL_73:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1C, a2, *((double *)v5 + 31), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_49:
    if ((v14 & 0x10000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_75;
  }
LABEL_74:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1D, a2, *((double *)v5 + 32), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x10000000) == 0)
  {
LABEL_50:
    if ((v14 & 0x20000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_76;
  }
LABEL_75:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1E, a2, *((double *)v5 + 33), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x20000000) == 0)
  {
LABEL_51:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_52;
    }
LABEL_77:
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x20, a2, *((double *)v5 + 35), a3);
    if ((*((_DWORD *)v5 + 8) & 0x80000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_78;
  }
LABEL_76:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1F, a2, *((double *)v5 + 34), a3);
  int v14 = *((_DWORD *)v5 + 8);
  if ((v14 & 0x40000000) != 0) {
    goto LABEL_77;
  }
LABEL_52:
  if ((v14 & 0x80000000) == 0) {
    goto LABEL_53;
  }
LABEL_78:
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x21, a2, *((double *)v5 + 36), a3);
LABEL_53:
  int v15 = *((_DWORD *)v5 + 9);
  if (v15)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(34, *((void *)v5 + 37), a2);
    int v15 = *((_DWORD *)v5 + 9);
    if ((v15 & 2) == 0)
    {
LABEL_55:
      if ((v15 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_55;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(35, *((void *)v5 + 38), a2);
  if ((*((_DWORD *)v5 + 9) & 4) != 0) {
LABEL_56:
  }
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(36, *((void *)v5 + 39), a2);
LABEL_57:
  if (*((char *)v5 + 31) < 0)
  {
    int v16 = (char *)*((void *)v5 + 1);
    uint64_t v17 = *((void *)v5 + 2);
  }
  else
  {
    int v16 = (char *)v5 + 8;
    LODWORD(v17) = *((unsigned __int8 *)v5 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, v17);
}

uint64_t topotext::Attachment::ByteSize(topotext::Attachment *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_70;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 5);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v9);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v3 = v10 + v6 + 1;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  int v17 = v3 + 5;
  if ((v2 & 4) == 0) {
    int v17 = v3;
  }
  if ((v2 & 8) != 0) {
    int v4 = v17 + 5;
  }
  else {
    int v4 = v17;
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v18 = *((void *)this + 8);
    int v19 = *(unsigned __int8 *)(v18 + 23);
    char v20 = v19;
    uint64_t v21 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      unint64_t v22 = *(unsigned __int8 *)(v18 + 23);
    }
    else {
      unint64_t v22 = v21;
    }
    if (v22 >= 0x80)
    {
      int v23 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v22);
      int v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v21 = *(void *)(v18 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v20 = *(unsigned char *)(v18 + 23);
    }
    else
    {
      int v23 = 1;
    }
    if (v20 < 0) {
      int v19 = v21;
    }
    v4 += v23 + v19 + 1;
    if ((v2 & 0x20) == 0)
    {
LABEL_31:
      if ((v2 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v24 = *((void *)this + 9);
  int v25 = *(unsigned __int8 *)(v24 + 23);
  char v26 = v25;
  uint64_t v27 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    unint64_t v28 = *(unsigned __int8 *)(v24 + 23);
  }
  else {
    unint64_t v28 = v27;
  }
  if (v28 >= 0x80)
  {
    int v29 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v28);
    int v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v27 = *(void *)(v24 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v26 = *(unsigned char *)(v24 + 23);
  }
  else
  {
    int v29 = 1;
  }
  if (v26 < 0) {
    int v25 = v27;
  }
  v4 += v29 + v25 + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_61;
  }
LABEL_52:
  uint64_t v30 = *((void *)this + 10);
  int v31 = *(unsigned __int8 *)(v30 + 23);
  char v32 = v31;
  uint64_t v33 = *(void *)(v30 + 8);
  if ((v31 & 0x80u) == 0) {
    unint64_t v34 = *(unsigned __int8 *)(v30 + 23);
  }
  else {
    unint64_t v34 = v33;
  }
  if (v34 >= 0x80)
  {
    int v35 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v34);
    int v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v33 = *(void *)(v30 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v32 = *(unsigned char *)(v30 + 23);
  }
  else
  {
    int v35 = 1;
  }
  if (v32 < 0) {
    int v31 = v33;
  }
  v4 += v35 + v31 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_61:
    uint64_t v36 = *((void *)this + 11);
    int v37 = *(unsigned __int8 *)(v36 + 23);
    char v38 = v37;
    uint64_t v39 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      unint64_t v40 = *(unsigned __int8 *)(v36 + 23);
    }
    else {
      unint64_t v40 = v39;
    }
    if (v40 >= 0x80)
    {
      int v41 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v40);
      int v37 = *(unsigned __int8 *)(v36 + 23);
      uint64_t v39 = *(void *)(v36 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v38 = *(unsigned char *)(v36 + 23);
    }
    else
    {
      int v41 = 1;
    }
    if (v38 < 0) {
      int v37 = v39;
    }
    v4 += v41 + v37 + 1;
  }
LABEL_70:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v42 = (topotext::Location *)*((void *)this + 12);
      if (!v42)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        int v42 = *(topotext::Location **)(topotext::Attachment::default_instance_ + 96);
      }
      int v43 = (google::protobuf::io::CodedOutputStream *)topotext::Location::ByteSize(v42);
      int v44 = (int)v43;
      if (v43 >= 0x80) {
        int v45 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      }
      else {
        int v45 = 1;
      }
      v4 += v44 + v45 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x200) != 0)
    {
      int v46 = (topotext::Media *)*((void *)this + 13);
      if (!v46)
      {
        topotext::protobuf_AddDesc_topotext_2eproto(0);
        int v46 = *(topotext::Media **)(topotext::Attachment::default_instance_ + 104);
      }
      char v47 = (google::protobuf::io::CodedOutputStream *)topotext::Media::ByteSize(v46);
      int v48 = (int)v47;
      if (v47 >= 0x80) {
        int v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47);
      }
      else {
        int v49 = 1;
      }
      v4 += v48 + v49 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    int v50 = v4 + 5;
    if ((v2 & 0x800) == 0) {
      int v50 = v4;
    }
    if ((v2 & 0x1000) != 0) {
      int v51 = v50 + 5;
    }
    else {
      int v51 = v50;
    }
    if ((v2 & 0x2000) != 0)
    {
      int v52 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v52 & 0x80000000) != 0)
      {
        int v53 = 10;
      }
      else if (v52 >= 0x80)
      {
        int v53 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52);
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v53 = 1;
      }
      v51 += v53 + 1;
    }
    int v54 = v51 + 10;
    if ((v2 & 0x4000) == 0) {
      int v54 = v51;
    }
    if ((v2 & 0x8000) != 0) {
      int v4 = v54 + 10;
    }
    else {
      int v4 = v54;
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      uint64_t v55 = *((void *)this + 21);
      int v56 = *(unsigned __int8 *)(v55 + 23);
      char v57 = v56;
      uint64_t v58 = *(void *)(v55 + 8);
      if ((v56 & 0x80u) == 0) {
        unint64_t v59 = *(unsigned __int8 *)(v55 + 23);
      }
      else {
        unint64_t v59 = v58;
      }
      if (v59 >= 0x80)
      {
        int v60 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v59);
        int v56 = *(unsigned __int8 *)(v55 + 23);
        uint64_t v58 = *(void *)(v55 + 8);
        int v2 = *((_DWORD *)this + 8);
        char v57 = *(unsigned char *)(v55 + 23);
      }
      else
      {
        int v60 = 1;
      }
      if (v57 < 0) {
        int v56 = v58;
      }
      v4 += v60 + v56 + 2;
    }
    if ((v2 & 0x20000) != 0) {
      int v61 = v4 + 3;
    }
    else {
      int v61 = v4;
    }
    if ((v2 & 0x40000) != 0)
    {
      v61 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 22)) + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 0x80000) != 0) {
      int v4 = v61 + 10;
    }
    else {
      int v4 = v61;
    }
    if ((v2 & 0x100000) != 0)
    {
      int v64 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
      if ((v64 & 0x80000000) != 0)
      {
        int v65 = 10;
      }
      else if (v64 >= 0x80)
      {
        int v65 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64);
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v65 = 1;
      }
      v4 += v65 + 2;
      if ((v2 & 0x200000) == 0)
      {
LABEL_123:
        if ((v2 & 0x800000) == 0) {
          goto LABEL_125;
        }
        goto LABEL_124;
      }
    }
    else if ((v2 & 0x200000) == 0)
    {
      goto LABEL_123;
    }
    uint64_t v100 = *((void *)this + 24);
    int v101 = *(unsigned __int8 *)(v100 + 23);
    char v102 = v101;
    uint64_t v103 = *(void *)(v100 + 8);
    if ((v101 & 0x80u) == 0) {
      unint64_t v104 = *(unsigned __int8 *)(v100 + 23);
    }
    else {
      unint64_t v104 = v103;
    }
    if (v104 >= 0x80)
    {
      int v105 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v104);
      int v101 = *(unsigned __int8 *)(v100 + 23);
      uint64_t v103 = *(void *)(v100 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v102 = *(unsigned char *)(v100 + 23);
    }
    else
    {
      int v105 = 1;
    }
    if (v102 < 0) {
      int v101 = v103;
    }
    v4 += v105 + v101 + 2;
    if ((v2 & 0x800000) != 0)
    {
LABEL_124:
      v4 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 28)) + 2;
      int v2 = *((_DWORD *)this + 8);
    }
  }
LABEL_125:
  if (HIBYTE(v2))
  {
    int v62 = v4 + 10;
    if ((v2 & 0x1000000) == 0) {
      int v62 = v4;
    }
    if ((v2 & 0x2000000) != 0) {
      v62 += 10;
    }
    if ((v2 & 0x4000000) != 0) {
      v62 += 10;
    }
    if ((v2 & 0x8000000) != 0) {
      v62 += 10;
    }
    if ((v2 & 0x10000000) != 0) {
      v62 += 10;
    }
    if ((v2 & 0x20000000) != 0) {
      v62 += 10;
    }
    if ((v2 & 0x40000000) != 0) {
      v62 += 10;
    }
    if (v2 >= 0) {
      int v4 = v62;
    }
    else {
      int v4 = v62 + 10;
    }
  }
  LOBYTE(v63) = *((unsigned char *)this + 36);
  if ((_BYTE)v63)
  {
    if (*((unsigned char *)this + 36))
    {
      uint64_t v66 = *((void *)this + 37);
      int v67 = *(unsigned __int8 *)(v66 + 23);
      char v68 = v67;
      uint64_t v69 = *(void *)(v66 + 8);
      if ((v67 & 0x80u) == 0) {
        unint64_t v70 = *(unsigned __int8 *)(v66 + 23);
      }
      else {
        unint64_t v70 = v69;
      }
      if (v70 >= 0x80)
      {
        int v71 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v70);
        int v67 = *(unsigned __int8 *)(v66 + 23);
        uint64_t v69 = *(void *)(v66 + 8);
        int v63 = *((_DWORD *)this + 9);
        char v68 = *(unsigned char *)(v66 + 23);
      }
      else
      {
        int v71 = 1;
      }
      if (v68 < 0) {
        int v67 = v69;
      }
      v4 += v71 + v67 + 2;
      if ((v63 & 2) == 0)
      {
LABEL_146:
        if ((v63 & 4) == 0) {
          goto LABEL_178;
        }
        goto LABEL_169;
      }
    }
    else if ((*((unsigned char *)this + 36) & 2) == 0)
    {
      goto LABEL_146;
    }
    uint64_t v72 = *((void *)this + 38);
    int v73 = *(unsigned __int8 *)(v72 + 23);
    char v74 = v73;
    uint64_t v75 = *(void *)(v72 + 8);
    if ((v73 & 0x80u) == 0) {
      unint64_t v76 = *(unsigned __int8 *)(v72 + 23);
    }
    else {
      unint64_t v76 = v75;
    }
    if (v76 >= 0x80)
    {
      int v77 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v76);
      int v73 = *(unsigned __int8 *)(v72 + 23);
      uint64_t v75 = *(void *)(v72 + 8);
      int v63 = *((_DWORD *)this + 9);
      char v74 = *(unsigned char *)(v72 + 23);
    }
    else
    {
      int v77 = 1;
    }
    if (v74 < 0) {
      int v73 = v75;
    }
    v4 += v77 + v73 + 2;
    if ((v63 & 4) != 0)
    {
LABEL_169:
      uint64_t v78 = *((void *)this + 39);
      int v79 = *(unsigned __int8 *)(v78 + 23);
      char v80 = v79;
      uint64_t v81 = *(void *)(v78 + 8);
      if ((v79 & 0x80u) == 0) {
        unint64_t v82 = *(unsigned __int8 *)(v78 + 23);
      }
      else {
        unint64_t v82 = v81;
      }
      if (v82 >= 0x80)
      {
        int v83 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v82);
        int v79 = *(unsigned __int8 *)(v78 + 23);
        uint64_t v81 = *(void *)(v78 + 8);
        char v80 = *(unsigned char *)(v78 + 23);
      }
      else
      {
        int v83 = 1;
      }
      if (v80 < 0) {
        int v79 = v81;
      }
      v4 += v83 + v79 + 2;
    }
  }
LABEL_178:
  int v84 = *((_DWORD *)this + 30);
  int v85 = v84 + v4;
  if (v84 >= 1)
  {
    int v86 = 0;
    do
    {
      id v87 = (topotext::PreviewImage *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)this + 112, v86);
      uint64_t v88 = (google::protobuf::io::CodedOutputStream *)topotext::PreviewImage::ByteSize(v87);
      int v89 = (int)v88;
      if (v88 >= 0x80) {
        int v90 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v88);
      }
      else {
        int v90 = 1;
      }
      v85 += v89 + v90;
      ++v86;
    }
    while (v86 < *((_DWORD *)this + 30));
  }
  int v91 = *((_DWORD *)this + 52);
  int v92 = v85 + 2 * v91;
  if (v91 >= 1)
  {
    int v93 = 0;
    do
    {
      int v94 = (topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)this + 200, v93);
      uint64_t v95 = (google::protobuf::io::CodedOutputStream *)topotext::Attachment::ByteSize(v94);
      int v96 = (int)v95;
      if (v95 >= 0x80) {
        int v97 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v95);
      }
      else {
        int v97 = 1;
      }
      v92 += v96 + v97;
      ++v93;
    }
    while (v93 < *((_DWORD *)this + 52));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v98 = *((void *)this + 2);
  }
  else {
    LODWORD(v9_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v92 + v98);
  *((_DWORD *)this + 81) = result;
  return result;
}

std::string *topotext::Attachment::CheckTypeAndMergeFrom(topotext::Attachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Attachment::MergeFrom(this, lpsrc);
}

std::string *topotext::Location::MergeFrom(topotext::Location *this, const topotext::Location *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 5768);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)a2 + 32) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_17:
    uint64_t v15 = *((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 6) = v15;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  uint64_t v14 = *((void *)a2 + 5);
  *((_DWORD *)this + 8) |= 1u;
  *((void *)this + 5) = v14;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_18:
  int v16 = (const std::string *)*((void *)a2 + 7);
  *((_DWORD *)this + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  int v17 = (std::string *)*((void *)this + 7);
  if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v17, v16);
  if ((*((_DWORD *)a2 + 8) & 8) != 0)
  {
LABEL_8:
    char v6 = *((unsigned char *)a2 + 64);
    *((_DWORD *)this + 8) |= 8u;
    *((unsigned char *)this + 64) = v6;
  }
LABEL_9:
  unint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  char v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BB7D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *topotext::Media::MergeFrom(topotext::Media *this, const topotext::Media *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 6118);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      char v6 = (const std::string *)*((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      char v7 = (std::string *)*((void *)this + 5);
      if (v7 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      unint64_t v9 = (std::string *)*((void *)this + 6);
      if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      int v10 = (const std::string *)*((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v11 = (std::string *)*((void *)this + 7);
      if (v11 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v11, v10);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      std::string::size_type v12 = (const std::string *)*((void *)a2 + 8);
      *((_DWORD *)this + 8) |= 8u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      char v13 = (std::string *)*((void *)this + 8);
      if (v13 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v13, v12);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 0x10) != 0)
    {
      uint64_t v14 = *((void *)a2 + 9);
      *((_DWORD *)this + 8) |= 0x10u;
      *((void *)this + 9) = v14;
    }
  }
  int v17 = (const std::string::value_type *)*((void *)a2 + 1);
  int v16 = (char *)a2 + 8;
  uint64_t v15 = v17;
  int v18 = v16[23];
  if (v18 >= 0) {
    int v19 = v16;
  }
  else {
    int v19 = v15;
  }
  if (v18 >= 0) {
    std::string::size_type v20 = v16[23];
  }
  else {
    std::string::size_type v20 = *((void *)v16 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v19, v20);
}

void sub_1B9BB7F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Attachment::IsInitialized(topotext::Attachment *this)
{
  return 1;
}

void *topotext::Attachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Attachment");
}

topotext::Location *topotext::Location::Location(topotext::Location *this)
{
  *(void *)this = &unk_1F1338480;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Location::SharedCtor(this);
  return this;
}

void sub_1B9BB8018(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::Location::SharedCtor(topotext::Location *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 36) = 0;
  *((_DWORD *)this + 13) = 0;
  *((void *)this + 7) = v3;
  *((unsigned char *)this + 64) = 0;
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
}

void sub_1B9BB80F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::Location::~Location(void **this)
{
  *this = &unk_1F1338480;
  topotext::Location::SharedDtor((topotext::Location *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Location::~Location(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Location::SharedDtor(topotext::Location *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 7);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (topotext::Location *)MEMORY[0x1BA9DB510](v1, 0x1012C40EC159624);
  }

  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::Location::New(topotext::Location *this)
{
}

void sub_1B9BB8264(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C4099D76EF7);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::MergePartialFromCodedStream(topotext::Location *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v22, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21, (google::protobuf::io::ZeroCopyOutputStream *)v22);
  while (2)
  {
    while (1)
    {
      char v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_48:
        uint64_t v19 = 1;
        goto LABEL_49;
      }
LABEL_25:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v21, v4))goto LABEL_47; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 9) {
          goto LABEL_23;
        }
        unint64_t v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23)) {
          goto LABEL_47;
        }
        *((void *)this + 5) = v23;
        *((_DWORD *)this + 8) |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_27:
        unint64_t v23 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v23)) {
          goto LABEL_47;
        }
        *((void *)this + 6) = v23;
        int v11 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v11;
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_31:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v11 | 4;
        if (!google::protobuf::internal::empty_string_) {
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        }
        uint64_t v15 = (std::string *)*((void *)this + 7);
        if (v15 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v15)) {
          goto LABEL_47;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v12 || *v16 != 32) {
          continue;
        }
        char v13 = v16 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_38;
      case 2u:
        if (v7 != 17) {
          goto LABEL_23;
        }
        goto LABEL_27;
      case 3u:
        if (v7 != 26) {
          goto LABEL_23;
        }
        int v11 = *((_DWORD *)this + 8);
        goto LABEL_31;
      case 4u:
        if (v7 != 32)
        {
LABEL_23:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_48;
          }
          goto LABEL_25;
        }
        char v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_38:
        unint64_t v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v23))
          {
LABEL_47:
            uint64_t v19 = 0;
            goto LABEL_49;
          }
          unint64_t v17 = v23;
          int v18 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v17 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v18;
        }
        *((unsigned char *)this + 64) = v17 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v18 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v19 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_49:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v21);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v22);
        return v19;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1B9BB8598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Location::SerializeWithCachedSizes(topotext::Location *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *((double *)this + 5), a3);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, *((double *)this + 6), a3);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 7), a2);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)4, *((unsigned __int8 *)this + 64), a2, a4);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Location::ByteSize(topotext::Location *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if ((v2 & 2) != 0) {
      int v3 = ((v2 << 31 >> 31) & 9) + 9;
    }
    else {
      int v3 = (v2 << 31 >> 31) & 9;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *((void *)this + 7);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v2 = *((_DWORD *)this + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      v3 += v9 + v5 + 1;
    }
    if ((v2 & 8) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v10 = *((void *)this + 2);
  }
  else {
    LODWORD(v10) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v10);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Location::CheckTypeAndMergeFrom(topotext::Location *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Location::MergeFrom(this, lpsrc);
}

uint64_t topotext::Location::IsInitialized(topotext::Location *this)
{
  return 1;
}

void *topotext::Location::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Location");
}

topotext::Media *topotext::Media::Media(topotext::Media *this)
{
  *(void *)this = &unk_1F1338318;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Media::SharedCtor(this);
  return this;
}

void sub_1B9BB8850(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::Media::SharedCtor(topotext::Media *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 5) = google::protobuf::internal::empty_string_;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = v3;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = v3;
  *((void *)this + 9) = 0;
  *((void *)this + 4) = 0;
}

void sub_1B9BB8924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::Media::~Media(void **this)
{
  *this = &unk_1F1338318;
  topotext::Media::SharedDtor((topotext::Media *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Media::~Media(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Media::SharedDtor(topotext::Media *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::Media *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 6);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::Media *)MEMORY[0x1BA9DB510](v3, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
  }
  if (!v2) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v5 = *((void *)v1 + 7);
  if (v5 != v2 && v5)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (topotext::Media *)MEMORY[0x1BA9DB510](v5, 0x1012C40EC159624);
    uint64_t v2 = google::protobuf::internal::empty_string_;
    if (!google::protobuf::internal::empty_string_) {
      replica_manager::ReplicaManager::SharedCtor();
    }
  }
  uint64_t v6 = *((void *)v1 + 8);
  if (v6 != v2 && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    this = (topotext::Media *)MEMORY[0x1BA9DB510](v6, 0x1012C40EC159624);
  }

  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::Media::New(topotext::Media *this)
{
}

void sub_1B9BB8B70(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40DF275E33);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::MergePartialFromCodedStream(topotext::Media *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v25, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24, (google::protobuf::io::ZeroCopyOutputStream *)v25);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_15:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_63:
        uint64_t v22 = 1;
        goto LABEL_64;
      }
LABEL_30:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v24, v4))goto LABEL_62; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 8) |= 1u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        int v9 = (std::string *)*((void *)this + 5);
        if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9)) {
          goto LABEL_62;
        }
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        uint64_t v14 = (std::string *)*((void *)this + 6);
        if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v14)) {
          goto LABEL_62;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_39:
        *((_DWORD *)this + 8) |= 4u;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_65;
        }
        int v16 = (std::string *)*((void *)this + 7);
        if (v16 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v16)) {
          goto LABEL_62;
        }
        unint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_46:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_65:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        int v18 = (std::string *)*((void *)this + 8);
        if (v18 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v18)) {
          goto LABEL_62;
        }
        uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v12 || *v19 != 40) {
          continue;
        }
        char v13 = v19 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_53;
      case 2u:
        if (v7 != 18) {
          goto LABEL_28;
        }
        goto LABEL_32;
      case 3u:
        if (v7 == 26) {
          goto LABEL_39;
        }
        goto LABEL_28;
      case 4u:
        if (v7 == 34) {
          goto LABEL_46;
        }
        goto LABEL_28;
      case 5u:
        if (v7 != 40)
        {
LABEL_28:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_63;
          }
          goto LABEL_30;
        }
        char v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_53:
        unint64_t v26 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v26))
          {
LABEL_62:
            uint64_t v22 = 0;
            goto LABEL_64;
          }
          unint64_t v20 = v26;
          uint64_t v21 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v20 = *v13;
          uint64_t v21 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v21;
        }
        *((void *)this + 9) = v20;
        *((_DWORD *)this + 8) |= 0x10u;
        if (v21 != (unsigned __int8 *)v12 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v22 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_64:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v24);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v25);
        return v22;
      default:
        goto LABEL_15;
    }
  }
}

void sub_1B9BB8F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Media::SerializeWithCachedSizes(topotext::Media *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2, *((void *)this + 6), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 7), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_12:
  google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 8), a2);
  if ((*((_DWORD *)this + 8) & 0x10) != 0) {
LABEL_6:
  }
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)5, *((void *)this + 9), a2, a4);
LABEL_7:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Media::ByteSize(topotext::Media *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_28;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  int v3 = v9 + v5;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 6);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    v3 += v16 + v12 + 1;
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v19 = *((void *)this + 7);
    int v20 = *(unsigned __int8 *)(v19 + 23);
    char v21 = v20;
    uint64_t v22 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      unint64_t v23 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      unint64_t v23 = v22;
    }
    if (v23 >= 0x80)
    {
      int v24 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v23);
      int v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v22 = *(void *)(v19 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v21 = *(unsigned char *)(v19 + 23);
    }
    else
    {
      int v24 = 1;
    }
    if (v21 < 0) {
      int v20 = v22;
    }
    v3 += v24 + v20 + 1;
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v25 = *((void *)this + 8);
  int v26 = *(unsigned __int8 *)(v25 + 23);
  char v27 = v26;
  uint64_t v28 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    unint64_t v29 = *(unsigned __int8 *)(v25 + 23);
  }
  else {
    unint64_t v29 = v28;
  }
  if (v29 >= 0x80)
  {
    int v30 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v29);
    int v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v28 = *(void *)(v25 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v27 = *(unsigned char *)(v25 + 23);
  }
  else
  {
    int v30 = 1;
  }
  if (v27 < 0) {
    int v26 = v28;
  }
  v3 += v30 + v26 + 1;
  if ((v2 & 0x10) != 0) {
LABEL_27:
  }
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 9)) + 1;
LABEL_28:
  if (*((char *)this + 31) < 0) {
    uint64_t v17 = *((void *)this + 2);
  }
  else {
    LODWORD(v17) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v17);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Media::CheckTypeAndMergeFrom(topotext::Media *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Media::MergeFrom(this, lpsrc);
}

uint64_t topotext::Media::IsInitialized(topotext::Media *this)
{
  return 1;
}

void *topotext::Media::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Media");
}

topotext::PreviewImage *topotext::PreviewImage::PreviewImage(topotext::PreviewImage *this)
{
  *(void *)this = &unk_1F1337E68;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::PreviewImage::SharedCtor(this);
  return this;
}

void sub_1B9BB9360(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::SharedCtor(topotext::PreviewImage *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((_DWORD *)this + 12) = 0;
  *((_WORD *)this + 26) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 7) = v3;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
}

void sub_1B9BB9438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *topotext::PreviewImage::MergeFrom(topotext::PreviewImage *this, const topotext::PreviewImage *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/topotext.pb.cc", 6525);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    goto LABEL_12;
  }
  if (*((unsigned char *)a2 + 32))
  {
    int v14 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 12) = v14;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v15 = *((unsigned char *)a2 + 52);
  *((_DWORD *)this + 8) |= 2u;
  *((unsigned char *)this + 52) = v15;
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v16 = (const std::string *)*((void *)a2 + 5);
  *((_DWORD *)this + 8) |= 4u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v17 = (std::string *)*((void *)this + 5);
  if (v17 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_29:
    int v20 = *((_DWORD *)a2 + 18);
    *((_DWORD *)this + 8) |= 0x10u;
    *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v20;
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_25:
  int v18 = (const std::string *)*((void *)a2 + 7);
  *((_DWORD *)this + 8) |= 8u;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v19 = (std::string *)*((void *)this + 7);
  if (v19 == (std::string *)google::protobuf::internal::empty_string_) {
    operator new();
  }
  std::string::operator=(v19, v18);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_30:
  char v21 = *((unsigned char *)a2 + 53);
  *((_DWORD *)this + 8) |= 0x20u;
  *((unsigned char *)this + 53) = v21;
  if ((*((_DWORD *)a2 + 8) & 0x40) != 0)
  {
LABEL_11:
    uint64_t v6 = *((void *)a2 + 8);
    *((_DWORD *)this + 8) |= 0x40u;
    *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = v6;
  }
LABEL_12:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  unint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BB965C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::PreviewImage::~PreviewImage(void **this)
{
  *this = &unk_1F1337E68;
  topotext::PreviewImage::SharedDtor((topotext::PreviewImage *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::PreviewImage::~PreviewImage(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::PreviewImage::SharedDtor(topotext::PreviewImage *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 5);
  if (v2 != google::protobuf::internal::empty_string_)
  {
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = (topotext::PreviewImage *)MEMORY[0x1BA9DB510](v2, 0x1012C40EC159624);
      uint64_t v2 = google::protobuf::internal::empty_string_;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
    }
    else
    {
      uint64_t v2 = google::protobuf::internal::empty_string_;
    }
  }
  uint64_t v3 = *((void *)v1 + 7);
  if (v3 != v2 && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    this = (topotext::PreviewImage *)MEMORY[0x1BA9DB510](v3, 0x1012C40EC159624);
  }

  topotext::protobuf_AddDesc_topotext_2eproto(this);
}

void topotext::PreviewImage::New(topotext::PreviewImage *this)
{
}

void sub_1B9BB9824(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C4044015001);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 0x7F) != 0)
  {
    *(_WORD *)(this + 52) = 0;
    *(_DWORD *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 64) = 0;
    *(_DWORD *)(this + 72) = 0;
    if ((v1 & 4) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 40);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 8) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v3 = *(void *)(this + 56);
      if (v3 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t topotext::PreviewImage::MergePartialFromCodedStream(topotext::PreviewImage *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v33, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32, (google::protobuf::io::ZeroCopyOutputStream *)v33);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v12 = (v7 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_81:
        uint64_t v30 = 1;
        goto LABEL_83;
      }
LABEL_34:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v32, v4))goto LABEL_82; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_32;
        }
        v34[0] = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v34)) {
          goto LABEL_82;
        }
        *((_DWORD *)this + 12) = v34[0];
        *((_DWORD *)this + 8) |= 1u;
        int v10 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 16) {
          continue;
        }
        uint64_t v11 = v10 + 1;
        *((void *)a2 + 1) = v11;
LABEL_26:
        *(void *)unint64_t v34 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v34)) {
            goto LABEL_82;
          }
          uint64_t v16 = *(void *)v34;
          uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v16 = *v11;
          uint64_t v17 = v11 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((unsigned char *)this + 52) = v16 != 0;
        int v15 = *((_DWORD *)this + 8) | 2;
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15;
        if ((unint64_t)v17 >= v9 || *v17 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_42:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v15 | 4;
        if (!google::protobuf::internal::empty_string_) {
          goto LABEL_84;
        }
        int v20 = (std::string *)*((void *)this + 5);
        if (v20 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v20)) {
          goto LABEL_82;
        }
        char v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_49:
        *((_DWORD *)this + 8) |= 8u;
        if (!google::protobuf::internal::empty_string_) {
LABEL_84:
        }
          __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
        char v22 = (std::string *)*((void *)this + 7);
        if (v22 == (std::string *)google::protobuf::internal::empty_string_) {
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v22)) {
          goto LABEL_82;
        }
        unint64_t v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v13 || *v23 != 40) {
          continue;
        }
        int v14 = v23 + 1;
        *((void *)a2 + 1) = v14;
LABEL_56:
        v34[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v34)) {
            goto LABEL_82;
          }
          unsigned int v24 = v34[0];
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v14;
          uint64_t v25 = v14 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = v24;
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v25 >= v13 || *v25 != 48) {
          continue;
        }
        int v18 = v25 + 1;
        *((void *)a2 + 1) = v18;
LABEL_64:
        *(void *)unint64_t v34 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v34)) {
            goto LABEL_82;
          }
          uint64_t v26 = *(void *)v34;
          char v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v26 = *v18;
          char v27 = v18 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((unsigned char *)this + 53) = v26 != 0;
        *((_DWORD *)this + 8) |= 0x20u;
        if ((unint64_t)v27 >= v13 || *v27 != 56) {
          continue;
        }
        uint64_t v19 = v27 + 1;
        *((void *)a2 + 1) = v19;
        goto LABEL_72;
      case 2u:
        if (v7 != 16) {
          goto LABEL_32;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_26;
      case 3u:
        if (v7 != 26) {
          goto LABEL_32;
        }
        int v15 = *((_DWORD *)this + 8);
        goto LABEL_42;
      case 4u:
        if (v7 == 34) {
          goto LABEL_49;
        }
        goto LABEL_32;
      case 5u:
        if (v7 != 40) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_56;
      case 6u:
        if (v7 != 48) {
          goto LABEL_32;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_64;
      case 7u:
        if (v7 != 56)
        {
LABEL_32:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_81;
          }
          goto LABEL_34;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
LABEL_72:
        *(void *)unint64_t v34 = 0;
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v34))
          {
LABEL_82:
            uint64_t v30 = 0;
            goto LABEL_83;
          }
          uint64_t v28 = *(void *)v34;
          unint64_t v29 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          uint64_t v28 = *v19;
          unint64_t v29 = (unsigned __int8 *)(v19 + 1);
          *((void *)a2 + 1) = v29;
        }
        *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = v28;
        *((_DWORD *)this + 8) |= 0x40u;
        if (v29 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v30 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_83:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v33);
        return v30;
      default:
        goto LABEL_12;
    }
  }
}

void sub_1B9BB9DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::PreviewImage::SerializeWithCachedSizes(topotext::PreviewImage *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 12), a3);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 52), a2, a4);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(3, *((void *)this + 5), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(4, *((void *)this + 7), a2);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)5, *((_DWORD *)this + 18), a2, a4);
  int v6 = *((_DWORD *)this + 8);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_16:
  google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((unsigned __int8 *)this + 53), a2, a4);
  if ((*((_DWORD *)this + 8) & 0x40) != 0) {
LABEL_8:
  }
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)7, *((void *)this + 8), a2, a4);
LABEL_9:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::PreviewImage::ByteSize(topotext::PreviewImage *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (!*((unsigned char *)this + 32))
  {
    int v3 = 0;
    goto LABEL_35;
  }
  int v3 = (v2 << 31 >> 31) & 5 | v2 & 2;
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    uint64_t v10 = *((void *)this + 7);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v14);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v2 = *((_DWORD *)this + 8);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    v3 += v15 + v11 + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v4 = *((void *)this + 5);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v2 = *((_DWORD *)this + 8);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 1;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  v3 += v9 + v5 + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_4:
  if ((v2 & 0x10) != 0)
  {
LABEL_25:
    uint64_t v16 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v17 = 2;
    }
    v3 += v17;
  }
LABEL_31:
  if ((v2 & 0x20) != 0) {
    v3 += 2;
  }
  if ((v2 & 0x40) != 0) {
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 8)) + 1;
  }
LABEL_35:
  if (*((char *)this + 31) < 0) {
    uint64_t v18 = *((void *)this + 2);
  }
  else {
    LODWORD(v1_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v18);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::PreviewImage::CheckTypeAndMergeFrom(topotext::PreviewImage *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::PreviewImage::MergeFrom(this, lpsrc);
}

uint64_t topotext::PreviewImage::IsInitialized(topotext::PreviewImage *this)
{
  return 1;
}

void *topotext::PreviewImage::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.PreviewImage");
}

topotext::Todo *topotext::Todo::Todo(topotext::Todo *this)
{
  *(void *)this = &unk_1F1338228;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  topotext::Todo::SharedCtor(this);
  return this;
}

void sub_1B9BBA19C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void topotext::Todo::SharedCtor(topotext::Todo *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((void *)this + 5) = v3;
  *((unsigned char *)this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
}

void sub_1B9BBA268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void topotext::Todo::~Todo(void **this)
{
  *this = &unk_1F1338228;
  topotext::VectorTimestamp_Clock::SharedDtor((topotext::VectorTimestamp_Clock *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Todo::~Todo(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Todo::New(topotext::Todo *this)
{
}

void sub_1B9BBA360(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40417120EDLL);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::MergePartialFromCodedStream(topotext::Todo *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 16)
        {
          char v12 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_27;
        }
LABEL_23:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_36;
        }
        goto LABEL_20;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_16:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
LABEL_36:
        uint64_t v16 = 1;
        goto LABEL_38;
      }
LABEL_20:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_37; {
    }
      }
    if (v7 != 10) {
      goto LABEL_23;
    }
    *((_DWORD *)this + 8) |= 1u;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    int v9 = (std::string *)*((void *)this + 5);
    if (v9 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v9)) {
      break;
    }
    int v11 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v11 < v10 && *v11 == 16)
    {
      char v12 = v11 + 1;
      *((void *)a2 + 1) = v12;
LABEL_27:
      unint64_t v20 = 0;
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
          break;
        }
        unint64_t v14 = v20;
        int v15 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        unint64_t v14 = *v12;
        int v15 = (unsigned __int8 *)(v12 + 1);
        *((void *)a2 + 1) = v15;
      }
      *((unsigned char *)this + 4_Block_object_dispose(&STACK[0x260], 8) = v14 != 0;
      *((_DWORD *)this + 8) |= 2u;
      if (v15 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v16 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
  }
LABEL_37:
  uint64_t v16 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1B9BBA5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Todo::SerializeWithCachedSizes(topotext::Todo *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)2, *((unsigned __int8 *)this + 48), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t topotext::Todo::ByteSize(topotext::Todo *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if (v2)
    {
      uint64_t v4 = *((void *)this + 5);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v9 = v10 + 1;
        int v2 = *((_DWORD *)this + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 2;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      int v3 = v9 + v5;
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *topotext::Todo::CheckTypeAndMergeFrom(topotext::Todo *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Todo::MergeFrom(this, lpsrc);
}

uint64_t topotext::Todo::IsInitialized(topotext::Todo *this)
{
  return 1;
}

void *topotext::Todo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Todo");
}

void topotext::Color::~Color(void **this)
{
  *this = &unk_1F13382A0;
  topotext::protobuf_AddDesc_topotext_2eproto((topotext *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  topotext::Color::~Color(this);

  JUMPOUT(0x1BA9DB510);
}

void topotext::Color::New(topotext::Color *this)
{
}

uint64_t topotext::Color::MergePartialFromCodedStream(topotext::Color *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v16, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15, (google::protobuf::io::ZeroCopyOutputStream *)v16);
  while (2)
  {
    while (1)
    {
      int v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_12:
      if (v7) {
        BOOL v10 = (v7 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
LABEL_39:
        uint64_t v13 = 1;
        goto LABEL_40;
      }
LABEL_31:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v15, v4))
      {
LABEL_38:
        uint64_t v13 = 0;
        goto LABEL_40;
      }
    }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 13) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 10) = v17;
        *((_DWORD *)this + 8) |= 1u;
        int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 11) = v17;
        *((_DWORD *)this + 8) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 12) = v17;
        *((_DWORD *)this + 8) |= 4u;
        char v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_33:
        unsigned int v17 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v17)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 13) = v17;
        *((_DWORD *)this + 8) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v13 = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        if (v7 == 21) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 3u:
        if (v7 == 29) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 4u:
        if (v7 == 37) {
          goto LABEL_33;
        }
LABEL_29:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_31;
        }
        goto LABEL_39;
      default:
        goto LABEL_12;
    }
    break;
  }
LABEL_40:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v15);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v16);
  return v13;
}

void sub_1B9BBAB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t topotext::Color::SerializeWithCachedSizes(topotext::Color *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)1, a2, *((float *)this + 10), a3);
    int v5 = *((_DWORD *)this + 8);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)2, a2, *((float *)this + 11), a3);
  int v5 = *((_DWORD *)this + 8);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)3, a2, *((float *)this + 12), a3);
  if ((*((_DWORD *)this + 8) & 8) != 0) {
LABEL_5:
  }
    google::protobuf::internal::WireFormatLite::WriteFloat((google::protobuf::internal::WireFormatLite *)4, a2, *((float *)this + 13), a3);
LABEL_6:
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t topotext::Color::ByteSize(topotext::Color *this)
{
  int v1 = *((unsigned __int8 *)this + 32);
  int v2 = (v1 << 31 >> 31) & 5;
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if (*((unsigned char *)this + 32)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t v5 = (v3 + v4);
  *((_DWORD *)this + 9) = v5;
  return v5;
}

std::string *topotext::Color::CheckTypeAndMergeFrom(topotext::Color *this, const google::protobuf::MessageLite *lpsrc)
{
  return topotext::Color::MergeFrom(this, lpsrc);
}

uint64_t topotext::Color::IsInitialized(topotext::Color *this)
{
  return 1;
}

void *topotext::Color::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "topotext.Color");
}

uint64_t topotext::String::GetCachedSize(topotext::String *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock_ReplicaClock::GetCachedSize(topotext::VectorTimestamp_Clock_ReplicaClock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp_Clock::GetCachedSize(topotext::VectorTimestamp_Clock *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::VectorTimestamp::GetCachedSize(topotext::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::CharID::GetCachedSize(topotext::CharID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Substring::GetCachedSize(topotext::Substring *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection_Range::GetCachedSize(topotext::Selection_Range *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Selection::GetCachedSize(topotext::Selection *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttributeRun::GetCachedSize(topotext::AttributeRun *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Font::GetCachedSize(topotext::Font *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::ParagraphStyle::GetCachedSize(topotext::ParagraphStyle *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::HashtagInfo::GetCachedSize(topotext::HashtagInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::AttachmentInfo::GetCachedSize(topotext::AttachmentInfo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Attachment::GetCachedSize(topotext::Attachment *this)
{
  return *((unsigned int *)this + 81);
}

uint64_t topotext::Location::GetCachedSize(topotext::Location *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Media::GetCachedSize(topotext::Media *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::PreviewImage::GetCachedSize(topotext::PreviewImage *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Todo::GetCachedSize(topotext::Todo *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t topotext::Color::GetCachedSize(topotext::Color *this)
{
  return *((unsigned int *)this + 9);
}

void sub_1B9BBAE10(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40BCC55259);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New()
{
}

void sub_1B9BBAE74(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40207117CFLL);
  _Unwind_Resume(a1);
}

void sub_1B9BBAF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BBB030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BBB10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BBB1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BBB248(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C40E3C8ABF7);
  _Unwind_Resume(a1);
}

void sub_1B9BBB328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BBB404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BBB4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New()
{
}

void sub_1B9BBB540(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C4044015001);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BBB620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::Substring *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Substring>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Substring::MergeFrom(*(topotext::Substring **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBB7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::AttributeRun *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::AttributeRun>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::AttributeRun>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::AttributeRun::MergeFrom(*(topotext::AttributeRun **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBB8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::Attachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Attachment>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::Attachment>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Attachment::MergeFrom(*(topotext::Attachment **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBBA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::VectorTimestamp_Clock_ReplicaClock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock_ReplicaClock>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::VectorTimestamp_Clock_ReplicaClock::MergeFrom(*(topotext::VectorTimestamp_Clock_ReplicaClock **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBBBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::VectorTimestamp_Clock *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::VectorTimestamp_Clock>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::VectorTimestamp_Clock>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::VectorTimestamp_Clock::MergeFrom(*(topotext::VectorTimestamp_Clock **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBBCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::Selection_Range *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::Selection_Range>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::Selection_Range::MergeFrom(*(topotext::Selection_Range **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBBE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const topotext::PreviewImage *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<topotext::PreviewImage>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<topotext::PreviewImage>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)topotext::PreviewImage::MergeFrom(*(topotext::PreviewImage **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BBBFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void topotext::Selection::MergeFrom()
{
}

void topotext::AttributeRun::MergeFrom()
{
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  if ((int)a2 > 2006001)
  {
    int v21 = 3;
    char v22 = "/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc";
    int v23 = 61;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString(a2, &v18);
    if ((v20 & 0x80u) == 0) {
      char v7 = (const std::string::value_type *)&v18;
    }
    else {
      char v7 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v8 = v20;
    }
    else {
      std::string::size_type v8 = v19;
    }
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v10 = v17;
    }
    else {
      std::string::size_type v10 = v16;
    }
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  if ((int)this < 2006000)
  {
    int v21 = 3;
    char v22 = "/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc";
    int v23 = 72;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString(this, &v18);
    if ((v20 & 0x80u) == 0) {
      char v11 = (const std::string::value_type *)&v18;
    }
    else {
      char v11 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v12 = v20;
    }
    else {
      std::string::size_type v12 = v19;
    }
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 2, 6, 1);
    char v26 = 0;
    std::string::basic_string[abi:ne180100]<0>(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      uint64_t v13 = (const std::string::value_type *)&__p;
    }
    else {
      uint64_t v13 = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v14 = v17;
    }
    else {
      std::string::size_type v14 = v16;
    }
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1B9BBC328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + _Block_object_dispose(&STACK[0x260], 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  int v3 = a1 + 1;
  uint64_t v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    uint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    uint64_t v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  char __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

void google::protobuf::internal::LogFinisher::operator=(uint64_t a1, google::protobuf::internal::LogMessage *a2)
{
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::DefaultLogHandler(int a1, const char *a2, int a3, uint64_t a4)
{
  uint64_t v4 = (FILE **)MEMORY[0x1E4F143C8];
  if (*(char *)(a4 + 23) >= 0) {
    uint64_t v5 = (const char *)a4;
  }
  else {
    uint64_t v5 = *(const char **)a4;
  }
  fprintf((FILE *)*MEMORY[0x1E4F143C8], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[a1], a2, a3, v5);
  int v6 = *v4;

  return fflush(v6);
}

uint64_t google::protobuf::internal::DeleteLogSilencerCount(google::protobuf::internal *this)
{
  uint64_t result = google::protobuf::internal::log_silencer_count_mutex_;
  if (google::protobuf::internal::log_silencer_count_mutex_)
  {
    google::protobuf::internal::Mutex::~Mutex((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    uint64_t result = MEMORY[0x1BA9DB510]();
  }
  google::protobuf::internal::log_silencer_count_mutex_ = 0;
  return result;
}

void google::protobuf::internal::InitLogSilencerCount(google::protobuf::internal *this)
{
}

void sub_1B9BBC668(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::OnShutdown(google::protobuf::internal *this, void (*a2)(void))
{
  uint64_t v3 = google::protobuf::internal::shutdown_functions_init;
  __dmb(0xBu);
  if (v3 != 2)
  {
    v19[0] = &unk_1F1337CD8;
    v19[1] = google::protobuf::internal::InitShutdownFunctions;
    char v20 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::shutdown_functions_init, (uint64_t)v19);
  }
  uint64_t v4 = (pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex;
  google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex);
  uint64_t v5 = (void **)google::protobuf::internal::shutdown_functions;
  int v6 = *(void **)(google::protobuf::internal::shutdown_functions + 8);
  unint64_t v7 = *(void *)(google::protobuf::internal::shutdown_functions + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = ((uint64_t)v6 - *(void *)google::protobuf::internal::shutdown_functions) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      std::vector<void (*)(void)>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v7 - *(void *)google::protobuf::internal::shutdown_functions;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CRDT::Document_DocObject *>>(google::protobuf::internal::shutdown_functions + 16, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    std::string::size_type v14 = &v13[8 * v9];
    int v15 = &v13[8 * v12];
    *(void *)std::string::size_type v14 = this;
    std::string::size_type v8 = v14 + 8;
    unsigned __int8 v17 = (char *)*v5;
    std::string::size_type v16 = (char *)v5[1];
    if (v16 != *v5)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      std::string::size_type v16 = (char *)*v5;
    }
    const char *v5 = v14;
    v5[1] = v8;
    void v5[2] = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    void *v6 = this;
    std::string::size_type v8 = v6 + 1;
  }
  v5[1] = v8;
  google::protobuf::internal::Mutex::Unlock(v4);
}

void sub_1B9BBC7E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::Mutex::Unlock(v1);
  _Unwind_Resume(a1);
}

atomic_ullong *google::protobuf::internal::InitLogSilencerCountOnce(google::protobuf::internal *this)
{
  uint64_t v1 = google::protobuf::internal::log_silencer_count_init_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitLogSilencerCount;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::log_silencer_count_init_, (uint64_t)v3);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  if (*(_DWORD *)this == 3)
  {
    int v2 = 3;
  }
  else
  {
    google::protobuf::internal::InitLogSilencerCountOnce(this);
    uint64_t v3 = (pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_;
    google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    int v4 = google::protobuf::internal::log_silencer_count_;
    google::protobuf::internal::Mutex::Unlock(v3);
    if (v4 > 0) {
      goto LABEL_6;
    }
    int v2 = *(_DWORD *)this;
  }
  google::protobuf::internal::log_handler_(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
LABEL_6:
  if (*(_DWORD *)this == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, *((void *)this + 1), *((unsigned int *)this + 4), (char *)this + 24);
  }
}

void sub_1B9BBC9C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::FunctionClosure0::~FunctionClosure0(google::protobuf::internal::FunctionClosure0 *this)
{
}

void google::protobuf::internal::Mutex::~Mutex(pthread_mutex_t **this)
{
  if (*this) {
    MEMORY[0x1BA9DB510](*this, 0x1000C40FA0F61DDLL);
  }
}

void google::protobuf::internal::Mutex::Lock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_lock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc";
    int v6 = 304;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_lock: ");
    uint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1B9BBCAE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::Mutex::Unlock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_unlock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/stubs/common.cc";
    int v6 = 311;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_unlock: ");
    uint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1B9BBCBA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::InitShutdownFunctions(google::protobuf::internal *this)
{
}

void sub_1B9BBCC4C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F1337C20;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }

  std::exception::~exception(this);
}

{
  uint64_t vars8;

  google::protobuf::FatalException::~FatalException(this);

  JUMPOUT(0x1BA9DB510);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t google::protobuf::internal::FunctionClosure0::Run(uint64_t (**this)(void))
{
  int v2 = *((unsigned __int8 *)this + 16);
  uint64_t result = this[1]();
  if (this && v2)
  {
    int v4 = (uint64_t (*)(uint64_t (**)(void)))*((void *)*this + 1);
    return v4(this);
  }
  return result;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_1F1337C20;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x260], 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1B9BBCE04(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    std::string::size_type v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

void std::vector<void (*)(void)>::__throw_length_error[abi:ne180100]()
{
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*(void *)this) {
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(this);
  }
  if (*((_DWORD *)this + 13) == -2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc", 78);
    int v2 = google::protobuf::internal::LogMessage::operator<<(v5, "The total number of bytes read was ");
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 6));
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
}

_DWORD *google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(_DWORD *this)
{
  if (this[7] + this[11] + this[4] - this[2] >= 1)
  {
    uint64_t v1 = this;
    this = (_DWORD *)(*(uint64_t (**)(void))(**(void **)this + 24))(*(void *)this);
    uint64_t v2 = *((void *)v1 + 1);
    unsigned int v3 = v1[6] - v1[11] + v2 - v1[4];
    *((void *)v1 + 2) = v2;
    v1[11] = 0;
    *((void *)v1 + 3) = v3;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::PushLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  int v2 = *((_DWORD *)this + 6);
  uint64_t v3 = *((void *)this + 2);
  uint64_t v4 = *((unsigned int *)this + 10);
  uint64_t v5 = *((int *)this + 11);
  int v6 = v2 - v5 + *((_DWORD *)this + 2) - v3;
  BOOL v7 = (v6 ^ 0x7FFFFFFF) < a2 || a2 < 0;
  int v8 = v6 + a2;
  if (v7) {
    int v8 = 0x7FFFFFFF;
  }
  if ((int)v4 < v8) {
    int v8 = *((_DWORD *)this + 10);
  }
  *((_DWORD *)this + 10) = v8;
  uint64_t v9 = v3 + v5;
  *((void *)this + 2) = v9;
  if (*((_DWORD *)this + 12) < v8) {
    int v8 = *((_DWORD *)this + 12);
  }
  BOOL v10 = __OFSUB__(v2, v8);
  int v11 = v2 - v8;
  if ((v11 < 0) ^ v10 | (v11 == 0)) {
    int v11 = 0;
  }
  else {
    *((void *)this + 2) = v9 - v11;
  }
  *((_DWORD *)this + 11) = v11;
  return v4;
}

uint64_t google::protobuf::io::CodedInputStream::PopLimit(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  int v2 = *(_DWORD *)(this + 48);
  uint64_t v3 = *(void *)(this + 16) + *(int *)(this + 44);
  *(void *)(this + 16) = v3;
  if (v2 >= a2) {
    int v4 = a2;
  }
  else {
    int v4 = v2;
  }
  int v5 = *(_DWORD *)(this + 24);
  BOOL v6 = __OFSUB__(v5, v4);
  int v7 = v5 - v4;
  if ((v7 < 0) ^ v6 | (v7 == 0)) {
    int v7 = 0;
  }
  else {
    *(void *)(this + 16) = v3 - v7;
  }
  *(_DWORD *)(this + 44) = v7;
  *(unsigned char *)(this + 36) = 0;
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::BytesUntilLimit(google::protobuf::io::CodedInputStream *this)
{
  int v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return (v1
  }
                        - *((_DWORD *)this + 6)
                        + *((_DWORD *)this + 11)
                        + *((_DWORD *)this + 4)
                        - *((_DWORD *)this + 2));
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc", 180);
  int v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, (google::protobuf::internal::LogMessage *)v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1B9BBD170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  int v2 = (void *)((char *)this + 8);
  if (*((_DWORD *)this + 4) != *((_DWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc", 519);
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (0) == (BufferSize()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
  }
  int v4 = *((_DWORD *)this + 11);
  if (v4 > 0 || *((int *)this + 7) > 0 || (int v5 = *((_DWORD *)this + 6), v5 == *((_DWORD *)this + 10)))
  {
    int v6 = *((_DWORD *)this + 6) - v4;
    int v7 = *((_DWORD *)this + 12);
    if (v6 >= v7 && v7 != *((_DWORD *)this + 10)) {
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    }
    return 0;
  }
  else
  {
    int v10 = *((_DWORD *)this + 13);
    if ((v10 & 0x80000000) == 0 && v5 >= v10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc", 537);
      int v11 = google::protobuf::internal::LogMessage::operator<<(v30, "Reading dangerously large protocol message.  If the message turns out to be larger than ");
      unint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, *((_DWORD *)this + 12));
      uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v29, (google::protobuf::internal::LogMessage *)v13);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      *((_DWORD *)this + 13) = -2;
    }
    uint64_t v29 = 0;
    int v28 = 0;
    uint64_t v14 = *(void *)this;
    do
    {
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(void *)v14 + 16))(v14, &v29, &v28);
      if (!v8)
      {
        void *v2 = 0;
        v2[1] = 0;
        return v8;
      }
      int v15 = v28;
    }
    while (!v28);
    uint64_t v16 = v29 + v28;
    *((void *)this + 1) = v29;
    *((void *)this + 2) = v16;
    if (v15 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v30, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/io/coded_stream.cc", 554);
      unsigned __int8 v17 = google::protobuf::internal::LogMessage::operator<<(v30, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, (google::protobuf::internal::LogMessage *)v17);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v30[0].__r_.__value_.__l.__data_);
      int v15 = v28;
    }
    int v18 = *((_DWORD *)this + 6);
    int v19 = v18 - (v15 ^ 0x7FFFFFFF);
    if (v18 <= (v15 ^ 0x7FFFFFFF))
    {
      int v21 = v15 + v18;
      uint64_t v20 = *((void *)this + 2);
    }
    else
    {
      *((_DWORD *)this + 7) = v19;
      uint64_t v20 = *((void *)this + 2) - v19;
      *((void *)this + 2) = v20;
      int v21 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v21;
    int v22 = *((_DWORD *)this + 10);
    uint64_t v23 = v20 + *((int *)this + 11);
    *((void *)this + 2) = v23;
    int v24 = *((_DWORD *)this + 12);
    if (v24 >= v22) {
      int v24 = v22;
    }
    BOOL v25 = __OFSUB__(v21, v24);
    int v26 = v21 - v24;
    if ((v26 < 0) ^ v25 | (v26 == 0)) {
      int v26 = 0;
    }
    else {
      *((void *)this + 2) = v23 - v26;
    }
    *((_DWORD *)this + 11) = v26;
  }
  return v8;
}

void sub_1B9BBD3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    int v7 = (const void *)*((void *)this + 1);
    int v8 = *((void *)this + 2) - v7;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, v8);
    __dst += v8;
    *((void *)this + 1) += v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= v8;
    }
  }
  memcpy(__dst, v7, v6);
  *((void *)this + 1) += v6;
  return v6 <= v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  unsigned int v3 = __n;
  int v4 = this;
  if (*(_DWORD *)(a1 + 16) - *(_DWORD *)(a1 + 8) >= (int)__n)
  {
    std::string::resize(this, __n, 0);
    if (!v3) {
      return 1;
    }
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v4->__r_.__value_.__l.__size_)
      {
LABEL_13:
        int v4 = 0;
        goto LABEL_14;
      }
      int v4 = (std::string *)v4->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v4->__r_.__value_.__s + 23))
    {
      goto LABEL_13;
    }
LABEL_14:
    memcpy(v4, *(const void **)(a1 + 8), v3);
    *(void *)(a1 + 8) += v3;
    return 1;
  }

  return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, __n);
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 4) - *((_DWORD *)this + 2);
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    int v11 = (const std::string::value_type *)*((void *)this + 1);
    int v12 = *((void *)this + 2) - v11;
    BOOL v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0)) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, v12);
      int v11 = (const std::string::value_type *)*((void *)this + 1);
    }
    *((void *)this + 1) = &v11[v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= v12;
    }
  }
  std::string::append(a2, v11, v10);
  *((void *)this + 1) += v10;
  return v10 <= v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  int v3 = (unsigned int *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFFC) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    int v3 = (unsigned int *)__dst;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw(this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v3 = (unint64_t *)*((void *)this + 1);
  if (((*((_DWORD *)this + 4) - v3) & 0xFFFFFFF8) != 0)
  {
    *((void *)this + 1) = v3 + 1;
  }
  else
  {
    int v3 = (unint64_t *)v5;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw(this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  int v2 = (unsigned __int8 *)*((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  if ((int)v3 - (int)v2 <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0)) {
    return google::protobuf::io::CodedInputStream::ReadVarint64Slow(this, a2);
  }
  int v4 = v2 + 1;
  unsigned int v5 = *v2;
  if (((char)*v2 & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
LABEL_25:
    *((void *)this + 1) = &v2[v4 - (int)v2];
    *a2 = v5 | ((unint64_t)v6 << 28) | (v7 << 56);
    return 1;
  }
  unsigned int v5 = v5 + (v2[1] << 7) - 128;
  if (((char)v2[1] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 2;
    goto LABEL_25;
  }
  unsigned int v5 = v5 + (v2[2] << 14) - 0x4000;
  if (((char)v2[2] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 3;
    goto LABEL_25;
  }
  unsigned int v5 = v5 + (v2[3] << 21) - 0x200000;
  if (((char)v2[3] & 0x80000000) == 0)
  {
    unsigned int v6 = 0;
    uint64_t v7 = 0;
    int v4 = v2 + 4;
    goto LABEL_25;
  }
  v5 -= 0x10000000;
  unsigned int v6 = v2[4];
  if (((char)v2[4] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 5;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[5] << 7) - 128;
  if (((char)v2[5] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 6;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[6] << 14) - 0x4000;
  if (((char)v2[6] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 7;
    goto LABEL_25;
  }
  unsigned int v6 = v6 + (v2[7] << 21) - 0x200000;
  if (((char)v2[7] & 0x80000000) == 0)
  {
    uint64_t v7 = 0;
    int v4 = v2 + 8;
    goto LABEL_25;
  }
  v6 -= 0x10000000;
  uint64_t v7 = v2[8];
  if (((char)v2[8] & 0x80000000) == 0)
  {
    int v4 = v2 + 9;
    goto LABEL_25;
  }
  if (((char)v2[9] & 0x80000000) == 0)
  {
    int v4 = v2 + 10;
    uint64_t v7 = v7 + (v2[9] << 7) - 128;
    goto LABEL_25;
  }
  return 0;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, unsigned int *a2)
{
  int v4 = (char *)*((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  if ((int)v3 - (int)v4 <= 9 && (v3 <= (unint64_t)v4 || *(char *)(v3 - 1) < 0))
  {
    unint64_t v11 = 0;
    uint64_t v7 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v11);
    if (v7) {
      *a2 = v11;
    }
  }
  else
  {
    uint64_t v5 = (uint64_t)(v4 + 1);
    int v6 = *v4;
    if (*v4 < 0)
    {
      int v6 = v6 + (v4[1] << 7) - 128;
      if (v4[1] < 0)
      {
        int v6 = v6 + (v4[2] << 14) - 0x4000;
        if (v4[2] < 0)
        {
          int v6 = v6 + (v4[3] << 21) - 0x200000;
          if (v4[3] < 0)
          {
            int v8 = v4[4];
            int v6 = v6 + (v8 << 28) - 0x10000000;
            if (v8 < 0)
            {
              uint64_t v9 = 0;
              while (v4[v9 + 5] < 0)
              {
                uint64_t v7 = 0;
                if (++v9 == 5) {
                  return v7;
                }
              }
              uint64_t v5 = (uint64_t)&v4[v9 + 6];
            }
            else
            {
              uint64_t v5 = (uint64_t)(v4 + 5);
            }
          }
          else
          {
            uint64_t v5 = (uint64_t)(v4 + 4);
          }
        }
        else
        {
          uint64_t v5 = (uint64_t)(v4 + 3);
        }
      }
      else
      {
        uint64_t v5 = (uint64_t)(v4 + 2);
      }
    }
    *a2 = v6;
    *((void *)this + 1) = v5;
    return 1;
  }
  return v7;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  int v2 = (char *)*((void *)this + 1);
  unint64_t v3 = (unsigned __int8 *)*((void *)this + 2);
  if (v2 != (char *)v3)
  {
LABEL_4:
    unint64_t v7 = 0;
    if (v2 >= (char *)v3 || *v2 < 0)
    {
      unint64_t result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v7);
      if (result) {
        return v7;
      }
    }
    else
    {
      unint64_t result = *v2;
      *((void *)this + 1) = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    int v2 = (char *)*((void *)this + 1);
    unint64_t v3 = (unsigned __int8 *)*((void *)this + 2);
    goto LABEL_4;
  }
  int v5 = *((_DWORD *)this + 12);
  unint64_t result = 0;
  BOOL v6 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v5 || *((_DWORD *)this + 10) == v5;
  *((unsigned char *)this + 36) = v6;
  return result;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this)
{
  int v2 = (char *)*((void *)this + 1);
  uint64_t v1 = *((void *)this + 2);
  int v3 = v1 - v2;
  if ((int)v1 - (int)v2 > 9) {
    goto LABEL_4;
  }
  if (v3 >= 1)
  {
    if ((*(char *)(v1 - 1) & 0x80000000) == 0)
    {
LABEL_4:
      uint64_t v4 = (uint64_t)(v2 + 1);
      uint64_t v5 = *v2;
      if (*v2 < 0)
      {
        uint64_t v5 = v5 + (v2[1] << 7) - 128;
        if (v2[1] < 0)
        {
          uint64_t v5 = v5 + (v2[2] << 14) - 0x4000;
          if (v2[2] < 0)
          {
            uint64_t v5 = v5 + (v2[3] << 21) - 0x200000;
            if (v2[3] < 0)
            {
              int v10 = v2[4];
              uint64_t v5 = (v5 + (v10 << 28) - 0x10000000);
              if (v10 < 0)
              {
                uint64_t v11 = 0;
                while (v2[v11 + 5] < 0)
                {
                  uint64_t v9 = 0;
                  if (++v11 == 5) {
                    return v9;
                  }
                }
                uint64_t v4 = (uint64_t)&v2[v11 + 6];
              }
              else
              {
                uint64_t v4 = (uint64_t)(v2 + 5);
              }
            }
            else
            {
              uint64_t v4 = (uint64_t)(v2 + 4);
            }
          }
          else
          {
            uint64_t v4 = (uint64_t)(v2 + 3);
          }
        }
        else
        {
          uint64_t v4 = (uint64_t)(v2 + 2);
        }
      }
      *((void *)this + 1) = v4;
      return v5;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v3) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  int v7 = *((_DWORD *)this + 11);
  int v8 = *((_DWORD *)this + 6);
  if (v7 <= 0 && v8 != *((_DWORD *)this + 10)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v8 - v7 >= *((_DWORD *)this + 12)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  uint64_t v9 = 0;
  *((unsigned char *)this + 36) = 1;
  return v9;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Slow(google::protobuf::io::CodedInputStream *this, unint64_t *a2)
{
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (v4 != 10)
  {
    while (1)
    {
      BOOL v6 = (char *)*((void *)this + 1);
      if (v6 != *((char **)this + 2)) {
        break;
      }
      if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
        return 0;
      }
    }
    char v7 = *v6;
    v5 |= (unint64_t)(*v6 & 0x7F) << (7 * v4);
    *((void *)this + 1) = v6 + 1;
    ++v4;
    if ((v7 & 0x80) == 0)
    {
      *a2 = v5;
      return 1;
    }
  }
  return 0;
}

uint64_t google::protobuf::io::CodedOutputStream::Refresh(google::protobuf::io::CodedOutputStream *this)
{
  uint64_t v4 = 0;
  uint64_t result = (*(uint64_t (**)(void, uint64_t *, char *))(**(void **)this + 16))(*(void *)this, &v4, (char *)this + 16);
  if (result)
  {
    uint64_t v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((unsigned char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  }
  *((void *)this + 1) = v3;
  return result;
}

google::protobuf::io::CodedOutputStream *google::protobuf::io::CodedOutputStream::CodedOutputStream(google::protobuf::io::CodedOutputStream *this, google::protobuf::io::ZeroCopyOutputStream *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = a2;
  *((_WORD *)this + 12) = 0;
  google::protobuf::io::CodedOutputStream::Refresh(this);
  *((unsigned char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return this;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) >= 1) {
    (*(void (**)(void))(**(void **)this + 24))();
  }
}

uint64_t google::protobuf::io::CodedOutputStream::WriteRaw(google::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  while (1)
  {
    size_t v6 = *((int *)this + 4);
    char v7 = (void *)*((void *)this + 1);
    if ((int)v6 >= a3) {
      break;
    }
    memcpy(v7, __src, v6);
    uint64_t v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    uint64_t result = google::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0) {
      return result;
    }
  }
  uint64_t result = (uint64_t)memcpy(v7, __src, a3);
  *((void *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteAliasedRaw(google::protobuf::io::CodedOutputStream *this, char *__src, uint64_t a3)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6 <= (int)a3)
  {
    if (v6 <= 0)
    {
      int v8 = *((_DWORD *)this + 5);
    }
    else
    {
      (*(void (**)(void))(**(void **)this + 24))();
      int v8 = *((_DWORD *)this + 5) - *((_DWORD *)this + 4);
      *((void *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
    }
    *((_DWORD *)this + 5) = v8 + a3;
    uint64_t result = (*(uint64_t (**)(void, char *, uint64_t))(**(void **)this + 40))(*(void *)this, __src, a3);
    *((unsigned char *)this + 24) |= result ^ 1;
  }
  else
  {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, a3);
  }
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  if (*(_DWORD *)(this + 16) < 4u)
  {
    int __src = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + _Block_object_dispose(&STACK[0x260], 8) = a2;
    *(void *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(void **)(this + _Block_object_dispose(&STACK[0x260], 8) = a2;
    *(void *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint32(uint64_t this, unsigned int a2)
{
  if (*(int *)(this + 16) < 5)
  {
    if (a2 < 0x80)
    {
      LODWORD(v4) = 0;
    }
    else
    {
      uint64_t v4 = 0;
      do
      {
        __src[v4++] = a2 | 0x80;
        unsigned int v5 = a2 >> 14;
        a2 >>= 7;
      }
      while (v5);
    }
    __src[v4] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v4 + 1);
  }
  else
  {
    int v2 = *(unsigned char **)(this + 8);
    unsigned char *v2 = a2 | 0x80;
    if (a2 < 0x80)
    {
      unsigned char *v2 = a2 & 0x7F;
      int v3 = v2 + 1;
    }
    else
    {
      v2[1] = (a2 >> 7) | 0x80;
      if (a2 < 0x4000)
      {
        v2[1] = (a2 >> 7) & 0x7F;
        int v3 = v2 + 2;
      }
      else
      {
        void v2[2] = (a2 >> 14) | 0x80;
        if (a2 < 0x200000)
        {
          void v2[2] = (a2 >> 14) & 0x7F;
          int v3 = v2 + 3;
        }
        else
        {
          void v2[3] = (a2 >> 21) | 0x80;
          if (a2 >> 28)
          {
            v2[4] = a2 >> 28;
            int v3 = v2 + 5;
          }
          else
          {
            int v3 = v2 + 4;
            void v2[3] = (a2 >> 21) & 0x7F;
          }
        }
      }
    }
    int v6 = v3 - v2;
    *(void *)(this + 8) += v6;
    *(_DWORD *)(this + 16) -= v6;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint64(uint64_t this, unint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  if (*(int *)(this + 16) >= 10)
  {
    int v2 = *(unsigned char **)(this + 8);
    unint64_t v3 = a2 >> 28;
    if (HIBYTE(a2))
    {
      if (HIBYTE(a2) >= 0x80)
      {
        v2[9] = -127;
        unsigned int v4 = 10;
      }
      else
      {
        unsigned int v4 = 9;
      }
      v2[8] = HIBYTE(a2) | 0x80;
    }
    else
    {
      if (!v3)
      {
        if (!(a2 >> 14))
        {
          if (a2 < 0x80)
          {
            unsigned int v4 = 1;
            goto LABEL_24;
          }
          unsigned int v4 = 2;
LABEL_23:
          v2[1] = (a2 >> 7) | 0x80;
LABEL_24:
          unsigned char *v2 = a2 | 0x80;
          v2[v4 - 1] &= ~0x80u;
          *(void *)(this + 8) += v4;
          *(_DWORD *)(this + 16) -= v4;
          return this;
        }
        if (a2 < 0x200000)
        {
          unsigned int v4 = 3;
          goto LABEL_22;
        }
        unsigned int v4 = 4;
LABEL_21:
        void v2[3] = (a2 >> 21) | 0x80;
LABEL_22:
        void v2[2] = (a2 >> 14) | 0x80;
        goto LABEL_23;
      }
      if (!(v3 >> 14))
      {
        if (v3 < 0x80)
        {
          unsigned int v4 = 5;
LABEL_20:
          v2[4] = v3 | 0x80;
          goto LABEL_21;
        }
        unsigned int v4 = 6;
LABEL_19:
        void v2[5] = (a2 >> 35) | 0x80;
        goto LABEL_20;
      }
      if (v3 < 0x200000)
      {
        unsigned int v4 = 7;
        goto LABEL_18;
      }
      unsigned int v4 = 8;
    }
    v2[7] = (a2 >> 49) | 0x80;
LABEL_18:
    v2[6] = (a2 >> 42) | 0x80;
    goto LABEL_19;
  }
  if (a2 < 0x80)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    uint64_t v5 = 0;
    do
    {
      __src[v5++] = a2 | 0x80;
      unint64_t v6 = a2 >> 14;
      a2 >>= 7;
    }
    while (v6);
  }
  __src[v5] = a2;
  return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, __src, (int)v5 + 1);
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize32Fallback(google::protobuf::io::CodedOutputStream *this)
{
  if (this >> 28) {
    int v1 = 5;
  }
  else {
    int v1 = 4;
  }
  if (this >= 0x200000) {
    int v2 = v1;
  }
  else {
    int v2 = 3;
  }
  if (this >= 0x4000) {
    unsigned int v3 = v2;
  }
  else {
    unsigned int v3 = 2;
  }
  if (this >= 0x80) {
    return v3;
  }
  else {
    return 1;
  }
}

uint64_t google::protobuf::io::CodedOutputStream::VarintSize64(unint64_t this)
{
  if ((this & 0x8000000000000000) == 0) {
    int v1 = 9;
  }
  else {
    int v1 = 10;
  }
  if (HIBYTE(this)) {
    int v2 = v1;
  }
  else {
    int v2 = 8;
  }
  if (this >> 49) {
    int v3 = v2;
  }
  else {
    int v3 = 7;
  }
  if (this >> 42) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = 6;
  }
  if (this >> 28) {
    int v5 = 5;
  }
  else {
    int v5 = 4;
  }
  if (this >= 0x200000) {
    int v6 = v5;
  }
  else {
    int v6 = 3;
  }
  if (this >= 0x4000) {
    int v7 = v6;
  }
  else {
    int v7 = 2;
  }
  if (this >= 0x80) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = 1;
  }
  if (this >> 35) {
    return v4;
  }
  else {
    return v8;
  }
}

uint64_t CRDT::protobuf_ShutdownFile_crframework_2eproto(CRDT *this)
{
  if (CRDT::ObjectID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::ObjectID::default_instance_ + 8))(CRDT::ObjectID::default_instance_);
  }
  if (CRDT::Timestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Timestamp::default_instance_ + 8))(CRDT::Timestamp::default_instance_);
  }
  if (CRDT::RegisterLatest::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::RegisterLatest::default_instance_ + 8))(CRDT::RegisterLatest::default_instance_);
  }
  if (CRDT::VectorTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::VectorTimestamp::default_instance_ + 8))(CRDT::VectorTimestamp::default_instance_);
  }
  if (CRDT::VectorTimestamp_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::VectorTimestamp_Element::default_instance_ + 8))(CRDT::VectorTimestamp_Element::default_instance_);
  }
  if (CRDT::Dictionary::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Dictionary::default_instance_ + 8))(CRDT::Dictionary::default_instance_);
  }
  if (CRDT::Dictionary_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Dictionary_Element::default_instance_ + 8))(CRDT::Dictionary_Element::default_instance_);
  }
  if (CRDT::Index::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Index::default_instance_ + 8))(CRDT::Index::default_instance_);
  }
  if (CRDT::Index_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Index_Element::default_instance_ + 8))(CRDT::Index_Element::default_instance_);
  }
  if (CRDT::OneOf::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OneOf::default_instance_ + 8))(CRDT::OneOf::default_instance_);
  }
  if (CRDT::OneOf_Element::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OneOf_Element::default_instance_ + 8))(CRDT::OneOf_Element::default_instance_);
  }
  if (CRDT::StringArray::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::StringArray::default_instance_ + 8))(CRDT::StringArray::default_instance_);
  }
  if (CRDT::StringArray_ArrayAttachment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::StringArray_ArrayAttachment::default_instance_ + 8))(CRDT::StringArray_ArrayAttachment::default_instance_);
  }
  if (CRDT::Array::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Array::default_instance_ + 8))(CRDT::Array::default_instance_);
  }
  if (CRDT::OrderedSet::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::OrderedSet::default_instance_ + 8))(CRDT::OrderedSet::default_instance_);
  }
  if (CRDT::Document::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document::default_instance_ + 8))(CRDT::Document::default_instance_);
  }
  if (CRDT::Document_CustomObject::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document_CustomObject::default_instance_ + 8))(CRDT::Document_CustomObject::default_instance_);
  }
  if (CRDT::Document_CustomObject_MapEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CRDT::Document_CustomObject_MapEntry::default_instance_ + 8))(CRDT::Document_CustomObject_MapEntry::default_instance_);
  }
  uint64_t result = CRDT::Document_DocObject::default_instance_;
  if (CRDT::Document_DocObject::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)CRDT::Document_DocObject::default_instance_ + 8);
    return v2();
  }
  return result;
}

void CRDT::protobuf_AddDesc_crframework_2eproto_impl(CRDT *this, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x1E9BF1, (google::protobuf::internal *)0x1E9BF0, "/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", a4);
  topotext::protobuf_AddDesc_topotext_2eproto(v4);
  operator new();
}

void sub_1B9BBEDD0(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  MEMORY[0x1BA9DB510](v2, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

double CRDT::Timestamp::Timestamp(CRDT::Timestamp *this)
{
  *(void *)this = &unk_1F1337BA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::RegisterLatest::RegisterLatest(CRDT::RegisterLatest *this)
{
  *(void *)this = &unk_1F1337590;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::VectorTimestamp::VectorTimestamp(CRDT::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1337608;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::VectorTimestamp_Element::VectorTimestamp_Element(CRDT::VectorTimestamp_Element *this)
{
  *(void *)this = &unk_1F13377E8;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

double CRDT::Dictionary::Dictionary(CRDT::Dictionary *this)
{
  *(void *)this = &unk_1F1337338;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Dictionary_Element::Dictionary_Element(CRDT::Dictionary_Element *this)
{
  *(void *)this = &unk_1F1337680;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double CRDT::StringArray::StringArray(CRDT::StringArray *this)
{
  *(void *)this = &unk_1F1337428;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CRDT::Array::Array(CRDT::Array *this)
{
  *(void *)this = &unk_1F1337950;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::OrderedSet::OrderedSet(CRDT::OrderedSet *this)
{
  *(void *)this = &unk_1F13373B0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CRDT::Document_CustomObject::Document_CustomObject(CRDT::Document_CustomObject *this)
{
  *(void *)this = &unk_1F1337770;
  *((_DWORD *)this + 16) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CRDT::Document_CustomObject_MapEntry::Document_CustomObject_MapEntry(CRDT::Document_CustomObject_MapEntry *this)
{
  *(void *)this = &unk_1F13378D8;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CRDT::Document_DocObject::Document_DocObject(CRDT::Document_DocObject *this)
{
  *(void *)this = &unk_1F13376F8;
  *((_DWORD *)this + 12) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0u;
  *(_OWORD *)((char *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0u;
  return result;
}

void CRDT::protobuf_AddDesc_crframework_2eproto(CRDT *this)
{
  uint64_t v1 = CRDT::protobuf_AddDesc_crframework_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = &unk_1F1337CD8;
    v2[1] = CRDT::protobuf_AddDesc_crframework_2eproto_impl;
    char v3 = 0;
    google::protobuf::GoogleOnceInitImpl(&CRDT::protobuf_AddDesc_crframework_2eproto_once_, (uint64_t)v2);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_1B9BBF114(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CRDT::ObjectID *CRDT::ObjectID::ObjectID(CRDT::ObjectID *this)
{
  *(void *)this = &unk_1F1337B30;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::ObjectID::SharedCtor(this);
  return this;
}

void sub_1B9BBF180(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::SharedCtor(CRDT::ObjectID *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 12) = 0;
}

void sub_1B9BBF24C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *CRDT::ObjectID::MergeFrom(CRDT::ObjectID *this, const CRDT::ObjectID *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 447);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 1) {
        goto LABEL_9;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v6 = 1;
      goto LABEL_8;
    case 2:
      uint64_t v5 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 2) {
        goto LABEL_9;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v6 = 2;
LABEL_8:
      *((_DWORD *)this + 12) = v6;
LABEL_9:
      *((void *)this + 5) = v5;
      goto LABEL_22;
    case 3:
      uint64_t v7 = *((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 3)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
      }
      *((void *)this + 5) = v7;
      goto LABEL_22;
    case 4:
      unsigned int v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 4) {
        goto LABEL_16;
      }
      CRDT::ObjectID::clear_contents((uint64_t)this);
      int v9 = 4;
      goto LABEL_21;
    case 5:
      unsigned int v8 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 5)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        int v9 = 5;
LABEL_21:
        *((_DWORD *)this + 12) = v9;
        operator new();
      }
LABEL_16:
      std::string::operator=(*((std::string **)this + 5), v8);
LABEL_22:
      BOOL v13 = (const std::string::value_type *)*((void *)a2 + 1);
      int v12 = (char *)a2 + 8;
      uint64_t v11 = v13;
      int v14 = v12[23];
      if (v14 >= 0) {
        int v15 = v12;
      }
      else {
        int v15 = v11;
      }
      if (v14 >= 0) {
        std::string::size_type v16 = v12[23];
      }
      else {
        std::string::size_type v16 = *((void *)v12 + 1);
      }
      return std::string::append((std::string *)((char *)this + 8), v15, v16);
    case 6:
      int v10 = *((_DWORD *)a2 + 10);
      if (*((_DWORD *)this + 12) != 6)
      {
        CRDT::ObjectID::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
      }
      *((_DWORD *)this + 10) = v10;
      goto LABEL_22;
    default:
      goto LABEL_22;
  }
}

void sub_1B9BBF440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::ObjectID::~ObjectID(CRDT::ObjectID *this)
{
  uint64_t v1 = this;
  *(void *)this = &unk_1F1337B30;
  if (*((_DWORD *)this + 12)) {
    this = (CRDT::ObjectID *)CRDT::ObjectID::clear_contents((uint64_t)this);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0) {
    operator delete(*((void **)v1 + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
}

{
  uint64_t vars8;

  CRDT::ObjectID::~ObjectID(this);

  JUMPOUT(0x1BA9DB510);
}

uint64_t CRDT::ObjectID::clear_contents(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 48);
  if (v2 == 5 || v2 == 4)
  {
    uint64_t v3 = *(void *)(this + 40);
    if (v3)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x1BA9DB510](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  return this;
}

void CRDT::ObjectID::New(CRDT::ObjectID *this)
{
}

void sub_1B9BBF5CC(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::Clear(CRDT::ObjectID *this)
{
  uint64_t result = CRDT::ObjectID::clear_contents((uint64_t)this);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::ObjectID::MergePartialFromCodedStream(CRDT::ObjectID *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  uint64_t v5 = (std::string **)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      int v6 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v6 < *((void *)a2 + 2) && (char)*v6 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_11:
      if (v8) {
        BOOL v14 = (v8 & 7) == 4;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14)
      {
LABEL_70:
        uint64_t v26 = 1;
        goto LABEL_71;
      }
LABEL_29:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_69; {
    }
      }
    uint64_t v7 = *v6;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
    *((void *)a2 + 1) = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_27;
        }
        CRDT::ObjectID::clear_contents((uint64_t)this);
        unint64_t v30 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v30)) {
            goto LABEL_69;
          }
          unint64_t v12 = v30;
          BOOL v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v12 = *v11;
          BOOL v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
        }
        *((void *)this + 5) = -(uint64_t)(v12 & 1) ^ (v12 >> 1);
        *((_DWORD *)this + 12) = 1;
        if ((unint64_t)v13 >= v10 || *v13 != 16) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_36:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        std::string::size_type v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_69; {
          unsigned __int8 v17 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          std::string *v5 = (std::string *)*v16;
          unsigned __int8 v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 12) = 2;
        if ((unint64_t)v17 >= v15 || *v17 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_44:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        unint64_t v30 = 0;
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v30)) {
          goto LABEL_69;
        }
        *((void *)this + 5) = v30;
        *((_DWORD *)this + 12) = 3;
        char v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 34)
        {
          *((void *)a2 + 1) = v18 + 1;
LABEL_48:
          CRDT::ObjectID::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          operator new();
        }
        continue;
      case 2u:
        if (v8 == 16) {
          goto LABEL_36;
        }
        goto LABEL_27;
      case 3u:
        if (v8 == 25) {
          goto LABEL_44;
        }
        goto LABEL_27;
      case 4u:
        if (v8 != 34) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) != 4) {
          goto LABEL_48;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, *v5)) {
          goto LABEL_69;
        }
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_53:
        if (*((_DWORD *)this + 12) != 5)
        {
          CRDT::ObjectID::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          operator new();
        }
        if (!google::protobuf::internal::WireFormatLite::ReadString(a2, *v5)) {
          goto LABEL_69;
        }
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 48) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_60:
        CRDT::ObjectID::clear_contents((uint64_t)this);
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)this + 10))
          {
LABEL_69:
            uint64_t v26 = 0;
            goto LABEL_71;
          }
          BOOL v25 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          *(_DWORD *)uint64_t v5 = *v24;
          BOOL v25 = (unsigned __int8 *)(v24 + 1);
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) = 6;
        if (v25 != (unsigned __int8 *)v23 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v26 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_71:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
        return v26;
      case 5u:
        if (v8 == 42) {
          goto LABEL_53;
        }
        goto LABEL_27;
      case 6u:
        if (v8 == 48) {
          goto LABEL_60;
        }
LABEL_27:
        if (v8 && (v8 & 7) != 4) {
          goto LABEL_29;
        }
        goto LABEL_70;
      default:
        goto LABEL_11;
    }
  }
}

void sub_1B9BBFA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::ObjectID::SerializeWithCachedSizes(CRDT::ObjectID *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteSInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, *((double *)this + 5), a3);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(5, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32((google::protobuf::internal::WireFormatLite *)6, *((_DWORD *)this + 10), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::ObjectID::ByteSize(CRDT::ObjectID *this)
{
  switch(*((_DWORD *)this + 12))
  {
    case 1:
      unint64_t v8 = (2 * *((void *)this + 5)) ^ (*((uint64_t *)this + 5) >> 63);
      goto LABEL_9;
    case 2:
      unint64_t v8 = *((void *)this + 5);
LABEL_9:
      int v9 = google::protobuf::io::CodedOutputStream::VarintSize64(v8);
      goto LABEL_19;
    case 3:
      int v10 = 9;
      goto LABEL_20;
    case 4:
    case 5:
      uint64_t v2 = *((void *)this + 5);
      int v3 = *(unsigned __int8 *)(v2 + 23);
      char v4 = v3;
      uint64_t v5 = *(void *)(v2 + 8);
      if ((v3 & 0x80u) == 0) {
        unint64_t v6 = *(unsigned __int8 *)(v2 + 23);
      }
      else {
        unint64_t v6 = v5;
      }
      if (v6 >= 0x80)
      {
        int v12 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v6);
        int v3 = *(unsigned __int8 *)(v2 + 23);
        uint64_t v5 = *(void *)(v2 + 8);
        int v7 = v12 + 1;
        char v4 = *(unsigned char *)(v2 + 23);
      }
      else
      {
        int v7 = 2;
      }
      if (v4 < 0) {
        int v3 = v5;
      }
      int v10 = v7 + v3;
      goto LABEL_20;
    case 6:
      uint64_t v11 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v11 >= 0x80)
      {
        int v9 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
LABEL_19:
        int v10 = v9 + 1;
      }
      else
      {
        int v10 = 2;
      }
LABEL_20:
      if (*((char *)this + 31) < 0) {
        uint64_t v13 = *((void *)this + 2);
      }
      else {
        LODWORD(v13) = *((unsigned __int8 *)this + 31);
      }
      uint64_t result = (v10 + v13);
      *((_DWORD *)this + 9) = result;
      return result;
    default:
      int v10 = 0;
      goto LABEL_20;
  }
}

std::string *CRDT::ObjectID::CheckTypeAndMergeFrom(CRDT::ObjectID *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::ObjectID::MergeFrom(this, lpsrc);
}

uint64_t CRDT::ObjectID::IsInitialized(CRDT::ObjectID *this)
{
  return 1;
}

void *CRDT::ObjectID::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.ObjectID");
}

std::string *CRDT::Timestamp::MergeFrom(CRDT::Timestamp *this, const CRDT::Timestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 706);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v7;
    }
  }
  int v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  unint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    int v12 = v9;
  }
  else {
    int v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BBFE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Timestamp::~Timestamp(void **this)
{
  *this = &unk_1F1337BA8;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Timestamp::~Timestamp(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Timestamp::New(CRDT::Timestamp *this)
{
}

uint64_t CRDT::Timestamp::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Timestamp::MergePartialFromCodedStream(CRDT::Timestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    unint64_t v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      unint64_t v14 = *v13;
      char v15 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
      break;
    }
    unint64_t v14 = v20;
    char v15 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((void *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v16 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1B9BC0164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Timestamp::SerializeWithCachedSizes(CRDT::Timestamp *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Timestamp::ByteSize(CRDT::Timestamp *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_7:
  }
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Timestamp::CheckTypeAndMergeFrom(CRDT::Timestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Timestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Timestamp::IsInitialized(CRDT::Timestamp *this)
{
  return 1;
}

void *CRDT::Timestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Timestamp");
}

std::string *CRDT::RegisterLatest::MergeFrom(CRDT::RegisterLatest *this, const CRDT::RegisterLatest *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 949);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::Timestamp *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      unint64_t v7 = (const CRDT::Timestamp *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v7 = *(const CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
      }
      this = (CRDT::RegisterLatest *)CRDT::Timestamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::ObjectID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      unint64_t v9 = (const CRDT::ObjectID *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v9 = *(const CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
      }
      CRDT::ObjectID::MergeFrom(v8, v9);
    }
  }
  BOOL v12 = (const std::string::value_type *)*((void *)a2 + 1);
  int v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1B9BC04B0(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::RegisterLatest::~RegisterLatest(void **this)
{
  *this = &unk_1F1337590;
  CRDT::RegisterLatest::SharedDtor((CRDT::RegisterLatest *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::RegisterLatest::~RegisterLatest(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::RegisterLatest::SharedDtor(CRDT::RegisterLatest *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::RegisterLatest *)CRDT::RegisterLatest::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      char v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::RegisterLatest::default_instance(CRDT::RegisterLatest *this)
{
  return CRDT::RegisterLatest::default_instance_;
}

void CRDT::RegisterLatest::New(CRDT::RegisterLatest *this)
{
}

uint64_t CRDT::RegisterLatest::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        *(void *)(v3 + 40) = 0;
        *(void *)(v3 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::RegisterLatest::MergePartialFromCodedStream(CRDT::RegisterLatest *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      unint64_t v9 = (CRDT::Timestamp *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::Timestamp::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      char v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::ObjectID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::ObjectID::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BC0A9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::RegisterLatest::SerializeWithCachedSizes(CRDT::RegisterLatest *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::RegisterLatest::default_instance_ + 40);
    }
    this = (CRDT::RegisterLatest *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::RegisterLatest::ByteSize(CRDT::RegisterLatest *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::Timestamp *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::Timestamp **)(CRDT::RegisterLatest::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CRDT::ObjectID *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v7 = *(CRDT::ObjectID **)(CRDT::RegisterLatest::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::RegisterLatest::CheckTypeAndMergeFrom(CRDT::RegisterLatest *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::RegisterLatest::MergeFrom(this, lpsrc);
}

uint64_t CRDT::RegisterLatest::IsInitialized(CRDT::RegisterLatest *this)
{
  return 1;
}

void *CRDT::RegisterLatest::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.RegisterLatest");
}

std::string *CRDT::VectorTimestamp_Element::MergeFrom(CRDT::VectorTimestamp_Element *this, const CRDT::VectorTimestamp_Element *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 1216);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v14 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v14;
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v15 = *((void *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 6) = v15;
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      uint64_t v6 = *((void *)a2 + 7);
      *((_DWORD *)this + 8) |= 4u;
      *((void *)this + 7) = v6;
    }
  }
LABEL_8:
  int v9 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v8 = (char *)a2 + 8;
  uint64_t v7 = v9;
  int v10 = v8[23];
  if (v10 >= 0) {
    uint64_t v11 = v8;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = v8[23];
  }
  else {
    std::string::size_type v12 = *((void *)v8 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v11, v12);
}

void sub_1B9BC0E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(void **this)
{
  *this = &unk_1F13377E8;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::VectorTimestamp_Element::~VectorTimestamp_Element(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::VectorTimestamp_Element::New(CRDT::VectorTimestamp_Element *this)
{
}

uint64_t CRDT::VectorTimestamp_Element::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(void *)(this + 56) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::VectorTimestamp_Element::MergePartialFromCodedStream(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v21, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20, (google::protobuf::io::ZeroCopyOutputStream *)v21);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3) {
        break;
      }
      if (v9 == 2)
      {
        if (v7 == 16)
        {
          uint64_t v15 = (char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_32;
        }
LABEL_22:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_49;
        }
        goto LABEL_24;
      }
      if (v9 == 1)
      {
        if (v7 != 8) {
          goto LABEL_22;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_50; {
          std::string::size_type v12 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v11;
          std::string::size_type v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          uint64_t v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
LABEL_32:
          if ((unint64_t)v15 >= v10 || *v15 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 6))goto LABEL_50; {
            char v16 = (unsigned char *)*((void *)a2 + 1);
            }
            unint64_t v10 = *((void *)a2 + 2);
          }
          else
          {
            *((void *)this + 6) = *v15;
            char v16 = v15 + 1;
            *((void *)a2 + 1) = v16;
          }
          *((_DWORD *)this + 8) |= 2u;
          if ((unint64_t)v16 < v10 && *v16 == 24)
          {
            uint64_t v14 = v16 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_13:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
LABEL_49:
          uint64_t v18 = 1;
          goto LABEL_51;
        }
LABEL_24:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v20, v4))goto LABEL_50; {
      }
        }
    }
    if (v7 != 24) {
      goto LABEL_22;
    }
    uint64_t v14 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_40:
    if ((unint64_t)v14 < v10 && (*v14 & 0x80000000) == 0)
    {
      *((void *)this + 7) = *v14;
      int v17 = (unsigned __int8 *)(v14 + 1);
      *((void *)a2 + 1) = v17;
      goto LABEL_45;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 7)) {
      break;
    }
    int v17 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
LABEL_45:
    *((_DWORD *)this + 8) |= 4u;
    if (v17 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v18 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_51;
    }
  }
LABEL_50:
  uint64_t v18 = 0;
LABEL_51:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v20);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v21);
  return v18;
}

void sub_1B9BC11E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp_Element::SerializeWithCachedSizes(CRDT::VectorTimestamp_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  if ((*((_DWORD *)this + 8) & 4) != 0) {
LABEL_4:
  }
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)3, *((void *)this + 7), a2, a4);
LABEL_5:
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::VectorTimestamp_Element::ByteSize(CRDT::VectorTimestamp_Element *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_10;
  }
  if (*((unsigned char *)this + 32))
  {
    int v3 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_7:
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    v3 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 7)) + 1;
  }
LABEL_10:
  if (*((char *)this + 31) < 0) {
    uint64_t v4 = *((void *)this + 2);
  }
  else {
    LODWORD(v4) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v4);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp_Element::CheckTypeAndMergeFrom(CRDT::VectorTimestamp_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::VectorTimestamp_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp_Element::IsInitialized(CRDT::VectorTimestamp_Element *this)
{
  return 1;
}

void *CRDT::VectorTimestamp_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp.Element");
}

std::string *CRDT::VectorTimestamp::MergeFrom(CRDT::VectorTimestamp *this, const CRDT::VectorTimestamp *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 1414);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((CRDT::VectorTimestamp *)((char *)this + 40), (const CRDT::VectorTimestamp *)((char *)a2 + 40));
  unint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    unsigned int v9 = v6;
  }
  else {
    unsigned int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BC1484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::VectorTimestamp::~VectorTimestamp(CRDT::VectorTimestamp *this)
{
  *(void *)this = &unk_1F1337608;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::VectorTimestamp::~VectorTimestamp(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::VectorTimestamp::New(CRDT::VectorTimestamp *this)
{
}

uint64_t CRDT::VectorTimestamp::Clear(CRDT::VectorTimestamp *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::VectorTimestamp::MergePartialFromCodedStream(CRDT::VectorTimestamp *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::VectorTimestamp_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        BOOL v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::VectorTimestamp_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BC1880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::VectorTimestamp::SerializeWithCachedSizes(CRDT::VectorTimestamp *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::VectorTimestamp::ByteSize(CRDT::VectorTimestamp *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::VectorTimestamp::CheckTypeAndMergeFrom(CRDT::VectorTimestamp *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::VectorTimestamp::MergeFrom(this, lpsrc);
}

uint64_t CRDT::VectorTimestamp::IsInitialized(CRDT::VectorTimestamp *this)
{
  return 1;
}

void *CRDT::VectorTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.VectorTimestamp");
}

std::string *CRDT::Dictionary_Element::MergeFrom(CRDT::Dictionary_Element *this, const CRDT::Dictionary_Element *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 1725);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::ObjectID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::ObjectID *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::ObjectID *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
      }
      this = (CRDT::Dictionary_Element *)CRDT::ObjectID::MergeFrom(v8, v9);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      *((_DWORD *)v3 + 8) |= 4u;
      uint64_t v10 = (CRDT::VectorTimestamp *)*((void *)v3 + 7);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const CRDT::VectorTimestamp *)*((void *)a2 + 7);
      if (!v11)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        uint64_t v11 = *(const CRDT::VectorTimestamp **)(CRDT::Dictionary_Element::default_instance_ + 56);
      }
      this = (CRDT::Dictionary_Element *)CRDT::VectorTimestamp::MergeFrom(v10, v11);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      *((_DWORD *)v3 + 8) |= 8u;
      char v12 = (CRDT::RegisterLatest *)*((void *)v3 + 8);
      if (!v12) {
        operator new();
      }
      BOOL v13 = (const CRDT::RegisterLatest *)*((void *)a2 + 8);
      if (!v13)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        BOOL v13 = *(const CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
      }
      CRDT::RegisterLatest::MergeFrom(v12, v13);
    }
  }
  int v16 = (const std::string::value_type *)*((void *)a2 + 1);
  int v15 = (char *)a2 + 8;
  int v14 = v16;
  int v17 = v15[23];
  if (v17 >= 0) {
    BOOL v18 = v15;
  }
  else {
    BOOL v18 = v14;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = v15[23];
  }
  else {
    std::string::size_type v19 = *((void *)v15 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v18, v19);
}

void sub_1B9BC1CF8(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::Dictionary_Element::~Dictionary_Element(void **this)
{
  *this = &unk_1F1337680;
  CRDT::Dictionary_Element::SharedDtor((CRDT::Dictionary_Element *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Dictionary_Element::~Dictionary_Element(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Dictionary_Element::SharedDtor(CRDT::Dictionary_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Dictionary_Element *)CRDT::Dictionary_Element::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 8);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CRDT::Dictionary_Element::default_instance(CRDT::Dictionary_Element *this)
{
  return CRDT::Dictionary_Element::default_instance_;
}

void CRDT::Dictionary_Element::New(CRDT::Dictionary_Element *this)
{
}

uint64_t CRDT::Dictionary_Element::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(v1 + 48));
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 4) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v5 + 40);
        *(_DWORD *)(v5 + 32) = 0;
        if (*(char *)(v5 + 31) < 0)
        {
          **(unsigned char **)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v5 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v5 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 8) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this) {
        this = CRDT::RegisterLatest::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Dictionary_Element::MergePartialFromCodedStream(CRDT::Dictionary_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v45, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v44, (google::protobuf::io::ZeroCopyOutputStream *)v45);
  while (2)
  {
    while (1)
    {
      uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v5 < *((void *)a2 + 2) && (char)*v5 >= 1) {
        break;
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_13:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_81:
        uint64_t v42 = 1;
        goto LABEL_82;
      }
LABEL_26:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v44, v4))goto LABEL_80; {
    }
      }
    uint64_t v6 = *v5;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
    *((void *)a2 + 1) = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
LABEL_6:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_24;
        }
        *((_DWORD *)this + 8) |= 1u;
        int v9 = (CRDT::ObjectID *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        unsigned int v46 = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          goto LABEL_80;
        }
        int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        BOOL v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_37:
        *((_DWORD *)this + 8) |= 2u;
        std::string::size_type v19 = (CRDT::ObjectID *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v46 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          goto LABEL_80;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::ObjectID::MergePartialFromCodedStream(v19, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_51:
        *((_DWORD *)this + 8) |= 4u;
        unsigned int v27 = (CRDT::VectorTimestamp *)*((void *)this + 7);
        if (!v27) {
          operator new();
        }
        unsigned int v46 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          goto LABEL_80;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v27, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_80;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v31);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v33;
        }
        unint64_t v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_65:
        *((_DWORD *)this + 8) |= 8u;
        int v35 = (CRDT::RegisterLatest *)*((void *)this + 8);
        if (!v35) {
          operator new();
        }
        unsigned int v46 = 0;
        uint64_t v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46)) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v46 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38
          || (int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46),
              !CRDT::RegisterLatest::MergePartialFromCodedStream(v35, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_80:
          uint64_t v42 = 0;
          goto LABEL_82;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v39);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v41;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v42 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_82:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v44);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v45);
        return v42;
      case 2u:
        if (v7 == 18) {
          goto LABEL_37;
        }
        goto LABEL_24;
      case 3u:
        if (v7 == 26) {
          goto LABEL_51;
        }
        goto LABEL_24;
      case 4u:
        if (v7 == 34) {
          goto LABEL_65;
        }
LABEL_24:
        if (v7 && (v7 & 7) != 4) {
          goto LABEL_26;
        }
        goto LABEL_81;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1B9BC25D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary_Element::SerializeWithCachedSizes(CRDT::Dictionary_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 40);
    }
    this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v6 = *((void *)v3 + 6);
  if (!v6)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    uint64_t v6 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 48);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  int v4 = *((_DWORD *)v3 + 8);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *((void *)v3 + 7);
  if (!v7)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(this);
    uint64_t v7 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  this = (CRDT::Dictionary_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
  if ((*((_DWORD *)v3 + 8) & 8) != 0)
  {
LABEL_15:
    uint64_t v8 = *((void *)v3 + 8);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v8 = *(void *)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(4, v8, a2);
  }
LABEL_18:
  if (*((char *)v3 + 31) < 0)
  {
    int v9 = (char *)*((void *)v3 + 1);
    uint64_t v10 = *((void *)v3 + 2);
  }
  else
  {
    int v9 = (char *)v3 + 8;
    LODWORD(v10) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v9, v10);
}

uint64_t CRDT::Dictionary_Element::ByteSize(CRDT::Dictionary_Element *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_33;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v4)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    int v4 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 40);
  }
  uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CRDT::ObjectID *)*((void *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v8 = *(CRDT::ObjectID **)(CRDT::Dictionary_Element::default_instance_ + 48);
    }
    int v9 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  int v12 = (CRDT::VectorTimestamp *)*((void *)this + 7);
  if (!v12)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    int v12 = *(CRDT::VectorTimestamp **)(CRDT::Dictionary_Element::default_instance_ + 56);
  }
  int v13 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  if ((*((_DWORD *)this + 8) & 8) != 0)
  {
LABEL_27:
    BOOL v16 = (CRDT::RegisterLatest *)*((void *)this + 8);
    if (!v16)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      BOOL v16 = *(CRDT::RegisterLatest **)(CRDT::Dictionary_Element::default_instance_ + 64);
    }
    int v17 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(v16);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    }
    else {
      int v19 = 1;
    }
    v3 += v18 + v19 + 1;
  }
LABEL_33:
  if (*((char *)this + 31) < 0) {
    uint64_t v20 = *((void *)this + 2);
  }
  else {
    LODWORD(v20) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v20);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary_Element::CheckTypeAndMergeFrom(CRDT::Dictionary_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Dictionary_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary_Element::IsInitialized(CRDT::Dictionary_Element *this)
{
  return 1;
}

void *CRDT::Dictionary_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary.Element");
}

std::string *CRDT::Dictionary::MergeFrom(CRDT::Dictionary *this, const CRDT::Dictionary *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 1927);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((CRDT::Dictionary *)((char *)this + 40), (const CRDT::Dictionary *)((char *)a2 + 40));
  int v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  uint64_t v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BC2A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Dictionary::~Dictionary(CRDT::Dictionary *this)
{
  *(void *)this = &unk_1F1337338;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Dictionary::~Dictionary(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Dictionary::New(CRDT::Dictionary *this)
{
}

uint64_t CRDT::Dictionary::Clear(CRDT::Dictionary *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Dictionary::MergePartialFromCodedStream(CRDT::Dictionary *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::Dictionary_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::Dictionary_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BC2E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Dictionary::SerializeWithCachedSizes(CRDT::Dictionary *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Dictionary::ByteSize(CRDT::Dictionary *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Dictionary::CheckTypeAndMergeFrom(CRDT::Dictionary *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Dictionary::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Dictionary::IsInitialized(CRDT::Dictionary *this)
{
  return 1;
}

void *CRDT::Dictionary::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Dictionary");
}

std::string *CRDT::Index_Element::MergeFrom(CRDT::Index_Element *this, const CRDT::Index_Element *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 2157);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      uint64_t v7 = *((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      *((void *)this + 6) = v7;
    }
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  int v9 = (char *)a2 + 8;
  uint64_t v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    char v12 = v9;
  }
  else {
    char v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BC30D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index_Element::~Index_Element(void **this)
{
  *this = &unk_1F13374A0;
  CRDT::protobuf_AddDesc_crframework_2eproto((CRDT *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Index_Element::~Index_Element(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Index_Element::New(CRDT::Index_Element *this)
{
}

uint64_t CRDT::Index_Element::Clear(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Index_Element::MergePartialFromCodedStream(CRDT::Index_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v19, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18, (google::protobuf::io::ZeroCopyOutputStream *)v19);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2) {
        break;
      }
      if (v7 >> 3 == 1)
      {
        if (v7 != 8) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_38; {
          int v11 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *((void *)this + 5) = *v10;
          int v11 = v10 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 8) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          std::string::size_type v13 = v11 + 1;
          *((void *)a2 + 1) = v13;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_37:
          uint64_t v16 = 1;
          goto LABEL_39;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v18, v4))goto LABEL_38; {
      }
        }
    }
    if (v7 != 16)
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_37;
      }
      goto LABEL_16;
    }
    std::string::size_type v13 = (char *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_28:
    unint64_t v20 = 0;
    if ((unint64_t)v13 < v9 && (*v13 & 0x80000000) == 0)
    {
      unint64_t v14 = *v13;
      char v15 = (unsigned __int8 *)(v13 + 1);
      *((void *)a2 + 1) = v15;
      goto LABEL_33;
    }
    if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v20)) {
      break;
    }
    unint64_t v14 = v20;
    char v15 = (unsigned __int8 *)*((void *)a2 + 1);
    unint64_t v9 = *((void *)a2 + 2);
LABEL_33:
    *((void *)this + 6) = v14;
    *((_DWORD *)this + 8) |= 2u;
    if (v15 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v16 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_39;
    }
  }
LABEL_38:
  uint64_t v16 = 0;
LABEL_39:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v18);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v19);
  return v16;
}

void sub_1B9BC3424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index_Element::SerializeWithCachedSizes(CRDT::Index_Element *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)2, *((void *)this + 6), a2, a4);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Index_Element::ByteSize(CRDT::Index_Element *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_8;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v2 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_7:
  }
    v2 += google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 6)) + 1;
LABEL_8:
  if (*((char *)this + 31) < 0) {
    uint64_t v3 = *((void *)this + 2);
  }
  else {
    LODWORD(v3) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v3);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index_Element::CheckTypeAndMergeFrom(CRDT::Index_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Index_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index_Element::IsInitialized(CRDT::Index_Element *this)
{
  return 1;
}

void *CRDT::Index_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index.Element");
}

std::string *CRDT::Index::MergeFrom(CRDT::Index *this, const CRDT::Index *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 2351);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((CRDT::Index *)((char *)this + 40), (const CRDT::Index *)((char *)a2 + 40));
  unint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BC3688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Index::~Index(CRDT::Index *this)
{
  *(void *)this = &unk_1F13379C8;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Index::~Index(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Index::New(CRDT::Index *this)
{
}

uint64_t CRDT::Index::Clear(CRDT::Index *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Index::MergePartialFromCodedStream(CRDT::Index *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::Index_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        std::string::size_type v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::Index_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BC3A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Index::SerializeWithCachedSizes(CRDT::Index *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::Index::ByteSize(CRDT::Index *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::Index_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Index::CheckTypeAndMergeFrom(CRDT::Index *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Index::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Index::IsInitialized(CRDT::Index *this)
{
  return 1;
}

void *CRDT::Index::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Index");
}

std::string *CRDT::OneOf_Element::MergeFrom(CRDT::OneOf_Element *this, const CRDT::OneOf_Element *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 2586);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::ObjectID *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
      }
      this = (CRDT::OneOf_Element *)CRDT::ObjectID::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::Timestamp *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Timestamp *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
      }
      CRDT::Timestamp::MergeFrom(v8, v9);
    }
  }
  char v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1B9BC3E0C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::OneOf_Element::~OneOf_Element(void **this)
{
  *this = &unk_1F1337518;
  CRDT::OneOf_Element::SharedDtor((CRDT::OneOf_Element *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::OneOf_Element::~OneOf_Element(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::OneOf_Element::SharedDtor(CRDT::OneOf_Element *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OneOf_Element *)CRDT::OneOf_Element::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

void CRDT::OneOf_Element::New(CRDT::OneOf_Element *this)
{
}

uint64_t CRDT::OneOf_Element::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*(unsigned char *)(v1 + 32) & 2) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      if (v4)
      {
        *(void *)(v4 + 40) = 0;
        *(void *)(v4 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OneOf_Element::MergePartialFromCodedStream(CRDT::OneOf_Element *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::ObjectID *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      uint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::ObjectID::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Timestamp *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        unint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Timestamp::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BC43D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf_Element::SerializeWithCachedSizes(CRDT::OneOf_Element *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::OneOf_Element::default_instance_ + 40);
    }
    this = (CRDT::OneOf_Element *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    uint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OneOf_Element::ByteSize(CRDT::OneOf_Element *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::ObjectID **)(CRDT::OneOf_Element::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CRDT::Timestamp *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v7 = *(CRDT::Timestamp **)(CRDT::OneOf_Element::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf_Element::CheckTypeAndMergeFrom(CRDT::OneOf_Element *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OneOf_Element::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf_Element::IsInitialized(CRDT::OneOf_Element *this)
{
  return 1;
}

void *CRDT::OneOf_Element::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf.Element");
}

std::string *CRDT::OneOf::MergeFrom(CRDT::OneOf *this, const CRDT::OneOf *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 2780);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((CRDT::OneOf *)((char *)this + 40), (const CRDT::OneOf *)((char *)a2 + 40));
  uint64_t v7 = (const std::string::value_type *)*((void *)a2 + 1);
  int v6 = (char *)a2 + 8;
  int v5 = v7;
  int v8 = v6[23];
  if (v8 >= 0) {
    int v9 = v6;
  }
  else {
    int v9 = v5;
  }
  if (v8 >= 0) {
    std::string::size_type v10 = v6[23];
  }
  else {
    std::string::size_type v10 = *((void *)v6 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v9, v10);
}

void sub_1B9BC46F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OneOf::~OneOf(CRDT::OneOf *this)
{
  *(void *)this = &unk_1F1337A40;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::OneOf::~OneOf(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::OneOf::New(CRDT::OneOf *this)
{
}

uint64_t CRDT::OneOf::Clear(CRDT::OneOf *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::OneOf::MergePartialFromCodedStream(CRDT::OneOf *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  do
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 != 10) {
        break;
      }
      while (1)
      {
        int v9 = *((_DWORD *)this + 13);
        uint64_t v10 = *((int *)this + 12);
        if ((int)v10 >= v9)
        {
          if (v9 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v9 + 1);
          }
          operator new();
        }
        uint64_t v11 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v10 + 1;
        char v12 = *(CRDT::OneOf_Element **)(v11 + 8 * v10);
        unsigned int v27 = 0;
        int v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_37;
          }
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15
          || (int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::OneOf_Element::MergePartialFromCodedStream(v12, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_37:
          uint64_t v23 = 0;
          goto LABEL_38;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v16);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        int v21 = (unsigned char *)*((void *)a2 + 2);
        if (v20 >= v21 || *v20 != 10) {
          break;
        }
        *((void *)a2 + 1) = v20 + 1;
      }
      if (v20 == v21 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v23 = 1;
        *((unsigned char *)a2 + 36) = 1;
        goto LABEL_38;
      }
    }
    if (v7) {
      BOOL v22 = (v7 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    uint64_t v23 = v22;
  }
  while (!v22
       && google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4));
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BC4AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OneOf::SerializeWithCachedSizes(CRDT::OneOf *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((int *)this + 12) >= 1)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v4);
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
      ++v4;
    }
    while (v4 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    uint64_t v7 = *((void *)this + 2);
  }
  else
  {
    uint64_t v6 = (char *)this + 8;
    LODWORD(v7) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v6, v7);
}

uint64_t CRDT::OneOf::ByteSize(CRDT::OneOf *this)
{
  int v2 = *((_DWORD *)this + 12);
  if (v2 >= 1)
  {
    int v3 = 0;
    do
    {
      int v4 = (CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)this + 40, v3);
      uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf_Element::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v2 += v6 + v7;
      ++v3;
    }
    while (v3 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v8 = *((void *)this + 2);
  }
  else {
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v8);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OneOf::CheckTypeAndMergeFrom(CRDT::OneOf *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OneOf::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OneOf::IsInitialized(CRDT::OneOf *this)
{
  return 1;
}

void *CRDT::OneOf::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OneOf");
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this)
{
  *(void *)this = &unk_1F1337860;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this);
  return this;
}

void sub_1B9BC4D48(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::SharedCtor(CRDT::StringArray_ArrayAttachment *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v4[0] = &unk_1F1337CD8;
    v4[1] = google::protobuf::internal::InitEmptyString;
    char v5 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v4);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v4);
  }
  uint64_t v3 = google::protobuf::internal::empty_string_;
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = v3;
  *((void *)this + 4) = 0;
}

void sub_1B9BC4E14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

CRDT::StringArray_ArrayAttachment *CRDT::StringArray_ArrayAttachment::StringArray_ArrayAttachment(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2)
{
  *(void *)this = &unk_1F1337860;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CRDT::StringArray_ArrayAttachment::SharedCtor(this);
  CRDT::StringArray_ArrayAttachment::MergeFrom(this, a2);
  return this;
}

void sub_1B9BC4E90(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

std::string *CRDT::StringArray_ArrayAttachment::MergeFrom(CRDT::StringArray_ArrayAttachment *this, const CRDT::StringArray_ArrayAttachment *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 3006);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 5);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 5) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = (const std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 8) |= 2u;
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v8 = (std::string *)*((void *)this + 6);
      if (v8 == (std::string *)google::protobuf::internal::empty_string_) {
        operator new();
      }
      std::string::operator=(v8, v7);
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1B9BC4FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(void **this)
{
  *this = &unk_1F1337860;
  CRDT::StringArray_ArrayAttachment::SharedDtor((CRDT::StringArray_ArrayAttachment *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::StringArray_ArrayAttachment::~StringArray_ArrayAttachment(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::StringArray_ArrayAttachment::SharedDtor(CRDT::StringArray_ArrayAttachment *this)
{
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  uint64_t v1 = *((void *)this + 6);
  if (v1) {
    BOOL v2 = v1 == google::protobuf::internal::empty_string_;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (CRDT::StringArray_ArrayAttachment *)MEMORY[0x1BA9DB510](v1, 0x1012C40EC159624);
  }

  CRDT::protobuf_AddDesc_crframework_2eproto(this);
}

void CRDT::StringArray_ArrayAttachment::New(CRDT::StringArray_ArrayAttachment *this)
{
}

void sub_1B9BC514C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 32);
  if ((v1 & 3) != 0)
  {
    *(void *)(this + 40) = 0;
    if ((v1 & 2) != 0)
    {
      if (!google::protobuf::internal::empty_string_) {
        replica_manager::ReplicaManager::SharedCtor();
      }
      uint64_t v2 = *(void *)(this + 48);
      if (v2 != google::protobuf::internal::empty_string_)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(char *)(this + 31) < 0)
  {
    **(unsigned char **)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(this + 16) = 0;
  }
  else
  {
    *(unsigned char *)(this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(this + 31) = 0;
  }
  return this;
}

uint64_t CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v18, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17, (google::protobuf::io::ZeroCopyOutputStream *)v18);
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
        {
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v6 = *v5;
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
          *((void *)a2 + 1) = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
        }
        if (v7 >> 3 == 2)
        {
          if (v7 == 18)
          {
            int v13 = *((_DWORD *)this + 8);
            goto LABEL_28;
          }
LABEL_19:
          if (!v7 || (v7 & 7) == 4) {
            goto LABEL_36;
          }
          goto LABEL_16;
        }
        if (v7 >> 3 == 1) {
          break;
        }
LABEL_12:
        if (v7) {
          BOOL v12 = (v7 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
LABEL_36:
          uint64_t v15 = 1;
          goto LABEL_38;
        }
LABEL_16:
        if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v17, v4))goto LABEL_37; {
      }
        }
      if (v7 != 8) {
        goto LABEL_19;
      }
      uint64_t v10 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_37; {
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        }
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        *((void *)this + 5) = *v10;
        uint64_t v11 = v10 + 1;
        *((void *)a2 + 1) = v11;
      }
      int v13 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v13;
    }
    while ((unint64_t)v11 >= v9 || *v11 != 18);
    *((void *)a2 + 1) = v11 + 1;
LABEL_28:
    *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v13 | 2;
    if (!google::protobuf::internal::empty_string_) {
      __assert_rtn("GetEmptyStringAlreadyInited", "generated_message_util.h", 80, "empty_string_ != NULL");
    }
    std::string::size_type v14 = (std::string *)*((void *)this + 6);
    if (v14 == (std::string *)google::protobuf::internal::empty_string_) {
      operator new();
    }
    if (!google::protobuf::internal::WireFormatLite::ReadString(a2, v14)) {
      break;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
      uint64_t v15 = 1;
      *((unsigned char *)a2 + 36) = 1;
      goto LABEL_38;
    }
  }
LABEL_37:
  uint64_t v15 = 0;
LABEL_38:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v17);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v18);
  return v15;
}

void sub_1B9BC543C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray_ArrayAttachment::SerializeWithCachedSizes(CRDT::StringArray_ArrayAttachment *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)1, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 8);
  }
  if ((v6 & 2) != 0) {
    google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, *((void *)this + 6), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    unint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray_ArrayAttachment::ByteSize(CRDT::StringArray_ArrayAttachment *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_16;
  }
  if (*((unsigned char *)this + 32))
  {
    int v2 = google::protobuf::io::CodedOutputStream::VarintSize64(*((void *)this + 5)) + 1;
    if ((*((_DWORD *)this + 8) & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v3 = *((void *)this + 6);
  int v4 = *(unsigned __int8 *)(v3 + 23);
  char v5 = v4;
  uint64_t v6 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    unint64_t v7 = *(unsigned __int8 *)(v3 + 23);
  }
  else {
    unint64_t v7 = v6;
  }
  if (v7 >= 0x80)
  {
    int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v7);
    int v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v6 = *(void *)(v3 + 8);
    char v5 = *(unsigned char *)(v3 + 23);
  }
  else
  {
    int v8 = 1;
  }
  if (v5 < 0) {
    int v4 = v6;
  }
  v2 += v8 + v4 + 1;
LABEL_16:
  if (*((char *)this + 31) < 0) {
    uint64_t v9 = *((void *)this + 2);
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray_ArrayAttachment::CheckTypeAndMergeFrom(CRDT::StringArray_ArrayAttachment *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::StringArray_ArrayAttachment::MergeFrom(this, lpsrc);
}

uint64_t CRDT::StringArray_ArrayAttachment::IsInitialized(CRDT::StringArray_ArrayAttachment *this)
{
  return 1;
}

void *CRDT::StringArray_ArrayAttachment::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray.ArrayAttachment");
}

std::string *CRDT::StringArray::MergeFrom(CRDT::StringArray *this, const CRDT::StringArray *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 3239);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  char v5 = (CRDT *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((CRDT::StringArray *)((char *)this + 48), (const CRDT::StringArray *)((char *)a2 + 48));
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    uint64_t v6 = (topotext::String *)*((void *)this + 5);
    if (!v6) {
      operator new();
    }
    unint64_t v7 = (const topotext::String *)*((void *)a2 + 5);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(v5);
      unint64_t v7 = *(const topotext::String **)(CRDT::StringArray::default_instance_ + 40);
    }
    topotext::String::MergeFrom(v6, v7);
  }
  uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v9 = (char *)a2 + 8;
  int v8 = v10;
  int v11 = v9[23];
  if (v11 >= 0) {
    BOOL v12 = v9;
  }
  else {
    BOOL v12 = v8;
  }
  if (v11 >= 0) {
    std::string::size_type v13 = v9[23];
  }
  else {
    std::string::size_type v13 = *((void *)v9 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v12, v13);
}

void sub_1B9BC5754(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::StringArray::~StringArray(CRDT::StringArray *this)
{
  *(void *)this = &unk_1F1337428;
  CRDT::StringArray::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 6);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::StringArray::~StringArray(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::StringArray::SharedDtor(CRDT::StringArray *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::StringArray *)CRDT::StringArray::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CRDT::StringArray::default_instance(CRDT::StringArray *this)
{
  return CRDT::StringArray::default_instance_;
}

void CRDT::StringArray::New(CRDT::StringArray *this)
{
}

uint64_t CRDT::StringArray::Clear(CRDT::StringArray *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v2 = (topotext::String *)*((void *)this + 5);
    if (v2) {
      topotext::String::Clear(v2);
    }
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::StringArray::MergePartialFromCodedStream(CRDT::StringArray *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v33, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32, (google::protobuf::io::ZeroCopyOutputStream *)v33);
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 2)
      {
        if (v7 == 18) {
          goto LABEL_33;
        }
LABEL_21:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_54;
        }
        goto LABEL_18;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_14:
      if (v7) {
        BOOL v11 = (v7 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_54:
        uint64_t v30 = 1;
        goto LABEL_55;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v32, v4))goto LABEL_53; {
    }
      }
    if (v7 != 10) {
      goto LABEL_21;
    }
    *((_DWORD *)this + 8) |= 1u;
    uint64_t v9 = (topotext::String *)*((void *)this + 5);
    if (!v9) {
      operator new();
    }
    unsigned int v34 = 0;
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34)) {
        goto LABEL_53;
      }
    }
    else
    {
      unsigned int v34 = *v10;
      *((void *)a2 + 1) = v10 + 1;
    }
    int v12 = *((_DWORD *)a2 + 14);
    int v13 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v12 + 1;
    if (v12 >= v13) {
      goto LABEL_53;
    }
    int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
    if (!topotext::String::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
      goto LABEL_53;
    }
    google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
    int v15 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v15, 1);
    int v17 = v15 - 1;
    if (v17 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v17;
    }
    BOOL v18 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
    {
      do
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        int v19 = *((_DWORD *)this + 15);
        uint64_t v20 = *((int *)this + 14);
        if ((int)v20 >= v19)
        {
          if (v19 == *((_DWORD *)this + 16)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 48, v19 + 1);
          }
          google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
        }
        uint64_t v21 = *((void *)this + 6);
        *((_DWORD *)this + 14) = v20 + 1;
        BOOL v22 = *(CRDT::StringArray_ArrayAttachment **)(v21 + 8 * v20);
        unsigned int v34 = 0;
        uint64_t v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34)) {
            goto LABEL_53;
          }
        }
        else
        {
          unsigned int v34 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25
          || (int v26 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34),
              !CRDT::StringArray_ArrayAttachment::MergePartialFromCodedStream(v22, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_53:
          uint64_t v30 = 0;
          goto LABEL_55;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v26);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v28;
        }
        BOOL v18 = (unsigned char *)*((void *)a2 + 1);
        int v29 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v18 < v29 && *v18 == 18);
      if (v18 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v30 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_55:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v32);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v33);
  return v30;
}

void sub_1B9BC5CEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::StringArray::SerializeWithCachedSizes(CRDT::StringArray *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v4 = *(void *)(CRDT::StringArray::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
  }
  if (*((int *)this + 14) >= 1)
  {
    int v5 = 0;
    do
    {
      uint64_t v6 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v5);
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
      ++v5;
    }
    while (v5 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::StringArray::ByteSize(CRDT::StringArray *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v3 = (topotext::String *)*((void *)this + 5);
    if (!v3)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v3 = *(topotext::String **)(CRDT::StringArray::default_instance_ + 40);
    }
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  int v7 = *((_DWORD *)this + 14);
  int v8 = v7 + v2;
  if (v7 >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = (CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)this + 48, v9);
      BOOL v11 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray_ArrayAttachment::ByteSize(v10);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      }
      else {
        int v13 = 1;
      }
      v8 += v12 + v13;
      ++v9;
    }
    while (v9 < *((_DWORD *)this + 14));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v14 = *((void *)this + 2);
  }
  else {
    LODWORD(v14) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v8 + v14);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::StringArray::CheckTypeAndMergeFrom(CRDT::StringArray *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::StringArray::MergeFrom(this, lpsrc);
}

uint64_t CRDT::StringArray::IsInitialized(CRDT::StringArray *this)
{
  return 1;
}

void *CRDT::StringArray::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.StringArray");
}

std::string *CRDT::Array::MergeFrom(CRDT::Array *this, const CRDT::Array *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 3480);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::StringArray *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      int v7 = (const CRDT::StringArray *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v7 = *(const CRDT::StringArray **)(CRDT::Array::default_instance_ + 40);
      }
      this = (CRDT::Array *)CRDT::StringArray::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      int v8 = (CRDT::Dictionary *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Dictionary *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Dictionary **)(CRDT::Array::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  BOOL v11 = (char *)a2 + 8;
  uint64_t v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1B9BC6148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Array::~Array(void **this)
{
  *this = &unk_1F1337950;
  CRDT::Array::SharedDtor((CRDT::Array *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Array::~Array(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Array::SharedDtor(CRDT::Array *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Array *)CRDT::Array::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::Array::default_instance(CRDT::Array *this)
{
  return CRDT::Array::default_instance_;
}

void CRDT::Array::New(CRDT::Array *this)
{
}

uint64_t CRDT::Array::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = CRDT::StringArray::Clear((CRDT::StringArray *)this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Array::MergePartialFromCodedStream(CRDT::Array *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::StringArray *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      uint64_t v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::StringArray::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Dictionary *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BC6720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Array::SerializeWithCachedSizes(CRDT::Array *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Array::default_instance_ + 40);
    }
    this = (CRDT::Array *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::Array::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Array::ByteSize(CRDT::Array *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::StringArray *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::StringArray **)(CRDT::Array::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (CRDT::Dictionary *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      unint64_t v7 = *(CRDT::Dictionary **)(CRDT::Array::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Array::CheckTypeAndMergeFrom(CRDT::Array *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Array::MergeFrom(this, lpsrc);
}

uint64_t CRDT::Array::IsInitialized(CRDT::Array *this)
{
  return 1;
}

void *CRDT::Array::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Array");
}

std::string *CRDT::OrderedSet::MergeFrom(CRDT::OrderedSet *this, const CRDT::OrderedSet *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 3723);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)v3 + 8) |= 1u;
      int v6 = (CRDT::Array *)*((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      unint64_t v7 = (const CRDT::Array *)*((void *)a2 + 5);
      if (!v7)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        unint64_t v7 = *(const CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
      }
      this = (CRDT::OrderedSet *)CRDT::Array::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 8) |= 2u;
      uint64_t v8 = (CRDT::Dictionary *)*((void *)v3 + 6);
      if (!v8) {
        operator new();
      }
      int v9 = (const CRDT::Dictionary *)*((void *)a2 + 6);
      if (!v9)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        int v9 = *(const CRDT::Dictionary **)(CRDT::OrderedSet::default_instance_ + 48);
      }
      CRDT::Dictionary::MergeFrom(v8, v9);
    }
  }
  int v12 = (const std::string::value_type *)*((void *)a2 + 1);
  uint64_t v11 = (char *)a2 + 8;
  int v10 = v12;
  int v13 = v11[23];
  if (v13 >= 0) {
    int v14 = v11;
  }
  else {
    int v14 = v10;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v11[23];
  }
  else {
    std::string::size_type v15 = *((void *)v11 + 1);
  }
  return std::string::append((std::string *)((char *)v3 + 8), v14, v15);
}

void sub_1B9BC6B30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::OrderedSet::~OrderedSet(void **this)
{
  *this = &unk_1F13373B0;
  CRDT::OrderedSet::SharedDtor((CRDT::OrderedSet *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::OrderedSet::~OrderedSet(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::OrderedSet::SharedDtor(CRDT::OrderedSet *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::OrderedSet *)CRDT::OrderedSet::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CRDT::OrderedSet::default_instance(CRDT::OrderedSet *this)
{
  return CRDT::OrderedSet::default_instance_;
}

void CRDT::OrderedSet::New(CRDT::OrderedSet *this)
{
}

uint64_t CRDT::OrderedSet::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = CRDT::Array::Clear(this);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        this = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::OrderedSet::MergePartialFromCodedStream(CRDT::OrderedSet *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18) {
        goto LABEL_33;
      }
      goto LABEL_21;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 10)
    {
      *((_DWORD *)this + 8) |= 1u;
      int v9 = (CRDT::Array *)*((void *)this + 5);
      if (!v9) {
        operator new();
      }
      unsigned int v30 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
          goto LABEL_48;
        }
      }
      else
      {
        unsigned int v30 = *v10;
        *((void *)a2 + 1) = v10 + 1;
      }
      int v12 = *((_DWORD *)a2 + 14);
      int v13 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v12 + 1;
      if (v12 >= v13) {
        goto LABEL_48;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      if (!CRDT::Array::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
        goto LABEL_48;
      }
      google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      BOOL v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        *((void *)a2 + 1) = v18 + 1;
LABEL_33:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::Dictionary *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v30 = 0;
        uint64_t v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_48;
          }
        }
        else
        {
          unsigned int v30 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22
          || (int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Dictionary::MergePartialFromCodedStream(v19, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_48:
          uint64_t v26 = 0;
          goto LABEL_50;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v26 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_50;
        }
      }
    }
    else
    {
LABEL_21:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_49;
      }
LABEL_18:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_48; {
    }
      }
  }
  if (v7) {
    BOOL v11 = (v7 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v26 = 1;
LABEL_50:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BC7104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::OrderedSet::SerializeWithCachedSizes(CRDT::OrderedSet *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::OrderedSet::default_instance_ + 40);
    }
    this = (CRDT::OrderedSet *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::OrderedSet::default_instance_ + 48);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    unint64_t v7 = (char *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
  }
  else
  {
    unint64_t v7 = (char *)v3 + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::OrderedSet::ByteSize(CRDT::OrderedSet *this)
{
  if (!*((unsigned char *)this + 32))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CRDT::Array *)*((void *)this + 5);
  if (!v3)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    uint64_t v3 = *(CRDT::Array **)(CRDT::OrderedSet::default_instance_ + 40);
  }
  int v4 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 8) & 2) != 0)
  {
LABEL_12:
    unint64_t v7 = (CRDT::Dictionary *)*((void *)this + 6);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      unint64_t v7 = *(CRDT::Dictionary **)(CRDT::OrderedSet::default_instance_ + 48);
    }
    uint64_t v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v2 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::OrderedSet::CheckTypeAndMergeFrom(CRDT::OrderedSet *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::OrderedSet::MergeFrom(this, lpsrc);
}

uint64_t CRDT::OrderedSet::IsInitialized(CRDT::OrderedSet *this)
{
  return 1;
}

void *CRDT::OrderedSet::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.OrderedSet");
}

std::string *CRDT::Document_CustomObject_MapEntry::MergeFrom(CRDT::Document_CustomObject_MapEntry *this, const CRDT::Document_CustomObject_MapEntry *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 3958);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      int v6 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 8) |= 1u;
      *((_DWORD *)this + 12) = v6;
      int v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)this + 8) |= 2u;
      unint64_t v7 = (CRDT::ObjectID *)*((void *)this + 5);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = (const CRDT::ObjectID *)*((void *)a2 + 5);
      if (!v8)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(this);
        uint64_t v8 = *(const CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
      }
      CRDT::ObjectID::MergeFrom(v7, v8);
    }
  }
  uint64_t v11 = (const std::string::value_type *)*((void *)a2 + 1);
  int v10 = (char *)a2 + 8;
  int v9 = v11;
  int v12 = v10[23];
  if (v12 >= 0) {
    int v13 = v10;
  }
  else {
    int v13 = v9;
  }
  if (v12 >= 0) {
    std::string::size_type v14 = v10[23];
  }
  else {
    std::string::size_type v14 = *((void *)v10 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v13, v14);
}

void sub_1B9BC747C(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407D90225ELL);
  _Unwind_Resume(a1);
}

void CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(void **this)
{
  *this = &unk_1F13378D8;
  CRDT::Document_CustomObject_MapEntry::SharedDtor((CRDT::Document_CustomObject_MapEntry *)this);
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Document_CustomObject_MapEntry::~Document_CustomObject_MapEntry(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Document_CustomObject_MapEntry::SharedDtor(CRDT::Document_CustomObject_MapEntry *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Document_CustomObject_MapEntry *)CRDT::Document_CustomObject_MapEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CRDT::Document_CustomObject_MapEntry::default_instance(CRDT::Document_CustomObject_MapEntry *this)
{
  return CRDT::Document_CustomObject_MapEntry::default_instance_;
}

void CRDT::Document_CustomObject_MapEntry::New(CRDT::Document_CustomObject_MapEntry *this)
{
}

uint64_t CRDT::Document_CustomObject_MapEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 32);
  if ((v2 & 3) != 0)
  {
    *(_DWORD *)(this + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 40);
      if (v3)
      {
        this = CRDT::ObjectID::clear_contents(*(void *)(this + 40));
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(char *)(v1 + 31) < 0)
  {
    **(unsigned char **)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(void *)(v1 + 16) = 0;
  }
  else
  {
    *(unsigned char *)(v1 + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *(unsigned char *)(v1 + 31) = 0;
  }
  return this;
}

uint64_t CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v26, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25, (google::protobuf::io::ZeroCopyOutputStream *)v26);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
    {
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v6 = *v5;
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
      *((void *)a2 + 1) = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
    }
    if (v7 >> 3 == 2)
    {
      if (v7 == 18)
      {
        int v14 = *((_DWORD *)this + 8);
        goto LABEL_28;
      }
      goto LABEL_19;
    }
    if (v7 >> 3 != 1) {
      break;
    }
    if (v7 == 8)
    {
      unsigned int v27 = 0;
      int v10 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
          goto LABEL_43;
        }
        unsigned int v11 = v27;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 12) = v11;
      int v14 = *((_DWORD *)this + 8) | 1;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v14;
      if ((unint64_t)v12 < v9 && *v12 == 18)
      {
        *((void *)a2 + 1) = v12 + 1;
LABEL_28:
        *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = v14 | 2;
        int v15 = (CRDT::ObjectID *)*((void *)this + 5);
        if (!v15) {
          operator new();
        }
        unsigned int v27 = 0;
        char v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27)) {
            goto LABEL_43;
          }
        }
        else
        {
          unsigned int v27 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18
          || (int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27),
              !CRDT::ObjectID::MergePartialFromCodedStream(v15, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_43:
          uint64_t v23 = 0;
          goto LABEL_45;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          uint64_t v23 = 1;
          *((unsigned char *)a2 + 36) = 1;
          goto LABEL_45;
        }
      }
    }
    else
    {
LABEL_19:
      if (!v7 || (v7 & 7) == 4) {
        goto LABEL_44;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v25, v4))goto LABEL_43; {
    }
      }
  }
  if (v7) {
    BOOL v13 = (v7 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13) {
    goto LABEL_16;
  }
LABEL_44:
  uint64_t v23 = 1;
LABEL_45:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v25);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v26);
  return v23;
}

void sub_1B9BC7964(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C407D90225ELL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject_MapEntry::SerializeWithCachedSizes(CRDT::Document_CustomObject_MapEntry *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    this = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 12), a2, a4);
    int v6 = *((_DWORD *)v5 + 8);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *((void *)v5 + 5);
    if (!v7)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v7 = *(void *)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
  }
  if (*((char *)v5 + 31) < 0)
  {
    uint64_t v8 = (char *)*((void *)v5 + 1);
    uint64_t v9 = *((void *)v5 + 2);
  }
  else
  {
    uint64_t v8 = (char *)v5 + 8;
    LODWORD(v9) = *((unsigned __int8 *)v5 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::ByteSize(CRDT::Document_CustomObject_MapEntry *this)
{
  char v2 = *((unsigned char *)this + 32);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 8) & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v5 = (CRDT::ObjectID *)*((void *)this + 5);
  if (!v5)
  {
    CRDT::protobuf_AddDesc_crframework_2eproto(0);
    int v5 = *(CRDT::ObjectID **)(CRDT::Document_CustomObject_MapEntry::default_instance_ + 40);
  }
  int v6 = (google::protobuf::io::CodedOutputStream *)CRDT::ObjectID::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  v3 += v7 + v8 + 1;
LABEL_19:
  if (*((char *)this + 31) < 0) {
    uint64_t v9 = *((void *)this + 2);
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v3 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject_MapEntry::CheckTypeAndMergeFrom(CRDT::Document_CustomObject_MapEntry *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_CustomObject_MapEntry::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document_CustomObject_MapEntry::IsInitialized(CRDT::Document_CustomObject_MapEntry *this)
{
  return (~*((_DWORD *)this + 8) & 3) == 0;
}

void *CRDT::Document_CustomObject_MapEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject.MapEntry");
}

std::string *CRDT::Document_CustomObject::MergeFrom(CRDT::Document_CustomObject *this, const CRDT::Document_CustomObject *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 4184);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((CRDT::Document_CustomObject *)((char *)this + 40), (const CRDT::Document_CustomObject *)((char *)a2 + 40));
  if (*((unsigned char *)a2 + 32))
  {
    int v5 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 16) = v5;
  }
  int v8 = (const std::string::value_type *)*((void *)a2 + 1);
  int v7 = (char *)a2 + 8;
  int v6 = v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v10, v11);
}

void sub_1B9BC7C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void CRDT::Document_CustomObject::~Document_CustomObject(CRDT::Document_CustomObject *this)
{
  *(void *)this = &unk_1F1337770;
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 5);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Document_CustomObject::~Document_CustomObject(this);

  JUMPOUT(0x1BA9DB510);
}

uint64_t CRDT::Document_CustomObject::default_instance(CRDT::Document_CustomObject *this)
{
  return CRDT::Document_CustomObject::default_instance_;
}

void CRDT::Document_CustomObject::New(CRDT::Document_CustomObject *this)
{
}

uint64_t CRDT::Document_CustomObject::Clear(CRDT::Document_CustomObject *this)
{
  *((_DWORD *)this + 16) = 0;
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 40);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document_CustomObject::MergePartialFromCodedStream(CRDT::Document_CustomObject *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v29, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28, (google::protobuf::io::ZeroCopyOutputStream *)v29);
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 1)
      {
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v6 = *v5;
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v6;
        *((void *)a2 + 1) = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
      }
      if (v7 >> 3 == 3)
      {
        if (v7 == 26) {
          goto LABEL_27;
        }
LABEL_19:
        if (!v7 || (v7 & 7) == 4) {
          goto LABEL_48;
        }
        goto LABEL_16;
      }
      if (v7 >> 3 == 1) {
        break;
      }
LABEL_12:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
LABEL_48:
        uint64_t v26 = 1;
        goto LABEL_49;
      }
LABEL_16:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, (google::protobuf::io::CodedOutputStream *)v28, v4))goto LABEL_47; {
    }
      }
    if (v7 != 8) {
      goto LABEL_19;
    }
    unsigned int v30 = 0;
    int v9 = (char *)*((void *)a2 + 1);
    unint64_t v10 = *((void *)a2 + 2);
    if ((unint64_t)v9 >= v10 || *v9 < 0)
    {
      if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        goto LABEL_47;
      }
      unsigned int v11 = v30;
      int v12 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
    }
    else
    {
      unsigned int v11 = *v9;
      int v12 = v9 + 1;
      *((void *)a2 + 1) = v12;
    }
    *((_DWORD *)this + 16) = v11;
    *((_DWORD *)this + 8) |= 1u;
    if ((unint64_t)v12 < v10 && *v12 == 26)
    {
      do
      {
        *((void *)a2 + 1) = v12 + 1;
LABEL_27:
        int v14 = *((_DWORD *)this + 13);
        uint64_t v15 = *((int *)this + 12);
        if ((int)v15 >= v14)
        {
          if (v14 == *((_DWORD *)this + 14)) {
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 40, v14 + 1);
          }
          operator new();
        }
        uint64_t v16 = *((void *)this + 5);
        *((_DWORD *)this + 12) = v15 + 1;
        int v17 = *(CRDT::Document_CustomObject_MapEntry **)(v16 + 8 * v15);
        unsigned int v30 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
            goto LABEL_47;
          }
        }
        else
        {
          unsigned int v30 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20
          || (int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30),
              !CRDT::Document_CustomObject_MapEntry::MergePartialFromCodedStream(v17, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_47:
          uint64_t v26 = 0;
          goto LABEL_49;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v21);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
      }
      while (v12 < v25 && *v12 == 26);
      if (v12 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
  uint64_t v26 = 1;
  *((unsigned char *)a2 + 36) = 1;
LABEL_49:
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v28);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v29);
  return v26;
}

void sub_1B9BC8138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_CustomObject::SerializeWithCachedSizes(CRDT::Document_CustomObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 32)) {
    google::protobuf::internal::WireFormatLite::WriteInt32((google::protobuf::internal::WireFormatLite *)1, *((_DWORD *)this + 16), a2, a4);
  }
  if (*((int *)this + 12) >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0)
  {
    int v8 = (char *)*((void *)this + 1);
    uint64_t v9 = *((void *)this + 2);
  }
  else
  {
    int v8 = (char *)this + 8;
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v8, v9);
}

uint64_t CRDT::Document_CustomObject::ByteSize(CRDT::Document_CustomObject *this)
{
  if (*((unsigned char *)this + 32))
  {
    int v3 = (google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v3 & 0x80000000) != 0)
    {
      int v2 = 11;
    }
    else if (v3 >= 0x80)
    {
      int v2 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      int v2 = 2;
    }
  }
  else
  {
    int v2 = 0;
  }
  int v4 = *((_DWORD *)this + 12);
  int v5 = v4 + v2;
  if (v4 >= 1)
  {
    int v6 = 0;
    do
    {
      uint64_t v7 = (CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)this + 40, v6);
      int v8 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject_MapEntry::ByteSize(v7);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v10 = 1;
      }
      v5 += v9 + v10;
      ++v6;
    }
    while (v6 < *((_DWORD *)this + 12));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v11 = *((void *)this + 2);
  }
  else {
    LODWORD(v11) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v5 + v11);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_CustomObject::CheckTypeAndMergeFrom(CRDT::Document_CustomObject *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_CustomObject::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document_CustomObject::IsInitialized(CRDT::Document_CustomObject *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>((uint64_t)this + 40);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

void *CRDT::Document_CustomObject::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.CustomObject");
}

std::string *CRDT::Document_DocObject::MergeFrom(const CRDT::RegisterLatest **this, const CRDT::RegisterLatest **a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 4864);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 1:
      if (*((_DWORD *)this + 12) != 1)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 1;
        operator new();
      }
      goto LABEL_17;
    case 2:
      if (*((_DWORD *)this + 12) != 2)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 2;
        operator new();
      }
      goto LABEL_17;
    case 3:
      if (*((_DWORD *)this + 12) != 3)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 3;
        operator new();
      }
LABEL_17:
      CRDT::RegisterLatest::MergeFrom(this[5], a2[5]);
      break;
    case 4:
      if (*((_DWORD *)this + 12) != 4)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 4;
        operator new();
      }
      goto LABEL_21;
    case 5:
      if (*((_DWORD *)this + 12) != 5)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 5;
        operator new();
      }
      goto LABEL_21;
    case 6:
      if (*((_DWORD *)this + 12) != 6)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 6;
        operator new();
      }
LABEL_21:
      CRDT::Dictionary::MergeFrom(this[5], a2[5]);
      break;
    case 7:
      if (*((_DWORD *)this + 12) != 7)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 7;
        operator new();
      }
      CRDT::Timestamp::MergeFrom(this[5], a2[5]);
      break;
    case 8:
      if (*((_DWORD *)this + 12) != 8)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 8;
        operator new();
      }
      CRDT::VectorTimestamp::MergeFrom(this[5], a2[5]);
      break;
    case 9:
      if (*((_DWORD *)this + 12) != 9)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 9;
        operator new();
      }
      CRDT::Index::MergeFrom(this[5], a2[5]);
      break;
    case 0xA:
      if (*((_DWORD *)this + 12) != 10)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 10;
        operator new();
      }
      topotext::String::MergeFrom(this[5], a2[5]);
      break;
    case 0xB:
      uint64_t v5 = a2[5];
      if (*((_DWORD *)this + 12) != 11)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 11;
      }
      this[5] = v5;
      break;
    case 0xC:
      if (*((_DWORD *)this + 12) != 12)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 12;
        operator new();
      }
      CRDT::OneOf::MergeFrom(this[5], a2[5]);
      break;
    case 0xD:
      if (*((_DWORD *)this + 12) != 13)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 13;
        operator new();
      }
      CRDT::Document_CustomObject::MergeFrom(this[5], a2[5]);
      break;
    case 0xE:
      if (*((_DWORD *)this + 12) != 14)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 14;
        operator new();
      }
      CRDT::StringArray::MergeFrom(this[5], a2[5]);
      break;
    case 0xF:
      if (*((_DWORD *)this + 12) != 15)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 15;
        operator new();
      }
      CRDT::Array::MergeFrom(this[5], a2[5]);
      break;
    case 0x10:
      if (*((_DWORD *)this + 12) != 16)
      {
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        *((_DWORD *)this + 12) = 16;
        operator new();
      }
      CRDT::OrderedSet::MergeFrom(this[5], a2[5]);
      break;
    default:
      break;
  }
  int v8 = a2[1];
  uint64_t v7 = (char *)(a2 + 1);
  int v6 = (const std::string::value_type *)v8;
  int v9 = v7[23];
  if (v9 >= 0) {
    int v10 = v7;
  }
  else {
    int v10 = v6;
  }
  if (v9 >= 0) {
    std::string::size_type v11 = v7[23];
  }
  else {
    std::string::size_type v11 = *((void *)v7 + 1);
  }
  return std::string::append((std::string *)(this + 1), v10, v11);
}

void sub_1B9BC8DA0(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C406C843DA2);
  _Unwind_Resume(a1);
}

void CRDT::Document_DocObject::~Document_DocObject(CRDT::Document_DocObject *this)
{
  uint64_t v1 = this;
  *(void *)this = &unk_1F13376F8;
  if (*((_DWORD *)this + 12)) {
    this = (CRDT::Document_DocObject *)CRDT::Document_DocObject::clear_contents((uint64_t)this);
  }
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if (*((char *)v1 + 31) < 0) {
    operator delete(*((void **)v1 + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
}

{
  uint64_t vars8;

  CRDT::Document_DocObject::~Document_DocObject(this);

  JUMPOUT(0x1BA9DB510);
}

uint64_t CRDT::Document_DocObject::clear_contents(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
      this = *(void *)(this + 40);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 4_Block_object_dispose(&STACK[0x260], 8) = 0;
  return this;
}

void CRDT::Document_DocObject::New(CRDT::Document_DocObject *this)
{
}

uint64_t CRDT::Document_DocObject::Clear(CRDT::Document_DocObject *this)
{
  uint64_t result = CRDT::Document_DocObject::clear_contents((uint64_t)this);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document_DocObject::MergePartialFromCodedStream(CRDT::Document_DocObject *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v140, (uint64_t)this + 8);
  google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139, (google::protobuf::io::ZeroCopyOutputStream *)v140);
  uint64_t v5 = (CRDT::RegisterLatest **)((char *)this + 40);
  while (2)
  {
    while (1)
    {
      int v6 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v6 < v7)
      {
        uint64_t v8 = *v6;
        if (*v6 >= 1)
        {
          *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v8;
          int v9 = (unsigned __int8 *)(v6 + 1);
          goto LABEL_8;
        }
        if ((unint64_t)(v6 + 1) < v7)
        {
          int v10 = v6[1];
          if ((v8 & ~v10) >= 0x80) {
            break;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v11 & 0x100000000) != 0) {
        goto LABEL_16;
      }
LABEL_9:
      if (v11) {
        BOOL v12 = (v11 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
LABEL_286:
        uint64_t v137 = 1;
        goto LABEL_287;
      }
LABEL_52:
      if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, (google::protobuf::io::CodedOutputStream *)v139, v4))goto LABEL_285; {
    }
      }
    uint64_t v8 = (v8 + (v10 << 7) - 128);
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v8;
    int v9 = (unsigned __int8 *)(v6 + 2);
LABEL_8:
    *((void *)a2 + 1) = v9;
    unint64_t v11 = v8 | 0x100000000;
LABEL_16:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10) {
          goto LABEL_50;
        }
        if (*((_DWORD *)this + 12) != 1)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 1;
          operator new();
        }
        int v14 = *v5;
        unsigned int v141 = 0;
        uint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          goto LABEL_285;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v14, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v19);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        BOOL v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_67:
        if (*((_DWORD *)this + 12) != 2)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 2;
          operator new();
        }
        int v24 = *v5;
        unsigned int v141 = 0;
        int v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          goto LABEL_285;
        }
        int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v24, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v28);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_82:
        if (*((_DWORD *)this + 12) != 3)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 3;
          operator new();
        }
        int v32 = *v5;
        unsigned int v141 = 0;
        int v33 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)a2 + 14);
        int v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35) {
          goto LABEL_285;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::RegisterLatest::MergePartialFromCodedStream(v32, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v36);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_97:
        if (*((_DWORD *)this + 12) != 4)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 4;
          operator new();
        }
        int v40 = *v5;
        unsigned int v141 = 0;
        int v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          goto LABEL_285;
        }
        int v44 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v40, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v44);
        int v45 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v46;
        }
        char v47 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_112:
        if (*((_DWORD *)this + 12) != 5)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 5;
          operator new();
        }
        int v48 = *v5;
        unsigned int v141 = 0;
        int v49 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v49;
          *((void *)a2 + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)a2 + 14);
        int v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51) {
          goto LABEL_285;
        }
        int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v48, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v52);
        int v53 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v54;
        }
        uint64_t v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_127:
        if (*((_DWORD *)this + 12) != 6)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 6;
          operator new();
        }
        int v56 = *v5;
        unsigned int v141 = 0;
        char v57 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v57;
          *((void *)a2 + 1) = v57 + 1;
        }
        int v58 = *((_DWORD *)a2 + 14);
        int v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 >= v59) {
          goto LABEL_285;
        }
        int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Dictionary::MergePartialFromCodedStream(v56, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v60);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v62;
        }
        int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_142:
        if (*((_DWORD *)this + 12) != 7)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 7;
          operator new();
        }
        int v64 = *v5;
        unsigned int v141 = 0;
        int v65 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v65;
          *((void *)a2 + 1) = v65 + 1;
        }
        int v66 = *((_DWORD *)a2 + 14);
        int v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67) {
          goto LABEL_285;
        }
        int v68 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Timestamp::MergePartialFromCodedStream(v64, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v68);
        int v69 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v69, 1);
        int v70 = v69 - 1;
        if (v70 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v70;
        }
        int v71 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v71 >= *((void *)a2 + 2) || *v71 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 1;
LABEL_157:
        if (*((_DWORD *)this + 12) != 8)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 8;
          operator new();
        }
        uint64_t v72 = *v5;
        unsigned int v141 = 0;
        int v73 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v73 >= *((void *)a2 + 2) || *v73 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v73;
          *((void *)a2 + 1) = v73 + 1;
        }
        int v74 = *((_DWORD *)a2 + 14);
        int v75 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v74 + 1;
        if (v74 >= v75) {
          goto LABEL_285;
        }
        int v76 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v72, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v76);
        int v77 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v78;
        }
        int v79 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v79 >= *((void *)a2 + 2) || *v79 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v79 + 1;
LABEL_172:
        if (*((_DWORD *)this + 12) != 9)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 9;
          operator new();
        }
        char v80 = *v5;
        unsigned int v141 = 0;
        uint64_t v81 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v81 >= *((void *)a2 + 2) || *v81 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v81;
          *((void *)a2 + 1) = v81 + 1;
        }
        int v82 = *((_DWORD *)a2 + 14);
        int v83 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v82 + 1;
        if (v82 >= v83) {
          goto LABEL_285;
        }
        int v84 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Index::MergePartialFromCodedStream(v80, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v84);
        int v85 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v85, 1);
        int v86 = v85 - 1;
        if (v86 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v86;
        }
        id v87 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v87 >= *((void *)a2 + 2) || *v87 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v87 + 1;
LABEL_187:
        if (*((_DWORD *)this + 12) != 10)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 10;
          operator new();
        }
        uint64_t v88 = *v5;
        unsigned int v141 = 0;
        int v89 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v89 >= *((void *)a2 + 2) || *v89 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v89;
          *((void *)a2 + 1) = v89 + 1;
        }
        int v90 = *((_DWORD *)a2 + 14);
        int v91 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v90 + 1;
        if (v90 >= v91) {
          goto LABEL_285;
        }
        int v92 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!topotext::String::MergePartialFromCodedStream(v88, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v92);
        int v93 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v93, 1);
        int v94 = v93 - 1;
        if (v94 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v94;
        }
        uint64_t v95 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v95 >= *((void *)a2 + 2) || *v95 != 88) {
          continue;
        }
        *((void *)a2 + 1) = v95 + 1;
LABEL_202:
        CRDT::Document_DocObject::clear_contents((uint64_t)this);
        int v97 = (char *)*((void *)a2 + 1);
        unint64_t v96 = *((void *)a2 + 2);
        if ((unint64_t)v97 >= v96 || *v97 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)this + 5))goto LABEL_285; {
          uint64_t v98 = (unsigned char *)*((void *)a2 + 1);
          }
          unint64_t v96 = *((void *)a2 + 2);
        }
        else
        {
          const CRDT::RegisterLatest *v5 = (CRDT::RegisterLatest *)*v97;
          uint64_t v98 = v97 + 1;
          *((void *)a2 + 1) = v98;
        }
        *((_DWORD *)this + 12) = 11;
        if ((unint64_t)v98 < v96 && *v98 == 98)
        {
          *((void *)a2 + 1) = v98 + 1;
LABEL_210:
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 12;
          operator new();
        }
        continue;
      case 2u:
        if (v11 == 18) {
          goto LABEL_67;
        }
        goto LABEL_50;
      case 3u:
        if (v11 == 26) {
          goto LABEL_82;
        }
        goto LABEL_50;
      case 4u:
        if (v11 == 34) {
          goto LABEL_97;
        }
        goto LABEL_50;
      case 5u:
        if (v11 == 42) {
          goto LABEL_112;
        }
        goto LABEL_50;
      case 6u:
        if (v11 == 50) {
          goto LABEL_127;
        }
        goto LABEL_50;
      case 7u:
        if (v11 == 58) {
          goto LABEL_142;
        }
        goto LABEL_50;
      case 8u:
        if (v11 == 66) {
          goto LABEL_157;
        }
        goto LABEL_50;
      case 9u:
        if (v11 == 74) {
          goto LABEL_172;
        }
        goto LABEL_50;
      case 0xAu:
        if (v11 == 82) {
          goto LABEL_187;
        }
        goto LABEL_50;
      case 0xBu:
        if (v11 == 88) {
          goto LABEL_202;
        }
        goto LABEL_50;
      case 0xCu:
        if (v11 != 98) {
          goto LABEL_50;
        }
        if (*((_DWORD *)this + 12) != 12) {
          goto LABEL_210;
        }
        uint64_t v15 = *v5;
        unsigned int v141 = 0;
        v99 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v99 >= *((void *)a2 + 2) || *v99 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v99;
          *((void *)a2 + 1) = v99 + 1;
        }
        int v100 = *((_DWORD *)a2 + 14);
        int v101 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v100 + 1;
        if (v100 >= v101) {
          goto LABEL_285;
        }
        int v102 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::OneOf::MergePartialFromCodedStream(v15, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v102);
        int v103 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v103, 1);
        int v104 = v103 - 1;
        if (v104 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v104;
        }
        int v105 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v105 >= *((void *)a2 + 2) || *v105 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v105 + 1;
LABEL_223:
        if (*((_DWORD *)this + 12) != 13)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 13;
          operator new();
        }
        uint64_t v106 = *v5;
        unsigned int v141 = 0;
        uint64_t v107 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v107 >= *((void *)a2 + 2) || *v107 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v107;
          *((void *)a2 + 1) = v107 + 1;
        }
        int v108 = *((_DWORD *)a2 + 14);
        int v109 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v108 + 1;
        if (v108 >= v109) {
          goto LABEL_285;
        }
        int v110 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Document_CustomObject::MergePartialFromCodedStream(v106, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v110);
        int v111 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v111, 1);
        int v112 = v111 - 1;
        if (v112 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v112;
        }
        v113 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v113 >= *((void *)a2 + 2) || *v113 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v113 + 1;
LABEL_238:
        if (*((_DWORD *)this + 12) != 14)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 14;
          operator new();
        }
        v114 = *v5;
        unsigned int v141 = 0;
        v115 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v115 >= *((void *)a2 + 2) || *v115 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v115;
          *((void *)a2 + 1) = v115 + 1;
        }
        int v116 = *((_DWORD *)a2 + 14);
        int v117 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v116 + 1;
        if (v116 >= v117) {
          goto LABEL_285;
        }
        int v118 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::StringArray::MergePartialFromCodedStream(v114, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v118);
        int v119 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v119, 1);
        int v120 = v119 - 1;
        if (v120 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v120;
        }
        v121 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v121 >= *((void *)a2 + 2) || *v121 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v121 + 1;
LABEL_253:
        if (*((_DWORD *)this + 12) != 15)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 15;
          operator new();
        }
        v122 = *v5;
        unsigned int v141 = 0;
        v123 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v123 >= *((void *)a2 + 2) || *v123 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v123;
          *((void *)a2 + 1) = v123 + 1;
        }
        int v124 = *((_DWORD *)a2 + 14);
        int v125 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v124 + 1;
        if (v124 >= v125) {
          goto LABEL_285;
        }
        int v126 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
        if (!CRDT::Array::MergePartialFromCodedStream(v122, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_285;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v126);
        int v127 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v127, 1);
        int v128 = v127 - 1;
        if (v128 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v128;
        }
        v129 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v129 <= 1 || *v129 != 130 || v129[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v129 + 2;
LABEL_269:
        if (*((_DWORD *)this + 12) != 16)
        {
          CRDT::Document_DocObject::clear_contents((uint64_t)this);
          *((_DWORD *)this + 12) = 16;
          operator new();
        }
        v130 = *v5;
        unsigned int v141 = 0;
        v131 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v131 >= *((void *)a2 + 2) || *v131 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v141)) {
            goto LABEL_285;
          }
        }
        else
        {
          unsigned int v141 = *v131;
          *((void *)a2 + 1) = v131 + 1;
        }
        int v132 = *((_DWORD *)a2 + 14);
        int v133 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v132 + 1;
        if (v132 >= v133
          || (int v134 = google::protobuf::io::CodedInputStream::PushLimit(a2, v141),
              !CRDT::OrderedSet::MergePartialFromCodedStream(v130, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_285:
          uint64_t v137 = 0;
          goto LABEL_287;
        }
        google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v134);
        int v135 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v135, 1);
        int v136 = v135 - 1;
        if (v136 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v136;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v137 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_287:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v139);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v140);
        return v137;
      case 0xDu:
        if (v11 == 106) {
          goto LABEL_223;
        }
        goto LABEL_50;
      case 0xEu:
        if (v11 == 114) {
          goto LABEL_238;
        }
        goto LABEL_50;
      case 0xFu:
        if (v11 == 122) {
          goto LABEL_253;
        }
        goto LABEL_50;
      case 0x10u:
        if (v11 == 130) {
          goto LABEL_269;
        }
LABEL_50:
        if (v11 && (v11 & 7) != 4) {
          goto LABEL_52;
        }
        goto LABEL_286;
      default:
        goto LABEL_9;
    }
  }
}

void sub_1B9BCA400(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x10B3C406C843DA2);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document_DocObject::SerializeWithCachedSizes(CRDT::Document_DocObject *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6 == 1)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(1, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 2)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(2, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 3)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(3, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 4)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(4, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 5)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(5, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 6)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(6, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 7)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(7, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 8)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(8, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 9)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(9, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 10)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(10, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 11)
  {
    google::protobuf::internal::WireFormatLite::WriteInt64((google::protobuf::internal::WireFormatLite *)0xB, *((void *)this + 5), a2, a4);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 12)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(12, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 13)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(13, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 14)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(14, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 15)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(15, *((void *)this + 5), a2);
    int v6 = *((_DWORD *)this + 12);
  }
  if (v6 == 16) {
    google::protobuf::internal::WireFormatLite::WriteMessage(16, *((void *)this + 5), a2);
  }
  if (*((char *)this + 31) < 0)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    uint64_t v8 = *((void *)this + 2);
  }
  else
  {
    uint64_t v7 = (char *)this + 8;
    LODWORD(v_Block_object_dispose(&STACK[0x260], 8) = *((unsigned __int8 *)this + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v7, v8);
}

uint64_t CRDT::Document_DocObject::ByteSize(CRDT::RegisterLatest **this)
{
  switch(*((_DWORD *)this + 12))
  {
    case 1:
    case 2:
    case 3:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::RegisterLatest::ByteSize(this[5]);
      goto LABEL_16;
    case 4:
    case 5:
    case 6:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Dictionary::ByteSize(this[5]);
      goto LABEL_16;
    case 7:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Timestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 8:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(this[5]);
      goto LABEL_16;
    case 9:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Index::ByteSize(this[5]);
      goto LABEL_16;
    case 0xA:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)topotext::String::ByteSize(this[5]);
      goto LABEL_16;
    case 0xB:
      int v6 = google::protobuf::io::CodedOutputStream::VarintSize64((unint64_t)this[5]) + 1;
      break;
    case 0xC:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::OneOf::ByteSize(this[5]);
      goto LABEL_16;
    case 0xD:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_CustomObject::ByteSize(this[5]);
      goto LABEL_16;
    case 0xE:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::StringArray::ByteSize(this[5]);
      goto LABEL_16;
    case 0xF:
      uint64_t v2 = (google::protobuf::io::CodedOutputStream *)CRDT::Array::ByteSize(this[5]);
LABEL_16:
      int v7 = (int)v2;
      if (v2 >= 0x80) {
        int v8 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v2);
      }
      else {
        int v8 = 1;
      }
      int v6 = v7 + v8 + 1;
      break;
    case 0x10:
      int v3 = (google::protobuf::io::CodedOutputStream *)CRDT::OrderedSet::ByteSize(this[5]);
      int v4 = (int)v3;
      if (v3 >= 0x80) {
        int v5 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3);
      }
      else {
        int v5 = 1;
      }
      int v6 = v4 + v5 + 2;
      break;
    default:
      int v6 = 0;
      break;
  }
  if (*((char *)this + 31) < 0) {
    int v9 = this[2];
  }
  else {
    LODWORD(v9) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v6 + v9);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document_DocObject::CheckTypeAndMergeFrom(const CRDT::RegisterLatest **this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document_DocObject::MergeFrom(this, (const CRDT::RegisterLatest **)lpsrc);
}

uint64_t CRDT::Document_DocObject::IsInitialized(CRDT::Document_DocObject *this)
{
  if (*((_DWORD *)this + 12) != 13) {
    return 1;
  }
  uint64_t result = (*(uint64_t (**)(void))(**((void **)this + 5) + 40))(*((void *)this + 5));
  if (result) {
    return 1;
  }
  return result;
}

void *CRDT::Document_DocObject::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document.DocObject");
}

CRDT::Document *CRDT::Document::Document(CRDT::Document *this)
{
  *(void *)this = &unk_1F1337AB8;
  *((void *)this + 1) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  *((_DWORD *)this + 1_Block_object_dispose(&STACK[0x260], 8) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + --*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((_DWORD *)this + 30) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 36) = 0;
  CRDT::Document::SharedCtor(this);
  return this;
}

void sub_1B9BCA9A8(_Unwind_Exception *a1)
{
  int v7 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>(v2);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v6);
  }
  TTBoundedCheckedCastNSUIntegerToUInt32(v1);
  _Unwind_Resume(a1);
}

void CRDT::Document::SharedCtor(CRDT::Document *this)
{
  uint64_t v2 = google::protobuf::internal::empty_string_once_init_;
  __dmb(0xBu);
  if (v2 != 2)
  {
    v3[0] = &unk_1F1337CD8;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
    google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!google::protobuf::internal::empty_string_) {
    replica_manager::ReplicaManager::SharedCtor();
  }
  *((void *)this + 19) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
}

void sub_1B9BCAAAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::FunctionClosure0::~FunctionClosure0((google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

std::string *CRDT::Document::MergeFrom(CRDT::Document *this, const CRDT::Document *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/crframework.pb.cc", 5327);
    char v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((CRDT::Document *)((char *)this + 56), (const CRDT::Document *)((char *)a2 + 56));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 80), (const CRDT::Document *)((char *)a2 + 80));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 104), (const CRDT::Document *)((char *)a2 + 104));
  int v5 = (CRDT *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((CRDT::Document *)((char *)this + 128), (const CRDT::Document *)((char *)a2 + 128));
  LOBYTE(v6) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v6)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      int v7 = (CRDT::VectorTimestamp *)*((void *)this + 5);
      if (!v7) {
        operator new();
      }
      int v8 = (const CRDT::VectorTimestamp *)*((void *)a2 + 5);
      if (!v8)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(v5);
        int v8 = *(const CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 40);
      }
      int v5 = (CRDT *)CRDT::VectorTimestamp::MergeFrom(v7, v8);
      int v6 = *((_DWORD *)a2 + 8);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 0x40) == 0) {
          goto LABEL_23;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) |= 2u;
    int v9 = (CRDT::VectorTimestamp *)*((void *)this + 6);
    if (!v9) {
      operator new();
    }
    int v10 = (const CRDT::VectorTimestamp *)*((void *)a2 + 6);
    if (!v10)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(v5);
      int v10 = *(const CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 48);
    }
    int v5 = (CRDT *)CRDT::VectorTimestamp::MergeFrom(v9, v10);
    if ((*((_DWORD *)a2 + 8) & 0x40) != 0)
    {
LABEL_18:
      *((_DWORD *)this + 8) |= 0x40u;
      unint64_t v11 = (topotext::VectorTimestamp *)*((void *)this + 19);
      if (!v11) {
        operator new();
      }
      BOOL v12 = (const topotext::VectorTimestamp *)*((void *)a2 + 19);
      if (!v12)
      {
        CRDT::protobuf_AddDesc_crframework_2eproto(v5);
        BOOL v12 = *(const topotext::VectorTimestamp **)(CRDT::Document::default_instance_ + 152);
      }
      topotext::VectorTimestamp::MergeFrom(v11, v12);
    }
  }
LABEL_23:
  uint64_t v15 = (const std::string::value_type *)*((void *)a2 + 1);
  int v14 = (char *)a2 + 8;
  char v13 = v15;
  int v16 = v14[23];
  if (v16 >= 0) {
    int v17 = v14;
  }
  else {
    int v17 = v13;
  }
  if (v16 >= 0) {
    std::string::size_type v18 = v14[23];
  }
  else {
    std::string::size_type v18 = *((void *)v14 + 1);
  }
  return std::string::append((std::string *)((char *)this + 8), v17, v18);
}

void sub_1B9BCAD14(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x1093C4020A6E6BFLL);
  _Unwind_Resume(a1);
}

void CRDT::Document::~Document(CRDT::Document *this)
{
  *(void *)this = &unk_1F1337AB8;
  CRDT::Document::SharedDtor(this);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 32);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 26);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int *)this + 20);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<replica_manager::VectorTimestampElement>::TypeHandler>((uint64_t *)this + 7);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }

  TTBoundedCheckedCastNSUIntegerToUInt32(this);
}

{
  uint64_t vars8;

  CRDT::Document::~Document(this);

  JUMPOUT(0x1BA9DB510);
}

void CRDT::Document::SharedDtor(CRDT::Document *this)
{
  CRDT::protobuf_AddDesc_crframework_2eproto(this);
  if ((CRDT::Document *)CRDT::Document::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 19);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CRDT::Document::default_instance(CRDT::Document *this)
{
  return CRDT::Document::default_instance_;
}

void CRDT::Document::New(CRDT::Document *this)
{
}

void sub_1B9BCAF50(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C408ACEAB29);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::Clear(CRDT::Document *this)
{
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 0x43) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 5);
      if (v3)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v3 + 40);
        *(_DWORD *)(v3 + 32) = 0;
        if (*(char *)(v3 + 31) < 0)
        {
          **(unsigned char **)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v3 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v3 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 6);
      if (v4)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>(v4 + 40);
        *(_DWORD *)(v4 + 32) = 0;
        if (*(char *)(v4 + 31) < 0)
        {
          **(unsigned char **)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        else
        {
          *(unsigned char *)(v4 + _Block_object_dispose(&STACK[0x260], 8) = 0;
          *(unsigned char *)(v4 + 31) = 0;
        }
      }
    }
    if ((*((unsigned char *)this + 32) & 0x40) != 0)
    {
      int v5 = (topotext::VectorTimestamp *)*((void *)this + 19);
      if (v5) {
        topotext::VectorTimestamp::Clear(v5);
      }
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<versioned_document::Version>::TypeHandler>((uint64_t)this + 56);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104);
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128);
  *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + _Block_object_dispose(&STACK[0x260], 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  return result;
}

uint64_t CRDT::Document::MergePartialFromCodedStream(CRDT::Document *this, google::protobuf::io::CodedInputStream *a2)
{
  google::protobuf::io::StringOutputStream::StringOutputStream(v60, (uint64_t)this + 8);
  unint64_t TagFallback = (unint64_t)google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v59, (google::protobuf::io::ZeroCopyOutputStream *)v60);
LABEL_2:
  while (2)
  {
    while (1)
    {
      int v6 = (unsigned __int8 *)*((void *)a2 + 1);
      if ((unint64_t)v6 < *((void *)a2 + 2) && (char)*v6 >= 1) {
        break;
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      unint64_t v8 = TagFallback | ((unint64_t)((TagFallback - 1) < 0x7F) << 32);
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_6;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
LABEL_121:
        uint64_t v57 = 1;
        goto LABEL_122;
      }
LABEL_32:
      unint64_t TagFallback = google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, (google::protobuf::io::CodedOutputStream *)v59, v5);
      if ((TagFallback & 1) == 0) {
        goto LABEL_120;
      }
    }
    uint64_t v7 = *v6;
    *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = v7;
    *((void *)a2 + 1) = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
LABEL_6:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *((_DWORD *)this + 8) |= 1u;
        int v9 = (CRDT::VectorTimestamp *)*((void *)this + 5);
        if (!v9) {
          operator new();
        }
        unsigned int v61 = 0;
        int v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          goto LABEL_120;
        }
        int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v9, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_120;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v14);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        std::string::size_type v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_43:
        *((_DWORD *)this + 8) |= 2u;
        int v19 = (CRDT::VectorTimestamp *)*((void *)this + 6);
        if (!v19) {
          operator new();
        }
        unsigned int v61 = 0;
        char v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          goto LABEL_120;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
        if (!CRDT::VectorTimestamp::MergePartialFromCodedStream(v19, a2) || !*((unsigned char *)a2 + 36)) {
          goto LABEL_120;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v23);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 26) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_57:
          int v27 = *((_DWORD *)this + 17);
          uint64_t v28 = *((int *)this + 16);
          if ((int)v28 >= v27)
          {
            if (v27 == *((_DWORD *)this + 18)) {
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 56, v27 + 1);
            }
            operator new();
          }
          uint64_t v29 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v28 + 1;
          int v30 = *(CRDT::Document_DocObject **)(v29 + 8 * v28);
          unsigned int v61 = 0;
          int v31 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
          {
            if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
              goto LABEL_120;
            }
          }
          else
          {
            unsigned int v61 = *v31;
            *((void *)a2 + 1) = v31 + 1;
          }
          int v32 = *((_DWORD *)a2 + 14);
          int v33 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v32 + 1;
          if (v32 >= v33) {
            goto LABEL_120;
          }
          int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
          if (!CRDT::Document_DocObject::MergePartialFromCodedStream(v30, a2) || !*((unsigned char *)a2 + 36)) {
            goto LABEL_120;
          }
          unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v34);
          int v35 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v35, 1);
          int v36 = v35 - 1;
          if (v36 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v36;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v37 = *v26;
        }
        while (v37 == 26);
        if (v37 != 34) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_75:
          int v38 = *((_DWORD *)this + 23);
          uint64_t v39 = *((int *)this + 22);
          if ((int)v39 >= v38)
          {
            if (v38 == *((_DWORD *)this + 24)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 80, v38 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v40 = *((void *)this + 10);
          *((_DWORD *)this + 22) = v39 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v40 + 8 * v39));
          if (!TagFallback) {
            goto LABEL_120;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v41 = *v26;
        }
        while (v41 == 34);
        if (v41 != 42) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_85:
          int v42 = *((_DWORD *)this + 29);
          uint64_t v43 = *((int *)this + 28);
          if ((int)v43 >= v42)
          {
            if (v42 == *((_DWORD *)this + 30)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 104, v42 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v44 = *((void *)this + 13);
          *((_DWORD *)this + 2_Block_object_dispose(&STACK[0x260], 8) = v43 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v44 + 8 * v43));
          if (!TagFallback) {
            goto LABEL_120;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v45 = *v26;
        }
        while (v45 == 42);
        if (v45 != 50) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v26 + 1;
LABEL_95:
          int v46 = *((_DWORD *)this + 35);
          uint64_t v47 = *((int *)this + 34);
          if ((int)v47 >= v46)
          {
            if (v46 == *((_DWORD *)this + 36)) {
              unint64_t TagFallback = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this + 128, v46 + 1);
            }
            google::protobuf::internal::StringTypeHandlerBase::New((google::protobuf::internal::StringTypeHandlerBase *)TagFallback);
          }
          uint64_t v48 = *((void *)this + 16);
          *((_DWORD *)this + 34) = v47 + 1;
          unint64_t TagFallback = google::protobuf::internal::WireFormatLite::ReadString(a2, *(std::string **)(v48 + 8 * v47));
          if (!TagFallback) {
            goto LABEL_120;
          }
          int v26 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v26 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v49 = *v26;
        }
        while (v49 == 50);
        if (v49 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_105:
        *((_DWORD *)this + 8) |= 0x40u;
        int v50 = (topotext::VectorTimestamp *)*((void *)this + 19);
        if (!v50) {
          operator new();
        }
        unsigned int v61 = 0;
        int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v61)) {
            goto LABEL_120;
          }
        }
        else
        {
          unsigned int v61 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53
          || (int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v61),
              !topotext::VectorTimestamp::MergePartialFromCodedStream(v50, a2))
          || !*((unsigned char *)a2 + 36))
        {
LABEL_120:
          uint64_t v57 = 0;
          goto LABEL_122;
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::PopLimit((uint64_t)a2, v54);
        int v55 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v56;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + _Block_object_dispose(&STACK[0x260], 8) = 0;
        uint64_t v57 = 1;
        *((unsigned char *)a2 + 36) = 1;
LABEL_122:
        google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v59);
        google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)v60);
        return v57;
      case 2u:
        if (v8 == 18) {
          goto LABEL_43;
        }
        goto LABEL_30;
      case 3u:
        if (v8 == 26) {
          goto LABEL_57;
        }
        goto LABEL_30;
      case 4u:
        if (v8 == 34) {
          goto LABEL_75;
        }
        goto LABEL_30;
      case 5u:
        if (v8 == 42) {
          goto LABEL_85;
        }
        goto LABEL_30;
      case 6u:
        if (v8 == 50) {
          goto LABEL_95;
        }
        goto LABEL_30;
      case 7u:
        if (v8 == 58) {
          goto LABEL_105;
        }
LABEL_30:
        if (v8 && (v8 & 7) != 4) {
          goto LABEL_32;
        }
        goto LABEL_121;
      default:
        goto LABEL_13;
    }
  }
}

void sub_1B9BCB84C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  MEMORY[0x1BA9DB510](v2, 0x1093C4020A6E6BFLL);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)va);
  google::protobuf::io::StringOutputStream::~StringOutputStream((google::protobuf::io::StringOutputStream *)va1);
  _Unwind_Resume(a1);
}

uint64_t CRDT::Document::SerializeWithCachedSizes(CRDT::Document *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *((_DWORD *)this + 8);
  if (v4)
  {
    uint64_t v5 = *((void *)this + 5);
    if (!v5)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v5 = *(void *)(CRDT::Document::default_instance_ + 40);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    int v4 = *((_DWORD *)v3 + 8);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v6 = *((void *)v3 + 6);
    if (!v6)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v6 = *(void *)(CRDT::Document::default_instance_ + 48);
    }
    this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
  }
  if (*((int *)v3 + 16) >= 1)
  {
    int v7 = 0;
    do
    {
      uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)v3 + 56, v7);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
      ++v7;
    }
    while (v7 < *((_DWORD *)v3 + 16));
  }
  if (*((int *)v3 + 22) >= 1)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 80, v9);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(4, v10, a2);
      ++v9;
    }
    while (v9 < *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    int v11 = 0;
    do
    {
      uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 104, v11);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteString(5, v12, a2);
      ++v11;
    }
    while (v11 < *((_DWORD *)v3 + 28));
  }
  if (*((int *)v3 + 34) >= 1)
  {
    int v13 = 0;
    do
    {
      uint64_t v14 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v3 + 128, v13);
      this = (CRDT::Document *)google::protobuf::internal::WireFormatLite::WriteBytes(6, v14, a2);
      ++v13;
    }
    while (v13 < *((_DWORD *)v3 + 34));
  }
  if ((*((unsigned char *)v3 + 32) & 0x40) != 0)
  {
    uint64_t v15 = *((void *)v3 + 19);
    if (!v15)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(this);
      uint64_t v15 = *(void *)(CRDT::Document::default_instance_ + 152);
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(7, v15, a2);
  }
  if (*((char *)v3 + 31) < 0)
  {
    BOOL v16 = (char *)*((void *)v3 + 1);
    uint64_t v17 = *((void *)v3 + 2);
  }
  else
  {
    BOOL v16 = (char *)v3 + 8;
    LODWORD(v17) = *((unsigned __int8 *)v3 + 31);
  }

  return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, v17);
}

uint64_t CRDT::Document::ByteSize(CRDT::Document *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_25;
  }
  if (*((unsigned char *)this + 32))
  {
    int v4 = (CRDT::VectorTimestamp *)*((void *)this + 5);
    if (!v4)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      int v4 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 40);
    }
    uint64_t v5 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v4);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CRDT::VectorTimestamp *)*((void *)this + 6);
    if (!v8)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v8 = *(CRDT::VectorTimestamp **)(CRDT::Document::default_instance_ + 48);
    }
    int v9 = (google::protobuf::io::CodedOutputStream *)CRDT::VectorTimestamp::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 8);
  }
LABEL_18:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v12 = (topotext::VectorTimestamp *)*((void *)this + 19);
    if (!v12)
    {
      CRDT::protobuf_AddDesc_crframework_2eproto(0);
      uint64_t v12 = *(topotext::VectorTimestamp **)(CRDT::Document::default_instance_ + 152);
    }
    int v13 = (google::protobuf::io::CodedOutputStream *)topotext::VectorTimestamp::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v3 += v14 + v15 + 1;
  }
LABEL_25:
  int v16 = *((_DWORD *)this + 16);
  int v17 = v16 + v3;
  if (v16 >= 1)
  {
    int v18 = 0;
    do
    {
      int v19 = (CRDT::RegisterLatest **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)this + 56, v18);
      char v20 = (google::protobuf::io::CodedOutputStream *)CRDT::Document_DocObject::ByteSize(v19);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      }
      else {
        int v22 = 1;
      }
      v17 += v21 + v22;
      ++v18;
    }
    while (v18 < *((_DWORD *)this + 16));
  }
  int v23 = *((_DWORD *)this + 22);
  int v24 = v23 + v17;
  if (v23 >= 1)
  {
    int v25 = 0;
    do
    {
      uint64_t v26 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 80, v25);
      int v27 = *(unsigned __int8 *)(v26 + 23);
      char v28 = v27;
      uint64_t v29 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        unint64_t v30 = *(unsigned __int8 *)(v26 + 23);
      }
      else {
        unint64_t v30 = v29;
      }
      if (v30 >= 0x80)
      {
        int v31 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v30);
        int v27 = *(unsigned __int8 *)(v26 + 23);
        uint64_t v29 = *(void *)(v26 + 8);
        char v28 = *(unsigned char *)(v26 + 23);
      }
      else
      {
        int v31 = 1;
      }
      if (v28 < 0) {
        int v27 = v29;
      }
      v24 += v31 + v27;
      ++v25;
    }
    while (v25 < *((_DWORD *)this + 22));
  }
  int v32 = *((_DWORD *)this + 28);
  int v33 = v32 + v24;
  if (v32 >= 1)
  {
    int v34 = 0;
    do
    {
      uint64_t v35 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 104, v34);
      int v36 = *(unsigned __int8 *)(v35 + 23);
      char v37 = v36;
      uint64_t v38 = *(void *)(v35 + 8);
      if ((v36 & 0x80u) == 0) {
        unint64_t v39 = *(unsigned __int8 *)(v35 + 23);
      }
      else {
        unint64_t v39 = v38;
      }
      if (v39 >= 0x80)
      {
        int v40 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v39);
        int v36 = *(unsigned __int8 *)(v35 + 23);
        uint64_t v38 = *(void *)(v35 + 8);
        char v37 = *(unsigned char *)(v35 + 23);
      }
      else
      {
        int v40 = 1;
      }
      if (v37 < 0) {
        int v36 = v38;
      }
      v33 += v40 + v36;
      ++v34;
    }
    while (v34 < *((_DWORD *)this + 28));
  }
  int v41 = *((_DWORD *)this + 34);
  int v42 = v41 + v33;
  if (v41 >= 1)
  {
    int v43 = 0;
    do
    {
      uint64_t v44 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 128, v43);
      int v45 = *(unsigned __int8 *)(v44 + 23);
      char v46 = v45;
      uint64_t v47 = *(void *)(v44 + 8);
      if ((v45 & 0x80u) == 0) {
        unint64_t v48 = *(unsigned __int8 *)(v44 + 23);
      }
      else {
        unint64_t v48 = v47;
      }
      if (v48 >= 0x80)
      {
        int v49 = google::protobuf::io::CodedOutputStream::VarintSize32Fallback((google::protobuf::io::CodedOutputStream *)v48);
        int v45 = *(unsigned __int8 *)(v44 + 23);
        uint64_t v47 = *(void *)(v44 + 8);
        char v46 = *(unsigned char *)(v44 + 23);
      }
      else
      {
        int v49 = 1;
      }
      if (v46 < 0) {
        int v45 = v47;
      }
      v42 += v49 + v45;
      ++v43;
    }
    while (v43 < *((_DWORD *)this + 34));
  }
  if (*((char *)this + 31) < 0) {
    uint64_t v50 = *((void *)this + 2);
  }
  else {
    LODWORD(v50) = *((unsigned __int8 *)this + 31);
  }
  uint64_t result = (v42 + v50);
  *((_DWORD *)this + 9) = result;
  return result;
}

std::string *CRDT::Document::CheckTypeAndMergeFrom(CRDT::Document *this, const google::protobuf::MessageLite *lpsrc)
{
  return CRDT::Document::MergeFrom(this, lpsrc);
}

BOOL CRDT::Document::IsInitialized(CRDT::Document *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>((uint64_t)this + 56);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(a1, v2);
  }
  while (((*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5) & 1) != 0);
  return v3 < 1;
}

void *CRDT::Document::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CRDT.Document");
}

uint64_t CRDT::ObjectID::GetCachedSize(CRDT::ObjectID *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Timestamp::GetCachedSize(CRDT::Timestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::RegisterLatest::GetCachedSize(CRDT::RegisterLatest *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp_Element::GetCachedSize(CRDT::VectorTimestamp_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::VectorTimestamp::GetCachedSize(CRDT::VectorTimestamp *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary_Element::GetCachedSize(CRDT::Dictionary_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Dictionary::GetCachedSize(CRDT::Dictionary *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index_Element::GetCachedSize(CRDT::Index_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Index::GetCachedSize(CRDT::Index *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf_Element::GetCachedSize(CRDT::OneOf_Element *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OneOf::GetCachedSize(CRDT::OneOf *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray_ArrayAttachment::GetCachedSize(CRDT::StringArray_ArrayAttachment *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::StringArray::GetCachedSize(CRDT::StringArray *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Array::GetCachedSize(CRDT::Array *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::OrderedSet::GetCachedSize(CRDT::OrderedSet *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject_MapEntry::GetCachedSize(CRDT::Document_CustomObject_MapEntry *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_CustomObject::GetCachedSize(CRDT::Document_CustomObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document_DocObject::GetCachedSize(CRDT::Document_DocObject *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CRDT::Document::GetCachedSize(CRDT::Document *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BCC020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BCC0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BCC1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BCC2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BCC314(_Unwind_Exception *a1)
{
  MEMORY[0x1BA9DB510](v1, 0x10B3C407823AACFLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 885);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 886);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)a1 + 8 * a2);
}

void sub_1B9BCC3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BCC4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1B9BCC5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::VectorTimestamp_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::VectorTimestamp_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::VectorTimestamp_Element::MergeFrom(*(CRDT::VectorTimestamp_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCC738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Dictionary_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Dictionary_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Dictionary_Element::MergeFrom(*(CRDT::Dictionary_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCC8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Index_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Index_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Index_Element::MergeFrom(*(CRDT::Index_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCCA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::OneOf_Element *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::OneOf_Element>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::OneOf_Element::MergeFrom(*(CRDT::OneOf_Element **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCCBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::StringArray_ArrayAttachment *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::StringArray_ArrayAttachment>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        google::protobuf::internal::GenericTypeHandler<CRDT::StringArray_ArrayAttachment>::New();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::StringArray_ArrayAttachment::MergeFrom(*(CRDT::StringArray_ArrayAttachment **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCCCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::Document_CustomObject_MapEntry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_CustomObject_MapEntry>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Document_CustomObject_MapEntry::MergeFrom(*(CRDT::Document_CustomObject_MapEntry **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCCE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this, google::protobuf::internal::RepeatedPtrFieldBase *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/repeated_field.h", 927);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, *((_DWORD *)a2 + 2) + *((_DWORD *)this + 2));
  if (*((int *)a2 + 2) >= 1)
  {
    int v6 = 0;
    do
    {
      char v7 = (const CRDT::RegisterLatest **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<CRDT::Document_DocObject>::TypeHandler>((uint64_t)a2, v6);
      int v8 = *((_DWORD *)this + 3);
      uint64_t v9 = *((int *)this + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 4)) {
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((uint64_t)this, v8 + 1);
        }
        operator new();
      }
      uint64_t v10 = *(void *)this;
      *((_DWORD *)this + 2) = v9 + 1;
      uint64_t result = (uint64_t)CRDT::Document_DocObject::MergeFrom(*(const CRDT::RegisterLatest ***)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((_DWORD *)a2 + 2));
  }
  return result;
}

void sub_1B9BCCFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::DeleteEmptyString(google::protobuf::internal *this)
{
  if (google::protobuf::internal::empty_string_)
  {
    if (*(char *)(google::protobuf::internal::empty_string_ + 23) < 0) {
      operator delete(*(void **)google::protobuf::internal::empty_string_);
    }
    JUMPOUT(0x1BA9DB510);
  }
}

void google::protobuf::internal::InitEmptyString(google::protobuf::internal *this)
{
}

BOOL google::protobuf::internal::WireFormatLite::SkipField(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  BOOL LittleEndian64Fallback = 0;
  unsigned int v6 = a2;
  switch(a2 & 7)
  {
    case 0:
      __p.__r_.__value_.__r.__words[0] = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)&__p)) {
          goto LABEL_30;
        }
      }
      else
      {
        __p.__r_.__value_.__r.__words[0] = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, __p.__r_.__value_.__r.__words[0]);
      BOOL LittleEndian64Fallback = 1;
      break;
    case 1:
      __p.__r_.__value_.__r.__words[0] = 0;
      BOOL LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a3, (uint64_t)__p.__r_.__value_.__l.__data_);
      }
      break;
    case 2:
      LODWORD(__n) = 0;
      uint64_t v9 = (char *)*((void *)this + 1);
      if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
      {
        if (!google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, (unsigned int *)&__n)) {
          goto LABEL_30;
        }
      }
      else
      {
        LODWORD(__n) = *v9;
        *((void *)this + 1) = v9 + 1;
      }
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, __n);
      memset(&__p, 0, sizeof(__p));
      BOOL LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadString((uint64_t)this, &__p, __n);
      if (LittleEndian64Fallback)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          int v18 = __p.__r_.__value_.__r.__words[1];
        }
        google::protobuf::io::CodedOutputStream::WriteRaw(a3, (char *)p_p, v18);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
    case 3:
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
      int v12 = *((_DWORD *)this + 14);
      int v13 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v12 + 1;
      if (v12 < v13 && google::protobuf::internal::WireFormatLite::SkipMessage(this, a3, v10, v11))
      {
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        BOOL LittleEndian64Fallback = *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
      }
      else
      {
LABEL_30:
        BOOL LittleEndian64Fallback = 0;
      }
      break;
    case 5:
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      BOOL LittleEndian64Fallback = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&__p);
      if (LittleEndian64Fallback)
      {
        google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, v6);
        google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a3, (int)__p.__r_.__value_.__l.__data_);
      }
      break;
    default:
      return LittleEndian64Fallback;
  }
  return LittleEndian64Fallback;
}

void sub_1B9BCD314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::WireFormatLite::SkipMessage(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  do
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + _Block_object_dispose(&STACK[0x260], 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
    }
    BOOL v8 = TagFallback == 0;
    if (!TagFallback) {
      break;
    }
    if ((TagFallback & 7) == 4)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, TagFallback);
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a2, a4) & 1) != 0);
  return v8;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt32(google::protobuf::internal::WireFormatLite *this, signed int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);
  if (a2 < 0)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
  }
  else
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
  }
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt64(google::protobuf::internal::WireFormatLite *this, unint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteUInt32(google::protobuf::internal::WireFormatLite *this, unsigned int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, a2);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteSInt64(google::protobuf::internal::WireFormatLite *this, uint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a3, 8 * this);

  return google::protobuf::io::CodedOutputStream::WriteVarint64((uint64_t)a3, (2 * a2) ^ (a2 >> 63));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteFloat(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, float a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 5);

  return google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteDouble(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, double a3, google::protobuf::io::CodedOutputStream *a4)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)a2, (8 * this) | 1);

  return google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteString(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc", 377);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1B9BCD6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc", 386);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
  }
}

void sub_1B9BCD7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytes(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc", 393);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    int v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v10 = *(_DWORD *)(a2 + 8);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
}

void sub_1B9BCD890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  int v5 = *(char *)(a2 + 23);
  if (v5 < 0 && *(void *)(a2 + 8) >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ReminderKit/CRProtobuf/protobuf-lite/google/protobuf/wire_format_lite.cc", 401);
    unsigned int v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: value.size() <= kint32max: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    LOBYTE(v5) = *(unsigned char *)(a2 + 23);
  }
  if ((v5 & 0x80u) == 0) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
  }
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v7);
  int v8 = *(char *)(a2 + 23);
  if (v8 >= 0) {
    uint64_t v9 = (char *)a2;
  }
  else {
    uint64_t v9 = *(char **)a2;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v10 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v9, v10);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v9, v10);
  }
}

void sub_1B9BCD98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, (8 * a1) | 2);
  unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
  google::protobuf::io::CodedOutputStream::WriteVarint32((uint64_t)this, v5);
  unsigned int v6 = *(uint64_t (**)(uint64_t, google::protobuf::io::CodedOutputStream *))(*(void *)a2 + 80);

  return v6(a2, this);
}

BOOL google::protobuf::internal::WireFormatLite::ReadString(google::protobuf::io::CodedInputStream *this, std::string *a2)
{
  unsigned int v10 = 0;
  unsigned int v5 = (char *)*((void *)this + 1);
  unint64_t v4 = *((void *)this + 2);
  if ((unint64_t)v5 < v4 && (*v5 & 0x80000000) == 0)
  {
    std::string::size_type v6 = *v5;
    unsigned int v10 = *v5;
    unsigned int v7 = (unsigned __int8 *)(v5 + 1);
    *((void *)this + 1) = v7;
    goto LABEL_7;
  }
  int v8 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
  BOOL result = 0;
  if (v8)
  {
    std::string::size_type v6 = v10;
    if ((v10 & 0x80000000) == 0)
    {
      unsigned int v7 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v4 = *((void *)this + 2);
LABEL_7:
      if ((int)v6 > (int)v4 - (int)v7) {
        return google::protobuf::io::CodedInputStream::ReadStringFallback(this, a2, v6);
      }
      std::string::resize(a2, v6, 0);
      if (!v6) {
        return 1;
      }
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
      {
        if (!a2->__r_.__value_.__l.__size_)
        {
LABEL_15:
          a2 = 0;
          goto LABEL_16;
        }
        a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      else if (!*((unsigned char *)&a2->__r_.__value_.__s + 23))
      {
        goto LABEL_15;
      }
LABEL_16:
      memcpy(a2, *((const void **)this + 1), v6);
      *((void *)this + 1) += v6;
      return 1;
    }
  }
  return result;
}

void REMWeekdayFromICSWeekday_cold_1(int a1, NSObject *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl(&dword_1B9AA2000, a2, OS_LOG_TYPE_ERROR, "Encountered an unknown ICSWeekday: %d", (uint8_t *)v2, 8u);
}

void REMCheckedDynamicCast_cold_1(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v5 = 138412546;
  uint64_t v6 = objc_opt_class();
  __int16 v7 = 2112;
  uint64_t v8 = a2;
  _os_log_fault_impl(&dword_1B9AA2000, a3, OS_LOG_TYPE_FAULT, "rem_log_fault_if (src != nil && result == nil) -- Unexpected object type in checked dynamic cast %@ expects %@", (uint8_t *)&v5, 0x16u);
}

void REMCheckedProtocolCast_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl(&dword_1B9AA2000, a2, OS_LOG_TYPE_FAULT, "rem_log_fault_if (!protocol) -- Protocol is nil {src: %@}", (uint8_t *)&v2, 0xCu);
}

void NSStringFromREMAccountType_cold_1(uint64_t a1)
{
  uint64_t v1 = [NSNumber numberWithInteger:a1];
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_3(&dword_1B9AA2000, v2, v3, "Unknown account type, cannot convert to string {%@}.", v4, v5, v6, v7, v8);
}

void NSStringFromREMAccountType_cold_2()
{
  id v0 = [NSNumber numberWithInteger:0];
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_3(&dword_1B9AA2000, v1, v2, "Invalid unknown account type, cannot convert to string {%@}.", v3, v4, v5, v6, v7);
}

void REMInternalDescriptionFromREMAccountType_cold_2()
{
  OUTLINED_FUNCTION_6();
  _os_log_error_impl(&dword_1B9AA2000, v0, OS_LOG_TYPE_ERROR, "Account type should not be REMAccountTypeCount", v1, 2u);
}

uint64_t __getUMUserManagerClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __getUMUserPersonaAttributesClass_block_invoke_cold_1(v0);
}

uint64_t __getUMUserPersonaAttributesClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return +[REMBaseSectionStorage cdEntityName](v0);
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1F41138A0]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

uint64_t CEMStringIsSingleEmoji()
{
  return MEMORY[0x1F4113C98]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

CFNumberType CFNumberGetType(CFNumberRef number)
{
  return MEMORY[0x1F40D7E08](number);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return (CFUserNotificationRef)MEMORY[0x1F40D8A28](allocator, flags, error, dictionary, timeout);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return MEMORY[0x1F40D8A68](userNotification, responseFlags, timeout);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1F40D9970](space, components);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1F40D9A00](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1F40D9A18](color);
}

void CGColorRelease(CGColorRef color)
{
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

uint64_t EKSymbolicColorToRGBMapping()
{
  return MEMORY[0x1F410F3F8]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2 = MEMORY[0x1F40E7140](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.id location = v2;
  return result;
}

void NSLog(NSString *format, ...)
{
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1F40E7258](aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1F40E72A0](range.location, range.length);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2 = MEMORY[0x1F40E72E0](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.id location = v2;
  return result;
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x1F40F70F0](rnd, count, bytes);
}

CFStringRef UTTypeCopyPreferredTagWithClass(CFStringRef inUTI, CFStringRef inTagClass)
{
  return (CFStringRef)MEMORY[0x1F40DEE50](inUTI, inTagClass);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

uint64_t _CFCopyServerVersionDictionary()
{
  return MEMORY[0x1F40D8D00]();
}

uint64_t _CFCopySystemVersionDictionary()
{
  return MEMORY[0x1F40D8D10]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1F417E448](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1F417E530](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x1F417E588](__n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5B8](this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5C0](this, __s, __n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x1F417E5D8](this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x1F417E5E0](this, __s, __n);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x1F417E670](this, __str);
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1F417EF30](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_rethrow(void)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)MEMORY[0x1F417EFA8](lpsrc, lpstype, lpdtype, s2d);
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1F40C9F70](dso, description, activity, *(void *)&flags);
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1F40CA3A8]();
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1F41814C8](cls, name, imp, types);
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x1F4182BD0](strm, *(void *)&flush);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x1F4182BE0](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x1F4182BE8](strm, *(void *)&level, *(void *)&method, *(void *)&windowBits, *(void *)&memLevel, *(void *)&strategy, version, *(void *)&stream_size);
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1F40CB9C8](flags, *(void *)&qos_class, *(void *)&relative_priority, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA0](attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return MEMORY[0x1F40CBC70]();
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

int fflush(FILE *a1)
{
  return MEMORY[0x1F40CC0C8](a1);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x1F40CC1D8](a1, a2);
}

void free(void *a1)
{
}

int inflate(z_streamp strm, int flush)
{
  return MEMORY[0x1F4182CB0](strm, *(void *)&flush);
}

int inflateEnd(z_streamp strm)
{
  return MEMORY[0x1F4182CB8](strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return MEMORY[0x1F4182CC8](strm, *(void *)&windowBits, version, *(void *)&stream_size);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x1F40CD038](*(void *)&token, check);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1F40CD040](*(void *)&token, state64);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x1F40CD048](*(void *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1F40CD050](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1F40CD058](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1F4181A58](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1F40CD558](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1F40CD5A0]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

const char *__cdecl protocol_getName(Protocol *p)
{
  return (const char *)MEMORY[0x1F4181B10](p);
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA78](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1F40CDA80](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA88](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA98](a1);
}

int sched_yield(void)
{
  return MEMORY[0x1F40CDEC8]();
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x1F40CE080](__str, __size, __format);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

int32_t u_strcmp(const UChar *s1, const UChar *s2)
{
  return MEMORY[0x1F417F878](s1, s2);
}

uint64_t ucal_getCanonicalTimeZoneID()
{
  return MEMORY[0x1F417FAE0]();
}

int uuid_compare(const uuid_t uu1, const uuid_t uu2)
{
  return MEMORY[0x1F40CE630](uu1, uu2);
}