void sub_24A3DCB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCKOperationConfigurationClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKOperationConfiguration");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKOperationConfigurationClass_block_invoke_cold_1();
  }
  getCKOperationConfigurationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CloudKitLibrary()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  v2[0] = 0;
  if (!CloudKitLibraryCore_frameworkLibrary)
  {
    v2[1] = (void *)MEMORY[0x263EF8330];
    v2[2] = (void *)3221225472;
    v2[3] = __CloudKitLibraryCore_block_invoke;
    v2[4] = &__block_descriptor_40_e5_v8__0l;
    v2[5] = v2;
    long long v3 = xmmword_265287550;
    uint64_t v4 = 0;
    CloudKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = CloudKitLibraryCore_frameworkLibrary;
  if (!CloudKitLibraryCore_frameworkLibrary) {
    CloudKitLibrary_cold_1(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

uint64_t __CloudKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CloudKitLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCKContainerClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKContainer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKContainerClass_block_invoke_cold_1();
  }
  getCKContainerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKRecordZoneIDClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKRecordZoneID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKRecordZoneIDClass_block_invoke_cold_1();
  }
  getCKRecordZoneIDClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCKCurrentUserDefaultNameSymbolLoc_block_invoke(uint64_t a1)
{
  v2 = (void *)CloudKitLibrary();
  Class result = dlsym(v2, "CKCurrentUserDefaultName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCKCurrentUserDefaultNameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKRecordIDClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKRecordID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKRecordIDClass_block_invoke_cold_1();
  }
  getCKRecordIDClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCKFetchRecordsOperationClass_block_invoke(uint64_t a1)
{
  CloudKitLibrary();
  Class result = objc_getClass("CKFetchRecordsOperation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    __getCKFetchRecordsOperationClass_block_invoke_cold_1();
  }
  getCKFetchRecordsOperationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24A3DD080()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A5F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A5F0);
  return sub_24A464008();
}

void *sub_24A3DD0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v6[14] = a1;
  v6[15] = a2;
  v6[16] = a3;
  return v6;
}

uint64_t sub_24A3DD148()
{
  v1[29] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  v1[30] = swift_task_alloc();
  v1[31] = type metadata accessor for CachedSession();
  v1[32] = swift_task_alloc();
  uint64_t v2 = sub_24A463E78();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A3DD278, v0, 0);
}

uint64_t sub_24A3DD278()
{
  if (qword_269794390 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A464018();
  v0[37] = __swift_project_value_buffer(v1, (uint64_t)qword_26979A5F0);
  uint64_t v2 = sub_24A463FF8();
  os_log_type_t v3 = sub_24A4645A8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A3DA000, v2, v3, "starting submission activity", v4, 2u);
    MEMORY[0x24C5C5D60](v4, -1, -1);
  }
  uint64_t v5 = v0[29];

  uint64_t v6 = *(void *)(v5 + 112);
  v0[38] = v6;
  if (!v6
    || (uint64_t v7 = v0[29], v8 = *(void *)(v7 + 120), (v0[39] = v8) == 0)
    || (uint64_t v9 = *(void *)(v7 + 128), (v0[40] = v9) == 0))
  {
    v10 = sub_24A463FF8();
    os_log_type_t v11 = sub_24A4645D8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_24A3DA000, v10, v11, "submission activity skipped due to bad initialization", v12, 2u);
      MEMORY[0x24C5C5D60](v12, -1, -1);
    }

    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  if (sub_24A464528())
  {
    swift_release();
    swift_release();
    swift_release();
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  sub_24A463E38();
  v15 = (void *)swift_task_alloc();
  v0[41] = v15;
  void *v15 = v0;
  v15[1] = sub_24A3DD508;
  return sub_24A3F422C(50);
}

uint64_t sub_24A3DD508(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 336) = a1;
  *(void *)(v4 + 344) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 232);
  if (v1) {
    uint64_t v6 = sub_24A3DF254;
  }
  else {
    uint64_t v6 = sub_24A3DD63C;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_24A3DD63C(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  v17 = v3;
  uint64_t v4 = (void *)v3[42];
  uint64_t v5 = v4[2];
  v3[44] = v5;
  if (v5)
  {
    uint64_t v6 = v3[39];
    unint64_t v7 = (*(void *)v6 + 248) & 0xFFFFFFFFFFFFLL | 0xA469000000000000;
    v3[45] = *(void *)(*(void *)v6 + 248);
    v3[46] = v7;
    v3[47] = 0;
    if (v4[2])
    {
      uint64_t v8 = v4[4];
      v3[48] = v8;
      unint64_t v9 = v4[5];
      v3[49] = v9;
      swift_bridgeObjectRetain_n();
      v10 = sub_24A463FF8();
      os_log_type_t v11 = sub_24A4645D8();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v16 = v13;
        *(_DWORD *)v12 = 136446210;
        swift_bridgeObjectRetain();
        v3[28] = sub_24A3E0E30(v8, v9, &v16);
        sub_24A4646E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A3DA000, v10, v11, "sending events for client type: %{public}s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v13, -1, -1);
        MEMORY[0x24C5C5D60](v12, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a2 = v3[39];
      a1 = sub_24A3DD8DC;
      a3 = 0;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  else
  {
    (*(void (**)(void, void))(v3[34] + 8))(v3[36], v3[33]);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v14 = (uint64_t (*)(void))v3[1];
    return v14();
  }
}

uint64_t sub_24A3DD8DC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 384), *(void *)(v0 + 392));
  return MEMORY[0x270FA2498](sub_24A3DD950, v1, 0);
}

uint64_t sub_24A3DD950()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[50] = v1;
  void *v1 = v0;
  v1[1] = sub_24A3DD9FC;
  uint64_t v3 = v0[48];
  uint64_t v2 = v0[49];
  return sub_24A3F4560(v3, v2, 50);
}

uint64_t sub_24A3DD9FC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[51] = a1;
  v3[52] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[29];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_24A3DF484;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v6 = v3[29];
    uint64_t v5 = sub_24A3DDB30;
  }
  return MEMORY[0x270FA2498](v5, v6, 0);
}

uint64_t sub_24A3DDB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)())(v3 + 408);
  uint64_t v5 = *((void *)v4 + 2);
  *(void *)(v3 + 424) = v5;
  if (!v5)
  {
    uint64_t v13 = *(uint64_t **)(v3 + 312);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v3 + 560) = sub_24A3E1F9C() & 1;
    uint64_t v14 = *v13;
    *(void *)(v3 + 544) = *(void *)(*v13 + 256);
    *(void *)(v3 + 552) = (v14 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
    a2 = *(void *)(v3 + 312);
    uint64_t v4 = sub_24A3DEEA0;
    a3 = 0;
    return MEMORY[0x270FA2498](v4, a2, a3);
  }
  *(void *)(v3 + 432) = 0;
  if (!*((void *)v4 + 2))
  {
    __break(1u);
    return MEMORY[0x270FA2498](v4, a2, a3);
  }
  long long v6 = *((_OWORD *)v4 + 2);
  long long v7 = *((_OWORD *)v4 + 3);
  long long v8 = *((_OWORD *)v4 + 4);
  *(void *)(v3 + 64) = *((void *)v4 + 10);
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(_OWORD *)(v3 + 16) = v6;
  sub_24A3E1C38(v3 + 16);
  uint64_t v9 = *(void *)sub_24A4089FC();
  uint64_t v10 = *(void *)sub_24A4089F0();
  os_log_type_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 440) = v11;
  *os_log_type_t v11 = v3;
  v11[1] = sub_24A3DDCC0;
  return sub_24A3F3CC0(v3 + 16, v9, v10);
}

uint64_t sub_24A3DDCC0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[56] = a1;
  v3[57] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t)(v3 + 2);
    uint64_t v5 = v3[29];
    sub_24A3E1C84(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v6 = sub_24A3DF790;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = v3[29];
    long long v6 = sub_24A3DDE14;
  }
  return MEMORY[0x270FA2498](v6, v7, 0);
}

uint64_t sub_24A3DDE14()
{
  uint64_t v1 = (_OWORD *)(v0 + 16);
  uint64_t v2 = *(double **)(v0 + 448);
  if (*((void *)v2 + 2))
  {
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 256);
    double v6 = v2[4];
    uint64_t v8 = *((void *)v2 + 6);
    uint64_t v7 = *((void *)v2 + 7);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 272) + 16))(v4, *(void *)(v0 + 288), *(void *)(v0 + 264));
    sub_24A3E1C38(v0 + 16);
    swift_bridgeObjectRetain();
    sub_24A40D574(v0 + 16, v8, v7, v4, v5, v6);
    v25 = (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))(*(void *)(*(void *)v3 + 120)
                                                                + **(int **)(*(void *)v3 + 120));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24A3DE128;
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 256);
    return v25(v11, v10, &off_26FE15C80);
  }
  else
  {
    sub_24A3E1C84(v0 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v0 + 432) + 1;
    if (v13 == *(void *)(v0 + 424))
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_24A3DD9FC;
      uint64_t v16 = *(void *)(v0 + 384);
      uint64_t v15 = *(void *)(v0 + 392);
      return sub_24A3F4560(v16, v15, 50);
    }
    else
    {
      *(void *)(v0 + 432) = v13;
      uint64_t v17 = *(void *)(v0 + 408);
      if (v13 >= *(void *)(v17 + 16))
      {
        __break(1u);
      }
      else
      {
        uint64_t v18 = v17 + 56 * v13;
        long long v19 = *(_OWORD *)(v18 + 32);
        long long v20 = *(_OWORD *)(v18 + 48);
        long long v21 = *(_OWORD *)(v18 + 64);
        *(void *)(v0 + 64) = *(void *)(v18 + 80);
        *(_OWORD *)(v0 + 32) = v20;
        *(_OWORD *)(v0 + 48) = v21;
        _OWORD *v1 = v19;
        sub_24A3E1C38(v0 + 16);
        uint64_t v22 = *(void *)sub_24A4089FC();
        uint64_t v23 = *(void *)sub_24A4089F0();
        v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 440) = v24;
        void *v24 = v0;
        v24[1] = sub_24A3DDCC0;
        return sub_24A3F3CC0((uint64_t)v1, v22, v23);
      }
    }
  }
  return result;
}

uint64_t sub_24A3DE128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[59] = a1;
  v5[60] = a2;
  v5[61] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[29];
  if (v2) {
    uint64_t v7 = sub_24A3DFA9C;
  }
  else {
    uint64_t v7 = sub_24A3DE260;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24A3DE260()
{
  v61 = v0;
  uint64_t v1 = v0 + 26;
  if (v0[59])
  {
    uint64_t v2 = v0[60];
    int64_t v3 = *(void *)(v0[56] + 16);
    uint64_t v4 = MEMORY[0x263F8EE78];
    if (v3)
    {
      uint64_t v53 = v0[60];
      uint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t *v1 = MEMORY[0x263F8EE78];
      sub_24A3E1624(0, v3, 0);
      uint64_t v6 = 0;
      uint64_t v4 = *v1;
      do
      {
        uint64_t v7 = v0[56] + v6;
        uint64_t v8 = *(void *)(v7 + 40);
        uint64_t v9 = *(void *)(v7 + 48);
        long long v56 = *(_OWORD *)(v7 + 56);
        v0[26] = v4;
        unint64_t v10 = *(void *)(v4 + 16);
        unint64_t v11 = *(void *)(v4 + 24);
        int64_t v12 = v10 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 >= v11 >> 1)
        {
          sub_24A3E1624(v11 > 1, v10 + 1, 1);
          uint64_t v4 = v0[26];
        }
        *(void *)(v4 + 16) = v12;
        uint64_t v13 = v4 + 32 * v10;
        *(void *)(v13 + 32) = v8;
        *(void *)(v13 + 40) = v9;
        *(_OWORD *)(v13 + 48) = v56;
        v6 += 40;
        --v3;
      }
      while (v3);
    }
    else
    {
      int64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v12)
      {
        uint64_t v26 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRelease();
LABEL_17:
        v0[62] = v26;
        uint64_t ObjectType = swift_getObjectType();
        v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
        v33 = (void *)swift_task_alloc();
        v0[63] = v33;
        void *v33 = v0;
        v33[1] = sub_24A3DE920;
        return v55(v26, ObjectType, v2);
      }
      uint64_t v53 = v0[60];
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    v25 = v0 + 27;
    v0[27] = v5;
    sub_24A3E1604(0, v12, 0);
    uint64_t v26 = v0[27];
    v27 = (_OWORD *)(v4 + 48);
    do
    {
      uint64_t v28 = *((void *)v27 - 1);
      long long v58 = *v27;
      uint64_t *v25 = v26;
      unint64_t v29 = *(void *)(v26 + 16);
      unint64_t v30 = *(void *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29 >= v30 >> 1)
      {
        sub_24A3E1604(v30 > 1, v29 + 1, 1);
        uint64_t v26 = *v25;
      }
      *(void *)(v26 + 16) = v29 + 1;
      uint64_t v31 = v26 + 24 * v29;
      *(void *)(v31 + 32) = v28;
      *(_OWORD *)(v31 + 40) = v58;
      v27 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v0 = v54;
    uint64_t v2 = v53;
    goto LABEL_17;
  }
  sub_24A3E1D30();
  uint64_t v14 = (void *)swift_allocError();
  swift_willThrow();
  sub_24A3E1CD0(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  id v15 = v14;
  swift_bridgeObjectRetain();
  id v16 = v14;
  uint64_t v17 = sub_24A463FF8();
  os_log_type_t v18 = sub_24A4645B8();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v20 = v0[49];
  if (v19)
  {
    uint64_t v21 = v0[48];
    uint64_t v22 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v60[0] = v57;
    *(_DWORD *)uint64_t v22 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_24A3E0E30(v21, v20, v60);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v23 = sub_24A464B38();
    v0[25] = sub_24A3E0E30(v23, v24, v60);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v17, v18, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v57, -1, -1);
    MEMORY[0x24C5C5D60](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int64_t v35 = *(void *)(v0[56] + 16);
  if (v35)
  {
    v36 = v0 + 18;
    v0[18] = MEMORY[0x263F8EE78];
    sub_24A3E1624(0, v35, 0);
    uint64_t v37 = 0;
    uint64_t v38 = v0[18];
    do
    {
      uint64_t v39 = v0[56] + v37;
      uint64_t v40 = *(void *)(v39 + 40);
      uint64_t v41 = *(void *)(v39 + 48);
      long long v59 = *(_OWORD *)(v39 + 56);
      v0[18] = v38;
      unint64_t v43 = *(void *)(v38 + 16);
      unint64_t v42 = *(void *)(v38 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= v42 >> 1)
      {
        sub_24A3E1624(v42 > 1, v43 + 1, 1);
        uint64_t v38 = *v36;
      }
      *(void *)(v38 + 16) = v43 + 1;
      uint64_t v44 = v38 + 32 * v43;
      *(void *)(v44 + 32) = v40;
      *(void *)(v44 + 40) = v41;
      *(_OWORD *)(v44 + 48) = v59;
      v37 += 40;
      --v35;
      uint64_t v0 = v54;
    }
    while (v35);
    swift_bridgeObjectRelease();
    int64_t v45 = *(void *)(v38 + 16);
    if (v45) {
      goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
    int64_t v45 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v45)
    {
LABEL_27:
      v46 = v0 + 19;
      v0[19] = MEMORY[0x263F8EE78];
      sub_24A3E15E4(0, v45, 0);
      uint64_t v47 = v0[19];
      uint64_t v48 = 32;
      do
      {
        uint64_t v49 = *(void *)(v38 + v48);
        uint64_t *v46 = v47;
        unint64_t v51 = *(void *)(v47 + 16);
        unint64_t v50 = *(void *)(v47 + 24);
        if (v51 >= v50 >> 1)
        {
          sub_24A3E15E4(v50 > 1, v51 + 1, 1);
          uint64_t v47 = *v46;
        }
        *(void *)(v47 + 16) = v51 + 1;
        *(void *)(v47 + 8 * v51 + 32) = v49;
        v48 += 32;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = MEMORY[0x263F8EE78];
LABEL_34:
  v0[65] = v47;
  v52 = (void *)swift_task_alloc();
  v0[66] = v52;
  void *v52 = v0;
  v52[1] = sub_24A3DECA4;
  return sub_24A3F40D0(v47);
}

uint64_t sub_24A3DE920()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_24A3DFE98;
  }
  else {
    uint64_t v4 = sub_24A3DEA68;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A3DEA68()
{
  uint64_t v1 = v0[32];
  swift_unknownObjectRelease();
  sub_24A3E1CD0(v1, (uint64_t (*)(void))type metadata accessor for CachedSession);
  int64_t v2 = *(void *)(v0[56] + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
    int64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v12) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  v0[18] = MEMORY[0x263F8EE78];
  sub_24A3E1624(0, v2, 0);
  uint64_t v4 = 0;
  uint64_t v5 = v0[18];
  do
  {
    uint64_t v6 = v0[56] + v4;
    uint64_t v7 = *(void *)(v6 + 40);
    uint64_t v8 = *(void *)(v6 + 48);
    long long v20 = *(_OWORD *)(v6 + 56);
    v0[18] = v5;
    unint64_t v10 = *(void *)(v5 + 16);
    unint64_t v9 = *(void *)(v5 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= v9 >> 1)
    {
      sub_24A3E1624(v9 > 1, v10 + 1, 1);
      uint64_t v5 = v0[18];
    }
    *(void *)(v5 + 16) = v10 + 1;
    uint64_t v11 = v5 + 32 * v10;
    *(void *)(v11 + 32) = v7;
    *(void *)(v11 + 40) = v8;
    *(_OWORD *)(v11 + 48) = v20;
    v4 += 40;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = MEMORY[0x263F8EE78];
  int64_t v12 = *(void *)(v5 + 16);
  if (v12)
  {
LABEL_9:
    uint64_t v13 = v0 + 19;
    v0[19] = v3;
    sub_24A3E15E4(0, v12, 0);
    uint64_t v3 = v0[19];
    uint64_t v14 = 32;
    do
    {
      uint64_t v15 = *(void *)(v5 + v14);
      *uint64_t v13 = v3;
      unint64_t v17 = *(void *)(v3 + 16);
      unint64_t v16 = *(void *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_24A3E15E4(v16 > 1, v17 + 1, 1);
        uint64_t v3 = *v13;
      }
      *(void *)(v3 + 16) = v17 + 1;
      *(void *)(v3 + 8 * v17 + 32) = v15;
      v14 += 32;
      --v12;
    }
    while (v12);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v0[65] = v3;
  os_log_type_t v18 = (void *)swift_task_alloc();
  v0[66] = v18;
  *os_log_type_t v18 = v0;
  v18[1] = sub_24A3DECA4;
  return sub_24A3F40D0(v3);
}

uint64_t sub_24A3DECA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2 + 16;
    uint64_t v4 = *(void *)(v2 + 232);
    swift_bridgeObjectRelease();
    sub_24A3E1C84(v3);
    uint64_t v5 = sub_24A3E029C;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 232);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_24A3DEDE4;
    uint64_t v6 = v7;
  }
  return MEMORY[0x270FA2498](v5, v6, 0);
}

uint64_t sub_24A3DEDE4()
{
  uint64_t v1 = *(void *)sub_24A4089FC();
  uint64_t v2 = *(void *)sub_24A4089F0();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24A3DDCC0;
  return sub_24A3F3CC0(v0 + 16, v1, v2);
}

uint64_t sub_24A3DEEA0()
{
  uint64_t v1 = *(void *)(v0 + 232);
  (*(void (**)(void, void, void))(v0 + 544))(*(void *)(v0 + 384), *(void *)(v0 + 392), *(unsigned __int8 *)(v0 + 560));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24A3DEF30, v1, 0);
}

uint64_t sub_24A3DEF30(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  long long v20 = v3;
  unint64_t v4 = v3[47] + 1;
  if (v4 == v3[44])
  {
    uint64_t v5 = v3[36];
    uint64_t v6 = v3[33];
    uint64_t v7 = v3[34];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    if (sub_24A464528())
    {
      swift_release();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v8 = (uint64_t (*)(void))v3[1];
      return v8();
    }
    else
    {
      sub_24A463E38();
      os_log_type_t v18 = (void *)swift_task_alloc();
      v3[41] = v18;
      *os_log_type_t v18 = v3;
      v18[1] = sub_24A3DD508;
      return sub_24A3F422C(50);
    }
  }
  else
  {
    v3[47] = v4;
    uint64_t v10 = v3[42];
    if (v4 >= *(void *)(v10 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = v10 + 16 * v4;
      uint64_t v12 = *(void *)(v11 + 32);
      v3[48] = v12;
      unint64_t v13 = *(void *)(v11 + 40);
      v3[49] = v13;
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_24A463FF8();
      os_log_type_t v15 = sub_24A4645D8();
      if (os_log_type_enabled(v14, v15))
      {
        unint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v19 = v17;
        *(_DWORD *)unint64_t v16 = 136446210;
        swift_bridgeObjectRetain();
        v3[28] = sub_24A3E0E30(v12, v13, &v19);
        sub_24A4646E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A3DA000, v14, v15, "sending events for client type: %{public}s", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v17, -1, -1);
        MEMORY[0x24C5C5D60](v16, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a2 = v3[39];
      a1 = sub_24A3DD8DC;
      a3 = 0;
    }
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
}

uint64_t sub_24A3DF254()
{
  unint64_t v13 = v0;
  uint64_t v1 = (void *)v0[43];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  id v2 = v1;
  id v3 = v1;
  unint64_t v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_24A464B38();
    v0[24] = sub_24A3E0E30(v8, v9, &v12);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v4, v5, "error running sendOneMessage submission: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v7, -1, -1);
    MEMORY[0x24C5C5D60](v6, -1, -1);
  }
  else
  {
  }
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_24A3DF484()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)v0[52];
  uint64_t v3 = v0[48];
  uint64_t v2 = v0[49];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_24A463FF8();
  os_log_type_t v7 = sub_24A4645B8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_24A464B38();
    v0[24] = sub_24A3E0E30(v10, v11, &v20);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v6, v7, "error running sendOneMessage submission: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    uint64_t v3 = v19;
    MEMORY[0x24C5C5D60](v12, -1, -1);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[39];
  if (v2)
  {
    uint64_t v14 = v0[30];
    uint64_t v15 = sub_24A4644E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    unint64_t v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v13;
    v16[5] = v3;
    v16[6] = v2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24A3E0AB0(v14, (uint64_t)&unk_269793558, (uint64_t)v16);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_24A3DF790()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)v0[57];
  uint64_t v3 = v0[48];
  uint64_t v2 = v0[49];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_24A463FF8();
  os_log_type_t v7 = sub_24A4645B8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_24A464B38();
    v0[24] = sub_24A3E0E30(v10, v11, &v20);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v6, v7, "error running sendOneMessage submission: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    uint64_t v3 = v19;
    MEMORY[0x24C5C5D60](v12, -1, -1);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[39];
  if (v2)
  {
    uint64_t v14 = v0[30];
    uint64_t v15 = sub_24A4644E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    unint64_t v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v13;
    v16[5] = v3;
    v16[6] = v2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24A3E0AB0(v14, (uint64_t)&unk_269793558, (uint64_t)v16);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_24A3DFA9C()
{
  v32 = v0;
  uint64_t v1 = (void *)v0[61];
  sub_24A3E1CD0(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v7 = v0[48];
    unint64_t v6 = v0[49];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v31 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_24A3E0E30(v7, v6, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v10 = sub_24A464B38();
    v0[25] = sub_24A3E0E30(v10, v11, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v4, v5, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v9, -1, -1);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int64_t v12 = *(void *)(v0[56] + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
    int64_t v22 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v22) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v0[18] = MEMORY[0x263F8EE78];
  sub_24A3E1624(0, v12, 0);
  uint64_t v14 = 0;
  uint64_t v15 = v0[18];
  do
  {
    uint64_t v16 = v0[56] + v14;
    uint64_t v17 = *(void *)(v16 + 40);
    uint64_t v18 = *(void *)(v16 + 48);
    long long v30 = *(_OWORD *)(v16 + 56);
    v0[18] = v15;
    unint64_t v20 = *(void *)(v15 + 16);
    unint64_t v19 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_24A3E1624(v19 > 1, v20 + 1, 1);
      uint64_t v15 = v0[18];
    }
    *(void *)(v15 + 16) = v20 + 1;
    uint64_t v21 = v15 + 32 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    *(_OWORD *)(v21 + 48) = v30;
    v14 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x263F8EE78];
  int64_t v22 = *(void *)(v15 + 16);
  if (v22)
  {
LABEL_12:
    uint64_t v23 = v0 + 19;
    v0[19] = v13;
    sub_24A3E15E4(0, v22, 0);
    uint64_t v13 = v0[19];
    uint64_t v24 = 32;
    do
    {
      uint64_t v25 = *(void *)(v15 + v24);
      *uint64_t v23 = v13;
      unint64_t v27 = *(void *)(v13 + 16);
      unint64_t v26 = *(void *)(v13 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_24A3E15E4(v26 > 1, v27 + 1, 1);
        uint64_t v13 = *v23;
      }
      *(void *)(v13 + 16) = v27 + 1;
      *(void *)(v13 + 8 * v27 + 32) = v25;
      v24 += 32;
      --v22;
    }
    while (v22);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[65] = v13;
  uint64_t v28 = (void *)swift_task_alloc();
  v0[66] = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_24A3DECA4;
  return sub_24A3F40D0(v13);
}

uint64_t sub_24A3DFE98()
{
  v32 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)v0[64];
  sub_24A3E1CD0(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645B8();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v7 = v0[48];
    unint64_t v6 = v0[49];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v31 = v9;
    *(_DWORD *)uint64_t v8 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_24A3E0E30(v7, v6, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v10 = sub_24A464B38();
    v0[25] = sub_24A3E0E30(v10, v11, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v4, v5, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v9, -1, -1);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int64_t v12 = *(void *)(v0[56] + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
    int64_t v22 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v22) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v0[18] = MEMORY[0x263F8EE78];
  sub_24A3E1624(0, v12, 0);
  uint64_t v14 = 0;
  uint64_t v15 = v0[18];
  do
  {
    uint64_t v16 = v0[56] + v14;
    uint64_t v17 = *(void *)(v16 + 40);
    uint64_t v18 = *(void *)(v16 + 48);
    long long v30 = *(_OWORD *)(v16 + 56);
    v0[18] = v15;
    unint64_t v20 = *(void *)(v15 + 16);
    unint64_t v19 = *(void *)(v15 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
    {
      sub_24A3E1624(v19 > 1, v20 + 1, 1);
      uint64_t v15 = v0[18];
    }
    *(void *)(v15 + 16) = v20 + 1;
    uint64_t v21 = v15 + 32 * v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    *(_OWORD *)(v21 + 48) = v30;
    v14 += 40;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x263F8EE78];
  int64_t v22 = *(void *)(v15 + 16);
  if (v22)
  {
LABEL_12:
    uint64_t v23 = v0 + 19;
    v0[19] = v13;
    sub_24A3E15E4(0, v22, 0);
    uint64_t v13 = v0[19];
    uint64_t v24 = 32;
    do
    {
      uint64_t v25 = *(void *)(v15 + v24);
      *uint64_t v23 = v13;
      unint64_t v27 = *(void *)(v13 + 16);
      unint64_t v26 = *(void *)(v13 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_24A3E15E4(v26 > 1, v27 + 1, 1);
        uint64_t v13 = *v23;
      }
      *(void *)(v13 + 16) = v27 + 1;
      *(void *)(v13 + 8 * v27 + 32) = v25;
      v24 += 32;
      --v22;
    }
    while (v22);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[65] = v13;
  uint64_t v28 = (void *)swift_task_alloc();
  v0[66] = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_24A3DECA4;
  return sub_24A3F40D0(v13);
}

void sub_24A3E029C()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void **)(v0 + 536);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645B8();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = *(void **)(v0 + 536);
    uint64_t v8 = *(void *)(v0 + 384);
    unint64_t v7 = *(void *)(v0 + 392);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v9 + 4) = sub_24A3E0E30(v8, v7, &v26);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v11 = sub_24A464B38();
    *(void *)(v9 + 14) = sub_24A3E0E30(v11, v12, &v26);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v4, v5, "failed to remove sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v10, -1, -1);
    MEMORY[0x24C5C5D60](v9, -1, -1);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 536);

    swift_bridgeObjectRelease_n();
  }
  unint64_t v14 = *(void *)(v0 + 432) + 1;
  if (v14 == *(void *)(v0 + 424))
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v15;
    void *v15 = v0;
    v15[1] = sub_24A3DD9FC;
    uint64_t v17 = *(void *)(v0 + 384);
    uint64_t v16 = *(void *)(v0 + 392);
    sub_24A3F4560(v17, v16, 50);
  }
  else
  {
    *(void *)(v0 + 432) = v14;
    uint64_t v18 = *(void *)(v0 + 408);
    if (v14 >= *(void *)(v18 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v19 = v18 + 56 * v14;
      long long v20 = *(_OWORD *)(v19 + 32);
      long long v21 = *(_OWORD *)(v19 + 48);
      long long v22 = *(_OWORD *)(v19 + 64);
      *(void *)(v0 + 64) = *(void *)(v19 + 80);
      *(_OWORD *)(v0 + 32) = v21;
      *(_OWORD *)(v0 + 48) = v22;
      *(_OWORD *)(v0 + 16) = v20;
      sub_24A3E1C38(v0 + 16);
      uint64_t v23 = *(void *)sub_24A4089FC();
      uint64_t v24 = *(void *)sub_24A4089F0();
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v25;
      void *v25 = v0;
      v25[1] = sub_24A3DDCC0;
      sub_24A3F3CC0(v0 + 16, v23, v24);
    }
  }
}

uint64_t sub_24A3E05EC()
{
  return 1;
}

uint64_t sub_24A3E05F4()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3E0638()
{
  return sub_24A464BA8();
}

uint64_t sub_24A3E0660()
{
  return sub_24A464BC8();
}

unint64_t sub_24A3E06A0()
{
  return 0xD000000000000014;
}

uint64_t sub_24A3E06D8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A3E0720()
{
  return v0;
}

uint64_t sub_24A3E072C()
{
  id v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 120) + **(int **)(*(void *)v0 + 120));
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_24A3E0820;
  return v4();
}

uint64_t sub_24A3E0820()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A3E0914()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A3E0958()
{
  uint64_t v0 = *(void *)SubmitEventsActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_24A3E098C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x270FA2498](sub_24A3E09B0, 0, 0);
}

uint64_t sub_24A3E09B0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(unsigned char *)(v0 + 56) = sub_24A3E1F9C() & 1;
  uint64_t v2 = *v1 + 256;
  *(void *)(v0 + 40) = *(void *)v2;
  *(void *)(v0 + 48) = v2 & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
  return MEMORY[0x270FA2498](sub_24A3E0A44, v1, 0);
}

uint64_t sub_24A3E0A44()
{
  (*(void (**)(void, void, void))(v0 + 40))(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 56));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3E0AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A4644E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24A4644D8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24A3E2068(a1, &qword_269793750);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24A464498();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24A3E0C5C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24A3E0D38;
  return v6(a1);
}

uint64_t sub_24A3E0D38()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A3E0E30(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24A3E0F04(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24A3E200C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24A3E200C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_24A3E0F04(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24A4646F8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24A3E10C0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24A464858();
  if (!v8)
  {
    sub_24A4648D8();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24A464938();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24A3E10C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24A3E1158(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24A3E1338(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24A3E1338(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24A3E1158(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24A3E12D0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24A4647F8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24A4648D8();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24A464398();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24A464938();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24A4648D8();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24A3E12D0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793790);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24A3E1338(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793790);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

unint64_t sub_24A3E1488(uint64_t a1, uint64_t a2)
{
  sub_24A464B98();
  sub_24A464318();
  uint64_t v4 = sub_24A464BC8();
  return sub_24A3E1500(a1, a2, v4);
}

unint64_t sub_24A3E1500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24A464A78() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24A464A78() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_24A3E15E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A3E1644(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24A3E1604(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A3E17A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24A3E1624(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A3E192C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24A3E1644(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793588);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3E17A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793580);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3E192C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793590);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3E1A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24A3E1B34()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24A3E1B7C()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_24A3E2218;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return MEMORY[0x270FA2498](sub_24A3E09B0, 0, 0);
}

uint64_t sub_24A3E1C38(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A3E1C84(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A3E1CD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24A3E1D30()
{
  unint64_t result = qword_269793560;
  if (!qword_269793560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793560);
  }
  return result;
}

unint64_t sub_24A3E1D88()
{
  unint64_t result = qword_269793568;
  if (!qword_269793568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793568);
  }
  return result;
}

unint64_t sub_24A3E1DE0(uint64_t a1)
{
  unint64_t result = sub_24A3E1E08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24A3E1E08()
{
  unint64_t result = qword_269793578;
  if (!qword_269793578)
  {
    type metadata accessor for SubmitEventsActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793578);
  }
  return result;
}

uint64_t type metadata accessor for SubmitEventsActivity()
{
  return self;
}

uint64_t getEnumTagSinglePayload for SubmitEventsActivity.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for SubmitEventsActivity.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A3E1F74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A3E1F9C()
{
  return 0;
}

ValueMetadata *type metadata accessor for SubmitEventsActivity.Error()
{
  return &type metadata for SubmitEventsActivity.Error;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24A3E200C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24A3E2068(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A3E20C4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A3E20FC(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24A3E0820;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269794000 + dword_269794000);
  return v6(a1, v4);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24A3E2224()
{
  return 0x79745F746E657665;
}

uint64_t sub_24A3E2244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x79745F746E657665 && a2 == 0xEB00000000736570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24A464A78();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24A3E22F4()
{
  return 0;
}

void sub_24A3E2300(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24A3E230C(uint64_t a1)
{
  unint64_t v2 = sub_24A3E3408();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3E2348(uint64_t a1)
{
  unint64_t v2 = sub_24A3E3408();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A3E2384@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24A3E256C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_24A3E23B4()
{
  return 0x675F747069726373;
}

uint64_t sub_24A3E23D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x675F747069726373 && a2 == 0xED00007370756F72)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24A464A78();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24A3E2494(uint64_t a1)
{
  unint64_t v2 = sub_24A3E33B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3E24D0(uint64_t a1)
{
  unint64_t v2 = sub_24A3E33B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24A3E250C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_24A3E2804(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24A3E2538@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24A3E29A0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_24A3E256C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793600);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A3E3408();
  sub_24A464BF8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v8 = sub_24A464BD8();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    sub_24A3E34A0(v8 + 40 * v9 - 8, (uint64_t)&v11);
  }
  else
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*((void *)&v12 + 1))
  {
    __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
    uint64_t v7 = sub_24A464C38();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793608);
    sub_24A3E35A0(&qword_269793610, &qword_269793608, (void (*)(void))sub_24A3E3618);
    sub_24A4649D8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

void *sub_24A3E2804(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697935E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A3E33B4();
  sub_24A464BF8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697935E8);
    sub_24A3E35A0(&qword_2697935F0, &qword_2697935E8, (void (*)(void))sub_24A3E354C);
    sub_24A4649D8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_24A3E29A0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = sub_24A464BD8();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_24A3E34A0(v3 + 40 * v4 - 8, (uint64_t)&v12);
    uint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v13 + 1))
    {
      __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
      uint64_t v6 = sub_24A464C38();
      uint64_t v8 = v7;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v12);
      if (v6 == 0x6F736A5F70747468 && v8 == (void *)0xE90000000000006ELL || (sub_24A464A78() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_24A3E34A0((uint64_t)a1, (uint64_t)&v12);
        uint64_t v9 = sub_24A3E256C(&v12);
        if (!v1) {
          uint64_t v8 = (void *)v9;
        }
        goto LABEL_14;
      }
      if (v6 == 0x6C61636F6CLL && v8 == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_24A464A78();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          uint64_t v8 = 0;
LABEL_14:
          __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
          return (uint64_t)v8;
        }
      }
      sub_24A3E34A0((uint64_t)a1, (uint64_t)&v12);
      long long v11 = sub_24A3E2804(&v12);
      if (!v1) {
        uint64_t v8 = v11;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_24A3E2BE0()
{
  unint64_t result = qword_2697935A0;
  if (!qword_2697935A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935A0);
  }
  return result;
}

unint64_t sub_24A3E2C38()
{
  unint64_t result = qword_2697935A8;
  if (!qword_2697935A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935A8);
  }
  return result;
}

unint64_t sub_24A3E2C90()
{
  unint64_t result = qword_2697935B0;
  if (!qword_2697935B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935B0);
  }
  return result;
}

unint64_t sub_24A3E2CE8()
{
  unint64_t result = qword_2697935B8;
  if (!qword_2697935B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935B8);
  }
  return result;
}

unint64_t sub_24A3E2D40()
{
  unint64_t result = qword_2697935C0;
  if (!qword_2697935C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935C0);
  }
  return result;
}

unint64_t sub_24A3E2D98()
{
  unint64_t result = qword_2697935C8;
  if (!qword_2697935C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935C8);
  }
  return result;
}

uint64_t destroy for StorebagSectionBackendHTTP()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19CloudTelemetryTools26StorebagSectionBackendHTTPVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionBackendHTTP(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionBackendHTTP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP()
{
  return &type metadata for StorebagSectionBackendHTTP;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionBackendHTTP.CodingKeys;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup()
{
  return &type metadata for StorebagSectionBackendScriptGroup;
}

unsigned char *_s19CloudTelemetryTools26StorebagSectionBackendHTTPV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A3E308CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionBackendScriptGroup.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for StorebagSectionFilter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24A3E30F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for StorebagSectionBackend(uint64_t a1)
{
  return sub_24A3E315C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_24A3E315C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_24A3E30F8(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_24A3E30F8(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_24A3E315C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24A3E315C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackend(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A3E3370(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24A3E3388(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackend()
{
  return &type metadata for StorebagSectionBackend;
}

unint64_t sub_24A3E33B4()
{
  unint64_t result = qword_2697935D0;
  if (!qword_2697935D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935D0);
  }
  return result;
}

unint64_t sub_24A3E3408()
{
  unint64_t result = qword_2697935D8;
  if (!qword_2697935D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935D8);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_24A3E34A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24A3E354C()
{
  unint64_t result = qword_2697935F8;
  if (!qword_2697935F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697935F8);
  }
  return result;
}

uint64_t sub_24A3E35A0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A3E3618()
{
  unint64_t result = qword_269793618;
  if (!qword_269793618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793618);
  }
  return result;
}

uint64_t sub_24A3E3670(uint64_t a1, const char *a2)
{
  uint64_t v4 = sub_24A4639E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A464018();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A425000();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  long long v13 = sub_24A463FF8();
  os_log_type_t v14 = sub_24A4645C8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v8;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    long long v22 = a2;
    *(_DWORD *)uint64_t v16 = 136446210;
    long long v21 = v16 + 4;
    sub_24A3EB64C(&qword_269793620, MEMORY[0x263F06060]);
    uint64_t v17 = sub_24A464B38();
    uint64_t v25 = sub_24A3E0E30(v17, v18, &v26);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_24A3DA000, v13, v14, v22, v16, 0xCu);
    uint64_t v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v19, -1, -1);
    MEMORY[0x24C5C5D60](v16, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_24A3E398C(void *a1)
{
  uint64_t v2 = sub_24A464018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A425000();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = a1;
  id v8 = a1;
  uint64_t v9 = sub_24A463FF8();
  os_log_type_t v10 = sub_24A4645C8();
  if (os_log_type_enabled(v9, v10))
  {
    long long v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)long long v11 = 136446210;
    v16[1] = v11 + 4;
    swift_getErrorValue();
    uint64_t v13 = sub_24A464B38();
    v16[2] = sub_24A3E0E30(v13, v14, &v17);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v9, v10, "unable to access transparency log (UNKNOWN): %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v12, -1, -1);
    MEMORY[0x24C5C5D60](v11, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24A3E3BCC()
{
  return 0xD000000000000018;
}

uint64_t sub_24A3E3BE8()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A608);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A608);
  return sub_24A464008();
}

uint64_t sub_24A3E3C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v150 = a1;
  v175[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794040);
  MEMORY[0x270FA5388](v2 - 8);
  v145 = (char *)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_24A463BD8();
  uint64_t v143 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  v149 = (char *)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_24A463E78();
  uint64_t v147 = *(void *)(v146 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v146);
  v142 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v139 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  v154 = (char *)&v139 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v163 = (char *)&v139 - v16;
  MEMORY[0x270FA5388](v15);
  v164 = (char *)&v139 - v17;
  uint64_t v18 = sub_24A463D28();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  long long v22 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  v151 = (char *)&v139 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v168 = (char *)&v139 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v160 = (char *)&v139 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v161 = (char *)&v139 - v30;
  MEMORY[0x270FA5388](v29);
  v32 = (char *)&v139 - v31;
  id v153 = self;
  id v33 = objc_msgSend(v153, sel_defaultManager);
  unint64_t v34 = v1 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  swift_beginAccess();
  int64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
  v172 = (uint8_t *)(v19 + 16);
  v171 = v35;
  v35(v32, v34, v18);
  v36 = (void *)sub_24A463C88();
  uint64_t v165 = v19;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v167 = v19 + 8;
  v166 = v37;
  v37(v32, v18);
  type metadata accessor for URLResourceKey();
  uint64_t v38 = (void *)MEMORY[0x263F8EE78];
  uint64_t v148 = v39;
  uint64_t v40 = (void *)sub_24A464428();
  v174 = 0;
  id v41 = objc_msgSend(v33, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v36, v40, 0, &v174);

  unint64_t v42 = v174;
  if (!v41)
  {
    long long v59 = v42;
    sub_24A463C28();

    return swift_willThrow();
  }
  v140 = v22;
  uint64_t v43 = sub_24A464438();

  v175[0] = v38;
  uint64_t v44 = *(void (**)(void, void, void, void))(v43 + 16);
  uint64_t v162 = v18;
  v141 = v8;
  v169 = v12;
  v158 = v44;
  if (v44)
  {
    uint64_t v159 = v43;
    unint64_t v45 = 0;
    uint64_t v46 = v165;
    uint64_t v156 = v165 + 48;
    uint64_t v47 = (uint64_t *)(v165 + 32);
    *(void *)&long long v157 = v165 + 56;
    unint64_t v139 = (v165 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v155 = 0x800000024A469D90;
    uint64_t v48 = v168;
    while (v45 < *(void *)(v159 + 16))
    {
      unint64_t v50 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v51 = *(void *)(v46 + 72);
      uint64_t v52 = (uint64_t)v164;
      v171(v164, v159 + v50 + v51 * v45, v18);
      v170 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56);
      v170(v52, 0, 1, v18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v52, 1, v18) == 1)
      {
        unint64_t v45 = (unint64_t)v170;
        id v61 = v153;
        uint64_t v12 = v169;
        uint64_t v49 = v163;
        goto LABEL_19;
      }
      uint64_t v43 = *v47;
      uint64_t v53 = v161;
      ((void (*)(void))*v47)();
      sub_24A463C68();
      char v54 = sub_24A3E51C0();
      swift_bridgeObjectRelease();
      if (v54)
      {
        ((void (*)(char *, char *, uint64_t))v43)(v160, v53, v18);
        v55 = v175[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24A3EAD08(0, v55[2] + 1, 1);
          v55 = v175[0];
        }
        unint64_t v57 = v55[2];
        unint64_t v56 = v55[3];
        if (v57 >= v56 >> 1)
        {
          sub_24A3EAD08(v56 > 1, v57 + 1, 1);
          v55 = v175[0];
        }
        v55[2] = v57 + 1;
        long long v58 = (char *)v55 + v50 + v57 * v51;
        uint64_t v18 = v162;
        ((void (*)(char *, char *, uint64_t))v43)(v58, v160, v162);
        v175[0] = v55;
      }
      else
      {
        v166(v53, v18);
      }
      ++v45;
      uint64_t v12 = v169;
      uint64_t v46 = v165;
      uint64_t v49 = v163;
      uint64_t v48 = v168;
      if (v158 == (void (*)(void, void, void, void))v45)
      {
        unint64_t v45 = (unint64_t)v170;
        id v61 = v153;
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v46 = v165;
  unint64_t v45 = *(void *)(v165 + 56);
  uint64_t v49 = v163;
  uint64_t v48 = v168;
  id v61 = v153;
LABEL_18:
  uint64_t v52 = (uint64_t)v164;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v45)(v164, 1, 1, v18);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_24A3E2068(v52, &qword_269793700);
  v174 = (char *)v175[0];
  uint64_t v62 = v152;
  sub_24A3E531C((unint64_t *)&v174);
  v158 = v62;
  uint64_t v155 = sub_24A3E53C8(1, (uint64_t)v174);
  v164 = v64;
  v66 = (char *)(v65 >> 1);
  v170 = (void (*)(uint64_t, void, uint64_t, uint64_t))v45;
  if (v63 != v65 >> 1)
  {
    uint64_t v43 = v63;
    v163 = (char *)(v46 + 56);
    v161 = (char *)(v46 + 48);
    uint64_t v159 = v46 + 32;
    swift_bridgeObjectRetain();
    *(void *)&long long v70 = 136446210;
    long long v157 = v70;
    uint64_t v156 = MEMORY[0x263F8EE58] + 8;
    uint64_t v18 = v162;
    v160 = v66;
    while (v43 < (uint64_t)v66)
    {
      v171(v49, (unint64_t)&v164[*(void *)(v46 + 72) * v43], v18);
      ((void (*)(char *, void, uint64_t, uint64_t))v45)(v49, 0, 1, v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v49, 1, v18) == 1) {
        goto LABEL_22;
      }
      (*(void (**)(char *, char *, uint64_t))v159)(v48, v49, v18);
      uint64_t v72 = v18;
      id v73 = objc_msgSend(v61, sel_defaultManager);
      v74 = v48;
      v75 = (void *)sub_24A463C88();
      v175[0] = 0;
      id v76 = v61;
      unsigned int v77 = objc_msgSend(v73, sel_removeItemAtURL_error_, v75, v175);

      if (v77)
      {
        id v71 = v175[0];
        v166(v74, v72);
        uint64_t v18 = v72;
        uint64_t v48 = v74;
      }
      else
      {
        id v78 = v175[0];
        v79 = (void *)sub_24A463C28();

        swift_willThrow();
        if (qword_269794D20 != -1) {
          swift_once();
        }
        v158 = 0;
        uint64_t v80 = sub_24A464018();
        __swift_project_value_buffer(v80, (uint64_t)qword_26979A608);
        id v81 = v79;
        id v82 = v79;
        v83 = sub_24A463FF8();
        os_log_type_t v84 = sub_24A4645B8();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = swift_slowAlloc();
          v86 = (void *)swift_slowAlloc();
          v175[0] = v86;
          *(_DWORD *)uint64_t v85 = v157;
          swift_getErrorValue();
          uint64_t v87 = sub_24A464B38();
          *(void *)(v85 + 4) = sub_24A3E0E30(v87, v88, (uint64_t *)v175);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_24A3DA000, v83, v84, "failed to erase old log: %{public}s", (uint8_t *)v85, 0xCu);
          swift_arrayDestroy();
          v89 = v86;
          uint64_t v46 = v165;
          MEMORY[0x24C5C5D60](v89, -1, -1);
          MEMORY[0x24C5C5D60](v85, -1, -1);
        }
        else
        {
        }
        uint64_t v48 = v168;
        uint64_t v18 = v162;
        v166(v168, v162);
      }
      unint64_t v45 = (unint64_t)v170;
      id v61 = v76;
      ++v43;
      v66 = v160;
      uint64_t v12 = v169;
      if (v160 == (char *)v43) {
        goto LABEL_21;
      }
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = v162;
LABEL_21:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v45)(v49, 1, 1, v18);
LABEL_22:
  swift_unknownObjectRelease();
  uint64_t v67 = *((void *)v174 + 2);
  uint64_t v43 = (uint64_t)v154;
  if (v67)
  {
    uint64_t v68 = v162;
    v171(v154, (unint64_t)&v174[((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * (v67 - 1)], v162);
    uint64_t v69 = 0;
  }
  else
  {
    uint64_t v69 = 1;
    uint64_t v68 = v162;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45)(v43, v69, 1, v68);
  swift_bridgeObjectRelease();
  sub_24A3E92C0(v43, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v12, 1, v68) == 1)
  {
    v90 = &qword_269793700;
LABEL_39:
    sub_24A3E2068((uint64_t)v12, v90);
    return sub_24A3E9328(v43, v150);
  }
  uint64_t v91 = v68;
  v92 = v151;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v151, v12, v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A466020;
  v94 = (void *)*MEMORY[0x263EFF610];
  *(void *)(inited + 32) = *MEMORY[0x263EFF610];
  id v95 = v94;
  sub_24A3EB0D4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v96 = v149;
  v97 = v158;
  sub_24A463C48();
  if (v97)
  {
    swift_bridgeObjectRelease();
    v166(v92, v91);
    return sub_24A3E2068((uint64_t)v154, &qword_269793700);
  }
  v158 = 0;
  swift_bridgeObjectRelease();
  uint64_t v12 = v145;
  sub_24A463B88();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v96, v144);
  uint64_t v98 = v147;
  uint64_t v99 = v146;
  int v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v147 + 48))(v12, 1, v146);
  uint64_t v43 = (uint64_t)v154;
  if (v100 == 1)
  {
    v166(v151, v162);
    v90 = &qword_269794040;
    goto LABEL_39;
  }
  v101 = v141;
  (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v141, v12, v99);
  v102 = v142;
  sub_24A463E38();
  sub_24A463E58();
  double v104 = v103;
  uint64_t v105 = v147 + 8;
  v106 = *(void (**)(char *, uint64_t))(v147 + 8);
  v106(v102, v99);
  uint64_t v107 = v99;
  uint64_t v18 = v162;
  if (v104 <= 604800.0)
  {
    v106(v101, v107);
    v166(v151, v18);
    return sub_24A3E9328(v43, v150);
  }
  v169 = (char *)v106;
  uint64_t v147 = v105;
  if (qword_269794D20 != -1) {
LABEL_60:
  }
    swift_once();
  uint64_t v108 = sub_24A464018();
  uint64_t v109 = __swift_project_value_buffer(v108, (uint64_t)qword_26979A608);
  v110 = v140;
  v111 = v151;
  v171(v140, (unint64_t)v151, v18);
  v172 = (uint8_t *)v109;
  v112 = sub_24A463FF8();
  os_log_type_t v113 = sub_24A464598();
  if (os_log_type_enabled(v112, v113))
  {
    v114 = (uint8_t *)swift_slowAlloc();
    v115 = (void *)swift_slowAlloc();
    v175[0] = v115;
    *(_DWORD *)v114 = 136446210;
    uint64_t v116 = sub_24A463C68();
    uint64_t v173 = sub_24A3E0E30(v116, v117, (uint64_t *)v175);
    uint64_t v43 = (uint64_t)v154;
    unint64_t v45 = (unint64_t)v170;
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    v166(v110, v162);
    _os_log_impl(&dword_24A3DA000, v112, v113, "aging out log file: %{public}s", v114, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v115, -1, -1);
    v118 = v114;
    v111 = v151;
    MEMORY[0x24C5C5D60](v118, -1, -1);
  }
  else
  {
    v166(v110, v18);
  }

  v119 = v141;
  id v120 = objc_msgSend(v153, sel_defaultManager);
  v121 = (void *)sub_24A463C88();
  v175[0] = 0;
  unsigned int v122 = objc_msgSend(v120, sel_removeItemAtURL_error_, v121, v175);

  if (v122)
  {
    id v123 = v175[0];
    ((void (*)(char *, uint64_t))v169)(v119, v146);
    uint64_t v124 = v162;
    v166(v111, v162);
    uint64_t v125 = v43;
  }
  else
  {
    id v126 = v175[0];
    v127 = (void *)sub_24A463C28();

    swift_willThrow();
    v158 = 0;
    id v128 = v127;
    id v129 = v127;
    v130 = sub_24A463FF8();
    os_log_type_t v131 = sub_24A4645B8();
    if (os_log_type_enabled(v130, v131))
    {
      v132 = v111;
      v133 = (uint8_t *)swift_slowAlloc();
      v134 = (void *)swift_slowAlloc();
      v175[0] = v134;
      *(_DWORD *)v133 = 136446210;
      v172 = v133 + 4;
      swift_getErrorValue();
      uint64_t v135 = sub_24A464B38();
      uint64_t v173 = sub_24A3E0E30(v135, v136, (uint64_t *)v175);
      sub_24A4646E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A3DA000, v130, v131, "failed to erase old log: %{public}s", v133, 0xCu);
      swift_arrayDestroy();
      v137 = v134;
      unint64_t v45 = (unint64_t)v170;
      MEMORY[0x24C5C5D60](v137, -1, -1);
      MEMORY[0x24C5C5D60](v133, -1, -1);

      ((void (*)(char *, uint64_t))v169)(v141, v146);
      v138 = v132;
    }
    else
    {

      ((void (*)(char *, uint64_t))v169)(v141, v146);
      v138 = v111;
    }
    uint64_t v124 = v162;
    v166(v138, v162);
    uint64_t v125 = (uint64_t)v154;
  }
  sub_24A3E2068(v125, &qword_269793700);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45)(v150, 1, 1, v124);
}

uint64_t sub_24A3E51C0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_24A464388();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_24A464388();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_24A464A78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      uint64_t v2 = sub_24A464388();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_24A464388();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9) {
    return 1;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24A3E531C(unint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_24A463D28() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_24A3EAF68(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_24A3E9390(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_24A3E53C8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24A463D28();
    return a2;
  }
  return result;
}

uint64_t sub_24A3E546C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v3 = swift_allocObject();
  v1[3] = v3;
  swift_defaultActor_initialize();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_writeInternalEvents) = 2;
  *(void *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_fileDeletionSource) = 0;
  id v4 = objc_msgSend(self, sel_fileHandleWithNullDevice);
  *(void *)(v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile) = v4;
  uint64_t v5 = v3 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  uint64_t v6 = sub_24A463D28();
  v1[4] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[5] = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  return MEMORY[0x270FA2498](sub_24A3E55A8, v3, 0);
}

uint64_t sub_24A3E55A8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  sub_24A3E5688();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  id v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[3];
  return v4(v5);
}

void sub_24A3E5688()
{
  uint64_t v1 = sub_24A4639D8();
  uint64_t v98 = *(void *)(v1 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  id v4 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v86 - v5;
  uint64_t v7 = sub_24A4639E8();
  uint64_t v99 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v94 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v86 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v95 = (char *)&v86 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v97 = (char *)&v86 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v96 = (char *)&v86 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v86 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v86 - v22;
  sub_24A3E6304();
  if (v0)
  {
    id v102 = v0;
    id v24 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    if (swift_dynamicCast())
    {
      uint64_t v87 = v12;
      uint64_t v25 = (uint64_t)v21;
      uint64_t v26 = v99 + 16;
      v90 = *(void (**)(uint64_t, char *, uint64_t))(v99 + 16);
      v90(v25, v23, v7);
      uint64_t v89 = sub_24A3EB64C(&qword_269793638, MEMORY[0x263F06060]);
      uint64_t v92 = v25;
      sub_24A463C18();
      sub_24A4639C8();
      uint64_t v27 = sub_24A3EB64C(&qword_269793640, MEMORY[0x263F06038]);
      sub_24A464408();
      uint64_t v88 = v27;
      sub_24A464408();
      uint64_t v93 = v7;
      uint64_t v28 = v100;
      uint64_t v29 = v101;
      uint64_t v91 = v23;
      uint64_t v30 = *(void (**)(char *, uint64_t))(v98 + 8);
      v30(v4, v1);
      v30(v6, v1);
      if (v29 == v28)
      {
        uint64_t v31 = (void (*)(char *, uint64_t, uint64_t))v90;
        uint64_t v32 = v93;

        if (qword_269794D20 != -1) {
          swift_once();
        }
        uint64_t v33 = sub_24A464018();
        __swift_project_value_buffer(v33, (uint64_t)qword_26979A608);
        unint64_t v34 = v96;
        uint64_t v35 = v32;
        v31(v96, v92, v32);
        v36 = sub_24A463FF8();
        os_log_type_t v37 = sub_24A4645D8();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = v34;
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v39 = 138412290;
          uint64_t v35 = v32;
          sub_24A463988();
          uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v101 = v41;
          sub_24A4646E8();
          *uint64_t v40 = v41;
          unint64_t v42 = *(void (**)(char *, uint64_t))(v99 + 8);
          v42(v38, v32);
          _os_log_impl(&dword_24A3DA000, v36, v37, "transparency log - no write permission. %@", v39, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269793630);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v40, -1, -1);
          MEMORY[0x24C5C5D60](v39, -1, -1);
        }
        else
        {
          unint64_t v42 = *(void (**)(char *, uint64_t))(v99 + 8);
          v42(v34, v32);
        }

        uint64_t v59 = v92;
        sub_24A3E3670(v92, "unable to access transparency log (PERM): %{public}s");
        sub_24A463988();
        swift_willThrow();
        v42((char *)v59, v35);
        v42(v91, v35);
        goto LABEL_32;
      }
      uint64_t v43 = *(char **)(v99 + 8);
      uint64_t v44 = v93;
      uint64_t v98 = v99 + 8;
      v96 = v43;
      ((void (*)(uint64_t, uint64_t))v43)(v92, v93);
      unint64_t v45 = v97;
      uint64_t v92 = v26;
      v90((uint64_t)v97, v91, v44);
      sub_24A463C18();
      sub_24A4639B8();
      sub_24A464408();
      sub_24A464408();
      uint64_t v47 = v100;
      uint64_t v46 = v101;
      v30(v4, v1);
      v30(v6, v1);
      if (v46 == v47)
      {
        uint64_t v48 = v93;

        if (qword_269794D20 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_24A464018();
        __swift_project_value_buffer(v49, (uint64_t)qword_26979A608);
        unint64_t v50 = v95;
        uint64_t v51 = (uint64_t)v97;
        v90((uint64_t)v95, v97, v48);
        uint64_t v52 = sub_24A463FF8();
        os_log_type_t v53 = sub_24A4645D8();
        if (os_log_type_enabled(v52, v53))
        {
          char v54 = (uint8_t *)swift_slowAlloc();
          v55 = (void *)swift_slowAlloc();
          *(_DWORD *)char v54 = 138412290;
          sub_24A463988();
          uint64_t v56 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v101 = v56;
          sub_24A4646E8();
          void *v55 = v56;
          unint64_t v57 = (void (*)(uint64_t, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v50, v48);
          _os_log_impl(&dword_24A3DA000, v52, v53, "transparency log - no space. %@", v54, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269793630);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v55, -1, -1);
          long long v58 = v54;
          uint64_t v51 = (uint64_t)v97;
          MEMORY[0x24C5C5D60](v58, -1, -1);
        }
        else
        {
          unint64_t v57 = (void (*)(uint64_t, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v50, v48);
        }

        sub_24A3E3670(v51, "unable to write transparency log (OOS): %{public}s");
        sub_24A463988();
        swift_willThrow();
        v57(v51, v48);
        uint64_t v73 = (uint64_t)v91;
        uint64_t v74 = v48;
LABEL_31:
        v57(v73, v74);
LABEL_32:

        return;
      }
      v60 = v45;
      uint64_t v61 = v93;
      ((void (*)(char *, uint64_t))v96)(v60, v93);
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v87, v91, v61);
      sub_24A463C18();
      sub_24A4639A8();
      sub_24A464408();
      sub_24A464408();
      uint64_t v63 = v100;
      uint64_t v62 = v101;
      v30(v4, v1);
      v30(v6, v1);
      if (v62 == v63)
      {
        uint64_t v64 = v93;

        if (qword_269794D20 != -1) {
          swift_once();
        }
        uint64_t v65 = sub_24A464018();
        __swift_project_value_buffer(v65, (uint64_t)qword_26979A608);
        v66 = v94;
        v90((uint64_t)v94, v87, v64);
        uint64_t v67 = sub_24A463FF8();
        os_log_type_t v68 = sub_24A4645D8();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          long long v70 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 138412290;
          sub_24A463988();
          uint64_t v71 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v101 = v71;
          sub_24A4646E8();
          *long long v70 = v71;
          uint64_t v72 = v66;
          unint64_t v57 = (void (*)(uint64_t, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v72, v64);
          _os_log_impl(&dword_24A3DA000, v67, v68, "transparency log - unknown write error. %@", v69, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269793630);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v70, -1, -1);
          MEMORY[0x24C5C5D60](v69, -1, -1);
        }
        else
        {
          os_log_type_t v84 = v66;
          unint64_t v57 = (void (*)(uint64_t, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v84, v64);
        }

        uint64_t v85 = (uint64_t)v87;
        sub_24A3E3670((uint64_t)v87, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s");
        sub_24A463988();
        swift_willThrow();
        uint64_t v73 = v85;
        uint64_t v74 = v64;
        goto LABEL_31;
      }
      ((void (*)(char *, uint64_t))v96)(v87, v93);
    }

    if (qword_269794D20 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_24A464018();
    __swift_project_value_buffer(v75, (uint64_t)qword_26979A608);
    id v76 = v0;
    id v77 = v0;
    id v78 = sub_24A463FF8();
    os_log_type_t v79 = sub_24A4645D8();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      id v81 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v80 = 138412290;
      id v82 = v0;
      v83 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v102 = v83;
      sub_24A4646E8();
      *id v81 = v83;

      _os_log_impl(&dword_24A3DA000, v78, v79, "transparency log - unexpected error. %@", v80, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793630);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v81, -1, -1);
      MEMORY[0x24C5C5D60](v80, -1, -1);
    }
    else
    {
    }
    sub_24A3E398C(v0);
    swift_willThrow();
  }
}

void sub_24A3E6304()
{
  uint64_t v113 = sub_24A4640F8();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  v110 = (char *)&v102 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_24A464138();
  uint64_t v109 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v108 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_24A464668();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (void *)sub_24A463E78();
  uint64_t v117 = *(v118 - 1);
  MEMORY[0x270FA5388](v118);
  uint64_t v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A463D28();
  uint64_t v10 = *(uint8_t **)(v9 - 8);
  uint64_t v120 = v9;
  v121 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  double v104 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v114 = (char *)&v102 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v102 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  v115 = (char *)&v102 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  double v103 = (char *)&v102 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v102 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v102 - v28;
  uint64_t v123 = v0;
  uint64_t v30 = (void **)(v0 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
  swift_beginAccess();
  uint64_t v116 = v30;
  uint64_t v31 = *v30;
  uint64_t v32 = self;
  id v33 = v31;
  id v34 = objc_msgSend(v32, sel_fileHandleWithNullDevice);
  uint64_t v119 = sub_24A3E909C(0, &qword_269793708);
  LOBYTE(v30) = sub_24A4646C8();

  if ((v30 & 1) == 0)
  {
    if (qword_269794D20 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_24A464018();
    __swift_project_value_buffer(v35, (uint64_t)qword_26979A608);
    v36 = sub_24A463FF8();
    os_log_type_t v37 = sub_24A4645D8();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_24A3DA000, v36, v37, "witnessed log vanish - refeshing", v38, 2u);
      MEMORY[0x24C5C5D60](v38, -1, -1);
    }
  }
  uint64_t v39 = v123;
  uint64_t v40 = (uint64_t *)(v123 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_fileDeletionSource);
  swift_beginAccess();
  if (*v40)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24A464698();
    swift_unknownObjectRelease();
    *uint64_t v40 = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v41 = v122;
  sub_24A3E3C68((uint64_t)v8);
  if (!v41)
  {
    id v102 = v40;
    uint64_t v122 = 0;
    uint64_t v43 = v120;
    unint64_t v42 = v121;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v121 + 6))(v8, 1, v120) == 1)
    {
      sub_24A3E2068((uint64_t)v8, &qword_269793700);
      id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      unint64_t v45 = v42;
      uint64_t v46 = (void *)sub_24A464248();
      objc_msgSend(v44, sel_setDateFormat_, v46);

      sub_24A463E38();
      uint64_t v47 = (void *)sub_24A463DF8();
      (*(void (**)(char *, void *))(v117 + 8))(v5, v118);
      v118 = v44;
      id v48 = objc_msgSend(v44, sel_stringFromDate_, v47);

      sub_24A464278();
      uint64_t v49 = v39 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
      swift_beginAccess();
      uint64_t v117 = *((void *)v45 + 2);
      ((void (*)(char *, uint64_t, uint64_t))v117)(v17, v49, v43);
      uint64_t aBlock = 0;
      unint64_t v125 = 0xE000000000000000;
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0xD00000000000001ALL;
      unint64_t v125 = 0x800000024A469D90;
      sub_24A464358();
      swift_bridgeObjectRelease();
      sub_24A464358();
      sub_24A463CA8();
      swift_bridgeObjectRelease();
      unint64_t v50 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
      v50(v17, v43);
      uint64_t v51 = v122;
      sub_24A463DB8();
      uint64_t v52 = v43;
      if (v51)
      {
        v50(v20, v43);

        return;
      }

      unint64_t v57 = v115;
      (*((void (**)(char *, char *, uint64_t))v45 + 4))(v115, v20, v43);
      uint64_t v58 = (uint64_t)v114;
      uint64_t v59 = (void (*)(char *, char *, uint64_t))v117;
      ((void (*)(char *, char *, uint64_t))v117)(v114, v57, v52);
      id v60 = sub_24A3E7318(v58);
      uint64_t v122 = 0;
      uint64_t v61 = v116;
      uint64_t v64 = *v116;
      *uint64_t v116 = v60;

      if (qword_269794D20 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_24A464018();
      __swift_project_value_buffer(v65, (uint64_t)qword_26979A608);
      v66 = v104;
      v59(v104, v57, v52);
      uint64_t v67 = v57;
      os_log_type_t v68 = sub_24A463FF8();
      os_log_type_t v69 = sub_24A464598();
      if (os_log_type_enabled(v68, v69))
      {
        long long v70 = (uint8_t *)swift_slowAlloc();
        uint64_t v71 = swift_slowAlloc();
        uint64_t aBlock = v71;
        *(_DWORD *)long long v70 = 136446210;
        v121 = v70 + 4;
        uint64_t v72 = sub_24A463CF8();
        uint64_t v131 = sub_24A3E0E30(v72, v73, &aBlock);
        sub_24A4646E8();
        swift_bridgeObjectRelease();
        uint64_t v74 = v120;
        v50(v66, v120);
        _os_log_impl(&dword_24A3DA000, v68, v69, "created new log file at %{public}s", v70, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v71, -1, -1);
        uint64_t v75 = v70;
        uint64_t v61 = v116;
        MEMORY[0x24C5C5D60](v75, -1, -1);

        id v76 = v115;
        uint64_t v77 = v74;
      }
      else
      {

        v50(v66, v52);
        id v76 = v67;
        uint64_t v77 = v52;
      }
      v50(v76, v77);
      uint64_t v83 = v107;
    }
    else
    {
      (*((void (**)(char *, char *, uint64_t))v42 + 4))(v29, v8, v43);
      os_log_type_t v53 = (void (*)(char *, char *, uint64_t))*((void *)v42 + 2);
      v53(v27, v29, v43);
      uint64_t v54 = v122;
      id v55 = sub_24A3E7318((uint64_t)v27);
      uint64_t v56 = v43;
      if (v54)
      {
        (*((void (**)(char *, uint64_t))v42 + 1))(v29, v43);
        return;
      }
      uint64_t v61 = v116;
      uint64_t v62 = *v116;
      *uint64_t v116 = v55;

      id v63 = *v61;
      sub_24A464588();
      uint64_t v122 = 0;

      if (qword_269794D20 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_24A464018();
      __swift_project_value_buffer(v78, (uint64_t)qword_26979A608);
      os_log_type_t v79 = v103;
      v53(v103, v29, v56);
      uint64_t v80 = sub_24A463FF8();
      os_log_type_t v81 = sub_24A464598();
      BOOL v82 = os_log_type_enabled(v80, v81);
      uint64_t v83 = v107;
      if (v82)
      {
        os_log_type_t v84 = (uint8_t *)swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        uint64_t aBlock = v119;
        *(_DWORD *)os_log_type_t v84 = 136446210;
        uint64_t v85 = sub_24A463CF8();
        uint64_t v130 = sub_24A3E0E30(v85, v86, &aBlock);
        sub_24A4646E8();
        swift_bridgeObjectRelease();
        uint64_t v87 = (void (*)(char *, uint64_t))*((void *)v121 + 1);
        uint64_t v88 = v79;
        uint64_t v89 = v120;
        v87(v88, v120);
        _os_log_impl(&dword_24A3DA000, v80, v81, "opened log file at %{public}s", v84, 0xCu);
        uint64_t v90 = v119;
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v90, -1, -1);
        uint64_t v91 = v84;
        uint64_t v61 = v116;
        MEMORY[0x24C5C5D60](v91, -1, -1);

        v87(v29, v89);
      }
      else
      {

        uint64_t v92 = (void (*)(char *, uint64_t))*((void *)v121 + 1);
        v92(v79, v56);
        v92(v29, v56);
      }
    }
    sub_24A3E909C(0, &qword_269793710);
    objc_msgSend(*v61, sel_fileDescriptor);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793718);
    uint64_t v93 = v106;
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = xmmword_24A466030;
    sub_24A464658();
    sub_24A464648();
    uint64_t aBlock = v94;
    sub_24A3EB64C(&qword_269793720, MEMORY[0x263F8F168]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793728);
    sub_24A3E9130(&qword_269793730, &qword_269793728);
    id v95 = v105;
    sub_24A464728();
    uint64_t v96 = sub_24A464678();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v83);
    v97 = v102;
    uint64_t *v102 = v96;
    swift_unknownObjectRelease();
    if (*v97)
    {
      swift_getObjectType();
      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      id v128 = sub_24A3E9110;
      uint64_t v129 = v98;
      uint64_t aBlock = MEMORY[0x263EF8330];
      unint64_t v125 = 1107296256;
      id v126 = sub_24A3E77AC;
      v127 = &block_descriptor_0;
      uint64_t v99 = _Block_copy(&aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v100 = v108;
      sub_24A464128();
      uint64_t v101 = v110;
      sub_24A3E77F0();
      sub_24A464688();
      _Block_release(v99);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v101, v113);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v100, v111);
      swift_release();
      swift_release();
      if (*v97)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24A4646A8();
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_24A3E7318(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_24A463C88();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_24A463D28();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_24A463C28();

    swift_willThrow();
    uint64_t v9 = sub_24A463D28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_24A3E7470()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_24A4644E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_24A3E7624((uint64_t)v2, (uint64_t)&unk_269793760, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_24A3E7588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24A3E75A8, a4, 0);
}

uint64_t sub_24A3E75A8()
{
  sub_24A3E5688();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3E7624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24A4644E8();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_24A4644D8();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_24A3E2068(a1, &qword_269793750);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24A464498();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_24A3E77AC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_24A3E77F0()
{
  return sub_24A464728();
}

uint64_t sub_24A3E78B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v29[2] = a3;
  v29[3] = a4;
  v29[4] = a1;
  v29[5] = a2;
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24A4642C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A463E78();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_24A4647E8();
  swift_bridgeObjectRelease();
  uint64_t v31 = 40;
  unint64_t v32 = 0xE100000000000000;
  sub_24A463E38();
  sub_24A463DD8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24A464358();
  swift_bridgeObjectRelease();
  sub_24A464358();
  sub_24A464358();
  sub_24A464358();
  sub_24A4642B8();
  uint64_t v12 = sub_24A464288();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  if (v14 >> 60 == 15)
  {
    sub_24A3E8C4C();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    id v33 = (void *)v12;
    id v34 = (void *)v14;
    sub_24A463DC8();
    sub_24A4642B8();
    uint64_t v17 = sub_24A464288();
    unint64_t v19 = v18;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v7, v4);
    if (v19 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      sub_24A463DC8();
      sub_24A3E8CA0(v17, v19);
      uint64_t v20 = (void **)(v29[0] + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
      swift_beginAccess();
      uint64_t v21 = *v20;
      uint64_t v23 = (uint64_t)v33;
      unint64_t v22 = (unint64_t)v34;
      v30[0] = v33;
      v30[1] = v34;
      id v24 = v21;
      sub_24A3E8D0C(v23, v22);
      sub_24A3E8D64();
      uint64_t v25 = v29[1];
      sub_24A464578();
      if (v25)
      {

        sub_24A3E8CB4(v23, v22);
      }
      else
      {
        sub_24A3E8CB4(v23, v22);

        uint64_t v26 = *v20;
        v30[0] = 0;
        if (objc_msgSend(v26, sel_synchronizeAndReturnError_, v30))
        {
          id v27 = v30[0];
        }
        else
        {
          id v28 = v30[0];
          sub_24A463C28();

          swift_willThrow();
        }
      }
      return sub_24A3E8CB4(v23, v22);
    }
  }
  return result;
}

unsigned char *sub_24A3E7C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a5;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24A463A68();
  uint64_t v44 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_24A4642C8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  uint64_t v49 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A463E78();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24A42508C();
  uint64_t result = (unsigned char *)swift_beginAccess();
  if (*v16 == 1)
  {
    uint64_t result = sub_24A425268();
    if (*result == 1)
    {
      uint64_t v42 = v5;
      uint64_t v43 = v6;
      uint64_t v51 = 0;
      unint64_t v52 = 0xE000000000000000;
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      uint64_t v51 = 40;
      unint64_t v52 = 0xE100000000000000;
      sub_24A463E38();
      sub_24A463DD8();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      sub_24A464358();
      swift_bridgeObjectRelease();
      sub_24A464358();
      sub_24A464358();
      sub_24A464358();
      sub_24A4642B8();
      uint64_t v18 = sub_24A464288();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = v49 + 8;
      unint64_t v22 = *(void (**)(char *, uint64_t))(v49 + 8);
      v22(v11, v48);
      if (v20 >> 60 == 15)
      {
        sub_24A3E8C4C();
        swift_allocError();
        return (unsigned char *)swift_willThrow();
      }
      else
      {
        uint64_t v49 = v21;
        uint64_t v47 = v18;
        os_log_type_t v53 = (void *)v18;
        uint64_t v54 = (void *)v20;
        sub_24A463AA8();
        swift_allocObject();
        uint64_t v23 = sub_24A463A98();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269793658);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_24A466020;
        sub_24A463A58();
        uint64_t v51 = v24;
        sub_24A3EB64C(&qword_269793660, MEMORY[0x263F06130]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269793668);
        sub_24A3E9130((unint64_t *)&qword_269793670, &qword_269793668);
        sub_24A464728();
        sub_24A463A78();
        uint64_t v51 = v45;
        sub_24A3E8DB8();
        swift_bridgeObjectRetain();
        uint64_t v25 = v43;
        uint64_t v26 = sub_24A463A88();
        if (v25)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return (unsigned char *)sub_24A3E8CA0(v47, v20);
        }
        else
        {
          uint64_t v28 = v26;
          unint64_t v29 = v27;
          uint64_t v47 = v23;
          swift_bridgeObjectRelease();
          sub_24A463DC8();
          sub_24A4642B8();
          uint64_t v30 = sub_24A464288();
          unint64_t v32 = v31;
          uint64_t result = (unsigned char *)((uint64_t (*)(char *, uint64_t))v22)(v11, v48);
          if (v32 >> 60 == 15)
          {
            __break(1u);
          }
          else
          {
            sub_24A463DC8();
            sub_24A3E8CA0(v30, v32);
            id v33 = (void **)(v42 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_activeFile);
            swift_beginAccess();
            id v34 = *v33;
            uint64_t v36 = (uint64_t)v53;
            unint64_t v35 = (unint64_t)v54;
            v50[0] = v53;
            v50[1] = v54;
            id v37 = v34;
            sub_24A3E8D0C(v36, v35);
            sub_24A3E8D64();
            sub_24A464578();
            sub_24A3E8CB4(v36, v35);

            uint64_t v38 = *v33;
            v50[0] = 0;
            if (objc_msgSend(v38, sel_synchronizeAndReturnError_, v50))
            {
              id v39 = v50[0];
              sub_24A3E8CB4(v36, v35);
              sub_24A3E8CB4(v28, v29);
              return (unsigned char *)swift_release();
            }
            else
            {
              id v40 = v50[0];
              sub_24A463C28();

              swift_willThrow();
              sub_24A3E8CB4(v28, v29);
              swift_release();
              return (unsigned char *)sub_24A3E8CB4(v36, v35);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_24A3E82FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools15TransparencyLog_rootLogsURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A3E839C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_24A3EB5B8(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_24A3E83CC(uint64_t a1)
{
  unint64_t v2 = sub_24A3E8F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3E8408(uint64_t a1)
{
  unint64_t v2 = sub_24A3E8F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A3E8444(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697936E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A3E8F9C();
  sub_24A464C28();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
  sub_24A3E8FF0();
  sub_24A464A28();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24A3E8594(void *a1)
{
  return sub_24A3E8444(a1, *v1);
}

uint64_t sub_24A3E85B0(uint64_t a1, uint64_t a2)
{
  return sub_24A3E871C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24A3E85C8(uint64_t a1, id *a2)
{
  uint64_t result = sub_24A464258();
  *a2 = 0;
  return result;
}

uint64_t sub_24A3E8640(uint64_t a1, id *a2)
{
  char v3 = sub_24A464268();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24A3E86C0@<X0>(uint64_t *a1@<X8>)
{
  sub_24A464278();
  uint64_t v2 = sub_24A464248();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24A3E8704(uint64_t a1, uint64_t a2)
{
  return sub_24A3E871C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24A3E871C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24A464278();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24A3E8760()
{
  sub_24A464278();
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A3E87B4()
{
  sub_24A464278();
  sub_24A464B98();
  sub_24A464318();
  uint64_t v0 = sub_24A464BC8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24A3E8828()
{
  uint64_t v0 = sub_24A464278();
  uint64_t v2 = v1;
  if (v0 == sub_24A464278() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24A464A78();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24A3E88B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24A464248();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24A3E88FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A464278();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24A3E8928(uint64_t a1)
{
  uint64_t v2 = sub_24A3EB64C(&qword_2697937B8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_24A3EB64C((unint64_t *)&unk_2697937C0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24A3E89E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793778);
  uint64_t v10 = *(void *)(sub_24A463D28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24A4648D8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24A463D28() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24A3EAF7C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

unint64_t sub_24A3E8C4C()
{
  unint64_t result = qword_269793648;
  if (!qword_269793648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793648);
  }
  return result;
}

uint64_t sub_24A3E8CA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24A3E8CB4(a1, a2);
  }
  return a1;
}

uint64_t sub_24A3E8CB4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24A3E8D0C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_24A3E8D64()
{
  unint64_t result = qword_269793650;
  if (!qword_269793650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793650);
  }
  return result;
}

unint64_t sub_24A3E8DB8()
{
  unint64_t result = qword_269794D28[0];
  if (!qword_269794D28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269794D28);
  }
  return result;
}

unint64_t sub_24A3E8E10()
{
  unint64_t result = qword_269793678;
  if (!qword_269793678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793678);
  }
  return result;
}

uint64_t sub_24A3E8E68()
{
  return type metadata accessor for TransparencyLog();
}

uint64_t type metadata accessor for TransparencyLog()
{
  uint64_t result = qword_269795030;
  if (!qword_269795030) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A3E8EBC()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransparencyLog.WriteError()
{
  return &type metadata for TransparencyLog.WriteError;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents()
{
  return &type metadata for TransparencyLog.JustEvents;
}

unint64_t sub_24A3E8F9C()
{
  unint64_t result = qword_2697950C0[0];
  if (!qword_2697950C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697950C0);
  }
  return result;
}

unint64_t sub_24A3E8FF0()
{
  unint64_t result = qword_2697936F0;
  if (!qword_2697936F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793890);
    sub_24A3EB64C((unint64_t *)&qword_2697936F8, (void (*)(uint64_t))type metadata accessor for ServiceEventValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697936F0);
  }
  return result;
}

uint64_t sub_24A3E909C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24A3E90D8()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A3E9110()
{
  return sub_24A3E7470();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24A3E9130(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A3E9180()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A3E91C0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A3E0820;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24A3E75A8, v2, 0);
}

void type metadata accessor for URLResourceKey()
{
  if (!qword_269793798)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_269793798);
    }
  }
}

uint64_t sub_24A3E92C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3E9328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3E9390(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v165 = (char *)&v145 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v167 = (char *)&v145 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v148 = (char *)&v145 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v155 = (char *)&v145 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v151 = (char *)&v145 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v150 = (char *)&v145 - v20;
  v170 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_24A464A38();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_24A3EA0A4(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  uint64_t v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)MEMORY[0x263F8EE78];
    unint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v145 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          v138 = v28;
          unint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_24A3EA3F0(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v138 = sub_24A3EACF4((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          uint64_t v143 = &v138[16 * v137 + 32];
          *(void *)uint64_t v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      *(void *)(v145 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_24A464468();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v145 = v25;
    unint64_t v156 = v25 + v27;
  }
  uint64_t v29 = 0;
  uint64_t v161 = v26 + 16;
  uint64_t v162 = (void (**)(char *, uint64_t))(v26 + 8);
  v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)MEMORY[0x263F8EE78];
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v29 + 1;
    uint64_t v154 = v29;
    if (v29 + 1 >= v21)
    {
      uint64_t v40 = v29 + 1;
      goto LABEL_69;
    }
    uint64_t v163 = v21;
    v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    unint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_24A463C68();
    uint64_t v38 = v37;
    if (v36 != sub_24A463C68()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_24A464A78();
    uint64_t v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    uint64_t v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      uint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        uint64_t v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_24A463C68();
        uint64_t v50 = v49;
        if (v48 == sub_24A463C68() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_24A464A78();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        uint64_t v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          uint64_t v54 = v163;
          uint64_t v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      uint64_t v40 = v46;
    }
    uint64_t v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    uint64_t v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        id v63 = &v56[v58];
        v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    uint64_t v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    uint64_t v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_24A3EAAB8(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    uint64_t v163 = v40;
    if (v85 >= v84 >> 1)
    {
      uint64_t v135 = sub_24A3EAAB8((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    unint64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    uint64_t v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          id v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            uint64_t v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        uint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        uint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        uint64_t v129 = v28;
        uint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_24A3EA3F0(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    uint64_t v21 = v170[1];
    uint64_t v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    uint64_t v65 = v54;
  }
  else {
    uint64_t v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      uint64_t v67 = (char *)(v40 * v66);
      uint64_t v152 = v65;
      do
      {
        uint64_t v70 = 0;
        uint64_t v71 = v31;
        uint64_t v163 = v40;
        v160 = v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = (uint64_t)&v67[v70 + *v170];
          uint64_t v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_24A463C68();
          uint64_t v77 = v76;
          if (v75 == sub_24A463C68() && v77 == v78) {
            break;
          }
          char v79 = sub_24A464A78();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          uint64_t v67 = v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          uint64_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          uint64_t v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        os_log_type_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        uint64_t v69 = v163;
        uint64_t v67 = v160;
LABEL_60:
        uint64_t v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        uint64_t v31 = v154;
      }
      while (v40 != v152);
      uint64_t v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  uint64_t result = sub_24A4648D8();
  __break(1u);
  return result;
}

uint64_t sub_24A3EA0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    unint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      unint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_24A463C68();
      uint64_t v25 = v24;
      if (v23 == sub_24A463C68() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_24A464A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      uint64_t v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24A3EA3F0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_24A463D28();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v63 = (char *)&v58 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v58 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          uint64_t v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_24A463C68();
          uint64_t v49 = v48;
          if (v47 == sub_24A463C68() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_24A464A78();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_24A3EABB4(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      id v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_24A463C68();
        uint64_t v30 = v29;
        if (v28 == sub_24A463C68() && v30 == v31) {
          break;
        }
        char v34 = sub_24A464A78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

char *sub_24A3EAAB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793788);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24A3EABB4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_24A463D28();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_24A464938();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_24A3EACF4(uint64_t a1)
{
  return sub_24A3EAAB8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24A3EAD08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A3EAD28(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_24A3EAD28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793778);
  uint64_t v10 = *(void *)(sub_24A463D28() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24A463D28() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3EAF68(unint64_t a1)
{
  return sub_24A3E89E4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_24A3EAF7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_24A463D28() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3EB0D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793780);
    uint64_t v3 = sub_24A4647D8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      unint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_24A464278();
      sub_24A464B98();
      id v7 = v6;
      sub_24A464318();
      uint64_t v8 = sub_24A464BC8();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_24A464278();
        uint64_t v17 = v16;
        if (v15 == sub_24A464278() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_24A464A78();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_24A464278();
          uint64_t v24 = v23;
          if (v22 == sub_24A464278() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_24A464A78();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unsigned char *_s19CloudTelemetryTools15TransparencyLogC10WriteErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A3EB3A0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents.CodingKeys()
{
  return &type metadata for TransparencyLog.JustEvents.CodingKeys;
}

unint64_t sub_24A3EB3DC()
{
  unint64_t result = qword_2697951D0[0];
  if (!qword_2697951D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697951D0);
  }
  return result;
}

uint64_t sub_24A3EB430()
{
  return sub_24A3EB64C(&qword_2697937A0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_24A3EB478()
{
  return sub_24A3EB64C(&qword_2697937A8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_24A3EB4C0()
{
  return sub_24A3EB64C(&qword_2697937B0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

unint64_t sub_24A3EB50C()
{
  unint64_t result = qword_269795460;
  if (!qword_269795460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269795460);
  }
  return result;
}

unint64_t sub_24A3EB564()
{
  unint64_t result = qword_269795468[0];
  if (!qword_269795468[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269795468);
  }
  return result;
}

uint64_t sub_24A3EB5B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24A464A78();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24A3EB638()
{
  return 0x73746E657665;
}

uint64_t sub_24A3EB64C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A3EB694(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_24A3EEAA4(v5, (uint64_t)sub_24A3EEA18, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *(void *)(v2 + 16) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A3EB754@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ServiceEventValue();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v70 = (uint64_t)&v60 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v60 - v13;
  sub_24A3E200C(a1, (uint64_t)v77);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v75;
    *a2 = v74;
    a2[1] = v15;
    goto LABEL_16;
  }
  uint64_t v69 = v7;
  sub_24A3E909C(0, (unint64_t *)&qword_269793920);
  if (swift_dynamicCast())
  {
    id v16 = v74;
    if (*MEMORY[0x263EFFB40]) {
      BOOL v17 = v74 == (id)*MEMORY[0x263EFFB40];
    }
    else {
      BOOL v17 = 0;
    }
    if (v17)
    {

      *(unsigned char *)a2 = 1;
      goto LABEL_16;
    }
    id v18 = (id)*MEMORY[0x263EFFB38];

    if (v18)
    {
      if (v16 == v18)
      {
        *(unsigned char *)a2 = 0;
        goto LABEL_16;
      }
    }
  }
  if (swift_dynamicCast())
  {
    *a2 = v74;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v74;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v74;
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793928);
  if (!swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793930);
    if (!swift_dynamicCast())
    {
      sub_24A3F13A8();
      swift_allocError();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
    }
    uint64_t v54 = v72;
    unint64_t v55 = (void *)sub_24A3EFCA8(0, *(void *)(v72 + 16), 0, MEMORY[0x263F8EE78]);
    uint64_t v56 = *(void *)(v54 + 16);
    if (v56)
    {
      uint64_t v65 = a2;
      uint64_t v57 = v54 + 32;
      while (1)
      {
        sub_24A3E200C(v57, (uint64_t)&v74);
        sub_24A3EB754(&v74);
        if (v2) {
          break;
        }
        unint64_t v59 = v55[2];
        unint64_t v58 = v55[3];
        if (v59 >= v58 >> 1) {
          unint64_t v55 = (void *)sub_24A3EFCA8(v58 > 1, v59 + 1, 1, v55);
        }
        v55[2] = v59 + 1;
        sub_24A3EF5C0((uint64_t)v10, (uint64_t)v55+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v59);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
        v57 += 32;
        if (!--v56)
        {
          swift_bridgeObjectRelease();
          a2 = v65;
          goto LABEL_77;
        }
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
    }
    swift_bridgeObjectRelease();
LABEL_77:
    *a2 = v55;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
  }
  uint64_t v20 = v78;
  uint64_t v21 = (void *)sub_24A4641E8();
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(v20 + 64);
  uint64_t v61 = v20 + 64;
  uint64_t v64 = v20;
  uint64_t v24 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  id v63 = v73;
  uint64_t v66 = &v76;
  int64_t v62 = (unint64_t)(v24 + 63) >> 6;
  int64_t v60 = v62 - 1;
  uint64_t v65 = a2;
  while (1)
  {
    if (v26)
    {
      uint64_t v27 = v3;
      unint64_t v28 = __clz(__rbit64(v26));
      uint64_t v29 = (v26 - 1) & v26;
      unint64_t v30 = v28 | (v22 << 6);
      goto LABEL_28;
    }
    int64_t v34 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      goto LABEL_80;
    }
    if (v34 >= v62) {
      goto LABEL_40;
    }
    unint64_t v35 = *(void *)(v61 + 8 * v34);
    if (v35) {
      goto LABEL_32;
    }
    v22 += 2;
    if (v34 + 1 < v62) {
      break;
    }
    uint64_t v27 = v3;
    int64_t v22 = v34;
LABEL_41:
    uint64_t v29 = 0;
    memset(v73, 0, sizeof(v73));
    long long v72 = 0u;
LABEL_42:
    sub_24A3F2034((uint64_t)&v72, (uint64_t)&v74, &qword_269793938);
    uint64_t v36 = v75;
    if (!v75)
    {
      swift_release();
      *a2 = v21;
      swift_storeEnumTagMultiPayload();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
    }
    uint64_t v37 = v6;
    uint64_t v38 = (uint64_t)v74;
    sub_24A3F201C(v66, &v72);
    sub_24A3EB754(&v72);
    uint64_t v68 = v27;
    if (v27)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v72);
      swift_bridgeObjectRelease();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v77);
    }
    unint64_t v67 = v29;
    int64_t v39 = v22;
    sub_24A3EF5C0((uint64_t)v14, v70);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v71 = v21;
    unint64_t v42 = sub_24A3E1488(v38, v36);
    uint64_t v43 = v21[2];
    BOOL v44 = (v41 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    char v46 = v41;
    if (v21[3] >= v45)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v21 = v71;
        if (v41) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_24A3EF624();
        uint64_t v21 = v71;
        if (v46) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_24A3EEEF8(v45, isUniquelyReferenced_nonNull_native);
      unint64_t v47 = sub_24A3E1488(v38, v36);
      if ((v46 & 1) != (v48 & 1)) {
        goto LABEL_82;
      }
      unint64_t v42 = v47;
      uint64_t v21 = v71;
      if (v46)
      {
LABEL_24:
        sub_24A3F1F50(v70, v21[7] + *(void *)(v69 + 72) * v42);
        goto LABEL_25;
      }
    }
    v21[(v42 >> 6) + 8] |= 1 << v42;
    uint64_t v49 = (uint64_t *)(v21[6] + 16 * v42);
    *uint64_t v49 = v38;
    v49[1] = v36;
    sub_24A3EF5C0(v70, v21[7] + *(void *)(v69 + 72) * v42);
    uint64_t v50 = v21[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      goto LABEL_79;
    }
    v21[2] = v52;
    swift_bridgeObjectRetain();
LABEL_25:
    uint64_t v6 = v37;
    int64_t v22 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v72);
    uint64_t v3 = v68;
    a2 = v65;
    unint64_t v26 = v67;
  }
  unint64_t v35 = *(void *)(v61 + 8 * v22);
  if (v35)
  {
    ++v34;
    goto LABEL_32;
  }
  if (v34 + 2 >= v62)
  {
LABEL_40:
    uint64_t v27 = v3;
    goto LABEL_41;
  }
  unint64_t v35 = *(void *)(v61 + 8 * (v34 + 2));
  if (v35)
  {
    v34 += 2;
    goto LABEL_32;
  }
  int64_t v53 = v34 + 3;
  if (v34 + 3 >= v62)
  {
    uint64_t v27 = v3;
    int64_t v22 = v34 + 2;
    goto LABEL_41;
  }
  unint64_t v35 = *(void *)(v61 + 8 * v53);
  if (v35)
  {
    v34 += 3;
LABEL_32:
    uint64_t v27 = v3;
    uint64_t v29 = (v35 - 1) & v35;
    unint64_t v30 = __clz(__rbit64(v35)) + (v34 << 6);
    int64_t v22 = v34;
LABEL_28:
    uint64_t v31 = *(void *)(v64 + 56);
    uint64_t v32 = (void *)(*(void *)(v64 + 48) + 16 * v30);
    uint64_t v33 = v32[1];
    *(void *)&long long v72 = *v32;
    *((void *)&v72 + 1) = v33;
    sub_24A3E200C(v31 + 32 * v30, (uint64_t)v63);
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v34 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v34 >= v62)
    {
      uint64_t v27 = v3;
      int64_t v22 = v60;
      goto LABEL_41;
    }
    unint64_t v35 = *(void *)(v61 + 8 * v34);
    ++v53;
    if (v35) {
      goto LABEL_32;
    }
  }
LABEL_81:
  __break(1u);
LABEL_82:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t sub_24A3EBFE0(uint64_t a1, uint64_t a2)
{
  sub_24A3F0690(a2);
  if (v2) {
    return v4;
  }
  else {
    return a1;
  }
}

uint64_t sub_24A3EC030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_24A3F102C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_24A3F102C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        char v15 = sub_24A3F09D0((uint64_t)v10, (uint64_t)v7);
        sub_24A3F1094((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_24A3F1094((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_24A3EC1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v10);
  char v15 = (uint64_t *)((char *)&v41 - v14);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v47 = 0;
  uint64_t v45 = a1;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v44 = (unint64_t)(v17 + 63) >> 6;
  int64_t v42 = v44 - 1;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v47 << 6);
LABEL_8:
      uint64_t v22 = *(void *)(v45 + 56);
      uint64_t v23 = (void *)(*(void *)(v45 + 48) + 16 * v21);
      uint64_t v24 = v23[1];
      void *v12 = *v23;
      v12[1] = v24;
      uint64_t v25 = v22 + *(void *)(v48 + 72) * v21;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      sub_24A3F102C(v25, (uint64_t)v12 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v27 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 < v44)
    {
      unint64_t v28 = *(void *)(v43 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v47 + 2;
      ++v47;
      if (v27 + 1 < v44)
      {
        unint64_t v28 = *(void *)(v43 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v47 = v27 + 1;
        if (v27 + 2 < v44)
        {
          unint64_t v28 = *(void *)(v43 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v47 = v27 + 2;
          if (v27 + 3 < v44)
          {
            unint64_t v28 = *(void *)(v43 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            int64_t v29 = v27 + 4;
            int64_t v47 = v27 + 3;
            if (v27 + 4 < v44) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
    unint64_t v19 = 0;
LABEL_30:
    sub_24A3F2034((uint64_t)v12, (uint64_t)v15, &qword_269793898);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    int v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v15, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v35 = *v15;
    uint64_t v34 = v15[1];
    sub_24A3EF5C0((uint64_t)v15 + *(int *)(v31 + 48), (uint64_t)v8);
    unint64_t v36 = sub_24A3E1488(v35, v34);
    LOBYTE(v35) = v37;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      sub_24A3F1094((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      return 0;
    }
    uint64_t v38 = *(void *)(a2 + 56) + *(void *)(v48 + 72) * v36;
    uint64_t v39 = v46;
    sub_24A3F102C(v38, v46, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    char v40 = sub_24A3F09D0(v39, v8);
    sub_24A3F1094(v39, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    uint64_t result = sub_24A3F1094((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if ((v40 & 1) == 0) {
      return v33;
    }
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_15:
    int64_t v27 = v29;
LABEL_12:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v21 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v47 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v44)
    {
      int64_t v47 = v42;
      goto LABEL_29;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_24A3EC694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A3F102C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for XPCObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      char *v10 = *v6;
      goto LABEL_7;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      *(void *)uint64_t v10 = *(void *)v6;
      goto LABEL_7;
    case 8u:
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      uint64_t v12 = *((void *)v6 + 1);
      *(void *)uint64_t v10 = *(void *)v6;
      *((void *)v10 + 1) = v12;
      goto LABEL_7;
    case 9u:
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      uint64_t v13 = sub_24A463EE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v6, v13);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = 0;
      char v15 = 0;
      break;
    case 0xBu:
      uint64_t v16 = *(void **)v6;
      int64_t count = xpc_array_get_count(*(xpc_object_t *)v6);
      uint64_t v18 = (void *)MEMORY[0x263F8EE78];
      size_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || count > v18[3] >> 1)
      {
        if (v18[2] <= count) {
          int64_t v20 = count;
        }
        else {
          int64_t v20 = v18[2];
        }
        uint64_t v18 = (void *)sub_24A3EFCA8(isUniquelyReferenced_nonNull_native, v20, 0, v18);
      }
      unint64_t v37 = (unint64_t)v18;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = &v37;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_24A3F1198;
      *(void *)(v22 + 24) = v21;
      uint64_t v35 = sub_24A3F11CC;
      uint64_t v36 = v22;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      BOOL v33 = sub_24A3ECFD0;
      uint64_t v34 = &block_descriptor_12;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      xpc_array_apply(v16, v23);
      _Block_release(v23);
      swift_unknownObjectRelease();
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x24A3ECD74);
      }
      *(void *)uint64_t v10 = v37;
      swift_storeEnumTagMultiPayload();
      char v15 = 0;
      uint64_t v14 = sub_24A3F1198;
      break;
    case 0xCu:
      xpc_object_t v25 = *(xpc_object_t *)v6;
      unint64_t v37 = sub_24A3ECFD8(MEMORY[0x263F8EE78]);
      xpc_dictionary_get_count(v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
      sub_24A4641F8();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &v37;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_24A3F1104;
      *(void *)(v27 + 24) = v26;
      uint64_t v35 = sub_24A3F1134;
      uint64_t v36 = v27;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      BOOL v33 = sub_24A3ED5F4;
      uint64_t v34 = &block_descriptor_1;
      unint64_t v28 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      xpc_dictionary_apply(v25, v28);
      _Block_release(v28);
      swift_unknownObjectRelease_n();
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      char v29 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v29) {
        goto LABEL_21;
      }
      *(void *)uint64_t v10 = v37;
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = 0;
      char v15 = sub_24A3F1104;
      break;
    default:
      sub_24A3F1094(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      sub_24A3F1094((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for XPCObject);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  }
  sub_24A3EF5C0((uint64_t)v10, a2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  sub_24A3F1178((uint64_t)v14);
  return sub_24A3F1178((uint64_t)v15);
}

uint64_t sub_24A3ECDA0(uint64_t a1, void **a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v9, (uint64_t)v5);
  uint64_t v10 = type metadata accessor for XPCObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24A3EC694(v5);
  uint64_t v12 = type metadata accessor for ServiceEventValue();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v14 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = (void *)sub_24A3EFCA8(0, v14[2] + 1, 1, v14);
    *a2 = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = (void *)sub_24A3EFCA8(v16 > 1, v17 + 1, 1, v14);
    *a2 = v14;
  }
  v14[2] = v17 + 1;
  return sub_24A3EF5C0((uint64_t)v8, (uint64_t)v14+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v17);
}

uint64_t sub_24A3ECFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A3ED5FC(a1, a2, a3);
}

unint64_t sub_24A3ECFD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794020);
  uint64_t v6 = sub_24A464928();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24A3F1FB4(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_24A3E1488(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *unint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for ServiceEventValue();
    unint64_t result = sub_24A3EF5C0(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A3ED1B8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24A464368();
  uint64_t v15 = v14;
  unint64_t v16 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v16, (uint64_t)v2);
  uint64_t v17 = type metadata accessor for XPCObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v2, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_24A3EC694(v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    if (result != 1)
    {
      sub_24A3EF5C0((uint64_t)v8, (uint64_t)v12);
      sub_24A3F102C((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      sub_24A3ED438((uint64_t)v6, v13, v15);
      return sub_24A3F1094((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24A3ED438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_24A3E2068(a1, (uint64_t *)&unk_269793540);
    sub_24A3EFA58(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_24A3E2068((uint64_t)v10, (uint64_t *)&unk_269793540);
  }
  else
  {
    sub_24A3EF5C0(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_24A3F008C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A3ED5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24A3ED5FC(a1, a2, a3);
}

uint64_t sub_24A3ED5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_24A3ED65C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24A3ED68C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_24A3ED694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A464A48();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24A3ED6DC(uint64_t a1)
{
  unint64_t v2 = sub_24A3F11F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3ED718(uint64_t a1)
{
  unint64_t v2 = sub_24A3F11F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A3ED754(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (int64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (int64_t *)((char *)&v49 - v7);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697938A0);
  uint64_t v51 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A463EE8();
  int64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ServiceEventValue();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v49 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (int64_t *)((char *)&v49 - v20);
  sub_24A3F102C(v57, (uint64_t)&v49 - v20, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  uint64_t v57 = v13;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AD8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    case 2u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AE8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    case 3u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AC8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    case 4u:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AB8();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    case 5u:
      int64_t v23 = v52;
      uint64_t v22 = v53;
      (*(void (**)(char *, uint64_t *, uint64_t))(v52 + 32))(v12, v21, v53);
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      sub_24A463E88();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AA8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
      goto LABEL_47;
    case 6u:
      uint64_t v24 = *v21;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C08();
      uint64_t v25 = *(void *)(v24 + 16);
      if (!v25) {
        goto LABEL_47;
      }
      uint64_t v26 = v24 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      uint64_t v27 = *(void *)(v54 + 72);
      while (1)
      {
        sub_24A3F102C(v26, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
        sub_24A3F124C();
        sub_24A464A68();
        if (v1) {
          break;
        }
        sub_24A3F1094((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        v26 += v27;
        if (!--v25) {
          goto LABEL_47;
        }
      }
      sub_24A3F1094((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
LABEL_47:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    case 7u:
      uint64_t v28 = *v21;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A3F11F8();
      sub_24A464C28();
      int64_t v29 = 0;
      uint64_t v30 = *(void *)(v28 + 64);
      uint64_t v50 = v28 + 64;
      uint64_t v53 = v28;
      uint64_t v31 = 1 << *(unsigned char *)(v28 + 32);
      uint64_t v32 = -1;
      if (v31 < 64) {
        uint64_t v32 = ~(-1 << v31);
      }
      unint64_t v33 = v32 & v30;
      int64_t v52 = (unint64_t)(v31 + 63) >> 6;
      int64_t v49 = v52 - 1;
      while (2)
      {
        if (v33)
        {
          unint64_t v34 = __clz(__rbit64(v33));
          v33 &= v33 - 1;
          unint64_t v35 = v34 | (v29 << 6);
LABEL_19:
          uint64_t v36 = *(void *)(v53 + 56);
          unint64_t v37 = (void *)(*(void *)(v53 + 48) + 16 * v35);
          uint64_t v38 = v37[1];
          void *v6 = *v37;
          v6[1] = v38;
          uint64_t v39 = v36 + *(void *)(v54 + 72) * v35;
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
          sub_24A3F102C(v39, (uint64_t)v6 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 0, 1, v40);
          swift_bridgeObjectRetain();
          goto LABEL_29;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
LABEL_50:
          __break(1u);
          JUMPOUT(0x24A3EE0E8);
        }
        if (v41 >= v52) {
          goto LABEL_28;
        }
        unint64_t v42 = *(void *)(v50 + 8 * v41);
        if (v42) {
          goto LABEL_23;
        }
        v29 += 2;
        if (v41 + 1 >= v52)
        {
          int64_t v29 = v41;
        }
        else
        {
          unint64_t v42 = *(void *)(v50 + 8 * v29);
          if (v42)
          {
            ++v41;
LABEL_23:
            unint64_t v33 = (v42 - 1) & v42;
            unint64_t v35 = __clz(__rbit64(v42)) + (v41 << 6);
            int64_t v29 = v41;
            goto LABEL_19;
          }
          if (v41 + 2 < v52)
          {
            unint64_t v42 = *(void *)(v50 + 8 * (v41 + 2));
            if (v42)
            {
              v41 += 2;
              goto LABEL_23;
            }
            int64_t v47 = v41 + 3;
            if (v41 + 3 >= v52)
            {
              int64_t v29 = v41 + 2;
            }
            else
            {
              unint64_t v42 = *(void *)(v50 + 8 * v47);
              if (v42)
              {
                v41 += 3;
                goto LABEL_23;
              }
              while (1)
              {
                int64_t v41 = v47 + 1;
                if (__OFADD__(v47, 1)) {
                  goto LABEL_50;
                }
                if (v41 >= v52) {
                  break;
                }
                unint64_t v42 = *(void *)(v50 + 8 * v41);
                ++v47;
                if (v42) {
                  goto LABEL_23;
                }
              }
              int64_t v29 = v49;
            }
          }
        }
LABEL_28:
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v6, 1, 1, v43);
        unint64_t v33 = 0;
LABEL_29:
        sub_24A3F2034((uint64_t)v6, (uint64_t)v8, &qword_269793898);
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v8, 1, v44) != 1)
        {
          uint64_t v46 = *v8;
          uint64_t v45 = v8[1];
          sub_24A3EF5C0((uint64_t)v8 + *(int *)(v44 + 48), (uint64_t)v16);
          v58[0] = v46;
          v58[1] = v45;
          sub_24A3F124C();
          sub_24A464A28();
          if (!v1)
          {
            swift_bridgeObjectRelease();
            sub_24A3F1094((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
            continue;
          }
          swift_bridgeObjectRelease();
          sub_24A3F1094((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        }
        break;
      }
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v56, v55);
    default:
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_24A464C18();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
      sub_24A464AA8();
      goto LABEL_47;
  }
}

uint64_t sub_24A3EE108(void *a1)
{
  return sub_24A3ED754(a1);
}

unint64_t sub_24A3EE120()
{
  return 0xD000000000000021;
}

id sub_24A3EE13C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  long long v72 = (uint64_t *)((char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v71 = (uint64_t *)((char *)&v64 - v4);
  uint64_t v5 = sub_24A463EE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v74 = (uint64_t)&v64 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (unsigned __int8 *)&v64 - v15;
  sub_24A3F102C(v0, (uint64_t)&v64 - v15, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, *(void *)v16);
    case 2u:
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedLongLong_, *(void *)v16);
    case 3u:
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)v16);
    case 4u:
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *v16);
    case 5u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 32))(v8, v16, v5);
      uint64_t v18 = sub_24A463E98();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return (id)v18;
    case 6u:
      uint64_t v58 = *(void *)v16;
      unint64_t v75 = MEMORY[0x263F8EE78];
      sub_24A3EFBE8(*(void *)(v58 + 16), 0);
      sub_24A464448();
      uint64_t v59 = *(void *)(v58 + 16);
      if (v59)
      {
        uint64_t v60 = v58 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
        uint64_t v61 = *(void *)(v70 + 72);
        do
        {
          uint64_t v62 = sub_24A3F102C(v60, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          sub_24A3EE13C(v62);
          MEMORY[0x24C5C4BA0]();
          if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24A464458();
          }
          sub_24A464478();
          sub_24A464448();
          sub_24A3F1094((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          v60 += v61;
          --v59;
        }
        while (v59);
      }
      swift_bridgeObjectRelease();
      sub_24A3E909C(0, (unint64_t *)&qword_2697938C0);
      uint64_t v17 = sub_24A464428();
      goto LABEL_53;
    case 7u:
      uint64_t v20 = *(void *)v16;
      uint64_t v66 = sub_24A3E909C(0, (unint64_t *)&qword_2697938C0);
      uint64_t v21 = (void *)sub_24A4641E8();
      int64_t v73 = 0;
      uint64_t v22 = *(void *)(v20 + 64);
      uint64_t v67 = v20 + 64;
      uint64_t v69 = v20;
      uint64_t v23 = 1 << *(unsigned char *)(v20 + 32);
      uint64_t v24 = -1;
      if (v23 < 64) {
        uint64_t v24 = ~(-1 << v23);
      }
      unint64_t v25 = v24 & v22;
      int64_t v68 = (unint64_t)(v23 + 63) >> 6;
      int64_t v65 = v68 - 1;
      break;
    default:
      uint64_t v17 = sub_24A464248();
LABEL_53:
      uint64_t v18 = v17;
      goto LABEL_55;
  }
  while (1)
  {
    uint64_t v27 = (uint64_t)v72;
    if (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v73 << 6);
LABEL_15:
      uint64_t v30 = *(void *)(v69 + 56);
      uint64_t v31 = (void *)(*(void *)(v69 + 48) + 16 * v29);
      uint64_t v32 = v31[1];
      *long long v72 = *v31;
      *(void *)(v27 + 8) = v32;
      uint64_t v33 = v30 + *(void *)(v70 + 72) * v29;
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      sub_24A3F102C(v33, v27 + *(int *)(v34 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 0, 1, v34);
      swift_bridgeObjectRetain();
      goto LABEL_34;
    }
    int64_t v35 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_59;
    }
    if (v35 < v68)
    {
      unint64_t v36 = *(void *)(v67 + 8 * v35);
      if (v36) {
        goto LABEL_19;
      }
      int64_t v37 = v73 + 2;
      ++v73;
      if (v35 + 1 < v68)
      {
        unint64_t v36 = *(void *)(v67 + 8 * v37);
        if (v36) {
          goto LABEL_22;
        }
        int64_t v73 = v35 + 1;
        if (v35 + 2 < v68)
        {
          unint64_t v36 = *(void *)(v67 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_19;
          }
          int64_t v37 = v35 + 3;
          int64_t v73 = v35 + 2;
          if (v35 + 3 < v68)
          {
            unint64_t v36 = *(void *)(v67 + 8 * v37);
            if (v36)
            {
LABEL_22:
              int64_t v35 = v37;
LABEL_19:
              unint64_t v25 = (v36 - 1) & v36;
              unint64_t v29 = __clz(__rbit64(v36)) + (v35 << 6);
              int64_t v73 = v35;
              goto LABEL_15;
            }
            while (1)
            {
              int64_t v35 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_60;
              }
              if (v35 >= v68) {
                break;
              }
              unint64_t v36 = *(void *)(v67 + 8 * v35);
              ++v37;
              if (v36) {
                goto LABEL_19;
              }
            }
            int64_t v73 = v65;
          }
        }
      }
    }
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v27, 1, 1, v38);
    unint64_t v25 = 0;
LABEL_34:
    uint64_t v39 = v71;
    sub_24A3F2034(v27, (uint64_t)v71, &qword_269793898);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40) == 1) {
      break;
    }
    uint64_t v42 = *v39;
    uint64_t v41 = v39[1];
    uint64_t v43 = sub_24A3EF5C0((uint64_t)v39 + *(int *)(v40 + 48), v74);
    uint64_t v44 = sub_24A3EE13C(v43);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v75 = (unint64_t)v21;
    unint64_t v47 = sub_24A3E1488(v42, v41);
    uint64_t v48 = v21[2];
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      sub_24A464B28();
      __break(1u);
      JUMPOUT(0x24A3EE9F8);
    }
    char v51 = v46;
    if (v21[3] >= v50)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v21 = (void *)v75;
        if (v46) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_24A3EF8A4();
        uint64_t v21 = (void *)v75;
        if (v51) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_24A3EF2B0(v50, isUniquelyReferenced_nonNull_native);
      unint64_t v52 = sub_24A3E1488(v42, v41);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_61;
      }
      unint64_t v47 = v52;
      uint64_t v21 = (void *)v75;
      if (v51)
      {
LABEL_11:
        uint64_t v26 = v21[7];

        *(void *)(v26 + 8 * v47) = v44;
        goto LABEL_12;
      }
    }
    v21[(v47 >> 6) + 8] |= 1 << v47;
    uint64_t v54 = (uint64_t *)(v21[6] + 16 * v47);
    uint64_t *v54 = v42;
    v54[1] = v41;
    *(void *)(v21[7] + 8 * v47) = v44;
    uint64_t v55 = v21[2];
    BOOL v56 = __OFADD__(v55, 1);
    uint64_t v57 = v55 + 1;
    if (v56) {
      goto LABEL_58;
    }
    v21[2] = v57;
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24A3F1094(v74, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  swift_release();
  uint64_t v18 = sub_24A4641A8();
LABEL_55:
  swift_bridgeObjectRelease();
  return (id)v18;
}

uint64_t sub_24A3EEA18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0) + 48);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  sub_24A3F102C(v4, (uint64_t)a2 + *(int *)(v5 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A3EEAA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v48 = (uint64_t)v47 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)v47 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793940);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (void *)((char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v52 = v21;
  uint64_t v53 = 0;
  uint64_t v54 = v24 & v22;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  v47[1] = a1;
  swift_bridgeObjectRetain();
  v47[0] = a3;
  swift_retain();
  sub_24A3F0288((uint64_t)v19);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_24A3F202C();
      return swift_release();
    }
    uint64_t v31 = *v19;
    uint64_t v30 = v19[1];
    sub_24A3EF5C0((uint64_t)v19 + *(int *)(v25 + 48), (uint64_t)v16);
    uint64_t v32 = *(void **)a5;
    unint64_t v34 = sub_24A3E1488(v31, v30);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (a4)
      {
        uint64_t v41 = *(void **)a5;
        if (v33) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_24A3EF624();
        uint64_t v41 = *(void **)a5;
        if (v38) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_24A3EEEF8(v37, a4 & 1);
      unint64_t v39 = sub_24A3E1488(v31, v30);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_22;
      }
      unint64_t v34 = v39;
      uint64_t v41 = *(void **)a5;
      if (v38)
      {
LABEL_5:
        unint64_t v27 = *(void *)(v57 + 72) * v34;
        uint64_t v28 = v49;
        sub_24A3F102C(v41[7] + v27, v49, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        uint64_t v29 = v48;
        sub_24A3F102C(v28, v48, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_24A3F1094(v28, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_24A3F1094((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        swift_bridgeObjectRelease();
        sub_24A3F1F50(v29, *(void *)(*(void *)a5 + 56) + v27);
        goto LABEL_6;
      }
    }
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
    *uint64_t v42 = v31;
    v42[1] = v30;
    sub_24A3EF5C0((uint64_t)v16, v41[7] + *(void *)(v57 + 72) * v34);
    uint64_t v43 = v41[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v41[2] = v45;
LABEL_6:
    sub_24A3F0288((uint64_t)v19);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ServiceEventValue()
{
  uint64_t result = qword_2697958F0;
  if (!qword_2697958F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A3EEEF8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794020);
  int v42 = a2;
  uint64_t v8 = sub_24A464918();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  char v40 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  char v38 = v2;
  int64_t v39 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    uint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v16];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v16];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v41 + 72);
    uint64_t v29 = *(void *)(v7 + 56) + v28 * v20;
    if (v42)
    {
      sub_24A3EF5C0(v29, (uint64_t)v6);
    }
    else
    {
      sub_24A3F102C(v29, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      swift_bridgeObjectRetain();
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v30 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v31) & ~*(void *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v9 + 48) + 16 * v17);
    *uint64_t v18 = v27;
    v18[1] = v26;
    uint64_t result = sub_24A3EF5C0((uint64_t)v6, *(void *)(v9 + 56) + v28 * v17);
    ++*(void *)(v9 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  uint64_t v22 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v7 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v37;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_24A3EF2B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697938E8);
  char v38 = a2;
  uint64_t v6 = sub_24A464918();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24A3EF5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_24A3EF624()
{
  uint64_t v1 = v0;
  uint64_t v28 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  MEMORY[0x270FA5388]();
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794020);
  uint64_t v4 = *v0;
  uint64_t v5 = sub_24A464908();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v6;
    return result;
  }
  unint64_t v26 = v1;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v27 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v13) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_9:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    unint64_t v20 = *(void *)(v28 + 72) * v15;
    sub_24A3F102C(*(void *)(v4 + 56) + v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    int64_t v21 = (void *)(*(void *)(v6 + 48) + v16);
    *int64_t v21 = v18;
    v21[1] = v19;
    sub_24A3EF5C0((uint64_t)v3, *(void *)(v6 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24A3EF8A4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697938E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A3EFA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24A3E1488(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A3EF624();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for ServiceEventValue();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24A3EF5C0(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_24A3EFE7C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ServiceEventValue();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_24A3EFBE8(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24A4648F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x24C5C4FB0](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

size_t sub_24A3EFCA8(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793900);
  uint64_t v10 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

unint64_t sub_24A3EFE7C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24A464B98();
        swift_bridgeObjectRetain();
        sub_24A464318();
        uint64_t v9 = sub_24A464BC8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          _OWORD *v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24A3F008C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24A3EF624();
      goto LABEL_7;
    }
    sub_24A3EEEF8(v15, a4 & 1);
    unint64_t v22 = sub_24A3E1488(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24A464B28();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72) * v12;
    return sub_24A3F1F50(a1, v20);
  }
LABEL_13:
  sub_24A3F01F0(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A3F01F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t result = sub_24A3EF5C0(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_24A3F0288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char **)((char *)&v40 - v10);
  uint64_t v13 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v15 = v1[2];
  int64_t v14 = v1[3];
  int64_t v16 = v14;
  unint64_t v17 = v1[4];
  char v40 = v5;
  if (v17)
  {
    uint64_t v43 = v9;
    int64_t v44 = v14;
    uint64_t v41 = v15;
    uint64_t v42 = v12;
    uint64_t v18 = v2;
    uint64_t v19 = (v17 - 1) & v17;
    unint64_t v20 = __clz(__rbit64(v17)) | (v14 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v13 + 56);
    unint64_t v22 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v20);
    uint64_t v23 = v13;
    uint64_t v25 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v26 = v21 + *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72) * v20;
    uint64_t v2 = v18;
    sub_24A3F102C(v26, (uint64_t)v11 + *(int *)(v18 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    *char v11 = v25;
    v11[1] = v24;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v18);
    uint64_t v13 = v23;
    swift_bridgeObjectRetain();
    uint64_t v12 = v42;
    uint64_t v9 = v43;
    uint64_t v15 = v41;
    goto LABEL_25;
  }
  int64_t v27 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v16 = v10;
    goto LABEL_24;
  }
  int64_t v28 = (unint64_t)(v15 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v12 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v41 = v15;
      uint64_t v42 = v12;
      uint64_t v43 = v9;
      int64_t v44 = v27;
      uint64_t v18 = v2;
      uint64_t v19 = (v29 - 1) & v29;
      unint64_t v20 = __clz(__rbit64(v29)) + (v27 << 6);
      goto LABEL_3;
    }
    int64_t v30 = v14 + 2;
    int64_t v16 = v14 + 1;
    if (v14 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v12 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v16 = v14 + 2;
      if (v14 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v12 + 8 * (v14 + 3));
        if (v29)
        {
          int64_t v27 = v14 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v14 + 4;
        int64_t v16 = v14 + 3;
        if (v14 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v12 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v14 + 5;
          int64_t v16 = v14 + 4;
          if (v14 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v12 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v10 = v28 - 1;
            uint64_t v31 = v14 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v12 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v44 = v16;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  uint64_t v19 = 0;
LABEL_25:
  uint64_t *v1 = v13;
  v1[1] = v12;
  int64_t v32 = v44;
  v1[2] = v15;
  v1[3] = v32;
  v1[4] = v19;
  id v33 = (void (*)(uint64_t))v1[5];
  sub_24A3F2034((uint64_t)v11, (uint64_t)v9, &qword_269793898);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v45, 1, 1, v34);
  }
  else
  {
    uint64_t v36 = (uint64_t)v9;
    uint64_t v37 = (uint64_t)v40;
    sub_24A3F2034(v36, (uint64_t)v40, (uint64_t *)&unk_2697938B0);
    uint64_t v38 = v45;
    v33(v37);
    sub_24A3E2068(v37, (uint64_t *)&unk_2697938B0);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
}

uint64_t sub_24A3F0690(uint64_t a1)
{
  v18[0] = a1;
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void *)((char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_24A4642C8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A4642B8();
  uint64_t v8 = sub_24A464288();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    sub_24A3F13A8();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_24A463D88();
    id v19 = 0;
    id v14 = objc_msgSend(v12, sel_JSONObjectWithData_options_error_, v13, 0, &v19);

    id v15 = v19;
    if (v14)
    {
      sub_24A464718();
      swift_unknownObjectRelease();
      uint64_t v16 = v18[1];
      sub_24A3EB754((uint64_t)v20, v3);
      if (v16)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        sub_24A3E8CA0(v8, v10);
        return swift_bridgeObjectRelease();
      }
      else if (swift_getEnumCaseMultiPayload() == 7)
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
        sub_24A3E8CA0(v8, v10);
        return v18[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_24A3F1094((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_24A3F13A8();
        swift_allocError();
        swift_willThrow();
        sub_24A3E8CA0(v8, v10);
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      }
    }
    else
    {
      unint64_t v17 = v15;
      swift_bridgeObjectRelease();
      sub_24A463C28();

      swift_willThrow();
      return sub_24A3E8CA0(v8, v10);
    }
  }
}

uint64_t sub_24A3F09D0(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v2 = sub_24A463EE8();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v53 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (uint64_t *)((char *)&v49 - v8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v54 = (uint64_t)&v49 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v49 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (double *)((char *)&v49 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v20 = (uint64_t *)((char *)&v49 - v19);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (uint64_t *)((char *)&v49 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (uint64_t *)((char *)&v49 - v24);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793918);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  unint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v30 = (uint64_t *)&v29[*(int *)(v27 + 56)];
  sub_24A3F102C(v55, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  sub_24A3F102C(v56, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_31;
      }
      uint64_t v35 = *v23;
      goto LABEL_13;
    case 2u:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_31;
      }
      uint64_t v35 = *v20;
LABEL_13:
      BOOL v36 = v35 == *v30;
      goto LABEL_16;
    case 3u:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_31;
      }
      BOOL v36 = *v17 == *(double *)v30;
LABEL_16:
      char v37 = v36;
      goto LABEL_28;
    case 4u:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_31;
      }
      char v38 = *v14 ^ *(unsigned char *)v30;
      sub_24A3F1094((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      char v37 = v38 ^ 1;
      return v37 & 1;
    case 5u:
      uint64_t v39 = v54;
      sub_24A3F102C((uint64_t)v29, v54, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v39, v52);
        goto LABEL_31;
      }
      uint64_t v41 = v50;
      uint64_t v40 = v51;
      uint64_t v42 = v52;
      (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v50, v30, v52);
      char v37 = sub_24A463EA8();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
      v43(v41, v42);
      v43((char *)v39, v42);
LABEL_28:
      sub_24A3F1094((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      return v37 & 1;
    case 6u:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v44 = *v9;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_29;
      }
      char v45 = sub_24A3EC030(v44, *v30);
      goto LABEL_27;
    case 7u:
      char v46 = v53;
      sub_24A3F102C((uint64_t)v29, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v47 = *v46;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_29;
      }
      char v45 = sub_24A3EC1BC(v47, *v30);
LABEL_27:
      char v37 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    default:
      sub_24A3F102C((uint64_t)v29, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v32 = *v25;
      uint64_t v31 = v25[1];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_31:
        sub_24A3E2068((uint64_t)v29, &qword_269793918);
        goto LABEL_32;
      }
      if (v32 == *v30 && v31 == v30[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v34 = sub_24A464A78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          sub_24A3F1094((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
LABEL_32:
          char v37 = 0;
          return v37 & 1;
        }
      }
      sub_24A3F1094((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      char v37 = 1;
      return v37 & 1;
  }
}

uint64_t sub_24A3F102C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A3F1094(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A3F10F4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A3F1104()
{
  return 1;
}

uint64_t sub_24A3F1124()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A3F1134()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_24A3F1178(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24A3F1188()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A3F1198(uint64_t a1, uint64_t a2)
{
  sub_24A3ECDA0(a2, *(void ***)(v2 + 16));
  return 1;
}

uint64_t sub_24A3F11BC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A3F11CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

unint64_t sub_24A3F11F8()
{
  unint64_t result = qword_2697938A8;
  if (!qword_2697938A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697938A8);
  }
  return result;
}

unint64_t sub_24A3F124C()
{
  unint64_t result = qword_2697936F8;
  if (!qword_2697936F8)
  {
    type metadata accessor for ServiceEventValue();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697936F8);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_24A3F12F8()
{
  unint64_t result = qword_2697938C8;
  if (!qword_2697938C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697938C8);
  }
  return result;
}

unint64_t sub_24A3F1350()
{
  unint64_t result = qword_2697938D0;
  if (!qword_2697938D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697938D0);
  }
  return result;
}

unint64_t sub_24A3F13A8()
{
  unint64_t result = qword_2697938D8;
  if (!qword_2697938D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697938D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

uint64_t destroy for CachedEvent()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CachedEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CachedEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for CachedEvent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachedEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachedEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CachedEvent()
{
  return &type metadata for CachedEvent;
}

uint64_t *sub_24A3F15E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v10 = sub_24A463EE8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24A3F1784(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 6:
    case 7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v3 = sub_24A463EE8();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_24A3F186C(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      uint64_t v7 = sub_24A463EE8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 6u:
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_24A3F19BC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A3F1094((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        uint64_t v6 = sub_24A463EE8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_24A3F1B38(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v6 = sub_24A463EE8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24A3F1BF0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A3F1094((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v6 = sub_24A463EE8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24A3F1D20()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24A3F1D30()
{
  uint64_t result = sub_24A463EE8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServiceEventValue.CodingKeys()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceEventValue.CodingKeys()
{
  return &type metadata for ServiceEventValue.CodingKeys;
}

ValueMetadata *type metadata accessor for BadCachedEvent()
{
  return &type metadata for BadCachedEvent;
}

uint64_t sub_24A3F1F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3F1FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_24A3F201C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24A3F202C()
{
  return swift_release();
}

uint64_t sub_24A3F2034(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A3F20A4()
{
  uint64_t v0 = NSHomeDirectory();
  sub_24A464278();

  sub_24A463C58();
  return swift_bridgeObjectRelease();
}

BOOL sub_24A3F2114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24A3F212C()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3F2174()
{
  return sub_24A464BA8();
}

uint64_t sub_24A3F21A0()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3F21E4()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_269795908);
  __swift_project_value_buffer(v0, (uint64_t)qword_269795908);
  return sub_24A464008();
}

uint64_t DiskCache.__allocating_init(rootCacheURL:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A3F2308;
  return DiskCache.init(rootCacheURL:)(a1);
}

uint64_t sub_24A3F2308(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t DiskCache.init(rootCacheURL:)(uint64_t a1)
{
  uint64_t v4 = v2;
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v5 = v2 + 20;
  type metadata accessor for SQLiteDB.Location();
  uint64_t v6 = swift_task_alloc();
  v5[2] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793960);
  uint64_t v44 = swift_task_alloc();
  v5[3] = v44;
  uint64_t v7 = sub_24A463D28();
  v5[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  v5[5] = v9;
  uint64_t v43 = swift_task_alloc();
  v5[6] = v43;
  swift_defaultActor_initialize();
  sub_24A4264C4(a1, (void *)0x636163746E657665, (void *)0xEB000000002F6568, v9);
  uint64_t v42 = v1;
  sub_24A463C98();
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v4[27] = v10;
  v4[28] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v39 = v10;
  v10(v9, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A466020;
  uint64_t v12 = (void *)*MEMORY[0x263EFF688];
  *(void *)(inited + 32) = *MEMORY[0x263EFF688];
  id v13 = v12;
  sub_24A3EB0D4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_24A463C48();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_24A463BD8();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v44, 0, 1, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v44, 1, v14) == 1)
  {
    sub_24A3F60F8(v44);
    uint64_t v16 = v6;
LABEL_3:
    type metadata accessor for SQLiteDB();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v16, v43, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v16, 0, 1, v40);
    *(void *)(v42 + 112) = sub_24A3FF748(v16);
    uint64_t v19 = (void *)swift_task_alloc();
    v4[29] = v19;
    *uint64_t v19 = v4;
    v19[1] = sub_24A3F2C70;
    v19[3] = v42;
    return MEMORY[0x270FA2498](sub_24A3F313C, v42, 0);
  }
  uint64_t v38 = sub_24A463BB8();
  char v21 = v20;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v44, v14);
  uint64_t v16 = v6;
  if (v21) {
    goto LABEL_3;
  }
  uint64_t v22 = v5;
  uint64_t v23 = sub_24A42508C();
  swift_beginAccess();
  uint64_t v24 = (*v23 & 1) != 0 ? 0x140000000 : 3221225472;
  if (v38 <= v24) {
    goto LABEL_3;
  }
  uint64_t v25 = v5 - 3;
  uint64_t v26 = v5 - 1;
  if (*sub_24A425564())
  {
    if (qword_269795900 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_24A464018();
    __swift_project_value_buffer(v27, (uint64_t)qword_269795908);
    uint64_t v28 = sub_24A463FF8();
    os_log_type_t v29 = sub_24A4645B8();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134349312;
      uint64_t *v25 = v38;
      sub_24A4646E8();
      *(_WORD *)(v30 + 12) = 2050;
      swift_beginAccess();
      uint64_t v31 = 3221225472;
      if (*v23) {
        uint64_t v31 = 0x140000000;
      }
      *uint64_t v26 = v31;
      sub_24A4646E8();
      _os_log_impl(&dword_24A3DA000, v28, v29, "cache size %{public}ld exceeded maximum %{public}ld - cache delete overridden", (uint8_t *)v30, 0x16u);
      MEMORY[0x24C5C5D60](v30, -1, -1);
    }

    goto LABEL_3;
  }
  if (qword_269795900 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_24A464018();
  __swift_project_value_buffer(v32, (uint64_t)qword_269795908);
  id v33 = sub_24A463FF8();
  os_log_type_t v34 = sub_24A4645B8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 134349312;
    *(v22 - 2) = v38;
    sub_24A4646E8();
    *(_WORD *)(v35 + 12) = 2050;
    swift_beginAccess();
    uint64_t v36 = 3221225472;
    if (*v23) {
      uint64_t v36 = 0x140000000;
    }
    *(v22 - 4) = v36;
    sub_24A4646E8();
    _os_log_impl(&dword_24A3DA000, v33, v34, "cache size %{public}ld exceeded maximum %{public}ld - deleting cache", (uint8_t *)v35, 0x16u);
    MEMORY[0x24C5C5D60](v35, -1, -1);
  }

  sub_24A3F6158();
  swift_allocError();
  *char v37 = 1;
  swift_willThrow();
  v39(v43, v40);
  swift_defaultActor_destroy();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(a1, v40);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v17 = (uint64_t (*)(void))v4[1];
  return v17();
}

uint64_t sub_24A3F2C70(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {

    a1 = 0;
LABEL_4:
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    void *v6 = v5;
    v6[1] = sub_24A3F2E78;
    uint64_t v7 = v4[21];
    v6[3] = a1;
    v6[4] = v7;
    return MEMORY[0x270FA2498](sub_24A3F3354, v7, 0);
  }
  if (a1 <= 8) {
    goto LABEL_4;
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v4[27];
  uint64_t v9 = v4[26];
  uint64_t v10 = v4[24];
  v8(v4[20], v10);
  v8(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v5[1];
  uint64_t v12 = v4[21];
  return v11(v12);
}

uint64_t sub_24A3F2E78()
{
  long long v2 = (void *)*v1;
  v2[31] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2[21] + 112);
    v2[32] = v3;
    swift_retain();
    return MEMORY[0x270FA2498](sub_24A3F3038, v3, 0);
  }
  else
  {
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v2[27];
    uint64_t v5 = v2[26];
    uint64_t v6 = v2[24];
    v4(v2[20], v6);
    v4(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(uint64_t))v2[1];
    uint64_t v8 = v2[21];
    return v7(v8);
  }
}

uint64_t sub_24A3F3038()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[27];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[20];
  sub_24A3FFC08();
  swift_release();
  swift_willThrow();
  swift_release();
  v1(v2, v3);
  v1(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t DiskCache.schemaVersion.getter()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24A3F313C, v0, 0);
}

uint64_t sub_24A3F313C()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = 0x6E6F6973726576;
  *(void *)(v2 + 24) = 0xE700000000000000;
  return MEMORY[0x270FA2498](sub_24A3F31CC, v1, 0);
}

uint64_t sub_24A3F31CC()
{
  sub_24A3FFA18(0xD000000000000025, 0x800000024A46A440, (void (*)(void))sub_24A3F61AC);
  v0[6] = 0;
  swift_task_dealloc();
  uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_24A3F32C4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *DiskCache.currentVersion.unsafeMutableAddressor()
{
  return &static DiskCache.currentVersion;
}

uint64_t sub_24A3F3334(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24A3F3354, v1, 0);
}

uint64_t sub_24A3F3354()
{
  if (v0[3])
  {
    if (qword_269795900 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24A464018();
    __swift_project_value_buffer(v1, (uint64_t)qword_269795908);
    uint64_t v2 = sub_24A463FF8();
    os_log_type_t v3 = sub_24A4645D8();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_24A3DA000, v2, v3, "unsupported prior database version - deleting disk cache", v4, 2u);
      MEMORY[0x24C5C5D60](v4, -1, -1);
    }

    sub_24A3F6158();
    swift_allocError();
    *uint64_t v5 = 1;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v0[4] + 112);
    v0[5] = v8;
    return MEMORY[0x270FA2498](sub_24A3F34E4, v8, 0);
  }
}

uint64_t sub_24A3F34E4()
{
  sub_24A3FFBF0();
  *(void *)(v0 + 48) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  return MEMORY[0x270FA2498](sub_24A3F35B0, v1, 0);
}

uint64_t sub_24A3F35B0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  v2[2] = 0x6E6F6973726576;
  v2[3] = 0xE700000000000000;
  v2[4] = 9;
  return MEMORY[0x270FA2498](sub_24A3F3640, v1, 0);
}

uint64_t sub_24A3F3640()
{
  uint64_t v1 = v0[6];
  sub_24A3FFA18(0xD000000000000060, 0x800000024A46A900, (void (*)(void))sub_24A3F7B74);
  v0[8] = v1;
  if (v1)
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = sub_24A3F3718;
  }
  else
  {
    uint64_t v4 = v0[4];
    swift_task_dealloc();
    uint64_t v3 = sub_24A3F377C;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A3F3718()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F377C()
{
  if (qword_269795900 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A464018();
  __swift_project_value_buffer(v1, (uint64_t)qword_269795908);
  uint64_t v2 = sub_24A463FF8();
  os_log_type_t v3 = sub_24A4645D8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 16) = 9;
    sub_24A4646E8();
    _os_log_impl(&dword_24A3DA000, v2, v3, "initialized disk cache with version %lld", v4, 0xCu);
    MEMORY[0x24C5C5D60](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24A3F38C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x263F8D310];
  *(_OWORD *)(v9 + 16) = xmmword_24A466030;
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = &off_26FE15648;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  *(void *)(v9 + 96) = MEMORY[0x263F8E5C0];
  *(void *)(v9 + 104) = &off_26FE15608;
  *(void *)(v9 + 72) = a4;
  uint64_t v11 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v11(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_24A3F39D4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A3F39EC(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 32) = a2;
  *(double *)(v7 + 24) = a3;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24A3F3A18, v6, 0);
}

uint64_t sub_24A3F3A18()
{
  uint64_t v1 = sub_24A463E28();
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    uint64_t v5 = 0;
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return MEMORY[0x270FA2498](v1, v2, v3);
  }
  uint64_t v5 = (uint64_t)v4;
LABEL_6:
  uint64_t v6 = sub_24A3F61D8(*(void **)(v0 + 40));
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = v7;
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v12 = *(void *)(*(void *)(v0 + 48) + 112);
  *(void *)(v0 + 72) = v12;
  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v13;
  v13[2] = v11;
  v13[3] = v10;
  v13[4] = v5;
  v13[5] = v8;
  v13[6] = v9;
  uint64_t v1 = (uint64_t)sub_24A3F3B6C;
  uint64_t v2 = v12;
  uint64_t v3 = 0;
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_24A3F3B6C()
{
  uint64_t v1 = v0[7];
  sub_24A3FFA18(0xD0000000000000C4, 0x800000024A46A470, (void (*)(void))sub_24A3F6580);
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v0[6];
    uint64_t v3 = sub_24A3F3C50;
  }
  else
  {
    uint64_t v4 = v0[6];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_24A3F39D4;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A3F3C50()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F3CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_24A3F3CE4, v3, 0);
}

uint64_t sub_24A3F3CE4()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = *(void *)(v1 + 112);
  v0[7] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  uint64_t v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v1;
  return MEMORY[0x270FA2498](sub_24A3F3D78, v5, 0);
}

uint64_t sub_24A3F3D78()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793990);
  sub_24A3FFA18(0xD000000000000185, 0x800000024A46A540, (void (*)(void))sub_24A3F6748);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F3E60, v1, 0);
}

uint64_t sub_24A3F3E60()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_24A3F3E7C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F3EE0@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v11 = swift_allocObject();
  long long v13 = a2[1];
  long long v23 = *a2;
  long long v12 = v23;
  *(_OWORD *)(v11 + 16) = xmmword_24A4666A0;
  *(_OWORD *)(v11 + 32) = v12;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = &off_26FE15648;
  long long v22 = v13;
  *(void *)(v11 + 96) = v14;
  *(void *)(v11 + 104) = &off_26FE15648;
  *(_OWORD *)(v11 + 72) = v13;
  *(_OWORD *)char v21 = a2[2];
  *(void *)&v21[16] = *((void *)a2 + 6);
  char v15 = v21[0];
  uint64_t v16 = MEMORY[0x263F8D4F8];
  *(void *)(v11 + 136) = MEMORY[0x263F8D4F8];
  *(void *)(v11 + 144) = &off_26FE155C8;
  *(unsigned char *)(v11 + 112) = v15;
  char v17 = v21[1];
  *(void *)(v11 + 176) = v16;
  *(void *)(v11 + 184) = &off_26FE155C8;
  *(unsigned char *)(v11 + 152) = v17;
  *(void *)(v11 + 216) = v14;
  *(void *)(v11 + 224) = &off_26FE15648;
  *(_OWORD *)(v11 + 192) = *(_OWORD *)&v21[8];
  uint64_t v18 = MEMORY[0x263F8E5C0];
  *(void *)(v11 + 256) = MEMORY[0x263F8E5C0];
  *(void *)(v11 + 264) = &off_26FE15608;
  *(void *)(v11 + 232) = a3;
  *(void *)(v11 + 296) = v18;
  *(void *)(v11 + 304) = &off_26FE15608;
  *(void *)(v11 + 272) = a4;
  uint64_t v19 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_24A3F7038((uint64_t)&v23);
  sub_24A3F7038((uint64_t)&v22);
  sub_24A3F7974((uint64_t)v21);
  v19(v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    MEMORY[0x270FA5388](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_24A3F79A0);
    uint64_t result = v24;
    *a5 = v24;
  }
  return result;
}

uint64_t sub_24A3F40D0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24A3F40F0, v1, 0);
}

uint64_t sub_24A3F40F0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 112);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_24A3F416C, v2, 0);
}

uint64_t sub_24A3F416C()
{
  sub_24A3FFA84((void (*)(uint64_t))sub_24A3F6768);
  *(void *)(v0 + 48) = 0;
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F7B8C, v1, 0);
}

uint64_t sub_24A3F422C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24A3F424C, v1, 0);
}

uint64_t sub_24A3F424C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_24A3F42C8, v2, 0);
}

uint64_t sub_24A3F42C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  sub_24A3FFA18(0xD000000000000045, 0x800000024A46A6D0, (void (*)(void))sub_24A3F68E8);
  *(void *)(v0 + 56) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F3E60, v1, 0);
}

uint64_t sub_24A3F43B0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F4414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24A466020;
  *(void *)(v7 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v7 + 64) = &off_26FE155E8;
  *(void *)(v7 + 32) = a2;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    MEMORY[0x270FA5388](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_24A3F776C);
    uint64_t result = v9;
    *a3 = v9;
  }
  return result;
}

uint64_t sub_24A3F4560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x270FA2498](sub_24A3F4584, v3, 0);
}

uint64_t sub_24A3F4584()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 48) + 112);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = v5;
  *(void *)(v3 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24A3F4618, v2, 0);
}

uint64_t sub_24A3F4618()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939B8);
  sub_24A3FFA18(0xD000000000000091, 0x800000024A46A720, (void (*)(void))sub_24A3F6904);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F3E60, v1, 0);
}

uint64_t sub_24A3F4700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8D310];
  *(_OWORD *)(v11 + 16) = xmmword_24A466030;
  *(void *)(v11 + 56) = v12;
  *(void *)(v11 + 64) = &off_26FE15648;
  *(void *)(v11 + 32) = a2;
  *(void *)(v11 + 40) = a3;
  *(void *)(v11 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v11 + 104) = &off_26FE155E8;
  *(void *)(v11 + 72) = a4;
  long long v13 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v13(v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    MEMORY[0x270FA5388](result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_24A3F7254);
    uint64_t result = v15;
    *a5 = v15;
  }
  return result;
}

uint64_t sub_24A3F4888(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24A3F48A8, v1, 0);
}

uint64_t sub_24A3F48A8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_24A3F4924, v2, 0);
}

uint64_t sub_24A3F4924()
{
  sub_24A3FFA84((void (*)(uint64_t))sub_24A3F6924);
  *(void *)(v0 + 56) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F49E8, v1, 0);
}

uint64_t sub_24A3F49E8()
{
  if (v0[2] == 50)
  {
    uint64_t v1 = v0[5];
    uint64_t v2 = v0[3];
    uint64_t v3 = swift_task_alloc();
    v0[8] = v3;
    *(void *)(v3 + 16) = v2;
    return MEMORY[0x270FA2498](sub_24A3F4AA4, v1, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_24A3F4AA4()
{
  uint64_t v1 = v0[7];
  sub_24A3FFA84((void (*)(uint64_t))sub_24A3F6924);
  if (v1)
  {
    v0[9] = v0[8];
    v0[10] = v1;
    uint64_t v2 = v0[4];
    uint64_t v3 = sub_24A3F4B68;
  }
  else
  {
    v0[7] = 0;
    uint64_t v4 = v0[4];
    swift_task_dealloc();
    uint64_t v3 = sub_24A3F49E8;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A3F4B68()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F4BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_24A463E78();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(void *)a1 + 128))(0xD00000000000004BLL, 0x800000024A46A9D0, sub_24A3F70F4, v11, MEMORY[0x263F8EE60] + 8);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(result);
    *a3 = result;
  }
  return result;
}

uint64_t sub_24A3F4D94(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24A3F4DB8, v2, 0);
}

uint64_t sub_24A3F4DB8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_24A3F4E34, v2, 0);
}

uint64_t sub_24A3F4E34()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939D0);
  sub_24A3FFA18(0xD000000000000046, 0x800000024A46A7C0, (void (*)(void))sub_24A3F6940);
  *(void *)(v0 + 56) = 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F4F38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_24A3FF11C(0, a1, MEMORY[0x263F8D310], (uint64_t)&off_26FE15638);
  if (v8)
  {
    sub_24A3FF0A4(1, a1, MEMORY[0x263F8E5C0], (uint64_t)&off_26FE155F8);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793A10);
    *a2 = v7;
    a2[1] = v8;
    sub_24A463E18();
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 0, 1, v4);
  }
  else
  {
    sub_24A3F6158();
    swift_allocError();
    unsigned char *v6 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_24A3F5060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_24A3F5088, v4, 0);
}

uint64_t sub_24A3F5088()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[6];
  if (v1)
  {
    uint64_t v3 = v0[5];
    uint64_t v5 = v0[2];
    uint64_t v4 = v0[3];
    uint64_t v6 = *(void *)(v2 + 112);
    v0[7] = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    v7[2] = v3;
    v7[3] = v5;
    v7[4] = v4;
    v7[5] = v1;
    uint64_t v8 = sub_24A3F5154;
  }
  else
  {
    uint64_t v9 = v0[2];
    uint64_t v6 = *(void *)(v2 + 112);
    v0[10] = v6;
    uint64_t v10 = swift_task_alloc();
    v0[11] = v10;
    *(void *)(v10 + 16) = v9;
    uint64_t v8 = sub_24A3F522C;
  }
  return MEMORY[0x270FA2498](v8, v6, 0);
}

uint64_t sub_24A3F5154()
{
  sub_24A3FFA18(0xD0000000000000A8, 0x800000024A46A850, (void (*)(void))sub_24A3F6C60);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F39D4, v1, 0);
}

uint64_t sub_24A3F522C()
{
  sub_24A3FFA18(0xD000000000000038, 0x800000024A46A810, (void (*)(void))sub_24A3F6B40);
  *(void *)(v0 + 96) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F7B8C, v1, 0);
}

uint64_t sub_24A3F5304()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F5364()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F53C4()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24A3F53E4, v0, 0);
}

uint64_t sub_24A3F53E4()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  v0[5] = 0;
  return MEMORY[0x270FA2498](sub_24A3F5408, v1, 0);
}

uint64_t sub_24A3F5408()
{
  uint64_t v1 = v0[5];
  sub_24A3FFA84((void (*)(uint64_t))sub_24A3F5518);
  v0[6] = v1;
  uint64_t v2 = v0[3];
  if (v1) {
    uint64_t v3 = sub_24A3F5500;
  }
  else {
    uint64_t v3 = sub_24A3F54B4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A3F54B4()
{
  if (*(void *)(v0 + 16) != 50) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(void *)(v0 + 40) = *(void *)(v0 + 48);
  return MEMORY[0x270FA2498](sub_24A3F5408, *(void *)(v0 + 32), 0);
}

uint64_t sub_24A3F5500()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A3F5518@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), void, uint64_t))(*(void *)a1 + 128))(0xD00000000000001DLL, 0x800000024A46A9B0, sub_24A3F55D8, 0, MEMORY[0x263F8EE60] + 8);
  if (!v2)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(result);
    *a2 = result;
  }
  return result;
}

uint64_t sub_24A3F55D8(uint64_t a1)
{
  return sub_24A3F5BBC(a1);
}

uint64_t sub_24A3F55F0()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24A3F5610, v0, 0);
}

uint64_t sub_24A3F5610()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = 0x554E447473616CLL;
  *(void *)(v2 + 24) = 0xE700000000000000;
  return MEMORY[0x270FA2498](sub_24A3F56A0, v1, 0);
}

uint64_t sub_24A3F56A0()
{
  sub_24A3FFA18(0xD000000000000025, 0x800000024A46A440, (void (*)(void))sub_24A3F6DBC);
  v0[6] = 0;
  swift_task_dealloc();
  BOOL v1 = v0[2] != 0;
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  return v2(v1);
}

uint64_t sub_24A3F57A0()
{
  BOOL v1 = *(void **)(v0 + 48);
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
  if (swift_dynamicCast() && !*(unsigned char *)(v0 + 56))
  {

    uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v5(2);
  }
  else
  {

    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_24A3F58A8(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return MEMORY[0x270FA2498](sub_24A3F58CC, v1, 0);
}

uint64_t sub_24A3F58CC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  v3[2] = 0x554E447473616CLL;
  v3[3] = 0xE700000000000000;
  v3[4] = v1;
  return MEMORY[0x270FA2498](sub_24A3F5964, v2, 0);
}

uint64_t sub_24A3F5964()
{
  sub_24A3FFA18(0xD000000000000060, 0x800000024A46A900, (void (*)(void))sub_24A3F6DE8);
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F7B8C, v1, 0);
}

uint64_t sub_24A3F5A3C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A3F5AA0()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24A3F5AC0, v0, 0);
}

uint64_t sub_24A3F5AC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24A3F5AE4, v1, 0);
}

uint64_t sub_24A3F5AE4()
{
  sub_24A3FFA18(0x4D5555434156, 0xE600000000000000, (void (*)(void))sub_24A3F55D8);
  *(void *)(v0 + 32) = 0;
  uint64_t v1 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_24A3F39D4, v1, 0);
}

uint64_t sub_24A3F5BA4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24A3F5BBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 176))();
}

uint64_t DiskCache.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DiskCache.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t DiskCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t static DiskCache.currentVersion.getter()
{
  return 9;
}

void *sub_24A3F5C74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793A20);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24A3F7470(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24A3F5D98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269794250);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      long long v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A3F7580(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24A3F5EA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793A18);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24A3F7674(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24A3F5FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_24A466020;
  *(void *)(v13 + 56) = MEMORY[0x263F8D310];
  *(void *)(v13 + 64) = &off_26FE15648;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  uint64_t v14 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v14(v13);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 160))(&v16, a4, a5);
    *a6 = v16;
  }
  return result;
}

uint64_t sub_24A3F60F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793960);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A3F6158()
{
  unint64_t result = qword_269793978;
  if (!qword_269793978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793978);
  }
  return result;
}

void *sub_24A3F61AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24A3F5FD4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8E5C0], (uint64_t)&off_26FE155F8, a2);
}

void *sub_24A3F61D8(void *a1)
{
  uint64_t v3 = sub_24A4642C8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_24A463AA8();
  swift_allocObject();
  sub_24A463A98();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
  sub_24A3E8FF0();
  uint64_t v4 = sub_24A463A88();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  switch(v7 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v6), v6))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v8 = HIDWORD(v6) - (int)v6;
LABEL_8:
      size_t v11 = sub_24A4089FC();
      if (*v11 >= v8)
      {
        sub_24A4642B8();
        uint64_t v17 = sub_24A464298();
        if (v18)
        {
          a1 = (void *)v17;
          sub_24A3E8CB4(v6, v7);
          swift_release();
          return a1;
        }
LABEL_26:
        __break(1u);
        JUMPOUT(0x24A3F6560);
      }
      a1 = v11;
      if (qword_269795900 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24A464018();
      __swift_project_value_buffer(v12, (uint64_t)qword_269795908);
      sub_24A3E8D0C(v6, v7);
      uint64_t v13 = sub_24A463FF8();
      os_log_type_t v14 = sub_24A4645B8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (_DWORD *)swift_slowAlloc();
        _DWORD *v15 = 134349312;
        uint64_t v16 = v15;
        switch(v7 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v6), v6)) {
              goto LABEL_19;
            }
            goto LABEL_24;
          case 2uLL:
            if (!__OFSUB__(*(void *)(v6 + 24), *(void *)(v6 + 16))) {
              goto LABEL_19;
            }
            goto LABEL_25;
          default:
LABEL_19:
            sub_24A4646E8();
            sub_24A3E8CB4(v6, v7);
            *((_WORD *)v16 + 6) = 2050;
            sub_24A4646E8();
            _os_log_impl(&dword_24A3DA000, v13, v14, "event too large: (%{public}ld > %{public}lld", (uint8_t *)v16, 0x16u);
            MEMORY[0x24C5C5D60](v16, -1, -1);
            break;
        }
      }
      else
      {
        sub_24A3E8CB4(v6, v7);
      }

      sub_24A3F6158();
      swift_allocError();
      *uint64_t v19 = 0;
      swift_willThrow();
      sub_24A3E8CB4(v6, v7);
      swift_release();
      return a1;
    case 2uLL:
      uint64_t v10 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_8;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v8 = BYTE6(v7);
      goto LABEL_8;
  }
}

uint64_t sub_24A3F6580(uint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t v5 = (long long *)v3[2];
  uint64_t v6 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v7 = v3[5];
  uint64_t v9 = v3[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A466690;
  long long v20 = *v5;
  uint64_t v11 = MEMORY[0x263F8D310];
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  *(void *)(v10 + 64) = &off_26FE15648;
  *(_OWORD *)(v10 + 32) = *v5;
  long long v19 = v5[1];
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = &off_26FE15648;
  *(_OWORD *)(v10 + 72) = v5[1];
  *(_OWORD *)uint64_t v18 = v5[2];
  *(void *)&v18[16] = *((void *)v5 + 6);
  uint64_t v12 = MEMORY[0x263F8D4F8];
  char v13 = v18[0];
  *(void *)(v10 + 136) = MEMORY[0x263F8D4F8];
  *(void *)(v10 + 144) = &off_26FE155C8;
  *(unsigned char *)(v10 + 112) = v13;
  char v14 = v18[1];
  *(void *)(v10 + 176) = v12;
  *(void *)(v10 + 184) = &off_26FE155C8;
  *(unsigned char *)(v10 + 152) = v14;
  *(void *)(v10 + 216) = v11;
  *(void *)(v10 + 224) = &off_26FE15648;
  *(_OWORD *)(v10 + 192) = *(_OWORD *)&v18[8];
  *(void *)(v10 + 256) = MEMORY[0x263F8D538];
  *(void *)(v10 + 264) = &off_26FE15628;
  uint64_t v15 = MEMORY[0x263F8E5C0];
  *(void *)(v10 + 232) = v6;
  *(void *)(v10 + 296) = v15;
  *(void *)(v10 + 304) = &off_26FE15608;
  *(void *)(v10 + 272) = v8;
  *(void *)(v10 + 336) = v11;
  *(void *)(v10 + 344) = &off_26FE15648;
  *(void *)(v10 + 312) = v7;
  *(void *)(v10 + 320) = v9;
  uint64_t v16 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_24A3F7038((uint64_t)&v20);
  sub_24A3F7038((uint64_t)&v19);
  sub_24A3F7974((uint64_t)v18);
  swift_bridgeObjectRetain();
  v16(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_24A3F6748@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24A3F3EE0(a1, *(long long **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_24A3F6768(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v12 = *(void *)(v5 + 16);
  if (!v12) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(a1);
  }
  uint64_t v11 = *(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(void *)a1 + 128);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  while (1)
  {
    uint64_t v8 = *(void *)(v5 + 8 * v6 + 32);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    v11(0xD000000000000038, 0x800000024A46AA20, sub_24A3F7898, v9, v7);
    if (v2) {
      break;
    }
    swift_release();
    if (v12 == ++v6)
    {
      a1 = swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(a1);
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24A3F68E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24A3F4414(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24A3F6904@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24A3F4700(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_24A3F6924@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24A3F4BCC(a1, *(void *)(v2 + 16), a2);
}

void sub_24A3F6940(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(long long **)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A466030;
  long long v12 = *v5;
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = &off_26FE15648;
  *(_OWORD *)(v6 + 32) = *v5;
  long long v11 = v5[1];
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = &off_26FE15648;
  *(_OWORD *)(v6 + 72) = v5[1];
  uint64_t v8 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_24A3F7038((uint64_t)&v12);
  sub_24A3F7038((uint64_t)&v11);
  v8(v6);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v9 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X0>, void *@<X8>), void, uint64_t))(*(void *)a1 + 152);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697939D0);
    v9(sub_24A3F4F38, 0, v10);
  }
}

uint64_t sub_24A3F6B40(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(long long **)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A466030;
  long long v11 = *v5;
  uint64_t v7 = MEMORY[0x263F8D310];
  *(void *)(v6 + 56) = MEMORY[0x263F8D310];
  *(void *)(v6 + 64) = &off_26FE15648;
  *(_OWORD *)(v6 + 32) = *v5;
  long long v10 = v5[1];
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = &off_26FE15648;
  *(_OWORD *)(v6 + 72) = v5[1];
  uint64_t v8 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_24A3F7038((uint64_t)&v11);
  sub_24A3F7038((uint64_t)&v10);
  v8(v6);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_24A3F6C60(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (long long *)v3[3];
  uint64_t v7 = v3[4];
  uint64_t v6 = v3[5];
  uint64_t v8 = getTimeIntervalSince1970(Date:)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A4666B0;
  long long v14 = *v5;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = &off_26FE15648;
  *(_OWORD *)(v9 + 32) = *v5;
  long long v13 = v5[1];
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = &off_26FE15648;
  *(_OWORD *)(v9 + 72) = v5[1];
  *(void *)(v9 + 136) = v10;
  *(void *)(v9 + 144) = &off_26FE15648;
  *(void *)(v9 + 112) = v7;
  *(void *)(v9 + 120) = v6;
  *(void *)(v9 + 176) = MEMORY[0x263F8E5C0];
  *(void *)(v9 + 184) = &off_26FE15608;
  *(void *)(v9 + 152) = v8;
  long long v11 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_24A3F7038((uint64_t)&v14);
  sub_24A3F7038((uint64_t)&v13);
  swift_bridgeObjectRetain();
  v11(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

void *sub_24A3F6DBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24A3F5FD4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), MEMORY[0x263F8D6C8], (uint64_t)&off_26FE155D8, a2);
}

uint64_t sub_24A3F6DE8(uint64_t a1)
{
  return sub_24A3F38C8(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_24A3F6E0C()
{
  unint64_t result = qword_269793A00;
  if (!qword_269793A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A00);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiskCacheError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DiskCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A3F6FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24A3F6FF0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24A3F6FF8(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DiskCacheError()
{
  return &type metadata for DiskCacheError;
}

uint64_t type metadata accessor for DiskCache()
{
  return self;
}

uint64_t sub_24A3F7038(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A3F7064()
{
  uint64_t v1 = sub_24A463E78();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24A3F70F4(uint64_t a1)
{
  sub_24A463E78();
  uint64_t result = sub_24A463E28();
  uint64_t v5 = 0;
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
    goto LABEL_5;
  }
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = (uint64_t)v4;
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A466020;
  *(void *)(v6 + 56) = MEMORY[0x263F8E5C0];
  *(void *)(v6 + 64) = &off_26FE15608;
  *(void *)(v6 + 32) = v5;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_24A3F7254(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  sub_24A3FF11C(0, a1, MEMORY[0x263F8D310], (uint64_t)&off_26FE15638);
  if (v24)
  {
    sub_24A3FF11C(3, a1, MEMORY[0x263F8D310], (uint64_t)&off_26FE15638);
    uint64_t v27 = v3;
    sub_24A3FF0A4(1, a1, MEMORY[0x263F8D4F8], (uint64_t)&off_26FE155B8);
    sub_24A3FF0A4(2, a1, MEMORY[0x263F8D4F8], (uint64_t)&off_26FE155B8);
    __int16 v6 = sub_24A438B20(v23, v23);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    __int16 v11 = v6 & 0x101;
    swift_bridgeObjectRetain();
    __int16 v12 = v11;
    long long v13 = v27;
    sub_24A438B40(v4, v5, v23, v24, v12, v8, v10, (uint64_t)v25);
    long long v14 = (void *)*v13;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *long long v13 = (uint64_t)v14;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24A3F5EA8(0, v14[2] + 1, 1, v14);
      long long v14 = (void *)result;
      *long long v13 = result;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t result = (uint64_t)sub_24A3F5EA8((void *)(v16 > 1), v17 + 1, 1, v14);
      long long v14 = (void *)result;
      *long long v13 = result;
    }
    v14[2] = v17 + 1;
    uint64_t v18 = &v14[7 * v17];
    long long v19 = v25[0];
    long long v20 = v25[1];
    long long v21 = v25[2];
    v18[10] = v26;
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = v21;
    *((_OWORD *)v18 + 2) = v19;
  }
  else
  {
    sub_24A3F6158();
    swift_allocError();
    *long long v22 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3F7470(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793A28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3F7580(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3F7674(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A3F776C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  sub_24A3FF11C(0, a1, MEMORY[0x263F8D310], (uint64_t)&off_26FE15638);
  if (v10)
  {
    uint64_t v3 = (void *)*v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = (uint64_t)v3;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24A3F5D98(0, v3[2] + 1, 1, v3);
      uint64_t v3 = (void *)result;
      uint64_t *v2 = result;
    }
    unint64_t v6 = v3[2];
    unint64_t v5 = v3[3];
    if (v6 >= v5 >> 1)
    {
      uint64_t result = (uint64_t)sub_24A3F5D98((void *)(v5 > 1), v6 + 1, 1, v3);
      uint64_t v3 = (void *)result;
      uint64_t *v2 = result;
    }
    v3[2] = v6 + 1;
    uint64_t v7 = &v3[2 * v6];
    v7[4] = v9;
    v7[5] = v10;
  }
  else
  {
    sub_24A3F6158();
    swift_allocError();
    *uint64_t v8 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3F7888()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A3F7898(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A08);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24A466020;
  *(void *)(v6 + 56) = MEMORY[0x263F8E5C0];
  *(void *)(v6 + 64) = &off_26FE15608;
  *(void *)(v6 + 32) = v5;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_24A3F7974(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A3F79A0(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  sub_24A3FF11C(2, a1, MEMORY[0x263F8D310], (uint64_t)&off_26FE15638);
  if (v23)
  {
    sub_24A3FF0A4(0, a1, MEMORY[0x263F8D538], (uint64_t)&off_26FE15618);
    sub_24A3FF0A4(1, a1, MEMORY[0x263F8E5C0], (uint64_t)&off_26FE155F8);
    uint64_t result = sub_24A3EBFE0(v22, 0x4D656E4F646E6553);
    if (!v2)
    {
      uint64_t v9 = result;
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      long long v13 = (void *)*v4;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = (uint64_t)v13;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24A3F5C74(0, v13[2] + 1, 1, v13);
        long long v13 = (void *)result;
        *uint64_t v4 = result;
      }
      unint64_t v14 = v13[2];
      unint64_t v15 = v13[3];
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        unint64_t v21 = v14 + 1;
        long long v19 = v13;
        unint64_t v20 = v13[2];
        uint64_t result = (uint64_t)sub_24A3F5C74((void *)(v15 > 1), v14 + 1, 1, v19);
        unint64_t v14 = v20;
        unint64_t v16 = v21;
        long long v13 = (void *)result;
        *uint64_t v4 = result;
      }
      void v13[2] = v16;
      unint64_t v17 = &v13[5 * v14];
      v17[4] = v22;
      v17[5] = v9;
      v17[6] = v10;
      v17[7] = v11;
      v17[8] = v12;
    }
  }
  else
  {
    sub_24A3F6158();
    swift_allocError();
    *uint64_t v18 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3F7B74(uint64_t a1)
{
  return sub_24A3F6DE8(a1);
}

uint64_t sub_24A3F7B90()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A640);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A640);
  return sub_24A464008();
}

void sub_24A3F7C10()
{
  qword_26979A658 = MEMORY[0x263F8EE78];
}

void sub_24A3F7C24()
{
  qword_26979A660 = MEMORY[0x263F8EE88];
}

void sub_24A3F7C38()
{
  qword_26979A668 = MEMORY[0x263F8EE78];
}

uint64_t sub_24A3F7C4C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_269793A38 + dword_269793A38);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_24A3E2218;
  return v3();
}

uint64_t sub_24A3F7CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_24A464B98();
    sub_24A464318();
    uint64_t v6 = sub_24A464BC8();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_24A464A78() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_24A464A78() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24A3F7E24()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A3F7E54()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  return v0;
}

uint64_t sub_24A3F7E8C()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 88) + **(int **)(*(void *)v0 + 88));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_24A3E0820;
  return v4();
}

uint64_t sub_24A3F7F80()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A3F7FC4()
{
  uint64_t v0 = *(void *)PostInstallActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_24A3F7FF8()
{
  uint64_t v1 = sub_24A463C38();
  v0[18] = v1;
  v0[19] = *(void *)(v1 - 8);
  v0[20] = swift_task_alloc();
  uint64_t v2 = sub_24A463D28();
  v0[21] = v2;
  v0[22] = *(void *)(v2 - 8);
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  v0[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A3F8170, 0, 0);
}

uint64_t sub_24A3F8170()
{
  uint64_t v124 = v0;
  v123[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = (uint64_t)(v0 + 8);
  id v108 = objc_msgSend(self, sel_defaultManager);
  if (qword_269795CA8 != -1) {
LABEL_76:
  }
    swift_once();
  uint64_t v2 = *(void *)(qword_26979A658 + 16);
  uint64_t v3 = &loc_24A465000;
  uint64_t v116 = v0;
  if (v2)
  {
    uint64_t v105 = v1;
    uint64_t v106 = v0 + 16;
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[19];
    unsigned int v114 = *MEMORY[0x263F06E30];
    char v112 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    BOOL v110 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v121 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    BOOL v117 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = (void *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v7 = v0[26];
      uint64_t v9 = v0[20];
      uint64_t v8 = v0[21];
      uint64_t v10 = v0[18];
      uint64_t v12 = *(v6 - 1);
      uint64_t v11 = *v6;
      uint64_t v119 = v6;
      swift_bridgeObjectRetain();
      sub_24A3F20A4();
      v0[14] = v12;
      v0[15] = v11;
      (*v112)(v9, v114, v10);
      sub_24A3F9174();
      sub_24A463D18();
      (*v110)(v9, v10);
      long long v13 = *v121;
      (*v121)(v7, v8);
      swift_bridgeObjectRelease();
      if (sub_24A463CB8())
      {
        uint64_t v0 = v116;
        if (qword_269795CA0 != -1) {
          swift_once();
        }
        uint64_t v14 = v116[27];
        uint64_t v15 = v116[25];
        uint64_t v16 = v116[21];
        uint64_t v17 = sub_24A464018();
        __swift_project_value_buffer(v17, (uint64_t)qword_26979A640);
        uint64_t v18 = *v117;
        (*v117)(v15, v14, v16);
        long long v19 = sub_24A463FF8();
        os_log_type_t v20 = sub_24A4645D8();
        BOOL v21 = os_log_type_enabled(v19, v20);
        uint64_t v22 = v116[25];
        uint64_t v23 = v116[21];
        uint64_t v109 = v13;
        if (v21)
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v25 = v13;
          uint64_t v26 = swift_slowAlloc();
          v123[0] = v26;
          *(_DWORD *)uint64_t v24 = 136446210;
          uint64_t v27 = sub_24A463CF8();
          *(void *)(v24 + 4) = sub_24A3E0E30(v27, v28, v123);
          swift_bridgeObjectRelease();
          v25(v22, v23);
          _os_log_impl(&dword_24A3DA000, v19, v20, "removing %{public}s", (uint8_t *)v24, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v26, -1, -1);
          uint64_t v0 = v116;
          MEMORY[0x24C5C5D60](v24, -1, -1);
        }
        else
        {
          v13(v22, v23);
        }

        uint64_t v44 = (void *)sub_24A463C88();
        v0[16] = 0;
        unsigned int v45 = objc_msgSend(v108, sel_removeItemAtURL_error_, v44, v106);

        char v46 = (void *)v0[16];
        uint64_t v47 = v0[27];
        if (v45)
        {
          uint64_t v48 = v0[21];
          id v49 = v46;
          v109(v47, v48);
        }
        else
        {
          uint64_t v50 = v0[23];
          uint64_t v51 = v0[21];
          id v52 = v46;
          uint64_t v53 = (void *)sub_24A463C28();

          swift_willThrow();
          v18(v50, v47, v51);
          id v54 = v53;
          id v55 = v53;
          uint64_t v56 = sub_24A463FF8();
          os_log_type_t v57 = sub_24A4645B8();
          BOOL v58 = os_log_type_enabled(v56, v57);
          uint64_t v59 = v0[27];
          uint64_t v60 = v0[23];
          uint64_t v61 = v0[21];
          if (v58)
          {
            uint64_t v62 = swift_slowAlloc();
            uint64_t v107 = v59;
            uint64_t v63 = swift_slowAlloc();
            v123[0] = v63;
            *(_DWORD *)uint64_t v62 = 136446466;
            uint64_t v64 = sub_24A463CF8();
            *(void *)(v62 + 4) = sub_24A3E0E30(v64, v65, v123);
            swift_bridgeObjectRelease();
            v109(v60, v61);
            *(_WORD *)(v62 + 12) = 2082;
            swift_getErrorValue();
            uint64_t v66 = sub_24A464B38();
            *(void *)(v62 + 14) = sub_24A3E0E30(v66, v67, v123);
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24A3DA000, v56, v57, "failed removing %{public}s: %{public}s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x24C5C5D60](v63, -1, -1);
            MEMORY[0x24C5C5D60](v62, -1, -1);

            v109(v107, v61);
          }
          else
          {

            v109(v60, v61);
            v109(v59, v61);
          }
        }
      }
      else
      {
        uint64_t v0 = v116;
        if (qword_269795CA0 != -1) {
          swift_once();
        }
        uint64_t v29 = v116[27];
        uint64_t v30 = v116[24];
        uint64_t v31 = v116[21];
        uint64_t v32 = sub_24A464018();
        __swift_project_value_buffer(v32, (uint64_t)qword_26979A640);
        (*v117)(v30, v29, v31);
        id v33 = sub_24A463FF8();
        os_log_type_t v34 = sub_24A4645A8();
        BOOL v35 = os_log_type_enabled(v33, v34);
        uint64_t v36 = v116[27];
        uint64_t v37 = v116[24];
        uint64_t v38 = v116[21];
        if (v35)
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = v13;
          uint64_t v41 = swift_slowAlloc();
          v123[0] = v41;
          *(_DWORD *)uint64_t v39 = 136446210;
          uint64_t v42 = sub_24A463CF8();
          *(void *)(v39 + 4) = sub_24A3E0E30(v42, v43, v123);
          swift_bridgeObjectRelease();
          v40(v37, v38);
          _os_log_impl(&dword_24A3DA000, v33, v34, "skipping %{public}s", (uint8_t *)v39, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v41, -1, -1);
          uint64_t v0 = v116;
          MEMORY[0x24C5C5D60](v39, -1, -1);

          v40(v36, v38);
        }
        else
        {

          v13(v37, v38);
          v13(v36, v38);
        }
      }
      uint64_t v6 = v119 + 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v105;
    uint64_t v3 = (void *)&loc_24A465000;
  }
  int64_t v68 = sub_24A425150();
  swift_beginAccess();
  id v69 = objc_msgSend((id)*v68, sel_dictionaryRepresentation);
  uint64_t v70 = sub_24A4641C8();

  uint64_t v113 = v70 + 64;
  uint64_t v71 = -1 << *(unsigned char *)(v70 + 32);
  if (-v71 < 64) {
    uint64_t v72 = ~(-1 << -(char)v71);
  }
  else {
    uint64_t v72 = -1;
  }
  unint64_t v73 = v72 & *(void *)(v70 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v74 = 0;
  int64_t v115 = (unint64_t)(63 - v71) >> 6;
  int v122 = v3[363];
  uint64_t v111 = v70;
  while (1)
  {
    if (v73)
    {
      uint64_t v118 = (v73 - 1) & v73;
      int64_t v120 = v74;
      unint64_t v75 = __clz(__rbit64(v73)) | (v74 << 6);
      goto LABEL_45;
    }
    BOOL v76 = __OFADD__(v74, 1);
    int64_t v77 = v74 + 1;
    if (v76)
    {
      __break(1u);
      goto LABEL_76;
    }
    if (v77 >= v115) {
      goto LABEL_72;
    }
    unint64_t v78 = *(void *)(v113 + 8 * v77);
    if (!v78) {
      break;
    }
LABEL_44:
    uint64_t v118 = (v78 - 1) & v78;
    int64_t v120 = v77;
    unint64_t v75 = __clz(__rbit64(v78)) + (v77 << 6);
LABEL_45:
    uint64_t v80 = (uint64_t *)(*(void *)(v70 + 48) + 16 * v75);
    uint64_t v82 = *v80;
    unint64_t v81 = v80[1];
    uint64_t v83 = qword_269795CA0;
    swift_bridgeObjectRetain();
    if (v83 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_24A464018();
    __swift_project_value_buffer(v84, (uint64_t)qword_26979A640);
    swift_bridgeObjectRetain_n();
    unint64_t v85 = sub_24A463FF8();
    os_log_type_t v86 = sub_24A4645A8();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      v123[0] = v88;
      *(_DWORD *)uint64_t v87 = v122;
      swift_bridgeObjectRetain();
      *(void *)(v87 + 4) = sub_24A3E0E30(v82, v81, v123);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v85, v86, "default set: %{public}s", (uint8_t *)v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v88, -1, -1);
      MEMORY[0x24C5C5D60](v87, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (qword_269795CB0 != -1) {
      swift_once();
    }
    if (sub_24A3F7CEC(v82, v81, qword_26979A660))
    {
      swift_bridgeObjectRetain_n();
      unint64_t v89 = sub_24A463FF8();
      os_log_type_t v90 = sub_24A4645D8();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = swift_slowAlloc();
        uint64_t v92 = swift_slowAlloc();
        v123[0] = v92;
        *(_DWORD *)uint64_t v91 = v122;
        swift_bridgeObjectRetain();
        *(void *)(v91 + 4) = sub_24A3E0E30(v82, v81, v123);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A3DA000, v89, v90, "removing default %{public}s", (uint8_t *)v91, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v92, -1, -1);
        MEMORY[0x24C5C5D60](v91, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      id v102 = (id)*v68;
      uint64_t v1 = sub_24A464248();
      swift_bridgeObjectRelease();
      objc_msgSend(v102, sel_removeObjectForKey_, v1);
    }
    else
    {
      if (qword_269795CB8 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_26979A668;
      uint64_t v93 = *(void *)(qword_26979A668 + 16);
      if (v93)
      {
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v94 = v1 + 40;
        do
        {
          swift_bridgeObjectRetain();
          uint64_t v1 = sub_24A4643A8();
          swift_bridgeObjectRelease();
          if (v1)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v96 = sub_24A463FF8();
            os_log_type_t v97 = sub_24A4645D8();
            if (os_log_type_enabled(v96, v97))
            {
              uint64_t v98 = swift_slowAlloc();
              uint64_t v99 = v68;
              uint64_t v100 = swift_slowAlloc();
              v123[0] = v100;
              *(_DWORD *)uint64_t v98 = v122;
              swift_bridgeObjectRetain();
              *(void *)(v98 + 4) = sub_24A3E0E30(v82, v81, v123);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_24A3DA000, v96, v97, "removing default %{public}s", (uint8_t *)v98, 0xCu);
              swift_arrayDestroy();
              uint64_t v101 = v100;
              int64_t v68 = v99;
              MEMORY[0x24C5C5D60](v101, -1, -1);
              MEMORY[0x24C5C5D60](v98, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            uint64_t v1 = (uint64_t)(id)*v68;
            uint64_t v95 = (void *)sub_24A464248();
            objc_msgSend((id)v1, sel_removeObjectForKey_, v95);
          }
          v94 += 16;
          --v93;
        }
        while (v93);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v0 = v116;
        uint64_t v70 = v111;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    unint64_t v73 = v118;
    int64_t v74 = v120;
  }
  int64_t v79 = v77 + 1;
  if (v77 + 1 >= v115) {
    goto LABEL_72;
  }
  unint64_t v78 = *(void *)(v113 + 8 * v79);
  if (v78) {
    goto LABEL_43;
  }
  int64_t v79 = v77 + 2;
  if (v77 + 2 >= v115) {
    goto LABEL_72;
  }
  unint64_t v78 = *(void *)(v113 + 8 * v79);
  if (v78) {
    goto LABEL_43;
  }
  int64_t v79 = v77 + 3;
  if (v77 + 3 >= v115) {
    goto LABEL_72;
  }
  unint64_t v78 = *(void *)(v113 + 8 * v79);
  if (v78) {
    goto LABEL_43;
  }
  int64_t v79 = v77 + 4;
  if (v77 + 4 >= v115) {
    goto LABEL_72;
  }
  unint64_t v78 = *(void *)(v113 + 8 * v79);
  if (v78) {
    goto LABEL_43;
  }
  int64_t v79 = v77 + 5;
  if (v77 + 5 >= v115) {
    goto LABEL_72;
  }
  unint64_t v78 = *(void *)(v113 + 8 * v79);
  if (v78)
  {
LABEL_43:
    int64_t v77 = v79;
    goto LABEL_44;
  }
  while (1)
  {
    int64_t v77 = v79 + 1;
    if (__OFADD__(v79, 1)) {
      __break(1u);
    }
    if (v77 >= v115) {
      break;
    }
    unint64_t v78 = *(void *)(v113 + 8 * v77);
    ++v79;
    if (v78) {
      goto LABEL_44;
    }
  }
LABEL_72:
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v103 = (uint64_t (*)(void))v0[1];
  return v103();
}

unint64_t sub_24A3F90D4(uint64_t a1)
{
  unint64_t result = sub_24A3F90FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24A3F90FC()
{
  unint64_t result = qword_269793A48;
  if (!qword_269793A48)
  {
    type metadata accessor for PostInstallActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A48);
  }
  return result;
}

uint64_t type metadata accessor for PostInstallActivity()
{
  return self;
}

unint64_t sub_24A3F9174()
{
  unint64_t result = qword_269793A50;
  if (!qword_269793A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A50);
  }
  return result;
}

uint64_t sub_24A3F91C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v20 = type metadata accessor for StorebagSectionMaybeShared();
  uint64_t v4 = *(void *)(v20 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v16 = (uint64_t *)((char *)&v15 - v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A464BE8();
  if (v2)
  {

    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_24A3F942C((uint64_t)v17);
    sub_24A3E34A0((uint64_t)a1, (uint64_t)v19);
    sub_24A464558();
    uint64_t v10 = v20;
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(void (**)(uint64_t *, char *, uint64_t))(v4 + 32);
    uint64_t v12 = v16;
    v11(v16, v7, v10);
  }
  else
  {
    sub_24A3F948C(v17, (uint64_t)v19);
    __swift_project_boxed_opaque_existential_1(v19, v19[3]);
    uint64_t v9 = sub_24A464A88();
    uint64_t v12 = v16;
    *uint64_t v16 = v9;
    v12[1] = v13;
    uint64_t v10 = v20;
    swift_storeEnumTagMultiPayload();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    uint64_t v11 = *(void (**)(uint64_t *, char *, uint64_t))(v4 + 32);
  }
  v11(v15, (char *)v12, v10);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t type metadata accessor for StorebagSectionMaybeShared()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24A3F942C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793A58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A3F948C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24A3F94A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24A3F91C8(a1, a2);
}

uint64_t sub_24A3F94C4(unsigned __int8 *a1, char *a2)
{
  return sub_24A3F94D0(*a1, *a2);
}

uint64_t sub_24A3F94D0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1937335659;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1937335659;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7955819;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x7365756C6176;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x65756C6176;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6E6F69746361;
      break;
    case 5:
      uint64_t v5 = 0x6F697469646E6F63;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7955819) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x7365756C6176) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x65756C6176) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6E6F69746361;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE90000000000006ELL;
      if (v5 != 0x6F697469646E6F63) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_24A464A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24A3F96AC()
{
  return sub_24A3F96B4();
}

uint64_t sub_24A3F96B4()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3F97B0()
{
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A3F9894()
{
  return sub_24A3F989C();
}

uint64_t sub_24A3F989C()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3F9994@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A3FA814();
  *a1 = result;
  return result;
}

void sub_24A3F99C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1937335659;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7955819;
      goto LABEL_3;
    case 2:
      *a1 = 0x7365756C6176;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x65756C6176;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6E6F69746361;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x6F697469646E6F63;
      a1[1] = 0xE90000000000006ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_24A3F9A88()
{
  uint64_t result = 1937335659;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7955819;
      break;
    case 2:
      uint64_t result = 0x7365756C6176;
      break;
    case 3:
      uint64_t result = 0x65756C6176;
      break;
    case 4:
      uint64_t result = 0x6E6F69746361;
      break;
    case 5:
      uint64_t result = 0x6F697469646E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A3F9B38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A3FA814();
  *a1 = result;
  return result;
}

void sub_24A3F9B60(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24A3F9B6C(uint64_t a1)
{
  unint64_t v2 = sub_24A3FC048();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3F9BA8(uint64_t a1)
{
  unint64_t v2 = sub_24A3FC048();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24A3F9BE4(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_24A3F5D98(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

__n128 sub_24A3F9CD0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A3F9EAC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

BOOL sub_24A3F9D24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24A3F9D38()
{
  uint64_t result = 0x6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1937335659;
      break;
    case 2:
      uint64_t result = 0x7365756C6176;
      break;
    case 3:
      uint64_t result = 0x6F697469646E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A3F9DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A3FC5B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A3F9DE0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24A3F9DEC(uint64_t a1)
{
  unint64_t v2 = sub_24A3FC09C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A3F9E28(uint64_t a1)
{
  unint64_t v2 = sub_24A3FC09C();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24A3F9E64@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A3FA49C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24A3F9EAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793AA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A3FC048();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v42 = a2;
  uint64_t v50 = (void *)MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  LOBYTE(v49) = 0;
  sub_24A3FC0F0();
  sub_24A464988();
  if (v43) {
    sub_24A3F9BE4(v43);
  }
  LOBYTE(v49) = 1;
  sub_24A4649D8();
  sub_24A3F9BE4(v43);
  LOBYTE(v43) = 1;
  uint64_t v9 = sub_24A4649B8();
  uint64_t v40 = v10;
  uint64_t v11 = v50;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v11 = sub_24A3F5D98(0, v11[2] + 1, 1, v11);
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  unint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1)
  {
    unint64_t v39 = v14 + 1;
    uint64_t v37 = sub_24A3F5D98((void *)(v13 > 1), v14 + 1, 1, v11);
    unint64_t v15 = v39;
    uint64_t v11 = v37;
  }
  id v11[2] = v15;
  uint64_t v16 = &v11[2 * v14];
  uint64_t v17 = v40;
  v16[4] = v41;
  v16[5] = v17;
  uint64_t v50 = v11;
  id v49 = (void *)MEMORY[0x263F8EE78];
  char v48 = 2;
  sub_24A464988();
  if (v43) {
    sub_24A3F9BE4(v43);
  }
  char v48 = 3;
  sub_24A4649D8();
  sub_24A3F9BE4(v43);
  LOBYTE(v43) = 3;
  uint64_t v19 = sub_24A4649B8();
  uint64_t v21 = v20;
  uint64_t v41 = v19;
  uint64_t v22 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v22 = sub_24A3F5D98(0, v22[2] + 1, 1, v22);
  }
  unint64_t v24 = v22[2];
  unint64_t v23 = v22[3];
  if (v24 >= v23 >> 1) {
    uint64_t v22 = sub_24A3F5D98((void *)(v23 > 1), v24 + 1, 1, v22);
  }
  v22[2] = v24 + 1;
  uint64_t v25 = &v22[2 * v24];
  v25[4] = v41;
  v25[5] = v21;
  id v49 = v22;
  uint64_t v26 = v50;
  LOBYTE(v43) = 4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24A4649B8();
  uint64_t v29 = v28;
  uint64_t v40 = v27;
  char v48 = 5;
  sub_24A3FC1D0();
  swift_bridgeObjectRetain();
  uint64_t v41 = v29;
  sub_24A464988();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v30 = v43;
  uint64_t v31 = v44;
  uint64_t v32 = v45;
  uint64_t v33 = v46;
  unint64_t v39 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v41;
  swift_bridgeObjectRetain();
  sub_24A3FC224((uint64_t)v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v35 = v39;
  uint64_t result = sub_24A3FC288((uint64_t)v30, v31);
  uint64_t v36 = v42;
  *uint64_t v42 = v26;
  v36[1] = v22;
  v36[2] = v40;
  v36[3] = v34;
  v36[4] = v30;
  v36[5] = v31;
  v36[6] = v32;
  v36[7] = v33;
  v36[8] = v35;
  return result;
}

uint64_t sub_24A3FA49C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793A80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A3FC09C();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v9 = sub_24A4649B8();
  uint64_t v11 = v10;
  uint64_t v18 = v9;
  uint64_t v19 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  char v20 = 1;
  sub_24A3FC0F0();
  swift_bridgeObjectRetain();
  sub_24A464988();
  char v20 = 2;
  uint64_t v17 = v21;
  swift_bridgeObjectRetain();
  sub_24A464988();
  uint64_t v12 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793A90);
  char v20 = 3;
  sub_24A3FC15C();
  swift_bridgeObjectRetain();
  sub_24A464988();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v19;
  *uint64_t v19 = v18;
  v16[1] = v11;
  v16[2] = v14;
  void v16[3] = v12;
  v16[4] = v13;
  return result;
}

uint64_t sub_24A3FA814()
{
  unint64_t v0 = sub_24A464958();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_24A3FA864()
{
  unint64_t result = qword_269793A60;
  if (!qword_269793A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A60);
  }
  return result;
}

unint64_t sub_24A3FA8BC()
{
  unint64_t result = qword_269793A68;
  if (!qword_269793A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A68);
  }
  return result;
}

unint64_t sub_24A3FA914()
{
  unint64_t result = qword_269793A70;
  if (!qword_269793A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A70);
  }
  return result;
}

uint64_t sub_24A3FA968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24A3FA970()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_24A3FAA04(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *((void *)a2 + 1);
      *uint64_t v3 = *(void *)a2;
      v3[1] = v14;
      *((unsigned char *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_24A3FAB80(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_24A3FAC80(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_24A3FADBC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[v7] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_24A3FAFE0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_24A3FB118(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_24A3FB330(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_24A3FB464(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24A3FB62CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24A3FB654(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_24A3FB70C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t destroy for StorebagSectionFilter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for StorebagSectionFilter(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v7 = a2[7];
    a1[6] = a2[6];
    a1[7] = v7;
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v8;
    a1[8] = a2[8];
  }
  return a1;
}

void *assignWithCopy for StorebagSectionFilter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 4;
  uint64_t v5 = a2 + 4;
  uint64_t v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24A3FBA90((uint64_t)(a1 + 4));
      uint64_t v7 = a2[8];
      long long v8 = *((_OWORD *)a2 + 3);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 3) = v8;
      a1[8] = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    *uint64_t v4 = v9;
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

uint64_t sub_24A3FBA90(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionFilter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v5)
  {
    sub_24A3FBA90(a1 + 32);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionFilter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter()
{
  return &type metadata for StorebagSectionFilter;
}

uint64_t getEnumTagSinglePayload for StorebagSectionFilter.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionFilter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A3FBDB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_24A3FBDD8(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter.CodingKeys()
{
  return &type metadata for StorebagSectionFilter.CodingKeys;
}

uint64_t destroy for StorebagSectionCondition()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StorebagSectionCondition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionCondition(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StorebagSectionCondition(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionCondition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionCondition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition()
{
  return &type metadata for StorebagSectionCondition;
}

unint64_t sub_24A3FC048()
{
  unint64_t result = qword_269793A78;
  if (!qword_269793A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A78);
  }
  return result;
}

unint64_t sub_24A3FC09C()
{
  unint64_t result = qword_2697962C0[0];
  if (!qword_2697962C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697962C0);
  }
  return result;
}

unint64_t sub_24A3FC0F0()
{
  unint64_t result = qword_269793A88;
  if (!qword_269793A88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697939A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A88);
  }
  return result;
}

unint64_t sub_24A3FC15C()
{
  unint64_t result = qword_269793A98;
  if (!qword_269793A98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793A90);
    sub_24A3FC1D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793A98);
  }
  return result;
}

unint64_t sub_24A3FC1D0()
{
  unint64_t result = qword_269793AA0;
  if (!qword_269793AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AA0);
  }
  return result;
}

uint64_t sub_24A3FC224(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24A3FC288(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t getEnumTagSinglePayload for StorebagSectionCondition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionCondition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A3FC478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition.CodingKeys()
{
  return &type metadata for StorebagSectionCondition.CodingKeys;
}

unint64_t sub_24A3FC4B4()
{
  unint64_t result = qword_2697963D0[0];
  if (!qword_2697963D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697963D0);
  }
  return result;
}

unint64_t sub_24A3FC50C()
{
  unint64_t result = qword_2697964E0;
  if (!qword_2697964E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697964E0);
  }
  return result;
}

unint64_t sub_24A3FC564()
{
  unint64_t result = qword_2697964E8[0];
  if (!qword_2697964E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697964E8);
  }
  return result;
}

uint64_t sub_24A3FC5B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937335659 && a2 == 0xE400000000000000 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24A464A78();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

BOOL static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SessionConfiguration.Availability.hash(into:)()
{
  return sub_24A464BA8();
}

uint64_t SessionConfiguration.Availability.hashValue.getter()
{
  return sub_24A464BC8();
}

uint64_t sub_24A3FC7EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  MEMORY[0x270FA5388](v2 - 8);
  unsigned int v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SessionConfiguration.Backend(0);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A3FC9AC(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24A3FCA74((uint64_t)v7, type metadata accessor for SessionConfiguration.Backend);
    return 0x6C61636F6CLL;
  }
  else
  {
    sub_24A3FCA10((uint64_t)v7, (uint64_t)v4);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_24A3FCA74((uint64_t)v4, type metadata accessor for SessionConfiguration.BackendHTTP);
  }
  return v8;
}

uint64_t type metadata accessor for SessionConfiguration.BackendHTTP(uint64_t a1)
{
  return sub_24A3FC974(a1, (uint64_t *)&unk_269796680);
}

uint64_t type metadata accessor for SessionConfiguration.Backend(uint64_t a1)
{
  return sub_24A3FC974(a1, (uint64_t *)&unk_269796670);
}

uint64_t sub_24A3FC974(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A3FC9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.Backend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3FCA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3FCA74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24A3FCAD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(double *)(a7 + 16) = a8;
  unsigned int v13 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v14 = a7 + v13[6];
  uint64_t v15 = sub_24A463D28();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a3, v15);
  *(void *)(a7 + v13[7]) = a4;
  *(unsigned char *)(a7 + v13[8]) = a5;
  *(unsigned char *)(a7 + v13[9]) = a6;
  return result;
}

uint64_t variable initialization expression of SessionConfiguration.deferred()
{
  return 0;
}

uint64_t variable initialization expression of SessionConfiguration.version()
{
  return 1701736302;
}

uint64_t sub_24A3FCBA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

void sub_24A3FCBB4(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)a1 = MEMORY[0x263F8EE78];
  *(void *)(a1 + 8) = v1;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 1701736302;
  *(void *)(a1 + 32) = 0xE400000000000000;
}

unint64_t sub_24A3FCBE0()
{
  unint64_t result = qword_269793AB0;
  if (!qword_269793AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AB0);
  }
  return result;
}

uint64_t destroy for SessionConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Storebag(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Storebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration()
{
  return &type metadata for SessionConfiguration;
}

unsigned char *storeEnumTagSinglePayload for SessionConfiguration.Availability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A3FCF1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.Availability()
{
  return &type metadata for SessionConfiguration.Availability;
}

void *sub_24A3FCF54(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      uint64_t v8 = a2[2];
      a1[1] = v7;
      a1[2] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      int v11 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v12 = v11[6];
      unsigned int v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_24A463D28();
      int v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
      *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
      *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24A3FD0D0(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    uint64_t v3 = sub_24A463D28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  return swift_bridgeObjectRelease();
}

void *sub_24A3FD184(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24A463D28();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_24A3FD2A8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24A3FCA74((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24A463D28();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
      *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
      *((unsigned char *)a1 + v5[9]) = *((unsigned char *)a2 + v5[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_24A3FD400(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24A463D28();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_24A3FD508(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A3FCA74((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_24A463D28();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24A3FD634()
{
  uint64_t result = type metadata accessor for SessionConfiguration.BackendHTTP(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_24A3FD6C4(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24A463D28();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24A3FD7E8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *sub_24A3FD874(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24A463D28();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24A3FD948(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24A463D28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_24A3FDA28(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

void *sub_24A3FDADC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24A463D28();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_24A3FDBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A3FDBB4);
}

uint64_t sub_24A3FDBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24A463D28();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24A3FDC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A3FDC78);
}

uint64_t sub_24A3FDC78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24A463D28();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24A3FDD20()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *assignWithCopy for SessionConfiguration.BackendLocal(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration.BackendLocal(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionConfiguration.BackendLocal()
{
  return &type metadata for SessionConfiguration.BackendLocal;
}

const char *sub_24A3FDE9C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0x6F727245204C5153;
  if (a3) {
    uint64_t v4 = a2;
  }
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  sub_24A464358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = sqlite3_errstr(a1);
  if (result)
  {
    sub_24A464368();
    swift_bridgeObjectRetain();
    sub_24A464358();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (const char *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

const char *sub_24A3FDF78()
{
  return sub_24A3FDE9C(*(_DWORD *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

unint64_t sub_24A3FDF84(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0x6465736F6C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24A3FE010(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0x6465736F6C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24A3FE09C()
{
  return sub_24A3FE010(*v0);
}

unint64_t sub_24A3FE0A4()
{
  return sub_24A3FDF84(*v0);
}

uint64_t type metadata accessor for SQLiteDB.Location()
{
  uint64_t result = qword_269796B20;
  if (!qword_269796B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A3FE0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3FE15C(uint64_t a1)
{
  uint64_t v2 = v1;
  ppDb[1] = *(sqlite3 **)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)ppDb - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SQLiteDB.Location();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)ppDb - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v2 + 24) = 0;
  ppDb[0] = 0;
  sub_24A3FE0F8(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_24A463CF8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = sub_24A4642F8();
  swift_bridgeObjectRelease();
  int v12 = sqlite3_open_v2((const char *)(v11 + 32), ppDb, 32774, 0);
  swift_release();
  uint64_t v13 = ppDb[0];
  if (!ppDb[0] || v12)
  {
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = v12;
    *(void *)(v14 + 8) = 0xD000000000000017;
    *(void *)(v14 + 16) = 0x800000024A46ADD0;
    swift_willThrow();
    sub_24A3FF9BC(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_24A3FF9BC(a1);
    *(void *)(v2 + 16) = v13;
  }
  return v2;
}

uint64_t sub_24A3FE414()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    *(unsigned char *)(v0 + 24) = 1;
    sqlite3_close_v2(*(sqlite3 **)(v0 + 16));
  }
  return swift_deallocClassInstance();
}

uint64_t sub_24A3FE45C()
{
  uint64_t v1 = sqlite3_expanded_sql(*(sqlite3_stmt **)(v0 + 16));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_24A464368();
  sqlite3_free(v2);
  return v3;
}

uint64_t sub_24A3FE4B8()
{
  uint64_t v1 = v0;
  int v2 = sqlite3_step(*(sqlite3_stmt **)(v0 + 16));
  if (v2 == 101)
  {
    swift_beginAccess();
    *(unsigned char *)(v0 + 24) = 1;
    return 0;
  }
  else
  {
    int v3 = v2;
    if (v2 == 100)
    {
      swift_retain();
    }
    else
    {
      sub_24A4647E8();
      uint64_t v4 = swift_bridgeObjectRelease();
      strcpy((char *)v8, "Statement ((");
      BYTE5(v8[1]) = 0;
      HIWORD(v8[1]) = -5120;
      (*(void (**)(uint64_t))(*(void *)v0 + 96))(v4);
      sub_24A464358();
      swift_bridgeObjectRelease();
      sub_24A464358();
      uint64_t v5 = v8[0];
      uint64_t v1 = v8[1];
      sub_24A3FE788();
      swift_allocError();
      *(_DWORD *)uint64_t v6 = v3;
      *(void *)(v6 + 8) = v5;
      *(void *)(v6 + 16) = v1;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_24A3FE60C(void (*a1)(uint64_t))
{
  uint64_t v4 = *(sqlite3_stmt **)(v1 + 16);
  while (1)
  {
    int v5 = sqlite3_step(v4);
    if (v5 != 100) {
      break;
    }
    uint64_t v6 = swift_retain();
    a1(v6);
    uint64_t result = swift_release();
    if (v2) {
      return result;
    }
  }
  int v8 = v5;
  if (v5 == 101)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v1 + 24) = 1;
  }
  else
  {
    sub_24A4647E8();
    uint64_t v9 = swift_bridgeObjectRelease();
    strcpy((char *)v13, "Statement ((");
    BYTE5(v13[1]) = 0;
    HIWORD(v13[1]) = -5120;
    (*(void (**)(uint64_t))(*(void *)v1 + 96))(v9);
    sub_24A464358();
    swift_bridgeObjectRelease();
    sub_24A464358();
    uint64_t v10 = v13[0];
    uint64_t v11 = v13[1];
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = v10;
    *(void *)(v12 + 16) = v11;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_24A3FE788()
{
  unint64_t result = qword_269793AB8;
  if (!qword_269793AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AB8);
  }
  return result;
}

uint64_t sub_24A3FE7DC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t result = sub_24A3FE4B8();
  if (!v4)
  {
    if (result)
    {
      a1(result);
      uint64_t v11 = sub_24A3FE4B8();
      swift_release();
      if (v11)
      {
        uint64_t v12 = *(sqlite3_stmt **)(v5 + 16);
        do
          int v13 = sqlite3_step(v12);
        while (v13 == 100);
        int v14 = v13;
        if (v13 == 101)
        {
          swift_beginAccess();
          *(unsigned char *)(v5 + 24) = 1;
          sub_24A3FEA60();
          swift_allocError();
          unsigned char *v15 = 1;
          swift_willThrow();
          swift_release();
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
        }
        sub_24A4647E8();
        uint64_t v16 = swift_bridgeObjectRelease();
        strcpy((char *)v20, "Statement ((");
        BYTE5(v20[1]) = 0;
        HIWORD(v20[1]) = -5120;
        (*(void (**)(uint64_t))(*(void *)v5 + 96))(v16);
        sub_24A464358();
        swift_bridgeObjectRelease();
        sub_24A464358();
        uint64_t v17 = v20[0];
        uint64_t v18 = v20[1];
        sub_24A3FE788();
        swift_allocError();
        *(_DWORD *)uint64_t v19 = v14;
        *(void *)(v19 + 8) = v17;
        *(void *)(v19 + 16) = v18;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
      }
      return swift_release();
    }
    sub_24A3FEA60();
    swift_allocError();
    unsigned char *v10 = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_24A3FEA60()
{
  unint64_t result = qword_269793AC0;
  if (!qword_269793AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AC0);
  }
  return result;
}

uint64_t sub_24A3FEAB4(uint64_t a1, uint64_t a2)
{
  v4[2] = a1;
  v4[3] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t), void *, uint64_t))(*(void *)v2 + 152))(sub_24A3FEB14, v4, a1);
}

uint64_t sub_24A3FEB14(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  if (sqlite3_column_count(*(sqlite3_stmt **)(a1 + 16)) == 1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 8);
    uint64_t v5 = swift_retain();
    return v4(v5, 0, v3, v2);
  }
  else
  {
    sub_24A3FEA60();
    swift_allocError();
    *uint64_t v7 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_24A3FEBD0(uint64_t a1, uint64_t a2)
{
  _OWORD v6[2] = a1;
  v6[3] = a2;
  uint64_t v3 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *, uint64_t))(*(void *)v2 + 152);
  uint64_t v4 = sub_24A4646D8();
  return v3(sub_24A3FEC60, v6, v4);
}

uint64_t sub_24A3FEC60(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  if (sqlite3_column_count(*(sqlite3_stmt **)(a1 + 16)) == 1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 8);
    uint64_t v5 = swift_retain();
    return v4(v5, 0, v3, v2);
  }
  else
  {
    sub_24A3FEA60();
    swift_allocError();
    *uint64_t v7 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_24A3FED1C()
{
  uint64_t v1 = (unsigned char *)v0;
  uint64_t v2 = *(sqlite3_stmt **)(v0 + 16);
  do
    int v3 = sqlite3_step(v2);
  while (v3 == 100);
  int v4 = v3;
  if (v3 == 101)
  {
    uint64_t result = swift_beginAccess();
    v1[24] = 1;
  }
  else
  {
    sub_24A4647E8();
    uint64_t v6 = swift_bridgeObjectRelease();
    strcpy((char *)v10, "Statement ((");
    BYTE5(v10[1]) = 0;
    HIWORD(v10[1]) = -5120;
    (*(void (**)(uint64_t))(*(void *)v1 + 96))(v6);
    sub_24A464358();
    swift_bridgeObjectRelease();
    sub_24A464358();
    uint64_t v7 = v10[0];
    uint64_t v8 = v10[1];
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = v4;
    *(void *)(v9 + 8) = v7;
    *(void *)(v9 + 16) = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3FEE60(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, a1, v4, v5);
}

uint64_t sub_24A3FEED4(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  while (1)
  {
    if (v6 == v3)
    {
      unint64_t v6 = v3;
      memset(v9, 0, sizeof(v9));
    }
    else
    {
      if (v6 >= v3) {
        goto LABEL_11;
      }
      sub_24A3E34A0(v4 + 40 * v6, (uint64_t)v8);
      *(void *)&v9[0] = v6;
      sub_24A3F948C(v8, (uint64_t)v9 + 8);
      ++v6;
    }
    sub_24A3FF004((uint64_t)v9, (uint64_t)&v10);
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v7 = v10;
    sub_24A3F948C(&v11, (uint64_t)v9);
    uint64_t result = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    (*(void (**)(uint64_t, _OWORD *))(*(void *)v1 + 184))(result, v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    if (v2) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A3FF004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A3FF06C()
{
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_24A3FF0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v8(a2, a1, a3, a4);
}

uint64_t sub_24A3FF11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v8(a2, a1, a3, a4);
}

uint64_t sub_24A3FF194()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_24A3FF1C8(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_24A3FF208())()
{
  return j__swift_endAccess;
}

uint64_t sub_24A3FF260(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = 0;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24A3FF298(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if ((*(uint64_t (**)(void))(*(void *)v3 + 96))())
  {
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = 1;
    *(void *)(v6 + 8) = 0xD00000000000001DLL;
    *(void *)(v6 + 16) = 0x800000024A46AB60;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_24A3FF3A0();
    if (!v4)
    {
      a3();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24A3FF3A0()
{
  v9[1] = *(sqlite3_stmt **)MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + 24))
  {
    sub_24A3FEA60();
    swift_allocError();
    unsigned char *v2 = 3;
  }
  else
  {
    v9[0] = 0;
    uint64_t v3 = sub_24A4642F8();
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4 >> 31) {
      __break(1u);
    }
    int v5 = sqlite3_prepare_v2(*(sqlite3 **)(v1 + 16), (const char *)(v3 + 32), v4, v9, 0);
    swift_release();
    uint64_t v6 = v9[0];
    if (v9[0] && !v5)
    {
      type metadata accessor for SQLiteDB.Statement();
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 24) = 0;
      *(void *)(result + 16) = v6;
      return result;
    }
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = v5;
    *(void *)(v8 + 8) = 0xD00000000000001BLL;
    *(void *)(v8 + 16) = 0x800000024A46ADF0;
  }
  return swift_willThrow();
}

sqlite3_int64 sub_24A3FF4E4()
{
  return sqlite3_changes64(*(sqlite3 **)(*(void *)(*(void *)(v0 + 16) + 112) + 16));
}

uint64_t sub_24A3FF4F4()
{
  return sub_24A3FF610();
}

uint64_t sub_24A3FF51C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + 24))
  {
    sub_24A3FEA60();
    swift_allocError();
    unsigned char *v2 = 3;
  }
  else
  {
    uint64_t v3 = *(sqlite3 **)(v1 + 16);
    uint64_t v4 = sub_24A4642F8();
    int v5 = sqlite3_exec(v3, (const char *)(v4 + 32), 0, 0, 0);
    uint64_t result = swift_release();
    if (!v5) {
      return result;
    }
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = v5;
    *(void *)(v7 + 8) = 0;
    *(void *)(v7 + 16) = 0;
  }
  return swift_willThrow();
}

uint64_t sub_24A3FF5E4()
{
  return sub_24A3FF610();
}

uint64_t sub_24A3FF610()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 96))())
  {
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = 1;
    *(void *)(v2 + 8) = 0xD00000000000001DLL;
    *(void *)(v2 + 16) = 0x800000024A46AB60;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_24A3FF51C();
    if (!v1) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 104))(1);
    }
  }
  return result;
}

uint64_t sub_24A3FF710()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24A3FF748(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24A3FF798(a1);
  return v2;
}

uint64_t sub_24A3FF798(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for SQLiteDB.Location();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  sub_24A3FE0F8(a1, (uint64_t)v7);
  type metadata accessor for SQLiteDB.DBHandle();
  uint64_t v8 = swift_allocObject();
  sub_24A3FE15C((uint64_t)v7);
  if (!v2)
  {
    uint64_t v9 = *(sqlite3 **)(v8 + 16);
    int v10 = sqlite3_exec(v9, "PRAGMA journal_mode=WAL;", 0, 0, 0);
    if (v10)
    {
      int v11 = v10;
      sub_24A3FE788();
      swift_allocError();
      *(_DWORD *)uint64_t v12 = v11;
      unint64_t v13 = 0xD000000000000014;
      int v14 = "Failed to enable WAL";
    }
    else
    {
      int v15 = sqlite3_exec(v9, "PRAGMA foreign_keys=ON;", 0, 0, 0);
      if (!v15)
      {
        sub_24A3FF9BC(a1);
        *(void *)(v3 + 112) = v8;
        return v3;
      }
      int v16 = v15;
      unint64_t v13 = 0xD000000000000013;
      sub_24A3FE788();
      swift_allocError();
      *(_DWORD *)uint64_t v12 = v16;
      int v14 = "Failed to enable FK";
    }
    *(void *)(v12 + 8) = v13;
    *(void *)(v12 + 16) = (unint64_t)(v14 - 32) | 0x8000000000000000;
    swift_willThrow();
    swift_release();
  }
  swift_defaultActor_destroy();
  sub_24A3FF9BC(a1);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for SQLiteDB.DBHandle()
{
  return self;
}

uint64_t sub_24A3FF9BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A3FFA18(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = sub_24A3FF3A0();
  if (!v3)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_24A3FFA84(void (*a1)(uint64_t))
{
  type metadata accessor for SQLiteDB.Transaction();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v1;
  swift_retain();
  sub_24A3FF51C();
  if (!v2)
  {
    a1(v4);
    swift_beginAccess();
    if ((*(unsigned char *)(v4 + 24) & 1) == 0) {
      sub_24A3FF51C();
    }
  }
  return swift_release();
}

uint64_t type metadata accessor for SQLiteDB.Transaction()
{
  return self;
}

uint64_t sub_24A3FFBF0()
{
  return sub_24A3FF51C();
}

uint64_t sub_24A3FFC08()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    *(unsigned char *)(v1 + 24) = 1;
    return sqlite3_close_v2(*(sqlite3 **)(v1 + 16));
  }
  return result;
}

uint64_t sub_24A3FFC28()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A3FFC60(uint64_t result, uint64_t a2, char a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3 & 1);
  if (result)
  {
    int v3 = result;
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000012;
    *(void *)(v4 + 16) = 0x800000024A46AC20;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3FFD00@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    int v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4 > 0;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A3FFD6C(uint64_t a1, uint64_t a2)
{
  return sub_24A3FFC60(a1, a2, *v2);
}

uint64_t sub_24A3FFD88(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000 || a3 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_9;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000012;
    *(void *)(v4 + 16) = 0x800000024A46AC20;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3FFE3C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    int v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A3FFEA4(uint64_t a1, uint64_t a2)
{
  return sub_24A3FFD88(a1, a2, *v2);
}

uint64_t sub_24A3FFEC0(uint64_t result, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int64(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000014;
    *(void *)(v4 + 16) = 0x800000024A46AC40;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A3FFF5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, sqlite3_int64 *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    sqlite3_int64 v4 = sqlite3_column_int64(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A3FFFC0(uint64_t a1, uint64_t a2)
{
  return sub_24A3FFEC0(a1, a2, *v2);
}

uint64_t sub_24A3FFFDC(uint64_t result, uint64_t a2, double a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_double(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000015;
    *(void *)(v4 + 16) = 0x800000024A46AC60;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A400078@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    double v4 = sqlite3_column_double(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A4000DC(uint64_t a1, uint64_t a2)
{
  return sub_24A3FFFDC(a1, a2, *v2);
}

uint64_t sub_24A4000F8(sqlite3_stmt *a1, uint64_t a2)
{
  uint64_t v6 = sub_24A4642F8();
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v2 = *(void *)(v6 + 16);
  if (!(v2 >> 31))
  {
    int v3 = (const char *)(v6 + 32);
    a1 = (sqlite3_stmt *)*((void *)a1 + 2);
    if (qword_269796690 == -1) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  swift_once();
LABEL_5:
  int v7 = sqlite3_bind_text(a1, a2, v3, v2, (void (__cdecl *)(void *))qword_269796698);
  uint64_t result = swift_release();
  if (v7)
  {
    sub_24A3FE788();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = v7;
    *(void *)(v9 + 8) = 0xD000000000000015;
    *(void *)(v9 + 16) = 0x800000024A46AC80;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24A400220@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (sqlite3_column_text(*(sqlite3_stmt **)(result + 16), a2))
  {
    uint64_t v4 = sub_24A464378();
    uint64_t v6 = v5;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a3 = v4;
  a3[1] = v6;
  return result;
}

uint64_t sub_24A4002A4(sqlite3_stmt *a1, uint64_t a2)
{
  return sub_24A4000F8(a1, a2);
}

void sub_24A4002C0()
{
  qword_269796698 = -1;
}

unint64_t sub_24A4002D8()
{
  unint64_t result = qword_269793AD0;
  if (!qword_269793AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AD0);
  }
  return result;
}

uint64_t destroy for SessionHierarchyItem()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19CloudTelemetryTools8SQLErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLError()
{
  return &type metadata for SQLError;
}

unsigned char *storeEnumTagSinglePayload for DBError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A400588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DBError()
{
  return &type metadata for DBError;
}

uint64_t type metadata accessor for SQLiteDB()
{
  return self;
}

uint64_t *sub_24A4005E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_24A463D28();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_24A400730(uint64_t a1)
{
  uint64_t v2 = sub_24A463D28();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_24A400800(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_24A400910(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_24A400A84(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_24A400B94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_24A400D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A400D1C);
}

uint64_t sub_24A400D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24A400D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A400D9C);
}

uint64_t sub_24A400D9C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24A400E1C(uint64_t a1)
{
  uint64_t v2 = sub_24A463D28();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_24A400E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_24A400EF4()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SQLiteDB.Statement()
{
  return self;
}

ValueMetadata *type metadata accessor for SQLiteDB.Row()
{
  return &type metadata for SQLiteDB.Row;
}

uint64_t sub_24A400FAC()
{
  uint64_t v0 = sub_24A425150();
  swift_beginAccess();
  id v1 = (id)*v0;
  uint64_t v2 = (void *)sub_24A464248();
  id v3 = objc_msgSend(v1, sel_integerForKey_, v2);

  uint64_t v4 = 1;
  switch((unint64_t)v3)
  {
    case 0uLL:
      goto LABEL_8;
    case 1uLL:
      uint64_t v4 = 0;
      goto LABEL_13;
    case 2uLL:
      goto LABEL_13;
    case 3uLL:
      uint64_t v4 = 2;
      goto LABEL_13;
    case 4uLL:
      uint64_t v4 = 3;
LABEL_13:
      if (qword_269796B30 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_24A464018();
      __swift_project_value_buffer(v10, (uint64_t)qword_26979A670);
      int v11 = sub_24A463FF8();
      os_log_type_t v12 = sub_24A464598();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        v18[0] = (id)v14;
        *(_DWORD *)uint64_t v13 = 136446466;
        uint64_t v15 = sub_24A4642D8();
        sub_24A3E0E30(v15, v16, (uint64_t *)v18);
        sub_24A4646E8();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_24A4646E8();
        _os_log_impl(&dword_24A3DA000, v11, v12, "overriding environmentType to %{public}s (%{public}ld) from defaults", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v14, -1, -1);
        MEMORY[0x24C5C5D60](v13, -1, -1);
      }

      break;
    default:
      if (qword_269796B30 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_24A464018();
      __swift_project_value_buffer(v5, (uint64_t)qword_26979A670);
      uint64_t v6 = sub_24A463FF8();
      os_log_type_t v7 = sub_24A4645B8();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134349056;
        v18[0] = v3;
        sub_24A4646E8();
        _os_log_impl(&dword_24A3DA000, v6, v7, "invalid environmentType override from defaults: %{public}ld", v8, 0xCu);
        MEMORY[0x24C5C5D60](v8, -1, -1);
      }

LABEL_8:
      int v9 = sub_24A42508C();
      swift_beginAccess();
      if (*v9) {
        uint64_t v4 = 1;
      }
      else {
        uint64_t v4 = 3;
      }
      break;
  }
  return v4;
}

void *sub_24A401324(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  do
  {
    char v17 = *(unsigned char *)(a3 + v5 + 32);
    a1(&v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v16;
    if (v16)
    {
      char v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_24A4038D8(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_24A4038D8((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      _OWORD v6[2] = v11 + 1;
      os_log_type_t v7 = &v6[2 * v11];
      *((unsigned char *)v7 + 32) = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v13 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_24A40147C()
{
  return sub_24A464BC8();
}

uint64_t sub_24A4014C4()
{
  return sub_24A464BA8();
}

uint64_t sub_24A4014F4()
{
  return sub_24A464BC8();
}

uint64_t sub_24A401538@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24A406030(*a1);
  *a2 = result;
  return result;
}

void sub_24A401564(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_24A401574(void *a1@<X8>)
{
  *a1 = &unk_26FE157B0;
}

uint64_t sub_24A401584()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A670);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A670);
  return sub_24A464008();
}

uint64_t sub_24A4015FC(char a1)
{
  return *(void *)&aDevelopmappleI[8 * a1];
}

uint64_t sub_24A40161C()
{
  return sub_24A4015FC(*v0);
}

uint64_t sub_24A401624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v4 = sub_24A406258(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

void sub_24A401664(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_24A401670(uint64_t a1)
{
  unint64_t v2 = sub_24A408248();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A4016AC(uint64_t a1)
{
  unint64_t v2 = sub_24A408248();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24A4016E8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A406664(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_24A401730(char a1)
{
  if (!a1) {
    return 0xD00000000000001DLL;
  }
  if (a1 == 1) {
    return 0xD000000000000025;
  }
  return 0xD000000000000010;
}

unint64_t sub_24A401790()
{
  return sub_24A401730(*v0);
}

uint64_t sub_24A401798@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  sub_24A463C08();
  swift_allocObject();
  sub_24A463BF8();
  sub_24A4060B0();
  sub_24A463BE8();
  if (v4)
  {
    sub_24A3E8CB4(a1, a2);
    return swift_release();
  }
  else
  {
    unint64_t v10 = v20;
    if (*(void *)(v21 + 16) && (sub_24A404538(a3), (v11 & 1) != 0)) {
      unint64_t v12 = swift_bridgeObjectRetain();
    }
    else {
      unint64_t v12 = sub_24A40195C(MEMORY[0x263F8EE78]);
    }
    if (v19) {
      int v13 = 86400;
    }
    else {
      int v13 = v18;
    }
    unint64_t v15 = v12;
    if (v20)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = v17;
      swift_bridgeObjectRetain();
      sub_24A3E8CB4(a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = v17;
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_24A401AA8(MEMORY[0x263F8EE78]);
      sub_24A3E8CB4(a1, a2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(void *)a4 = v15;
    *(_DWORD *)(a4 + 8) = v13;
    *(void *)(a4 + 16) = v16;
    *(void *)(a4 + 24) = v14;
    *(void *)(a4 + 32) = v10;
  }
  return result;
}

unint64_t sub_24A40195C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793BD0);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 5);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v8 = *((void *)v4 - 2);
    uint64_t v9 = *((void *)v4 - 1);
    char v10 = *v4;
    swift_bridgeObjectRetain();
    sub_24A3E30F8(v7, v8, v9, v10);
    unint64_t result = sub_24A3E1488(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v13 = (uint64_t *)(v2[6] + 16 * result);
    *int v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 32 * result;
    *(void *)uint64_t v14 = v7;
    *(void *)(v14 + 8) = v8;
    *(void *)(v14 + 16) = v9;
    *(unsigned char *)(v14 + 24) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 48;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A401AA8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793BC8);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24A3E1488(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A401BD4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  long long v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  double v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  BOOL v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  int v92;
  BOOL v93;
  BOOL v94;
  void *v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  BOOL v105;
  void *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  double *v127;
  void *v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  char v134;
  BOOL v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  long long v144;
  unsigned __int8 v145;
  long long v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  uint8_t *v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  BOOL v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  unint64_t v167;
  NSObject *v168;
  os_log_type_t v169;
  BOOL v170;
  uint8_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  BOOL v193;
  BOOL v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  uint64_t v201;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  unint64_t v210;
  unint64_t v211;
  int64_t v212;
  uint64_t v213;
  _OWORD *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char v236;
  uint64_t result;
  long long v238;
  _OWORD *v239;
  uint64_t v240;
  void (**v241)(char *, uint64_t);
  void (**v242)(uint64_t, char *, uint64_t);
  void (**v243)(char *, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _OWORD *v247;
  char *v248;
  uint64_t v249;
  long long v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  void *v256;
  unint64_t v257;
  uint64_t v258;
  uint64_t v259;
  long long v260;
  uint64_t *v261;
  uint64_t v262;
  uint64_t v263;
  void (**v264)(char *, uint64_t);
  void (**v265)(char *, uint64_t, uint64_t);
  uint64_t v266;
  unsigned int (**v267)(uint64_t, uint64_t, uint64_t);
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  uint64_t v272;
  void *v273;
  uint64_t v274;
  char *v275;
  char *v276;
  int64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  int64_t v283;
  uint64_t v284;
  uint64_t v285;
  void (**v286)(char *, uint64_t);
  void (**v287)(char *, uint64_t);
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  long long v295;
  uint64_t v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  long long v300;
  long long v301;
  long long v302;
  long long v303;
  long long v304;
  long long v305;
  long long v306;
  long long v307;
  long long v308;
  long long v309;
  long long v310;
  long long v311;
  uint64_t v312;
  void v313[2];
  long long v314;
  long long v315;

  uint64_t v3 = v2;
  v247 = a2;
  v284 = sub_24A464018();
  v297 = *(void *)(v284 - 8);
  MEMORY[0x270FA5388](v284 - 8);
  v279 = (char *)&v240 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionConfiguration.Backend(0);
  v252 = *(void *)(v6 - 8);
  v253 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v256 = (uint64_t *)((char *)&v240 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  v246 = (uint64_t)&v240 - v10;
  MEMORY[0x270FA5388](v9);
  v245 = (uint64_t)&v240 - v11;
  uint64_t v12 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  MEMORY[0x270FA5388](v12 - 8);
  v244 = (uint64_t)&v240 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  MEMORY[0x270FA5388](v14 - 8);
  v268 = (char *)&v240 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v272 = sub_24A463D28();
  uint64_t v16 = *(void *)(v272 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v272);
  v249 = (uint64_t)&v240 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v248 = (char *)&v240 - v19;
  v289 = sub_24A463F38();
  uint64_t v20 = *(void *)(v289 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v289);
  v271 = (char *)&v240 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v276 = (char *)&v240 - v23;
  v288 = sub_24A463F58();
  uint64_t v24 = *(void *)(v288 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v288);
  v270 = (char *)&v240 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v275 = (char *)&v240 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793AF8);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  v269 = (char *)&v240 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v240 - v31;
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  v273 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  unint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 8);
  uint64_t v36 = v34;
  uint64_t v37 = (uint64_t)v32;
  v35(v313, v33, v36);
  v315 = v314;
  uint64_t v38 = *((void *)&v314 + 1);
  unint64_t v39 = v314;
  swift_bridgeObjectRetain();
  sub_24A3E1C84((uint64_t)v313);
  v254 = v3;
  uint64_t v40 = *v3;
  uint64_t v41 = *(void *)(v40 + 64);
  v274 = v40 + 64;
  uint64_t v42 = 1 << *(unsigned char *)(v40 + 32);
  unint64_t v43 = -1;
  if (v42 < 64) {
    unint64_t v43 = ~(-1 << v42);
  }
  uint64_t v44 = v43 & v41;
  v277 = (unint64_t)(v42 + 63) >> 6;
  v286 = (void (**)(char *, uint64_t))(v20 + 8);
  v287 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v45 = v38;
  v267 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v264 = (void (**)(char *, uint64_t))(v297 + 8);
  v265 = (void (**)(char *, uint64_t, uint64_t))(v297 + 16);
  v261 = &v299;
  v242 = (void (**)(uint64_t, char *, uint64_t))(v16 + 16);
  v243 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
  v241 = (void (**)(char *, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  uint64_t v46 = v44;
  unint64_t v47 = 0;
  v255 = 0;
  *(void *)&char v48 = 136315138;
  v260 = v48;
  v259 = MEMORY[0x263F8EE58] + 8;
  *(void *)&char v48 = 136446210;
  v250 = v48;
  v257 = MEMORY[0x263F8EE78];
  v251 = MEMORY[0x263F8EE78];
  v285 = v37;
  v290 = v39;
  v262 = v40;
  v297 = v38;
  while (1)
  {
LABEL_9:
    if (v46)
    {
      uint64_t v53 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      id v54 = v53 | (v47 << 6);
    }
    else
    {
      if (__OFADD__(v47++, 1)) {
        goto LABEL_253;
      }
      if (v47 >= v277)
      {
LABEL_248:
        swift_release();
        sub_24A407ABC((uint64_t)&v315);
        v234 = v254[2];
        v235 = v254[3];
        swift_bridgeObjectRetain();
        v236 = sub_24A3E1F9C();
        unint64_t result = sub_24A3FCBA4(v251, v257, v236 & 1, v234, v235, (uint64_t)&v300);
        v238 = v301;
        v239 = v247;
        *v247 = v300;
        v239[1] = v238;
        *((void *)v239 + 4) = v302;
        return result;
      }
      uint64_t v56 = *(void *)(v274 + 8 * v47);
      if (!v56)
      {
        os_log_type_t v57 = v47 + 1;
        if (v47 + 1 >= v277) {
          goto LABEL_248;
        }
        uint64_t v56 = *(void *)(v274 + 8 * v57);
        if (!v56)
        {
          os_log_type_t v57 = v47 + 2;
          if (v47 + 2 >= v277) {
            goto LABEL_248;
          }
          uint64_t v56 = *(void *)(v274 + 8 * v57);
          if (!v56)
          {
            os_log_type_t v57 = v47 + 3;
            if (v47 + 3 >= v277) {
              goto LABEL_248;
            }
            uint64_t v56 = *(void *)(v274 + 8 * v57);
            if (!v56)
            {
              while (1)
              {
                unint64_t v47 = v57 + 1;
                if (__OFADD__(v57, 1)) {
                  goto LABEL_256;
                }
                if (v47 >= v277) {
                  goto LABEL_248;
                }
                uint64_t v56 = *(void *)(v274 + 8 * v47);
                ++v57;
                if (v56) {
                  goto LABEL_21;
                }
              }
            }
          }
        }
        unint64_t v47 = v57;
      }
LABEL_21:
      uint64_t v46 = (v56 - 1) & v56;
      id v54 = __clz(__rbit64(v56)) + (v47 << 6);
    }
    BOOL v58 = *(void *)(v40 + 56) + 32 * v54;
    uint64_t v59 = *(void *)(v58 + 8);
    v293 = *(void *)v58;
    uint64_t v60 = *(void *)(v58 + 16);
    uint64_t v61 = *(unsigned __int8 *)(v58 + 24);
    v296 = v60;
    if (!v61) {
      break;
    }
    if (v61 != 1) {
      continue;
    }
    v282 = v46;
    v283 = v47;
    uint64_t v62 = v293;
    sub_24A3E30F8(v293, v59, v60, 1);
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_24A42508C();
    swift_beginAccess();
    if ((*v63 & 1) == 0)
    {
      sub_24A3E315C(v62, v59, v60, 1);
      id v49 = v62;
      uint64_t v50 = v59;
LABEL_5:
      uint64_t v51 = v60;
      goto LABEL_6;
    }
    v278 = v59;
    uint64_t v64 = *(void *)(v62 + 16);
    if (!v64)
    {
      v174 = v278;
      sub_24A3E315C(v62, v278, v60, 1);
      id v49 = v62;
      uint64_t v50 = v174;
      goto LABEL_5;
    }
    unint64_t v65 = 0;
    *(void *)&v295 = v62 + 32;
    while (1)
    {
      uint64_t v66 = v295 + 72 * v65;
      unint64_t v67 = *(void **)v66;
      int64_t v68 = *(void *)(*(void *)v66 + 16);
      if (!v68) {
        goto LABEL_27;
      }
      id v69 = *(double *)(v66 + 8);
      uint64_t v70 = *(unsigned __int8 *)(v66 + 16);
      uint64_t v71 = *(void *)(v66 + 24);
      v280 = *(void *)(v66 + 32);
      LODWORD(v281) = *(unsigned __int8 *)(v66 + 40);
      uint64_t v72 = *(void *)(v66 + 48);
      v291 = *(void *)(v66 + 56);
      v292 = v72;
      LODWORD(v294) = *(unsigned __int8 *)(v66 + 64);
      unint64_t v73 = v67[4] == v39 && v67[5] == v45;
      if (v73 || (sub_24A464A78() & 1) != 0) {
        break;
      }
      if (v68 != 1)
      {
        int64_t v74 = v67[6] == v39 && v67[7] == v45;
        if (v74 || (sub_24A464A78() & 1) != 0) {
          break;
        }
        if (v68 != 2)
        {
          unint64_t v75 = v67 + 9;
          BOOL v76 = 2;
          do
          {
            int64_t v77 = v76 + 1;
            if (__OFADD__(v76, 1)) {
              goto LABEL_250;
            }
            if (*(v75 - 1) == v290 && *v75 == v297)
            {
              unint64_t v39 = v290;
              goto LABEL_200;
            }
            if (sub_24A464A78())
            {
              unint64_t v39 = v290;
              goto LABEL_200;
            }
            v75 += 2;
            ++v76;
          }
          while (v77 != v68);
        }
      }
LABEL_27:
      ++v65;
      uint64_t v37 = v285;
      unint64_t v39 = v290;
      uint64_t v45 = v297;
      if (v65 == v64)
      {
        v195 = v293;
        v196 = v278;
        v197 = v296;
        sub_24A3E315C(v293, v278, v296, 1);
        sub_24A3E315C(v195, v196, v197, 1);
        goto LABEL_190;
      }
    }
LABEL_200:
    v266 = v71;
    if (v70) {
      id v69 = 1.0;
    }
    v176 = v273[3];
    v175 = v273[4];
    __swift_project_boxed_opaque_existential_1(v273, v176);
    *(void *)&v295 = *(void *)(v175 + 24);
    swift_bridgeObjectRetain();
    v177 = v280;
    v178 = v281;
    sub_24A406104(v71, v280, v281);
    sub_24A40611C();
    if (((double (*)(uint64_t, uint64_t))v295)(v176, v175) >= v69)
    {
      swift_bridgeObjectRelease();
      sub_24A406128(v266, v177, v178);
      sub_24A406140();
      v186 = v293;
      v187 = v278;
      v188 = v296;
      sub_24A3E315C(v293, v278, v296, 1);
      sub_24A3E315C(v186, v187, v188, 1);
      uint64_t v40 = v262;
      uint64_t v45 = v297;
      uint64_t v46 = v282;
      unint64_t v47 = v283;
      uint64_t v37 = v285;
      continue;
    }
    v179 = v254[4];
    v263 = sub_24A406E9C(v266, v177, v178, v179);
    uint64_t v40 = v262;
    uint64_t v45 = v297;
    if ((v294 & 1) == 0)
    {
      v185 = swift_bridgeObjectRetain();
      uint64_t v37 = v285;
      goto LABEL_227;
    }
    v180 = v291;
    uint64_t v37 = v285;
    if (!*(void *)(v179 + 16)) {
      goto LABEL_226;
    }
    swift_bridgeObjectRetain();
    v181 = sub_24A3E1488(v292, v180);
    if ((v182 & 1) == 0)
    {
      sub_24A406140();
LABEL_226:
      v185 = MEMORY[0x263F8EE78];
LABEL_227:
      swift_bridgeObjectRelease();
      v184 = v185;
      goto LABEL_228;
    }
    v183 = *(void *)(v179 + 56) + 16 * v181;
    v184 = *(void *)v183;
    LODWORD(v295) = *(unsigned __int8 *)(v183 + 8);
    swift_bridgeObjectRetain();
    sub_24A406140();
    swift_bridgeObjectRelease();
    v185 = MEMORY[0x263F8EE78];
    uint64_t v45 = v297;
    if (v295 != 1) {
      goto LABEL_227;
    }
LABEL_228:
    sub_24A406128(v71, v280, v281);
    sub_24A406140();
    v212 = *(void *)(v184 + 16);
    if (v212)
    {
      *(void *)&v300 = MEMORY[0x263F8EE78];
      sub_24A405ACC(0, v212, 0);
      v213 = v300;
      v292 = v184;
      v214 = (_OWORD *)(v184 + 64);
      do
      {
        v216 = *((void *)v214 - 4);
        v215 = *((void *)v214 - 3);
        LODWORD(v294) = *((unsigned __int8 *)v214 - 16);
        v217 = *((void *)v214 - 1);
        v295 = *v214;
        *(void *)&v300 = v213;
        v219 = *(void *)(v213 + 16);
        v218 = *(void *)(v213 + 24);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v219 >= v218 >> 1)
        {
          sub_24A405ACC(v218 > 1, v219 + 1, 1);
          v213 = v300;
        }
        v214 += 3;
        *(void *)(v213 + 16) = v219 + 1;
        v220 = v213 + (v219 << 6);
        *(void *)(v220 + 32) = v216;
        *(void *)(v220 + 40) = v215;
        *(void *)(v220 + 48) = v216;
        *(void *)(v220 + 56) = v215;
        *(unsigned char *)(v220 + 64) = v294;
        *(void *)(v220 + 72) = v217;
        *(_OWORD *)(v220 + 80) = v295;
        --v212;
      }
      while (v212);
      swift_bridgeObjectRelease();
      sub_24A3E315C(v293, v278, v296, 1);
      uint64_t v37 = v285;
      unint64_t v39 = v290;
      uint64_t v40 = v262;
      uint64_t v45 = v297;
      if (*(void *)(v213 + 16))
      {
LABEL_234:
        __swift_instantiateConcreteTypeFromMangledName(&qword_269793B00);
        v221 = sub_24A464928();
        goto LABEL_237;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_24A3E315C(v293, v278, v296, 1);
      if (*(void *)(MEMORY[0x263F8EE78] + 16)) {
        goto LABEL_234;
      }
    }
    v221 = MEMORY[0x263F8EE80];
LABEL_237:
    *(void *)&v300 = v221;
    v222 = swift_bridgeObjectRetain();
    v223 = v255;
    sub_24A4041E0(v222, 1, &v300);
    v255 = v223;
    if (v223) {
      goto LABEL_259;
    }
    swift_bridgeObjectRelease();
    v225 = nullsub_1(v263, v300, v224);
    v226 = v256;
    *v256 = v227;
    v226[1] = v225;
    v226[2] = v228;
    swift_storeEnumTagMultiPayload();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      v229 = v257;
    }
    else {
      v229 = sub_24A403C08(0, *(void *)(v257 + 16) + 1, 1, v257);
    }
    v230 = v296;
    v232 = *(void *)(v229 + 16);
    v231 = *(void *)(v229 + 24);
    if (v232 >= v231 >> 1) {
      v229 = sub_24A403C08(v231 > 1, v232 + 1, 1, v229);
    }
    *(void *)(v229 + 16) = v232 + 1;
    v233 = (*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80);
    v257 = v229;
    sub_24A408680((uint64_t)v256, v229 + v233 + *(void *)(v252 + 72) * v232, type metadata accessor for SessionConfiguration.Backend);
    id v49 = v293;
    uint64_t v50 = v278;
    uint64_t v51 = v230;
LABEL_6:
    id v52 = 1;
LABEL_7:
    sub_24A3E315C(v49, v50, v51, v52);
LABEL_8:
    uint64_t v46 = v282;
    unint64_t v47 = v283;
  }
  *(void *)&v295 = *(void *)(v60 + 16);
  if (!(void)v295) {
    goto LABEL_9;
  }
  v282 = v46;
  v283 = v47;
  int64_t v79 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v54);
  uint64_t v80 = v79[1];
  v258 = *v79;
  v263 = v80;
  swift_bridgeObjectRetain();
  v278 = v59;
  sub_24A3E30F8(v293, v59, v60, 0);
  swift_bridgeObjectRetain();
  if (*(void *)(v60 + 16))
  {
    unint64_t v81 = 0;
    v294 = v60 + 32;
    while (1)
    {
      uint64_t v82 = v294 + 200 * v81;
      v300 = *(_OWORD *)v82;
      uint64_t v83 = *(_OWORD *)(v82 + 16);
      uint64_t v84 = *(_OWORD *)(v82 + 32);
      unint64_t v85 = *(_OWORD *)(v82 + 64);
      v303 = *(_OWORD *)(v82 + 48);
      v304 = v85;
      v301 = v83;
      v302 = v84;
      os_log_type_t v86 = *(_OWORD *)(v82 + 80);
      uint64_t v87 = *(_OWORD *)(v82 + 96);
      uint64_t v88 = *(_OWORD *)(v82 + 128);
      v307 = *(_OWORD *)(v82 + 112);
      v308 = v88;
      v305 = v86;
      v306 = v87;
      unint64_t v89 = *(_OWORD *)(v82 + 144);
      os_log_type_t v90 = *(_OWORD *)(v82 + 160);
      uint64_t v91 = *(_OWORD *)(v82 + 176);
      v312 = *(void *)(v82 + 192);
      v310 = v90;
      v311 = v91;
      v309 = v89;
      if (__PAIR128__(v45, v39) != v300 && (sub_24A464A78() & 1) == 0) {
        goto LABEL_164;
      }
      uint64_t v92 = BYTE8(v311);
      if (BYTE8(v311) == 2)
      {
        sub_24A4077F4((uint64_t)&v300);
        uint64_t v93 = 0;
      }
      else
      {
        sub_24A4077F4((uint64_t)&v300);
        uint64_t v93 = sub_24A41294C(v92 & 1);
      }
      uint64_t v94 = BYTE9(v311) != 2 && sub_24A41294C(BYTE9(v311) & 1);
      if (((sub_24A4255B0() | v93) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_24A4078CC((uint64_t)&v300);
        if (qword_269796B30 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v284, (uint64_t)qword_26979A670);
        uint64_t v167 = v263;
        swift_bridgeObjectRetain();
        v168 = sub_24A463FF8();
        uint64_t v169 = sub_24A4645A8();
        v170 = os_log_type_enabled(v168, v169);
        uint64_t v40 = v262;
        if (v170)
        {
          v171 = (uint8_t *)swift_slowAlloc();
          v172 = swift_slowAlloc();
          v299 = v172;
          *(_DWORD *)v171 = v250;
          swift_bridgeObjectRetain();
          v298 = sub_24A3E0E30(v258, v167, &v299);
          unint64_t v39 = v290;
          sub_24A4646E8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24A3DA000, v168, v169, "skipping %{public}s: dnu disabled", v171, 0xCu);
          swift_arrayDestroy();
          uint64_t v173 = v172;
          uint64_t v45 = v297;
          MEMORY[0x24C5C5D60](v173, -1, -1);
          MEMORY[0x24C5C5D60](v171, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        id v49 = v293;
        uint64_t v50 = v278;
        uint64_t v51 = v296;
        id v52 = 0;
        goto LABEL_7;
      }
      LODWORD(v291) = v94;
      LODWORD(v292) = v92;
      uint64_t v95 = (void *)sub_24A464248();
      uint64_t v96 = MGCopyAnswer();

      if (!v96) {
        goto LABEL_258;
      }
      os_log_type_t v97 = (void *)*((void *)&v304 + 1);
      type metadata accessor for CFString();
      uint64_t v98 = (void *)swift_dynamicCastUnknownClassUnconditional();
      uint64_t v99 = sub_24A464278();
      uint64_t v101 = v100;

      if (!v97) {
        break;
      }
      id v102 = v97[2];
      if (!v102) {
        goto LABEL_161;
      }
      if (v97[4] == v99 && v97[5] == v101 || (sub_24A464A78() & 1) != 0) {
        break;
      }
      uint64_t v45 = v297;
      if (v102 != 1)
      {
        if (v97[6] == v99 && v97[7] == v101 || (sub_24A464A78() & 1) != 0) {
          break;
        }
        if (v102 != 2)
        {
          uint64_t v155 = v97 + 9;
          unint64_t v156 = 2;
          while (1)
          {
            uint64_t v157 = v156 + 1;
            if (__OFADD__(v156, 1)) {
              goto LABEL_254;
            }
            v158 = *(v155 - 1) == v99 && *v155 == v101;
            if (v158 || (sub_24A464A78() & 1) != 0) {
              goto LABEL_68;
            }
            v155 += 2;
            ++v156;
            if (v157 == v102) {
              goto LABEL_161;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_24A4078CC((uint64_t)&v300);
      uint64_t v60 = v296;
LABEL_164:
      if (++v81 == (void)v295)
      {
        swift_bridgeObjectRelease();
        sub_24A3E315C(v293, v278, v60, 0);
        swift_bridgeObjectRelease();
LABEL_190:
        uint64_t v40 = v262;
        goto LABEL_8;
      }
      if (v81 >= *(void *)(v60 + 16)) {
        goto LABEL_249;
      }
    }
LABEL_68:
    uint64_t v103 = (void *)v304;
    if ((void)v304)
    {
      uint64_t v104 = *(void *)(v304 + 16);
      if (v104)
      {
        uint64_t v105 = *(void *)(v304 + 32) == v99 && *(void *)(v304 + 40) == v101;
        if (v105 || (sub_24A464A78() & 1) != 0) {
          goto LABEL_161;
        }
        if (v104 != 1)
        {
          if (v103[6] == v99 && v103[7] == v101 || (sub_24A464A78() & 1) != 0) {
            goto LABEL_161;
          }
          if (v104 != 2)
          {
            swift_bridgeObjectRetain();
            uint64_t v159 = v103 + 9;
            v160 = 2;
            while (1)
            {
              uint64_t v161 = v160 + 1;
              if (__OFADD__(v160, 1)) {
                goto LABEL_255;
              }
              uint64_t v162 = *(v159 - 1) == v99 && *v159 == v101;
              if (v162 || (sub_24A464A78() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                unint64_t v39 = v290;
                uint64_t v37 = v285;
                goto LABEL_161;
              }
              v159 += 2;
              ++v160;
              if (v161 == v104)
              {
                swift_bridgeObjectRelease();
                unint64_t v39 = v290;
                uint64_t v37 = v285;
                break;
              }
            }
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v106 = (void *)v311;
    if (!(void)v311)
    {
LABEL_84:
      int64_t v115 = v270;
      sub_24A463F18();
      uint64_t v116 = v271;
      sub_24A463F48();
      (*v287)(v115, v288);
      BOOL v117 = (uint64_t)v269;
      sub_24A463F28();
      (*v286)(v116, v289);
      uint64_t v118 = sub_24A463F08();
      uint64_t v119 = *(void *)(v118 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118) == 1)
      {
        sub_24A3E2068(v117, &qword_269793AF8);
      }
      else
      {
        int64_t v120 = v312;
        uint64_t v121 = sub_24A463EF8();
        uint64_t v123 = v122;
        uint64_t v124 = v117;
        uint64_t v125 = v120;
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v124, v118);
        if (v120)
        {
          v280 = *(void *)(v120 + 16);
          if (v280)
          {
            v281 = v120 + 32;
            swift_bridgeObjectRetain();
            uint64_t v126 = 0;
            v266 = v120;
            while (v126 < *(void *)(v125 + 16))
            {
              uint64_t v127 = (double *)(v281 + 16 * v126);
              unint64_t v128 = *(void **)v127;
              uint64_t v129 = *(void *)(*(void *)v127 + 16);
              if (v129)
              {
                uint64_t v130 = v127[1];
                uint64_t v131 = v128[4];
                v132 = v128[5];
                swift_bridgeObjectRetain();
                if (v131 == v121 && v132 == v123) {
                  goto LABEL_168;
                }
                unint64_t v134 = sub_24A464A78();
                swift_bridgeObjectRetain_n();
                if (v134) {
                  goto LABEL_167;
                }
                if (v129 != 1)
                {
                  uint64_t v135 = v128[6] == v121 && v128[7] == v123;
                  if (v135 || (sub_24A464A78() & 1) != 0)
                  {
LABEL_167:
                    swift_bridgeObjectRelease_n();
LABEL_168:
                    uint64_t v140 = v293;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    goto LABEL_125;
                  }
                  if (v129 != 2)
                  {
                    if (v128[8] == v121 && v128[9] == v123 || (sub_24A464A78() & 1) != 0) {
                      goto LABEL_167;
                    }
                    if (v129 != 3)
                    {
                      uint64_t v136 = v128 + 11;
                      unint64_t v137 = 3;
                      do
                      {
                        v138 = v137 + 1;
                        if (__OFADD__(v137, 1)) {
                          goto LABEL_252;
                        }
                        unint64_t v139 = *(v136 - 1) == v121 && *v136 == v123;
                        if (v139 || (sub_24A464A78() & 1) != 0) {
                          goto LABEL_167;
                        }
                        v136 += 2;
                        ++v137;
                      }
                      while (v138 != v129);
                    }
                  }
                }
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                uint64_t v125 = v266;
              }
              if (++v126 == v280)
              {
                swift_bridgeObjectRelease();
                goto LABEL_120;
              }
            }
            goto LABEL_251;
          }
        }
LABEL_120:
        swift_bridgeObjectRelease();
      }
      if (BYTE8(v302)) {
        uint64_t v130 = 1.0;
      }
      else {
        uint64_t v130 = *(double *)&v302;
      }
      uint64_t v140 = v293;
LABEL_125:
      uint64_t v141 = v273[3];
      uint64_t v142 = v273[4];
      __swift_project_boxed_opaque_existential_1(v273, v141);
      if ((*(double (**)(uint64_t, uint64_t))(v142 + 24))(v141, v142) >= v130)
      {
        swift_bridgeObjectRelease();
        sub_24A4078CC((uint64_t)&v300);
        sub_24A3E315C(v140, v278, v296, 0);
        swift_bridgeObjectRelease();
        uint64_t v37 = v285;
        unint64_t v39 = v290;
        uint64_t v40 = v262;
        uint64_t v45 = v297;
        goto LABEL_8;
      }
      uint64_t v143 = BYTE9(v310);
      unint64_t v144 = v308;
      uint64_t v145 = v309;
      uint64_t v146 = v301;
      uint64_t v147 = (uint64_t)v268;
      sub_24A463D08();
      if ((*v267)(v147, 1, v272) != 1)
      {
        swift_bridgeObjectRelease();
        v189 = v248;
        v190 = v272;
        (*v243)(v248, v147, v272);
        v191 = v254[4];
        sub_24A40611C();
        v192 = sub_24A406E9C(v144, *((uint64_t *)&v144 + 1), v145, v191);
        sub_24A406140();
        (*v242)(v249, v189, v190);
        v193 = sub_24A41294C((v143 == 2) | v143 & 1);
        v194 = v292 != 2 && sub_24A41294C(v292 & 1);
        uint64_t v37 = v285;
        unint64_t v39 = v290;
        uint64_t v40 = v262;
        v198 = v263;
        v199 = v291;
        sub_24A4078CC((uint64_t)&v300);
        v200 = v193;
        v201 = v244;
        sub_24A3FCAD4(v258, v198, v249, v192, v200, v194, v244, v130);
        if (v199)
        {
          sub_24A4079FC(v201, v245);
          swift_storeEnumTagMultiPayload();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = v297;
          if (isUniquelyReferenced_nonNull_native) {
            v203 = v257;
          }
          else {
            v203 = sub_24A403C08(0, *(void *)(v257 + 16) + 1, 1, v257);
          }
          v205 = *(void *)(v203 + 16);
          v204 = *(void *)(v203 + 24);
          v206 = v205 + 1;
          if (v205 >= v204 >> 1)
          {
            v207 = sub_24A403C08(v204 > 1, v205 + 1, 1, v203);
            v208 = v245;
            v257 = v207;
          }
          else
          {
            v257 = v203;
            v207 = v203;
            v208 = v245;
          }
        }
        else
        {
          sub_24A4079FC(v201, v246);
          swift_storeEnumTagMultiPayload();
          v209 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = v297;
          if (v209) {
            v210 = v251;
          }
          else {
            v210 = sub_24A403C08(0, *(void *)(v251 + 16) + 1, 1, v251);
          }
          v205 = *(void *)(v210 + 16);
          v211 = *(void *)(v210 + 24);
          v206 = v205 + 1;
          if (v205 >= v211 >> 1)
          {
            v207 = sub_24A403C08(v211 > 1, v205 + 1, 1, v210);
            v208 = v246;
            v251 = v207;
          }
          else
          {
            v251 = v210;
            v207 = v210;
            v208 = v246;
          }
        }
        *(void *)(v207 + 16) = v206;
        sub_24A408680(v208, v207+ ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80))+ *(void *)(v252 + 72) * v205, type metadata accessor for SessionConfiguration.Backend);
        sub_24A3E315C(v293, v278, v296, 0);
        sub_24A407A60(v201);
        (*v241)(v248, v272);
        goto LABEL_8;
      }
      sub_24A3E2068(v147, &qword_269793700);
      if (qword_269796B30 != -1) {
        swift_once();
      }
      uint64_t v148 = v284;
      v149 = __swift_project_value_buffer(v284, (uint64_t)qword_26979A670);
      uint64_t v150 = v279;
      (*v265)(v279, v149, v148);
      sub_24A4077F4((uint64_t)&v300);
      v151 = sub_24A463FF8();
      uint64_t v152 = sub_24A4645B8();
      if (os_log_type_enabled(v151, v152))
      {
        id v153 = (uint8_t *)swift_slowAlloc();
        uint64_t v154 = swift_slowAlloc();
        v299 = v154;
        *(_DWORD *)id v153 = v260;
        swift_bridgeObjectRetain();
        v298 = sub_24A3E0E30(v146, *((unint64_t *)&v146 + 1), &v299);
        sub_24A4646E8();
        swift_bridgeObjectRelease();
        sub_24A4078CC((uint64_t)&v300);
        sub_24A4078CC((uint64_t)&v300);
        _os_log_impl(&dword_24A3DA000, v151, v152, "invalid URL \"%s\"", v153, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v154, -1, -1);
        MEMORY[0x24C5C5D60](v153, -1, -1);

        (*v264)(v279, v284);
      }
      else
      {
        sub_24A4078CC((uint64_t)&v300);
        sub_24A4078CC((uint64_t)&v300);

        (*v264)(v150, v284);
      }
      uint64_t v37 = v285;
      unint64_t v39 = v290;
      goto LABEL_163;
    }
    swift_bridgeObjectRetain();
    uint64_t v107 = v275;
    sub_24A463F18();
    id v108 = v276;
    sub_24A463F48();
    (*v287)(v107, v288);
    sub_24A463F28();
    (*v286)(v108, v289);
    uint64_t v109 = sub_24A463F08();
    BOOL v110 = *(void *)(v109 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v37, 1, v109) == 1)
    {
      swift_bridgeObjectRelease();
      sub_24A4078CC((uint64_t)&v300);
      sub_24A3E2068(v37, &qword_269793AF8);
LABEL_163:
      uint64_t v60 = v296;
      uint64_t v45 = v297;
      goto LABEL_164;
    }
    uint64_t v111 = sub_24A463EF8();
    uint64_t v113 = v112;
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v37, v109);
    unsigned int v114 = v106[2];
    if (v114)
    {
      if (v106[4] == v111 && v106[5] == v113 || (sub_24A464A78() & 1) != 0) {
        goto LABEL_83;
      }
      if (v114 != 1)
      {
        if (v106[6] == v111 && v106[7] == v113 || (sub_24A464A78() & 1) != 0)
        {
LABEL_83:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
        if (v114 != 2)
        {
          swift_bridgeObjectRetain();
          uint64_t v163 = v106 + 9;
          uint64_t v164 = 2;
          while (1)
          {
            uint64_t v165 = v164 + 1;
            if (__OFADD__(v164, 1)) {
              goto LABEL_257;
            }
            v166 = *(v163 - 1) == v111 && *v163 == v113;
            if (v166 || (sub_24A464A78() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_84;
            }
            v163 += 2;
            ++v164;
            if (v165 == v114)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              unint64_t v39 = v290;
              uint64_t v37 = v285;
              goto LABEL_162;
            }
          }
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_161:
    swift_bridgeObjectRelease();
LABEL_162:
    sub_24A4078CC((uint64_t)&v300);
    goto LABEL_163;
  }
LABEL_249:
  __break(1u);
LABEL_250:
  __break(1u);
LABEL_251:
  __break(1u);
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  __break(1u);
LABEL_255:
  __break(1u);
LABEL_256:
  __break(1u);
LABEL_257:
  __break(1u);
LABEL_258:
  __break(1u);
LABEL_259:
  unint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_24A4038D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793B68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A40614C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24A4039E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793B60);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24A40657C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24A403AE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793BB8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24A406D8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A403C08(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B98);
  uint64_t v10 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24A4648D8();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24A408528(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void sub_24A403E70(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  unsigned __int8 v7 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  unint64_t v10 = sub_24A404538(v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v11 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_24;
  }
  unint64_t v15 = v10;
  char v16 = v11;
  uint64_t v17 = v9[3];
  swift_bridgeObjectRetain();
  if (v17 >= v14)
  {
    if (a2)
    {
      if (v16) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24A4045A8();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(unsigned char *)(v22[6] + v15) = v7;
    *(void *)(v22[7] + 8 * v15) = v8;
    uint64_t v23 = v22[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v22[2] = v25;
    uint64_t v26 = v4 - 1;
    if (v4 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v27 = (void *)(a1 + 56);
    while (1)
    {
      uint64_t v29 = *v27;
      unsigned __int8 v28 = *((unsigned char *)v27 - 8);
      uint64_t v30 = (void *)*a3;
      unint64_t v31 = sub_24A404538(v28);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      unint64_t v36 = v31;
      char v37 = v32;
      uint64_t v38 = v30[3];
      swift_bridgeObjectRetain();
      if (v38 < v35)
      {
        sub_24A40494C(v35, 1);
        unint64_t v39 = sub_24A404538(v28);
        if ((v37 & 1) != (v40 & 1)) {
          goto LABEL_26;
        }
        unint64_t v36 = v39;
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v41 = (void *)*a3;
      *(void *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      *(unsigned char *)(v41[6] + v36) = v28;
      *(void *)(v41[7] + 8 * v36) = v29;
      uint64_t v42 = v41[2];
      BOOL v24 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v24) {
        goto LABEL_25;
      }
      v41[2] = v43;
      v27 += 2;
      if (!--v26) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_24A40494C(v14, a2 & 1);
  unint64_t v18 = sub_24A404538(v7);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_24A464B28();
  __break(1u);
LABEL_27:
  sub_24A4647E8();
  sub_24A464358();
  sub_24A4648C8();
  sub_24A464358();
  sub_24A4648E8();
  __break(1u);
}

void sub_24A4041E0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v31 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v30 = v3;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_24A464B28();
      __break(1u);
      goto LABEL_24;
    }
    long long v36 = *(_OWORD *)(v3 + v5 + 80);
    char v7 = *(unsigned char *)(v3 + v5 + 64);
    uint64_t v8 = *(void *)(v3 + v5 + 72);
    uint64_t v10 = *(void *)(v3 + v5 + 48);
    uint64_t v9 = *(void *)(v3 + v5 + 56);
    uint64_t v12 = *(void *)(v3 + v5 + 32);
    uint64_t v11 = *(void *)(v3 + v5 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_18;
    }
    uint64_t v32 = v10;
    uint64_t v33 = v9;
    BOOL v13 = (void *)*a3;
    unint64_t v15 = sub_24A3E1488(v12, v11);
    uint64_t v16 = v13[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_21;
    }
    char v19 = v14;
    if (v13[3] < v18) {
      break;
    }
    if (a2)
    {
      if (v14) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_24A40474C();
      if (v19) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v23 = (uint64_t *)(v22[6] + 16 * v15);
    *uint64_t v23 = v12;
    v23[1] = v11;
    uint64_t v24 = v22[7] + 48 * v15;
    *(void *)uint64_t v24 = v32;
    *(void *)(v24 + 8) = v33;
    *(unsigned char *)(v24 + 16) = v7;
    *(void *)(v24 + 24) = v8;
    *(_OWORD *)(v24 + 32) = v36;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_22;
    }
    ++v6;
    v22[2] = v27;
    v5 += 64;
    a2 = 1;
    uint64_t v3 = v30;
    if (v31 == v6) {
      goto LABEL_18;
    }
  }
  sub_24A404C1C(v18, a2 & 1);
  unint64_t v20 = sub_24A3E1488(v12, v11);
  if ((v19 & 1) != (v21 & 1)) {
    goto LABEL_23;
  }
  unint64_t v15 = v20;
  if ((v19 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  unsigned __int8 v28 = (void *)swift_allocError();
  swift_willThrow();
  id v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_24A4647E8();
  sub_24A464358();
  sub_24A4648C8();
  sub_24A464358();
  sub_24A4648E8();
  __break(1u);
}

unint64_t sub_24A404538(unsigned __int8 a1)
{
  sub_24A464B98();
  sub_24A464BA8();
  uint64_t v2 = sub_24A464BC8();
  return sub_24A404F7C(a1, v2);
}

void *sub_24A4045A8()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24A40474C()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    BOOL v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 32);
    *BOOL v26 = v19;
    v26[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(unsigned char *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    *(_OWORD *)(v28 + 32) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A40494C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B58);
  uint64_t result = sub_24A464918();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_24A464B98();
      sub_24A464BA8();
      uint64_t result = sub_24A464BC8();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24A404C1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B00);
  char v40 = a2;
  uint64_t v6 = sub_24A464918();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 48 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      uint64_t v41 = *(void *)(v32 + 24);
      long long v42 = *(_OWORD *)(v32 + 32);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24A464B98();
      sub_24A464318();
      uint64_t result = sub_24A464BC8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      *(void *)(v19 + 24) = v41;
      *(_OWORD *)(v19 + 32) = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_24A404F7C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_24A40501C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_24A464B98();
  swift_bridgeObjectRetain();
  sub_24A464318();
  uint64_t v8 = sub_24A464BC8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_24A464A78() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_24A464A78() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24A4054AC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24A4051CC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793BB0);
  uint64_t v3 = sub_24A4647B8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_24A464B98();
      sub_24A464318();
      uint64_t result = sub_24A464BC8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_24A4054AC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_24A4051CC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_24A405648();
      goto LABEL_22;
    }
    sub_24A4057FC();
  }
  uint64_t v11 = *v4;
  sub_24A464B98();
  sub_24A464318();
  uint64_t result = sub_24A464BC8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_24A464A78(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24A464B18();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_24A464A78();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_24A405648()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793BB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A4647A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24A4057FC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793BB0);
  uint64_t v3 = sub_24A4647B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_24A464B98();
    swift_bridgeObjectRetain();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24A405AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A405AEC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24A405ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A405D2C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24A405AEC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793900);
  uint64_t v10 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  BOOL v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A405D2C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793BA0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  int64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793BA8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A405EB8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24A463AF8();
  if (!result || (uint64_t result = sub_24A463B28(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24A463B18();
      sub_24A464198();
      sub_24A406068((unint64_t *)&qword_269793AD8, MEMORY[0x263F047F8]);
      return sub_24A464148();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24A405F98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_24A3F948C(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_24A406030(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

uint64_t sub_24A406054(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24A3E8D0C(a1, a2);
  }
  return a1;
}

uint64_t sub_24A406068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A4060B0()
{
  unint64_t result = qword_269796B38[0];
  if (!qword_269796B38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269796B38);
  }
  return result;
}

uint64_t sub_24A406104(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_24A40611C();
  }
  return result;
}

uint64_t sub_24A40611C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A406128(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_24A406140();
  }
  return result;
}

uint64_t sub_24A406140()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A40614C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793B70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A406258(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_24A464A78() & 1) != 0) {
    return 4;
  }
  if (a1 == 0x5F68736572666572 && a2 == 0xED0000656C637963 || (sub_24A464A78() & 1) != 0) {
    return 5;
  }
  if (a1 == 0x765F646572616873 && a2 == 0xEC00000073656C61 || (sub_24A464A78() & 1) != 0) {
    return 6;
  }
  if (a1 == 0x6D706F6C65766564 && a2 == 0xEB00000000746E65)
  {
    uint64_t v4 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    return v4;
  }
  char v6 = sub_24A464A78();
  swift_bridgeObjectRelease();
  uint64_t v4 = 0;
  if (v6) {
    return v4;
  }
  if (a1 == 0x6E695F656C707061 && a2 == 0xEE006C616E726574)
  {
    uint64_t v4 = 1;
    swift_bridgeObjectRelease();
    return v4;
  }
  char v7 = sub_24A464A78();
  swift_bridgeObjectRelease();
  if (v7) {
    return 1;
  }
  if (a1 == 1684366707 && a2 == 0xE400000000000000)
  {
    uint64_t v4 = 2;
    swift_bridgeObjectRelease();
    return v4;
  }
  char v8 = sub_24A464A78();
  swift_bridgeObjectRelease();
  if (v8) {
    return 2;
  }
  uint64_t v4 = 3;
  if (a1 == 0x657361656C6572 && a2 == 0xE700000000000000) {
    goto LABEL_17;
  }
  char v9 = sub_24A464A78();
  swift_bridgeObjectRelease();
  if (v9) {
    return 3;
  }
  else {
    return 7;
  }
}

char *sub_24A40657C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A406664@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793B38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A408248();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v47) = 4;
  uint64_t v9 = sub_24A4649B8();
  uint64_t v12 = v11;
  uint64_t v40 = v9;
  LOBYTE(v47) = 5;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_24A464998();
  uint64_t v38 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B40);
  char v46 = 6;
  sub_24A408454(&qword_269793B48, &qword_269793B40, (void (*)(void))sub_24A40829C);
  sub_24A464988();
  uint64_t v39 = v47;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24A4649F8();
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v36 = a2;
  uint64_t v45 = v14;
  if (v14)
  {
    uint64_t v35 = v6;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = (char *)MEMORY[0x263F8EE78];
    uint64_t v43 = v13;
    uint64_t v44 = v5;
    while (1)
    {
      uint64_t v17 = *(unsigned __int8 *)(v13 + v15 + 32);
      int v18 = 1;
      char v19 = 0;
      int v20 = 0;
      switch(v17)
      {
        case 1:
          LOBYTE(v17) = (sub_24A464A78() & 1) == 0;
          goto LABEL_22;
        case 2:
          int v20 = 0;
          int v18 = 0;
          char v19 = 1;
          goto LABEL_12;
        case 3:
          char v19 = 0;
          int v20 = 1;
          goto LABEL_12;
        case 4:
          goto LABEL_12;
        case 5:
          char v19 = 0;
          int v20 = 0;
          int v18 = 0;
          goto LABEL_12;
        case 6:
          char v19 = 0;
          int v20 = 0;
          int v18 = 0;
LABEL_12:
          int v41 = v20;
          int v42 = v18;
          if (sub_24A464A78())
          {
            LOBYTE(v17) = 0;
LABEL_22:
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
          unsigned __int8 v21 = sub_24A464A78();
          if (v21) {
            LOBYTE(v17) = 1;
          }
          else {
            LOBYTE(v17) = 2;
          }
          if ((v21 | v19)) {
            goto LABEL_22;
          }
          if (sub_24A464A78())
          {
            LOBYTE(v17) = 2;
            goto LABEL_22;
          }
          if (v41 & v42)
          {
            LOBYTE(v17) = 3;
            goto LABEL_22;
          }
          char v24 = sub_24A464A78();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            uint64_t v5 = v44;
            goto LABEL_28;
          }
          LOBYTE(v17) = 3;
LABEL_23:
          uint64_t v5 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_24A4039E8(0, *((void *)v16 + 2) + 1, 1, v16);
          }
          unint64_t v23 = *((void *)v16 + 2);
          unint64_t v22 = *((void *)v16 + 3);
          if (v23 >= v22 >> 1) {
            uint64_t v16 = sub_24A4039E8((char *)(v22 > 1), v23 + 1, 1, v16);
          }
          *((void *)v16 + 2) = v23 + 1;
          v16[v23 + 32] = v17;
LABEL_28:
          uint64_t v13 = v43;
          if (v45 == ++v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v35;
            goto LABEL_34;
          }
          break;
        default:
          goto LABEL_22;
      }
    }
  }
  uint64_t v16 = (char *)MEMORY[0x263F8EE78];
LABEL_34:
  uint64_t v25 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v25);
  *(&v34 - 2) = (uint64_t)v8;
  unint64_t v26 = sub_24A401324((void (*)(uint64_t *__return_ptr, char *))sub_24A4082F0, (uint64_t)(&v34 - 4), (uint64_t)v16);
  swift_bridgeObjectRelease();
  if (v26[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793B58);
    uint64_t v27 = sub_24A464928();
  }
  else
  {
    uint64_t v27 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = v36;
  uint64_t v47 = v27;
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_24A403E70(v29, 1, &v47);
  swift_bridgeObjectRelease();
  uint64_t v30 = v47;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_release();
  uint64_t v31 = v39;
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v28 = v40;
  *(void *)(v28 + 8) = v32;
  char v33 = BYTE4(v37);
  *(_DWORD *)(v28 + 16) = v37;
  *(unsigned char *)(v28 + 20) = v33 & 1;
  *(void *)(v28 + 24) = v31;
  *(void *)(v28 + 32) = v30;
  return result;
}

uint64_t sub_24A406D8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793BC0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A406E9C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v8 = ~a3;
  uint64_t v78 = type metadata accessor for ServiceEventValue();
  uint64_t v9 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v11 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v8) {
    goto LABEL_9;
  }
  if ((a3 & 1) == 0)
  {
    sub_24A40611C();
    goto LABEL_10;
  }
  if (!*(void *)(a4 + 16)) {
    goto LABEL_9;
  }
  sub_24A40611C();
  unint64_t v12 = sub_24A3E1488(a1, a2);
  if ((v13 & 1) == 0)
  {
    sub_24A406128(a1, a2, a3);
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(a4 + 56) + 16 * v12;
  uint64_t v15 = *(void *)v14;
  int v16 = *(unsigned __int8 *)(v14 + 8);
  swift_bridgeObjectRetain();
  sub_24A406128(a1, a2, a3);
  if (v16)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    a1 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  a1 = v15;
LABEL_10:
  uint64_t result = (uint64_t)sub_24A403AE4(0, *(void *)(a1 + 16), 0, MEMORY[0x263F8EE78]);
  unint64_t v81 = (void *)result;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    unint64_t v19 = 0;
    uint64_t v20 = a1 + 32;
    unint64_t v65 = "Swift/NativeDictionary.swift";
    unint64_t v64 = 0x800000024A46AEF0;
    uint64_t v67 = v18;
    uint64_t v68 = a1;
    uint64_t v66 = a1 + 32;
    while (1)
    {
      if (v19 >= *(void *)(a1 + 16))
      {
        __break(1u);
        return result;
      }
      char v24 = (uint64_t *)(v20 + 72 * v19);
      if (!v24[5]) {
        break;
      }
LABEL_14:
      if (++v19 == v18)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v81;
      }
    }
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v69 = v19;
    uint64_t v70 = v27;
    uint64_t v29 = v24[4];
    uint64_t v30 = v24[6];
    uint64_t v31 = v24[7];
    uint64_t v32 = v24[8];
    swift_bridgeObjectRetain();
    uint64_t v76 = v26;
    swift_bridgeObjectRetain();
    uint64_t v71 = v28;
    swift_bridgeObjectRetain();
    uint64_t v72 = v29;
    uint64_t v73 = v32;
    uint64_t v74 = v31;
    uint64_t v75 = v30;
    sub_24A3FC224(v29, 0);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24A464568();
    uint64_t v80 = v33;
    uint64_t v34 = *(void *)(v25 + 16);
    uint64_t v77 = v25;
    if (v34)
    {
      uint64_t v35 = (uint64_t *)(v25 + 40);
      do
      {
        uint64_t v36 = *(v35 - 1);
        uint64_t v37 = *v35;
        swift_bridgeObjectRetain();
        sub_24A40501C(v79, v36, v37);
        swift_bridgeObjectRelease();
        v35 += 2;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      uint64_t v39 = v80;
    }
    else
    {
      uint64_t v39 = v33;
      swift_bridgeObjectRelease();
    }
    unint64_t v19 = v69;
    uint64_t v40 = v76;
    int64_t v41 = *(void *)(v76 + 16);
    if (v41)
    {
      uint64_t v69 = v39;
      v79[0] = MEMORY[0x263F8EE78];
      swift_bridgeObjectRetain();
      sub_24A405AAC(0, v41, 0);
      uint64_t v42 = v79[0];
      uint64_t v43 = (uint64_t *)(v40 + 40);
      do
      {
        uint64_t v44 = *v43;
        *uint64_t v11 = *(v43 - 1);
        v11[1] = v44;
        swift_storeEnumTagMultiPayload();
        v79[0] = v42;
        unint64_t v45 = *(void *)(v42 + 16);
        unint64_t v46 = *(void *)(v42 + 24);
        swift_bridgeObjectRetain();
        if (v45 >= v46 >> 1)
        {
          sub_24A405AAC(v46 > 1, v45 + 1, 1);
          uint64_t v42 = v79[0];
        }
        v43 += 2;
        *(void *)(v42 + 16) = v45 + 1;
        sub_24A408680((uint64_t)v11, v42+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v45, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      uint64_t v39 = v69;
    }
    else
    {
      uint64_t v42 = MEMORY[0x263F8EE78];
    }
    uint64_t v47 = nullsub_1(v39, v42, v38);
    uint64_t v49 = v48;
    uint64_t v50 = v70;
    uint64_t v51 = v71;
    if (v70 == 0x776F6C6C61 && v71 == 0xE500000000000000 || (sub_24A464A78() & 1) != 0)
    {
      uint64_t v52 = v47;
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for EventAllowFilter;
      id v54 = &off_26FE16BF0;
      goto LABEL_33;
    }
    if (v50 == 0x65766F6D6572 && v51 == 0xE600000000000000 || (sub_24A464A78() & 1) != 0)
    {
      uint64_t v52 = v47;
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for EventRemoveFilter;
      id v54 = &off_26FE16C08;
      goto LABEL_33;
    }
    if (v50 == 0x363532616873 && v51 == 0xE600000000000000 || (sub_24A464A78() & 1) != 0)
    {
      uint64_t v52 = v47;
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for EventSHA256KeyFilter;
      id v54 = &off_26FE16C20;
      goto LABEL_33;
    }
    if (v50 == 0x73696C6574696877 && v51 == 0xEF7365756C615674 || (sub_24A464A78() & 1) != 0)
    {
      uint64_t v52 = v47;
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for EventAllowValuesFilter;
      id v54 = &off_26FE16C38;
      goto LABEL_33;
    }
    if (v50 == 0x73696C6B63616C62 && v51 == 0xEF7365756C615674 || (sub_24A464A78() & 1) != 0)
    {
      uint64_t v52 = v47;
      swift_bridgeObjectRelease();
      uint64_t v53 = &type metadata for EventDenyValuesFilter;
      id v54 = &off_26FE16C50;
      goto LABEL_33;
    }
    if (v50 == 0xD000000000000018 && v51 == v64)
    {
      uint64_t v52 = v47;
    }
    else
    {
      if ((sub_24A464A78() & 1) == 0)
      {
        if (v50 == 0x646E65707061 && v51 == 0xE600000000000000 || (sub_24A464A78() & 1) != 0)
        {
          uint64_t v52 = v47;
          swift_bridgeObjectRelease();
          uint64_t v53 = &type metadata for EventAppendToKeyFilter;
          id v54 = &off_26FE16C80;
        }
        else
        {
          if (v50 != 0x646E6570657270 || v51 != 0xE700000000000000)
          {
            char v61 = sub_24A464A78();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_24A3FC288(v72, 0);
            if ((v61 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
              uint64_t v18 = v67;
              a1 = v68;
              uint64_t v20 = v66;
              goto LABEL_14;
            }
            uint64_t v52 = v47;
            uint64_t v53 = &type metadata for EventPrependToKeyFilter;
            id v54 = &off_26FE16C98;
LABEL_34:
            id v55 = (void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>))v54[1];
            v79[3] = (uint64_t)v53;
            v79[4] = (uint64_t)v54;
            boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v79);
            v55(v52, v49, boxed_opaque_existential_1);
            os_log_type_t v57 = v81;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24A403AE4(0, v57[2] + 1, 1, v57);
              os_log_type_t v57 = (void *)isUniquelyReferenced_nonNull_native;
              unint64_t v81 = (void *)isUniquelyReferenced_nonNull_native;
            }
            unint64_t v60 = v57[2];
            unint64_t v59 = v57[3];
            if (v60 >= v59 >> 1)
            {
              uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_24A403AE4((void *)(v59 > 1), v60 + 1, 1, v57);
              os_log_type_t v57 = (void *)isUniquelyReferenced_nonNull_native;
              unint64_t v81 = (void *)isUniquelyReferenced_nonNull_native;
            }
            MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
            unint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, uint64_t *, ValueMetadata *))(v23 + 16))(v22, boxed_opaque_existential_1, v53);
            sub_24A405F98(v60, (uint64_t)v22, (uint64_t *)&v81, (uint64_t)v53, (uint64_t)v54);
            unint64_t v81 = v57;
            uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
            goto LABEL_13;
          }
          uint64_t v52 = v47;
          swift_bridgeObjectRelease();
          uint64_t v53 = &type metadata for EventPrependToKeyFilter;
          id v54 = &off_26FE16C98;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24A3FC288(v72, 0);
        goto LABEL_34;
      }
      uint64_t v52 = v47;
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = &type metadata for EventInsertStringKeyFilter;
    id v54 = &off_26FE16C68;
    goto LABEL_33;
  }
  uint64_t v62 = result;
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_24A4077F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A4078CC(uint64_t a1)
{
  return a1;
}

void type metadata accessor for CFString()
{
  if (!qword_269793B30)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_269793B30);
    }
  }
}

uint64_t sub_24A4079FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A407A60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A407ABC(uint64_t a1)
{
  return a1;
}

unint64_t sub_24A407AEC()
{
  unint64_t result = qword_269793B08;
  if (!qword_269793B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B08);
  }
  return result;
}

uint64_t sub_24A407B40()
{
  return sub_24A407B7C(&qword_269793B10, &qword_269793B18);
}

uint64_t sub_24A407B7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A407BC4()
{
  unint64_t result = qword_269793B20;
  if (!qword_269793B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B20);
  }
  return result;
}

unint64_t sub_24A407C1C()
{
  unint64_t result = qword_269793B28;
  if (!qword_269793B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StorebagEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A407D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagEnvironment()
{
  return &type metadata for StorebagEnvironment;
}

uint64_t destroy for Storebag()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Storebag()
{
  return &type metadata for Storebag;
}

uint64_t getEnumTagSinglePayload for Storebag.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Storebag.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A40806CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Storebag.Error()
{
  return &type metadata for Storebag.Error;
}

uint64_t destroy for Storebag._StorebagRoot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot()
{
  return &type metadata for Storebag._StorebagRoot;
}

unint64_t sub_24A408248()
{
  unint64_t result = qword_269796FC0[0];
  if (!qword_269796FC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269796FC0);
  }
  return result;
}

unint64_t sub_24A40829C()
{
  unint64_t result = qword_269793B50;
  if (!qword_269793B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B50);
  }
  return result;
}

uint64_t sub_24A4082F0@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793B38);
  sub_24A408400();
  sub_24A4649D8();
  if (v2)
  {

    __swift_instantiateConcreteTypeFromMangledName(&qword_269793B80);
    sub_24A408454(&qword_269793B88, &qword_269793B80, (void (*)(void))sub_24A4084D4);
    uint64_t result = sub_24A4649D8();
    *a2 = v4;
    a2[1] = v6;
  }
  else
  {
    uint64_t result = sub_24A3E8CB4(v6, v7);
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

unint64_t sub_24A408400()
{
  unint64_t result = qword_269793B78;
  if (!qword_269793B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B78);
  }
  return result;
}

uint64_t sub_24A408454(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A4084D4()
{
  unint64_t result = qword_269793B90;
  if (!qword_269793B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793B90);
  }
  return result;
}

uint64_t sub_24A408528(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A408680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t getEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 6;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24A4087FCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 4) {
    unsigned int v8 = v7 - 3;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24A4088E4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_24A40890C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24A408920(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot.CodingKeys()
{
  return &type metadata for Storebag._StorebagRoot.CodingKeys;
}

unint64_t sub_24A408944()
{
  unint64_t result = qword_2697970D0;
  if (!qword_2697970D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697970D0);
  }
  return result;
}

unint64_t sub_24A40899C()
{
  unint64_t result = qword_2697970D8[0];
  if (!qword_2697970D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697970D8);
  }
  return result;
}

void *sub_24A4089F0()
{
  return &unk_24A4674A0;
}

void *sub_24A4089FC()
{
  return &unk_24A4674A8;
}

uint64_t sub_24A408A08()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A688);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A688);
  return sub_24A464008();
}

uint64_t sub_24A408A88(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_allocObject();
  uint64_t v14 = sub_24A40C724(a1, a2, a3, a4, a5, a6, a7);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_24A408B28(char a1)
{
  return *(void *)&aPosttimeclient[8 * a1];
}

uint64_t sub_24A408B48()
{
  return sub_24A408B28(*v0);
}

uint64_t sub_24A408B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A40C958(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A408B78(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24A408B84(uint64_t a1)
{
  unint64_t v2 = sub_24A40D05C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A408BC0(uint64_t a1)
{
  unint64_t v2 = sub_24A40D05C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A408BFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793BF8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A40D05C();
  sub_24A464C28();
  char v16 = 0;
  sub_24A464A18();
  if (!v4)
  {
    char v15 = 1;
    sub_24A464A08();
    uint64_t v14 = a4;
    char v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793C00);
    sub_24A40D0B0();
    sub_24A464A28();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24A408DC4(void *a1)
{
  return sub_24A408BFC(a1, v1[1], v1[2], v1[3]);
}

uint64_t sub_24A408DE8(uint64_t a1)
{
  v2[37] = a1;
  v2[38] = v1;
  uint64_t v3 = sub_24A463EE8();
  v2[39] = v3;
  v2[40] = *(void *)(v3 - 8);
  v2[41] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  v2[42] = v4;
  v2[43] = *(void *)(v4 - 8);
  v2[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v5 = sub_24A463D28();
  v2[47] = v5;
  v2[48] = *(void *)(v5 - 8);
  v2[49] = swift_task_alloc();
  uint64_t v6 = sub_24A463A48();
  v2[50] = v6;
  v2[51] = *(void *)(v6 - 8);
  v2[52] = swift_task_alloc();
  uint64_t v7 = sub_24A463A68();
  v2[53] = v7;
  v2[54] = *(void *)(v7 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v8 = sub_24A463E78();
  v2[56] = v8;
  v2[57] = *(void *)(v8 - 8);
  v2[58] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A4090E8, v1, 0);
}

uint64_t sub_24A4090E8()
{
  uint64_t v118 = v0;
  uint64_t v117 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  swift_retain();
  uint64_t v3 = sub_24A40CA98(v1, v2);
  swift_release();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = (_OWORD *)(v3 + 40);
    uint64_t v7 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *((void *)v6 - 1);
      long long v114 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v115 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A3E1604(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v115;
      }
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_24A3E1604(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v115;
      }
      *(void *)(v7 + 16) = v10 + 1;
      uint64_t v11 = v7 + 24 * v10;
      *(void *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 40) = v114;
      uint64_t v6 = (_OWORD *)((char *)v6 + 24);
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 16))
  {
    if (qword_269797160 == -1) {
      goto LABEL_16;
    }
    while (1)
    {
      swift_once();
LABEL_16:
      uint64_t v12 = sub_24A464018();
      *(void *)(v0 + 472) = __swift_project_value_buffer(v12, (uint64_t)qword_26979A688);
      swift_retain_n();
      swift_retain();
      char v13 = sub_24A463FF8();
      os_log_type_t v14 = sub_24A4645D8();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        uint64_t v115 = v16;
        *(_DWORD *)uint64_t v15 = 134349314;
        *(void *)(v0 + 280) = *(void *)(v7 + 16);
        sub_24A4646E8();
        swift_release();
        *(_WORD *)(v15 + 12) = 2082;
        sub_24A40D124(&qword_269793BE8, MEMORY[0x263F06EA8]);
        uint64_t v17 = sub_24A464A48();
        *(void *)(v0 + 288) = sub_24A3E0E30(v17, v18, &v115);
        sub_24A4646E8();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A3DA000, v13, v14, "submitting %{public}ld events to %{public}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v16, -1, -1);
        MEMORY[0x24C5C5D60](v15, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_release();
      }
      uint64_t v21 = *(void *)(v0 + 456);
      uint64_t v20 = *(void *)(v0 + 464);
      uint64_t v22 = *(void *)(v0 + 448);
      uint64_t v23 = *(void *)(v0 + 304);
      sub_24A463E38();
      uint64_t v24 = getTimeIntervalSince1970(Date:)();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID);
      uint64_t v26 = *(void *)(v23 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID + 8);
      uint64_t v110 = v25;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_24A40B7F4(v7);
      swift_release();
      sub_24A463AA8();
      swift_allocObject();
      *(void *)(v0 + 480) = sub_24A463A98();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793658);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_24A466020;
      sub_24A463A58();
      *(void *)(v0 + 264) = v28;
      sub_24A40D124(&qword_269793660, MEMORY[0x263F06130]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793668);
      sub_24A40CCD4();
      sub_24A464728();
      sub_24A463A78();
      *(double *)(v0 + 104) = (double)v24;
      *(void *)(v0 + 112) = v110;
      *(void *)(v0 + 120) = v26;
      *(void *)(v0 + 128) = v27;
      sub_24A40CD30();
      uint64_t v29 = sub_24A463A88();
      *(void *)(v0 + 488) = 0;
      *(void *)(v0 + 496) = v29;
      *(void *)(v0 + 504) = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_24A42508C();
      swift_beginAccess();
      if (*v31 == 1 && *sub_24A425268() == 1)
      {
        uint64_t v32 = *(void *)(v0 + 304);
      }
      else
      {
        uint64_t v32 = *(void *)(v0 + 304);
        if ((*(unsigned char *)(v32 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_skipLogging) & 1) == 0)
        {
          uint64_t v38 = *(void *)(v32 + 120);
          *(void *)(v0 + 512) = v38;
          uint64_t v39 = (void *)(v32 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_name);
          *(void *)(v0 + 520) = *v39;
          *(void *)(v0 + 528) = v39[1];
          return MEMORY[0x270FA2498](sub_24A40A4D0, v38, 0);
        }
      }
      unint64_t v33 = *(void *)(v0 + 504);
      (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 384) + 16))(*(void *)(v0 + 392), v32 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_url, *(void *)(v0 + 376));
      sub_24A463A08();
      switch(v33 >> 62)
      {
        case 1uLL:
          uint64_t v40 = *(void *)(v0 + 496);
          if (v40 >> 32 < (int)v40)
          {
            __break(1u);
LABEL_105:
            __break(1u);
          }
          unint64_t v41 = *(void *)(v0 + 504);
          sub_24A3E8D0C(*(void *)(v0 + 496), v41);
          sub_24A3E8D0C(v40, v41);
          sub_24A40C2DC((int)v40, v40 >> 32, v40, v41, (uint64_t)&v115);
          uint64_t v42 = *(void *)(v0 + 496);
          unint64_t v43 = *(void *)(v0 + 504);
          goto LABEL_32;
        case 2uLL:
          uint64_t v45 = *(void *)(v0 + 496);
          unint64_t v44 = *(void *)(v0 + 504);
          uint64_t v46 = *(void *)(v45 + 16);
          uint64_t v47 = *(void *)(v45 + 24);
          sub_24A3E8D0C(v45, v44);
          sub_24A3E8D0C(v45, v44);
          swift_retain();
          swift_retain();
          sub_24A40C2DC(v46, v47, v45, v44, (uint64_t)&v115);
          uint64_t v48 = *(void *)(v0 + 496);
          unint64_t v49 = *(void *)(v0 + 504);
          swift_release();
          swift_release();
          uint64_t v42 = v48;
          unint64_t v43 = v49;
LABEL_32:
          sub_24A3E8CB4(v42, v43);
          goto LABEL_33;
        case 3uLL:
          uint64_t v34 = *(void *)(v0 + 496);
          unint64_t v35 = *(void *)(v0 + 504);
          *(void *)(v0 + 606) = 0;
          *(void *)(v0 + 612) = 0;
          uint64_t v37 = (Bytef *)(v0 + 606);
          uint64_t v36 = v0 + 606;
          goto LABEL_40;
        default:
          uint64_t v34 = *(void *)(v0 + 496);
          unint64_t v35 = *(void *)(v0 + 504);
          *(void *)(v0 + 592) = v34;
          *(_WORD *)(v0 + 600) = v35;
          *(unsigned char *)(v0 + 602) = BYTE2(v35);
          *(unsigned char *)(v0 + 603) = BYTE3(v35);
          *(unsigned char *)(v0 + 604) = BYTE4(v35);
          uint64_t v36 = v0 + 592 + BYTE6(v35);
          *(unsigned char *)(v0 + 605) = BYTE5(v35);
          uint64_t v37 = (Bytef *)(v0 + 592);
LABEL_40:
          sub_24A40BC3C(v37, v36, v34, v35, (uint64_t)&v115);
          uint64_t v55 = *(void *)(v0 + 496);
          unint64_t v54 = *(void *)(v0 + 504);
          sub_24A3E8CB4(v55, v54);
          sub_24A3E8CB4(v55, v54);
LABEL_33:
          uint64_t v50 = v115;
          unint64_t v51 = v116;
          if (v116 >> 60 == 15) {
            uint64_t v52 = *(void *)(v0 + 496);
          }
          else {
            uint64_t v52 = v115;
          }
          if (v116 >> 60 == 15) {
            unint64_t v53 = *(void *)(v0 + 504);
          }
          else {
            unint64_t v53 = v116;
          }
          *(void *)(v0 + 552) = v116;
          *(void *)(v0 + 544) = v50;
          sub_24A3E8D0C(v52, v53);
          sub_24A463A28();
          sub_24A4639F8();
          if (v51 >> 60 != 15) {
            sub_24A463A38();
          }
          sub_24A463A38();
          sub_24A463A38();
          unint64_t v56 = sub_24A463A18();
          if (v57 >> 60 == 15)
          {
            sub_24A3E8CA0(v50, v51);
            __break(1u);
            goto LABEL_107;
          }
          unint64_t v58 = v57;
          uint64_t v59 = v56;
          unint64_t v106 = v51;
          uint64_t v107 = v50;
          switch(v57 >> 62)
          {
            case 1uLL:
              unint64_t v61 = HIDWORD(v56);
              sub_24A3E8CA0(v56, v57);
              LODWORD(v60) = v61 - v59;
              if (__OFSUB__(v61, v59)) {
                goto LABEL_105;
              }
              uint64_t v60 = (int)v60;
              break;
            case 2uLL:
              uint64_t v63 = *(void *)(v56 + 16);
              uint64_t v62 = *(void *)(v56 + 24);
              sub_24A3E8CA0(v56, v57);
              uint64_t v60 = v62 - v63;
              if (!__OFSUB__(v62, v63)) {
                break;
              }
              __break(1u);
LABEL_51:
              sub_24A3E8CA0(v59, v58);
              uint64_t v60 = 0;
              break;
            case 3uLL:
              goto LABEL_51;
            default:
              sub_24A3E8CA0(v56, v57);
              uint64_t v60 = BYTE6(v58);
              break;
          }
          uint64_t v113 = *(void *)(v0 + 360);
          uint64_t v112 = *(void *)(v0 + 344);
          uint64_t v7 = *(void *)(v0 + 304);
          *(void *)(v0 + 248) = v60;
          sub_24A464A48();
          sub_24A463A38();
          swift_bridgeObjectRelease();
          uint64_t v64 = v7 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders;
          long long v65 = *(_OWORD *)(v7 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders + 16);
          *(_OWORD *)(v0 + 16) = *(_OWORD *)(v7 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders);
          *(_OWORD *)(v0 + 32) = v65;
          long long v67 = *(_OWORD *)(v64 + 48);
          long long v66 = *(_OWORD *)(v64 + 64);
          long long v68 = *(_OWORD *)(v64 + 32);
          *(void *)(v0 + 96) = *(void *)(v64 + 80);
          *(_OWORD *)(v0 + 64) = v67;
          *(_OWORD *)(v0 + 80) = v66;
          *(_OWORD *)(v0 + 48) = v68;
          unint64_t v69 = sub_24A42C9D0();
          unint64_t v70 = v69;
          int64_t v71 = 0;
          uint64_t v72 = *(void *)(v69 + 64);
          unint64_t v109 = v69 + 64;
          uint64_t v73 = -1;
          uint64_t v74 = -1 << *(unsigned char *)(v69 + 32);
          if (-v74 < 64) {
            uint64_t v73 = ~(-1 << -(char)v74);
          }
          unint64_t v75 = v73 & v72;
          unint64_t v108 = v69 + 104;
          int64_t v111 = (unint64_t)(63 - v74) >> 6;
          if ((v73 & v72) != 0)
          {
            while (1)
            {
              while (1)
              {
                unint64_t v76 = __clz(__rbit64(v75));
                v75 &= v75 - 1;
                unint64_t v77 = v76 | (v71 << 6);
LABEL_58:
                uint64_t v78 = *(void **)(v0 + 360);
                int64_t v79 = (void *)(*(void *)(v70 + 48) + 16 * v77);
                uint64_t v80 = v79[1];
                *uint64_t v78 = *v79;
                *(void *)(v113 + 8) = v80;
                uint64_t v81 = *(void *)(v70 + 56) + *(void *)(v112 + 72) * v77;
                uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
                sub_24A3E1A98(v81, (uint64_t)v78 + *(int *)(v82 + 48));
                (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v78, 0, 1, v82);
                swift_bridgeObjectRetain();
LABEL_68:
                uint64_t v87 = *(void *)(v0 + 368);
                sub_24A40CD84(*(void *)(v0 + 360), v87);
                uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v87, 1, v88) == 1)
                {
                  uint64_t v92 = *(void *)(v0 + 320);
                  uint64_t v91 = *(void *)(v0 + 328);
                  uint64_t v94 = *(void *)(v0 + 304);
                  uint64_t v93 = *(void *)(v0 + 312);
                  swift_release();
                  objc_msgSend(*(id *)(v94 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_options), sel_copy, v106, v107, 0);
                  sub_24A464718();
                  swift_unknownObjectRelease();
                  sub_24A3E909C(0, &qword_269793BE0);
                  swift_dynamicCast();
                  uint64_t v95 = *(void **)(v0 + 216);
                  *(void *)(v0 + 560) = v95;
                  sub_24A463ED8();
                  sub_24A463E88();
                  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v93);
                  uint64_t v96 = (void *)sub_24A464248();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v95, sel_setIdentifier_, v96);

                  sub_24A3E909C(0, (unint64_t *)&qword_269793920);
                  os_log_type_t v97 = (void *)sub_24A4646B8();
                  objc_msgSend(v95, sel_setUseNWLoaderOverride_, v97);

                  uint64_t v98 = sub_24A463CD8();
                  if (v99)
                  {
                    if (v98 == 0xD00000000000001BLL && v99 == 0x800000024A46AF30)
                    {
                      swift_bridgeObjectRelease();
                      goto LABEL_93;
                    }
                    char v100 = sub_24A464A78();
                    swift_bridgeObjectRelease();
                    if (v100)
                    {
LABEL_93:
                      uint64_t v101 = (void *)sub_24A4646B8();
                      objc_msgSend(v95, sel_setPrivacyProxyFailClosedOverride_, v101);
                    }
                  }
                  if (*(void *)(v0 + 24) == 0x51424A3241394B34 && *(void *)(v0 + 32) == 0xEA00000000005832
                    || (sub_24A464A78() & 1) != 0)
                  {
                    id v102 = (void *)sub_24A4646B8();
                    objc_msgSend(v95, sel_setUseNWLoaderOverride_, v102);
                  }
                  objc_msgSend(v95, sel_set_optIntoDisableAPWakeOnIdleConnections_, 1);
                  id v103 = objc_msgSend(self, sel_sharedManager);
                  *(void *)(v0 + 568) = v103;
                  if (v103)
                  {
                    uint64_t v104 = (void *)swift_task_alloc();
                    *(void *)(v0 + 576) = v104;
                    *uint64_t v104 = v0;
                    v104[1] = sub_24A40B28C;
                    uint64_t v105 = *(void *)(v0 + 416);
                    return MEMORY[0x270F12978](v105, v95);
                  }
LABEL_107:
                  sub_24A3E8CA0(v107, v106);
                  __break(1u);
                  JUMPOUT(0x24A40A4B0);
                }
                uint64_t v7 = *(void *)(v0 + 336);
                sub_24A3EF5C0(*(void *)(v0 + 368) + *(int *)(v88 + 48), *(void *)(v0 + 352));
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload) {
                  break;
                }
LABEL_56:
                sub_24A463A38();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v75) {
                  goto LABEL_59;
                }
              }
              if (EnumCaseMultiPayload == 2) {
                break;
              }
              if (EnumCaseMultiPayload == 1)
              {
                *(void *)(v0 + 232) = **(void **)(v0 + 352);
LABEL_74:
                sub_24A464A48();
                goto LABEL_56;
              }
              uint64_t v90 = *(void *)(v0 + 352);
              swift_bridgeObjectRelease();
              sub_24A40D260(v90, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
              if (!v75) {
                goto LABEL_59;
              }
            }
            *(void *)(v0 + 224) = **(void **)(v0 + 352);
            goto LABEL_74;
          }
LABEL_59:
          int64_t v83 = v71 + 1;
          if (!__OFADD__(v71, 1))
          {
            if (v83 < v111)
            {
              unint64_t v84 = *(void *)(v109 + 8 * v83);
              if (v84)
              {
LABEL_62:
                unint64_t v75 = (v84 - 1) & v84;
                unint64_t v77 = __clz(__rbit64(v84)) + (v83 << 6);
                int64_t v71 = v83;
                goto LABEL_58;
              }
              if (v71 + 2 >= v111)
              {
                ++v71;
              }
              else
              {
                unint64_t v84 = *(void *)(v109 + 8 * (v71 + 2));
                if (v84)
                {
                  int64_t v83 = v71 + 2;
                  goto LABEL_62;
                }
                if (v71 + 3 >= v111)
                {
                  v71 += 2;
                }
                else
                {
                  unint64_t v84 = *(void *)(v109 + 8 * (v71 + 3));
                  if (v84)
                  {
                    int64_t v83 = v71 + 3;
                    goto LABEL_62;
                  }
                  int64_t v83 = v71 + 4;
                  if (v71 + 4 >= v111)
                  {
                    v71 += 3;
                  }
                  else
                  {
                    unint64_t v84 = *(void *)(v109 + 8 * v83);
                    if (v84) {
                      goto LABEL_62;
                    }
                    while (v111 - 5 != v71)
                    {
                      unint64_t v84 = *(void *)(v108 + 8 * v71++);
                      if (v84)
                      {
                        int64_t v83 = v71 + 4;
                        goto LABEL_62;
                      }
                    }
                    int64_t v71 = v111 - 1;
                  }
                }
              }
            }
            uint64_t v85 = *(void *)(v0 + 360);
            uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
            unint64_t v75 = 0;
            goto LABEL_68;
          }
          __break(1u);
          break;
      }
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_24A40A4D0()
{
  uint64_t v1 = v0[61];
  sub_24A3E78B8(v0[65], v0[66], v0[62], v0[63]);
  v0[67] = v1;
  uint64_t v2 = v0[38];
  if (v1) {
    uint64_t v3 = sub_24A40B588;
  }
  else {
    uint64_t v3 = sub_24A40A590;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A40A590()
{
  uint64_t v95 = v0;
  uint64_t v94 = *MEMORY[0x263EF8340];
  unint64_t v1 = v0 + 256;
  uint64_t v2 = *(void **)(v0 + 536);
  unint64_t v3 = *(void *)(v0 + 504);
  (*(void (**)(void))(*(void *)(v0 + 384) + 16))(*(void *)(v0 + 392));
  sub_24A463A08();
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v8 = *(void *)(v0 + 496);
      uint64_t v9 = v8 >> 32;
      if (v8 >> 32 < (int)v8) {
        goto LABEL_81;
      }
      unint64_t v10 = *(void *)(v0 + 504);
      sub_24A3E8D0C(*(void *)(v0 + 496), v10);
      sub_24A3E8D0C(v8, v10);
      sub_24A40C2DC((int)v8, v8 >> 32, v8, v10, (uint64_t)&v92);
      uint64_t v11 = v2;
      sub_24A3E8CB4(*(void *)(v0 + 496), *(void *)(v0 + 504));
      if (!v2) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 2uLL:
      uint64_t v12 = *(void *)(v0 + 496);
      unint64_t v13 = *(void *)(v0 + 504);
      uint64_t v15 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      sub_24A3E8D0C(v12, v13);
      sub_24A3E8D0C(v12, v13);
      swift_retain();
      swift_retain();
      sub_24A40C2DC(v15, v14, v12, v13, (uint64_t)&v92);
      uint64_t v11 = v2;
      uint64_t v17 = *(void *)(v0 + 496);
      unint64_t v16 = *(void *)(v0 + 504);
      swift_release();
      swift_release();
      sub_24A3E8CB4(v17, v16);
      if (!v11) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 3uLL:
      uint64_t v4 = (Bytef *)(v0 + 606);
      uint64_t v5 = *(void *)(v0 + 496);
      unint64_t v6 = *(void *)(v0 + 504);
      *(void *)(v0 + 606) = 0;
      *(void *)(v0 + 612) = 0;
      uint64_t v7 = v0 + 606;
      goto LABEL_14;
    default:
      uint64_t v4 = (Bytef *)(v0 + 592);
      uint64_t v5 = *(void *)(v0 + 496);
      unint64_t v6 = *(void *)(v0 + 504);
      *(void *)(v0 + 592) = v5;
      *(_WORD *)(v0 + 600) = v6;
      *(unsigned char *)(v0 + 602) = BYTE2(v6);
      *(unsigned char *)(v0 + 603) = BYTE3(v6);
      *(unsigned char *)(v0 + 604) = BYTE4(v6);
      uint64_t v7 = v0 + 592 + BYTE6(v6);
      *(unsigned char *)(v0 + 605) = BYTE5(v6);
LABEL_14:
      sub_24A40BC3C(v4, v7, v5, v6, (uint64_t)&v92);
      uint64_t v11 = v2;
      uint64_t v20 = *(void *)(v0 + 496);
      unint64_t v21 = *(void *)(v0 + 504);
      sub_24A3E8CB4(v20, v21);
      sub_24A3E8CB4(v20, v21);
      if (v2)
      {
LABEL_15:
        id v22 = v11;
        id v23 = v11;
        uint64_t v24 = sub_24A463FF8();
        os_log_type_t v25 = sub_24A4645B8();
        int64_t v83 = v11;
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          uint64_t v92 = v27;
          *(_DWORD *)uint64_t v26 = 136446210;
          swift_getErrorValue();
          uint64_t v28 = sub_24A464B38();
          *(void *)(v0 + 256) = sub_24A3E0E30(v28, v29, &v92);
          sub_24A4646E8();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_24A3DA000, v24, v25, "failed to compress payload: %{public}s", v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v27, -1, -1);
          MEMORY[0x24C5C5D60](v26, -1, -1);
        }
        else
        {
        }
        uint64_t v9 = 0;
        uint64_t v18 = *(void *)(v0 + 496);
        unint64_t v19 = *(void *)(v0 + 504);
        unint64_t v1 = 0xF000000000000000;
      }
      else
      {
LABEL_7:
        int64_t v83 = v11;
        uint64_t v9 = v92;
        unint64_t v1 = v93;
        if (v93 >> 60 == 15) {
          uint64_t v18 = *(void *)(v0 + 496);
        }
        else {
          uint64_t v18 = v92;
        }
        if (v93 >> 60 == 15) {
          unint64_t v19 = *(void *)(v0 + 504);
        }
        else {
          unint64_t v19 = v93;
        }
      }
      *(void *)(v0 + 552) = v1;
      *(void *)(v0 + 544) = v9;
      sub_24A3E8D0C(v18, v19);
      sub_24A463A28();
      sub_24A4639F8();
      if (v1 >> 60 != 15) {
        sub_24A463A38();
      }
      sub_24A463A38();
      sub_24A463A38();
      unint64_t v30 = sub_24A463A18();
      if (v31 >> 60 == 15) {
        goto LABEL_83;
      }
      unint64_t v32 = v31;
      uint64_t v33 = v30;
      unint64_t v84 = v1;
      uint64_t v85 = v9;
      switch(v31 >> 62)
      {
        case 1uLL:
          unint64_t v35 = HIDWORD(v30);
          sub_24A3E8CA0(v30, v31);
          LODWORD(v34) = v35 - v33;
          if (__OFSUB__(v35, v33)) {
            goto LABEL_82;
          }
          uint64_t v34 = (int)v34;
          break;
        case 2uLL:
          uint64_t v37 = *(void *)(v30 + 16);
          uint64_t v36 = *(void *)(v30 + 24);
          sub_24A3E8CA0(v30, v31);
          uint64_t v34 = v36 - v37;
          if (!__OFSUB__(v36, v37)) {
            break;
          }
          __break(1u);
LABEL_29:
          sub_24A3E8CA0(v33, v32);
          uint64_t v34 = 0;
          break;
        case 3uLL:
          goto LABEL_29;
        default:
          sub_24A3E8CA0(v30, v31);
          uint64_t v34 = BYTE6(v32);
          break;
      }
      uint64_t v91 = *(void *)(v0 + 368);
      uint64_t v89 = *(void *)(v0 + 344);
      uint64_t v90 = *(void *)(v0 + 360);
      uint64_t v38 = *(void *)(v0 + 304);
      *(void *)(v0 + 248) = v34;
      sub_24A464A48();
      sub_24A463A38();
      swift_bridgeObjectRelease();
      uint64_t v39 = v38 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders;
      long long v40 = *(_OWORD *)(v38 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders + 16);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v38 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders);
      *(_OWORD *)(v0 + 32) = v40;
      long long v42 = *(_OWORD *)(v39 + 48);
      long long v41 = *(_OWORD *)(v39 + 64);
      long long v43 = *(_OWORD *)(v39 + 32);
      *(void *)(v0 + 96) = *(void *)(v39 + 80);
      *(_OWORD *)(v0 + 64) = v42;
      *(_OWORD *)(v0 + 80) = v41;
      *(_OWORD *)(v0 + 48) = v43;
      unint64_t v44 = sub_24A42C9D0();
      unint64_t v45 = v44;
      int64_t v46 = 0;
      uint64_t v47 = *(void *)(v44 + 64);
      unint64_t v87 = v44 + 64;
      uint64_t v48 = -1;
      uint64_t v49 = -1 << *(unsigned char *)(v44 + 32);
      if (-v49 < 64) {
        uint64_t v48 = ~(-1 << -(char)v49);
      }
      unint64_t v50 = v48 & v47;
      unint64_t v86 = v44 + 104;
      int64_t v88 = (unint64_t)(63 - v49) >> 6;
      if ((v48 & v47) == 0) {
        goto LABEL_37;
      }
      break;
  }
LABEL_35:
  unint64_t v51 = __clz(__rbit64(v50));
  v50 &= v50 - 1;
  unint64_t v52 = v51 | (v46 << 6);
LABEL_36:
  unint64_t v53 = *(void **)(v0 + 360);
  unint64_t v54 = (void *)(*(void *)(v45 + 48) + 16 * v52);
  uint64_t v55 = v54[1];
  *unint64_t v53 = *v54;
  *(void *)(v90 + 8) = v55;
  uint64_t v56 = *(void *)(v45 + 56) + *(void *)(v89 + 72) * v52;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
  sub_24A3E1A98(v56, (uint64_t)v53 + *(int *)(v57 + 48));
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v53, 0, 1, v57);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v62 = *(void *)(v0 + 368);
    sub_24A40CD84(*(void *)(v0 + 360), v62);
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v62, 1, v63) == 1) {
      break;
    }
    uint64_t v64 = *(unint64_t **)(v0 + 368);
    unint64_t v1 = *v64;
    uint64_t v9 = *(void *)(v91 + 8);
    sub_24A3EF5C0((uint64_t)v64 + *(int *)(v63 + 48), *(void *)(v0 + 352));
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 0:
        goto LABEL_34;
      case 2:
        *(void *)(v0 + 224) = **(void **)(v0 + 352);
        goto LABEL_52;
      case 1:
        *(void *)(v0 + 232) = **(void **)(v0 + 352);
LABEL_52:
        sub_24A464A48();
LABEL_34:
        sub_24A463A38();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v50) {
          goto LABEL_35;
        }
        goto LABEL_37;
    }
    uint64_t v66 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();
    sub_24A40D260(v66, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if (v50) {
      goto LABEL_35;
    }
LABEL_37:
    int64_t v58 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      sub_24A3E8CA0(v9, v1);
      __break(1u);
      goto LABEL_84;
    }
    if (v58 >= v88) {
      goto LABEL_45;
    }
    unint64_t v59 = *(void *)(v87 + 8 * v58);
    if (v59) {
      goto LABEL_40;
    }
    if (v46 + 2 >= v88)
    {
      ++v46;
      goto LABEL_45;
    }
    unint64_t v59 = *(void *)(v87 + 8 * (v46 + 2));
    if (v59)
    {
      int64_t v58 = v46 + 2;
      goto LABEL_40;
    }
    if (v46 + 3 >= v88)
    {
      v46 += 2;
      goto LABEL_45;
    }
    unint64_t v59 = *(void *)(v87 + 8 * (v46 + 3));
    if (v59)
    {
      int64_t v58 = v46 + 3;
LABEL_40:
      unint64_t v50 = (v59 - 1) & v59;
      unint64_t v52 = __clz(__rbit64(v59)) + (v58 << 6);
      int64_t v46 = v58;
      goto LABEL_36;
    }
    int64_t v58 = v46 + 4;
    if (v46 + 4 >= v88)
    {
      v46 += 3;
    }
    else
    {
      unint64_t v59 = *(void *)(v87 + 8 * v58);
      if (v59) {
        goto LABEL_40;
      }
      while (v88 - 5 != v46)
      {
        unint64_t v59 = *(void *)(v86 + 8 * v46++);
        if (v59)
        {
          int64_t v58 = v46 + 4;
          goto LABEL_40;
        }
      }
      int64_t v46 = v88 - 1;
    }
LABEL_45:
    uint64_t v60 = *(void *)(v0 + 360);
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 1, 1, v61);
    unint64_t v50 = 0;
  }
  uint64_t v68 = *(void *)(v0 + 320);
  uint64_t v67 = *(void *)(v0 + 328);
  uint64_t v70 = *(void *)(v0 + 304);
  uint64_t v69 = *(void *)(v0 + 312);
  swift_release();
  objc_msgSend(*(id *)(v70 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_options), sel_copy, v83, v84, v85);
  sub_24A464718();
  swift_unknownObjectRelease();
  sub_24A3E909C(0, &qword_269793BE0);
  swift_dynamicCast();
  int64_t v71 = *(void **)(v0 + 216);
  *(void *)(v0 + 560) = v71;
  sub_24A463ED8();
  sub_24A463E88();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
  uint64_t v72 = (void *)sub_24A464248();
  swift_bridgeObjectRelease();
  objc_msgSend(v71, sel_setIdentifier_, v72);

  sub_24A3E909C(0, (unint64_t *)&qword_269793920);
  uint64_t v73 = (void *)sub_24A4646B8();
  objc_msgSend(v71, sel_setUseNWLoaderOverride_, v73);

  uint64_t v74 = sub_24A463CD8();
  if (v75)
  {
    if (v74 == 0xD00000000000001BLL && v75 == 0x800000024A46AF30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_71;
    }
    char v76 = sub_24A464A78();
    swift_bridgeObjectRelease();
    if (v76)
    {
LABEL_71:
      unint64_t v77 = (void *)sub_24A4646B8();
      objc_msgSend(v71, sel_setPrivacyProxyFailClosedOverride_, v77);
    }
  }
  if (*(void *)(v0 + 24) == 0x51424A3241394B34 && *(void *)(v0 + 32) == 0xEA00000000005832
    || (sub_24A464A78() & 1) != 0)
  {
    uint64_t v78 = (void *)sub_24A4646B8();
    objc_msgSend(v71, sel_setUseNWLoaderOverride_, v78);
  }
  objc_msgSend(v71, sel_set_optIntoDisableAPWakeOnIdleConnections_, 1);
  id v79 = objc_msgSend(self, sel_sharedManager);
  *(void *)(v0 + 568) = v79;
  if (!v79)
  {
LABEL_84:
    sub_24A3E8CA0(v85, v84);
    __break(1u);
  }
  uint64_t v80 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v80;
  *uint64_t v80 = v0;
  v80[1] = sub_24A40B28C;
  uint64_t v81 = *(void *)(v0 + 416);
  return MEMORY[0x270F12978](v81, v71);
}

uint64_t sub_24A40B28C(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 584) = v3;
  swift_task_dealloc();
  uint64_t v9 = *(void **)(v8 + 568);
  uint64_t v10 = *(void *)(v8 + 304);
  if (v3)
  {

    uint64_t v11 = sub_24A40B69C;
  }
  else
  {
    sub_24A3E8CB4(a1, a2);

    uint64_t v11 = sub_24A40B430;
  }
  return MEMORY[0x270FA2498](v11, v10, 0);
}

uint64_t sub_24A40B430()
{
  unint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 496);
  unint64_t v3 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_release();
  sub_24A3E8CB4(v4, v3);
  sub_24A3E8CA0(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24A40B588()
{
  sub_24A3E8CB4(v0[62], v0[63]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24A40B69C()
{
  unint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 496);
  unint64_t v3 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_release();
  sub_24A3E8CB4(v4, v3);
  sub_24A3E8CA0(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24A40B7F4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_24A40C130(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_24A40C130(v6 > 1, v7 + 1, 1);
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24A40B8C4()
{
  return 8744;
}

uint64_t sub_24A40B9C4()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_url;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_24A40BAC8()
{
  sub_24A40B9C4();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A40BAF4(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24A3E0820;
  return v6(a1);
}

uint64_t sub_24A40BBF8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_24A40BC3C@<X0>(Bytef *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  memset(&strm.total_in, 0, 20);
  uLong v6 = a2 - (void)a1;
  memset(&strm.total_out, 0, 32);
  if (a1) {
    unint64_t v7 = a2 - (void)a1;
  }
  else {
    unint64_t v7 = 0;
  }
  memset(&strm.zfree, 0, 20);
  strm.adler = 0;
  strm.reserved = 0;
  if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7))
  {
    sub_24A4648D8();
    __break(1u);
    JUMPOUT(0x24A40C010);
  }
  strm.avail_in = v7;
  if (!a1) {
LABEL_40:
  }
    __break(1u);
  strm.next_in = a1;
  int v10 = deflateInit2_(&strm, -1, 8, 31, 8, 0, "1.2.12", 112);
  if (v10)
  {
    int v11 = v10;
    sub_24A40D16C();
    swift_allocError();
    int *v12 = v11;
    return swift_willThrow();
  }
  uLong v14 = deflateBound(&strm, v6);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v28 = sub_24A40D1C0(v14);
  unint64_t v29 = v15;
  if (sub_24A40C39C(&v28, &strm) != 1)
  {
    if (qword_269797160 == -1)
    {
LABEL_15:
      uint64_t v18 = sub_24A464018();
      __swift_project_value_buffer(v18, (uint64_t)qword_26979A688);
      unint64_t v19 = sub_24A463FF8();
      os_log_type_t v20 = sub_24A4645C8();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v21 = 67240192;
        sub_24A4646E8();
        _os_log_impl(&dword_24A3DA000, v19, v20, "zlib returned unexpected status %{public}d", v21, 8u);
        MEMORY[0x24C5C5D60](v21, -1, -1);
      }

      *(_OWORD *)a5 = xmmword_24A467480;
      sub_24A3E8CB4(v28, v29);
      return deflateEnd(&strm);
    }
LABEL_35:
    swift_once();
    goto LABEL_15;
  }
  if ((strm.total_out & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_24A463D78();
  unint64_t v16 = v29;
  uint64_t v17 = 0;
  switch(v29 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(v28) - v28;
      if (__OFSUB__(HIDWORD(v28), v28))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v17 = (int)v17;
LABEL_21:
      switch(a4 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_39;
          }
          if (v17 >= HIDWORD(a3) - (int)a3) {
            goto LABEL_28;
          }
          goto LABEL_26;
        case 2uLL:
          uint64_t v26 = *(void *)(a3 + 16);
          uint64_t v25 = *(void *)(a3 + 24);
          BOOL v24 = __OFSUB__(v25, v26);
          uint64_t v27 = v25 - v26;
          if (v24) {
            goto LABEL_38;
          }
          if (v17 >= v27)
          {
LABEL_28:
            sub_24A3E8CB4(v28, v29);
            *(_OWORD *)a5 = xmmword_24A467480;
          }
          else
          {
LABEL_26:
            *(void *)a5 = v28;
            *(void *)(a5 + 8) = v16;
          }
          break;
        case 3uLL:
          if ((v17 & 0x8000000000000000) == 0) {
            goto LABEL_28;
          }
          goto LABEL_26;
        default:
          if (v17 >= BYTE6(a4)) {
            goto LABEL_28;
          }
          goto LABEL_26;
      }
      return deflateEnd(&strm);
    case 2uLL:
      uint64_t v23 = *(void *)(v28 + 16);
      uint64_t v22 = *(void *)(v28 + 24);
      BOOL v24 = __OFSUB__(v22, v23);
      uint64_t v17 = v22 - v23;
      if (!v24) {
        goto LABEL_21;
      }
      goto LABEL_37;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v17 = BYTE6(v29);
      goto LABEL_21;
  }
}

uint64_t sub_24A40C030@<X0>(z_streamp strm@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, _DWORD *a4@<X8>)
{
  if (a2) {
    uLong v5 = a3 - a2;
  }
  else {
    uLong v5 = 0;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
  uLong total_out = strm->total_out;
  BOOL v7 = v5 >= total_out;
  uLong v8 = v5 - total_out;
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (!HIDWORD(v8))
  {
    strm->avail_out = v8;
    if (!a2)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if ((total_out & 0x8000000000000000) == 0)
    {
      strm->next_out = (Bytef *)(a2 + total_out);
      uint64_t result = deflate(strm, 4);
      *a4 = result;
      return result;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  uint64_t result = sub_24A4648D8();
  __break(1u);
  return result;
}

uint64_t sub_24A40C130(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24A40C150(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_24A40C150(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793C18);
    int v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A40C2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t result = sub_24A463AF8();
  int64_t v11 = (Bytef *)result;
  if (result)
  {
    uint64_t result = sub_24A463B28();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = sub_24A463B18();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  unint64_t v16 = &v11[v15];
  if (v11) {
    uint64_t v17 = (uint64_t)v16;
  }
  else {
    uint64_t v17 = 0;
  }
  sub_24A40BC3C(v11, v17, a3, a4, a5);
  return sub_24A3E8CB4(a3, a4);
}

uint64_t sub_24A40C39C(uint64_t *a1, z_streamp strm)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_24A467490;
      uint64_t v10 = v4 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_14;
      }
      if (v10 < (int)v4) {
        goto LABEL_18;
      }
      if (sub_24A463AF8() && __OFSUB__((int)v4, sub_24A463B28())) {
        goto LABEL_19;
      }
      sub_24A463B38();
      swift_allocObject();
      uint64_t v12 = sub_24A463AD8();
      swift_release();
      uint64_t v9 = v12;
LABEL_14:
      if (v10 < (int)v4)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      uint64_t result = sub_24A40C680((int)v4, v4 >> 32, v9, strm);
      *a1 = v4;
      a1[1] = v9 | 0x4000000000000000;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *a1;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24A463D38();
      uint64_t v11 = *((void *)&v14 + 1);
      uint64_t result = sub_24A40C680(*(void *)(v14 + 16), *(void *)(v14 + 24), *((uint64_t *)&v14 + 1), strm);
      *a1 = v14;
      a1[1] = v11 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      uint64_t result = sub_24A40C030(strm, (uint64_t)&v14, (uint64_t)&v14, &v13);
      if (!v2) {
        return v13;
      }
      return result;
    default:
      *(void *)&long long v14 = *a1;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      uint64_t result = sub_24A40C030(strm, (uint64_t)&v14, (uint64_t)&v14 + BYTE6(v3), &v13);
      if (!v2) {
        uint64_t result = v13;
      }
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      *a1 = v14;
      a1[1] = v8;
      return result;
  }
}

uint64_t sub_24A40C680(uint64_t a1, uint64_t a2, uint64_t a3, z_stream *a4)
{
  uint64_t result = sub_24A463AF8();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v9 = result;
  uint64_t result = sub_24A463B28();
  uint64_t v10 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v13 = sub_24A463B18();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t result = sub_24A40C030(a4, v9 + v10, v9 + v10 + v14, &v15);
  if (!v4) {
    return v15;
  }
  return result;
}

uint64_t sub_24A40C724(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  swift_defaultActor_initialize();
  unint64_t v16 = (void *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_clientID);
  *unint64_t v16 = a5;
  v16[1] = a6;
  *(void *)(v8 + 112) = a3;
  *(void *)(v8 + 120) = a1;
  uint64_t v36 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v17 = (char *)a4 + v36[6];
  uint64_t v18 = v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_url;
  uint64_t v19 = sub_24A463D28();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
  *(void *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_options) = a7;
  os_log_type_t v20 = a7;
  uint64_t v22 = a2[3];
  uint64_t v21 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v22);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
  swift_retain();
  swift_retain();
  id v24 = v20;
  uint64_t v25 = v23(v22, v21);
  uint64_t v27 = v26;
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(v37, v28, v29);
  sub_24A42C8F4(v25, v27, v37, *((unsigned char *)a4 + v36[8]), (uint64_t)v38);
  uint64_t v30 = v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_extraHeaders;
  long long v31 = v38[3];
  *(_OWORD *)(v30 + 32) = v38[2];
  *(_OWORD *)(v30 + 48) = v31;
  *(_OWORD *)(v30 + 64) = v38[4];
  *(void *)(v30 + 80) = v39;
  long long v32 = v38[1];
  *(_OWORD *)uint64_t v30 = v38[0];
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_filters) = *(void *)((char *)a4 + v36[7]);
  uint64_t v33 = a4[1];
  uint64_t v34 = (void *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_name);
  *uint64_t v34 = *a4;
  v34[1] = v33;
  LOBYTE(v23) = *((unsigned char *)a4 + v36[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A40D260((uint64_t)a4, type metadata accessor for SessionConfiguration.BackendHTTP);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_skipLogging) = (_BYTE)v23;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a2);
  return v8;
}

uint64_t sub_24A40C958(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D695474736F70 && a2 == 0xE800000000000000;
  if (v3 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E65696C63 && a2 == 0xE800000000000000 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24A464A78();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24A40CA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24A3E1604(0, v4, 0);
    uint64_t v8 = 0;
    uint64_t v5 = v33;
    uint64_t v9 = a1 + 32;
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC19CloudTelemetryTools11BackendHTTP_filters);
    uint64_t v23 = v10;
    uint64_t v24 = v10 + 32;
    int64_t v22 = v4;
    while (1)
    {
      BOOL v11 = (uint64_t *)(v9 + 24 * v8);
      uint64_t v12 = *v11;
      long long v25 = *(_OWORD *)(v11 + 1);
      uint64_t v31 = *v11;
      long long v32 = v25;
      uint64_t v13 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13) {
        break;
      }
      long long v17 = v25;
LABEL_9:
      uint64_t v33 = v5;
      unint64_t v19 = *(void *)(v5 + 16);
      unint64_t v18 = *(void *)(v5 + 24);
      if (v19 >= v18 >> 1)
      {
        long long v27 = v17;
        sub_24A3E1604(v18 > 1, v19 + 1, 1);
        long long v17 = v27;
        uint64_t v5 = v33;
      }
      ++v8;
      *(void *)(v5 + 16) = v19 + 1;
      uint64_t v20 = v5 + 24 * v19;
      *(void *)(v20 + 32) = v12;
      *(_OWORD *)(v20 + 40) = v17;
      if (v8 == v4) {
        return v5;
      }
    }
    uint64_t v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v24;
    while (1)
    {
      sub_24A3E34A0(v14, (uint64_t)v28);
      uint64_t v16 = v29;
      uint64_t v15 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v23;
        swift_bridgeObjectRelease();
        uint64_t v12 = v31;
        long long v17 = v32;
        uint64_t v5 = v26;
        uint64_t v9 = a1 + 32;
        int64_t v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_24A40CCD4()
{
  unint64_t result = qword_269793670;
  if (!qword_269793670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793670);
  }
  return result;
}

unint64_t sub_24A40CD30()
{
  unint64_t result = qword_269797168[0];
  if (!qword_269797168[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269797168);
  }
  return result;
}

uint64_t sub_24A40CD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A40CDEC()
{
  return type metadata accessor for BackendHTTP();
}

uint64_t type metadata accessor for BackendHTTP()
{
  uint64_t result = qword_2697972F0;
  if (!qword_2697972F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A40CE40()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _s9ZLibErrorOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s9ZLibErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *_s9ZLibErrorOMa()
{
  return &_s9ZLibErrorON;
}

void *assignWithCopy for BackendHTTP.POSTData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BackendHTTP.POSTData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData()
{
  return &type metadata for BackendHTTP.POSTData;
}

unint64_t sub_24A40D05C()
{
  unint64_t result = qword_269797380[0];
  if (!qword_269797380[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269797380);
  }
  return result;
}

unint64_t sub_24A40D0B0()
{
  unint64_t result = qword_269793C08;
  if (!qword_269793C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793C00);
    sub_24A3E8FF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C08);
  }
  return result;
}

uint64_t sub_24A40D124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A40D16C()
{
  unint64_t result = qword_269793C10;
  if (!qword_269793C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C10);
  }
  return result;
}

uint64_t sub_24A40D1C0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_24A463B38();
      swift_allocObject();
      sub_24A463B08();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24A463D68();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_24A40D260(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for BackendHTTP.POSTData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A40D38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData.CodingKeys()
{
  return &type metadata for BackendHTTP.POSTData.CodingKeys;
}

unint64_t sub_24A40D3C8()
{
  unint64_t result = qword_269797490[0];
  if (!qword_269797490[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269797490);
  }
  return result;
}

unint64_t sub_24A40D420()
{
  unint64_t result = qword_2697975A0;
  if (!qword_2697975A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697975A0);
  }
  return result;
}

unint64_t sub_24A40D478()
{
  unint64_t result = qword_2697975A8[0];
  if (!qword_2697975A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697975A8);
  }
  return result;
}

uint64_t sub_24A40D4CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for CachedSession()
{
  uint64_t result = qword_2697976B0;
  if (!qword_2697976B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A40D574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a5 + 48) = *(void *)(a1 + 48);
  *(void *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(double *)(a5 + 72) = a6;
  uint64_t v9 = type metadata accessor for CachedSession();
  uint64_t v10 = a5 + *(int *)(v9 + 28);
  uint64_t v11 = sub_24A463E78();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  uint64_t v13 = a5 + *(int *)(v9 + 32);
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_24A40D624@<X0>(uint64_t a1@<X8>)
{
  return sub_24A40D4CC(v1, a1);
}

uint64_t sub_24A40D630()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_24A40D660()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_24A40D668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_24A463E78();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

unint64_t sub_24A40D6D8(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 32)) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 32) + 4) << 32);
}

uint64_t sub_24A40D700(uint64_t a1, uint64_t a2)
{
  void v25[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24A464198();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A464188();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24A4642C8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return arc4random_uniform(0x2710u);
  }
  uint64_t v21 = v7;
  sub_24A4642B8();
  uint64_t v13 = sub_24A464288();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v15 >> 60 == 15)
  {
    __break(1u);
LABEL_15:
    swift_release();
    swift_release();
    __break(1u);
    JUMPOUT(0x24A40DBCCLL);
  }
  sub_24A40DBDC();
  sub_24A464168();
  switch(v15 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      sub_24A3E8D0C(v13, v15);
      sub_24A405EB8((int)v13, v13 >> 32);
      break;
    case 2uLL:
      uint64_t v17 = *(void *)(v13 + 16);
      uint64_t v18 = *(void *)(v13 + 24);
      sub_24A406054(v13, v15);
      swift_retain();
      swift_retain();
      sub_24A405EB8(v17, v18);
      if (v2) {
        goto LABEL_15;
      }
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v25, 0, 14);
      goto LABEL_9;
    default:
      v25[0] = v13;
      LOWORD(v25[1]) = v15;
      BYTE2(v25[1]) = BYTE2(v15);
      BYTE3(v25[1]) = BYTE3(v15);
      BYTE4(v25[1]) = BYTE4(v15);
      BYTE5(v25[1]) = BYTE5(v15);
LABEL_9:
      sub_24A464148();
      break;
  }
  sub_24A3E8CA0(v13, v15);
  unint64_t v19 = v23;
  sub_24A464158();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  sub_24A464178();
  sub_24A3E8CA0(v13, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v21);
}

unint64_t sub_24A40DBDC()
{
  unint64_t result = qword_269793AD8;
  if (!qword_269793AD8)
  {
    sub_24A464198();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AD8);
  }
  return result;
}

int8x16_t *sub_24A40DC34@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, int8x8_t *a3@<X8>)
{
  if (!result
    || (a2 - (uint64_t)result >= 0 ? (uint64_t v3 = a2 - (void)result) : (uint64_t v3 = a2 - (void)result + 7),
        (unint64_t)(a2 - (void)result + 7) < 0xF))
  {
    *a3 = 0;
    return result;
  }
  unint64_t v4 = ((v3 >> 3) - 1) & 0x1FFFFFFFFFFFFFFFLL;
  if (v4 >= 3)
  {
    unint64_t v7 = v4 + 1;
    uint64_t v8 = (v4 + 1) & 0x3FFFFFFFFFFFFFFCLL;
    unsigned int v6 = &result->i64[v8];
    uint64_t v9 = result + 1;
    int8x16_t v10 = 0uLL;
    uint64_t v11 = v8;
    int8x16_t v12 = 0uLL;
    do
    {
      int8x16_t v10 = veorq_s8(v9[-1], v10);
      int8x16_t v12 = veorq_s8(*v9, v12);
      v9 += 2;
      v11 -= 4;
    }
    while (v11);
    int8x16_t v13 = veorq_s8(v12, v10);
    int8x8_t v5 = veor_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL));
    if (v7 == v8) {
      goto LABEL_14;
    }
  }
  else
  {
    int8x8_t v5 = 0;
    unsigned int v6 = (uint64_t *)result;
  }
  unint64_t v14 = (uint64_t *)((char *)result->i64 + (v3 & 0xFFFFFFFFFFFFFFF8));
  do
  {
    uint64_t v15 = *v6++;
    *(void *)&v5 ^= v15;
  }
  while (v6 != v14);
LABEL_14:
  *a3 = v5;
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionUser(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SessionUser(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_24A40DD44(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24A40DD60(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionUser()
{
  return &type metadata for SessionUser;
}

void *sub_24A40DD90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v20 = (uint64_t)a2 + v12;
    uint64_t v21 = a1 + v12;
    *(void *)(a1 + 56) = v10;
    uint64_t v13 = sub_24A463E78();
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v21, v20, v13);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = *(unsigned char *)(v17 + 4);
  }
  return v4;
}

uint64_t sub_24A40DEEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24A463E78();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_24A40DF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 56) = v8;
  uint64_t v12 = sub_24A463E78();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v18, v11, v12);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  return a1;
}

uint64_t sub_24A40E090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 4);
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = v13;
  return a1;
}

uint64_t sub_24A40E1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  return a1;
}

uint64_t sub_24A40E290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  return a1;
}

uint64_t sub_24A40E388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A40E39C);
}

uint64_t sub_24A40E39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24A463E78();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24A40E44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A40E460);
}

uint64_t sub_24A40E460(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24A463E78();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24A40E508()
{
  uint64_t result = sub_24A463E78();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Session()
{
  return self;
}

void *sub_24A40E5E4()
{
  uint64_t v0 = dlopen("../../AppleInternal/Library/Frameworks/CloudTelemetryLocalBackend.framework/CloudTelemetryLocalBackend", 1);
  if (v0)
  {
    uint64_t result = dlsym(v0, "initLocalBackend");
  }
  else
  {
    if (dlerror())
    {
      uint64_t v2 = sub_24A464368();
      unint64_t v4 = v3;
    }
    else
    {
      unint64_t v4 = 0xE700000000000000;
      uint64_t v2 = 0x6E776F6E6B6E75;
    }
    if (qword_2697976C8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24A464018();
    __swift_project_value_buffer(v5, (uint64_t)qword_26979A6E0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24A463FF8();
    os_log_type_t v7 = sub_24A4645B8();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      sub_24A3E0E30(v2, v4, &v10);
      sub_24A4646E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v6, v7, "failed to load CloudTelemetryTTR framework: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v9, -1, -1);
      MEMORY[0x24C5C5D60](v8, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t result = 0;
  }
  off_26979A6D8 = result;
  return result;
}

uint64_t sub_24A40E7D8()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A6E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A6E0);
  return sub_24A464008();
}

uint64_t sub_24A40E85C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_24A40E8B4(a1, a2, a3);
  return v6;
}

void *sub_24A40E8B4(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  swift_defaultActor_initialize();
  v4[16] = sub_24A410718(a2);
  v4[17] = a1;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v24, v8, v9);
  uint64_t v11 = v24[0];
  uint64_t v10 = v24[1];
  swift_bridgeObjectRetain();
  sub_24A3E1C84((uint64_t)v24);
  v4[14] = v11;
  v4[15] = v10;
  uint64_t v12 = sub_24A42508C();
  swift_beginAccess();
  if (*v12 == 1)
  {
    if (qword_2697976C0 != -1) {
      swift_once();
    }
    uint64_t v13 = (uint64_t (*)(uint64_t))off_26979A6D8;
    if (off_26979A6D8)
    {
      uint64_t v14 = a3[3];
      uint64_t v15 = a3[4];
      __swift_project_boxed_opaque_existential_1(a3, v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      if ((v16 & 0x100000000) != 0) {
        uint64_t v16 = 0;
      }
      else {
        uint64_t v16 = v16;
      }
      v4[18] = (id)v13(v16);
      if (qword_2697976C8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_24A464018();
      __swift_project_value_buffer(v17, (uint64_t)qword_26979A6E0);
      uint64_t v18 = sub_24A463FF8();
      os_log_type_t v19 = sub_24A4645D8();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_18;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      uint64_t v21 = "initialized CloudTelemetryTTR framework";
    }
    else
    {
      v4[18] = 0;
      if (qword_2697976C8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_24A464018();
      __swift_project_value_buffer(v22, (uint64_t)qword_26979A6E0);
      uint64_t v18 = sub_24A463FF8();
      os_log_type_t v19 = sub_24A4645B8();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_18;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      uint64_t v21 = "failed to initialize CloudTelemetryTTR framework";
    }
    _os_log_impl(&dword_24A3DA000, v18, v19, v21, v20, 2u);
    MEMORY[0x24C5C5D60](v20, -1, -1);
LABEL_18:

    goto LABEL_19;
  }
  v4[18] = 0;
LABEL_19:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  return v4;
}

uint64_t sub_24A40EB68(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *v1;
  v2[13] = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793898);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A40EC8C, v1, 0);
}

uint64_t sub_24A40EC8C()
{
  unint64_t v106 = v0;
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_24A42508C();
  swift_beginAccess();
  if (*v2 != 1) {
    goto LABEL_76;
  }
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  swift_retain();
  uint64_t v5 = sub_24A410980(v3, v4);
  swift_release();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    os_log_type_t v7 = (_OWORD *)(v5 + 40);
    uint64_t v8 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v9 = *((void *)v7 - 1);
      long long v103 = *v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v105 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24A3E1604(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v105;
      }
      unint64_t v11 = *(void *)(v8 + 16);
      unint64_t v10 = *(void *)(v8 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_24A3E1604(v10 > 1, v11 + 1, 1);
        uint64_t v8 = v105;
      }
      *(void *)(v8 + 16) = v11 + 1;
      uint64_t v12 = v8 + 24 * v11;
      *(void *)(v12 + 32) = v9;
      *(_OWORD *)(v12 + 40) = v103;
      os_log_type_t v7 = (_OWORD *)((char *)v7 + 24);
      --v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  v0[17] = v8;
  uint64_t v13 = v0[11];
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v13 + 144);
  v0[18] = v14;
  if (!v14) {
    goto LABEL_73;
  }
  uint64_t v15 = *(void *)(v8 + 16);
  v0[19] = v15;
  if (!v15) {
    goto LABEL_73;
  }
  v0[20] = 0;
  uint64_t v16 = v0[17];
  uint64_t v17 = *(void *)(v16 + 16);
  id v18 = v14;
  if (!v17) {
    goto LABEL_72;
  }
  os_log_type_t v19 = v0 + 8;
  id v102 = v0 + 9;
  unint64_t v20 = sub_24A410BB4();
  unint64_t v21 = 0;
  uint64_t v22 = MEMORY[0x263F8D310];
  uint64_t v23 = -1;
  os_log_type_t v97 = v0 + 8;
  while (2)
  {
    uint64_t v24 = *(void *)(v16 + 24 * v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *os_log_type_t v19 = sub_24A4641E8();
    uint64_t v25 = *(void *)(v24 + 64);
    uint64_t v98 = v24 + 64;
    uint64_t v100 = v24;
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    long long v27 = (void *)swift_bridgeObjectRelease();
    int64_t v101 = 0;
    if (-v26 < 64) {
      uint64_t v28 = ~(-1 << -(char)v26);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v29 = v28 & v25;
    int64_t v99 = (unint64_t)(63 - v26) >> 6;
    while (1)
    {
      long long v32 = &unk_2697938B0;
      if (v29)
      {
        uint64_t v104 = (v29 - 1) & v29;
        unint64_t v33 = __clz(__rbit64(v29)) | (v101 << 6);
LABEL_23:
        uint64_t v34 = *(void **)(v1 + 120);
        uint64_t v35 = *(void *)(v1 + 104);
        uint64_t v36 = (void *)(*(void *)(v100 + 48) + 16 * v33);
        uint64_t v37 = v36[1];
        *uint64_t v34 = *v36;
        v34[1] = v37;
        uint64_t v38 = *(void *)(v100 + 56) + *(void *)(v35 + 72) * v33;
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
        sub_24A3E1A98(v38, (uint64_t)v34 + *(int *)(v39 + 48));
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v34, 0, 1, v39);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
      int64_t v40 = v101 + 1;
      if (__OFADD__(v101, 1))
      {
        __break(1u);
        goto LABEL_88;
      }
      if (v40 < v99)
      {
        unint64_t v41 = *(void *)(v98 + 8 * v40);
        if (v41) {
          goto LABEL_27;
        }
        int64_t v42 = v101 + 2;
        ++v101;
        if (v40 + 1 < v99)
        {
          unint64_t v41 = *(void *)(v98 + 8 * v42);
          if (v41) {
            goto LABEL_30;
          }
          int64_t v101 = v40 + 1;
          if (v40 + 2 < v99)
          {
            unint64_t v41 = *(void *)(v98 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2;
LABEL_27:
              uint64_t v104 = (v41 - 1) & v41;
              unint64_t v33 = __clz(__rbit64(v41)) + (v40 << 6);
              int64_t v101 = v40;
              goto LABEL_23;
            }
            int64_t v42 = v40 + 3;
            int64_t v101 = v40 + 2;
            if (v40 + 3 < v99)
            {
              unint64_t v41 = *(void *)(v98 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v40 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    break;
                  }
                  if (v40 >= v99)
                  {
                    int64_t v101 = v99 - 1;
                    goto LABEL_41;
                  }
                  unint64_t v41 = *(void *)(v98 + 8 * v40);
                  ++v42;
                  if (v41) {
                    goto LABEL_27;
                  }
                }
                __break(1u);
                goto LABEL_99;
              }
LABEL_30:
              int64_t v40 = v42;
              goto LABEL_27;
            }
          }
        }
      }
LABEL_41:
      uint64_t v43 = *(void *)(v1 + 120);
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
      uint64_t v104 = 0;
LABEL_42:
      uint64_t v45 = *(void *)(v1 + 128);
      sub_24A40CD84(*(void *)(v1 + 120), v45);
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46) == 1) {
        break;
      }
      uint64_t v47 = v22;
      unint64_t v48 = v20;
      uint64_t v49 = *(uint64_t **)(v1 + 128);
      uint64_t v50 = *(void *)(v1 + 112);
      uint64_t v51 = v1;
      uint64_t v1 = *v49;
      uint64_t v52 = v49[1];
      sub_24A3EF5C0((uint64_t)v49 + *(int *)(v46 + 48), v50);
      uint64_t v23 = (uint64_t)sub_24A3EE13C();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = *(void *)(v51 + 64);
      uint64_t v55 = v51;
      *(void *)(v51 + 64) = 0x8000000000000000;
      *(void *)(v51 + 72) = v54;
      unint64_t v57 = sub_24A3E1488(v1, v52);
      int64_t v40 = *(void *)(v54 + 16);
      BOOL v58 = (v56 & 1) == 0;
      long long v27 = (void *)(v40 + v58);
      if (__OFADD__(v40, v58))
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        uint64_t v71 = 2;
LABEL_90:
        uint64_t v82 = (v40 - 1) & v40;
        unint64_t v81 = __clz(__rbit64(v40)) + (v71 << 6);
LABEL_91:
        *(void *)(v1 + 176) = v71;
        *(void *)(v1 + 184) = v82;
        unint64_t v84 = (uint64_t *)(v27[6] + 16 * v81);
        uint64_t v26 = *v84;
        long long v32 = (void *)v84[1];
        *(void *)(v1 + 192) = v32;
        uint64_t v85 = *(void **)(v27[7] + 8 * v81);
        *(void *)(v1 + 200) = v85;
        uint64_t v86 = qword_2697976C8;
        swift_bridgeObjectRetain();
        uint64_t v23 = v85;
        if (v86 == -1)
        {
LABEL_92:
          uint64_t v87 = sub_24A464018();
          __swift_project_value_buffer(v87, (uint64_t)qword_26979A6E0);
          swift_bridgeObjectRetain_n();
          int64_t v88 = sub_24A463FF8();
          os_log_type_t v89 = sub_24A4645D8();
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = swift_slowAlloc();
            uint64_t v91 = swift_slowAlloc();
            uint64_t v105 = v91;
            *(_DWORD *)uint64_t v90 = 136446210;
            swift_bridgeObjectRetain();
            *(void *)(v90 + 4) = sub_24A3E0E30(v26, (unint64_t)v32, &v105);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24A3DA000, v88, v89, "running TTR rule \"%{public}s\"", (uint8_t *)v90, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5C5D60](v91, -1, -1);
            MEMORY[0x24C5C5D60](v90, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v92 = *(void *)(v1 + 144);
          uint64_t v93 = *(void *)(v1 + 88);
          uint64_t v94 = *(void *)(v1 + 96);
          sub_24A410BF4();
          uint64_t v95 = (void *)swift_task_alloc();
          *(void *)(v1 + 208) = v95;
          v95[2] = v23;
          v95[3] = v92;
          v95[4] = v97;
          v95[5] = v93;
          v95[6] = v26;
          v95[7] = v32;
          v95[8] = v94;
          uint64_t v96 = (void *)swift_task_alloc();
          *(void *)(v1 + 216) = v96;
          void *v96 = v1;
          v96[1] = sub_24A40F774;
          return MEMORY[0x270FA2318]();
        }
LABEL_99:
        swift_once();
        goto LABEL_92;
      }
      uint64_t v26 = v56;
      if (*(void *)(v54 + 24) >= (uint64_t)v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          long long v27 = sub_24A3EF8A4();
        }
      }
      else
      {
        sub_24A3EF2B0((uint64_t)v27, isUniquelyReferenced_nonNull_native);
        long long v27 = (void *)sub_24A3E1488(v1, v52);
        if ((v26 & 1) != (v59 & 1))
        {
          return sub_24A464B28();
        }
        unint64_t v57 = (unint64_t)v27;
      }
      uint64_t v60 = (void *)*v102;
      if (v26)
      {
        uint64_t v30 = v60[7];
        uint64_t v26 = 8 * v57;

        *(void *)(v30 + 8 * v57) = v23;
      }
      else
      {
        v60[(v57 >> 6) + 8] |= 1 << v57;
        uint64_t v61 = (uint64_t *)(v60[6] + 16 * v57);
        uint64_t *v61 = v1;
        v61[1] = v52;
        *(void *)(v60[7] + 8 * v57) = v23;
        uint64_t v62 = v60[2];
        BOOL v63 = __OFADD__(v62, 1);
        int64_t v40 = v62 + 1;
        if (v63) {
          goto LABEL_85;
        }
        uint64_t v60[2] = v40;
        swift_bridgeObjectRetain();
      }
      uint64_t v1 = v55;
      uint64_t v31 = *(void *)(v55 + 112);
      *(void *)(v55 + 64) = v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v27 = (void *)sub_24A410C80(v31);
      unint64_t v20 = v48;
      uint64_t v22 = v47;
      unint64_t v29 = v104;
    }
    uint64_t v64 = *(void *)(v1 + 88);
    swift_release();
    uint64_t v65 = *(void *)(v64 + 128);
    *(void *)(v1 + 168) = v65;
    char v66 = *(unsigned char *)(v65 + 32);
    *(unsigned char *)(v1 + 224) = v66;
    uint64_t v67 = -1 << v66;
    if (-(-1 << v66) < 64) {
      uint64_t v68 = ~(-1 << -(char)v67);
    }
    else {
      uint64_t v68 = -1;
    }
    unint64_t v69 = v68 & *(void *)(v65 + 64);
    long long v27 = (void *)swift_bridgeObjectRetain();
    if (v69)
    {
      uint64_t v71 = 0;
      unint64_t v81 = __clz(__rbit64(v69));
      uint64_t v82 = (v69 - 1) & v69;
      goto LABEL_91;
    }
    unint64_t v70 = 63 - v67;
    uint64_t v71 = 1;
    if ((unint64_t)(63 - v67) > 0x7F)
    {
      int64_t v40 = v27[9];
      if (v40) {
        goto LABEL_90;
      }
      if (v70 >= 0xC0)
      {
        int64_t v40 = v27[10];
        if (v40) {
          goto LABEL_86;
        }
        if (v70 >= 0x100)
        {
          int64_t v40 = v27[11];
          if (!v40)
          {
            if (v70 >= 0x140)
            {
              int64_t v40 = v27[12];
              if (v40)
              {
                uint64_t v71 = 4;
                goto LABEL_90;
              }
              uint64_t v72 = 0;
              uint64_t v73 = v70 >> 6;
              if (v70 >> 6 <= 5) {
                uint64_t v73 = 5;
              }
              uint64_t v74 = v73 - 5;
              while (v74 != v72)
              {
                int64_t v40 = v27[v72++ + 13];
                if (v40)
                {
                  uint64_t v71 = v72 + 4;
                  goto LABEL_90;
                }
              }
            }
            goto LABEL_70;
          }
LABEL_88:
          uint64_t v71 = 3;
          goto LABEL_90;
        }
      }
    }
LABEL_70:
    uint64_t v75 = *(void *)(v1 + 152);
    uint64_t v76 = *(void *)(v1 + 160);
    swift_release();
    swift_bridgeObjectRelease();
    if (v76 + 1 == v75)
    {
      int64_t v83 = *(void **)(v1 + 144);
      swift_release();

      goto LABEL_74;
    }
    unint64_t v21 = *(void *)(v1 + 160) + 1;
    *(void *)(v1 + 160) = v21;
    uint64_t v16 = *(void *)(v1 + 136);
    os_log_type_t v19 = v97;
    uint64_t v23 = -1;
    if (v21 < *(void *)(v16 + 16)) {
      continue;
    }
    break;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  swift_release();
LABEL_74:
  swift_beginAccess();
  unint64_t v77 = (void (*)(uint64_t))off_26979A6F8;
  if (off_26979A6F8)
  {
    uint64_t v78 = swift_retain();
    v77(v78);
    sub_24A3F1178((uint64_t)v77);
  }
LABEL_76:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v79 = *(uint64_t (**)(void))(v1 + 8);
  return v79();
}

uint64_t sub_24A40F774()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A40F8C4, v1, 0);
}

uint64_t sub_24A40F8C4()
{
  uint64_t v79 = v1;
  uint64_t v73 = (uint64_t *)(v1 + 64);

  int64_t v3 = *(void *)(v1 + 176);
  unint64_t v4 = *(void *)(v1 + 184);
  if (v4)
  {
    uint64_t v5 = *(void *)(v1 + 168);
LABEL_3:
    uint64_t v6 = (v4 - 1) & v4;
    unint64_t v7 = __clz(__rbit64(v4)) | (v3 << 6);
LABEL_4:
    *(void *)(v1 + 176) = v3;
    *(void *)(v1 + 184) = v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v7);
    uint64_t v9 = *v8;
    unint64_t v0 = v8[1];
    *(void *)(v1 + 192) = v0;
    unint64_t v10 = *(void **)(*(void *)(v5 + 56) + 8 * v7);
    *(void *)(v1 + 200) = v10;
    uint64_t v11 = qword_2697976C8;
    swift_bridgeObjectRetain();
    unint64_t v2 = v10;
    if (v11 != -1) {
      goto LABEL_84;
    }
    goto LABEL_5;
  }
  uint64_t v9 = -1;
LABEL_12:
  BOOL v22 = __OFADD__(v3++, 1);
  if (!v22)
  {
    int64_t v23 = (unint64_t)((1 << *(unsigned char *)(v1 + 224)) + 63) >> 6;
    uint64_t v5 = *(void *)(v1 + 168);
    if (v3 < v23)
    {
      uint64_t v24 = v5 + 64;
      unint64_t v25 = *(void *)(v5 + 64 + 8 * v3);
      if (v25) {
        goto LABEL_72;
      }
      int64_t v26 = v3 + 1;
      if (v3 + 1 < v23)
      {
        unint64_t v25 = *(void *)(v24 + 8 * v26);
        if (v25) {
          goto LABEL_71;
        }
        int64_t v26 = v3 + 2;
        if (v3 + 2 < v23)
        {
          unint64_t v25 = *(void *)(v24 + 8 * v26);
          if (v25)
          {
LABEL_71:
            int64_t v3 = v26;
            goto LABEL_72;
          }
          v3 += 3;
          if (v3 < v23)
          {
            unint64_t v25 = *(void *)(v24 + 8 * v3);
            if (!v25)
            {
              while (1)
              {
                int64_t v26 = v3 + 1;
                if (__OFADD__(v3, 1)) {
                  goto LABEL_83;
                }
                if (v26 >= v23) {
                  goto LABEL_25;
                }
                unint64_t v25 = *(void *)(v24 + 8 * v26);
                ++v3;
                if (v25) {
                  goto LABEL_71;
                }
              }
            }
LABEL_72:
            uint64_t v6 = (v25 - 1) & v25;
            unint64_t v7 = __clz(__rbit64(v25)) + (v3 << 6);
            goto LABEL_4;
          }
        }
      }
    }
LABEL_25:
    unint64_t v0 = *(void *)(v1 + 152);
    uint64_t v27 = *(void *)(v1 + 160);
    swift_release();
    swift_bridgeObjectRelease();
    if (v27 + 1 == v0)
    {
      unint64_t v69 = *(void **)(v1 + 144);
      swift_release();

      swift_beginAccess();
      unint64_t v70 = (void (*)(uint64_t))off_26979A6F8;
      if (off_26979A6F8)
      {
        uint64_t v71 = swift_retain();
        v70(v71);
        sub_24A3F1178((uint64_t)v70);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v72 = *(uint64_t (**)(void))(v1 + 8);
      return v72();
    }
    unint64_t v28 = *(void *)(v1 + 160) + 1;
    *(void *)(v1 + 160) = v28;
    uint64_t v29 = *(void *)(v1 + 136);
    if (v28 >= *(void *)(v29 + 16)) {
      goto LABEL_82;
    }
    uint64_t v30 = *(void *)(v29 + 24 * v28 + 48);
    sub_24A410BB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *uint64_t v73 = sub_24A4641E8();
    unint64_t v0 = *(void *)(v30 + 64);
    uint64_t v74 = v30 + 64;
    uint64_t v76 = v30;
    unint64_t v2 = -1 << *(unsigned char *)(v30 + 32);
    swift_bridgeObjectRelease();
    int64_t v77 = 0;
    if (-(uint64_t)v2 < 64) {
      uint64_t v31 = ~(-1 << -(char)v2);
    }
    else {
      uint64_t v31 = -1;
    }
    uint64_t v9 = v31 & v0;
    int64_t v75 = (63 - v2) >> 6;
    while (!v9)
    {
      int64_t v41 = v77 + 1;
      if (__OFADD__(v77, 1)) {
        goto LABEL_80;
      }
      if (v41 < v75)
      {
        unint64_t v42 = *(void *)(v74 + 8 * v41);
        if (v42) {
          goto LABEL_39;
        }
        int64_t v43 = v77 + 2;
        ++v77;
        if (v41 + 1 < v75)
        {
          unint64_t v42 = *(void *)(v74 + 8 * v43);
          if (v42) {
            goto LABEL_42;
          }
          int64_t v77 = v41 + 1;
          if (v41 + 2 < v75)
          {
            unint64_t v42 = *(void *)(v74 + 8 * (v41 + 2));
            if (v42)
            {
              v41 += 2;
              goto LABEL_39;
            }
            int64_t v43 = v41 + 3;
            int64_t v77 = v41 + 2;
            if (v41 + 3 < v75)
            {
              unint64_t v42 = *(void *)(v74 + 8 * v43);
              if (!v42)
              {
                while (1)
                {
                  int64_t v41 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    break;
                  }
                  if (v41 >= v75)
                  {
                    int64_t v77 = v75 - 1;
                    goto LABEL_53;
                  }
                  unint64_t v42 = *(void *)(v74 + 8 * v41);
                  ++v43;
                  if (v42) {
                    goto LABEL_39;
                  }
                }
                __break(1u);
                return MEMORY[0x270FA2318]();
              }
LABEL_42:
              int64_t v41 = v43;
LABEL_39:
              uint64_t v9 = (v42 - 1) & v42;
              unint64_t v35 = __clz(__rbit64(v42)) + (v41 << 6);
              int64_t v77 = v41;
LABEL_35:
              uint64_t v36 = *(void **)(v1 + 120);
              uint64_t v37 = *(void *)(v1 + 104);
              uint64_t v38 = (void *)(*(void *)(v76 + 48) + 16 * v35);
              uint64_t v39 = v38[1];
              void *v36 = *v38;
              v36[1] = v39;
              unint64_t v2 = *(void *)(v76 + 56) + *(void *)(v37 + 72) * v35;
              uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
              sub_24A3E1A98(v2, (uint64_t)v36 + *(int *)(v40 + 48));
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v36, 0, 1, v40);
              swift_bridgeObjectRetain();
              goto LABEL_54;
            }
          }
        }
      }
LABEL_53:
      uint64_t v44 = *(void *)(v1 + 120);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
      uint64_t v9 = 0;
LABEL_54:
      unint64_t v0 = *(void *)(v1 + 128);
      sub_24A40CD84(*(void *)(v1 + 120), v0);
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938B0);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v0, 1, v46) == 1)
      {
        uint64_t v17 = *(void *)(v1 + 88);
        swift_release();
        uint64_t v18 = *(void *)(v17 + 128);
        *(void *)(v1 + 168) = v18;
        char v19 = *(unsigned char *)(v18 + 32);
        *(unsigned char *)(v1 + 224) = v19;
        uint64_t v20 = 1 << v19;
        uint64_t v9 = -1;
        if (v20 < 64) {
          uint64_t v21 = ~(-1 << v20);
        }
        else {
          uint64_t v21 = -1;
        }
        unint64_t v4 = v21 & *(void *)(v18 + 64);
        uint64_t v5 = swift_bridgeObjectRetain();
        int64_t v3 = 0;
        if (v4) {
          goto LABEL_3;
        }
        goto LABEL_12;
      }
      uint64_t v47 = *(uint64_t **)(v1 + 128);
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      sub_24A3EF5C0((uint64_t)v47 + *(int *)(v46 + 48), *(void *)(v1 + 112));
      unint64_t v0 = (unint64_t)sub_24A3EE13C();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v51 = *(void *)(v1 + 64);
      *(void *)(v1 + 64) = 0x8000000000000000;
      *(void *)(v1 + 72) = v51;
      unint64_t v2 = sub_24A3E1488(v49, v48);
      uint64_t v53 = *(void *)(v51 + 16);
      BOOL v54 = (v52 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54))
      {
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      char v56 = v52;
      if (*(void *)(v51 + 24) >= v55)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_24A3EF8A4();
        }
      }
      else
      {
        sub_24A3EF2B0(v55, isUniquelyReferenced_nonNull_native);
        unint64_t v57 = sub_24A3E1488(v49, v48);
        if ((v56 & 1) != (v58 & 1))
        {
          return sub_24A464B28();
        }
        unint64_t v2 = v57;
      }
      char v59 = *(void **)(v1 + 72);
      if (v56)
      {
        uint64_t v32 = v59[7];
        v2 *= 8;

        *(void *)(v32 + v2) = v0;
      }
      else
      {
        v59[(v2 >> 6) + 8] |= 1 << v2;
        uint64_t v60 = (uint64_t *)(v59[6] + 16 * v2);
        uint64_t *v60 = v49;
        v60[1] = v48;
        *(void *)(v59[7] + 8 * v2) = v0;
        uint64_t v61 = v59[2];
        BOOL v22 = __OFADD__(v61, 1);
        uint64_t v62 = v61 + 1;
        if (v22) {
          goto LABEL_79;
        }
        v59[2] = v62;
        swift_bridgeObjectRetain();
      }
      uint64_t v33 = *(void *)(v1 + 112);
      *(void *)(v1 + 64) = v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24A410C80(v33);
    }
    unint64_t v34 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v35 = v34 | (v77 << 6);
    goto LABEL_35;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  swift_once();
LABEL_5:
  uint64_t v12 = sub_24A464018();
  __swift_project_value_buffer(v12, (uint64_t)qword_26979A6E0);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_24A463FF8();
  os_log_type_t v14 = sub_24A4645D8();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v78 = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v15 + 4) = sub_24A3E0E30(v9, v0, &v78);
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v13, v14, "running TTR rule \"%{public}s\"", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v16, -1, -1);
    MEMORY[0x24C5C5D60](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v63 = *(void *)(v1 + 144);
  uint64_t v64 = *(void *)(v1 + 88);
  uint64_t v65 = *(void *)(v1 + 96);
  sub_24A410BF4();
  char v66 = (void *)swift_task_alloc();
  *(void *)(v1 + 208) = v66;
  v66[2] = v2;
  v66[3] = v63;
  v66[4] = v73;
  v66[5] = v64;
  v66[6] = v9;
  v66[7] = v0;
  v66[8] = v65;
  uint64_t v67 = (void *)swift_task_alloc();
  *(void *)(v1 + 216) = v67;
  *uint64_t v67 = v1;
  v67[1] = sub_24A40F774;
  return MEMORY[0x270FA2318]();
}

void sub_24A4101EC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_269793C38);
  MEMORY[0x270FA5388](v0);
  self;
  swift_dynamicCastObjCClassUnconditional();
  sub_24A410BB4();
  sub_24A4641B8();
  __break(1u);
}

uint64_t sub_24A4104BC(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_24A410510()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A410560(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_24A3E0820;
  return v6(a1);
}

unint64_t sub_24A410664()
{
  return 0xD000000000000016;
}

unint64_t sub_24A4106F4()
{
  return sub_24A410664();
}

uint64_t sub_24A410718(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697938E8);
  uint64_t result = sub_24A464908();
  int64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v28 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v26 = v6;
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v28 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (long long *)(*(void *)(v28 + 56) + 48 * i);
    *(_OWORD *)uint64_t v29 = v20[1];
    *(_OWORD *)&v29[16] = v20[2];
    long long v30 = *v20;
    long long v31 = *(_OWORD *)&v29[8];
    uint64_t v32 = *(void *)&v29[24];
    swift_bridgeObjectRetain();
    sub_24A3F7038((uint64_t)&v30);
    sub_24A3F7038((uint64_t)&v31);
    sub_24A410FF0((uint64_t)&v32);
    uint64_t v21 = sub_24A432F54();
    sub_24A407ABC((uint64_t)&v30);
    sub_24A407ABC((uint64_t)&v31);
    uint64_t result = sub_24A41101C((uint64_t)&v32);
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v22 = (void *)(v3[6] + 16 * i);
    *BOOL v22 = v18;
    v22[1] = v19;
    *(void *)(v3[7] + 8 * i) = v21;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24A410980(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24A3E1604(0, v4, 0);
    uint64_t v8 = 0;
    uint64_t v5 = v33;
    uint64_t v9 = a1 + 32;
    uint64_t v10 = *(void *)(a2 + 136);
    uint64_t v23 = v10;
    uint64_t v24 = v10 + 32;
    int64_t v22 = v4;
    while (1)
    {
      uint64_t v11 = (uint64_t *)(v9 + 24 * v8);
      uint64_t v12 = *v11;
      long long v25 = *(_OWORD *)(v11 + 1);
      uint64_t v31 = *v11;
      long long v32 = v25;
      uint64_t v13 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13) {
        break;
      }
      long long v17 = v25;
LABEL_9:
      uint64_t v33 = v5;
      unint64_t v19 = *(void *)(v5 + 16);
      unint64_t v18 = *(void *)(v5 + 24);
      if (v19 >= v18 >> 1)
      {
        long long v27 = v17;
        sub_24A3E1604(v18 > 1, v19 + 1, 1);
        long long v17 = v27;
        uint64_t v5 = v33;
      }
      ++v8;
      *(void *)(v5 + 16) = v19 + 1;
      uint64_t v20 = v5 + 24 * v19;
      *(void *)(v20 + 32) = v12;
      *(_OWORD *)(v20 + 40) = v17;
      if (v8 == v4) {
        return v5;
      }
    }
    uint64_t v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v24;
    while (1)
    {
      sub_24A3E34A0(v14, (uint64_t)v28);
      uint64_t v16 = v29;
      uint64_t v15 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      uint64_t v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v23;
        swift_bridgeObjectRelease();
        uint64_t v12 = v31;
        long long v17 = v32;
        uint64_t v5 = v26;
        uint64_t v9 = a1 + 32;
        int64_t v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_24A410BB4()
{
  unint64_t result = qword_2697938C0;
  if (!qword_2697938C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697938C0);
  }
  return result;
}

unint64_t sub_24A410BF4()
{
  unint64_t result = qword_269793C28;
  if (!qword_269793C28)
  {
    type metadata accessor for BackendLocal();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C28);
  }
  return result;
}

uint64_t type metadata accessor for BackendLocal()
{
  return self;
}

void sub_24A410C6C()
{
}

uint64_t sub_24A410C80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A410CDC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_269793C38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24A410DB8()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_269793C38);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (qword_2697976C8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24A464018();
  __swift_project_value_buffer(v3, (uint64_t)qword_26979A6E0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A464598();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v9 = v7;
    *(_DWORD *)uint64_t v6 = 136446466;
    swift_bridgeObjectRetain();
    sub_24A3E0E30(v2, v1, &v9);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 1026;
    sub_24A4646E8();
    _os_log_impl(&dword_24A3DA000, v4, v5, "TTR rule \"%{public}s\" processed event with status: %{BOOL,public}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v7, -1, -1);
    MEMORY[0x24C5C5D60](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_instantiateConcreteTypeFromMangledName(qword_269793C38);
  return sub_24A4644B8();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24A410FF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A41101C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A411048()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A708);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A708);
  return sub_24A464008();
}

uint64_t sub_24A4110C0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = 0;
  uint64_t v3 = v2 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_location;
  uint64_t v4 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

void sub_24A411158(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

id sub_24A411188()
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v1 = OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state);
  if (!v2)
  {
    uint64_t v9 = sub_24A463D48();
    unint64_t v11 = v10;
    uint64_t v12 = self;
    sub_24A3E8D0C(v9, v11);
    uint64_t v13 = (void *)sub_24A463D88();
    sub_24A3E8CB4(v9, v11);
    *(void *)&long long v27 = 0;
    id v14 = objc_msgSend(v12, sel_propertyListWithData_options_format_error_, v13, 0, 0, &v27);

    if (v14)
    {
      id v15 = (id)v27;
      sub_24A464718();
      sub_24A3E8CB4(v9, v11);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793928);
      int v16 = swift_dynamicCast();
      long long v17 = v26;
      if (!v16) {
        long long v17 = 0;
      }
    }
    else
    {
      id v24 = (id)v27;
      long long v25 = (void *)sub_24A463C28();

      swift_willThrow();
      sub_24A3E8CB4(v9, v11);

      long long v17 = 0;
    }
    *(void *)(v0 + v1) = v17;
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0 + v1);
    if (!v2) {
      return 0;
    }
  }
  if (!*(void *)(v2 + 16)) {
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_24A3E1488(0xD000000000000011, 0x800000024A46B220);
  if ((v4 & 1) == 0) {
    goto LABEL_17;
  }
  sub_24A3E200C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v27);
  sub_24A412204();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  if (!*(void *)(v2 + 16)
    || (unint64_t v5 = sub_24A3E1488(0xD000000000000012, 0x800000024A46B240), (v6 & 1) == 0)
    || (sub_24A3E200C(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v27), (swift_dynamicCast() & 1) == 0))
  {

LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_2697977D0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_24A464018();
    __swift_project_value_buffer(v18, (uint64_t)qword_26979A708);
    unint64_t v19 = sub_24A463FF8();
    os_log_type_t v20 = sub_24A4645B8();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_24A3DA000, v19, v20, "failed to decode throttle state", v21, 2u);
      MEMORY[0x24C5C5D60](v21, -1, -1);
    }
    id v22 = 0;
    goto LABEL_23;
  }
  if (*(void *)(v2 + 16) && (unint64_t v7 = sub_24A3E1488(0x756F437972746572, 0xEC0000007265746ELL), (v8 & 1) != 0))
  {
    sub_24A3E200C(*(void *)(v2 + 56) + 32 * v7, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1))
  {

    sub_24A4128EC((uint64_t)&v27);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_18;
  }
  unint64_t v19 = v26;
  [v26 doubleValue];
  [v26 doubleValue];
  id v22 = [v26 integerValue];

LABEL_23:
  return v22;
}

void sub_24A4115F4(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = *MEMORY[0x263EF8340];
  id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a2);
  unint64_t v8 = sub_24A412204();
  unint64_t v30 = v8;
  *(void *)&long long v29 = v7;
  sub_24A3F201C(&v29, v28);
  uint64_t v9 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24A412544(v28, 0xD000000000000011, 0x800000024A46B220, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a3);
  unint64_t v30 = v8;
  *(void *)&long long v29 = v11;
  sub_24A3F201C(&v29, v28);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_24A412544(v28, 0xD000000000000012, 0x800000024A46B240, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  unint64_t v30 = v8;
  *(void *)&long long v29 = v13;
  sub_24A3F201C(&v29, v28);
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_24A412544(v28, 0x756F437972746572, 0xEC0000007265746ELL, v14);
  swift_bridgeObjectRelease();
  *(void *)(v4 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v15 = self;
  int v16 = (void *)sub_24A4641A8();
  swift_bridgeObjectRelease();
  *(void *)&long long v29 = 0;
  id v17 = objc_msgSend(v15, sel_dataWithPropertyList_format_options_error_, v16, 100, 0, &v29);

  id v18 = (id)v29;
  if (v17)
  {
    uint64_t v19 = sub_24A463DA8();
    unint64_t v21 = v20;

    sub_24A3E8D0C(v19, v21);
    sub_24A463DB8();
    sub_24A3E8CB4(v19, v21);
    sub_24A3E8CB4(v19, v21);
  }
  else
  {
    id v22 = v18;
    uint64_t v23 = (void *)sub_24A463C28();

    swift_willThrow();
    if (qword_2697977D0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_24A464018();
    __swift_project_value_buffer(v24, (uint64_t)qword_26979A708);
    long long v25 = sub_24A463FF8();
    os_log_type_t v26 = sub_24A4645B8();
    if (os_log_type_enabled(v25, v26))
    {
      long long v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v27 = 0;
      _os_log_impl(&dword_24A3DA000, v25, v26, "failed to encode throttle", v27, 2u);
      MEMORY[0x24C5C5D60](v27, -1, -1);
    }
  }
}

uint64_t sub_24A411AA0()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24A411B30, v0, 0);
}

uint64_t sub_24A411B30()
{
  *(void *)(v0[3] + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_state) = 0;
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_defaultManager);
  uint64_t v2 = (void *)sub_24A463C88();
  v0[2] = 0;
  unsigned int v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v0 + 2);

  uint64_t v4 = (void *)v0[2];
  if (v3)
  {
    id v5 = v4;
  }
  else
  {
    id v6 = v4;
    id v7 = (void *)sub_24A463C28();

    swift_willThrow();
    if (qword_2697977D0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24A464018();
    __swift_project_value_buffer(v8, (uint64_t)qword_26979A708);
    uint64_t v9 = sub_24A463FF8();
    os_log_type_t v10 = sub_24A4645B8();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl(&dword_24A3DA000, v9, v10, "failed to clear throttle", v11, 2u);
      MEMORY[0x24C5C5D60](v11, -1, -1);
    }
  }
  char v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24A411D2C()
{
  v1[2] = v0;
  uint64_t v2 = sub_24A463E78();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A411DEC, v0, 0);
}

uint64_t sub_24A411DEC()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_24A411188();
  double v5 = v4;
  double v7 = v6;
  sub_24A463E38();
  sub_24A463E28();
  double v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  BOOL v10 = 1;
  if (v5 != 0.0) {
    BOOL v10 = v7 == 0.0 || v9 + 3600.0 < v5 || v5 + v7 < v9;
  }
  swift_task_dealloc();
  char v12 = (uint64_t (*)(BOOL))v0[1];
  return v12(v10);
}

uint64_t sub_24A411EDC()
{
  v1[2] = v0;
  uint64_t v2 = sub_24A463E78();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A411F9C, v0, 0);
}

uint64_t sub_24A411F9C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  int64_t v4 = (int64_t)sub_24A411188();
  sub_24A463E38();
  sub_24A463E28();
  double v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t result = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    double v8 = 86400.0;
    if ((double)(v4 ^ 2) <= 86400.0) {
      double v8 = (double)(v4 ^ 2);
    }
    sub_24A4115F4(result, v6, v8);
    swift_task_dealloc();
    double v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  return result;
}

uint64_t sub_24A412080()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools8Throttle_location;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A41210C()
{
  return type metadata accessor for Throttle();
}

uint64_t type metadata accessor for Throttle()
{
  uint64_t result = qword_269797870;
  if (!qword_269797870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A412160()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_24A412204()
{
  unint64_t result = qword_269793920;
  if (!qword_269793920)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269793920);
  }
  return result;
}

uint64_t sub_24A412244(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793C58);
  uint64_t v6 = sub_24A464918();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_24A3F201C(v24, v35);
      }
      else
      {
        sub_24A3E200C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24A464B98();
      sub_24A464318();
      uint64_t result = sub_24A464BC8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      id v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_24A3F201C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_24A412544(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24A412704();
      goto LABEL_7;
    }
    sub_24A412244(v15, a4 & 1);
    unint64_t v21 = sub_24A3E1488(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_24A464B28();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_24A3F201C(a1, v19);
  }
LABEL_13:
  sub_24A412698(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_24A412698(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_24A3F201C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_24A412704()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793C58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_24A3E200C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_24A3F201C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24A4128EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793C60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_24A41294C(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t sub_24A412960@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24A413740(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

unint64_t sub_24A412990(char a1)
{
  unint64_t result = 0x79745F746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C72755F74736F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
    case 5:
    case 6:
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x5F64656C62616E65;
      break;
    case 8:
      unint64_t result = 0x6C625F746E657665;
      break;
    case 9:
      unint64_t result = 0x68775F746E657665;
      break;
    case 10:
      unint64_t result = 0x68745F746E657665;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0x737265746C6966;
      break;
    case 13:
      unint64_t result = 0x635F646568736168;
      break;
    case 14:
      unint64_t result = 0x6863726172656968;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 17:
      unint64_t result = 0x656469727265766FLL;
      break;
    case 18:
      unint64_t result = 0x746C6165725F7369;
      break;
    case 19:
      unint64_t result = 0xD000000000000011;
      break;
    case 20:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A412C3C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_24A412990(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24A412990(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24A464A78();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24A412CC8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000736570;
  uint64_t v3 = 0x79745F746E657665;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79745F746E657665;
  unint64_t v6 = 0xEB00000000736570;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x800000024A46B2A0;
      uint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x7265746C6966;
      goto LABEL_5;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x747069726373;
LABEL_5:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x800000024A46B2A0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x737265746C6966;
      goto LABEL_10;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x73747069726373) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v3) {
        goto LABEL_15;
      }
LABEL_13:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_24A464A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_24A412E6C()
{
  char v1 = *v0;
  sub_24A464B98();
  sub_24A412990(v1);
  sub_24A464318();
  swift_bridgeObjectRelease();
  return sub_24A464BC8();
}

uint64_t sub_24A412ED0()
{
  return sub_24A464BC8();
}

uint64_t sub_24A412FB4()
{
  sub_24A412990(*v0);
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A413008()
{
  char v1 = *v0;
  sub_24A464B98();
  sub_24A412990(v1);
  sub_24A464318();
  swift_bridgeObjectRelease();
  return sub_24A464BC8();
}

uint64_t sub_24A413068()
{
  return sub_24A464BC8();
}

uint64_t sub_24A413148@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A4138F8();
  *a1 = result;
  return result;
}

unint64_t sub_24A413178@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24A412990(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24A4131A4()
{
  return sub_24A412990(*v0);
}

uint64_t sub_24A4131AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A4138F8();
  *a1 = result;
  return result;
}

void sub_24A4131D4(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_24A4131E0(uint64_t a1)
{
  unint64_t v2 = sub_24A415F8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A41321C(uint64_t a1)
{
  unint64_t v2 = sub_24A415F8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_24A413258@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A41394C(a1, (uint64_t)v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(void *)(a2 + 192) = v11;
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_24A4132DC()
{
  if (*v0) {
    return 0x6C6F687365726874;
  }
  else {
    return 0x7972746E756F63;
  }
}

uint64_t sub_24A41331C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A4147B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24A413344(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24A413350(uint64_t a1)
{
  unint64_t v2 = sub_24A416030();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A41338C(uint64_t a1)
{
  unint64_t v2 = sub_24A416030();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_24A4133C8(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = sub_24A4148B8(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_24A4133F8(unsigned __int8 *a1, char *a2)
{
  return sub_24A412CC8(*a1, *a2);
}

uint64_t sub_24A413404()
{
  return sub_24A412ED0();
}

uint64_t sub_24A41340C()
{
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A4134D8()
{
  return sub_24A413068();
}

uint64_t sub_24A4134E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A414AC8();
  *a1 = result;
  return result;
}

void sub_24A413510(void *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000736570;
  unint64_t v3 = 0x79745F746E657665;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x800000024A46B2A0;
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x7265746C6966;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x747069726373;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_24A4135B0()
{
  unint64_t result = 0x79745F746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x737265746C6966;
      break;
    case 3:
      unint64_t result = 0x73747069726373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A41364C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A414AC8();
  *a1 = result;
  return result;
}

uint64_t sub_24A413674(uint64_t a1)
{
  unint64_t v2 = sub_24A415F38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A4136B0(uint64_t a1)
{
  unint64_t v2 = sub_24A415F38();
  return MEMORY[0x270FA00B8](a1, v2);
}

__n128 sub_24A4136EC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A414B14(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_24A413740(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A464BE8();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    char v4 = sub_24A464A98();
    if (!v4)
    {
      uint64_t v3 = 1;
      goto LABEL_10;
    }
    if (v4 == 1)
    {
      uint64_t v3 = 0;
LABEL_10:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return v3;
    }
    uint64_t v6 = sub_24A464848();
    swift_allocError();
    long long v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(qword_269793D18);
    *long long v8 = &type metadata for StorebagBool;
    uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_24A464BD8();
    sub_24A464838();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v8, *MEMORY[0x263F8DCB0], v6);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_24A4138F8()
{
  unint64_t v0 = sub_24A464AF8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_24A41394C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v142 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_24A415F8C();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v142);
  }
  uint64_t v10 = v6;
  LOBYTE(v86) = 0;
  uint64_t v11 = sub_24A4649B8();
  uint64_t v13 = v12;
  LOBYTE(v86) = 1;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_24A4649B8();
  uint64_t v66 = v11;
  LOBYTE(v86) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_24A464978();
  uint64_t v72 = v15;
  uint64_t v64 = v16;
  char v141 = v17 & 1;
  LOBYTE(v86) = 3;
  LODWORD(v15) = v17;
  uint64_t v18 = sub_24A4649A8();
  int v61 = v19;
  int v62 = v15;
  uint64_t v63 = v18;
  char v139 = v19 & 1;
  LOBYTE(v73) = 4;
  unint64_t v20 = sub_24A416084();
  sub_24A464988();
  uint64_t v70 = v10;
  unint64_t v59 = v20;
  int v58 = v86;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  LOBYTE(v73) = 5;
  uint64_t v60 = sub_24A4160D8((unint64_t *)&qword_269793A88, &qword_2697939A8);
  sub_24A464988();
  LOBYTE(v73) = 6;
  uint64_t v57 = v86;
  swift_bridgeObjectRetain();
  sub_24A464988();
  uint64_t v56 = v21;
  uint64_t v22 = v86;
  LOBYTE(v86) = 7;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_24A464968();
  uint64_t v55 = v23;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CF0);
  LOBYTE(v73) = 8;
  sub_24A4160D8(&qword_269793CF8, &qword_269793CF0);
  uint64_t v71 = v25;
  swift_bridgeObjectRetain();
  uint64_t v69 = v26;
  sub_24A464988();
  LOBYTE(v73) = 9;
  uint64_t v70 = v86;
  swift_bridgeObjectRetain();
  sub_24A464988();
  uint64_t v27 = v86;
  LOBYTE(v86) = 10;
  uint64_t v69 = v27;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_24A4649A8();
  int v53 = v28;
  char v136 = v28 & 1;
  LOBYTE(v73) = 11;
  sub_24A464988();
  int v51 = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793CA0);
  LOBYTE(v73) = 12;
  sub_24A415FE0(&qword_269793CC0, &qword_269793CA0);
  sub_24A4649D8();
  uint64_t v29 = v86;
  char v133 = v88;
  LOBYTE(v86) = 13;
  uint64_t v67 = v87;
  uint64_t v68 = v29;
  int v50 = v88;
  sub_24A40611C();
  uint64_t v49 = sub_24A464968();
  uint64_t v31 = v30;
  LOBYTE(v73) = 14;
  swift_bridgeObjectRetain();
  sub_24A464988();
  int v48 = v86;
  LOBYTE(v73) = 15;
  sub_24A464988();
  int v47 = v86;
  LOBYTE(v73) = 16;
  sub_24A464988();
  LOBYTE(v73) = 17;
  uint64_t v60 = v86;
  swift_bridgeObjectRetain();
  sub_24A464988();
  LODWORD(v56) = v86;
  LOBYTE(v73) = 18;
  sub_24A464988();
  int v46 = v86;
  LOBYTE(v73) = 19;
  sub_24A464988();
  LODWORD(v59) = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793D00);
  char v126 = 20;
  sub_24A41613C();
  sub_24A464988();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  uint64_t v45 = v127;
  *(void *)&long long v73 = v66;
  *((void *)&v73 + 1) = v13;
  *(void *)&long long v74 = v65;
  *((void *)&v74 + 1) = v72;
  *(void *)&long long v75 = v64;
  BYTE8(v75) = v62 & 1;
  *(void *)&long long v76 = v63;
  BYTE8(v76) = v61 & 1;
  BYTE9(v76) = v58;
  *(void *)&long long v77 = v57;
  *((void *)&v77 + 1) = v55;
  *(void *)&long long v78 = v54;
  *((void *)&v78 + 1) = v71;
  *(void *)&long long v79 = v70;
  *((void *)&v79 + 1) = v69;
  *(void *)&long long v80 = v52;
  BYTE8(v80) = v53 & 1;
  BYTE9(v80) = v51;
  *(void *)&long long v81 = v68;
  *((void *)&v81 + 1) = v67;
  LOBYTE(v82) = v50;
  *((void *)&v82 + 1) = v49;
  *(void *)&long long v83 = v31;
  uint64_t v44 = v31;
  BYTE8(v83) = v48;
  BYTE9(v83) = v47;
  *(void *)&long long v84 = v60;
  BYTE8(v84) = v56;
  BYTE9(v84) = v46;
  BYTE10(v84) = v59;
  uint64_t v85 = v127;
  sub_24A4077F4((uint64_t)&v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A406140();
  swift_bridgeObjectRelease();
  uint64_t v32 = v72;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v55;
  swift_bridgeObjectRelease();
  uint64_t v34 = v71;
  swift_bridgeObjectRelease();
  uint64_t v35 = v70;
  swift_bridgeObjectRelease();
  uint64_t v36 = v69;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v142);
  uint64_t v86 = v66;
  uint64_t v87 = v13;
  uint64_t v88 = v65;
  uint64_t v89 = v32;
  uint64_t v90 = v64;
  char v91 = v141;
  *(_DWORD *)uint64_t v92 = *(_DWORD *)v140;
  *(_DWORD *)&v92[3] = *(_DWORD *)&v140[3];
  uint64_t v93 = v63;
  char v94 = v139;
  char v95 = v58;
  int v96 = v137;
  __int16 v97 = v138;
  uint64_t v98 = v57;
  uint64_t v99 = v33;
  uint64_t v100 = v54;
  uint64_t v101 = v34;
  uint64_t v102 = v35;
  uint64_t v103 = v36;
  uint64_t v104 = v52;
  char v105 = v136;
  char v106 = v51;
  int v107 = v134;
  __int16 v108 = v135;
  uint64_t v109 = v68;
  uint64_t v110 = v67;
  char v111 = v133;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v132[3];
  *(_DWORD *)uint64_t v112 = *(_DWORD *)v132;
  uint64_t v113 = v49;
  uint64_t v114 = v44;
  char v115 = v48;
  char v116 = v47;
  __int16 v118 = v131;
  int v117 = v130;
  uint64_t v119 = v60;
  char v120 = v56;
  char v121 = v46;
  char v122 = v59;
  char v124 = v129;
  int v123 = v128;
  uint64_t v125 = v45;
  uint64_t result = sub_24A4078CC((uint64_t)&v86);
  long long v38 = v84;
  *(_OWORD *)(a2 + 160) = v83;
  *(_OWORD *)(a2 + 176) = v38;
  *(void *)(a2 + 192) = v85;
  long long v39 = v80;
  *(_OWORD *)(a2 + 96) = v79;
  *(_OWORD *)(a2 + 112) = v39;
  long long v40 = v82;
  *(_OWORD *)(a2 + 128) = v81;
  *(_OWORD *)(a2 + 144) = v40;
  long long v41 = v76;
  *(_OWORD *)(a2 + 32) = v75;
  *(_OWORD *)(a2 + 48) = v41;
  long long v42 = v78;
  *(_OWORD *)(a2 + 64) = v77;
  *(_OWORD *)(a2 + 80) = v42;
  long long v43 = v74;
  *(_OWORD *)a2 = v73;
  *(_OWORD *)(a2 + 16) = v43;
  return result;
}

uint64_t sub_24A4147B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24A464A78();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_24A4148B8(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CD8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A416030();
  sub_24A464BF8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
    v10[15] = 0;
    sub_24A4160D8((unint64_t *)&qword_269793A88, &qword_2697939A8);
    sub_24A4649D8();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_24A4649C8();
    double v2 = v9;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24A414AC8()
{
  unint64_t v0 = sub_24A464958();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_24A414B14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A415F38();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  char v32 = 0;
  sub_24A4160D8((unint64_t *)&qword_269793A88, &qword_2697939A8);
  sub_24A4649D8();
  uint64_t v9 = v28;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24A464978();
  int v31 = v11;
  uint64_t v27 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793CA0);
  char v32 = 2;
  sub_24A415FE0(&qword_269793CC0, &qword_269793CA0);
  sub_24A464988();
  uint64_t v12 = v28;
  uint64_t v13 = v29;
  HIDWORD(v23) = v30;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CC8);
  uint64_t v25 = v13;
  char v32 = 3;
  uint64_t v26 = v12;
  uint64_t v14 = v13;
  LOBYTE(v13) = BYTE4(v23);
  sub_24A406104(v12, v14, BYTE4(v23));
  sub_24A415FE0(&qword_269793CD0, &qword_269793CC8);
  sub_24A4649D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  unsigned __int8 v17 = v30;
  sub_24A40611C();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = v26;
  unsigned __int8 v19 = v13;
  uint64_t v20 = v25;
  sub_24A406128(v26, v25, v19);
  uint64_t result = sub_24A406140();
  uint64_t v22 = v27;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v31 & 1;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v16;
  *(unsigned char *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_24A414EB8()
{
  unint64_t result = qword_269793C68;
  if (!qword_269793C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C68);
  }
  return result;
}

unint64_t sub_24A414F10()
{
  unint64_t result = qword_269793C70;
  if (!qword_269793C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C70);
  }
  return result;
}

unint64_t sub_24A414F68()
{
  unint64_t result = qword_269793C78;
  if (!qword_269793C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C78);
  }
  return result;
}

unint64_t sub_24A414FC0()
{
  unint64_t result = qword_269793C80;
  if (!qword_269793C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C80);
  }
  return result;
}

unint64_t sub_24A415018()
{
  unint64_t result = qword_269793C88;
  if (!qword_269793C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C88);
  }
  return result;
}

unint64_t sub_24A415070()
{
  unint64_t result = qword_269793C90;
  if (!qword_269793C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C90);
  }
  return result;
}

unint64_t sub_24A4150C8()
{
  unint64_t result = qword_269793C98;
  if (!qword_269793C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793C98);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagBool()
{
  return &type metadata for StorebagBool;
}

uint64_t destroy for StorebagSectionClientHTTP()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A406140();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 136);
  char v13 = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24A40611C();
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v10;
  *(unsigned char *)(a1 + 144) = v13;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  uint64_t v7 = *(void *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 136);
  char v9 = *(unsigned char *)(a2 + 144);
  sub_24A40611C();
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 144) = v9;
  sub_24A406140();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  char v6 = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = v6;
  sub_24A406140();
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP()
{
  return &type metadata for StorebagSectionClientHTTP;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *__n128 result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A41586CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionClientHTTP.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StorebagSectionPerCountrySampling()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling()
{
  return &type metadata for StorebagSectionPerCountrySampling;
}

uint64_t destroy for StorebagSectionClientScriptGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    sub_24A406140();
  }
  return sub_24A406140();
}

uint64_t initializeWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    sub_24A40611C();
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = v5 & 1;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  sub_24A40611C();
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  int v5 = (long long *)(a1 + 24);
  uint64_t v6 = (long long *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      long long v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *int v5 = v9;
    }
    else
    {
      char v13 = v7 & 1;
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      sub_24A40611C();
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(unsigned char *)(a1 + 40) = v13;
    }
  }
  else if (v7 == 255)
  {
    sub_24A415C40(a1 + 24);
    char v8 = *(unsigned char *)(a2 + 40);
    *int v5 = *v6;
    *(unsigned char *)(a1 + 40) = v8;
  }
  else
  {
    char v10 = v7 & 1;
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    sub_24A40611C();
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(unsigned char *)(a1 + 40) = v10;
    sub_24A406140();
  }
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  char v18 = *(unsigned char *)(a2 + 64);
  sub_24A40611C();
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(unsigned char *)(a1 + 64) = v18;
  sub_24A406140();
  return a1;
}

uint64_t sub_24A415C40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = (_OWORD *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 != 255)
    {
      *(_OWORD *)(a1 + 24) = *v4;
      *(unsigned char *)(a1 + 40) = v5 & 1;
      sub_24A406140();
      goto LABEL_6;
    }
    sub_24A415C40(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
LABEL_6:
  char v6 = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v6;
  sub_24A406140();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup()
{
  return &type metadata for StorebagSectionClientScriptGroup;
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionClientScriptGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A415F00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionClientScriptGroup.CodingKeys;
}

unint64_t sub_24A415F38()
{
  unint64_t result = qword_269793CA8;
  if (!qword_269793CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793CA8);
  }
  return result;
}

unint64_t sub_24A415F8C()
{
  unint64_t result = qword_269793CB0;
  if (!qword_269793CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793CB0);
  }
  return result;
}

uint64_t sub_24A415FE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A416030()
{
  unint64_t result = qword_269798190[0];
  if (!qword_269798190[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269798190);
  }
  return result;
}

unint64_t sub_24A416084()
{
  unint64_t result = qword_269793CE8;
  if (!qword_269793CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793CE8);
  }
  return result;
}

uint64_t sub_24A4160D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24A41613C()
{
  unint64_t result = qword_269793D08;
  if (!qword_269793D08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793D00);
    sub_24A4161B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793D08);
  }
  return result;
}

unint64_t sub_24A4161B0()
{
  unint64_t result = qword_269793D10;
  if (!qword_269793D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793D10);
  }
  return result;
}

unsigned char *_s19CloudTelemetryTools12StorebagBoolOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A4162D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling.CodingKeys()
{
  return &type metadata for StorebagSectionPerCountrySampling.CodingKeys;
}

unint64_t sub_24A41630C()
{
  unint64_t result = qword_2697982A0[0];
  if (!qword_2697982A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697982A0);
  }
  return result;
}

unint64_t sub_24A416364()
{
  unint64_t result = qword_2697983B0;
  if (!qword_2697983B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697983B0);
  }
  return result;
}

unint64_t sub_24A4163BC()
{
  unint64_t result = qword_2697983B8[0];
  if (!qword_2697983B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2697983B8);
  }
  return result;
}

uint64_t sub_24A416420()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A720);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A720);
  return sub_24A464008();
}

uint64_t sub_24A4164A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  return MEMORY[0x270FA2498](sub_24A4164CC, v3, 0);
}

uint64_t sub_24A4164CC()
{
  unsigned int v6 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)(v0[18] + 112) + 232)
                                                                   + **(int **)(**(void **)(v0[18] + 112) + 232));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  void *v1 = v0;
  v1[1] = sub_24A4165E4;
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  return v6(v0 + 2, v4, v2, v3);
}

uint64_t sub_24A4165E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    char v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)(v2 + 144) + 128)
                                                                     + **(int **)(**(void **)(v2 + 144) + 128));
    unsigned int v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 160) = v6;
    void *v6 = v3;
    v6[1] = sub_24A4167C8;
    uint64_t v7 = *(void *)(v2 + 136);
    uint64_t v8 = *(void *)(v2 + 120);
    uint64_t v9 = *(void *)(v2 + 128);
    return v10(v2 + 16, v8, v9, v7);
  }
}

uint64_t sub_24A4167C8(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = (void *)*v3;
  v6[21] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[18];
  if (v2)
  {
    uint64_t v8 = sub_24A41699C;
  }
  else
  {
    v6[22] = a2;
    v6[23] = a1;
    uint64_t v8 = sub_24A416908;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_24A416908()
{
  *(void *)(v0 + 112) = *(void *)(v0 + 16);
  sub_24A41101C(v0 + 112);
  *(void *)(v0 + 96) = *(void *)(v0 + 24);
  sub_24A41101C(v0 + 96);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 40);
  sub_24A407ABC(v0 + 56);
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  return v1(v2, v3);
}

uint64_t sub_24A41699C()
{
  *(void *)(v0 + 88) = *(void *)(v0 + 16);
  sub_24A41101C(v0 + 88);
  *(void *)(v0 + 104) = *(void *)(v0 + 24);
  sub_24A41101C(v0 + 104);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 40);
  sub_24A407ABC(v0 + 72);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A416A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A416B00, v4, 0);
}

uint64_t sub_24A416B00()
{
  uint64_t v1 = **(void **)(v0 + 216);
  *(void *)(v0 + 208) = v1;
  *(void *)(v0 + 280) = v1;
  int64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 288) = v2;
  if (v2)
  {
    if (v2 == 1)
    {
      uint64_t v3 = *(void *)(v0 + 272);
      uint64_t v5 = *(void *)(v0 + 248);
      uint64_t v4 = *(void *)(v0 + 256);
      uint64_t v7 = *(void *)(v0 + 232);
      uint64_t v6 = *(void *)(v0 + 240);
      uint64_t v8 = *(void *)(v0 + 224);
      *(void *)(v0 + 192) = v7;
      *(void *)(v0 + 200) = v6;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_1, v8, v7);
      sub_24A41953C(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
      uint64_t v29 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v5 + 152) + **(int **)(*(void *)v5 + 152));
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v10;
      void *v10 = v0;
      v10[1] = sub_24A416F10;
      uint64_t v11 = v0 + 72;
      uint64_t v12 = v29;
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 248);
      uint64_t v16 = *(void *)(v0 + 256);
      uint64_t v17 = *(void *)(v0 + 240);
      char v18 = sub_24A41942C(0, v2, 0, MEMORY[0x263F8EE78]);
      unsigned __int8 v30 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(void *)(v0 + 328) = v30;
      *(void *)(v0 + 336) = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x8425000000000000;
      uint64_t v27 = *(int **)(*(void *)v15 + 152);
      uint64_t v28 = *(void *)v15 + 152;
      *(void *)(v0 + 344) = v27;
      *(void *)(v0 + 352) = v28 & 0xFFFFFFFFFFFFLL | 0xFBDD000000000000;
      int v19 = *(_DWORD *)(v16 + 80);
      *(_DWORD *)(v0 + 408) = v19;
      *(void *)(v0 + 360) = v18;
      *(void *)(v0 + 368) = 1;
      uint64_t v20 = *(void *)(v0 + 264);
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v21 = *(void *)(v0 + 240);
      uint64_t v23 = *(void *)(v0 + 224);
      uint64_t v24 = *(void *)(v0 + 280) + ((v19 + 32) & ~(unint64_t)v19);
      swift_bridgeObjectRetain();
      sub_24A41953C(v24, v20, type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v22;
      *(void *)(v0 + 160) = v21;
      uint64_t v25 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v25, v23, v22);
      v30(v22, v21);
      int v31 = (uint64_t (*)(uint64_t))((char *)v27 + *v27);
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_24A417170;
      uint64_t v11 = v0 + 16;
      uint64_t v12 = v31;
    }
    return v12(v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    char v13 = *(uint64_t (**)(void, void))(v0 + 8);
    return v13(0, 0);
  }
}

uint64_t sub_24A416F10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 72;
  *(void *)(*(void *)v3 + 304) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = v6[31];
    sub_24A3FCA74(v6[34], type metadata accessor for SessionConfiguration.Backend);
    sub_24A3E1C84(v7);
    uint64_t v9 = sub_24A4175BC;
  }
  else
  {
    uint64_t v8 = v6[31];
    v6[39] = a2;
    v6[40] = a1;
    sub_24A3E1C84(v7);
    uint64_t v9 = sub_24A417078;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

uint64_t sub_24A417078()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(**(void **)(v0 + 248) + 144))(v0 + 168, v1, *(void *)(v0 + 320), *(void *)(v0 + 312));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_24A3FCA74(v1, type metadata accessor for SessionConfiguration.Backend);
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v4);
}

uint64_t sub_24A417170(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 16;
  *(void *)(*(void *)v3 + 384) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t)(v6 + 26);
    uint64_t v9 = v6[31];
    sub_24A3E1C84(v7);
    sub_24A41101C(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_24A417630;
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v12 = v6[31];
    v6[49] = a2;
    v6[50] = a1;
    sub_24A3E1C84(v7);
    uint64_t v10 = sub_24A4172DC;
    uint64_t v11 = v12;
  }
  return MEMORY[0x270FA2498](v10, v11, 0);
}

uint64_t sub_24A4172DC()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void, void, void))(**(void **)(v0 + 248) + 144))(v0 + 128, *(void *)(v0 + 264), *(void *)(v0 + 400), *(void *)(v0 + 392));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  unint64_t v6 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void **)(v0 + 360);
  if (v6 >= v5 >> 1) {
    uint64_t v7 = sub_24A41942C((void *)(v5 > 1), v6 + 1, 1, *(void **)(v0 + 360));
  }
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  v7[2] = v6 + 1;
  uint64_t v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  uint64_t result = sub_24A3FCA74(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_24A41101C(v0 + 208);
    type metadata accessor for BackendGroup();
    uint64_t v13 = sub_24A41E7A0((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8);
    return v14(v13, &off_26FE16510);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 368);
    *(void *)(v0 + 360) = v7;
    *(void *)(v0 + 368) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(int **)(v0 + 344);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v20 = *(void *)(v0 + 224);
      sub_24A41953C(*(void *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 408))+ *(void *)(*(void *)(v0 + 256) + 72) * v15, *(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v19;
      *(void *)(v0 + 160) = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(boxed_opaque_existential_1, v20, v19);
      v17(v19, v18);
      uint64_t v23 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_24A417170;
      return v23(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_24A4175BC()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A417630()
{
  sub_24A3FCA74(*(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A4176C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A417798, v4, 0);
}

uint64_t sub_24A417798()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = v1[1];
  *(void *)(v0 + 208) = v2;
  *(void *)(v0 + 280) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 288) = v3;
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = *(void *)(v0 + 272);
      uint64_t v6 = *(void *)(v0 + 248);
      uint64_t v5 = *(void *)(v0 + 256);
      uint64_t v8 = *(void *)(v0 + 232);
      uint64_t v7 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      *(void *)(v0 + 192) = v8;
      *(void *)(v0 + 200) = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_1, v9, v8);
      sub_24A41953C(v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
      unsigned __int8 v30 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v6 + 152) + **(int **)(*(void *)v6 + 152));
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_24A416F10;
      uint64_t v12 = v0 + 72;
      uint64_t v13 = v30;
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 248);
      uint64_t v17 = *(void *)(v0 + 256);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v19 = sub_24A41942C(0, *(void *)(*v1 + 16), 0, MEMORY[0x263F8EE78]);
      int v31 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      *(void *)(v0 + 328) = v31;
      *(void *)(v0 + 336) = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x8425000000000000;
      uint64_t v28 = *(int **)(*(void *)v16 + 152);
      uint64_t v29 = *(void *)v16 + 152;
      *(void *)(v0 + 344) = v28;
      *(void *)(v0 + 352) = v29 & 0xFFFFFFFFFFFFLL | 0xFBDD000000000000;
      int v20 = *(_DWORD *)(v17 + 80);
      *(_DWORD *)(v0 + 408) = v20;
      *(void *)(v0 + 360) = v19;
      *(void *)(v0 + 368) = 1;
      uint64_t v21 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 232);
      uint64_t v22 = *(void *)(v0 + 240);
      uint64_t v24 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 280) + ((v20 + 32) & ~(unint64_t)v20);
      swift_bridgeObjectRetain();
      sub_24A41953C(v25, v21, type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v23;
      *(void *)(v0 + 160) = v22;
      uint64_t v26 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v24, v23);
      v31(v23, v22);
      uint64_t v32 = (uint64_t (*)(uint64_t))((char *)v28 + *v28);
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v27;
      void *v27 = v0;
      v27[1] = sub_24A417BB0;
      uint64_t v12 = v0 + 16;
      uint64_t v13 = v32;
    }
    return v13(v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void, void))(v0 + 8);
    return v14(0, 0);
  }
}

uint64_t sub_24A417BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 16;
  *(void *)(*(void *)v3 + 384) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t)(v6 + 26);
    uint64_t v9 = v6[31];
    sub_24A3E1C84(v7);
    sub_24A41101C(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_24A417630;
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v12 = v6[31];
    v6[49] = a2;
    v6[50] = a1;
    sub_24A3E1C84(v7);
    uint64_t v10 = sub_24A417D1C;
    uint64_t v11 = v12;
  }
  return MEMORY[0x270FA2498](v10, v11, 0);
}

uint64_t sub_24A417D1C()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void, void, void))(**(void **)(v0 + 248) + 144))(v0 + 128, *(void *)(v0 + 264), *(void *)(v0 + 400), *(void *)(v0 + 392));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 128);
  unint64_t v6 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void **)(v0 + 360);
  if (v6 >= v5 >> 1) {
    uint64_t v7 = sub_24A41942C((void *)(v5 > 1), v6 + 1, 1, *(void **)(v0 + 360));
  }
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  v7[2] = v6 + 1;
  uint64_t v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  uint64_t result = sub_24A3FCA74(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_24A41101C(v0 + 208);
    type metadata accessor for BackendGroup();
    uint64_t v13 = sub_24A41E7A0((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8);
    return v14(v13, &off_26FE16510);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 368);
    *(void *)(v0 + 360) = v7;
    *(void *)(v0 + 368) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(int **)(v0 + 344);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v20 = *(void *)(v0 + 224);
      sub_24A41953C(*(void *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 408))+ *(void *)(*(void *)(v0 + 256) + 72) * v15, *(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v19;
      *(void *)(v0 + 160) = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(boxed_opaque_existential_1, v20, v19);
      v17(v19, v18);
      uint64_t v23 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_24A417BB0;
      return v23(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_24A417FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  unsigned int v26;
  int v27;
  int v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  void v35[5];
  void v36[4];
  unsigned __int8 v37;
  unsigned __int8 v38;

  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for SessionConfiguration.Backend(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A41953C(a2, (uint64_t)v18, type metadata accessor for SessionConfiguration.Backend);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *((void *)v18 + 1);
    uint64_t v20 = *((void *)v18 + 2);
    type metadata accessor for BackendLocal();
    sub_24A3E34A0((uint64_t)a1, (uint64_t)v36);
    return sub_24A40E85C(v19, v20, v36);
  }
  else
  {
    sub_24A3FCA10((uint64_t)v18, (uint64_t)v15);
    uint64_t v34 = type metadata accessor for BackendHTTP();
    uint64_t v22 = *(void *)(v5 + 128);
    sub_24A3E34A0((uint64_t)a1, (uint64_t)v35);
    uint64_t v33 = type metadata accessor for SessionConfiguration.BackendHTTP;
    sub_24A41953C((uint64_t)v15, (uint64_t)v13, type metadata accessor for SessionConfiguration.BackendHTTP);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    int v31 = a3;
    uint64_t v32 = a4;
    uint64_t v24 = a1[3];
    uint64_t v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v24);
    uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8);
    swift_retain();
    v25(v36, v24, v23);
    uint64_t v26 = v37;
    uint64_t v27 = v38;
    swift_bridgeObjectRetain();
    sub_24A3E1C84((uint64_t)v36);
    if (v27) {
      uint64_t v28 = 256;
    }
    else {
      uint64_t v28 = 0;
    }
    uint64_t v29 = sub_24A45A12C(v28 | v26);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_24A408A88(v22, v35, v5, v13, v31, v32, v29);
    sub_24A3FCA74((uint64_t)v15, v33);
  }
  return v21;
}

uint64_t sub_24A4182D4(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_24A463EE8();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939D0);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_24A463E78();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A418448, v1, 0);
}

uint64_t sub_24A418448()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 88) + 112) + 264)
                         + **(int **)(**(void **)(*(void *)(v0 + 88) + 112) + 264));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_24A41854C;
  return v3();
}

uint64_t sub_24A41854C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A41865C, v1, 0);
}

uint64_t sub_24A41865C()
{
  v0[23] = *(void *)(v0[11] + 120);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[24] = v1;
  void *v1 = v0;
  v1[1] = sub_24A418704;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  return sub_24A3F4D94(v2, v3);
}

uint64_t sub_24A418704()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_24A419230;
  }
  else {
    uint64_t v4 = sub_24A418830;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A418830()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(char **)(v0 + 120);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793A10);
  int v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v6 = *(void *)(v0 + 128);
  if (v4 == 1)
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 96);
    sub_24A4195A4((uint64_t)v2);
    sub_24A463ED8();
    uint64_t v11 = sub_24A463E88();
    uint64_t v13 = v12;
    *(void *)(v0 + 256) = v11;
    *(void *)(v0 + 264) = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_bridgeObjectRetain();
    sub_24A463E38();
    sub_24A463DE8();
    uint64_t v14 = *v5;
    *(void *)(v0 + 272) = *v5;
    *(void *)(v0 + 280) = (unint64_t)v5 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v14(v7, v6);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v15;
    void *v15 = v0;
    v15[1] = sub_24A419008;
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = v11;
    uint64_t v19 = v13;
LABEL_13:
    return sub_24A3F5060(v17, v18, v19, v16);
  }
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v22 = *(void *)v2;
  uint64_t v21 = *((void *)v2 + 1);
  (*(void (**)(void, char *, void))(v1 + 32))(*(void *)(v0 + 168), &v2[*(int *)(v3 + 48)], *(void *)(v0 + 128));
  sub_24A463E38();
  char v23 = sub_24A463E08();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  *(void *)(v0 + 208) = v24;
  *(void *)(v0 + 216) = (unint64_t)v5 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v20, v6);
  if ((v23 & 1) == 0)
  {
    uint64_t v49 = v24;
    swift_bridgeObjectRelease();
    if (qword_269798440 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = sub_24A464018();
    __swift_project_value_buffer(v28, (uint64_t)qword_26979A720);
    sub_24A3E1C38(v27);
    sub_24A3E1C38(v27);
    uint64_t v29 = sub_24A463FF8();
    os_log_type_t v30 = sub_24A4645D8();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 80);
    if (v31)
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v50 = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      long long v36 = *(_OWORD *)(v32 + 16);
      long long v35 = *(_OWORD *)(v32 + 32);
      long long v37 = *(_OWORD *)v32;
      *(void *)(v0 + 64) = *(void *)(v32 + 48);
      *(_OWORD *)(v0 + 32) = v36;
      *(_OWORD *)(v0 + 48) = v35;
      *(_OWORD *)(v0 + 16) = v37;
      sub_24A419604();
      uint64_t v38 = sub_24A464A48();
      *(void *)(v0 + 72) = sub_24A3E0E30(v38, v39, &v50);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      sub_24A3E1C84(v32);
      sub_24A3E1C84(v32);
      _os_log_impl(&dword_24A3DA000, v29, v30, "CID expired for %{public}s, refreshing", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v34, -1, -1);
      MEMORY[0x24C5C5D60](v33, -1, -1);
    }
    else
    {
      sub_24A3E1C84(*(void *)(v0 + 80));
      sub_24A3E1C84(v32);
    }

    uint64_t v40 = *(void *)(v0 + 160);
    uint64_t v41 = *(void *)(v0 + 128);
    uint64_t v43 = *(void *)(v0 + 104);
    uint64_t v42 = *(void *)(v0 + 112);
    uint64_t v44 = *(void *)(v0 + 96);
    sub_24A463ED8();
    uint64_t v45 = sub_24A463E88();
    uint64_t v47 = v46;
    *(void *)(v0 + 224) = v45;
    *(void *)(v0 + 232) = v46;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    swift_bridgeObjectRetain();
    sub_24A463E38();
    sub_24A463DE8();
    v49(v40, v41);
    int v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v48;
    *int v48 = v0;
    v48[1] = sub_24A418D88;
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = v45;
    uint64_t v19 = v47;
    goto LABEL_13;
  }
  v24(*(void *)(v0 + 168), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v25(v22, v21);
}

uint64_t sub_24A418D88()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 208);
  uint64_t v4 = *(void *)(*v1 + 152);
  uint64_t v5 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v6 = *(void *)(v2 + 88);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_24A4192D4;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v8 = *(void *)(v2 + 88);
    uint64_t v7 = sub_24A418F40;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_24A418F40()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 168), *(void *)(v0 + 128));
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_24A419008()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 272);
  uint64_t v3 = *(void *)(*(void *)v1 + 144);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  uint64_t v5 = *(void **)v1;
  v5[37] = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[33];
  if (v0)
  {
    uint64_t v7 = v5[11];
    swift_bridgeObjectRelease();
    return MEMORY[0x270FA2498](sub_24A419388, v7, 0);
  }
  else
  {
    uint64_t v8 = v5[32];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v5[1];
    return v9(v8, v6);
  }
}

uint64_t sub_24A419230()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A4192D4()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 168), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A419388()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_24A41942C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793D48);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24A41967C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A41953C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A4195A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697939D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24A419604()
{
  unint64_t result = qword_269793D40;
  if (!qword_269793D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793D40);
  }
  return result;
}

uint64_t type metadata accessor for SubmissionCoordinator()
{
  return self;
}

uint64_t sub_24A41967C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793D50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A419788()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A738);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A738);
  return sub_24A464008();
}

uint64_t sub_24A41980C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = 0x656C74746F726874;
  switch(a3)
  {
    case 1:
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
      goto LABEL_4;
    case 2:
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000021;
      sub_24A464A48();
      sub_24A464358();
      swift_bridgeObjectRelease();
      return v5;
    case 3:
      return result;
    default:
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001FLL;
LABEL_4:
      unint64_t v5 = v4;
      sub_24A464358();
      return v5;
  }
}

uint64_t sub_24A419980()
{
  return sub_24A41980C(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t type metadata accessor for StorebagCloudKitSigningConfiguration()
{
  uint64_t result = qword_2697985E0;
  if (!qword_2697985E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A4199D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24A463D28();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  int64_t v11 = (char *)v15 - v10;
  type metadata accessor for Throttle();
  sub_24A411158(a1, (uint64_t)v11);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v13(a2, v11, v5);
  sub_24A4264C4(a1, (void *)0x72756769666E6F63, (void *)0xEF2F736E6F697461, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  uint64_t v14 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2 + *(int *)(v14 + 20), v9, v5);
}

uint64_t sub_24A419BC4()
{
  uint64_t v108 = *MEMORY[0x263EF8340];
  uint64_t v100 = sub_24A463E78();
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v0 = MEMORY[0x270FA5388](v100);
  __int16 v97 = (char *)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v98 = (char *)&v91 - v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v91 - v4;
  uint64_t v6 = sub_24A463BD8();
  uint64_t v99 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794040);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v91 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v91 - v16;
  uint64_t v102 = sub_24A463D28();
  uint64_t v18 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_24A463C98();
  uint64_t v21 = v20;
  char v22 = sub_24A463CB8();
  uint64_t v92 = v15;
  uint64_t v93 = v6;
  char v94 = v12;
  char v95 = v5;
  int v96 = v17;
  if ((v22 & 1) == 0)
  {
    if (qword_2697984D0 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_24A464018();
    __swift_project_value_buffer(v28, (uint64_t)qword_26979A738);
    uint64_t v29 = sub_24A463FF8();
    os_log_type_t v30 = sub_24A464598();
    if (os_log_type_enabled(v29, v30))
    {
      BOOL v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v31 = 0;
      _os_log_impl(&dword_24A3DA000, v29, v30, "configuration does not exist", v31, 2u);
      MEMORY[0x24C5C5D60](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v102);
    return 0;
  }
  uint64_t v91 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A466020;
  uint64_t v24 = (void *)*MEMORY[0x263EFF5F8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF5F8];
  id v25 = v24;
  sub_24A3EB0D4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  uint64_t v26 = v8;
  uint64_t v27 = v20;
  sub_24A463C48();
  swift_bridgeObjectRelease();
  uint64_t v33 = v92;
  sub_24A463BA8();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v26, v93);
  uint64_t v34 = v101;
  uint64_t v35 = v100;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48))(v33, 1, v100);
  if (result != 1)
  {
    uint64_t v37 = (uint64_t)v96;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v96, v33, v35);
    uint64_t v38 = v91;
    uint64_t v39 = v35;
    uint64_t v40 = (uint64_t)v94;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v39);
    sub_24A41E624(v37, v40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v40, 1, v39) == 1)
    {
      sub_24A3E2068(v40, &qword_269794040);
      if (qword_2697984D0 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_24A464018();
      __swift_project_value_buffer(v41, (uint64_t)qword_26979A738);
      uint64_t v42 = sub_24A463FF8();
      os_log_type_t v43 = sub_24A4645B8();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl(&dword_24A3DA000, v42, v43, "unable to determine configuration creation date", v44, 2u);
        MEMORY[0x24C5C5D60](v44, -1, -1);
      }

LABEL_28:
      sub_24A3E2068(v37, &qword_269794040);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v102);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v95, v40, v39);
    uint64_t v32 = sub_24A463D48();
    unint64_t v46 = v45;
    uint64_t v47 = self;
    sub_24A3E8D0C(v32, v46);
    int v48 = (void *)sub_24A463D88();
    *(void *)&long long v106 = 0;
    id v49 = objc_msgSend(v47, sel_propertyListWithData_options_format_error_, v48, 0, 0, &v106);

    if (v49)
    {
      id v50 = (id)v106;
      sub_24A464718();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793928);
      if (swift_dynamicCast())
      {
        double v51 = v104;
        if (*(void *)(*(void *)&v104 + 16))
        {
          unint64_t v52 = sub_24A3E1488(0xD000000000000016, 0x800000024A46B760);
          int v53 = v95;
          uint64_t v54 = v98;
          uint64_t v55 = v97;
          if (v56)
          {
            sub_24A3E200C(*(void *)(*(void *)&v51 + 56) + 32 * v52, (uint64_t)&v106);
          }
          else
          {
            long long v106 = 0u;
            long long v107 = 0u;
          }
        }
        else
        {
          long long v106 = 0u;
          long long v107 = 0u;
          int v53 = v95;
          uint64_t v54 = v98;
          uint64_t v55 = v97;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v107 + 1))
        {
          char v63 = swift_dynamicCast();
          if (v63)
          {
            char v105 = 0;
            if (v104 > 31536000.0 || v104 < 3600.0)
            {
              double v104 = 86400.0;
              char v105 = 0;
            }
            goto LABEL_39;
          }
          double v104 = 0.0;
          char v64 = v63 ^ 1;
        }
        else
        {
          sub_24A3E2068((uint64_t)&v106, &qword_269793C60);
          double v104 = 0.0;
          char v64 = 1;
        }
        char v105 = v64;
LABEL_39:
        sub_24A463DE8();
        sub_24A463E38();
        char v65 = sub_24A463E08();
        uint64_t v66 = v55;
        char v67 = v65;
        uint64_t v68 = v34 + 8;
        uint64_t v69 = *(void (**)(char *, uint64_t))(v34 + 8);
        v69(v66, v39);
        if ((v67 & 1) == 0)
        {
          sub_24A3E8CB4(v32, v46);
          v69(v54, v39);
          v69(v53, v39);
          sub_24A3E2068(v37, &qword_269794040);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v27, v102);
          return v32;
        }
        uint64_t v101 = v68;
        if (qword_2697984D0 != -1) {
          swift_once();
        }
        uint64_t v70 = sub_24A464018();
        __swift_project_value_buffer(v70, (uint64_t)qword_26979A738);
        uint64_t v71 = sub_24A463FF8();
        os_log_type_t v72 = sub_24A4645D8();
        if (os_log_type_enabled(v71, v72))
        {
          long long v73 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v73 = 0;
          _os_log_impl(&dword_24A3DA000, v71, v72, "removing expired config", v73, 2u);
          MEMORY[0x24C5C5D60](v73, -1, -1);
        }

        id v74 = objc_msgSend(self, sel_defaultManager);
        long long v75 = (void *)sub_24A463C88();
        *(void *)&long long v106 = 0;
        unsigned int v76 = objc_msgSend(v74, sel_removeItemAtURL_error_, v75, &v106);

        if (v76)
        {
          id v77 = (id)v106;
          sub_24A3E8CB4(v32, v46);
          sub_24A3E8CB4(v32, v46);
          v69(v98, v39);
          long long v78 = v53;
          uint64_t v79 = v39;
        }
        else
        {
          id v80 = (id)v106;
          long long v81 = (void *)sub_24A463C28();

          swift_willThrow();
          id v82 = v81;
          id v83 = v81;
          long long v84 = sub_24A463FF8();
          os_log_type_t v85 = sub_24A464598();
          if (os_log_type_enabled(v84, v85))
          {
            uint64_t v86 = (uint8_t *)swift_slowAlloc();
            uint64_t v99 = swift_slowAlloc();
            *(void *)&long long v106 = v99;
            *(_DWORD *)uint64_t v86 = 136446210;
            __int16 v97 = (char *)(v86 + 4);
            swift_getErrorValue();
            uint64_t v87 = sub_24A464B38();
            uint64_t v103 = sub_24A3E0E30(v87, v88, (uint64_t *)&v106);
            sub_24A4646E8();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24A3DA000, v84, v85, "failed to remove expired configuration: %{public}s", v86, 0xCu);
            uint64_t v89 = v99;
            swift_arrayDestroy();
            MEMORY[0x24C5C5D60](v89, -1, -1);
            MEMORY[0x24C5C5D60](v86, -1, -1);
            sub_24A3E8CB4(v32, v46);
          }
          else
          {
            sub_24A3E8CB4(v32, v46);
          }
          sub_24A3E8CB4(v32, v46);
          uint64_t v90 = v100;
          v69(v98, v100);
          long long v78 = v95;
          uint64_t v79 = v90;
        }
        v69(v78, v79);
        sub_24A3E2068((uint64_t)v96, &qword_269794040);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v27, v102);
        return 0;
      }
    }
    else
    {
      id v57 = (id)v106;
      int v58 = (void *)sub_24A463C28();

      swift_willThrow();
    }
    if (qword_2697984D0 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_24A464018();
    __swift_project_value_buffer(v59, (uint64_t)qword_26979A738);
    uint64_t v60 = sub_24A463FF8();
    os_log_type_t v61 = sub_24A4645B8();
    if (os_log_type_enabled(v60, v61))
    {
      int v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v62 = 0;
      _os_log_impl(&dword_24A3DA000, v60, v61, "failed to parse configuration", v62, 2u);
      MEMORY[0x24C5C5D60](v62, -1, -1);
    }
    sub_24A3E8CB4(v32, v46);

    sub_24A3E8CB4(v32, v46);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v95, v39);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_24A41AABC()
{
  v1[16] = v0;
  uint64_t v2 = sub_24A463A48();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793700);
  v1[20] = swift_task_alloc();
  uint64_t v3 = sub_24A463D28();
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A41AC50, 0, 0);
}

uint64_t sub_24A41AC50()
{
  uint64_t v1 = sub_24A419BC4();
  if (v2 >> 60 == 15)
  {
    uint64_t v3 = v0[25];
    type metadata accessor for Throttle();
    sub_24A463CA8();
    uint64_t v4 = sub_24A4110C0(v3);
    v0[26] = v4;
    uint64_t v10 = (uint64_t (*)(void))(*(void *)(*(void *)v4 + 160) + **(int **)(*(void *)v4 + 160));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[27] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_24A41AE78;
    return v10();
  }
  else
  {
    uint64_t v7 = v1;
    unint64_t v8 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v9(v7, v8);
  }
}

uint64_t sub_24A41AE78(char a1)
{
  *(unsigned char *)(*(void *)v1 + 328) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A41AFA4, 0, 0);
}

uint64_t sub_24A41AFA4()
{
  if (*(unsigned char *)(v0 + 328))
  {
    if (qword_2697984D0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24A464018();
    *(void *)(v0 + 224) = __swift_project_value_buffer(v1, (uint64_t)qword_26979A738);
    unint64_t v2 = sub_24A463FF8();
    os_log_type_t v3 = sub_24A4645D8();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_24A3DA000, v2, v3, "fetching configuration from server", v4, 2u);
      MEMORY[0x24C5C5D60](v4, -1, -1);
    }
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 160);

    sub_24A463D08();
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
    if (v8 == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 176) + 32))(*(void *)(v0 + 192), *(void *)(v0 + 160), *(void *)(v0 + 168));
      RequestOptions.globalRequestOptions.unsafeMutableAddressor();
      swift_beginAccess();
      uint64_t v10 = self;
      swift_retain();
      id v11 = objc_msgSend(v10, sel_mainBundle);
      id v12 = objc_msgSend(v11, sel_bundleIdentifier);

      if (v12)
      {
        uint64_t v14 = *(void *)(v0 + 192);
        uint64_t v13 = *(void *)(v0 + 200);
        uint64_t v15 = *(void *)(v0 + 168);
        uint64_t v16 = *(void *)(v0 + 176);
        sub_24A464278();

        __int16 v17 = sub_24A438B20(1, 1);
        id v18 = sub_24A45A12C(v17 & 0x101);
        *(void *)(v0 + 232) = v18;
        swift_bridgeObjectRelease();
        swift_release();
        objc_msgSend(v18, sel_setTlsPinning_, 1);
        *(void *)(v0 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2BDA0]), sel_init);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
        sub_24A463A08();
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v19;
        *uint64_t v19 = v0;
        v19[1] = sub_24A41B464;
        uint64_t v8 = *(void *)(v0 + 152);
        id v9 = v18;
        return MEMORY[0x270F12978](v8, v9);
      }
    }
    __break(1u);
    return MEMORY[0x270F12978](v8, v9);
  }
  if (qword_2697984D0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24A464018();
  __swift_project_value_buffer(v20, (uint64_t)qword_26979A738);
  uint64_t v21 = sub_24A463FF8();
  os_log_type_t v22 = sub_24A4645D8();
  if (os_log_type_enabled(v21, v22))
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v23 = 0;
    _os_log_impl(&dword_24A3DA000, v21, v22, "configuration fetch throttled", v23, 2u);
    MEMORY[0x24C5C5D60](v23, -1, -1);
  }

  sub_24A41D2C8();
  swift_allocError();
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = 3;
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_24A41B464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[32] = a1;
  v6[33] = a2;
  v6[34] = a3;
  v6[35] = v3;
  swift_task_dealloc();
  uint64_t v7 = (void *)v5[30];
  (*(void (**)(void, void))(v5[18] + 8))(v5[19], v5[17]);

  if (v3) {
    uint64_t v8 = sub_24A41C1D8;
  }
  else {
    uint64_t v8 = sub_24A41B624;
  }
  return MEMORY[0x270FA2498](v8, 0, 0);
}

uint64_t sub_24A41B624()
{
  uint64_t v62 = v0;
  v61[1] = *MEMORY[0x263EF8340];
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    unint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 272);
    if ((uint64_t)objc_msgSend(v2, sel_statusCode) < 200 || (uint64_t)objc_msgSend(v2, sel_statusCode) >= 300)
    {
      unint64_t v18 = *(void *)(v0 + 264);
      uint64_t v19 = *(void **)(v0 + 272);
      uint64_t v20 = *(void *)(v0 + 256);
      uint64_t v21 = *(void **)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 176);
      id v24 = objc_msgSend(v2, sel_statusCode, *(void *)(v0 + 192));
      sub_24A41D2C8();
      uint64_t v10 = (void *)swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = 0;
      *(unsigned char *)(v25 + 16) = 2;
      swift_willThrow();

      sub_24A3E8CB4(v20, v18);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v57, v23);
      goto LABEL_12;
    }
  }
  uint64_t v4 = self;
  uint64_t v5 = (void *)sub_24A463D88();
  *(void *)(v0 + 104) = 0;
  id v6 = objc_msgSend(v4, sel_propertyListWithData_options_format_error_, v5, 0, 0, v0 + 104);

  uint64_t v7 = *(void **)(v0 + 104);
  if (!v6)
  {
    unint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void **)(v0 + 272);
    uint64_t v28 = *(void *)(v0 + 256);
    uint64_t v29 = *(void **)(v0 + 232);
    uint64_t v58 = *(void *)(v0 + 192);
    uint64_t v31 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 176);
    id v32 = v7;
    uint64_t v10 = (void *)sub_24A463C28();

    swift_willThrow();
    sub_24A3E8CB4(v28, v26);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v58, v31);
    goto LABEL_12;
  }
  id v8 = v7;
  sub_24A464718();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793928);
  if (!swift_dynamicCast())
  {
    unint64_t v33 = *(void *)(v0 + 264);
    uint64_t v34 = *(void **)(v0 + 272);
    uint64_t v35 = *(void *)(v0 + 256);
    long long v36 = *(void **)(v0 + 232);
    uint64_t v37 = *(void *)(v0 + 192);
    uint64_t v39 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 176);
    sub_24A41D2C8();
    uint64_t v10 = (void *)swift_allocError();
    *(void *)uint64_t v40 = 0xD000000000000028;
    *(void *)(v40 + 8) = 0x800000024A46B560;
    *(unsigned char *)(v40 + 16) = 0;
    swift_willThrow();
    sub_24A3E8CB4(v35, v33);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    goto LABEL_12;
  }
  id v9 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_24A463C98();
  sub_24A463DB8();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = *(void **)(v0 + 272);
    id v12 = *(void **)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 176);
    sub_24A3E8CB4(*(void *)(v0 + 256), *(void *)(v0 + 264));

    __int16 v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v13, v15);
    v17(v14, v15);
LABEL_12:
    *(void *)(v0 + 312) = v10;
    id v41 = v10;
    id v42 = v10;
    os_log_type_t v43 = sub_24A463FF8();
    os_log_type_t v44 = sub_24A4645D8();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v61[0] = v46;
      *(_DWORD *)unint64_t v45 = 136315138;
      swift_getErrorValue();
      uint64_t v47 = sub_24A464B38();
      *(void *)(v0 + 96) = sub_24A3E0E30(v47, v48, v61);
      sub_24A4646E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A3DA000, v43, v44, "failed to fetch configuration from server with error (%s)", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v46, -1, -1);
      MEMORY[0x24C5C5D60](v45, -1, -1);
    }
    else
    {
    }
    uint64_t v59 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 208) + 168) + **(int **)(**(void **)(v0 + 208) + 168));
    id v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v49;
    *id v49 = v0;
    v49[1] = sub_24A41BFC4;
    return v59();
  }
  uint64_t v51 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 176);
  uint64_t v52 = *(void *)(v0 + 184);
  uint64_t v54 = *(void *)(v0 + 168);
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  *(void *)(v0 + 288) = v55;
  *(void *)(v0 + 296) = (v53 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v55(v52, v54);
  uint64_t v60 = (uint64_t (*)(void))(*(void *)(*(void *)v51 + 152) + **(int **)(*(void *)v51 + 152));
  char v56 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v56;
  *char v56 = v0;
  v56[1] = sub_24A41BD14;
  return v60();
}

uint64_t sub_24A41BD14()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A41BE3C, 0, 0);
}

uint64_t sub_24A41BE3C()
{
  uint64_t v1 = sub_24A463FF8();
  os_log_type_t v2 = sub_24A4645D8();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl(&dword_24A3DA000, v1, v2, "successfully fetched configuration from server", v3, 2u);
    MEMORY[0x24C5C5D60](v3, -1, -1);
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v5 = (void *)v0[34];
  id v6 = (void *)v0[29];
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[21];

  swift_release();
  v4(v7, v8);
  uint64_t v9 = v0[32];
  uint64_t v10 = v0[33];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v9, v10);
}

uint64_t sub_24A41BFC4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A41C0EC, 0, 0);
}

uint64_t sub_24A41C0EC()
{
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A41C1D8()
{
  uint64_t v17 = v0;
  v16[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void **)(v0 + 280);
  *(void *)(v0 + 312) = v4;
  id v5 = v4;
  id v6 = v4;
  uint64_t v7 = sub_24A463FF8();
  os_log_type_t v8 = sub_24A4645D8();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v16[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v11 = sub_24A464B38();
    *(void *)(v0 + 96) = sub_24A3E0E30(v11, v12, v16);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v7, v8, "failed to fetch configuration from server with error (%s)", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v10, -1, -1);
    MEMORY[0x24C5C5D60](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 208) + 168) + **(int **)(**(void **)(v0 + 208) + 168));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_24A41BFC4;
  return v15();
}

unint64_t sub_24A41C494(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793D90);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    id v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_24A41D31C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A41C5A0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v1;
  void *v1 = v0;
  v1[1] = sub_24A41C658;
  return sub_24A41AABC();
}

uint64_t sub_24A41C658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[37] = a1;
  v4[38] = a2;
  swift_task_dealloc();
  if (v2)
  {
    id v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A41C7D0, 0, 0);
  }
}

uint64_t sub_24A41C7D0()
{
  uint64_t v1 = self;
  uint64_t v2 = (void *)sub_24A463D88();
  *(void *)(v0 + 232) = 0;
  id v3 = objc_msgSend(v1, sel_propertyListWithData_options_format_error_, v2, 0, 0, v0 + 232);

  uint64_t v4 = *(void **)(v0 + 232);
  if (!v3)
  {
    id v9 = v4;
    uint64_t v10 = (void *)sub_24A463C28();

    swift_willThrow();
    goto LABEL_7;
  }
  id v5 = v4;
  sub_24A464718();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793928);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    uint64_t v12 = *(void *)(v0 + 296);
    unint64_t v11 = *(void *)(v0 + 304);
    sub_24A41D2C8();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000028;
    *(void *)(v13 + 8) = 0x800000024A46B560;
LABEL_72:
    *(unsigned char *)(v13 + 16) = 0;
    swift_willThrow();
    sub_24A3E8CB4(v12, v11);
    unint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    return v45();
  }
  uint64_t v6 = *(void *)(v0 + 264);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_24A3E1488(0x67616265726F7453, 0xE800000000000000), (v8 & 1) != 0))
  {
    sub_24A3E200C(*(void *)(v6 + 56) + 32 * v7, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 136))
  {
    sub_24A3E2068(v0 + 112, &qword_269793C60);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(v0 + 296);
    unint64_t v11 = *(void *)(v0 + 304);
    sub_24A41D2C8();
    swift_allocError();
    uint64_t v17 = "failed to parse configuration, missing or unexpected type for Storebag key";
    unint64_t v18 = 0xD00000000000004ALL;
LABEL_71:
    *(void *)uint64_t v13 = v18;
    *(void *)(v13 + 8) = (unint64_t)(v17 - 32) | 0x8000000000000000;
    goto LABEL_72;
  }
  uint64_t v14 = *(void *)(v0 + 256);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_24A3E1488(0x676E696E676953, 0xE700000000000000), (v16 & 1) != 0))
  {
    sub_24A3E200C(*(void *)(v14 + 56) + 32 * v15, v0 + 176);
  }
  else
  {
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 200))
  {
    sub_24A3E2068(v0 + 176, &qword_269793C60);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    uint64_t v12 = *(void *)(v0 + 296);
    unint64_t v11 = *(void *)(v0 + 304);
    sub_24A41D2C8();
    swift_allocError();
    uint64_t v17 = "failed to parse configuration, missing or unexpected type for Signing key";
    unint64_t v18 = 0xD000000000000049;
    goto LABEL_71;
  }
  uint64_t v19 = *(void *)(v0 + 248);
  if (*(void *)(v19 + 16) && (unint64_t v20 = sub_24A3E1488(0x6D6E6F7269766E45, 0xEB00000000746E65), (v21 & 1) != 0))
  {
    sub_24A3E200C(*(void *)(v19 + 56) + 32 * v20, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
    sub_24A3E2068(v0 + 16, &qword_269793C60);
    goto LABEL_70;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_70:
    uint64_t v12 = *(void *)(v0 + 296);
    unint64_t v11 = *(void *)(v0 + 304);
    sub_24A41D2C8();
    swift_allocError();
    uint64_t v17 = "failed to parse configuration, missing or unexpected type for Environment key";
    unint64_t v18 = 0xD00000000000004DLL;
    goto LABEL_71;
  }
  uint64_t v22 = *(void *)(v0 + 240);
  uint64_t v49 = MEMORY[0x263F8EE78];
  if (*(void *)(v22 + 16))
  {
    unint64_t v23 = sub_24A3E1488(0x64756F6C4369, 0xE600000000000000);
    if (v24)
    {
      sub_24A3E200C(*(void *)(v22 + 56) + 32 * v23, v0 + 144);
      if (swift_dynamicCast())
      {
        unint64_t v25 = sub_24A41D868(*(void *)(v0 + 280));
        swift_bridgeObjectRelease();
        sub_24A41CF84(v25);
      }
    }
  }
  unint64_t v26 = sub_24A42508C();
  swift_beginAccess();
  if (*v26 == 1)
  {
    uint64_t v27 = (_OWORD *)(v0 + 80);
    uint64_t v48 = v22 + 64;
    uint64_t v28 = -1;
    uint64_t v29 = -1 << *(unsigned char *)(v22 + 32);
    if (-v29 < 64) {
      uint64_t v28 = ~(-1 << -(char)v29);
    }
    unint64_t v30 = v28 & *(void *)(v22 + 64);
    int64_t v31 = (unint64_t)(63 - v29) >> 6;
    swift_bridgeObjectRetain();
    int64_t v32 = 0;
    while (1)
    {
      do
      {
        if (v30)
        {
          unint64_t v33 = __clz(__rbit64(v30));
          v30 &= v30 - 1;
          unint64_t v34 = v33 | (v32 << 6);
        }
        else
        {
          int64_t v35 = v32 + 1;
          if (__OFADD__(v32, 1))
          {
            __break(1u);
            goto LABEL_80;
          }
          if (v35 >= v31) {
            goto LABEL_75;
          }
          unint64_t v36 = *(void *)(v48 + 8 * v35);
          ++v32;
          if (!v36)
          {
            int64_t v32 = v35 + 1;
            if (v35 + 1 >= v31) {
              goto LABEL_75;
            }
            unint64_t v36 = *(void *)(v48 + 8 * v32);
            if (!v36)
            {
              int64_t v32 = v35 + 2;
              if (v35 + 2 >= v31) {
                goto LABEL_75;
              }
              unint64_t v36 = *(void *)(v48 + 8 * v32);
              if (!v36)
              {
                int64_t v32 = v35 + 3;
                if (v35 + 3 >= v31) {
                  goto LABEL_75;
                }
                unint64_t v36 = *(void *)(v48 + 8 * v32);
                if (!v36)
                {
                  int64_t v32 = v35 + 4;
                  if (v35 + 4 >= v31) {
                    goto LABEL_75;
                  }
                  unint64_t v36 = *(void *)(v48 + 8 * v32);
                  if (!v36)
                  {
                    int64_t v37 = v35 + 5;
                    if (v37 >= v31)
                    {
LABEL_75:
                      swift_release();
                      goto LABEL_76;
                    }
                    unint64_t v36 = *(void *)(v48 + 8 * v37);
                    if (!v36)
                    {
                      while (1)
                      {
                        int64_t v32 = v37 + 1;
                        if (__OFADD__(v37, 1)) {
                          break;
                        }
                        if (v32 >= v31) {
                          goto LABEL_75;
                        }
                        unint64_t v36 = *(void *)(v48 + 8 * v32);
                        ++v37;
                        if (v36) {
                          goto LABEL_56;
                        }
                      }
LABEL_80:
                      __break(1u);
                    }
                    int64_t v32 = v37;
                  }
                }
              }
            }
          }
LABEL_56:
          unint64_t v30 = (v36 - 1) & v36;
          unint64_t v34 = __clz(__rbit64(v36)) + (v32 << 6);
        }
        uint64_t v38 = (uint64_t *)(*(void *)(v22 + 48) + 16 * v34);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        BOOL v41 = *v38 == 0x64756F6C4369 && v40 == 0xE600000000000000;
      }
      while (v41 || (sub_24A464A78() & 1) != 0);
      if (!*(void *)(v22 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v42 = sub_24A3E1488(v39, v40);
      if (v43)
      {
        sub_24A3E200C(*(void *)(v22 + 56) + 32 * v42, v0 + 80);
      }
      else
      {
        _OWORD *v27 = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 104))
      {
        if (swift_dynamicCast())
        {
          unint64_t v44 = sub_24A41D868(*(void *)(v0 + 272));
          swift_bridgeObjectRelease();
          sub_24A41CF84(v44);
        }
      }
      else
      {
LABEL_36:
        sub_24A3E2068(v0 + 80, &qword_269793C60);
      }
    }
    _OWORD *v27 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    goto LABEL_36;
  }
LABEL_76:
  sub_24A3E8CB4(*(void *)(v0 + 296), *(void *)(v0 + 304));
  swift_bridgeObjectRelease();
  uint64_t v47 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v47(v49);
}

uint64_t sub_24A41CF84(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24A4648F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24A4648F8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x24C5C4FB0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    unint64_t *v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_24A41D52C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24A4648F8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_24A464448();
}

uint64_t sub_24A41D150()
{
  return sub_24A463FE8();
}

uint64_t sub_24A41D19C()
{
  return sub_24A463FD8();
}

uint64_t sub_24A41D1F4()
{
  return sub_24A464BC8();
}

uint64_t sub_24A41D25C()
{
  swift_getWitnessTable();
  return sub_24A463FC8();
}

unint64_t sub_24A41D2C8()
{
  unint64_t result = qword_269793D68;
  if (!qword_269793D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793D68);
  }
  return result;
}

unint64_t sub_24A41D31C(uint64_t a1)
{
  sub_24A464B98();
  type metadata accessor for CFString();
  sub_24A41E594(&qword_269793D98, (void (*)(uint64_t))type metadata accessor for CFString);
  sub_24A463FD8();
  uint64_t v2 = sub_24A464BC8();
  return sub_24A41D3D0(a1, v2);
}

unint64_t sub_24A41D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString();
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_24A41E594(&qword_269793D98, (void (*)(uint64_t))type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_24A463FC8();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_24A463FC8();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_24A41D52C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24A4648F8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24A4648F8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_24A41E538();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269793D70);
          uint64_t v12 = sub_24A41D730(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SecKey(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

void (*sub_24A41D730(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_24A41D7E0(v6, a2, a3);
  return sub_24A41D798;
}

void sub_24A41D798(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_24A41D7E0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x24C5C4FA0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_24A41D860;
  }
  __break(1u);
  return result;
}

void sub_24A41D860(id *a1)
{
}

uint64_t sub_24A41D868(uint64_t a1)
{
  char v2 = 0;
  uint64_t v3 = 0;
  uint64_t v40 = MEMORY[0x263F8EE78];
  long long v38 = xmmword_24A466030;
  v39[0] = 0x654B63696C627550;
  v39[1] = 0xEF34366573614279;
  v39[2] = 0xD000000000000012;
  v39[3] = 0x800000024A46B680;
  int64_t v35 = (void *)*MEMORY[0x263F16FA8];
  unint64_t v34 = (void *)*MEMORY[0x263F16FE0];
  unint64_t v33 = (void *)*MEMORY[0x263F16F68];
  int64_t v32 = (void *)*MEMORY[0x263F16F80];
  do
  {
    char v4 = v2;
    if (!*(void *)(a1 + 16))
    {
      long long v36 = 0u;
      long long v37 = 0u;
LABEL_3:
      sub_24A3E2068((uint64_t)&v36, &qword_269793C60);
      goto LABEL_4;
    }
    uint64_t v5 = &v39[2 * v3];
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_24A3E1488(v6, v7);
    if (v9)
    {
      sub_24A3E200C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v36);
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v37 + 1)) {
      goto LABEL_3;
    }
    if (swift_dynamicCast())
    {
      uint64_t v10 = sub_24A463D58();
      if (v11 >> 60 == 15)
      {
        if (qword_2697984D0 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_24A464018();
        __swift_project_value_buffer(v12, (uint64_t)qword_26979A738);
        BOOL v13 = sub_24A463FF8();
        os_log_type_t v14 = sub_24A4645B8();
        if (os_log_type_enabled(v13, v14))
        {
          unint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v15 = 0;
          _os_log_impl(&dword_24A3DA000, v13, v14, "failed to parse configuration, failed to read public key data", v15, 2u);
          MEMORY[0x24C5C5D60](v15, -1, -1);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = v10;
        unint64_t v17 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269793D80);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24A466030;
        *(void *)(inited + 32) = v35;
        *(void *)(inited + 40) = v34;
        *(void *)(inited + 48) = v33;
        *(void *)(inited + 56) = v32;
        id v19 = v35;
        id v20 = v34;
        id v21 = v33;
        id v22 = v32;
        sub_24A406054(v16, v17);
        sub_24A41C494(inited);
        CFDataRef v23 = (const __CFData *)sub_24A463D88();
        type metadata accessor for CFString();
        sub_24A41E594(&qword_269793D88, (void (*)(uint64_t))type metadata accessor for CFString);
        CFDictionaryRef v24 = (const __CFDictionary *)sub_24A4641A8();
        swift_bridgeObjectRelease();
        SecKeyRef v25 = SecKeyCreateWithData(v23, v24, 0);

        if (v25)
        {
          sub_24A3E8CA0(v16, v17);
          sub_24A3E8CA0(v16, v17);
          swift_bridgeObjectRelease();
          unint64_t v26 = v25;
          MEMORY[0x24C5C4BA0]();
          if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24A464458();
          }
          sub_24A464478();
          sub_24A464448();
        }
        else
        {
          if (qword_2697984D0 != -1) {
            swift_once();
          }
          uint64_t v27 = sub_24A464018();
          __swift_project_value_buffer(v27, (uint64_t)qword_26979A738);
          uint64_t v28 = sub_24A463FF8();
          os_log_type_t v29 = sub_24A4645B8();
          if (os_log_type_enabled(v28, v29))
          {
            unint64_t v30 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v30 = 0;
            _os_log_impl(&dword_24A3DA000, v28, v29, "failed to parse configuration, failed to decode public key", v30, 2u);
            MEMORY[0x24C5C5D60](v30, -1, -1);
            sub_24A3E8CA0(v16, v17);

            sub_24A3E8CA0(v16, v17);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_24A3E8CA0(v16, v17);
            sub_24A3E8CA0(v16, v17);
            swift_bridgeObjectRelease();
          }
        }
      }
    }
LABEL_4:
    char v2 = 1;
    uint64_t v3 = 1;
  }
  while ((v4 & 1) == 0);
  swift_arrayDestroy();
  return v40;
}

uint64_t *sub_24A41DD9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24A463D28();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_24A41DE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_24A41DF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_24A41DFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_24A41E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_24A41E0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24A463D28();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_24A41E184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A41E198);
}

uint64_t sub_24A41E198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_24A41E204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A41E218);
}

uint64_t sub_24A41E218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24A41E288()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24A41E318(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1)
{
  return sub_24A41E340(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24A41E340(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19CloudTelemetryTools36StorebagCloudKitSigningConfigurationV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A41E318(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24A41E318(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24A41E340(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24A41E340(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A41E4E4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24A41E4FC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSigningConfiguration.Error()
{
  return &type metadata for StorebagCloudKitSigningConfiguration.Error;
}

void type metadata accessor for SecKey(uint64_t a1)
{
}

unint64_t sub_24A41E538()
{
  unint64_t result = qword_269793D78;
  if (!qword_269793D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793D78);
  }
  return result;
}

uint64_t sub_24A41E594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24A41E5DC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24A41E624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A41E68C()
{
  return sub_24A41E594(&qword_269793D88, (void (*)(uint64_t))type metadata accessor for CFString);
}

uint64_t sub_24A41E6D4()
{
  return sub_24A41E594((unint64_t *)&unk_269793DA8, (void (*)(uint64_t))type metadata accessor for CFString);
}

uint64_t sub_24A41E71C()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_269798778);
  __swift_project_value_buffer(v0, (uint64_t)qword_269798778);
  return sub_24A464008();
}

uint64_t sub_24A41E7A0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t sub_24A41E7E0(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return MEMORY[0x270FA2498](sub_24A41E828, v1, 0);
}

uint64_t sub_24A41E828()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 112) + 16))
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[5];
    sub_24A420530(&qword_269793DB8, v2, (void (*)(uint64_t))type metadata accessor for BackendGroup);
    unsigned __int8 v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    _OWORD v6[2] = v3;
    v6[3] = v5;
    _OWORD v6[4] = v4;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_24A41E9E0;
    return MEMORY[0x270FA2158]();
  }
  else
  {
    sub_24A41F17C();
    swift_allocError();
    swift_willThrow();
    unsigned __int8 v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_24A41E9E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A3F39D4, v1, 0);
}

uint64_t type metadata accessor for BackendGroup()
{
  return self;
}

uint64_t sub_24A41EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A41EBDC, a3, 0);
}

uint64_t sub_24A41EBDC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v32 = *(void *)(v3 + 16);
  if (v32)
  {
    uint64_t v4 = sub_24A4644E8();
    uint64_t v5 = *(void *)(v4 - 8);
    unint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    os_log_type_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v28 = v3;
    uint64_t v31 = v4;
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 128);
      uint64_t v8 = *(void *)(v0 + 136);
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v11 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 104);
      long long v33 = *(_OWORD *)(v3 + 16 * v6 + 32);
      v30(v8, 1, 1, v4);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      os_log_type_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      *(_OWORD *)(v13 + 32) = v33;
      *(void *)(v13 + 48) = v10;
      *(void *)(v13 + 56) = v12;
      *(void *)(v13 + 64) = v11;
      sub_24A4200E4(v8, v9);
      LODWORD(v9) = (*v29)(v9, 1, v4);
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v15 = *(void *)(v0 + 128);
      if (v9 == 1)
      {
        sub_24A3E2068(*(void *)(v0 + 128), &qword_269793750);
        if (!*v14) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_24A4644D8();
        (*v27)(v15, v4);
        if (!*v14)
        {
LABEL_8:
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = sub_24A464498();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v3 = v28;
      uint64_t v19 = **(void **)(v0 + 96);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = &unk_269793DF8;
      *(void *)(v20 + 24) = v13;
      uint64_t v21 = v18 | v16;
      if (v18 | v16)
      {
        uint64_t v21 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v16;
        *(void *)(v0 + 40) = v18;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 136);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v21;
      *(void *)(v0 + 88) = v19;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      sub_24A3E2068(v7, &qword_269793750);
      uint64_t v4 = v31;
      if (v32 == v6)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v22 = *(void *)(v0 + 104);
  uint64_t v23 = sub_24A420530(&qword_269793DB8, v2, (void (*)(uint64_t))type metadata accessor for BackendGroup);
  CFDictionaryRef v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793E08);
  void *v24 = v0;
  v24[1] = sub_24A41EFA0;
  return MEMORY[0x270FA1E50](v22, v23, v25);
}

uint64_t sub_24A41EFA0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A41F0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_24A3E0820;
  return sub_24A41EB30((uint64_t)v8, a2, v5, v6, v7);
}

unint64_t sub_24A41F17C()
{
  unint64_t result = qword_269793DD0;
  if (!qword_269793DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793DD0);
  }
  return result;
}

uint64_t sub_24A41F1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a5;
  v7[19] = a7;
  v7[17] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E10);
  v7[20] = swift_task_alloc();
  uint64_t v10 = sub_24A4639E8();
  v7[21] = v10;
  v7[22] = *(void *)(v10 - 8);
  v7[23] = swift_task_alloc();
  uint64_t v11 = sub_24A463FA8();
  v7[24] = v11;
  v7[25] = *(void *)(v11 - 8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E18);
  v7[28] = swift_task_alloc();
  uint64_t v12 = sub_24A463FB8();
  v7[29] = v12;
  v7[30] = *(void *)(v12 - 8);
  v7[31] = swift_task_alloc();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  os_log_type_t v14 = (void *)swift_task_alloc();
  v7[32] = v14;
  *os_log_type_t v14 = v7;
  v14[1] = sub_24A41F470;
  return v16(a6, ObjectType, a5);
}

uint64_t sub_24A41F470()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24A41F78C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24A41F5FC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 152) + 112;
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v3 = sub_24A420250(v2, v1);
  uint64_t v4 = swift_unknownObjectRelease();
  int64_t v6 = *(void *)(*(void *)v2 + 16);
  if (v6 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_24A4203BC(v3, v6);
    swift_endAccess();
    uint64_t v4 = (uint64_t)sub_24A41F6DC;
    int64_t v6 = 0;
    uint64_t v5 = 0;
  }
  return MEMORY[0x270FA2498](v4, v6, v5);
}

uint64_t sub_24A41F6DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A41F78C()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void **)(v0 + 264);
  *(void *)(v0 + 104) = v1;
  uint64_t v2 = *(void *)(v0 + 176);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
  char v4 = swift_dynamicCast();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if (v4)
  {
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 168);
    v5(v9, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v9, v8);
    LOBYTE(v9) = sub_24A463998();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if (v9) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 160);
    v5(v10, 1, 1, *(void *)(v0 + 168));
    sub_24A3E2068(v10, &qword_269793E10);
  }
  uint64_t v11 = *(void **)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 240);
  *(void *)(v0 + 80) = v11;
  id v13 = v11;
  char v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v14)
  {
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v16 = *(void *)(v0 + 248);
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v44 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v21 = *(void *)(v0 + 200);
    v15(v18, 0, 1, v19);
    uint64_t v46 = v16;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v18, v19);
    sub_24A420530(&qword_269793E20, 255, MEMORY[0x263F07A20]);
    sub_24A463C18();
    sub_24A463F98();
    sub_24A420530(&qword_269793E28, 255, MEMORY[0x263F07A00]);
    sub_24A464408();
    sub_24A464408();
    uint64_t v24 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v25(v44, v22);
    v25(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v46, v19);
    if (v24 == v23)
    {
LABEL_7:

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
      return v26();
    }
  }
  else
  {
    uint64_t v28 = *(void *)(v0 + 224);
    v15(v28, 1, 1, *(void *)(v0 + 232));
    sub_24A3E2068(v28, &qword_269793E18);
  }
  if (qword_269798770 != -1) {
    swift_once();
  }
  os_log_type_t v29 = *(void **)(v0 + 264);
  uint64_t v30 = sub_24A464018();
  __swift_project_value_buffer(v30, (uint64_t)qword_269798778);
  id v31 = v29;
  swift_unknownObjectRetain();
  id v32 = v29;
  swift_unknownObjectRetain();
  long long v33 = sub_24A463FF8();
  os_log_type_t v34 = sub_24A4645B8();
  BOOL v35 = os_log_type_enabled(v33, v34);
  long long v36 = *(void **)(v0 + 264);
  if (v35)
  {
    long long v45 = *(_OWORD *)(v0 + 136);
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v47 = v38;
    *(_DWORD *)uint64_t v37 = 136446466;
    *(_OWORD *)(v0 + 64) = v45;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793D50);
    uint64_t v39 = sub_24A4642D8();
    *(void *)(v0 + 88) = sub_24A3E0E30(v39, v40, &v47);
    sub_24A4646E8();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v41 = sub_24A464B38();
    *(void *)(v0 + 112) = sub_24A3E0E30(v41, v42, &v47);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v33, v34, "disabling backend '%{public}s' which returned error: %{public}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v38, -1, -1);
    MEMORY[0x24C5C5D60](v37, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }
  uint64_t v43 = *(void *)(v0 + 152);
  return MEMORY[0x270FA2498](sub_24A41F5FC, v43, 0);
}

uint64_t sub_24A41FD80()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

unint64_t sub_24A41FDBC()
{
  unint64_t result = qword_269793DD8;
  if (!qword_269793DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793DD8);
  }
  return result;
}

uint64_t sub_24A41FE10(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_24A3E0820;
  return v6(a1);
}

unsigned char *storeEnumTagSinglePayload for BackendGroup.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A41FFB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackendGroup.Error()
{
  return &type metadata for BackendGroup.Error;
}

uint64_t sub_24A41FFE8()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24A420038()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_24A3E2218;
  return sub_24A41F1D0((uint64_t)v6, v7, v8, v2, v3, v5, v4);
}

uint64_t sub_24A4200E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A42014C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A420184(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24A3E0820;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269793DF0 + dword_269793DF0);
  return v6(a1, v4);
}

void *sub_24A42023C(void *a1)
{
  return sub_24A41942C(0, a1[2], 0, a1);
}

uint64_t sub_24A420250(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)result;
  unint64_t v3 = *(void *)(*(void *)result + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (v2[v6 + 4] != a2)
  {
    ++v7;
    v6 += 2;
    if (v3 == v7) {
      return *(void *)(*(void *)result + 16);
    }
  }
  unint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  while (v8 != v3)
  {
    if (v8 >= v3)
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v9 = v2[v6 + 6];
    if (v9 != a2)
    {
      if (v8 != v7)
      {
        if (v7 >= v3) {
          goto LABEL_25;
        }
        uint64_t v10 = v2[v6 + 7];
        long long v13 = *(_OWORD *)&v2[2 * v7 + 4];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v2 = sub_24A42023C(v2);
        }
        uint64_t v11 = &v2[2 * v7];
        v11[4] = v9;
        v11[5] = v10;
        unint64_t result = swift_unknownObjectRelease();
        if (v8 >= v2[2]) {
          goto LABEL_26;
        }
        *(_OWORD *)&v2[v6 + 6] = v13;
        unint64_t result = swift_unknownObjectRelease();
        *uint64_t v5 = v2;
      }
      if (__OFADD__(v7++, 1)) {
        goto LABEL_24;
      }
      unint64_t v3 = v2[2];
    }
LABEL_11:
    ++v8;
    v6 += 2;
  }
  return v7;
}

uint64_t sub_24A4203BC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_24A41942C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793D50);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_24A464938();
  __break(1u);
  return result;
}

uint64_t sub_24A420530(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A420578()
{
  if (*v0) {
    return 0x727574616E676973;
  }
  else {
    return 6775138;
  }
}

uint64_t sub_24A4205B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24A420C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24A4205D8(uint64_t a1)
{
  unint64_t v2 = sub_24A420F34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A420614(uint64_t a1)
{
  unint64_t v2 = sub_24A420F34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A420650@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24A420D2C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_24A420680(uint64_t a1, uint64_t a2)
{
  sub_24A463C08();
  swift_allocObject();
  sub_24A463BF8();
  sub_24A4207F8();
  sub_24A463BE8();
  if (!v2
    && ((a2 = sub_24A463D58(),
         unint64_t v5 = v4,
         uint64_t v6 = sub_24A463D58(),
         unint64_t v8 = v7,
         swift_bridgeObjectRelease(),
         swift_bridgeObjectRelease(),
         v5 >> 60 == 15)
     || v8 >> 60 == 15))
  {
    sub_24A407C1C();
    swift_allocError();
    *int64_t v9 = 0;
    swift_willThrow();
    swift_release();
    sub_24A3E8CA0(v6, v8);
    sub_24A3E8CA0(a2, v5);
  }
  else
  {
    swift_release();
  }
  return a2;
}

unint64_t sub_24A4207F8()
{
  unint64_t result = qword_269798990[0];
  if (!qword_269798990[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269798990);
  }
  return result;
}

uint64_t sub_24A42084C()
{
  return sub_24A463DB8();
}

uint64_t destroy for RawStorebag(uint64_t *a1)
{
  sub_24A3E8CB4(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  return sub_24A3E8CB4(v2, v3);
}

uint64_t *initializeWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_24A3E8D0C(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_24A3E8D0C(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_24A3E8D0C(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_24A3E8CB4(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_24A3E8D0C(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_24A3E8CB4(v10, v11);
  return a1;
}

uint64_t *assignWithTake for RawStorebag(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24A3E8CB4(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_24A3E8CB4(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RawStorebag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag()
{
  return &type metadata for RawStorebag;
}

uint64_t destroy for RawStorebag._EncodedRawStorebag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag()
{
  return &type metadata for RawStorebag._EncodedRawStorebag;
}

uint64_t sub_24A420C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775138 && a2 == 0xE300000000000000;
  if (v2 || (sub_24A464A78() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24A464A78();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24A420D2C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793E30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A420F34();
  sub_24A464BF8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_24A4649B8();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_24A4649B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_24A420F34()
{
  unint64_t result = qword_269798A20[0];
  if (!qword_269798A20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269798A20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A421054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag.CodingKeys()
{
  return &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys;
}

unint64_t sub_24A421090()
{
  unint64_t result = qword_269798B30[0];
  if (!qword_269798B30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269798B30);
  }
  return result;
}

unint64_t sub_24A4210E8()
{
  unint64_t result = qword_269798C40;
  if (!qword_269798C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269798C40);
  }
  return result;
}

unint64_t sub_24A421140()
{
  unint64_t result = qword_269798C48[0];
  if (!qword_269798C48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269798C48);
  }
  return result;
}

id sub_24A421194()
{
  id result = objc_msgSend(objc_allocWithZone((Class)CKSoftLinkAssetFetch), sel_init);
  qword_26979A750 = (uint64_t)result;
  return result;
}

uint64_t sub_24A4211C8()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A758);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A758);
  return sub_24A464008();
}

uint64_t sub_24A421244(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0xD000000000000010;
  if (a2)
  {
    if (a2 == 1)
    {
      return 0x64616F6C6E776F64;
    }
    else
    {
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      sub_24A464358();
      return 0xD00000000000001FLL;
    }
  }
  return v2;
}

uint64_t sub_24A421310()
{
  return sub_24A421244(*v0, v0[1]);
}

uint64_t sub_24A421318()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A421364(uint64_t a1)
{
  int v3 = (void *)(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttlesByName);
  swift_beginAccess();
  *int v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24A4213B8())()
{
  return j__swift_endAccess;
}

uint64_t sub_24A421414(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24A421464(a1);
  return v2;
}

uint64_t sub_24A421464(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A463D28();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v16 - v12;
  type metadata accessor for Throttle();
  sub_24A411158(a1, (uint64_t)v13);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    type metadata accessor for StorebagCloudKitSource();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL, v13, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    sub_24A4199D8((uint64_t)v11, (uint64_t)v6);
    sub_24A42173C((uint64_t)v6, v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
    unint64_t v15 = sub_24A4217A0(MEMORY[0x263F8EE78]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    *(void *)(v1 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttlesByName) = v15;
  }
  return v1;
}

uint64_t type metadata accessor for StorebagCloudKitSource()
{
  uint64_t result = qword_269798DE0;
  if (!qword_269798DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A42173C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A4217A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E50);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_24A3E1488(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static StorebagCloudKitSource.setContainerPtr(object:)(uint64_t a1)
{
  if (qword_269798CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_26979A750;
  return objc_msgSend(v2, sel_setContainerPtr_, a1);
}

uint64_t sub_24A421930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[57] = a3;
  v4[58] = v3;
  v4[55] = a1;
  v4[56] = a2;
  uint64_t v5 = sub_24A4642C8();
  v4[59] = v5;
  v4[60] = *(void *)(v5 - 8);
  v4[61] = swift_task_alloc();
  sub_24A463D28();
  v4[62] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[63] = v6;
  void *v6 = v4;
  v6[1] = sub_24A421A90;
  return sub_24A41C5A0();
}

uint64_t sub_24A421A90(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[64] = a1;
  v3[65] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24A421C28, 0, 0);
  }
}

uint64_t sub_24A421C28()
{
  unint64_t v1 = *(void *)(v0 + 512);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24A4648F8();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    sub_24A4248B4();
    swift_allocError();
    *uint64_t v21 = 0xD000000000000043;
    unint64_t v20 = 0x800000024A46B9A0;
    goto LABEL_13;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 464) + 104);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = v2(v3);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_24A3E1488(*(void *)(v0 + 440), *(void *)(v0 + 448));
    if (v6) {
      goto LABEL_7;
    }
  }
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 448);
  uint64_t v24 = *(void *)(v0 + 440);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24A4647E8();
  swift_bridgeObjectRelease();
  sub_24A464358();
  type metadata accessor for Throttle();
  sub_24A464358();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24A4110C0(v7);
  uint64_t v11 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v0 + 184);
  uint64_t v13 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *v13;
  *uint64_t v13 = 0x8000000000000000;
  sub_24A424744(v10, v24, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v13 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11(v0 + 184, 0);
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v4 = v2(v15);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_24A3E1488(*(void *)(v0 + 440), *(void *)(v0 + 448));
    if (v16)
    {
LABEL_7:
      uint64_t v17 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 528) = v17;
      uint64_t v25 = (uint64_t (*)(void))(*(void *)(*(void *)v17 + 160) + **(int **)(*(void *)v17 + 160));
      swift_retain();
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 536) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_24A42211C;
      uint64_t v19 = v25;
      return v19();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24A4647E8();
  swift_bridgeObjectRelease();
  sub_24A464358();
  unint64_t v20 = 0x800000024A46B800;
  sub_24A4248B4();
  swift_allocError();
  *uint64_t v21 = 0xD00000000000001ELL;
LABEL_13:
  v21[1] = v20;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_24A42211C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 712) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A422248, 0, 0);
}

uint64_t sub_24A422248()
{
  if (*(unsigned char *)(v0 + 712))
  {
    if (qword_269798CD0 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26979A750;
    uint64_t v2 = sub_24A464248();
    *(void *)(v0 + 544) = v2;
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    uint64_t v3 = self;
    swift_retain();
    id v4 = objc_msgSend(v3, sel_mainBundle);
    id v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      sub_24A464278();

      __int16 v7 = sub_24A438B20(1, 1);
      id v8 = sub_24A45A12C(v7 & 0x101);
      *(void *)(v0 + 552) = v8;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 152;
      *(void *)(v0 + 24) = sub_24A4225A0;
      uint64_t v9 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x263EF8330];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_24A423EE8;
      *(void *)(v0 + 104) = &block_descriptor;
      *(void *)(v0 + 112) = v9;
      objc_msgSend(v1, sel_fetchAssetWithTeamID_options_completionHandler_, v2, v8, v0 + 80);
      uint64_t v6 = v0 + 16;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA23F0](v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_24A4647E8();
    swift_bridgeObjectRelease();
    sub_24A464358();
    sub_24A4248B4();
    swift_allocError();
    void *v10 = 0xD00000000000001DLL;
    v10[1] = 0x800000024A46B820;
    swift_willThrow();
    swift_release_n();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_24A4225A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 560) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_24A423D9C;
  }
  else
  {
    uint64_t v2 = sub_24A4226E4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A4226E4()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(void **)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 152);
  unint64_t v3 = *(void *)(v0 + 160);
  *(void *)(v0 + 568) = v4;
  *(void *)(v0 + 576) = v3;
  uint64_t v5 = *(void *)(v0 + 176);

  if (!v5
    || (uint64_t v6 = sub_24A463D58(),
        unint64_t v8 = v7,
        swift_bridgeObjectRelease(),
        *(void *)(v0 + 584) = v6,
        *(void *)(v0 + 592) = v8,
        v8 >> 60 == 15))
  {
    swift_bridgeObjectRelease();
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    void *v10 = 0;
    v10[1] = 0xE000000000000000;
    swift_willThrow();
    uint64_t v11 = v4;
    unint64_t v12 = v3;
LABEL_4:
    sub_24A3E8CA0(v11, v12);
    goto LABEL_5;
  }
  unint64_t v16 = *(void *)(v0 + 512);
  if (v3 >> 60 == 15)
  {
    sub_24A3E8D0C(v6, v8);
    swift_bridgeObjectRelease();
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    void *v17 = 0;
    v17[1] = 0xE000000000000000;
    swift_willThrow();
    sub_24A3E8CA0(v6, v8);
    uint64_t v11 = v6;
    unint64_t v12 = v8;
    goto LABEL_4;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24A406054(v6, v8);
    sub_24A406054(v4, v3);
    uint64_t v18 = (__SecKey *)sub_24A4648F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(__SecKey **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_24A406054(v6, v8);
    sub_24A406054(v4, v3);
  }
  uint64_t v19 = *(void *)(v0 + 512);
  uint64_t v101 = v6;
  if (!v18)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    void *v66 = 0;
    v66[1] = 0xE000000000000000;
    swift_willThrow();
    sub_24A3E8CA0(v101, v8);
    sub_24A3E8CA0(v4, v3);
    sub_24A3E8CA0(v4, v3);
    uint64_t v11 = v101;
    unint64_t v12 = v8;
    goto LABEL_4;
  }
  unint64_t v20 = v19 & 0xC000000000000001;
  if ((v19 & 0xC000000000000001) != 0) {
    goto LABEL_49;
  }
  if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    __break(1u);
  }
  for (unint64_t i = (__SecKey *)*(id *)(v19 + 32); ; unint64_t i = (__SecKey *)MEMORY[0x24C5C4FA0](0))
  {
    uint64_t v22 = i;
    CFStringRef v23 = (const __CFString *)*MEMORY[0x263F173A0];
    uint64_t v99 = v4;
    uint64_t v4 = sub_24A463D88();
    unint64_t v97 = v8;
    CFDataRef v24 = (const __CFData *)sub_24A463D88();
    int v25 = SecKeyVerifySignature(v22, v23, (CFDataRef)v4, v24, 0);

    if (v25) {
      break;
    }
    unint64_t v8 = 0;
    uint64_t v26 = *(void *)(v0 + 512);
    uint64_t v93 = v26 + 40;
    uint64_t v95 = v26 & 0xFFFFFFFFFFFFFF8;
    uint64_t v27 = (char *)v18 - 1;
    while (1)
    {
      if (v27 == (char *)v8)
      {
        unint64_t v8 = v97;
        uint64_t v4 = v99;
        goto LABEL_37;
      }
      unint64_t v28 = v8 + 1;
      if (v20)
      {
        os_log_type_t v29 = (__SecKey *)MEMORY[0x24C5C4FA0](v8 + 1, *(void *)(v0 + 512));
      }
      else
      {
        if (v28 >= *(void *)(v95 + 16)) {
          goto LABEL_48;
        }
        os_log_type_t v29 = (__SecKey *)*(id *)(v93 + 8 * v8);
      }
      uint64_t v18 = v29;
      if (__OFADD__(v28, 1)) {
        break;
      }
      CFDataRef v30 = (const __CFData *)sub_24A463D88();
      CFDataRef v31 = (const __CFData *)sub_24A463D88();
      uint64_t v4 = SecKeyVerifySignature(v18, v23, v30, v31, 0);

      ++v8;
      if (v4) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    ;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  id v32 = self;
  uint64_t v33 = v99;
  os_log_type_t v34 = (void *)sub_24A463D88();
  id v35 = objc_msgSend(v32, sel_gzipDecode_, v34);

  if (!v35)
  {
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    *uint64_t v62 = 0;
    v62[1] = 0xE000000000000000;
    swift_willThrow();
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v99, v3);
    uint64_t v11 = v101;
    unint64_t v12 = v97;
    goto LABEL_4;
  }
  uint64_t v36 = sub_24A463DA8();
  unint64_t v38 = v37;

  *(void *)(v0 + 600) = v36;
  *(void *)(v0 + 608) = v38;
  uint64_t v39 = self;
  sub_24A3E8D0C(v36, v38);
  unint64_t v40 = (void *)sub_24A463D88();
  *(void *)(v0 + 416) = 0;
  id v41 = objc_msgSend(v39, sel_JSONObjectWithData_options_error_, v40, 0, v0 + 416);

  unint64_t v42 = *(void **)(v0 + 416);
  if (!v41)
  {
    id v63 = v42;
    char v64 = (void *)sub_24A463C28();

    swift_willThrow();
    goto LABEL_34;
  }
  id v43 = v42;
  sub_24A464718();
  swift_unknownObjectRelease();
  sub_24A424908();
  uint64_t v33 = v99;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_34:
    sub_24A4647E8();
    swift_bridgeObjectRelease();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    *char v65 = 0xD000000000000019;
    v65[1] = 0x800000024A46B870;
    swift_willThrow();
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CA0(v33, v3);
    sub_24A3E8CA0(v33, v3);
    sub_24A3E8CA0(v101, v97);
LABEL_35:
    sub_24A3E8CB4(v36, v38);
    sub_24A3E8CB4(v36, v38);
    goto LABEL_5;
  }
  uint64_t v44 = *(void **)(v0 + 408);
  *(void *)(v0 + 616) = v44;
  long long v45 = self;
  *(void *)(v0 + 432) = 0;
  id v46 = v44;
  id v47 = objc_msgSend(v45, sel_dataWithPropertyList_format_options_error_, v46, 100, 0, v0 + 432);
  id v48 = *(id *)(v0 + 432);
  if (!v47)
  {
    char v67 = v48;
    uint64_t v68 = (void *)sub_24A463C28();

    swift_willThrow();
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    *uint64_t v69 = 0;
    v69[1] = 0xE000000000000000;
    swift_willThrow();
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v101, v97);

    goto LABEL_35;
  }
  uint64_t v91 = v45;
  uint64_t v92 = v46;
  int v96 = (id *)(v0 + 424);
  uint64_t v50 = *(void *)(v0 + 480);
  uint64_t v49 = *(void *)(v0 + 488);
  uint64_t v94 = *(void *)(v0 + 472);
  uint64_t v51 = sub_24A463DA8();
  unint64_t v53 = v52;

  *(void *)(v0 + 624) = v51;
  *(void *)(v0 + 632) = v53;
  sub_24A3E8D0C(v51, v53);
  uint64_t v89 = v51;
  unint64_t v90 = v53;
  uint64_t v54 = sub_24A463D98();
  uint64_t v55 = MEMORY[0x263F8D310];
  *(void *)(v0 + 336) = MEMORY[0x263F8D310];
  *(void *)(v0 + 312) = v54;
  *(void *)(v0 + 320) = v56;
  sub_24A3F201C((_OWORD *)(v0 + 312), (_OWORD *)(v0 + 344));
  uint64_t v57 = MEMORY[0x263F8EE80];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24A412544((_OWORD *)(v0 + 344), 6775138, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 400) = v57;
  swift_bridgeObjectRelease();
  sub_24A4642B8();
  uint64_t v59 = sub_24A464288();
  unint64_t v61 = v60;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v94);
  if (v61 >> 60 == 15)
  {
    sub_24A424150(0x727574616E676973, 0xE900000000000065, (_OWORD *)(v0 + 216));
    sub_24A4128EC(v0 + 216);
  }
  else
  {
    uint64_t v70 = sub_24A463D98();
    uint64_t v72 = v71;
    sub_24A3E8CA0(v59, v61);
    *(void *)(v0 + 304) = v55;
    *(void *)(v0 + 280) = v70;
    *(void *)(v0 + 288) = v72;
    sub_24A3F201C((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 120));
    uint64_t v73 = *(void *)(v0 + 400);
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    sub_24A412544((_OWORD *)(v0 + 120), 0x727574616E676973, 0xE900000000000065, v74);
    *(void *)(v0 + 400) = v73;
    swift_bridgeObjectRelease();
  }
  long long v75 = (void *)sub_24A4641A8();
  swift_bridgeObjectRelease();
  id *v96 = 0;
  id v76 = objc_msgSend(v91, sel_dataWithPropertyList_format_options_error_, v75, 100, 0, v96);

  id v77 = *v96;
  if (!v76)
  {
    os_log_type_t v85 = v77;
    uint64_t v86 = (void *)sub_24A463C28();

    swift_willThrow();
    sub_24A4647E8();
    sub_24A464358();
    sub_24A464358();
    sub_24A464358();
    sub_24A4248B4();
    uint64_t v9 = swift_allocError();
    *uint64_t v87 = 0;
    v87[1] = 0xE000000000000000;
    swift_willThrow();
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CB4(v36, v38);
    sub_24A3E8CB4(v36, v38);

    sub_24A3E8CB4(v89, v90);
    sub_24A3E8CB4(v89, v90);
LABEL_5:
    *(void *)(v0 + 696) = v9;
    uint64_t v98 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 168) + **(int **)(**(void **)(v0 + 528) + 168));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_24A423BBC;
    BOOL v14 = v98;
    return v14();
  }
  uint64_t v78 = *(void *)(v0 + 520);
  uint64_t v79 = sub_24A463DA8();
  unint64_t v81 = v80;

  *(void *)(v0 + 640) = v79;
  *(void *)(v0 + 648) = v81;
  sub_24A3E8D0C(v79, v81);
  uint64_t v9 = v78;
  *(void *)(v0 + 656) = sub_24A420680(v79, v81);
  *(void *)(v0 + 664) = v82;
  *(void *)(v0 + 672) = v83;
  *(void *)(v0 + 680) = v84;
  if (v78)
  {
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v99, v3);
    sub_24A3E8CA0(v101, v97);
    sub_24A3E8CB4(v36, v38);
    sub_24A3E8CB4(v36, v38);

    sub_24A3E8CB4(v89, v90);
    sub_24A3E8CB4(v89, v90);
    sub_24A3E8CB4(v79, v81);
    sub_24A3E8CB4(v79, v81);
    goto LABEL_5;
  }
  sub_24A42084C();
  uint64_t v100 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 152) + **(int **)(**(void **)(v0 + 528) + 152));
  unint64_t v88 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v88;
  *unint64_t v88 = v0;
  v88[1] = sub_24A423818;
  BOOL v14 = v100;
  return v14();
}

uint64_t sub_24A423818()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A423940, 0, 0);
}

uint64_t sub_24A423940()
{
  if (qword_269798CD8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A464018();
  __swift_project_value_buffer(v1, (uint64_t)qword_26979A758);
  uint64_t v2 = sub_24A463FF8();
  os_log_type_t v3 = sub_24A4645D8();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24A3DA000, v2, v3, "sucessfully fetched storebag from server", v4, 2u);
    MEMORY[0x24C5C5D60](v4, -1, -1);
  }
  uint64_t v18 = v0[84];
  unint64_t v19 = v0[85];
  uint64_t v16 = v0[82];
  unint64_t v17 = v0[83];
  unint64_t v5 = v0[81];
  uint64_t v6 = v0[80];
  unint64_t v20 = v0[79];
  uint64_t v21 = v2;
  uint64_t v7 = v0[78];
  unint64_t v8 = v0[76];
  uint64_t v9 = v0[75];
  unint64_t v10 = v0[74];
  uint64_t v11 = v0[73];
  unint64_t v12 = v0[72];
  uint64_t v22 = (void *)v0[77];
  uint64_t v13 = v0[71];
  swift_release();
  sub_24A3E8CA0(v13, v12);
  sub_24A3E8CA0(v11, v10);
  sub_24A3E8CB4(v9, v8);
  sub_24A3E8CB4(v16, v17);
  sub_24A3E8CB4(v18, v19);
  sub_24A3E8CB4(v6, v5);
  sub_24A3E8CB4(v7, v20);

  sub_24A3E8CB4(v6, v5);
  sub_24A3E8CB4(v7, v20);

  sub_24A3E8CB4(v9, v8);
  sub_24A3E8CA0(v13, v12);
  sub_24A3E8CA0(v11, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24A423BBC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A423CE4, 0, 0);
}

uint64_t sub_24A423CE4()
{
  swift_willThrow();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A423D9C()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(void **)(v0 + 544);
  swift_willThrow();

  *(void *)(v0 + 696) = *(void *)(v0 + 560);
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 168) + **(int **)(**(void **)(v0 + 528) + 168));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 704) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24A423BBC;
  return v5();
}

uint64_t sub_24A423EE8(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a4;
    id v8 = a4;
    return MEMORY[0x270FA2410](v4, v6);
  }
  if (!a2)
  {
    id v18 = a3;
    uint64_t v12 = 0;
    unint64_t v14 = 0xF000000000000000;
    if (a3) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  id v10 = a2;
  id v11 = a3;
  uint64_t v12 = sub_24A463DA8();
  unint64_t v14 = v13;

  if (!a3) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v15 = sub_24A464278();
  uint64_t v17 = v16;

LABEL_10:
  unint64_t v19 = *(uint64_t **)(*(void *)(v4 + 64) + 40);
  *unint64_t v19 = v12;
  v19[1] = v14;
  v19[2] = v15;
  v19[3] = v17;
  return MEMORY[0x270FA2408](v4);
}

uint64_t StorebagCloudKitSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24A424948(v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StorebagCloudKitSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_throttleCacheURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24A424948(v0 + OBJC_IVAR____TtC19CloudTelemetryTools22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_24A424150@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24A3E1488(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A412704();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_24A3F201C((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_24A42456C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_24A424254(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E50);
  char v36 = a2;
  uint64_t v6 = sub_24A464918();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    os_log_type_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    id v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *id v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_24A42456C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24A464B98();
        swift_bridgeObjectRetain();
        sub_24A464318();
        uint64_t v10 = sub_24A464BC8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *unint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    id v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *id v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24A424744(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A424CF0();
LABEL_7:
    id v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24A424254(v15, a4 & 1);
  unint64_t v21 = sub_24A3E1488(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_24A464B28();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  id v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24A4248B4()
{
  unint64_t result = qword_269793E40;
  if (!qword_269793E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793E40);
  }
  return result;
}

unint64_t sub_24A424908()
{
  unint64_t result = qword_269793E48;
  if (!qword_269793E48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269793E48);
  }
  return result;
}

uint64_t sub_24A424948(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A4249A8()
{
  return type metadata accessor for StorebagCloudKitSource();
}

uint64_t sub_24A4249B0()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StorebagCloudKitSigningConfiguration();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t destroy for StorebagCloudKitSource.Error(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19CloudTelemetryTools22StorebagCloudKitSourceC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for StorebagCloudKitSource.Error(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagCloudKitSource.Error(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_24A424CA8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24A424CC0(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSource.Error()
{
  return &type metadata for StorebagCloudKitSource.Error;
}

void *sub_24A424CF0()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL static Mode.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t Mode.hash(into:)()
{
  return sub_24A464BA8();
}

uint64_t Mode.hashValue.getter()
{
  return sub_24A464BC8();
}

uint64_t variable initialization expression of Daemon.mode()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.clientBundleID()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.diskCache()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.sessionCoord()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.submissionCoord()
{
  return 0;
}

uint64_t variable initialization expression of Daemon.transparencyLog()
{
  return 0;
}

uint64_t Daemon.disabled.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Daemon.disabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*Daemon.disabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_24A424F8C()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A788);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A788);
  return sub_24A464008();
}

uint64_t sub_24A425000()
{
  if (qword_269798DF0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24A464018();
  return __swift_project_value_buffer(v0, (uint64_t)qword_26979A788);
}

uint64_t sub_24A425064()
{
  uint64_t result = os_variant_has_internal_diagnostics();
  byte_26979A7A0 = result;
  return result;
}

char *sub_24A42508C()
{
  if (qword_269798DF8 != -1) {
    swift_once();
  }
  return &byte_26979A7A0;
}

void sub_24A4250D8()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_24A464248();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    qword_26979A7A8 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

uint64_t *sub_24A425150()
{
  if (qword_269798E00 != -1) {
    swift_once();
  }
  return &qword_26979A7A8;
}

void sub_24A42519C()
{
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26979A7A8;
  uint64_t v1 = (void *)sub_24A464248();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  byte_26979A7B0 = v2;
}

char *sub_24A425268()
{
  if (qword_269798E08 != -1) {
    swift_once();
  }
  return &byte_26979A7B0;
}

void sub_24A4252B4()
{
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_26979A7A8;
  uint64_t v1 = (void *)sub_24A464248();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  if (v2)
  {
    BOOL v3 = 1;
  }
  else
  {
    id v4 = (id)qword_26979A7A8;
    unsigned int v5 = (void *)sub_24A464248();
    id v6 = objc_msgSend(v4, sel_integerForKey_, v5);

    BOOL v3 = v6 == (id)5;
  }
  byte_26979A7B1 = v3;
}

char *sub_24A4253EC()
{
  if (qword_269798E10 != -1) {
    swift_once();
  }
  return &byte_26979A7B1;
}

void sub_24A425438()
{
  if (qword_269798DF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_26979A7A0 == 1)
  {
    if (qword_269798E00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v0 = (id)qword_26979A7A8;
    uint64_t v1 = (void *)sub_24A464248();
    unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);
  }
  else
  {
    unsigned __int8 v2 = 0;
  }
  byte_26979A7B2 = v2;
}

char *sub_24A425564()
{
  if (qword_269798E18 != -1) {
    swift_once();
  }
  return &byte_26979A7B2;
}

uint64_t sub_24A4255B0()
{
  return DiagnosticLogSubmissionEnabled();
}

void sub_24A4255C8()
{
  if (!*(unsigned char *)v0)
  {
    sub_24A4647E8();
    swift_bridgeObjectRelease();
    id v1 = objc_msgSend(self, sel_mainBundle);
    id v2 = objc_msgSend(v1, sel_bundleIdentifier);

    if (v2)
    {
      sub_24A464278();

      sub_24A464358();
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)v0 == 1)
  {
    sub_24A4647E8();
    sub_24A464358();
    if (*(void *)(v0 + 16))
    {
      swift_bridgeObjectRetain();
      sub_24A464358();
LABEL_7:
      swift_bridgeObjectRelease();
      sub_24A464358();
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_24A425748()
{
  if (!*(unsigned char *)v0)
  {
    sub_24A4647E8();
    swift_bridgeObjectRelease();
    id v1 = objc_msgSend(self, sel_mainBundle);
    id v2 = objc_msgSend(v1, sel_bundleIdentifier);

    if (v2)
    {
      sub_24A464278();

      sub_24A464358();
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)v0 == 1)
  {
    sub_24A4647E8();
    sub_24A464358();
    if (*(void *)(v0 + 16))
    {
      swift_bridgeObjectRetain();
      sub_24A464358();
LABEL_7:
      swift_bridgeObjectRelease();
      sub_24A464358();
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_24A4258C8(char *a1@<X8>)
{
  v102[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v88 = sub_24A4639D8();
  uint64_t v87 = *(void (**)(char *, uint64_t))(v88 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v88);
  int v96 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v95 = (char *)&v80 - v5;
  uint64_t v92 = sub_24A4639E8();
  uint64_t v97 = *(void *)(v92 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v92);
  unint64_t v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v86 = (char *)&v80 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v91 = (char *)&v80 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v93 = (char *)&v80 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793960);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24A463D28();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v94 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  int64_t v22 = (char *)&v80 - v21;
  sub_24A3F20A4();
  sub_24A425748();
  sub_24A463C98();
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v99 = v18 + 8;
  v98(v22, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A466020;
  int64_t v24 = (void *)*MEMORY[0x263EFF6A8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF6A8];
  id v25 = v24;
  sub_24A3EB0D4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_24A463C48();
  if (v1)
  {

    swift_bridgeObjectRelease();
    uint64_t v26 = sub_24A463BD8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 1, 1, v26);
LABEL_5:
    sub_24A3E2068((uint64_t)v16, &qword_269793960);
    goto LABEL_6;
  }
  uint64_t v27 = v17;
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_24A463BD8();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v16, 0, 1, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v28) == 1)
  {
    uint64_t v17 = v27;
    goto LABEL_5;
  }
  char v60 = sub_24A463B78();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v28);
  uint64_t v17 = v27;
  if ((v60 & 1) == 0)
  {
LABEL_6:
    if (qword_269798DF0 != -1) {
      swift_once();
    }
    uint64_t v89 = 0;
    uint64_t v30 = sub_24A464018();
    __swift_project_value_buffer(v30, (uint64_t)qword_26979A788);
    uint64_t v31 = v94;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v94, a1, v17);
    uint64_t v32 = sub_24A463FF8();
    os_log_type_t v33 = sub_24A464598();
    BOOL v34 = os_log_type_enabled(v32, v33);
    os_log_type_t v85 = v8;
    if (v34)
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      char v36 = (void *)swift_slowAlloc();
      v102[0] = v36;
      unint64_t v90 = a1;
      *(_DWORD *)uint64_t v35 = 136446210;
      uint64_t v37 = sub_24A463CF8();
      uint64_t v101 = sub_24A3E0E30(v37, v38, (uint64_t *)v102);
      a1 = v90;
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      v98(v31, v17);
      _os_log_impl(&dword_24A3DA000, v32, v33, "creating log directory at %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v36, -1, -1);
      MEMORY[0x24C5C5D60](v35, -1, -1);
    }
    else
    {
      v98(v31, v17);
    }

    uint64_t v39 = v97;
    id v40 = objc_msgSend(self, sel_defaultManager);
    id v41 = (void *)sub_24A463C88();
    v102[0] = 0;
    unsigned int v42 = objc_msgSend(v40, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v41, 1, 0, v102);

    id v43 = v95;
    uint64_t v44 = v96;
    if (v42)
    {
      id v45 = v102[0];
      return;
    }
    id v46 = v102[0];
    id v47 = (void *)sub_24A463C28();

    swift_willThrow();
    v102[0] = v47;
    id v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    uint64_t v50 = v92;
    uint64_t v49 = v93;
    if (swift_dynamicCast())
    {
      uint64_t v94 = (char *)v17;
      unint64_t v90 = a1;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      uint64_t v83 = v39 + 16;
      uint64_t v82 = v51;
      v51(v91, v49, v50);
      uint64_t v89 = sub_24A42C1CC(&qword_269793638, MEMORY[0x263F06060]);
      sub_24A463C18();
      sub_24A4639C8();
      uint64_t v52 = sub_24A42C1CC(&qword_269793640, MEMORY[0x263F06038]);
      unint64_t v53 = v43;
      uint64_t v54 = v88;
      sub_24A464408();
      uint64_t v84 = v52;
      sub_24A464408();
      uint64_t v56 = v100;
      uint64_t v55 = v101;
      uint64_t v57 = (void (*)(char *, uint64_t))*((void *)v87 + 1);
      v57(v44, v54);
      uint64_t v87 = v57;
      v57(v53, v54);
      if (v55 == v56)
      {

        uint64_t v58 = (uint64_t)v91;
        sub_24A44A1F4((uint64_t)v91);
        uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
        v59(v58, v50);
LABEL_20:
        v98(v90, (uint64_t)v94);
        v59((uint64_t)v93, v50);
LABEL_21:
        id v70 = v102[0];
LABEL_26:

        return;
      }
      uint64_t v61 = (uint64_t)v91;
      unint64_t v81 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
      uint64_t v91 = (char *)(v97 + 8);
      v81(v61, v50);
      uint64_t v62 = (uint64_t)v86;
      v82(v86, v93, v50);
      id v63 = v95;
      sub_24A463C18();
      char v64 = v96;
      sub_24A4639B8();
      sub_24A464408();
      sub_24A464408();
      uint64_t v66 = v100;
      uint64_t v65 = v101;
      char v67 = v64;
      uint64_t v68 = v87;
      v87(v67, v54);
      v68(v63, v54);
      if (v65 == v66)
      {

        sub_24A44A1D0(v62);
        uint64_t v69 = v62;
        uint64_t v59 = v81;
        v81(v69, v50);
        goto LABEL_20;
      }
      uint64_t v71 = v62;
      uint64_t v72 = v81;
      v81(v71, v50);
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v85, v93, v50);
      uint64_t v73 = v95;
      sub_24A463C18();
      char v74 = v96;
      sub_24A4639A8();
      sub_24A464408();
      sub_24A464408();
      uint64_t v76 = v100;
      uint64_t v75 = v101;
      id v77 = v74;
      uint64_t v78 = v87;
      v87(v77, v54);
      v78(v73, v54);
      a1 = v90;
      if (v75 == v76)
      {

        uint64_t v79 = (uint64_t)v85;
        sub_24A44A218((uint64_t)v85);
        v72(v79, v50);
        v98(a1, (uint64_t)v94);
        goto LABEL_21;
      }
      v72((uint64_t)v85, v50);
      uint64_t v17 = (uint64_t)v94;
    }

    sub_24A44A5E8(v47);
    v98(a1, v17);
    id v70 = v47;
    goto LABEL_26;
  }
}

uint64_t sub_24A426488()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793EA8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(unsigned char *)(result + 16) = 0;
  qword_26979A7B8 = result;
  return result;
}

void sub_24A4264C4(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a1;
  uint64_t v87 = a4;
  v92[10] = *(id *)MEMORY[0x263EF8340];
  uint64_t v81 = sub_24A4639D8();
  uint64_t v80 = *(void (**)(char *, uint64_t))(v81 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v81);
  uint64_t v79 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (char *)&v74 - v9;
  uint64_t v88 = sub_24A4639E8();
  uint64_t v84 = *(void *)(v88 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v88);
  id v77 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v78 = (char *)&v74 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v85 = (uint64_t)&v74 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v86 = (char *)&v74 - v16;
  uint64_t v17 = sub_24A463BD8();
  uint64_t v89 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793960);
  MEMORY[0x270FA5388](v20 - 8);
  int64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269798E20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v23 = (os_unfair_lock_s *)qword_26979A7B8;
  int64_t v24 = (unsigned char *)(qword_26979A7B8 + 16);
  swift_retain();
  os_unfair_lock_lock(v23 + 5);
  sub_24A42702C(v24, v92);
  if (v4)
  {
    os_unfair_lock_unlock(v23 + 5);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v23 + 5);
    char v25 = (char)v92[0];
    swift_release();
    if (v25)
    {
      sub_24A449FC4();
      return;
    }
    v92[0] = a2;
    v92[1] = a3;
    swift_bridgeObjectRetain();
    sub_24A464358();
    uint64_t v26 = v87;
    sub_24A463C98();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A466020;
    uint64_t v28 = (void *)*MEMORY[0x263EFF6A8];
    *(void *)(inited + 32) = *MEMORY[0x263EFF6A8];
    id v29 = v28;
    sub_24A3EB0D4(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey();
    swift_arrayDestroy();
    sub_24A463C48();
    swift_bridgeObjectRelease();
    uint64_t v30 = v89;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v22, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v22, 1, v17) == 1)
    {
      sub_24A3E2068((uint64_t)v22, &qword_269793960);
      goto LABEL_8;
    }
    char v55 = sub_24A463B78();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v17);
    if ((v55 & 1) == 0)
    {
LABEL_8:
      id v31 = objc_msgSend(self, sel_defaultManager);
      uint64_t v32 = (void *)sub_24A463C88();
      v92[0] = 0;
      unsigned int v33 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, v92);

      if (v33)
      {
        id v34 = v92[0];
        sub_24A463BC8();
        sub_24A463B98();
        sub_24A463C78();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v19, v17);
        return;
      }
      id v35 = v92[0];
      char v36 = (void *)sub_24A463C28();

      swift_willThrow();
      uint64_t v37 = v85;
      v92[0] = v36;
      id v38 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
      uint64_t v39 = v86;
      uint64_t v40 = v88;
      int v41 = swift_dynamicCast();
      unsigned int v42 = v83;
      if (v41)
      {
        uint64_t v89 = 0;
        uint64_t v75 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 16);
        v75(v37, v39, v40);
        uint64_t v82 = sub_24A42C1CC(&qword_269793638, MEMORY[0x263F06060]);
        sub_24A463C18();
        id v43 = v79;
        sub_24A4639C8();
        uint64_t v44 = sub_24A42C1CC(&qword_269793640, MEMORY[0x263F06038]);
        id v45 = v42;
        uint64_t v46 = v81;
        sub_24A464408();
        uint64_t v76 = v44;
        sub_24A464408();
        uint64_t v48 = v90;
        uint64_t v47 = v91;
        uint64_t v49 = (void (*)(char *, uint64_t))*((void *)v80 + 1);
        v49(v43, v46);
        v49(v45, v46);
        if (v47 == v48)
        {

          uint64_t v50 = v85;
          sub_24A44A1F4(v85);
          uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
          uint64_t v52 = v50;
          uint64_t v53 = v88;
          v51(v52, v88);
          uint64_t v54 = sub_24A463D28();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v87, v54);
          v51((uint64_t)v86, v53);
LABEL_19:
          id v72 = v92[0];
LABEL_22:

          return;
        }
        uint64_t v56 = v85;
        uint64_t v57 = *(void (**)(char *, uint64_t))(v84 + 8);
        uint64_t v58 = v88;
        uint64_t v85 = v84 + 8;
        uint64_t v80 = v57;
        v57((char *)v56, v88);
        uint64_t v59 = (uint64_t)v78;
        v75((uint64_t)v78, v86, v58);
        char v60 = v83;
        sub_24A463C18();
        sub_24A4639B8();
        sub_24A464408();
        sub_24A464408();
        uint64_t v62 = v90;
        uint64_t v61 = v91;
        v49(v43, v46);
        v49(v60, v46);
        if (v61 == v62)
        {

          sub_24A44A1D0(v59);
          uint64_t v63 = v88;
          char v64 = v80;
          v80((char *)v59, v88);
          uint64_t v65 = sub_24A463D28();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v87, v65);
          v64(v86, v63);
          goto LABEL_19;
        }
        uint64_t v66 = v88;
        v80((char *)v59, v88);
        uint64_t v67 = (uint64_t)v77;
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v77, v86, v66);
        uint64_t v68 = v83;
        sub_24A463C18();
        sub_24A4639A8();
        sub_24A464408();
        sub_24A464408();
        uint64_t v70 = v90;
        uint64_t v69 = v91;
        v49(v43, v46);
        v49(v68, v46);
        if (v69 == v70)
        {

          sub_24A44A218(v67);
          v80((char *)v67, v88);
          uint64_t v71 = sub_24A463D28();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v87, v71);
          goto LABEL_19;
        }
        v80((char *)v67, v88);
        uint64_t v26 = v87;
      }

      sub_24A44A5E8(v36);
      uint64_t v73 = sub_24A463D28();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v26, v73);
      id v72 = v36;
      goto LABEL_22;
    }
  }
}

unsigned char *sub_24A42702C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t Daemon.init(mode:clientBundleID:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 584) = a4;
  *(void *)(v4 + 576) = a3;
  *(unsigned char *)(v4 + 76) = a2;
  *(void *)(v4 + 568) = a1;
  uint64_t v5 = sub_24A463D28();
  *(void *)(v4 + 592) = v5;
  *(void *)(v4 + 600) = *(void *)(v5 - 8);
  *(void *)(v4 + 608) = swift_task_alloc();
  *(void *)(v4 + 616) = swift_task_alloc();
  *(void *)(v4 + 624) = swift_task_alloc();
  *(void *)(v4 + 632) = swift_task_alloc();
  *(void *)(v4 + 640) = swift_task_alloc();
  *(void *)(v4 + 648) = swift_task_alloc();
  *(void *)(v4 + 656) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A42717C, 0, 0);
}

uint64_t sub_24A42717C()
{
  uint64_t v58 = v0;
  v57[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = qword_269798DF0;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  *(void *)(v0 + 664) = __swift_project_value_buffer(v2, (uint64_t)qword_26979A788);
  uint64_t v3 = sub_24A463FF8();
  os_log_type_t v4 = sub_24A4645D8();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_24A3DA000, v3, v4, "starting CloudTelemetryService", v5, 2u);
    MEMORY[0x24C5C5D60](v5, -1, -1);
  }
  uint64_t v6 = *(void *)(v0 + 656);
  uint64_t v7 = *(void *)(v0 + 600);
  uint64_t v8 = *(void *)(v0 + 592);

  *(unsigned char *)(v0 + 888) = 0;
  uint64_t v9 = self;
  *(void *)(v0 + 672) = v9;
  id v10 = objc_msgSend(v9, sel_defaultManager);
  sub_24A3F20A4();
  sub_24A463CE8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v0 + 680) = v11;
  *(void *)(v0 + 688) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v6, v8);
  uint64_t v12 = (void *)sub_24A464248();
  swift_bridgeObjectRelease();
  LOBYTE(v6) = objc_msgSend(v10, sel_fileExistsAtPath_, v12);

  if (v6)
  {
    uint64_t v13 = *(char **)(v0 + 648);
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 76);
    *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(unsigned char *)(v0 + 72) = 0;
    swift_bridgeObjectRetain();
    sub_24A4258C8(v13);
    swift_bridgeObjectRelease();
    type metadata accessor for TransparencyLog();
    id v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v31;
    *id v31 = v0;
    v31[1] = sub_24A427DFC;
    uint64_t v32 = *(void *)(v0 + 648);
    return sub_24A3E546C(v32);
  }
  uint64_t v14 = sub_24A463FF8();
  os_log_type_t v15 = sub_24A4645C8();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = *(void *)(v0 + 656);
    uint64_t v51 = *(void *)(v0 + 592);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v57[0] = v54;
    *(_DWORD *)uint64_t v17 = 136380675;
    sub_24A3F20A4();
    uint64_t v18 = sub_24A463CE8();
    unint64_t v20 = v19;
    v11(v16, v51);
    *(void *)(v0 + 528) = sub_24A3E0E30(v18, v20, v57);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v14, v15, "reporting disabled due to missing home directory: %{private}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v54, -1, -1);
    MEMORY[0x24C5C5D60](v17, -1, -1);
  }

  *(unsigned char *)(v0 + 888) = 1;
  uint64_t v21 = sub_24A463FF8();
  os_log_type_t v22 = sub_24A4645C8();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v23 = 0;
    _os_log_impl(&dword_24A3DA000, v21, v22, "reporting disabled due to startup failure.", v23, 2u);
    MEMORY[0x24C5C5D60](v23, -1, -1);
  }

  *(unsigned char *)(v0 + 888) = 1;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    int64_t v24 = XPCActivity.makeHandler.unsafeMutableAddressor();
    char v25 = (void *)swift_allocObject();
    void v25[3] = 0;
    v25[4] = 0;
    void v25[2] = 0;
    swift_beginAccess();
    uint64_t v26 = *v24;
    uint64_t *v24 = (uint64_t)&unk_269793E68;
    v24[1] = (uint64_t)v25;
    sub_24A3F1178(v26);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v27 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_24A4648F8();
      *(void *)(v0 + 824) = v28;
      if (v28) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v28;
      if (v28)
      {
LABEL_16:
        if (v28 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v29 = *(void *)(v0 + 816);
        if ((v29 & 0xC000000000000001) != 0)
        {
          uint64_t v30 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          uint64_t v30 = *(void **)(v29 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v30;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v34 = *v30 + 160;
        *(void *)(v0 + 848) = *(void *)v34;
        *(void *)(v0 + 856) = v34 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return MEMORY[0x270FA2498](sub_24A42947C, v30, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v56 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v57, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v35 = (id)qword_26979A7A8;
  char v36 = (void *)sub_24A464248();
  id v37 = objc_msgSend(v35, sel_valueForKey_, v36);

  if (v37)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v57, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v57, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v57, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v38 = sub_24A463FF8();
  os_log_type_t v39 = sub_24A4645D8();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v57[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v42 = sub_24A42BF88(v56);
    *(void *)(v0 + 488) = sub_24A3E0E30(v42, v43, v57);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v38, v39, "started CloudTelemetryService%s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v41, -1, -1);
    MEMORY[0x24C5C5D60](v40, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v44 = *(void *)(v0 + 808);
  uint64_t v52 = *(void *)(v0 + 800);
  uint64_t v53 = *(void *)(v0 + 792);
  uint64_t v45 = *(void *)(v0 + 584);
  uint64_t v49 = *(void *)(v0 + 576);
  uint64_t v50 = *(void *)(v0 + 784);
  char v48 = *(unsigned char *)(v0 + 76);
  uint64_t v46 = *(void *)(v0 + 568);
  char v55 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v46 = v48;
  *(void *)(v46 + 8) = v49;
  *(void *)(v46 + 16) = v45;
  *(void *)(v46 + 24) = v52;
  *(void *)(v46 + 32) = v50;
  *(void *)(v46 + 40) = v44;
  *(void *)(v46 + 48) = v53;
  *(unsigned char *)(v46 + 56) = v55;
  uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

uint64_t sub_24A427DFC(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {

    uint64_t v5 = sub_24A429B64;
  }
  else
  {
    *(void *)(v4 + 704) = a1;
    uint64_t v5 = sub_24A427F50;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A427F50()
{
  *(void *)(v0 + 712) = *(void *)(v0 + 704);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  char v5 = *(unsigned char *)(v0 + 76);
  *(void *)(v0 + 720) = type metadata accessor for DiskCache();
  *(unsigned char *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = v3;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(unsigned char *)(v0 + 136) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24A3F20A4();
  sub_24A4255C8();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  v9(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v6;
  void *v6 = v0;
  v6[1] = sub_24A4280DC;
  uint64_t v7 = *(void *)(v0 + 640);
  return DiskCache.__allocating_init(rootCacheURL:)(v7);
}

uint64_t sub_24A4280DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 736) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_24A42A760;
  }
  else
  {
    *(void *)(v4 + 744) = a1;
    char v5 = sub_24A42822C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A42822C()
{
  uint64_t v46 = v0;
  v45[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = (unsigned char *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 744);
  *(void *)(v0 + 752) = v2;
  uint64_t v3 = *(void *)(v0 + 712);
  swift_retain();
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    char v5 = sub_24A463FF8();
    os_log_type_t v6 = sub_24A4645C8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_24A3DA000, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      MEMORY[0x24C5C5D60](v7, -1, -1);
    }

    unsigned char *v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    uint64_t v15 = *(void *)(v0 + 656);
    uint64_t v16 = *(void *)(v0 + 592);
    uint64_t v17 = *(void *)(v0 + 584);
    uint64_t v18 = *(void *)(v0 + 576);
    char v19 = *(unsigned char *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(unsigned char *)(v0 + 272) = v19;
    *(void *)(v0 + 280) = v18;
    *(void *)(v0 + 288) = v17;
    *(void *)(v0 + 296) = v2;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = 0;
    *(void *)(v0 + 320) = v3;
    *(unsigned char *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24A3F20A4();
    sub_24A4255C8();
    sub_24A463CA8();
    swift_bridgeObjectRelease();
    v41(v15, v16);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    unint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v20;
    *unint64_t v20 = v0;
    v20[1] = sub_24A428B5C;
    uint64_t v21 = *(void *)(v0 + 632);
    return sub_24A4515CC(0, v2, v21);
  }
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v2;
  *(void *)(v0 + 792) = v3;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v9 = (void *)swift_allocObject();
    _OWORD v9[3] = 0;
    void v9[4] = 0;
    void v9[2] = v2;
    swift_beginAccess();
    uint64_t v10 = *v8;
    *uint64_t v8 = (uint64_t)&unk_269793E68;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_24A3F1178(v10);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v11 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_24A4648F8();
      *(void *)(v0 + 824) = v12;
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v13 = *(void *)(v0 + 816);
        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          uint64_t v14 = *(void **)(v13 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v14;
        *(unsigned char *)(v0 + 77) = *v1;
        uint64_t v23 = *v14 + 160;
        *(void *)(v0 + 848) = *(void *)v23;
        *(void *)(v0 + 856) = v23 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return MEMORY[0x270FA2498](sub_24A42947C, v14, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v44 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v45, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)qword_26979A7A8;
  char v25 = (void *)sub_24A464248();
  id v26 = objc_msgSend(v24, sel_valueForKey_, v25);

  if (v26)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v45, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v45, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v45, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_24A463FF8();
  os_log_type_t v28 = sub_24A4645D8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v45[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v31 = sub_24A42BF88(v44);
    *(void *)(v0 + 488) = sub_24A3E0E30(v31, v32, v45);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v27, v28, "started CloudTelemetryService%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v30, -1, -1);
    MEMORY[0x24C5C5D60](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v33 = *(void *)(v0 + 808);
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v34 = *(void *)(v0 + 584);
  uint64_t v38 = *(void *)(v0 + 576);
  uint64_t v39 = *(void *)(v0 + 784);
  char v37 = *(unsigned char *)(v0 + 76);
  uint64_t v35 = *(void *)(v0 + 568);
  char v43 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v35 = v37;
  *(void *)(v35 + 8) = v38;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v40;
  *(void *)(v35 + 32) = v39;
  *(void *)(v35 + 40) = v33;
  *(void *)(v35 + 48) = v42;
  *(unsigned char *)(v35 + 56) = v43;
  char v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_24A428B5C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 768) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_24A42B4E4;
  }
  else
  {
    *(void *)(v4 + 776) = a1;
    char v5 = sub_24A428CAC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A428CAC()
{
  uint64_t v40 = v0;
  v39[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 776);
  if (*(unsigned char *)(v0 + 888) == 1)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 752);
    uint64_t v4 = *(void *)(v0 + 712);
    if (!v1)
    {
      swift_release();
      uint64_t v15 = swift_release();
      __break(1u);
      return MEMORY[0x270FA2498](v15, v16, v17);
    }
    type metadata accessor for SubmissionCoordinator();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v2 = sub_24A3DD0F4(v1, v3, v4);
  }
  uint64_t v5 = *(void *)(v0 + 752);
  uint64_t v6 = *(void *)(v0 + 712);
  *(void *)(v0 + 808) = v2;
  *(void *)(v0 + 800) = v5;
  *(void *)(v0 + 792) = v6;
  *(void *)(v0 + 784) = v1;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v7 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v8 = (void *)swift_allocObject();
    long long v8[2] = v5;
    v8[3] = v1;
    v8[4] = v2;
    swift_beginAccess();
    uint64_t v9 = *v7;
    *uint64_t v7 = (uint64_t)&unk_269793E68;
    v7[1] = (uint64_t)v8;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_24A3F1178(v9);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v10 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_24A4648F8();
      *(void *)(v0 + 824) = v11;
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v11;
      if (v11)
      {
LABEL_10:
        if (v11 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v12 = *(void *)(v0 + 816);
        if ((v12 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          uint64_t v13 = *(void **)(v12 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v13;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v14 = *v13 + 160;
        *(void *)(v0 + 848) = *(void *)v14;
        *(void *)(v0 + 856) = v14 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        uint64_t v15 = (uint64_t)sub_24A42947C;
        uint64_t v16 = v13;
        uint64_t v17 = 0;
        return MEMORY[0x270FA2498](v15, v16, v17);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v38 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v39, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v18 = (id)qword_26979A7A8;
  char v19 = (void *)sub_24A464248();
  id v20 = objc_msgSend(v18, sel_valueForKey_, v19);

  if (v20)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v39, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v39, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v39, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24A463FF8();
  os_log_type_t v22 = sub_24A4645D8();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v39[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v25 = sub_24A42BF88(v38);
    *(void *)(v0 + 488) = sub_24A3E0E30(v25, v26, v39);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v21, v22, "started CloudTelemetryService%s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v24, -1, -1);
    MEMORY[0x24C5C5D60](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v27 = *(void *)(v0 + 808);
  uint64_t v35 = *(void *)(v0 + 800);
  uint64_t v36 = *(void *)(v0 + 792);
  uint64_t v28 = *(void *)(v0 + 584);
  uint64_t v33 = *(void *)(v0 + 576);
  uint64_t v34 = *(void *)(v0 + 784);
  char v32 = *(unsigned char *)(v0 + 76);
  uint64_t v29 = *(void *)(v0 + 568);
  char v37 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v29 = v32;
  *(void *)(v29 + 8) = v33;
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = v35;
  *(void *)(v29 + 32) = v34;
  *(void *)(v29 + 40) = v27;
  *(void *)(v29 + 48) = v36;
  *(unsigned char *)(v29 + 56) = v37;
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_24A42947C()
{
  (*(void (**)(void))(v0 + 848))(*(unsigned __int8 *)(v0 + 77));
  return MEMORY[0x270FA2498](sub_24A42951C, 0, 0);
}

uint64_t sub_24A42951C()
{
  uint64_t v29 = v0;
  _OWORD v28[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 832);
  uint64_t v2 = *(void *)(v0 + 824);
  swift_release();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v27 = MEMORY[0x263F8EE88];
    if (qword_269798E08 != -1) {
      swift_once();
    }
    if (byte_26979A7B0 == 1)
    {
      sub_24A40501C(v28, 0xD000000000000011, 0x800000024A46BC10);
      swift_bridgeObjectRelease();
    }
    if (qword_269798E00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)qword_26979A7A8;
    uint64_t v4 = (void *)sub_24A464248();
    id v5 = objc_msgSend(v3, sel_valueForKey_, v4);

    if (v5)
    {
      sub_24A464718();
      swift_unknownObjectRelease();
      sub_24A3E2068(v0 + 336, &qword_269793C60);
      sub_24A40501C(v28, 0xD000000000000013, 0x800000024A46BBF0);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 336) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
      sub_24A3E2068(v0 + 336, &qword_269793C60);
    }
    if (qword_269798E10 != -1) {
      swift_once();
    }
    if (byte_26979A7B1 == 1)
    {
      sub_24A40501C(v28, 0x6976654474736574, 0xEA00000000006563);
      swift_bridgeObjectRelease();
    }
    if (qword_269798E18 != -1) {
      swift_once();
    }
    if (byte_26979A7B2 == 1)
    {
      sub_24A40501C(v28, 0xD000000000000014, 0x800000024A46BBD0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24A463FF8();
    os_log_type_t v10 = sub_24A4645D8();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v28[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_24A42BF88(v27);
      *(void *)(v0 + 488) = sub_24A3E0E30(v13, v14, v28);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v9, v10, "started CloudTelemetryService%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v12, -1, -1);
      MEMORY[0x24C5C5D60](v11, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_release();
    swift_release();
    uint64_t v15 = *(void *)(v0 + 808);
    uint64_t v24 = *(void *)(v0 + 800);
    uint64_t v25 = *(void *)(v0 + 792);
    uint64_t v16 = *(void *)(v0 + 584);
    uint64_t v22 = *(void *)(v0 + 576);
    uint64_t v23 = *(void *)(v0 + 784);
    char v21 = *(unsigned char *)(v0 + 76);
    uint64_t v17 = *(void *)(v0 + 568);
    char v26 = *(unsigned char *)(v0 + 888);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(unsigned char *)uint64_t v17 = v21;
    *(void *)(v17 + 8) = v22;
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v24;
    *(void *)(v17 + 32) = v23;
    *(void *)(v17 + 40) = v15;
    *(void *)(v17 + 48) = v25;
    *(unsigned char *)(v17 + 56) = v26;
    id v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 832) + 1;
    *(void *)(v0 + 832) = v6;
    uint64_t v7 = *(void *)(v0 + 816);
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = (void *)MEMORY[0x24C5C4FA0]();
    }
    else
    {
      uint64_t v8 = *(void **)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *(void *)(v0 + 840) = v8;
    *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
    uint64_t v20 = *v8 + 160;
    *(void *)(v0 + 848) = *(void *)v20;
    *(void *)(v0 + 856) = v20 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
    return MEMORY[0x270FA2498](sub_24A42947C, v8, 0);
  }
}

uint64_t sub_24A429B64()
{
  *(void *)(v0 + 712) = 0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  uint64_t v5 = *(void *)(v0 + 576);
  char v6 = *(unsigned char *)(v0 + 76);
  *(void *)(v0 + 720) = type metadata accessor for DiskCache();
  *(unsigned char *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(unsigned char *)(v0 + 136) = 0;
  swift_bridgeObjectRetain();
  sub_24A3F20A4();
  sub_24A4255C8();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24A4280DC;
  uint64_t v8 = *(void *)(v0 + 640);
  return DiskCache.__allocating_init(rootCacheURL:)(v8);
}

uint64_t sub_24A429CE4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 872) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24A42AD34;
  }
  else
  {
    *(void *)(v4 + 880) = a1;
    uint64_t v5 = sub_24A429E34;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24A429E34()
{
  uint64_t v46 = v0;
  v45[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = (unsigned char *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 880);

  *(void *)(v0 + 752) = v2;
  uint64_t v3 = *(void *)(v0 + 712);
  swift_retain();
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    uint64_t v5 = sub_24A463FF8();
    os_log_type_t v6 = sub_24A4645C8();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_24A3DA000, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      MEMORY[0x24C5C5D60](v7, -1, -1);
    }

    unsigned char *v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    uint64_t v15 = *(void *)(v0 + 656);
    uint64_t v16 = *(void *)(v0 + 592);
    uint64_t v17 = *(void *)(v0 + 584);
    uint64_t v18 = *(void *)(v0 + 576);
    char v19 = *(unsigned char *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(unsigned char *)(v0 + 272) = v19;
    *(void *)(v0 + 280) = v18;
    *(void *)(v0 + 288) = v17;
    *(void *)(v0 + 296) = v2;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = 0;
    *(void *)(v0 + 320) = v3;
    *(unsigned char *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24A3F20A4();
    sub_24A4255C8();
    sub_24A463CA8();
    swift_bridgeObjectRelease();
    v41(v15, v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_24A428B5C;
    uint64_t v21 = *(void *)(v0 + 632);
    return sub_24A4515CC(0, v2, v21);
  }
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v2;
  *(void *)(v0 + 792) = v3;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v9 = (void *)swift_allocObject();
    _OWORD v9[3] = 0;
    void v9[4] = 0;
    void v9[2] = v2;
    swift_beginAccess();
    uint64_t v10 = *v8;
    *uint64_t v8 = (uint64_t)&unk_269793E68;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_24A3F1178(v10);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v11 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_24A4648F8();
      *(void *)(v0 + 824) = v12;
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v13 = *(void *)(v0 + 816);
        if ((v13 & 0xC000000000000001) != 0)
        {
          unint64_t v14 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          unint64_t v14 = *(void **)(v13 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v14;
        *(unsigned char *)(v0 + 77) = *v1;
        uint64_t v23 = *v14 + 160;
        *(void *)(v0 + 848) = *(void *)v23;
        *(void *)(v0 + 856) = v23 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return MEMORY[0x270FA2498](sub_24A42947C, v14, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v44 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v45, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)qword_26979A7A8;
  uint64_t v25 = (void *)sub_24A464248();
  id v26 = objc_msgSend(v24, sel_valueForKey_, v25);

  if (v26)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v45, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v45, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v45, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_24A463FF8();
  os_log_type_t v28 = sub_24A4645D8();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v45[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v31 = sub_24A42BF88(v44);
    *(void *)(v0 + 488) = sub_24A3E0E30(v31, v32, v45);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v27, v28, "started CloudTelemetryService%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v30, -1, -1);
    MEMORY[0x24C5C5D60](v29, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v40 = *(void *)(v0 + 792);
  uint64_t v42 = *(void *)(v0 + 808);
  uint64_t v38 = *(void *)(v0 + 784);
  uint64_t v39 = *(void *)(v0 + 800);
  uint64_t v33 = *(void *)(v0 + 584);
  uint64_t v37 = *(void *)(v0 + 576);
  char v36 = *(unsigned char *)(v0 + 76);
  uint64_t v34 = *(void *)(v0 + 568);
  char v43 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v34 = v36;
  *(void *)(v34 + 8) = v37;
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = v39;
  *(void *)(v34 + 32) = v38;
  *(void *)(v34 + 40) = v42;
  *(void *)(v34 + 48) = v40;
  *(unsigned char *)(v34 + 56) = v43;
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_24A42A760()
{
  uint64_t v47 = v0;
  v46[1] = *MEMORY[0x263EF8340];
  uint64_t v45 = (char *)(v0 + 888);
  uint64_t v1 = *(void **)(v0 + 736);
  *(void *)(v0 + 496) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
  if (!swift_dynamicCast()
    || (*(unsigned char *)(v0 + 73) = *(unsigned char *)(v0 + 75), *(unsigned char *)(v0 + 74) = 1, sub_24A3F6E0C(), (sub_24A464238() & 1) == 0))
  {
    uint64_t v3 = *(void **)(v0 + 736);
    id v4 = v3;
    id v5 = v3;
    os_log_type_t v6 = sub_24A463FF8();
    os_log_type_t v7 = sub_24A4645B8();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void **)(v0 + 736);
    if (v8)
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v46[0] = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_getErrorValue();
      uint64_t v12 = sub_24A464B38();
      *(void *)(v0 + 512) = sub_24A3E0E30(v12, v13, v46);
      sub_24A4646E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A3DA000, v6, v7, "failed to open database file: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v11, -1, -1);
      MEMORY[0x24C5C5D60](v10, -1, -1);
    }
    else
    {
    }
  }
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v15 = *(void *)(v0 + 656);
  uint64_t v16 = *(void *)(v0 + 624);
  uint64_t v17 = *(void *)(v0 + 616);
  uint64_t v18 = *(void *)(v0 + 592);
  uint64_t v19 = *(void *)(v0 + 584);
  uint64_t v20 = *(void *)(v0 + 576);
  char v21 = *(unsigned char *)(v0 + 76);
  id v44 = objc_msgSend(*(id *)(v0 + 672), sel_defaultManager);
  char v22 = *v45;
  *(unsigned char *)(v0 + 144) = v21;
  *(void *)(v0 + 152) = v20;
  *(void *)(v0 + 160) = v19;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(unsigned char *)(v0 + 200) = v22;
  swift_bridgeObjectRetain();
  sub_24A3F20A4();
  sub_24A4255C8();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  v14(v17, v18);
  swift_bridgeObjectRelease();
  sub_24A463CC8();
  v14(v16, v18);
  uint64_t v23 = (void *)sub_24A463C88();
  v14(v15, v18);
  *(void *)(v0 + 536) = 0;
  LODWORD(v17) = objc_msgSend(v44, sel_removeItemAtURL_error_, v23, v0 + 536);

  id v24 = *(id *)(v0 + 536);
  if (!v17)
  {
    uint64_t v25 = v24;
    id v26 = (void *)sub_24A463C28();

    swift_willThrow();
    id v27 = v26;
    id v28 = v26;
    uint64_t v29 = sub_24A463FF8();
    os_log_type_t v30 = sub_24A4645B8();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v46[0] = v32;
      *(_DWORD *)uint64_t v31 = 136446210;
      swift_getErrorValue();
      uint64_t v33 = sub_24A464B38();
      *(void *)(v0 + 544) = sub_24A3E0E30(v33, v34, v46);
      sub_24A4646E8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24A3DA000, v29, v30, "failed to clear cache directory with error: %{public}s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v32, -1, -1);
      MEMORY[0x24C5C5D60](v31, -1, -1);
    }
    else
    {
    }
  }
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v36 = *(void *)(v0 + 656);
  uint64_t v37 = *(void *)(v0 + 592);
  uint64_t v38 = *(void *)(v0 + 584);
  uint64_t v39 = *(void *)(v0 + 576);
  *(unsigned char *)(v0 + 208) = *(unsigned char *)(v0 + 76);
  char v40 = *v45;
  *(void *)(v0 + 216) = v39;
  *(void *)(v0 + 224) = v38;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(unsigned char *)(v0 + 264) = v40;
  swift_bridgeObjectRetain();
  sub_24A3F20A4();
  sub_24A4255C8();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  v35(v36, v37);
  swift_bridgeObjectRelease();
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_24A429CE4;
  uint64_t v42 = *(void *)(v0 + 608);
  return DiskCache.__allocating_init(rootCacheURL:)(v42);
}

uint64_t sub_24A42AD34()
{
  uint64_t v36 = v0;
  _OWORD v35[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 872);

  *(void *)(v0 + 752) = 0;
  uint64_t v2 = *(void *)(v0 + 712);
  uint64_t v3 = sub_24A463FF8();
  os_log_type_t v4 = sub_24A4645C8();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_24A3DA000, v3, v4, "reporting disabled due to startup failure.", v5, 2u);
    MEMORY[0x24C5C5D60](v5, -1, -1);
  }

  *(unsigned char *)(v0 + 888) = 1;
  *(_OWORD *)(v0 + 800) = 0u;
  *(void *)(v0 + 792) = v2;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    os_log_type_t v6 = XPCActivity.makeHandler.unsafeMutableAddressor();
    os_log_type_t v7 = (void *)swift_allocObject();
    v7[3] = 0;
    v7[4] = 0;
    v7[2] = 0;
    swift_beginAccess();
    uint64_t v8 = *v6;
    uint64_t *v6 = (uint64_t)&unk_269793E68;
    v6[1] = (uint64_t)v7;
    sub_24A3F1178(v8);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v9 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_24A4648F8();
      *(void *)(v0 + 824) = v10;
      if (v10) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v10;
      if (v10)
      {
LABEL_8:
        if (v10 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v11 = *(void *)(v0 + 816);
        if ((v11 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          uint64_t v12 = *(void **)(v11 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v12;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v13 = *v12 + 160;
        *(void *)(v0 + 848) = *(void *)v13;
        *(void *)(v0 + 856) = v13 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return MEMORY[0x270FA2498](sub_24A42947C, v12, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v34 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v35, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v14 = (id)qword_26979A7A8;
  uint64_t v15 = (void *)sub_24A464248();
  id v16 = objc_msgSend(v14, sel_valueForKey_, v15);

  if (v16)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v35, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v35, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v35, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24A463FF8();
  os_log_type_t v18 = sub_24A4645D8();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v35[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v21 = sub_24A42BF88(v34);
    *(void *)(v0 + 488) = sub_24A3E0E30(v21, v22, v35);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v17, v18, "started CloudTelemetryService%s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v20, -1, -1);
    MEMORY[0x24C5C5D60](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v31 = *(void *)(v0 + 792);
  uint64_t v32 = *(void *)(v0 + 808);
  uint64_t v29 = *(void *)(v0 + 784);
  uint64_t v30 = *(void *)(v0 + 800);
  uint64_t v23 = *(void *)(v0 + 584);
  uint64_t v28 = *(void *)(v0 + 576);
  char v27 = *(unsigned char *)(v0 + 76);
  uint64_t v24 = *(void *)(v0 + 568);
  char v33 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v24 = v27;
  *(void *)(v24 + 8) = v28;
  *(void *)(v24 + 16) = v23;
  *(void *)(v24 + 24) = v30;
  *(void *)(v24 + 32) = v29;
  *(void *)(v24 + 40) = v32;
  *(void *)(v24 + 48) = v31;
  *(unsigned char *)(v24 + 56) = v33;
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_24A42B4E4()
{
  uint64_t v44 = v0;
  v43[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 768);
  id v2 = v1;
  id v3 = v1;
  os_log_type_t v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645C8();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = *(void **)(v0 + 768);
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v43[0] = v8;
    *(_DWORD *)os_log_type_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    *(void *)(v0 + 520) = sub_24A3E0E30(v9, v10, v43);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v4, v5, "reporting disabled due to failure setting up session coordinator. %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 768);
  }
  *(unsigned char *)(v0 + 888) = 1;
  uint64_t v12 = *(void *)(v0 + 752);
  uint64_t v13 = *(void *)(v0 + 712);
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v12;
  *(void *)(v0 + 792) = v13;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    id v14 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v15 = (void *)swift_allocObject();
    v15[3] = 0;
    v15[4] = 0;
    void v15[2] = v12;
    swift_beginAccess();
    uint64_t v16 = *v14;
    *id v14 = (uint64_t)&unk_269793E68;
    v14[1] = (uint64_t)v15;
    swift_retain_n();
    sub_24A3F1178(v16);
    if (qword_269798E28 != -1) {
      swift_once();
    }
    unint64_t v17 = qword_26979A7C0;
    *(void *)(v0 + 816) = qword_26979A7C0;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24A4648F8();
      *(void *)(v0 + 824) = v18;
      if (v18) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v18;
      if (v18)
      {
LABEL_9:
        if (v18 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v19 = *(void *)(v0 + 816);
        if ((v19 & 0xC000000000000001) != 0)
        {
          uint64_t v20 = (void *)MEMORY[0x24C5C4FA0](0);
        }
        else
        {
          uint64_t v20 = *(void **)(v19 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v20;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v21 = *v20 + 160;
        *(void *)(v0 + 848) = *(void *)v21;
        *(void *)(v0 + 856) = v21 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return MEMORY[0x270FA2498](sub_24A42947C, v20, 0);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v42 = MEMORY[0x263F8EE88];
  if (qword_269798E08 != -1) {
    swift_once();
  }
  if (byte_26979A7B0 == 1)
  {
    sub_24A40501C(v43, 0xD000000000000011, 0x800000024A46BC10);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v22 = (id)qword_26979A7A8;
  uint64_t v23 = (void *)sub_24A464248();
  id v24 = objc_msgSend(v22, sel_valueForKey_, v23);

  if (v24)
  {
    sub_24A464718();
    swift_unknownObjectRelease();
    sub_24A3E2068(v0 + 336, &qword_269793C60);
    sub_24A40501C(v43, 0xD000000000000013, 0x800000024A46BBF0);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_24A3E2068(v0 + 336, &qword_269793C60);
  }
  if (qword_269798E10 != -1) {
    swift_once();
  }
  if (byte_26979A7B1 == 1)
  {
    sub_24A40501C(v43, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_269798E18 != -1) {
    swift_once();
  }
  if (byte_26979A7B2 == 1)
  {
    sub_24A40501C(v43, 0xD000000000000014, 0x800000024A46BBD0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24A463FF8();
  os_log_type_t v26 = sub_24A4645D8();
  if (os_log_type_enabled(v25, v26))
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v43[0] = v28;
    *(_DWORD *)char v27 = 136315138;
    uint64_t v29 = sub_24A42BF88(v42);
    *(void *)(v0 + 488) = sub_24A3E0E30(v29, v30, v43);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v25, v26, "started CloudTelemetryService%s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v28, -1, -1);
    MEMORY[0x24C5C5D60](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v39 = *(void *)(v0 + 792);
  uint64_t v40 = *(void *)(v0 + 808);
  uint64_t v37 = *(void *)(v0 + 784);
  uint64_t v38 = *(void *)(v0 + 800);
  uint64_t v31 = *(void *)(v0 + 584);
  uint64_t v36 = *(void *)(v0 + 576);
  char v35 = *(unsigned char *)(v0 + 76);
  uint64_t v32 = *(void *)(v0 + 568);
  char v41 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v32 = v35;
  *(void *)(v32 + 8) = v36;
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v38;
  *(void *)(v32 + 32) = v37;
  *(void *)(v32 + 40) = v40;
  *(void *)(v32 + 48) = v39;
  *(unsigned char *)(v32 + 56) = v41;
  char v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_24A42BD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[2] = a1;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_24A42BDB4, 0, 0);
}

uint64_t sub_24A42BDB4()
{
  uint64_t v1 = v0[2];
  if (type metadata accessor for SubmitEventsActivity() == v1)
  {
    uint64_t v4 = v0[4];
    uint64_t v3 = v0[5];
    uint64_t v5 = v0[3];
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v6 = (uint64_t)sub_24A3DD0F4(v5, v4, v3);
    os_log_type_t v7 = (unint64_t *)&unk_269793E80;
    uint64_t v8 = type metadata accessor for SubmitEventsActivity;
  }
  else if (type metadata accessor for CacheCleanupActivity() == v1)
  {
    uint64_t v9 = swift_retain();
    uint64_t v6 = sub_24A41E7A0(v9);
    os_log_type_t v7 = (unint64_t *)&unk_269793E90;
    uint64_t v8 = type metadata accessor for CacheCleanupActivity;
  }
  else
  {
    if (type metadata accessor for PostInstallActivity() != v1) {
      return sub_24A4648E8();
    }
    uint64_t v6 = sub_24A3F7E54();
    os_log_type_t v7 = (unint64_t *)&unk_269793E88;
    uint64_t v8 = type metadata accessor for PostInstallActivity;
  }
  uint64_t v10 = sub_24A42C1CC(v7, (void (*)(uint64_t))v8);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v6, v10);
}

uint64_t sub_24A42BF88(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E98);
  sub_24A42C884();
  sub_24A3F9174();
  sub_24A4643F8();
  swift_bridgeObjectRelease();
  sub_24A464358();
  swift_bridgeObjectRelease();
  sub_24A464358();
  return 0x6769666E6F632820;
}

uint64_t sub_24A42C064()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793E78);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24A468390;
  type metadata accessor for XPCActivity();
  uint64_t v1 = type metadata accessor for SubmitEventsActivity();
  uint64_t v2 = sub_24A42C1CC(&qword_269793E80, (void (*)(uint64_t))type metadata accessor for SubmitEventsActivity);
  *(void *)(v0 + 32) = XPCActivity.__allocating_init(handlerType:)(v1, v2);
  uint64_t v3 = type metadata accessor for PostInstallActivity();
  uint64_t v4 = sub_24A42C1CC(&qword_269793E88, (void (*)(uint64_t))type metadata accessor for PostInstallActivity);
  *(void *)(v0 + 40) = XPCActivity.__allocating_init(handlerType:)(v3, v4);
  uint64_t v5 = type metadata accessor for CacheCleanupActivity();
  uint64_t v6 = sub_24A42C1CC(&qword_269793E90, (void (*)(uint64_t))type metadata accessor for CacheCleanupActivity);
  *(void *)(v0 + 48) = XPCActivity.__allocating_init(handlerType:)(v5, v6);
  uint64_t result = sub_24A464448();
  qword_26979A7C0 = v0;
  return result;
}

uint64_t sub_24A42C1CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A42C214()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A42C25C(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(void *)(v5 + 8) = sub_24A42C324;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24A42BDB4, 0, 0);
}

uint64_t sub_24A42C324(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

unint64_t sub_24A42C42C()
{
  unint64_t result = qword_269793E70;
  if (!qword_269793E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793E70);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A42C54CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Mode()
{
  return &type metadata for Mode;
}

uint64_t destroy for Daemon()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Daemon(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Daemon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Daemon()
{
  return &type metadata for Daemon;
}

unint64_t sub_24A42C884()
{
  unint64_t result = qword_269793EA0;
  if (!qword_269793EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793E98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793EA0);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

unsigned char *sub_24A42C8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = a3[2];
  uint64_t v9 = a3[3];
  char v10 = *((unsigned char *)a3 + 32);
  char v11 = *((unsigned char *)a3 + 33);
  uint64_t v13 = a3[5];
  uint64_t v12 = a3[6];
  id v14 = sub_24A42508C();
  unint64_t result = (unsigned char *)swift_beginAccess();
  uint64_t v16 = 0;
  if (*v14 == 1)
  {
    unint64_t result = sub_24A4253EC();
    uint64_t v16 = 5;
    if (!*result) {
      uint64_t v16 = 1;
    }
  }
  *(void *)a5 = v16;
  *(void *)(a5 + 8) = v6;
  *(void *)(a5 + 16) = v7;
  *(void *)(a5 + 24) = v8;
  *(void *)(a5 + 32) = v9;
  *(unsigned char *)(a5 + 40) = v10 & 1;
  *(unsigned char *)(a5 + 41) = v11 & 1;
  *(void *)(a5 + 48) = v13;
  *(void *)(a5 + 56) = v12;
  *(unsigned char *)(a5 + 64) = a4 & 1;
  *(void *)(a5 + 72) = a1;
  *(void *)(a5 + 80) = a2;
  return result;
}

unint64_t sub_24A42C9D0()
{
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  int v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (uint64_t *)((char *)&v23 - v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793EB8);
  uint64_t v7 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269793910) - 8);
  uint64_t v8 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A468450;
  char v11 = (void *)(v10 + v9);
  uint64_t v12 = v7[14];
  *char v11 = 0xD00000000000001BLL;
  v11[1] = 0x800000024A46BC80;
  long long v13 = *(_OWORD *)(v0 + 24);
  long long v25 = *(_OWORD *)(v0 + 8);
  long long v26 = v13;
  long long v27 = *(_OWORD *)(v0 + 40);
  uint64_t v28 = *(void *)(v0 + 56);
  long long v30 = v13;
  *(_OWORD *)((char *)v11 + v12) = v13;
  swift_storeEnumTagMultiPayload();
  id v14 = (void *)((char *)v11 + v8);
  uint64_t v15 = (void *)((char *)v11 + v8 + v7[14]);
  *id v14 = 0xD00000000000001FLL;
  v14[1] = 0x800000024A46BCA0;
  void *v15 = *(void *)v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (void *)((char *)v11 + 2 * v8);
  unint64_t v17 = (_OWORD *)((char *)v16 + v7[14]);
  *uint64_t v16 = 0xD000000000000017;
  v16[1] = 0x800000024A46BCC0;
  long long v29 = v25;
  _OWORD *v17 = v25;
  swift_storeEnumTagMultiPayload();
  sub_24A3F7038((uint64_t)&v30);
  sub_24A3F7038((uint64_t)&v29);
  unint64_t v18 = sub_24A3ECFD8(v10);
  if (*(unsigned char *)(v0 + 64))
  {
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    void *v6 = v19;
    v6[1] = v20;
    swift_storeEnumTagMultiPayload();
    sub_24A3EF5C0((uint64_t)v6, (uint64_t)v4);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v18;
    sub_24A3F008C((uint64_t)v4, 0xD000000000000010, 0x800000024A46BCE0, isUniquelyReferenced_nonNull_native);
    unint64_t v18 = v24;
    swift_bridgeObjectRelease();
  }
  return v18;
}

void sub_24A42CC84()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (!v0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v1 = v0;
  id v2 = (id)MobileGestalt_copy_deviceName_obj();
  if (!v2)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_24A464278();
  uint64_t v6 = v5;

  id v7 = (id)MobileGestalt_copy_marketingProductName_obj();
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_24A464278();
  uint64_t v11 = v10;

  id v12 = (id)MobileGestalt_copy_productType_obj();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v13 = v12;
  uint64_t v14 = sub_24A464278();
  uint64_t v16 = v15;

  id v17 = (id)MobileGestalt_copy_productVersion_obj();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v18 = v17;
  uint64_t v40 = sub_24A464278();
  uint64_t v20 = v19;

  id v21 = (id)MobileGestalt_copy_buildVersion_obj();
  if (!v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v22 = v21;
  uint64_t v36 = sub_24A464278();
  uint64_t v37 = v23;

  unint64_t v24 = sub_24A42508C();
  swift_beginAccess();
  uint64_t v38 = v20;
  uint64_t v39 = v16;
  uint64_t v25 = v14;
  uint64_t v26 = v11;
  if (*v24 != 1)
  {
    uint64_t v29 = v4;
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
    goto LABEL_11;
  }
  id v27 = (id)MobileGestalt_copy_serialNumber_obj();
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = v4;
    uint64_t v30 = sub_24A464278();
    unint64_t v32 = v31;

LABEL_11:
    uint64_t v33 = _s19CloudTelemetryTools21AllEventFieldProviderV17getProjectVersionSSyFZ_0();
    uint64_t v35 = v34;

    qword_269798F38 = v29;
    qword_269798F40 = v6;
    qword_269798F48 = v9;
    qword_269798F50 = v26;
    qword_269798F58 = v25;
    qword_269798F60 = v39;
    qword_269798F68 = v40;
    qword_269798F70 = v38;
    qword_269798F78 = v36;
    qword_269798F80 = v37;
    qword_269798F88 = v33;
    qword_269798F90 = v35;
    qword_269798F98 = v30;
    qword_269798FA0 = v32;
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_24A42CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  uint64_t v7 = sub_24A463E78();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v8 = sub_24A463F88();
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A42CFDC, 0, 0);
}

uint64_t sub_24A42CFDC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 48);
  uint64_t v21 = v1[1];
  uint64_t v22 = *v1;
  uint64_t v19 = v1[3];
  uint64_t v20 = v1[2];
  *(unsigned char *)(v0 + 136) = *((unsigned char *)v1 + 32);
  *(unsigned char *)(v0 + 144) = *((unsigned char *)v1 + 33);
  uint64_t v17 = v1[6];
  uint64_t v18 = v1[5];
  id v2 = sub_24A42508C();
  swift_beginAccess();
  uint64_t v3 = 0;
  if (*v2 == 1)
  {
    if (*sub_24A4253EC()) {
      uint64_t v3 = 5;
    }
    else {
      uint64_t v3 = 1;
    }
  }
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 40);
  sub_24A463F78();
  sub_24A463E68();
  uint64_t v11 = sub_24A463F68();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  LOBYTE(v6) = *(unsigned char *)(v0 + 136);
  LOBYTE(v8) = *(unsigned char *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = v11;
  *(_OWORD *)(v10 + 16) = v15;
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v16;
  *(void *)(v10 + 48) = v22;
  *(void *)(v10 + 56) = v21;
  *(void *)(v10 + 64) = v20;
  *(void *)(v10 + 72) = v19;
  *(unsigned char *)(v10 + 80) = v6;
  *(unsigned char *)(v10 + 81) = v8;
  *(void *)(v10 + 88) = v18;
  *(void *)(v10 + 96) = v17;
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

unint64_t sub_24A42D1A4()
{
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v48 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v47 = (void **)((char *)&v47 - v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793EB8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793910);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24A468460;
  uint64_t v9 = (void *)(v8 + v7);
  uint64_t v10 = (_OWORD *)((char *)v9 + *(int *)(v5 + 48));
  *uint64_t v9 = 0x7265646E65735FLL;
  v9[1] = 0xE700000000000000;
  long long v11 = *(_OWORD *)(v0 + 64);
  long long v52 = *(_OWORD *)(v0 + 48);
  long long v53 = v11;
  long long v54 = *(_OWORD *)(v0 + 80);
  uint64_t v55 = *(void *)(v0 + 96);
  long long v57 = v52;
  _OWORD *v10 = v52;
  swift_storeEnumTagMultiPayload();
  id v12 = (void *)((char *)v9 + v6);
  long long v13 = (_OWORD *)((char *)v9 + v6 + *(int *)(v5 + 48));
  void *v12 = 0x7954746E6576655FLL;
  v12[1] = 0xEA00000000006570;
  long long v56 = v53;
  *long long v13 = v53;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)((char *)v9 + 2 * v6);
  long long v15 = (_OWORD *)((char *)v14 + *(int *)(v5 + 48));
  *uint64_t v14 = 0x6E6F69737365735FLL;
  v14[1] = 0xEA00000000004449;
  long long v51 = *(_OWORD *)(v0 + 16);
  _OWORD *v15 = v51;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (void *)((char *)v9 + 3 * v6);
  uint64_t v17 = (void *)((char *)v16 + *(int *)(v5 + 48));
  *uint64_t v16 = 0x616E7265746E695FLL;
  v16[1] = 0xE90000000000006CLL;
  void *v17 = *(void *)v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (void *)((char *)v9 + 4 * v6);
  uint64_t v19 = (void *)((char *)v18 + *(int *)(v5 + 48));
  *uint64_t v18 = 0x6E6F7A656D69745FLL;
  v18[1] = 0xEF74657366664F65;
  *uint64_t v19 = *(void *)(v0 + 8);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (void *)((char *)v9 + 5 * v6);
  uint64_t v21 = (_OWORD *)((char *)v20 + *(int *)(v5 + 48));
  *uint64_t v20 = 0x6449746E65696C63;
  v20[1] = 0xE800000000000000;
  long long v50 = *(_OWORD *)(v0 + 32);
  *uint64_t v21 = v50;
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (char *)v9 + 6 * v6;
  uint64_t v23 = &v22[*(int *)(v5 + 48)];
  strcpy(v22, "_productFamily");
  v22[15] = -18;
  sub_24A3F7038((uint64_t)&v57);
  sub_24A3F7038((uint64_t)&v56);
  sub_24A3F7038((uint64_t)&v51);
  sub_24A3F7038((uint64_t)&v50);
  if (qword_269798F30 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_269798F40;
  *(void *)uint64_t v23 = qword_269798F38;
  *((void *)v23 + 1) = v24;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (void *)((char *)v9 + 7 * v6);
  uint64_t v26 = (void *)((char *)v25 + *(int *)(v5 + 48));
  void *v25 = 0x656D614E736F5FLL;
  v25[1] = 0xE700000000000000;
  uint64_t v27 = qword_269798F50;
  *uint64_t v26 = qword_269798F48;
  v26[1] = v27;
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = (void *)((char *)&v9[v6] + *(int *)(v5 + 48));
  strcpy((char *)&v9[v6], "_productModel");
  HIWORD(v9[v6 + 1]) = -4864;
  uint64_t v29 = qword_269798F60;
  *uint64_t v28 = qword_269798F58;
  v28[1] = v29;
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (void *)((char *)v9 + 9 * v6);
  unint64_t v31 = (void *)((char *)v30 + *(int *)(v5 + 48));
  *uint64_t v30 = 0x6973726556736F5FLL;
  v30[1] = 0xEA00000000006E6FLL;
  uint64_t v32 = qword_269798F70;
  *unint64_t v31 = qword_269798F68;
  v31[1] = v32;
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = (void *)((char *)v9 + 10 * v6);
  uint64_t v34 = (void *)((char *)v33 + *(int *)(v5 + 48));
  void *v33 = 0x646C6975625FLL;
  v33[1] = 0xE600000000000000;
  uint64_t v35 = qword_269798F80;
  *uint64_t v34 = qword_269798F78;
  v34[1] = v35;
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (void *)((char *)v9 + 11 * v6);
  uint64_t v37 = (void *)((char *)v36 + *(int *)(v5 + 48));
  void *v36 = 0x5674726F7065725FLL;
  v36[1] = 0xEB00000000737265;
  uint64_t v38 = qword_269798F90;
  *uint64_t v37 = qword_269798F88;
  v37[1] = v38;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_24A3ECFD8(v8);
  uint64_t v40 = sub_24A42508C();
  swift_beginAccess();
  if (*v40 == 1)
  {
    uint64_t v41 = qword_269798FA0;
    uint64_t v42 = v47;
    *uint64_t v47 = qword_269798F98;
    v42[1] = v41;
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = (uint64_t)v42;
    uint64_t v44 = v48;
    sub_24A3EF5C0(v43, v48);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v49 = v39;
    sub_24A3F008C(v44, 0x754E6C6169726553, 0xE90000000000006DLL, isUniquelyReferenced_nonNull_native);
    unint64_t v39 = v49;
    swift_bridgeObjectRelease();
  }
  return v39;
}

unint64_t sub_24A42D79C()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793EB8);
  uint64_t v3 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269793910) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24A466020;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = (void *)(v5 + v4 + v3[14]);
  void *v6 = 0x656C61636F4CLL;
  v6[1] = 0xE600000000000000;
  *unint64_t v7 = v2;
  v7[1] = v1;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_24A3ECFD8(v5);
}

unint64_t sub_24A42D8B0(char a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793EB8);
  uint64_t v6 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269793910) - 8);
  uint64_t v7 = *(void *)(*(void *)v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24A466030;
  uint64_t v10 = (void *)(v9 + v8);
  long long v11 = (void *)(v9 + v8 + v6[14]);
  void *v10 = 0x67616265726F7453;
  v10[1] = 0xEF6E6F6973726556;
  *long long v11 = a2;
  v11[1] = a3;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  id v12 = (void *)((char *)v10 + v7);
  long long v13 = (char *)v10 + v7 + v6[14];
  void *v12 = 0xD000000000000013;
  v12[1] = 0x800000024A46BD00;
  *long long v13 = a1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_24A3ECFD8(v9);
}

unint64_t sub_24A42DA20()
{
  return sub_24A42D8B0(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t _s19CloudTelemetryTools21AllEventFieldProviderV17getProjectVersionSSyFZ_0()
{
  uint64_t v0 = 960051513;
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_infoDictionary);

  if (!v2) {
    return v0;
  }
  uint64_t v3 = sub_24A4641C8();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_24A3E1488(0x656C646E75424643, 0xEF6E6F6973726556), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_24A3E200C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_24A3E2068((uint64_t)&v8, &qword_269793C60);
    return v0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return v0;
}

uint64_t destroy for HTTPHeaderFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPHeaderFieldProvider()
{
  return &type metadata for HTTPHeaderFieldProvider;
}

uint64_t destroy for AllEventFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllEventFieldProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllEventFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllEventFieldProvider()
{
  return &type metadata for AllEventFieldProvider;
}

ValueMetadata *type metadata accessor for StartEventFieldProvider()
{
  return &type metadata for StartEventFieldProvider;
}

uint64_t sub_24A42E1C0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionHierarchyItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionHierarchyItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndEventFieldProvider()
{
  return &type metadata for EndEventFieldProvider;
}

void sub_24A42E318()
{
  qword_26979A7C8 = MEMORY[0x263F8EE88];
}

uint64_t sub_24A42E32C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    long long v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_24A40501C(&v17, v12, v13);
    __n128 result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24A42E4AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_269798FA8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26979A7C8;
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t result = sub_24A42E32C(v7, v6);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

void *sub_24A42E534(uint64_t a1)
{
  return sub_24A4308CC(a1, *(void *)(v1 + 16));
}

uint64_t sub_24A42E550(uint64_t a1)
{
  return sub_24A430E2C(a1, *v1);
}

uint64_t sub_24A42E56C(uint64_t a1)
{
  return sub_24A431180(a1, *v1);
}

uint64_t sub_24A42E588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = a3;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793918);
  MEMORY[0x270FA5388](v97);
  uint64_t v106 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v94 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v82 - v9;
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v92 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v91 = (double *)((char *)&v82 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v90 = (uint64_t)&v82 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v89 = (uint64_t)&v82 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  int v96 = (uint64_t *)((char *)&v82 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v103 = (uint64_t)&v82 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v98 = (uint64_t)&v82 - v25;
  uint64_t v26 = *(void *)(a2 + 56);
  uint64_t v100 = a2 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v101 = (unint64_t)(v27 + 63) >> 6;
  long long v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v105 = a2;
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v93 = (void *)MEMORY[0x263F8EE78];
  uint64_t v88 = a1;
  uint64_t v99 = v12;
  if (v29) {
    goto LABEL_8;
  }
LABEL_35:
  int64_t v56 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v56 < v101)
  {
    unint64_t v57 = *(void *)(v100 + 8 * v56);
    ++v31;
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 1;
    if (v56 + 1 >= v101) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v100 + 8 * v31);
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 2;
    if (v56 + 2 >= v101) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v100 + 8 * v31);
    if (v57)
    {
LABEL_48:
      uint64_t v112 = (v57 - 1) & v57;
      for (unint64_t i = __clz(__rbit64(v57)) + (v31 << 6); ; unint64_t i = __clz(__rbit64(v29)) | (v31 << 6))
      {
        uint64_t v59 = (uint64_t *)(*(void *)(v105 + 48) + 16 * i);
        uint64_t v60 = *v59;
        uint64_t v61 = v59[1];
        uint64_t v62 = *(void *)(a1 + 16);
        uint64_t v63 = *(void *)(v62 + 16);
        uint64_t v104 = v60;
        if (v63)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v64 = sub_24A3E1488(v60, v61);
          if (v65)
          {
            uint64_t v66 = *(void *)(v62 + 56);
            uint64_t v67 = v99;
            sub_24A3E1A98(v66 + *(void *)(v99 + 72) * v64, (uint64_t)v10);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v10, 0, 1, v11);
          }
          else
          {
            (*v107)(v10, 1, 1, v11);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*v107)(v10, 1, 1, v11);
          swift_bridgeObjectRetain();
        }
        if ((*v30)(v10, 1, v11) == 1)
        {
          swift_bridgeObjectRelease();
          sub_24A3E2068((uint64_t)v10, (uint64_t *)&unk_269793540);
          unint64_t v29 = v112;
          if (!v112) {
            goto LABEL_35;
          }
        }
        else
        {
          sub_24A3EF5C0((uint64_t)v10, v98);
          uint64_t v33 = *(void *)(v87 + 16);
          if (v33)
          {
            uint64_t v83 = v10;
            uint64_t v34 = v99;
            uint64_t v35 = v87 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
            swift_bridgeObjectRetain();
            uint64_t v95 = *(void *)(v34 + 72);
            while (2)
            {
              uint64_t v102 = v33;
              int64_t v36 = v31;
              uint64_t v37 = v30;
              uint64_t v38 = v103;
              sub_24A3E1A98(v35, v103);
              unint64_t v39 = (double *)(v106 + *(int *)(v97 + 48));
              uint64_t v40 = v38;
              uint64_t v30 = v37;
              int64_t v31 = v36;
              sub_24A3E1A98(v40, v106);
              sub_24A3E1A98(v98, (uint64_t)v39);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              uint64_t v42 = v96;
              switch(EnumCaseMultiPayload)
              {
                case 0:
                  sub_24A3E1A98(v106, (uint64_t)v96);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_13;
                  }
                  uint64_t v85 = *v42;
                  uint64_t v84 = sub_24A4642E8();
                  uint64_t v46 = v45;
                  uint64_t v86 = v45;
                  swift_bridgeObjectRelease();
                  uint64_t v110 = v84;
                  uint64_t v111 = v46;
                  uint64_t v47 = sub_24A4642E8();
                  uint64_t v49 = v48;
                  swift_bridgeObjectRelease();
                  uint64_t v108 = v47;
                  uint64_t v109 = v49;
                  sub_24A3F9174();
                  char v44 = sub_24A464708();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_26;
                case 1:
                  sub_24A3E1A98(v106, v89);
                  if (swift_getEnumCaseMultiPayload() != 1) {
                    goto LABEL_13;
                  }
                  uint64_t v43 = &v113;
                  goto LABEL_20;
                case 2:
                  sub_24A3E1A98(v106, v90);
                  if (swift_getEnumCaseMultiPayload() != 2) {
                    goto LABEL_13;
                  }
                  uint64_t v43 = &v114;
LABEL_20:
                  char v44 = *(void *)*(v43 - 32) == *(void *)v39;
                  goto LABEL_26;
                case 3:
                  sub_24A3E1A98(v106, (uint64_t)v91);
                  if (swift_getEnumCaseMultiPayload() != 3) {
                    goto LABEL_13;
                  }
                  char v44 = *v91 == *v39;
                  goto LABEL_26;
                case 4:
                  sub_24A3E1A98(v106, (uint64_t)v92);
                  if (swift_getEnumCaseMultiPayload() != 4) {
                    goto LABEL_13;
                  }
                  char v44 = *v92 ^ *(unsigned char *)v39 ^ 1;
LABEL_26:
                  sub_24A410C80(v106);
                  sub_24A410C80(v103);
                  if ((v44 & 1) == 0) {
                    goto LABEL_14;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  a1 = v88;
                  unint64_t v10 = v83;
                  goto LABEL_34;
                default:
LABEL_13:
                  sub_24A3E2068(v106, &qword_269793918);
                  sub_24A410C80(v103);
LABEL_14:
                  v35 += v95;
                  uint64_t v33 = v102 - 1;
                  if (v102 != 1) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v10 = v83;
                  break;
              }
              break;
            }
          }
          long long v50 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v50 = sub_24A3F5D98(0, v50[2] + 1, 1, v50);
          }
          a1 = v88;
          unint64_t v52 = v50[2];
          unint64_t v51 = v50[3];
          uint64_t v93 = v50;
          uint64_t v53 = v104;
          if (v52 >= v51 >> 1)
          {
            uint64_t v93 = sub_24A3F5D98((void *)(v51 > 1), v52 + 1, 1, v93);
            uint64_t v53 = v104;
          }
          long long v54 = v93;
          v93[2] = v52 + 1;
          uint64_t v55 = &v54[2 * v52];
          v55[4] = v53;
          v55[5] = v61;
LABEL_34:
          sub_24A410C80(v98);
          unint64_t v29 = v112;
          if (!v112) {
            goto LABEL_35;
          }
        }
LABEL_8:
        uint64_t v112 = (v29 - 1) & v29;
      }
    }
    int64_t v58 = v56 + 3;
    if (v58 < v101)
    {
      unint64_t v57 = *(void *)(v100 + 8 * v58);
      if (v57)
      {
        int64_t v31 = v58;
        goto LABEL_48;
      }
      while (1)
      {
        int64_t v31 = v58 + 1;
        if (__OFADD__(v58, 1)) {
          break;
        }
        if (v31 >= v101) {
          goto LABEL_54;
        }
        unint64_t v57 = *(void *)(v100 + 8 * v31);
        ++v58;
        if (v57) {
          goto LABEL_48;
        }
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x24A42EF40);
    }
  }
LABEL_54:
  swift_release();
  uint64_t v68 = v93;
  uint64_t v69 = *(void *)(a1 + 16);
  uint64_t v70 = v93[2];
  if (v70)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = v68 + 5;
    do
    {
      uint64_t v74 = *(v71 - 1);
      uint64_t v75 = *v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_24A3E1488(v74, v75);
      char v78 = v77;
      swift_bridgeObjectRelease();
      if (v78)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v110 = v69;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_24A3EF624();
          uint64_t v69 = v110;
        }
        swift_bridgeObjectRelease();
        uint64_t v73 = v94;
        sub_24A3EF5C0(*(void *)(v69 + 56) + *(void *)(v99 + 72) * v76, v94);
        sub_24A3EFE7C(v76, v69);
        swift_bridgeObjectRelease();
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v72 = 1;
        uint64_t v73 = v94;
      }
      v71 += 2;
      (*v107)((char *)v73, v72, 1, v11);
      sub_24A3E2068(v73, (uint64_t *)&unk_269793540);
      swift_bridgeObjectRelease();
      --v70;
    }
    while (v70);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = v88;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v80 + 16) = v69;
  return result;
}

uint64_t sub_24A42EF54(uint64_t a1)
{
  return sub_24A42E588(a1, *v1, v1[1]);
}

uint64_t sub_24A42EF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = a3;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793918);
  MEMORY[0x270FA5388](v96);
  uint64_t v105 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v94 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v81 - v9;
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v93 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v92 = (double *)((char *)&v81 - v16);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v91 = (uint64_t *)((char *)&v81 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v90 = (uint64_t *)((char *)&v81 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v89 = (uint64_t *)((char *)&v81 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v102 = (uint64_t)&v81 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v97 = (uint64_t)&v81 - v25;
  uint64_t v26 = *(void *)(a2 + 56);
  uint64_t v99 = a2 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v100 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v106 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v104 = a2;
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v88 = (void *)MEMORY[0x263F8EE78];
  uint64_t v98 = v12;
  if (v29) {
    goto LABEL_8;
  }
LABEL_35:
  int64_t v56 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v56 < v100)
  {
    unint64_t v57 = *(void *)(v99 + 8 * v56);
    ++v31;
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 1;
    if (v56 + 1 >= v100) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v99 + 8 * v31);
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 2;
    if (v56 + 2 >= v100) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v99 + 8 * v31);
    if (v57)
    {
LABEL_48:
      uint64_t v33 = (v57 - 1) & v57;
      for (unint64_t i = __clz(__rbit64(v57)) + (v31 << 6); ; unint64_t i = v32 | (v31 << 6))
      {
        unint64_t v111 = v33;
        uint64_t v59 = (uint64_t *)(*(void *)(v104 + 48) + 16 * i);
        uint64_t v60 = *v59;
        uint64_t v61 = v59[1];
        uint64_t v62 = *(void *)(a1 + 16);
        uint64_t v63 = *(void *)(v62 + 16);
        uint64_t v103 = v60;
        if (v63)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v64 = sub_24A3E1488(v60, v61);
          if (v65)
          {
            uint64_t v66 = v98;
            sub_24A3E1A98(*(void *)(v62 + 56) + *(void *)(v98 + 72) * v64, (uint64_t)v10);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v10, 0, 1, v11);
          }
          else
          {
            (*v106)(v10, 1, 1, v11);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*v106)(v10, 1, 1, v11);
          swift_bridgeObjectRetain();
        }
        if ((*v30)(v10, 1, v11) == 1)
        {
          swift_bridgeObjectRelease();
          sub_24A3E2068((uint64_t)v10, (uint64_t *)&unk_269793540);
          unint64_t v29 = v111;
          if (!v111) {
            goto LABEL_35;
          }
        }
        else
        {
          sub_24A3EF5C0((uint64_t)v10, v97);
          uint64_t v35 = *(void *)(v87 + 16);
          if (v35)
          {
            uint64_t v82 = v61;
            uint64_t v83 = a1;
            uint64_t v36 = v98;
            uint64_t v37 = v87 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
            swift_bridgeObjectRetain();
            uint64_t v95 = *(void *)(v36 + 72);
            while (2)
            {
              uint64_t v101 = v35;
              uint64_t v38 = v30;
              uint64_t v39 = v102;
              sub_24A3E1A98(v37, v102);
              uint64_t v40 = v39;
              uint64_t v30 = v38;
              uint64_t v41 = (double *)(v105 + *(int *)(v96 + 48));
              sub_24A3E1A98(v40, v105);
              sub_24A3E1A98(v97, (uint64_t)v41);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  sub_24A3E1A98(v105, (uint64_t)v89);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_13;
                  }
                  uint64_t v85 = *v89;
                  uint64_t v84 = sub_24A4642E8();
                  uint64_t v45 = v44;
                  uint64_t v86 = v44;
                  swift_bridgeObjectRelease();
                  uint64_t v109 = v84;
                  uint64_t v110 = v45;
                  uint64_t v46 = sub_24A4642E8();
                  uint64_t v48 = v47;
                  swift_bridgeObjectRelease();
                  uint64_t v107 = v46;
                  uint64_t v108 = v48;
                  sub_24A3F9174();
                  char v43 = sub_24A464708();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_26;
                case 1u:
                  sub_24A3E1A98(v105, (uint64_t)v90);
                  if (swift_getEnumCaseMultiPayload() != 1) {
                    goto LABEL_13;
                  }
                  uint64_t v42 = v90;
                  goto LABEL_20;
                case 2u:
                  sub_24A3E1A98(v105, (uint64_t)v91);
                  if (swift_getEnumCaseMultiPayload() != 2) {
                    goto LABEL_13;
                  }
                  uint64_t v42 = v91;
LABEL_20:
                  char v43 = *v42 == *(void *)v41;
                  goto LABEL_26;
                case 3u:
                  sub_24A3E1A98(v105, (uint64_t)v92);
                  if (swift_getEnumCaseMultiPayload() != 3) {
                    goto LABEL_13;
                  }
                  char v43 = *v92 == *v41;
                  goto LABEL_26;
                case 4u:
                  sub_24A3E1A98(v105, (uint64_t)v93);
                  if (swift_getEnumCaseMultiPayload() != 4) {
                    goto LABEL_13;
                  }
                  char v43 = *v93 ^ *(unsigned char *)v41 ^ 1;
LABEL_26:
                  sub_24A410C80(v105);
                  sub_24A410C80(v102);
                  if ((v43 & 1) == 0) {
                    goto LABEL_14;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v49 = v88;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v88 = sub_24A3F5D98(0, v49[2] + 1, 1, v49);
                  }
                  a1 = v83;
                  unint64_t v51 = v88[2];
                  unint64_t v50 = v88[3];
                  uint64_t v52 = v103;
                  if (v51 >= v50 >> 1) {
                    uint64_t v88 = sub_24A3F5D98((void *)(v50 > 1), v51 + 1, 1, v88);
                  }
                  uint64_t v53 = v88;
                  v88[2] = v51 + 1;
                  long long v54 = &v53[2 * v51];
                  uint64_t v55 = v82;
                  v54[4] = v52;
                  v54[5] = v55;
                  break;
                default:
LABEL_13:
                  sub_24A3E2068(v105, &qword_269793918);
                  sub_24A410C80(v102);
LABEL_14:
                  v37 += v95;
                  uint64_t v35 = v101 - 1;
                  if (v101 != 1) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  a1 = v83;
                  break;
              }
              break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_24A410C80(v97);
          unint64_t v29 = v111;
          if (!v111) {
            goto LABEL_35;
          }
        }
LABEL_8:
        unint64_t v32 = __clz(__rbit64(v29));
        uint64_t v33 = (v29 - 1) & v29;
      }
    }
    int64_t v58 = v56 + 3;
    if (v58 < v100)
    {
      unint64_t v57 = *(void *)(v99 + 8 * v58);
      if (v57)
      {
        int64_t v31 = v58;
        goto LABEL_48;
      }
      while (1)
      {
        int64_t v31 = v58 + 1;
        if (__OFADD__(v58, 1)) {
          break;
        }
        if (v31 >= v100) {
          goto LABEL_54;
        }
        unint64_t v57 = *(void *)(v99 + 8 * v31);
        ++v58;
        if (v57) {
          goto LABEL_48;
        }
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x24A42F94CLL);
    }
  }
LABEL_54:
  swift_release();
  uint64_t v67 = a1;
  uint64_t v68 = *(void *)(a1 + 16);
  uint64_t v69 = v88;
  uint64_t v70 = v88[2];
  if (v70)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = v69 + 5;
    do
    {
      uint64_t v74 = *(v71 - 1);
      uint64_t v75 = *v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_24A3E1488(v74, v75);
      char v78 = v77;
      swift_bridgeObjectRelease();
      if (v78)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v109 = v68;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_24A3EF624();
          uint64_t v68 = v109;
        }
        swift_bridgeObjectRelease();
        uint64_t v73 = v94;
        sub_24A3EF5C0(*(void *)(v68 + 56) + *(void *)(v98 + 72) * v76, v94);
        sub_24A3EFE7C(v76, v68);
        swift_bridgeObjectRelease();
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v72 = 1;
        uint64_t v73 = v94;
      }
      v71 += 2;
      (*v106)((char *)v73, v72, 1, v11);
      sub_24A3E2068(v73, (uint64_t *)&unk_269793540);
      swift_bridgeObjectRelease();
      --v70;
    }
    while (v70);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v67 + 16) = v68;
  return result;
}

uint64_t sub_24A42F960(uint64_t a1)
{
  return sub_24A42EF70(a1, *v1, v1[1]);
}

uint64_t sub_24A42F97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v53 = (uint64_t)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  v48[1] = v3;
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v52 = (uint64_t)v48 - v15;
  sub_24A3E1A98(v16, (uint64_t)v48 - v15);
  uint64_t v17 = *(void *)(a2 + 56);
  uint64_t v54 = a2 + 56;
  v48[0] = a1;
  uint64_t v18 = *(void **)(a1 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v17;
  int64_t v55 = (unint64_t)(v19 + 63) >> 6;
  int64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v50 = v10;
  uint64_t v51 = a2;
  if (v21) {
    goto LABEL_25;
  }
LABEL_8:
  while (2)
  {
    int64_t v23 = v22 + 1;
    if (!__OFADD__(v22, 1))
    {
      if (v23 < v55)
      {
        unint64_t v24 = *(void *)(v54 + 8 * v23);
        ++v22;
        if (v24) {
          goto LABEL_21;
        }
        int64_t v22 = v23 + 1;
        if (v23 + 1 >= v55) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v22);
        if (v24) {
          goto LABEL_21;
        }
        int64_t v22 = v23 + 2;
        if (v23 + 2 >= v55) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v22);
        if (v24)
        {
LABEL_21:
          unint64_t v21 = (v24 - 1) & v24;
          for (unint64_t i = __clz(__rbit64(v24)) + (v22 << 6); ; unint64_t i = v33 | (v22 << 6))
          {
            uint64_t v27 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
            uint64_t v29 = *v27;
            uint64_t v28 = v27[1];
            uint64_t v30 = v18[2];
            swift_bridgeObjectRetain();
            if (!v30) {
              break;
            }
            unint64_t v31 = sub_24A3E1488(v29, v28);
            if ((v32 & 1) == 0) {
              break;
            }
            sub_24A3E1A98(v18[7] + *(void *)(v11 + 72) * v31, (uint64_t)v9);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
            swift_bridgeObjectRelease();
            sub_24A3E2068((uint64_t)v9, (uint64_t *)&unk_269793540);
            if (!v21) {
              goto LABEL_8;
            }
LABEL_25:
            unint64_t v33 = __clz(__rbit64(v21));
            v21 &= v21 - 1;
          }
          (*v56)(v9, 1, 1, v10);
          sub_24A3E2068((uint64_t)v9, (uint64_t *)&unk_269793540);
          sub_24A3E1A98(v52, v53);
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v57 = v18;
          unint64_t v36 = sub_24A3E1488(v29, v28);
          uint64_t v37 = v18[2];
          BOOL v38 = (v35 & 1) == 0;
          uint64_t v39 = v37 + v38;
          if (__OFADD__(v37, v38)) {
            goto LABEL_41;
          }
          if (v18[3] < v39)
          {
            int v49 = v35;
            sub_24A3EEEF8(v39, isUniquelyReferenced_nonNull_native);
            unint64_t v40 = sub_24A3E1488(v29, v28);
            if ((v49 & 1) != (v41 & 1)) {
              goto LABEL_43;
            }
            unint64_t v36 = v40;
            uint64_t v18 = v57;
            if ((v49 & 1) == 0) {
              goto LABEL_33;
            }
LABEL_6:
            sub_24A3F1F50(v53, v18[7] + *(void *)(v11 + 72) * v36);
LABEL_7:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v50;
            a2 = v51;
            if (!v21) {
              continue;
            }
            goto LABEL_25;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v18 = v57;
            if (v35) {
              goto LABEL_6;
            }
          }
          else
          {
            char v46 = v35;
            sub_24A3EF624();
            uint64_t v18 = v57;
            if (v46) {
              goto LABEL_6;
            }
          }
LABEL_33:
          v18[(v36 >> 6) + 8] |= 1 << v36;
          uint64_t v42 = (uint64_t *)(v18[6] + 16 * v36);
          *uint64_t v42 = v29;
          v42[1] = v28;
          sub_24A3EF5C0(v53, v18[7] + *(void *)(v11 + 72) * v36);
          uint64_t v43 = v18[2];
          BOOL v44 = __OFADD__(v43, 1);
          uint64_t v45 = v43 + 1;
          if (v44) {
            goto LABEL_42;
          }
          void v18[2] = v45;
          swift_bridgeObjectRetain();
          goto LABEL_7;
        }
        int64_t v25 = v23 + 3;
        if (v25 < v55)
        {
          unint64_t v24 = *(void *)(v54 + 8 * v25);
          if (v24)
          {
            int64_t v22 = v25;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v22 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_40;
            }
            if (v22 >= v55) {
              break;
            }
            unint64_t v24 = *(void *)(v54 + 8 * v22);
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
      }
LABEL_37:
      swift_release();
      sub_24A410C80(v52);
      uint64_t v47 = v48[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v47 + 16) = v18;
      return swift_bridgeObjectRelease();
    }
    break;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t sub_24A42FE54(uint64_t a1)
{
  return sub_24A42F97C(a1, *v1, v1[1]);
}

uint64_t sub_24A42FE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v62 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (uint64_t *)((char *)&v62 - v17);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  uint64_t v70 = v18;
  sub_24A3E1A98(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v62 - v17);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24A410C80((uint64_t)v19);
  }
  uint64_t v72 = (uint64_t *)v15;
  uint64_t v73 = v8;
  uint64_t v74 = v7;
  uint64_t v65 = *v19;
  uint64_t v66 = v11;
  uint64_t v20 = v19[1];
  uint64_t v68 = v3;
  uint64_t v69 = v20;
  uint64_t v67 = a1;
  unint64_t v21 = *(void **)(a1 + 16);
  uint64_t v22 = a2 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  int64_t v71 = v26;
  while (1)
  {
    while (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        unint64_t v33 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v29);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_24A3E1488(v35, v34);
        if (v37)
        {
          uint64_t v38 = v22;
          uint64_t v39 = a2;
          unint64_t v40 = v21;
          uint64_t v41 = v21[7];
          uint64_t v42 = v72;
          uint64_t v43 = *(void *)(v73 + 72);
          sub_24A3E1A98(v41 + v43 * v36, (uint64_t)v72);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_24A410C80((uint64_t)v42);
            a2 = v39;
            uint64_t v22 = v38;
            int64_t v26 = v71;
            unint64_t v21 = v40;
          }
          else
          {
            uint64_t v44 = v42[1];
            uint64_t v75 = *v42;
            uint64_t v76 = v44;
            sub_24A464358();
            uint64_t v45 = v76;
            uint64_t v46 = (uint64_t)v70;
            *uint64_t v70 = v75;
            *(void *)(v46 + 8) = v45;
            swift_storeEnumTagMultiPayload();
            sub_24A3EF5C0(v46, (uint64_t)v66);
            uint64_t v47 = v40;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            char v77 = v40;
            unint64_t v49 = sub_24A3E1488(v35, v34);
            uint64_t v50 = v47[2];
            BOOL v51 = (v48 & 1) == 0;
            uint64_t v52 = v50 + v51;
            if (__OFADD__(v50, v51)) {
              goto LABEL_44;
            }
            if (v47[3] >= v52)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                int64_t v55 = v77;
                if (v48) {
                  goto LABEL_35;
                }
              }
              else
              {
                int v63 = v48;
                sub_24A3EF624();
                int64_t v55 = v77;
                if (v63) {
                  goto LABEL_35;
                }
              }
            }
            else
            {
              int v63 = v48;
              sub_24A3EEEF8(v52, isUniquelyReferenced_nonNull_native);
              unint64_t v53 = sub_24A3E1488(v35, v34);
              if ((v63 & 1) != (v54 & 1)) {
                goto LABEL_46;
              }
              unint64_t v49 = v53;
              int64_t v55 = v77;
              if (v63)
              {
LABEL_35:
                int64_t v56 = v55;
                sub_24A3F1F50((uint64_t)v66, v55[7] + v49 * v43);
                goto LABEL_39;
              }
            }
            v55[(v49 >> 6) + 8] |= 1 << v49;
            unint64_t v57 = (uint64_t *)(v55[6] + 16 * v49);
            *unint64_t v57 = v35;
            v57[1] = v34;
            sub_24A3EF5C0((uint64_t)v66, v55[7] + v49 * v43);
            uint64_t v58 = v55[2];
            BOOL v59 = __OFADD__(v58, 1);
            uint64_t v60 = v58 + 1;
            if (v59) {
              goto LABEL_45;
            }
            int64_t v56 = v55;
            v55[2] = v60;
            swift_bridgeObjectRetain();
LABEL_39:
            a2 = v39;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v38;
            int64_t v26 = v71;
            unint64_t v21 = v56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 >= v26) {
      goto LABEL_40;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v26) {
        goto LABEL_40;
      }
      unint64_t v31 = *(void *)(v22 + 8 * v27);
      if (!v31)
      {
        int64_t v27 = v30 + 2;
        if (v30 + 2 >= v26) {
          goto LABEL_40;
        }
        unint64_t v31 = *(void *)(v22 + 8 * v27);
        if (!v31) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v25 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2]) {
      goto LABEL_25;
    }
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v61 = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v61 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  unint64_t v31 = *(void *)(v22 + 8 * v32);
  if (v31)
  {
    int64_t v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v27 >= v26) {
      goto LABEL_40;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v27);
    ++v32;
    if (v31) {
      goto LABEL_24;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t sub_24A430364(uint64_t a1)
{
  return sub_24A42FE70(a1, *v1, v1[1]);
}

uint64_t sub_24A430380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (uint64_t *)((char *)&v63 - v17);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  uint64_t v69 = v18;
  sub_24A3E1A98(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v63 - v17);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24A410C80((uint64_t)v19);
  }
  int64_t v71 = v15;
  uint64_t v72 = v8;
  uint64_t v77 = v7;
  uint64_t v64 = *v19;
  uint64_t v65 = v11;
  uint64_t v20 = v19[1];
  uint64_t v67 = v3;
  uint64_t v68 = v20;
  uint64_t v66 = a1;
  unint64_t v21 = *(void **)(a1 + 16);
  uint64_t v22 = a2 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  int64_t v70 = v26;
  while (1)
  {
    while (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        unint64_t v33 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v29);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_24A3E1488(v35, v34);
        if (v37)
        {
          uint64_t v38 = a2;
          uint64_t v39 = v21;
          uint64_t v40 = v21[7];
          uint64_t v41 = v71;
          uint64_t v42 = *(void *)(v72 + 72);
          sub_24A3E1A98(v40 + v42 * v36, (uint64_t)v71);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_24A410C80((uint64_t)v41);
            a2 = v38;
            goto LABEL_28;
          }
          uint64_t v43 = (void *)*v41;
          uint64_t v63 = v41[1];
          uint64_t v75 = v43;
          uint64_t v76 = v63;
          uint64_t v73 = v64;
          uint64_t v74 = v68;
          swift_bridgeObjectRetain();
          uint64_t v73 = sub_24A4643C8();
          uint64_t v74 = v44;
          sub_24A464348();
          swift_bridgeObjectRelease();
          uint64_t v45 = v74;
          uint64_t v46 = (uint64_t)v69;
          *uint64_t v69 = v73;
          *(void *)(v46 + 8) = v45;
          swift_storeEnumTagMultiPayload();
          sub_24A3EF5C0(v46, (uint64_t)v65);
          uint64_t v47 = v39;
          LODWORD(v63) = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v75 = v39;
          unint64_t v49 = sub_24A3E1488(v35, v34);
          uint64_t v50 = v39[2];
          BOOL v51 = (v48 & 1) == 0;
          uint64_t v52 = v50 + v51;
          if (__OFADD__(v50, v51)) {
            goto LABEL_45;
          }
          char v53 = v48;
          if (v47[3] >= v52)
          {
            if (v63)
            {
              int64_t v56 = v75;
              if ((v48 & 1) == 0) {
                goto LABEL_38;
              }
            }
            else
            {
              LODWORD(v63) = v48;
              unint64_t v57 = v49;
              sub_24A3EF624();
              unint64_t v49 = v57;
              int64_t v56 = v75;
              if ((v63 & 1) == 0) {
                goto LABEL_38;
              }
            }
          }
          else
          {
            sub_24A3EEEF8(v52, v63);
            unint64_t v54 = sub_24A3E1488(v35, v34);
            if ((v53 & 1) != (v55 & 1)) {
              goto LABEL_47;
            }
            unint64_t v49 = v54;
            int64_t v56 = v75;
            if ((v53 & 1) == 0)
            {
LABEL_38:
              v56[(v49 >> 6) + 8] |= 1 << v49;
              uint64_t v58 = (uint64_t *)(v56[6] + 16 * v49);
              *uint64_t v58 = v35;
              v58[1] = v34;
              sub_24A3EF5C0((uint64_t)v65, v56[7] + v49 * v42);
              uint64_t v59 = v56[2];
              BOOL v60 = __OFADD__(v59, 1);
              uint64_t v61 = v59 + 1;
              if (v60) {
                goto LABEL_46;
              }
              uint64_t v39 = v56;
              v56[2] = v61;
              swift_bridgeObjectRetain();
              goto LABEL_40;
            }
          }
          uint64_t v39 = v56;
          sub_24A3F1F50((uint64_t)v65, v56[7] + v49 * v42);
LABEL_40:
          a2 = v38;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          int64_t v26 = v70;
          unint64_t v21 = v39;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v30 >= v26) {
      goto LABEL_41;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v26) {
        goto LABEL_41;
      }
      unint64_t v31 = *(void *)(v22 + 8 * v27);
      if (!v31)
      {
        int64_t v27 = v30 + 2;
        if (v30 + 2 >= v26) {
          goto LABEL_41;
        }
        unint64_t v31 = *(void *)(v22 + 8 * v27);
        if (!v31) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v25 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2]) {
      goto LABEL_25;
    }
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v62 = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  unint64_t v31 = *(void *)(v22 + 8 * v32);
  if (v31)
  {
    int64_t v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v27 >= v26) {
      goto LABEL_41;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v27);
    ++v32;
    if (v31) {
      goto LABEL_24;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t sub_24A4308B0(uint64_t a1)
{
  return sub_24A430380(a1, *v1, v1[1]);
}

void *sub_24A4308CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v54 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v8;
  int64_t v55 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v57 = a2 + 56;
  uint64_t result = (void *)swift_bridgeObjectRetain_n();
  int64_t v13 = 0;
  char v53 = (void *)MEMORY[0x263F8EE78];
  int64_t v56 = v6;
  if (v11) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_59:
    __break(1u);
    return result;
  }
  if (v16 < v55)
  {
    unint64_t v17 = *(void *)(v54 + 8 * v16);
    int64_t v18 = v13 + 1;
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 2;
    if (v13 + 2 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 3;
    if (v13 + 3 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 4;
    if (v13 + 4 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 5;
    if (v13 + 5 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17)
    {
LABEL_25:
      unint64_t v11 = (v17 - 1) & v17;
      int64_t v59 = v18;
      for (unint64_t i = __clz(__rbit64(v17)) + (v18 << 6); ; unint64_t i = v14 | (v13 << 6))
      {
        uint64_t v20 = v7;
        unint64_t v21 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
        uint64_t v23 = *v21;
        uint64_t v22 = v21[1];
        if (*(void *)(a2 + 16))
        {
          sub_24A464B98();
          swift_bridgeObjectRetain();
          sub_24A464318();
          uint64_t v24 = sub_24A464BC8();
          uint64_t v25 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v26 = v24 & ~v25;
          if ((*(void *)(v57 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
          {
            uint64_t v27 = *(void *)(a2 + 48);
            unint64_t v28 = (void *)(v27 + 16 * v26);
            BOOL v29 = *v28 == v23 && v28[1] == v22;
            if (v29 || (sub_24A464A78() & 1) != 0)
            {
LABEL_6:
              uint64_t result = (void *)swift_bridgeObjectRelease();
              uint64_t v7 = v20;
              uint64_t v6 = v56;
              int64_t v13 = v59;
              if (!v11) {
                goto LABEL_8;
              }
              goto LABEL_7;
            }
            uint64_t v30 = ~v25;
            for (unint64_t j = v26 + 1; ; unint64_t j = v32 + 1)
            {
              uint64_t v32 = j & v30;
              if (((*(void *)(v57 + (((j & v30) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v30)) & 1) == 0) {
                break;
              }
              unint64_t v33 = (void *)(v27 + 16 * v32);
              BOOL v34 = *v33 == v23 && v33[1] == v22;
              if (v34 || (sub_24A464A78() & 1) != 0) {
                goto LABEL_6;
              }
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v7 = v20;
          uint64_t result = v53;
        }
        else
        {
          uint64_t result = sub_24A3F5D98(0, v53[2] + 1, 1, v53);
          uint64_t v7 = v20;
        }
        unint64_t v36 = result[2];
        unint64_t v35 = result[3];
        uint64_t v6 = v56;
        if (v36 >= v35 >> 1) {
          uint64_t result = sub_24A3F5D98((void *)(v35 > 1), v36 + 1, 1, result);
        }
        result[2] = v36 + 1;
        char v53 = result;
        char v37 = &result[2 * v36];
        v37[4] = v23;
        v37[5] = v22;
        int64_t v13 = v59;
        if (!v11) {
          goto LABEL_8;
        }
LABEL_7:
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v59 = v13;
      }
    }
    uint64_t v19 = v13 + 6;
    if (v13 + 6 < v55)
    {
      unint64_t v17 = *(void *)(v54 + 8 * v19);
      if (v17)
      {
        int64_t v18 = v13 + 6;
        goto LABEL_25;
      }
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_59;
        }
        if (v18 >= v55) {
          break;
        }
        unint64_t v17 = *(void *)(v54 + 8 * v18);
        ++v19;
        if (v17) {
          goto LABEL_25;
        }
      }
    }
  }
LABEL_49:
  swift_release();
  uint64_t v38 = v53[2];
  if (v38)
  {
    uint64_t v39 = v53 + 5;
    do
    {
      uint64_t v41 = *(v39 - 1);
      uint64_t v42 = *v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v43 = sub_24A3E1488(v41, v42);
      char v45 = v44;
      swift_bridgeObjectRelease();
      if (v45)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v58 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24A3EF624();
          uint64_t v7 = v58;
        }
        swift_bridgeObjectRelease();
        uint64_t v47 = *(void *)(v7 + 56);
        uint64_t v48 = type metadata accessor for ServiceEventValue();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = v47 + *(void *)(v49 + 72) * v43;
        uint64_t v6 = v56;
        sub_24A3EF5C0(v50, (uint64_t)v56);
        sub_24A3EFE7C(v43, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v6, 0, 1, v48);
      }
      else
      {
        uint64_t v40 = type metadata accessor for ServiceEventValue();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
      }
      v39 += 2;
      sub_24A3E2068((uint64_t)v6, (uint64_t *)&unk_269793540);
      swift_bridgeObjectRelease();
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = v52;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  *(void *)(v51 + 16) = v7;
  return result;
}

uint64_t sub_24A430E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v34 = a2 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v33 = a2;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v35) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v35) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v35) {
          goto LABEL_26;
        }
        unint64_t v18 = *(void *)(v34 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_22:
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_24A3E1488(v21, v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if (v25)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24A3EF624();
        uint64_t v7 = v36;
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v7 + 56);
      uint64_t v28 = type metadata accessor for ServiceEventValue();
      uint64_t v29 = *(void *)(v28 - 8);
      sub_24A3EF5C0(v27 + *(void *)(v29 + 72) * v23, (uint64_t)v6);
      sub_24A3EFE7C(v23, v7);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v6, 0, 1, v28);
      a2 = v33;
    }
    else
    {
      uint64_t v14 = type metadata accessor for ServiceEventValue();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    sub_24A3E2068((uint64_t)v6, (uint64_t *)&unk_269793540);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v35)
  {
LABEL_26:
    swift_release();
    uint64_t v30 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v30 + 16) = v7;
    return result;
  }
  unint64_t v18 = *(void *)(v34 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v35) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A431180(uint64_t a1, uint64_t a2)
{
  uint64_t v125 = *MEMORY[0x263EF8340];
  uint64_t v104 = sub_24A464198();
  uint64_t v4 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v107 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_24A4642C8();
  uint64_t v6 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  int64_t v100 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_24A464188();
  uint64_t v8 = *(void *)(v106 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v106);
  uint64_t v98 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v105 = (char *)&v93 - v11;
  uint64_t v12 = type metadata accessor for ServiceEventValue();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v95 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v94 = (uint64_t *)((char *)&v93 - v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v102 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v119 = (uint64_t)&v93 - v21;
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v116 = a2 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v26 = -1;
  uint64_t v103 = a1;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v28 = v26 & v24;
  int64_t v117 = (unint64_t)(v25 + 63) >> 6;
  int v123 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v115 = v13;
  char v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v99 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v97 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v93 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v29 = (uint64_t)v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  long long v110 = xmmword_24A466020;
  uint64_t v112 = a2;
  uint64_t v118 = v29;
LABEL_4:
  uint64_t v31 = v119;
  while (1)
  {
    if (v28)
    {
      unint64_t v32 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v33 = v32 | (v30 << 6);
      goto LABEL_23;
    }
    int64_t v34 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_78;
    }
    if (v34 >= v117) {
      goto LABEL_76;
    }
    unint64_t v35 = *(void *)(v116 + 8 * v34);
    ++v30;
    if (!v35)
    {
      int64_t v30 = v34 + 1;
      if (v34 + 1 >= v117) {
        goto LABEL_76;
      }
      unint64_t v35 = *(void *)(v116 + 8 * v30);
      if (!v35)
      {
        int64_t v30 = v34 + 2;
        if (v34 + 2 >= v117) {
          goto LABEL_76;
        }
        unint64_t v35 = *(void *)(v116 + 8 * v30);
        if (!v35) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v28 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v30 << 6);
LABEL_23:
    char v37 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v33);
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v40 = *(void *)(v27 + 16);
    uint64_t v121 = v38;
    int64_t v122 = v30;
    if (v40)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v41 = sub_24A3E1488(v38, v39);
      if (v42)
      {
        uint64_t v43 = v115;
        sub_24A3E1A98(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v41, v29);
        char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
        v44(v29, 0, 1, v12);
      }
      else
      {
        char v44 = *v123;
        (*v123)(v29, 1, 1, v12);
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v119;
    }
    else
    {
      char v44 = *v123;
      (*v123)(v29, 1, 1, v12);
      swift_bridgeObjectRetain();
    }
    char v45 = *v120;
    if ((*v120)(v29, 1, v12) == 1)
    {
      sub_24A3E2068(v29, (uint64_t *)&unk_269793540);
      if (!*(void *)(v27 + 16)) {
        goto LABEL_5;
      }
    }
    else
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v113 = v12;
        int64_t v55 = v100;
        sub_24A4642B8();
        uint64_t v56 = sub_24A464288();
        unint64_t v58 = v57;
        swift_bridgeObjectRelease();
        (*v99)(v55, v101);
        if (v58 >> 60 == 15) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = v56;
        }
        if (v58 >> 60 == 15) {
          unint64_t v60 = 0xC000000000000000;
        }
        else {
          unint64_t v60 = v58;
        }
        uint64_t v61 = sub_24A406068((unint64_t *)&qword_269793AD8, MEMORY[0x263F047F8]);
        uint64_t v62 = v104;
        sub_24A464168();
        uint64_t v114 = v59;
        switch(v60 >> 62)
        {
          case 1uLL:
            if (v59 >> 32 < (int)v59) {
              goto LABEL_82;
            }
            unint64_t v111 = v60;
            sub_24A3E8D0C(v59, v60);
            if (!sub_24A463AF8())
            {
              a2 = v112;
              uint64_t v12 = v113;
              goto LABEL_63;
            }
            uint64_t v63 = sub_24A463B28();
            uint64_t v12 = v113;
            if (__OFSUB__((int)v59, v63)) {
              goto LABEL_84;
            }
            a2 = v112;
LABEL_63:
            sub_24A463B18();
            uint64_t v68 = v107;
            uint64_t v62 = v104;
            sub_24A464148();
            unint64_t v71 = v111;
            sub_24A3E8CB4(v114, v111);
LABEL_64:
            uint64_t v72 = v105;
            sub_24A464158();
            (*v97)(v68, v62);
            sub_24A3E8CB4(v114, v71);
            (*v96)(v98, v72, v106);
            sub_24A406068(&qword_269793AE0, MEMORY[0x263F045C0]);
            sub_24A4643E8();
            uint64_t v114 = v124;
            uint64_t v73 = *(void *)(v124 + 16);
            uint64_t v74 = (void *)MEMORY[0x263F8EE78];
            unint64_t v111 = *((void *)&v124 + 1);
            uint64_t v109 = v73;
            if (*((void *)&v124 + 1) == v73)
            {
LABEL_65:
              swift_bridgeObjectRelease();
              (*v93)(v105, v106);
              *(void *)&long long v124 = v74;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
              sub_24A43236C();
              uint64_t v75 = sub_24A464228();
              uint64_t v77 = v76;
              swift_bridgeObjectRelease();
              char v78 = v94;
              uint64_t *v94 = v75;
              v78[1] = v77;
              swift_storeEnumTagMultiPayload();
              uint64_t v79 = (uint64_t)v78;
              uint64_t v80 = v95;
              sub_24A3EF5C0(v79, v95);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v124 = v27;
              sub_24A3F008C(v80, v121, v39, isUniquelyReferenced_nonNull_native);
              uint64_t v27 = v124;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v29 = v118;
              int64_t v30 = v122;
              goto LABEL_4;
            }
            if (*((uint64_t *)&v124 + 1) >= v73) {
              goto LABEL_81;
            }
            uint64_t v108 = v114 + 32;
            unint64_t v82 = v111;
            while ((v111 & 0x8000000000000000) == 0)
            {
              if (v82 >= *(void *)(v114 + 16)) {
                goto LABEL_79;
              }
              char v83 = *(unsigned char *)(v108 + v82);
              __swift_instantiateConcreteTypeFromMangledName(&qword_269793AE8);
              uint64_t v84 = swift_allocObject();
              *(_OWORD *)(v84 + 16) = v110;
              *(void *)(v84 + 56) = MEMORY[0x263F8E778];
              *(void *)(v84 + 64) = MEMORY[0x263F8E7C0];
              *(unsigned char *)(v84 + 32) = v83;
              uint64_t v85 = sub_24A4642A8();
              uint64_t v87 = v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v74 = sub_24A3F5D98(0, v74[2] + 1, 1, v74);
              }
              unint64_t v89 = v74[2];
              unint64_t v88 = v74[3];
              if (v89 >= v88 >> 1) {
                uint64_t v74 = sub_24A3F5D98((void *)(v88 > 1), v89 + 1, 1, v74);
              }
              ++v82;
              v74[2] = v89 + 1;
              uint64_t v90 = &v74[2 * v89];
              v90[4] = v85;
              v90[5] = v87;
              a2 = v112;
              uint64_t v12 = v113;
              if (v109 == v82) {
                goto LABEL_65;
              }
            }
            break;
          case 2uLL:
            uint64_t v109 = v61;
            unint64_t v64 = v60;
            uint64_t v65 = v59;
            uint64_t v66 = *(void *)(v59 + 16);
            uint64_t v67 = *(void *)(v59 + 24);
            unint64_t v111 = v64;
            sub_24A3E8D0C(v65, v64);
            swift_retain();
            swift_retain();
            if (sub_24A463AF8() && __OFSUB__(v66, sub_24A463B28())) {
              goto LABEL_85;
            }
            if (__OFSUB__(v67, v66)) {
              goto LABEL_83;
            }
            sub_24A463B18();
            uint64_t v68 = v107;
            uint64_t v69 = v104;
            sub_24A464148();
            uint64_t v62 = v69;
            swift_release();
            uint64_t v70 = v114;
            swift_release();
            unint64_t v71 = v111;
            sub_24A3E8CB4(v70, v111);
            a2 = v112;
            uint64_t v12 = v113;
            goto LABEL_64;
          case 3uLL:
            *(void *)((char *)&v124 + 6) = 0;
            *(void *)&long long v124 = 0;
            goto LABEL_61;
          default:
            *(void *)&long long v124 = v59;
            WORD4(v124) = v60;
            BYTE10(v124) = BYTE2(v60);
            BYTE11(v124) = BYTE3(v60);
            BYTE12(v124) = BYTE4(v60);
            BYTE13(v124) = BYTE5(v60);
LABEL_61:
            uint64_t v68 = v107;
            sub_24A464148();
            sub_24A3E8CB4(v59, v60);
            unint64_t v71 = v60;
            uint64_t v12 = v113;
            goto LABEL_64;
        }
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
      }
      sub_24A410C80(v29);
      if (!*(void *)(v27 + 16))
      {
LABEL_5:
        v44(v31, 1, 1, v12);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_24A3E1488(v121, v39);
    if (v47)
    {
      uint64_t v31 = v119;
      sub_24A3E1A98(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v46, v119);
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
      uint64_t v31 = v119;
    }
    v44(v31, v48, 1, v12);
    swift_bridgeObjectRelease();
    if (v45(v31, 1, v12) != 1)
    {
      sub_24A3E2068(v31, (uint64_t *)&unk_269793540);
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_24A3E1488(v121, v39);
      char v51 = v50;
      swift_bridgeObjectRelease();
      int64_t v30 = v122;
      if (v51)
      {
        int v52 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v124 = v27;
        if (!v52)
        {
          sub_24A3EF624();
          uint64_t v27 = v124;
        }
        swift_bridgeObjectRelease();
        uint64_t v53 = v102;
        sub_24A3EF5C0(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v49, v102);
        sub_24A3EFE7C(v49, v27);
        swift_bridgeObjectRelease();
        uint64_t v54 = 0;
      }
      else
      {
        uint64_t v54 = 1;
        uint64_t v53 = v102;
      }
      v44(v53, v54, 1, v12);
      sub_24A3E2068(v53, (uint64_t *)&unk_269793540);
      swift_bridgeObjectRelease();
      uint64_t v29 = v118;
      goto LABEL_4;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    sub_24A3E2068(v31, (uint64_t *)&unk_269793540);
    uint64_t v29 = v118;
    int64_t v30 = v122;
  }
  int64_t v36 = v34 + 3;
  if (v36 < v117)
  {
    unint64_t v35 = *(void *)(v116 + 8 * v36);
    if (!v35)
    {
      while (1)
      {
        int64_t v30 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_80;
        }
        if (v30 >= v117) {
          goto LABEL_76;
        }
        unint64_t v35 = *(void *)(v116 + 8 * v30);
        ++v36;
        if (v35) {
          goto LABEL_22;
        }
      }
    }
    int64_t v30 = v36;
    goto LABEL_22;
  }
LABEL_76:
  swift_release();
  uint64_t v91 = v103;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v91 + 16) = v27;
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventFilterMatcher()
{
  return &type metadata for EventFilterMatcher;
}

uint64_t destroy for EventAllowFilter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19CloudTelemetryTools16EventAllowFilterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventAllowFilter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EventAllowFilter(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAllowFilter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventAllowFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAllowFilter()
{
  return &type metadata for EventAllowFilter;
}

uint64_t destroy for EventRemoveFilter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventRemoveFilter()
{
  return &type metadata for EventRemoveFilter;
}

ValueMetadata *type metadata accessor for EventSHA256KeyFilter()
{
  return &type metadata for EventSHA256KeyFilter;
}

ValueMetadata *type metadata accessor for EventAllowValuesFilter()
{
  return &type metadata for EventAllowValuesFilter;
}

ValueMetadata *type metadata accessor for EventDenyValuesFilter()
{
  return &type metadata for EventDenyValuesFilter;
}

ValueMetadata *type metadata accessor for EventInsertStringKeyFilter()
{
  return &type metadata for EventInsertStringKeyFilter;
}

ValueMetadata *type metadata accessor for EventAppendToKeyFilter()
{
  return &type metadata for EventAppendToKeyFilter;
}

void *_s19CloudTelemetryTools18EventFilterMatcherVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s19CloudTelemetryTools18EventFilterMatcherVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s19CloudTelemetryTools18EventFilterMatcherVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EventPrependToKeyFilter()
{
  return &type metadata for EventPrependToKeyFilter;
}

unint64_t sub_24A43236C()
{
  unint64_t result = qword_269793AF0;
  if (!qword_269793AF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697939A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793AF0);
  }
  return result;
}

uint64_t sub_24A4323D0(unsigned __int8 *a1, char *a2)
{
  return sub_24A4325F8(*a1, *a2);
}

uint64_t sub_24A4323DC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x7972617262696CLL;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7972617262696CLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 7496054;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v6 = "decision_server_url";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "radar_component_id";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v3 = 0x800000024A46BDA0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v5 = 0x69745F7261646172;
      unint64_t v3 = 0xEB00000000656C74;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE300000000000000;
      if (v5 == 7496054) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v8 = 0xD000000000000013;
      uint64_t v9 = "decision_server_url";
      goto LABEL_13;
    case 3:
      unint64_t v8 = 0xD000000000000012;
      uint64_t v9 = "radar_component_id";
LABEL_13:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v5 != v8) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0x800000024A46BDA0;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xEB00000000656C74;
      if (v5 != 0x69745F7261646172) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_20:
      }
        char v10 = sub_24A464A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_24A4325F8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x747069726373;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x747069726373;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x63736A5F343662;
      break;
    case 3:
      unint64_t v3 = 0x800000024A46BD40;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E6F6973726576) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x63736A5F343662;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x800000024A46BD40;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_24A464A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24A432788()
{
  return sub_24A432790();
}

uint64_t sub_24A432790()
{
  return sub_24A464BC8();
}

uint64_t sub_24A43286C()
{
  return sub_24A464BC8();
}

uint64_t sub_24A43298C()
{
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A432A50()
{
  sub_24A464318();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A432B5C()
{
  return sub_24A432B64();
}

uint64_t sub_24A432B64()
{
  return sub_24A464BC8();
}

uint64_t sub_24A432C3C()
{
  return sub_24A464BC8();
}

uint64_t sub_24A432D58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A433DFC();
  *a1 = result;
  return result;
}

void sub_24A432D88(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x747069726373;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6E6F6973726576;
      goto LABEL_3;
    case 2:
      *a1 = 0x63736A5F343662;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000012;
      a1[1] = 0x800000024A46BD40;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_24A432E24()
{
  unint64_t result = 0x747069726373;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t result = 0x63736A5F343662;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A432EB4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A433DFC();
  *a1 = result;
  return result;
}

uint64_t sub_24A432EDC(uint64_t a1)
{
  unint64_t v2 = sub_24A435060();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A432F18(uint64_t a1)
{
  unint64_t v2 = sub_24A435060();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24A432F54()
{
  sub_24A410BB4();
  sub_24A4641E8();
  uint64_t v1 = sub_24A464248();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24A433C8C(v1, 0x747069726373, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithChar_, *(char *)(v0 + 16));
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_24A433C8C((uint64_t)v3, 0x6E6F6973726576, 0xE700000000000000, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24A464248();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_24A433C8C(v5, 0x63736A5F343662, 0xE700000000000000, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_24A433588(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_24A464428();
  swift_bridgeObjectRelease();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_24A433C8C(v8, 0xD000000000000012, 0x800000024A46BD40, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_24A4641A8();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24A43314C()
{
  uint64_t v1 = v0;
  sub_24A410BB4();
  uint64_t v2 = sub_24A4641E8();
  uint64_t v3 = sub_24A464248();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24A433C8C(v3, 0x7972617262696CLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24A464248();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  v27[0] = v2;
  sub_24A433C8C(v5, 7496054, 0xE300000000000000, v6);
  uint64_t v21 = v2;
  swift_bridgeObjectRelease();
  sub_24A433E48(v1 + 32, (uint64_t)v24);
  sub_24A433E48((uint64_t)v24, (uint64_t)v25);
  if (v25[1])
  {
    uint64_t v7 = sub_24A464248();
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v2;
    sub_24A433C8C(v7, 0xD000000000000013, 0x800000024A46BD60, v8);
    uint64_t v21 = v27[0];
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  sub_24A433E48(v1 + 48, (uint64_t)v23);
  sub_24A433E48((uint64_t)v23, (uint64_t)v26);
  if (v26[1])
  {
    uint64_t v9 = sub_24A464248();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v21;
    sub_24A433C8C(v9, 0xD000000000000012, 0x800000024A46BD80, v10);
    uint64_t v21 = v27[0];
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v1 + 64);
    if (!v11) {
      goto LABEL_14;
    }
  }
  else
  {

    uint64_t v11 = *(void *)(v1 + 64);
    if (!v11) {
      goto LABEL_14;
    }
  }
  v27[0] = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  sub_24A3EFBE8(v12, 0);
  sub_24A464448();
  if (v12)
  {
    uint64_t v13 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24A464248();
      uint64_t v14 = swift_bridgeObjectRelease();
      MEMORY[0x24C5C4BA0](v14);
      if (*(void *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24A464458();
      }
      v13 += 16;
      sub_24A464478();
      sub_24A464448();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_24A464428();
  swift_bridgeObjectRelease();
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  v22[0] = v21;
  sub_24A433C8C(v15, 0xD000000000000011, 0x800000024A46BDA0, v16);
  swift_bridgeObjectRelease();
LABEL_14:
  sub_24A433E48(v1 + 72, (uint64_t)v22);
  sub_24A433E48((uint64_t)v22, (uint64_t)v27);
  if (v27[1])
  {
    uint64_t v17 = sub_24A464248();
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_24A433C8C(v17, 0x69745F7261646172, 0xEB00000000656C74, v18);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v19 = sub_24A4641A8();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_24A433588(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_24A464898();
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      long long v8[2] = *(_OWORD *)(v4 + 32);
      v8[3] = v5;
      v8[4] = *(_OWORD *)(v4 + 64);
      uint64_t v9 = *(void *)(v4 + 80);
      long long v6 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v6;
      sub_24A43517C((uint64_t)v8);
      sub_24A43314C();
      sub_24A4351F0((uint64_t)v8);
      sub_24A464878();
      sub_24A4648A8();
      sub_24A4648B8();
      sub_24A464888();
      v4 += 88;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

double sub_24A43366C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_24A433EB0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

unint64_t sub_24A4336B0(char a1)
{
  unint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 7496054;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x69745F7261646172;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24A433788(char a1)
{
  unint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 7496054;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x69745F7261646172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24A433860(unsigned __int8 *a1, char *a2)
{
  return sub_24A4323DC(*a1, *a2);
}

uint64_t sub_24A43386C()
{
  return sub_24A43286C();
}

uint64_t sub_24A433874()
{
  return sub_24A432A50();
}

uint64_t sub_24A43387C()
{
  return sub_24A432C3C();
}

uint64_t sub_24A433884@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A434198();
  *a1 = result;
  return result;
}

unint64_t sub_24A4338B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24A4336B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24A4338E0()
{
  return sub_24A433788(*v0);
}

uint64_t sub_24A4338E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24A434198();
  *a1 = result;
  return result;
}

uint64_t sub_24A433910(uint64_t a1)
{
  unint64_t v2 = sub_24A43500C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24A43394C(uint64_t a1)
{
  unint64_t v2 = sub_24A43500C();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24A433988@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24A4341E4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_24A4339E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24A3E1488(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24A3EF8A4();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_24A433AB4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_24A433AB4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_24A464B98();
        swift_bridgeObjectRetain();
        sub_24A464318();
        uint64_t v9 = sub_24A464BC8();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          char v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_24A433C8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24A3EF8A4();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24A3EF2B0(v15, a4 & 1);
  unint64_t v20 = sub_24A3E1488(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_24A464B28();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_24A433DFC()
{
  unint64_t v0 = sub_24A464958();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_24A433E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A433EB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793F18);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A435060();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_24A4649B8();
  uint64_t v11 = v10;
  char v23 = 1;
  swift_bridgeObjectRetain();
  int v20 = sub_24A4649E8();
  char v22 = 2;
  v17[0] = sub_24A4649B8();
  uint64_t v13 = v12;
  v17[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_269793F20);
  char v21 = 3;
  sub_24A4350B4();
  uint64_t v18 = v13;
  swift_bridgeObjectRetain();
  sub_24A4649D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v19;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v17[0];
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v14;
  return result;
}

uint64_t sub_24A434198()
{
  unint64_t v0 = sub_24A464958();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_24A4341E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793F10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24A43500C();
  sub_24A464BF8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v44 = 0;
  uint64_t v9 = sub_24A4649B8();
  uint64_t v11 = v10;
  char v43 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24A4649B8();
  uint64_t v35 = v9;
  uint64_t v36 = v12;
  char v42 = 2;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24A464968();
  uint64_t v37 = v16;
  uint64_t v31 = v15;
  uint64_t v34 = v14;
  char v41 = 3;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v30 = sub_24A464968();
  uint64_t v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697939A8);
  char v40 = 4;
  sub_24A3FC0F0();
  swift_bridgeObjectRetain();
  sub_24A464988();
  uint64_t v32 = v18;
  uint64_t v19 = v38;
  char v39 = 5;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_24A464968();
  uint64_t v22 = v21;
  char v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v33 = v20;
  v23(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v32;
  swift_bridgeObjectRelease();
  uint64_t v25 = v37;
  swift_bridgeObjectRelease();
  uint64_t v26 = v34;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v35;
  a2[1] = v11;
  a2[2] = v36;
  a2[3] = v26;
  a2[4] = v31;
  a2[5] = v25;
  a2[6] = v30;
  a2[7] = v24;
  uint64_t v28 = v33;
  a2[8] = v19;
  a2[9] = v28;
  a2[10] = v22;
  return result;
}

unint64_t sub_24A4346A4()
{
  unint64_t result = qword_269793ED0;
  if (!qword_269793ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793ED0);
  }
  return result;
}

unint64_t sub_24A4346FC()
{
  unint64_t result = qword_269793ED8;
  if (!qword_269793ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793ED8);
  }
  return result;
}

unint64_t sub_24A434754()
{
  unint64_t result = qword_269793EE0;
  if (!qword_269793EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793EE0);
  }
  return result;
}

unint64_t sub_24A4347AC()
{
  unint64_t result = qword_269793EE8;
  if (!qword_269793EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793EE8);
  }
  return result;
}

unint64_t sub_24A434804()
{
  unint64_t result = qword_269793EF0;
  if (!qword_269793EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793EF0);
  }
  return result;
}

unint64_t sub_24A43485C()
{
  unint64_t result = qword_269793EF8;
  if (!qword_269793EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793EF8);
  }
  return result;
}

uint64_t destroy for StorebagSectionScript()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScript(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScript(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript()
{
  return &type metadata for StorebagSectionScript;
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionScript.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A434BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript.CodingKeys()
{
  return &type metadata for StorebagSectionScript.CodingKeys;
}

uint64_t destroy for StorebagSectionScriptRequiredLibraries()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StorebagSectionScriptRequiredLibraries(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionScriptRequiredLibraries(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagSectionScriptRequiredLibraries(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries;
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A434FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries.CodingKeys()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys;
}

unint64_t sub_24A43500C()
{
  unint64_t result = qword_269793F00;
  if (!qword_269793F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F00);
  }
  return result;
}

unint64_t sub_24A435060()
{
  unint64_t result = qword_269793F08;
  if (!qword_269793F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F08);
  }
  return result;
}

unint64_t sub_24A4350B4()
{
  unint64_t result = qword_269793F28;
  if (!qword_269793F28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269793F20);
    sub_24A435128();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F28);
  }
  return result;
}

unint64_t sub_24A435128()
{
  unint64_t result = qword_269793F30;
  if (!qword_269793F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F30);
  }
  return result;
}

uint64_t sub_24A43517C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24A4351F0(uint64_t a1)
{
  return a1;
}

unint64_t sub_24A435264()
{
  return 0xD000000000000032;
}

uint64_t sub_24A435280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24A4352B0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_24A4352B0(uint64_t a1)
{
  sub_24A3E34A0(a1, (uint64_t)v6);
  sub_24A4356EC();
  uint64_t v3 = sub_24A464488();
  if (v1)
  {

    sub_24A3E34A0(a1, (uint64_t)v6);
    sub_24A435740();
    uint64_t v4 = sub_24A464488();
  }
  else
  {
    uint64_t v4 = v3;
  }
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v4;
}

unint64_t sub_24A4353F4()
{
  unint64_t result = qword_269793F38;
  if (!qword_269793F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F38);
  }
  return result;
}

unint64_t sub_24A43544C()
{
  unint64_t result = qword_269793F40;
  if (!qword_269793F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F40);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSharedValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSharedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24A4355F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24A435600(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue()
{
  return &type metadata for StorebagSharedValue;
}

unsigned char *storeEnumTagSinglePayload for StorebagSharedValue.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24A4356B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue.Error()
{
  return &type metadata for StorebagSharedValue.Error;
}

unint64_t sub_24A4356EC()
{
  unint64_t result = qword_269793F48;
  if (!qword_269793F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F48);
  }
  return result;
}

unint64_t sub_24A435740()
{
  unint64_t result = qword_269793F50;
  if (!qword_269793F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F50);
  }
  return result;
}

uint64_t variable initialization expression of Listener.connectionQueue()
{
  uint64_t v12 = sub_24A464108();
  uint64_t v0 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24A464608();
  uint64_t v3 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A4645F8();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24A464138();
  MEMORY[0x270FA5388](v7 - 8);
  sub_24A435A8C();
  sub_24A464118();
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_24A438A88(&qword_269793F58, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793FC0);
  sub_24A435ACC();
  sub_24A464728();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F138], v11);
  uint64_t v8 = v12;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F8F040], v12);
  sub_24A464638();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v8);
  return sub_24A464628();
}

unint64_t sub_24A435A8C()
{
  unint64_t result = qword_269793FB0;
  if (!qword_269793FB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269793FB0);
  }
  return result;
}

unint64_t sub_24A435ACC()
{
  unint64_t result = qword_269793F60;
  if (!qword_269793F60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_269793FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269793F60);
  }
  return result;
}

uint64_t variable initialization expression of Listener.clients()
{
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_24A4648F8()) {
    unint64_t v0 = sub_24A438450(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v0 = MEMORY[0x263F8EE88];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793F68);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t sub_24A435BA0()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_269799938);
  __swift_project_value_buffer(v0, (uint64_t)qword_269799938);
  return sub_24A464008();
}

uint64_t variable initialization expression of Listener.conn()
{
  return 0;
}

uint64_t Listener.__allocating_init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A3F2308;
  return Listener.init(mode:clientBundleID:)(a1, a2, a3);
}

uint64_t Listener.init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 168) = a3;
  *(void *)(v4 + 176) = v3;
  *(void *)(v4 + 160) = a2;
  *(unsigned char *)(v4 + 73) = a1;
  uint64_t v5 = sub_24A464108();
  *(void *)(v4 + 184) = v5;
  *(void *)(v4 + 192) = *(void *)(v5 - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  uint64_t v6 = sub_24A464608();
  *(void *)(v4 + 208) = v6;
  *(void *)(v4 + 216) = *(void *)(v6 - 8);
  *(void *)(v4 + 224) = swift_task_alloc();
  *(void *)(v4 + 232) = sub_24A4645F8();
  *(void *)(v4 + 240) = swift_task_alloc();
  sub_24A464138();
  *(void *)(v4 + 248) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A435E60, 0, 0);
}

uint64_t sub_24A435E60()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v15 = *(void *)(v0 + 176);
  sub_24A435A8C();
  sub_24A464118();
  *(void *)(v0 + 152) = MEMORY[0x263F8EE78];
  sub_24A438A88(&qword_269793F58, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793FC0);
  sub_24A435ACC();
  sub_24A464728();
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v13, *MEMORY[0x263F8F138], v14);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v3, *MEMORY[0x263F8F040], v4);
  sub_24A464638();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  *(void *)(v15 + 16) = sub_24A464628();
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_24A4648F8()) {
    unint64_t v5 = sub_24A438450(MEMORY[0x263F8EE78]);
  }
  else {
    unint64_t v5 = MEMORY[0x263F8EE88];
  }
  uint64_t v6 = *(void *)(v0 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793F68);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = v5;
  *(void *)(v6 + 24) = v7;
  *(void *)(v6 + 96) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_24A4360DC;
  uint64_t v9 = *(void *)(v0 + 160);
  uint64_t v10 = *(void *)(v0 + 168);
  char v11 = *(unsigned char *)(v0 + 73);
  return Daemon.init(mode:clientBundleID:)(v0 + 16, v11, v9, v10);
}

uint64_t sub_24A4360DC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A4361D8, 0, 0);
}

uint64_t sub_24A4361D8()
{
  uint64_t v1 = *(_OWORD **)(v0 + 176);
  int v2 = *(unsigned __int8 *)(v0 + 73);
  long long v3 = *(_OWORD *)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)((char *)v1 + 73) = *(_OWORD *)(v0 + 57);
  v1[3] = v4;
  v1[4] = v5;
  v1[2] = v3;
  if (v2)
  {
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void **)(v6 + 16);
    if (v2 == 1)
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      XPCConnection.init(serviceName:targetQ:listen:delegate:)(0xD000000000000023, 0x800000024A46BE50, v7, 1, v6, (uint64_t)&protocol witness table for Listener);
    }
    else
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      uint64_t v8 = XPCConnection.init(machService:targetQ:listen:delegate:)(0xD000000000000019, 0x800000024A46BE30, v7, 1, v6, (_xpc_connection_s *)&protocol witness table for Listener);
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = *(void **)(v9 + 16);
    type metadata accessor for XPCConnection();
    swift_allocObject();
    char v11 = v10;
    swift_retain();
    uint64_t v8 = (uint64_t)XPCConnection.init(targetQ:delegate:)(v11, v9, (uint64_t)&protocol witness table for Listener);
  }
  uint64_t v12 = v8;
  uint64_t v13 = *(void *)(v0 + 176);
  swift_beginAccess();
  *(void *)(v13 + 96) = v12;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v15 = *(void *)(v0 + 176);
  return v14(v15);
}

_xpc_connection_s *Listener.connection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (_xpc_connection_s *)swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 96);
  if (v8)
  {
    type metadata accessor for XPCConnection();
    swift_allocObject();
    swift_unknownObjectRetain();
    swift_retain();
    return XPCConnection.init(listener:targetQ:delegate:)(v8, a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Listener.handle(message:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for XPCObject();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v33 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = swift_unknownObjectRetain();
  uint64_t v18 = (_xpc_connection_s *)XPCIncomingConnection.init(conn:)(v17);
  XPCIncomingConnection.entitlementValue(forKey:)((uint64_t)v16);
  sub_24A4387AC((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_24A3E2068((uint64_t)v14, (uint64_t *)&unk_2697938F0);
LABEL_14:
    pid_t pid = xpc_connection_get_pid(v18);
    if (qword_269799930 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_24A464018();
    __swift_project_value_buffer(v26, (uint64_t)qword_269799938);
    uint64_t v27 = sub_24A463FF8();
    os_log_type_t v28 = sub_24A4645B8();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 67240192;
      v33[2] = pid;
      sub_24A4646E8();
      _os_log_impl(&dword_24A3DA000, v27, v28, "connection attempted by unentitled process %{public}d", v29, 8u);
      MEMORY[0x24C5C5D60](v29, -1, -1);
    }

    xpc_connection_cancel(v18);
    swift_unknownObjectRelease();
    return sub_24A3E2068((uint64_t)v16, (uint64_t *)&unk_2697938F0);
  }
  sub_24A438814((uint64_t)v14, (uint64_t)v10);
  sub_24A438878((uint64_t)v10, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_24A4388DC((uint64_t)v10);
    uint64_t v24 = (uint64_t)v8;
LABEL_13:
    sub_24A4388DC(v24);
    goto LABEL_14;
  }
  if ((*v8 & 1) == 0)
  {
    uint64_t v24 = (uint64_t)v10;
    goto LABEL_13;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 88))
  {
    pid_t v19 = xpc_connection_get_pid(v18);
    if (qword_269799930 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24A464018();
    __swift_project_value_buffer(v20, (uint64_t)qword_269799938);
    uint64_t v21 = sub_24A463FF8();
    os_log_type_t v22 = sub_24A4645B8();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v23 = 67240192;
      v33[1] = v19;
      sub_24A4646E8();
      _os_log_impl(&dword_24A3DA000, v21, v22, "rejecting connection from %{public}d while reporting is disabled", v23, 8u);
      MEMORY[0x24C5C5D60](v23, -1, -1);
    }

    xpc_connection_cancel(v18);
  }
  else
  {
    uint64_t v31 = sub_24A4644E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v3, 1, 1, v31);
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = 0;
    v32[3] = 0;
    v32[4] = v0;
    v32[5] = v18;
    swift_retain();
    swift_unknownObjectRetain();
    sub_24A3E0AB0((uint64_t)v3, (uint64_t)&unk_269793F88, (uint64_t)v32);
    swift_release();
  }
  swift_unknownObjectRelease();
  sub_24A4388DC((uint64_t)v10);
  return sub_24A3E2068((uint64_t)v16, (uint64_t *)&unk_2697938F0);
}

uint64_t sub_24A4369A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return MEMORY[0x270FA2498](sub_24A4369C8, 0, 0);
}

uint64_t sub_24A4369C8()
{
  uint64_t v1 = v0[5];
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 56);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = v4[8];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = v4[9];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = v4[10];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  type metadata accessor for Client();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_24A436B18;
  uint64_t v9 = v0[5];
  unint64_t v10 = v0[6];
  return sub_24A438CE4(v3, v5, v6, v7, v9, v10);
}

uint64_t sub_24A436B18(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A436C18, 0, 0);
}

uint64_t sub_24A436C18()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 40) + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_24A438AD0();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A436CFC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_24A438A2C();
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t Listener.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Listener.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24A436E8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_24A464778();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for Client();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_24A464768();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_24A437188(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_24A4373C4();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_24A4376EC(a2, v17);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for Client();
  sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24A464208();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_24A4377D4(v15, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_24A438A88(&qword_269793F90, (void (*)(uint64_t))type metadata accessor for Client);
  while ((sub_24A464238() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_24A437188(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793F98);
    uint64_t v2 = sub_24A4647C8();
    uint64_t v14 = v2;
    sub_24A464758();
    if (sub_24A464788())
    {
      type metadata accessor for Client();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_24A4373C4();
          uint64_t v2 = v14;
        }
        sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
        uint64_t result = sub_24A464208();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_24A464788());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v2;
}

uint64_t sub_24A4373C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793F98);
  uint64_t v3 = sub_24A4647B8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      type metadata accessor for Client();
      sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
      uint64_t result = sub_24A464208();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_24A4376EC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Client();
  sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
  sub_24A464208();
  unint64_t result = sub_24A464748();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_24A4377D4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_24A4373C4();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_24A4379B0();
      goto LABEL_12;
    }
    sub_24A437B5C();
  }
  uint64_t v8 = *v3;
  type metadata accessor for Client();
  sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
  unint64_t result = sub_24A464208();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_24A438A88(&qword_269793F90, (void (*)(uint64_t))type metadata accessor for Client);
    do
    {
      unint64_t result = sub_24A464238();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_24A464B18();
  __break(1u);
  return result;
}

void *sub_24A4379B0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793F98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A4647A8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24A437B5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793F98);
  uint64_t v3 = sub_24A4647B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    type metadata accessor for Client();
    sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
    swift_retain();
    uint64_t result = sub_24A464208();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24A437E5C()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_24A464798();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_24A43807C();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  type metadata accessor for Client();
  sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24A464208();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = ~v5;
  sub_24A438A88(&qword_269793F90, (void (*)(uint64_t))type metadata accessor for Client);
  while ((sub_24A464238() & 1) == 0)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v0;
  uint64_t v11 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_24A4379B0();
    uint64_t v10 = v11;
  }
  uint64_t v3 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_24A438260(v6);
  *uint64_t v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24A43807C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_24A464768();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_24A437188(v2, v1);
  uint64_t v10 = v3;
  type metadata accessor for Client();
  sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
  swift_retain();
  uint64_t v4 = sub_24A464208();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_24A438A88(&qword_269793F90, (void (*)(uint64_t))type metadata accessor for Client);
    while ((sub_24A464238() & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & v7;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_24A438260(v6);
    if (sub_24A464238())
    {
      *uint64_t v0 = v10;
      return v8;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_24A438260(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      type metadata accessor for Client();
      sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
      do
      {
        uint64_t v10 = sub_24A464208() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(v3 + 48);
            int64_t v14 = (void *)(v13 + 8 * v2);
            unint64_t v15 = (void *)(v13 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
            {
              *int64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_24A438450(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24A4648F8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793F98);
      uint64_t result = sub_24A4647D8();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_24A4648F8();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x24C5C4FA0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    type metadata accessor for Client();
    sub_24A438A88((unint64_t *)&unk_269793FF0, (void (*)(uint64_t))type metadata accessor for Client);
    uint64_t result = sub_24A464208();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_24A438A88(&qword_269793F90, (void (*)(uint64_t))type metadata accessor for Client);
      do
      {
        uint64_t result = sub_24A464238();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void _s19CloudTelemetryTools8ListenerC6handle5errorySo13OS_xpc_object_p_tF_0()
{
}

uint64_t sub_24A4387AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A438814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A438878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A4388DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A438938()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24A438980()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24A3E0820;
  *(_OWORD *)(v2 + 40) = v3;
  return MEMORY[0x270FA2498](sub_24A4369C8, 0, 0);
}

uint64_t sub_24A438A2C()
{
  return swift_release();
}

uint64_t type metadata accessor for Listener()
{
  return self;
}

uint64_t sub_24A438A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A438AD0()
{
  swift_retain();
  sub_24A436E8C(&v2, v0);
  return swift_release();
}

uint64_t sub_24A438B20(char a1, char a2)
{
  if (a2) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return v2 & 0xFFFFFFFE | a1 & 1;
}

uint64_t sub_24A438B40@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5 & 1;
  *(unsigned char *)(a8 + 33) = HIBYTE(a5) & 1;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_24A438B60()
{
  long long v3 = *v0;
  uint64_t v2 = v3;
  sub_24A3F7038((uint64_t)&v3);
  sub_24A464358();
  swift_bridgeObjectRetain();
  sub_24A464358();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24A438BDC()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_269799958);
  __swift_project_value_buffer(v0, (uint64_t)qword_269799958);
  return sub_24A464008();
}

uint64_t sub_24A438C50()
{
  if (qword_269799950 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24A464018();
  return __swift_project_value_buffer(v0, (uint64_t)qword_269799958);
}

uint64_t sub_24A438CB4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24A438CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_allocObject();
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *unint64_t v13 = v6;
  v13[1] = sub_24A438DCC;
  return sub_24A438EC8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_24A438DCC(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  long long v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_24A438EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v43 = v7;
  unint64_t v8 = v6;
  unint64_t v39 = a6;
  uint64_t v42 = *MEMORY[0x263EF8340];
  *(void *)(v7 + 88) = a6;
  *(void *)(v7 + 96) = v6;
  *(void *)(v7 + 72) = a4;
  *(void *)(v7 + 80) = a5;
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 48) = a1;
  uint64_t v37 = sub_24A464108();
  uint64_t v14 = *(void *)(v37 - 8);
  uint64_t v36 = swift_task_alloc();
  *(void *)(v7 + 104) = v36;
  uint64_t v33 = sub_24A464608();
  uint64_t v38 = *(void *)(v33 - 8);
  uint64_t v35 = swift_task_alloc();
  *(void *)(v7 + 112) = v35;
  v31[2] = sub_24A4645F8();
  uint64_t v34 = swift_task_alloc();
  *(void *)(v7 + 120) = v34;
  sub_24A464138();
  uint64_t v32 = swift_task_alloc();
  *(void *)(v7 + 128) = v32;
  swift_defaultActor_initialize();
  v8[14] = 0;
  v8[18] = a1;
  v8[19] = a2;
  v8[20] = a3;
  v8[21] = a4;
  v8[22] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v15 = v14;
  uint64_t v16 = v38;
  *(void *)(v7 + 136) = XPCIncomingConnection.auditToken.getter();
  uint64_t v17 = (audit_token_t *)(v7 + 136);
  *(_DWORD *)(v7 + 144) = v18;
  *(_DWORD *)(v7 + 148) = v19;
  *(_DWORD *)(v7 + 152) = v20;
  *(_DWORD *)(v7 + 156) = v21;
  *(_DWORD *)(v7 + 160) = v22;
  *(_DWORD *)(v7 + 164) = v23;
  uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
  if (isStackAllocationSafe)
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    sub_24A4395B8(&v30, v17, (uint64_t)v31, &v40);
  }
  else
  {
    uint64_t v25 = (unsigned char *)swift_slowAlloc();
    sub_24A4395B8(v25, v17, (uint64_t)(v25 + 4096), &v40);
    MEMORY[0x24C5C5D60](v25, -1, -1);
  }
  unint64_t v26 = v41;
  v8[16] = v40;
  v8[17] = v26;
  unint64_t v39 = sub_24A435A8C();
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_24A4647E8();
  swift_bridgeObjectRelease();
  uint64_t v40 = 0xD000000000000020;
  unint64_t v41 = 0x800000024A46BF60;
  swift_bridgeObjectRetain();
  sub_24A464358();
  swift_bridgeObjectRelease();
  uint64_t v38 = v40;
  v31[1] = v41;
  sub_24A464118();
  *(void *)(v7 + 40) = MEMORY[0x263F8EE78];
  sub_24A448C7C(&qword_269793F58, 255, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793FC0);
  sub_24A435ACC();
  sub_24A464728();
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v35, *MEMORY[0x263F8F138], v33);
  uint64_t v28 = v36;
  uint64_t v27 = v37;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v36, *MEMORY[0x263F8F040], v37);
  sub_24A464638();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v28, v27);
  v8[15] = sub_24A464628();
  return MEMORY[0x270FA2498](sub_24A439434, v8, 0);
}

uint64_t sub_24A439434()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (_xpc_connection_s *)v0[11];
  id v3 = *(id *)(v1 + 120);
  swift_retain();
  uint64_t v4 = XPCIncomingConnection.makeConnection(targetQ:delegate:)(v3, v1, (uint64_t)&off_26FE17620, v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 112) = v4;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[12];
  return v5(v6);
}

uint64_t sub_24A4395B8@<X0>(unsigned char *buffer@<X0>, audit_token_t *audittoken@<X2>, uint64_t a3@<X1>, uint64_t *a4@<X8>)
{
  *buffer = 0;
  if (!buffer)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a3 - (uint64_t)buffer >= 0x100000000)
  {
LABEL_9:
    uint64_t result = sub_24A4648D8();
    __break(1u);
    return result;
  }
  uint64_t result = proc_pidpath_audittoken(audittoken, buffer, a3 - buffer);
  if ((int)result < 1)
  {
    unint64_t v8 = 0xE700000000000000;
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v6 = sub_24A464378();
    unint64_t v8 = v7;
    v22[0] = 47;
    v22[1] = 0xE100000000000000;
    MEMORY[0x270FA5388](v6);
    int v21 = v22;
    swift_bridgeObjectRetain();
    sub_24A4497FC(sub_24A449A3C, (uint64_t)v20, v6, v8);
    char v10 = v9;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_24A464328();
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_24A449A94(v11, v6, v8);
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v6 = MEMORY[0x24C5C4A90](v12, v14, v16, v18);
      unint64_t v8 = v19;
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  *a4 = v6;
  a4[1] = v8;
  return result;
}

uint64_t type metadata accessor for Client()
{
  return self;
}

void sub_24A4397CC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v0 - 8);
  swift_unknownObjectRetain();
  XPCMessage.init(fromXPC:)();
}

void sub_24A439848(uint64_t a1, char a2)
{
  if (a1)
  {
    uint64_t v7 = sub_24A4644E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    *(void *)(v8 + 32) = v2;
    *(void *)(v8 + 40) = a1;
    *(unsigned char *)(v8 + 48) = a2;
    swift_retain();
    sub_24A3E0AB0(v3, (uint64_t)&unk_269793FE8, v8);
    swift_release();
  }
  else
  {
    if (qword_269799950 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A464018();
    __swift_project_value_buffer(v9, (uint64_t)qword_269799958);
    swift_retain();
    *(void *)(v4 - 88) = sub_24A463FF8();
    os_log_type_t v10 = sub_24A4645B8();
    if (os_log_type_enabled(*(os_log_t *)(v4 - 88), v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(void *)(v4 - 72) = v12;
      *(_DWORD *)unint64_t v11 = 136446210;
      uint64_t v13 = *(void *)(v2 + 128);
      unint64_t v14 = *(void *)(v2 + 136);
      swift_bridgeObjectRetain();
      *(void *)(v4 - 80) = sub_24A3E0E30(v13, v14, (uint64_t *)(v4 - 72));
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_24A3DA000, *(os_log_t *)(v4 - 88), v10, "received invalid XPC message from %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v12, -1, -1);
      MEMORY[0x24C5C5D60](v11, -1, -1);
    }
    else
    {
      swift_release();
      uint64_t v15 = *(void **)(v4 - 88);
    }
  }
}

uint64_t sub_24A439A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_24A3E2218;
  return sub_24A439B40(a5, a6);
}

uint64_t sub_24A439B40(uint64_t a1, char a2)
{
  *(void *)(v3 + 784) = v2;
  *(unsigned char *)(v3 + 1668) = a2;
  *(void *)(v3 + 776) = a1;
  *(void *)(v3 + 792) = *v2;
  uint64_t v4 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  *(void *)(v3 + 800) = v4;
  *(void *)(v3 + 808) = *(void *)(v4 + 64);
  *(void *)(v3 + 816) = swift_task_alloc();
  *(void *)(v3 + 824) = swift_task_alloc();
  uint64_t v5 = sub_24A464018();
  *(void *)(v3 + 832) = v5;
  *(void *)(v3 + 840) = *(void *)(v5 - 8);
  *(void *)(v3 + 848) = swift_task_alloc();
  *(void *)(v3 + 856) = swift_task_alloc();
  *(void *)(v3 + 864) = swift_task_alloc();
  *(void *)(v3 + 872) = swift_task_alloc();
  *(void *)(v3 + 880) = swift_task_alloc();
  *(void *)(v3 + 888) = swift_task_alloc();
  *(void *)(v3 + 896) = swift_task_alloc();
  *(void *)(v3 + 904) = swift_task_alloc();
  *(void *)(v3 + 912) = swift_task_alloc();
  *(void *)(v3 + 920) = swift_task_alloc();
  *(void *)(v3 + 928) = swift_task_alloc();
  *(void *)(v3 + 936) = swift_task_alloc();
  *(void *)(v3 + 944) = swift_task_alloc();
  *(void *)(v3 + 952) = swift_task_alloc();
  *(void *)(v3 + 960) = swift_task_alloc();
  *(void *)(v3 + 968) = swift_task_alloc();
  *(void *)(v3 + 976) = swift_task_alloc();
  *(void *)(v3 + 984) = swift_task_alloc();
  *(void *)(v3 + 992) = swift_task_alloc();
  *(void *)(v3 + 1000) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  *(void *)(v3 + 1008) = swift_task_alloc();
  *(void *)(v3 + 1016) = swift_task_alloc();
  *(void *)(v3 + 1024) = swift_task_alloc();
  *(void *)(v3 + 1032) = swift_task_alloc();
  uint64_t v6 = sub_24A463E78();
  *(void *)(v3 + 1040) = v6;
  *(void *)(v3 + 1048) = *(void *)(v6 - 8);
  *(void *)(v3 + 1056) = swift_task_alloc();
  *(void *)(v3 + 1064) = swift_task_alloc();
  *(void *)(v3 + 1072) = type metadata accessor for CachedSession();
  *(void *)(v3 + 1080) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  *(void *)(v3 + 1088) = swift_task_alloc();
  *(void *)(v3 + 1096) = swift_task_alloc();
  *(void *)(v3 + 1104) = swift_task_alloc();
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  *(void *)(v3 + 1152) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A439F10, v2, 0);
}

uint64_t sub_24A439F10()
{
  uint64_t v181 = v0;
  switch(*(unsigned char *)(v0 + 1668))
  {
    case 1:
      uint64_t v16 = *(void **)(v0 + 784);
      type metadata accessor for SubmitEventsActivity();
      uint64_t v17 = v16[18];
      uint64_t v18 = v16[19];
      uint64_t v19 = v16[20];
      swift_retain();
      swift_retain();
      swift_retain();
      int v20 = sub_24A3DD0F4(v17, v18, v19);
      *(void *)(v0 + 1616) = v20;
      v176 = (uint64_t (*)(void))(*(void *)(*v20 + 120) + **(int **)(*v20 + 120));
      int v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1624) = v21;
      *int v21 = v0;
      v21[1] = sub_24A441D10;
      uint64_t v12 = v176;
      return v12();
    case 2:
      type metadata accessor for PostInstallActivity();
      uint64_t v10 = sub_24A3F7E54();
      *(void *)(v0 + 1632) = v10;
      v174 = (uint64_t (*)(void))(*(void *)(*(void *)v10 + 88) + **(int **)(*(void *)v10 + 88));
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 1640) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_24A4422D8;
      uint64_t v12 = v174;
      return v12();
    case 3:
      type metadata accessor for CacheCleanupActivity();
      uint64_t v13 = swift_retain();
      uint64_t v14 = sub_24A41E7A0(v13);
      *(void *)(v0 + 1648) = v14;
      v175 = (uint64_t (*)(void))(*(void *)(*(void *)v14 + 104) + **(int **)(*(void *)v14 + 104));
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 1656) = v15;
      void *v15 = v0;
      v15[1] = sub_24A4428A0;
      uint64_t v12 = v175;
      return v12();
    default:
      if (qword_269799950 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(*(void *)(v0 + 832), (uint64_t)qword_269799958);
      uint64_t v1 = sub_24A463FF8();
      os_log_type_t v2 = sub_24A464598();
      if (os_log_type_enabled(v1, v2))
      {
        uint64_t v3 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl(&dword_24A3DA000, v1, v2, "SendOneMessage Request Received", v3, 2u);
        MEMORY[0x24C5C5D60](v3, -1, -1);
      }
      uint64_t v4 = *(void *)(v0 + 1152);
      uint64_t v5 = *(void **)(v0 + 776);

      MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v5, v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for XPCObject();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
      int v8 = v7(v4, 1, v6);
      uint64_t v9 = *(void ***)(v0 + 1152);
      if (v8 == 1) {
        goto LABEL_7;
      }
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_24;
      }
      v166 = v7;
      uint64_t v23 = *(void *)(v0 + 1144);
      uint64_t v24 = *(void **)(v0 + 776);
      uint64_t v25 = *v9;
      *(void *)(v0 + 1160) = *v9;
      MessageKeys.sendOneMessageEvent.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v24, v23);
      swift_bridgeObjectRelease();
      int v26 = v166(v23, 1, v6);
      uint64_t v9 = *(void ***)(v0 + 1144);
      if (v26 == 1)
      {
        swift_unknownObjectRelease();
LABEL_7:
        sub_24A3E2068((uint64_t)v9, (uint64_t *)&unk_2697938F0);
LABEL_25:
        uint64_t v31 = *(void *)(v0 + 912);
        uint64_t v32 = *(void *)(v0 + 840);
        uint64_t v33 = *(void *)(v0 + 784);
        uint64_t v34 = sub_24A438C50();
        uint64_t v169 = *(void (**)(uint64_t))(v32 + 16);
        uint64_t v172 = v34;
        v169(v31);
        swift_retain();
        uint64_t v35 = sub_24A463FF8();
        os_log_type_t v36 = sub_24A4645B8();
        uint64_t v37 = swift_allocObject();
        *(unsigned char *)(v37 + 16) = 34;
        uint64_t v38 = swift_allocObject();
        *(unsigned char *)(v38 + 16) = 8;
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = sub_24A449BFC;
        *(void *)(v39 + 24) = v33;
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = sub_24A449048;
        *(void *)(v40 + 24) = v39;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_24A468450;
        *(void *)(v41 + 32) = sub_24A449024;
        *(void *)(v41 + 40) = v37;
        *(void *)(v41 + 48) = sub_24A449BF8;
        *(void *)(v41 + 56) = v38;
        *(void *)(v41 + 64) = sub_24A449070;
        *(void *)(v41 + 72) = v40;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v42 = v36;
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          uint64_t v179 = 0;
          v180[0] = v44;
          *(_WORD *)uint64_t v43 = 258;
          v43[2] = *(unsigned char *)(v37 + 16);
          swift_release();
          uint64_t v43[3] = *(unsigned char *)(v38 + 16);
          v178 = v43 + 4;
          swift_release();
          sub_24A448A7C((uint64_t *)&v178, (uint64_t)&v179, v180, *(uint64_t (**)(void))(v40 + 16));
          uint64_t v45 = *(void *)(v0 + 912);
          uint64_t v46 = *(void *)(v0 + 840);
          uint64_t v47 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl(&dword_24A3DA000, v35, v42, "missing required values for sendOneMessage from %{public}s", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v44, -1, -1);
          MEMORY[0x24C5C5D60](v43, -1, -1);

          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
          v48(v45, v47);
        }
        else
        {
          uint64_t v49 = *(void *)(v0 + 912);
          uint64_t v50 = *(void *)(v0 + 840);
          uint64_t v51 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v48(v49, v51);
        }
        xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (!reply) {
          goto LABEL_36;
        }
        uint64_t v53 = reply;
        uint64_t v54 = *(void *)(v0 + 784);
        xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage fields");
        swift_beginAccess();
        uint64_t v55 = *(void *)(v54 + 112);
        if (v55)
        {
          swift_beginAccess();
          uint64_t v56 = *(_xpc_connection_s **)(v55 + 16);
          if (v56)
          {
            uint64_t v57 = *(void *)(v0 + 904);
            uint64_t v58 = *(void *)(v0 + 832);
            xpc_connection_send_message(v56, v53);
            ((void (*)(uint64_t, uint64_t, uint64_t))v169)(v57, v172, v58);
            uint64_t v59 = sub_24A463FF8();
            os_log_type_t v60 = sub_24A464598();
            BOOL v61 = os_log_type_enabled(v59, v60);
            uint64_t v62 = *(void *)(v0 + 904);
            uint64_t v63 = *(void *)(v0 + 832);
            if (v61)
            {
              unint64_t v64 = (uint8_t *)swift_slowAlloc();
              uint64_t v179 = 0;
              v180[0] = 0;
              *(_WORD *)unint64_t v64 = 0;
              v178 = v64 + 2;
              sub_24A4489E4(MEMORY[0x263F8EE78], (uint64_t)&v178, (uint64_t)&v179, (uint64_t)v180);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24A3DA000, v59, v60, "SendOneMessage Error Reply Sent", v64, 2u);
              MEMORY[0x24C5C5D60](v64, -1, -1);

              swift_unknownObjectRelease();
              uint64_t v65 = v62;
LABEL_35:
              v48(v65, v63);
LABEL_36:
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
              return v66();
            }

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
LABEL_34:
            uint64_t v65 = v62;
            goto LABEL_35;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_91;
      }
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_unknownObjectRelease();
LABEL_24:
        sub_24A44979C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_25;
      }
      uint64_t v27 = v25;
      uint64_t v28 = *(void *)(v0 + 1136);
      *(void *)(v0 + 1168) = *v9;
      MessageKeys.eventType.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v28);
      swift_bridgeObjectRelease();
      int v29 = v166(v28, 1, v6);
      char v30 = *(uint64_t **)(v0 + 1136);
      if (v29 == 1)
      {
        sub_24A3E2068((uint64_t)v30, (uint64_t *)&unk_2697938F0);
LABEL_56:
        uint64_t v86 = *(void *)(v0 + 928);
        uint64_t v87 = *(void *)(v0 + 840);
        uint64_t v88 = *(void *)(v0 + 784);
        uint64_t v89 = sub_24A438C50();
        uint64_t v167 = *(void (**)(uint64_t))(v87 + 16);
        uint64_t v170 = v89;
        v167(v86);
        swift_retain();
        uint64_t v90 = sub_24A463FF8();
        os_log_type_t v91 = sub_24A4645B8();
        uint64_t v92 = swift_allocObject();
        *(unsigned char *)(v92 + 16) = 34;
        uint64_t v93 = swift_allocObject();
        *(unsigned char *)(v93 + 16) = 8;
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = sub_24A449BFC;
        *(void *)(v94 + 24) = v88;
        uint64_t v95 = swift_allocObject();
        *(void *)(v95 + 16) = sub_24A449AE4;
        *(void *)(v95 + 24) = v94;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
        uint64_t v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = xmmword_24A468450;
        *(void *)(v96 + 32) = sub_24A449BF8;
        *(void *)(v96 + 40) = v92;
        *(void *)(v96 + 48) = sub_24A449BF8;
        *(void *)(v96 + 56) = v93;
        *(void *)(v96 + 64) = sub_24A449AE8;
        *(void *)(v96 + 72) = v95;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v97 = v91;
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v98 = (uint8_t *)swift_slowAlloc();
          uint64_t v99 = swift_slowAlloc();
          uint64_t v179 = 0;
          v180[0] = v99;
          *(_WORD *)uint64_t v98 = 258;
          v98[2] = *(unsigned char *)(v92 + 16);
          swift_release();
          v98[3] = *(unsigned char *)(v93 + 16);
          v178 = v98 + 4;
          swift_release();
          sub_24A448A7C((uint64_t *)&v178, (uint64_t)&v179, v180, *(uint64_t (**)(void))(v95 + 16));
          uint64_t v100 = *(void *)(v0 + 928);
          uint64_t v101 = *(void *)(v0 + 840);
          uint64_t v102 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl(&dword_24A3DA000, v90, v97, "missing required values in create session from %{public}s", v98, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v99, -1, -1);
          MEMORY[0x24C5C5D60](v98, -1, -1);

          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
          v48(v100, v102);
        }
        else
        {
          uint64_t v103 = *(void *)(v0 + 928);
          uint64_t v104 = *(void *)(v0 + 840);
          uint64_t v105 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
          v48(v103, v105);
        }
        xpc_object_t v106 = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (v106)
        {
          uint64_t v107 = v106;
          uint64_t v108 = *(void *)(v0 + 784);
          xpc_dictionary_set_string(v106, "error", "missing required sendOneMessage event fields");
          swift_beginAccess();
          uint64_t v109 = *(void *)(v108 + 112);
          if (!v109)
          {
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
          swift_beginAccess();
          long long v110 = *(_xpc_connection_s **)(v109 + 16);
          if (!v110)
          {
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
          uint64_t v111 = *(void *)(v0 + 920);
          uint64_t v112 = *(void *)(v0 + 832);
          xpc_connection_send_message(v110, v107);
          ((void (*)(uint64_t, uint64_t, uint64_t))v167)(v111, v170, v112);
          uint64_t v113 = sub_24A463FF8();
          os_log_type_t v114 = sub_24A464598();
          BOOL v115 = os_log_type_enabled(v113, v114);
          uint64_t v62 = *(void *)(v0 + 920);
          uint64_t v63 = *(void *)(v0 + 832);
          if (v115)
          {
            uint64_t v116 = (uint8_t *)swift_slowAlloc();
            uint64_t v179 = 0;
            v180[0] = 0;
            *(_WORD *)uint64_t v116 = 0;
            v178 = v116 + 2;
            sub_24A4489E4(MEMORY[0x263F8EE78], (uint64_t)&v178, (uint64_t)&v179, (uint64_t)v180);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24A3DA000, v113, v114, "SendOneMessage Error Reply Sent", v116, 2u);
            MEMORY[0x24C5C5D60](v116, -1, -1);
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v65 = v62;
            goto LABEL_35;
          }

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_67:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_34;
        }
        swift_unknownObjectRelease();
        goto LABEL_65;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        uint64_t v72 = (uint64_t)v30;
LABEL_55:
        sub_24A44979C(v72, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_56;
      }
      uint64_t v67 = *(void *)(v0 + 1128);
      uint64_t v69 = *v30;
      uint64_t v68 = v30[1];
      *(void *)(v0 + 1176) = v68;
      MessageKeys.clientType.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v67);
      swift_bridgeObjectRelease();
      int v70 = v166(v67, 1, v6);
      unint64_t v71 = *(void ***)(v0 + 1128);
      if (v70 == 1)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        sub_24A3E2068((uint64_t)v71, (uint64_t *)&unk_2697938F0);
        goto LABEL_56;
      }
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_54;
      }
      uint64_t v73 = *(void *)(v0 + 1120);
      uint64_t v163 = *v71;
      *(void *)(v0 + 1184) = *v71;
      uint64_t v74 = v71[1];
      *(void *)(v0 + 1192) = v74;
      MessageKeys.transportConfiguration.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v73);
      swift_bridgeObjectRelease();
      int v75 = v166(v73, 1, v6);
      unint64_t v71 = *(void ***)(v0 + 1120);
      if (v75 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      uint64_t v162 = v74;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_bridgeObjectRelease();
LABEL_54:
        swift_bridgeObjectRelease();
        uint64_t v72 = (uint64_t)v71;
        goto LABEL_55;
      }
      uint64_t v76 = *(void *)(v0 + 1112);
      uint64_t v77 = *v71;
      *(void *)(v0 + 1200) = *v71;
      MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      uint64_t v173 = v77;
      XPCDictionary.subscript.getter(v77, v76);
      swift_bridgeObjectRelease();
      int v78 = v166(v76, 1, v6);
      uint64_t v79 = *(void *)(v0 + 1112);
      if (v78 == 1) {
        goto LABEL_52;
      }
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_71;
      }
      uint64_t v80 = *(void *)(v0 + 1104);
      char v81 = *(unsigned char *)v79;
      MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v173, v80);
      swift_bridgeObjectRelease();
      int v82 = v166(v80, 1, v6);
      uint64_t v79 = *(void *)(v0 + 1104);
      if (v82 == 1)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24A3E2068(v79, (uint64_t *)&unk_2697938F0);
LABEL_72:
        uint64_t v120 = *(void *)(v0 + 944);
        uint64_t v121 = *(void *)(v0 + 840);
        uint64_t v122 = *(void *)(v0 + 784);
        uint64_t v123 = sub_24A438C50();
        v168 = *(void (**)(uint64_t))(v121 + 16);
        uint64_t v171 = v123;
        v168(v120);
        swift_retain();
        long long v124 = sub_24A463FF8();
        os_log_type_t v125 = sub_24A4645B8();
        uint64_t v126 = swift_allocObject();
        *(unsigned char *)(v126 + 16) = 34;
        uint64_t v127 = swift_allocObject();
        *(unsigned char *)(v127 + 16) = 8;
        uint64_t v128 = swift_allocObject();
        *(void *)(v128 + 16) = sub_24A449BFC;
        *(void *)(v128 + 24) = v122;
        uint64_t v129 = swift_allocObject();
        *(void *)(v129 + 16) = sub_24A449AE4;
        *(void *)(v129 + 24) = v128;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
        uint64_t v130 = swift_allocObject();
        *(_OWORD *)(v130 + 16) = xmmword_24A468450;
        *(void *)(v130 + 32) = sub_24A449BF8;
        *(void *)(v130 + 40) = v126;
        *(void *)(v130 + 48) = sub_24A449BF8;
        *(void *)(v130 + 56) = v127;
        *(void *)(v130 + 64) = sub_24A449AE8;
        *(void *)(v130 + 72) = v129;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v131 = v125;
        if (os_log_type_enabled(v124, v125))
        {
          v132 = (uint8_t *)swift_slowAlloc();
          uint64_t v133 = swift_slowAlloc();
          uint64_t v179 = 0;
          v180[0] = v133;
          *(_WORD *)v132 = 258;
          v132[2] = *(unsigned char *)(v126 + 16);
          swift_release();
          v132[3] = *(unsigned char *)(v127 + 16);
          v178 = v132 + 4;
          swift_release();
          sub_24A448A7C((uint64_t *)&v178, (uint64_t)&v179, v180, *(uint64_t (**)(void))(v129 + 16));
          uint64_t v134 = *(void *)(v0 + 944);
          uint64_t v135 = *(void *)(v0 + 840);
          uint64_t v136 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl(&dword_24A3DA000, v124, v131, "missing required values in transport configuration from %{public}s", v132, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v133, -1, -1);
          MEMORY[0x24C5C5D60](v132, -1, -1);

          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
          v48(v134, v136);
        }
        else
        {
          uint64_t v137 = *(void *)(v0 + 944);
          uint64_t v138 = *(void *)(v0 + 840);
          uint64_t v139 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v138 + 8);
          v48(v137, v139);
        }
        xpc_object_t v140 = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (v140)
        {
          char v141 = v140;
          uint64_t v142 = *(void *)(v0 + 784);
          xpc_dictionary_set_string(v140, "error", "missing required sendOneMessage event fields");
          swift_beginAccess();
          uint64_t v143 = *(void *)(v142 + 112);
          if (!v143)
          {
LABEL_93:
            __break(1u);
            goto LABEL_94;
          }
          swift_beginAccess();
          unint64_t v144 = *(_xpc_connection_s **)(v143 + 16);
          if (!v144)
          {
LABEL_94:
            __break(1u);
            __break(1u);
            __break(1u);
            JUMPOUT(0x24A43BF14);
          }
          uint64_t v145 = *(void *)(v0 + 936);
          uint64_t v146 = *(void *)(v0 + 832);
          xpc_connection_send_message(v144, v141);
          ((void (*)(uint64_t, uint64_t, uint64_t))v168)(v145, v171, v146);
          uint64_t v147 = sub_24A463FF8();
          os_log_type_t v148 = sub_24A464598();
          BOOL v149 = os_log_type_enabled(v147, v148);
          uint64_t v62 = *(void *)(v0 + 936);
          uint64_t v63 = *(void *)(v0 + 832);
          if (v149)
          {
            uint64_t v150 = (uint8_t *)swift_slowAlloc();
            uint64_t v179 = 0;
            v180[0] = 0;
            *(_WORD *)uint64_t v150 = 0;
            v178 = v150 + 2;
            sub_24A4489E4(MEMORY[0x263F8EE78], (uint64_t)&v178, (uint64_t)&v179, (uint64_t)v180);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24A3DA000, v147, v148, "SendOneMessage Error Reply Sent", v150, 2u);
            MEMORY[0x24C5C5D60](v150, -1, -1);
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v65 = v62;
            goto LABEL_35;
          }

          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_67;
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_65:
        swift_unknownObjectRelease();
        goto LABEL_36;
      }
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_71;
      }
      uint64_t v83 = *(void *)(v0 + 1096);
      char v84 = *(unsigned char *)v79;
      MessageKeys.tcBundleID.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v173, v83);
      swift_bridgeObjectRelease();
      int v85 = v166(v83, 1, v6);
      uint64_t v79 = *(void *)(v0 + 1096);
      if (v85 == 1) {
        goto LABEL_52;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
LABEL_71:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24A44979C(v79, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_72;
      }
      uint64_t v117 = *(void *)(v0 + 1088);
      uint64_t v164 = *(void *)v79;
      uint64_t v165 = *(void *)(v79 + 8);
      *(void *)(v0 + 1208) = v165;
      MessageKeys.samplingUUID.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v117);
      swift_bridgeObjectRelease();
      int v118 = v166(v117, 1, v6);
      uint64_t v119 = *(uint64_t **)(v0 + 1088);
      if (v118 == 1)
      {
        sub_24A3E2068(*(void *)(v0 + 1088), (uint64_t *)&unk_2697938F0);
LABEL_85:
        uint64_t v151 = 0;
        uint64_t v152 = 0;
        goto LABEL_86;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        sub_24A44979C((uint64_t)v119, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_85;
      }
      uint64_t v151 = *v119;
      uint64_t v152 = v119[1];
LABEL_86:
      type metadata accessor for Session();
      sub_24A40D700(v151, v152);
      *(double *)(v0 + 1216) = v153;
      double v154 = v153;
      uint64_t v155 = *(void *)(v0 + 1080);
      uint64_t v156 = *(void *)(v0 + 1064);
      uint64_t v157 = *(void *)(v0 + 784);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 120) = v163;
      *(void *)(v0 + 128) = v162;
      *(void *)(v0 + 136) = v69;
      *(void *)(v0 + 144) = v68;
      *(unsigned char *)(v0 + 152) = v81;
      *(unsigned char *)(v0 + 153) = v84;
      *(void *)(v0 + 160) = v164;
      *(void *)(v0 + 168) = v165;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24A463E38();
      sub_24A40D574(v0 + 120, 0x4D656E4F646E6553, 0xEE00656761737365, v156, v155, v154);
      uint64_t v158 = *(void *)(v157 + 152);
      *(void *)(v0 + 1224) = v158;
      v177 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))(*(void *)(*(void *)v158 + 232)
                                                                            + **(int **)(*(void *)v158 + 232));
      uint64_t v159 = (void *)swift_task_alloc();
      *(void *)(v0 + 1232) = v159;
      *uint64_t v159 = v0;
      v159[1] = sub_24A43BF24;
      uint64_t v160 = *(void *)(v0 + 1080);
      uint64_t v161 = *(void *)(v0 + 1072);
      return v177(v0 + 264, v160, v161, &off_26FE15C80);
  }
}

uint64_t sub_24A43BF24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24A442E68;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 784);
    uint64_t v4 = sub_24A43C04C;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_24A43C04C()
{
  uint64_t v1 = (void *)v0[153];
  uint64_t v2 = v0[33];
  v0[156] = v0[34];
  v0[157] = v2;
  uint64_t v3 = *v1 + 248;
  v0[158] = *(void *)v3;
  v0[159] = v3 & 0xFFFFFFFFFFFFLL | 0xA469000000000000;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24A43C0F8, v1, 0);
}

uint64_t sub_24A43C0F8()
{
  uint64_t v1 = *(void *)(v0 + 784);
  (*(void (**)(void, void))(v0 + 1264))(*(void *)(v0 + 1184), *(void *)(v0 + 1192));
  return MEMORY[0x270FA2498](sub_24A43C174, v1, 0);
}

void sub_24A43C174()
{
  BOOL v61 = v0;
  uint64_t v1 = *(void *)(v0[156] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    id v53 = (id)(*(void *)(**(void **)(v0[98] + 160) + 136) + **(int **)(**(void **)(v0[98] + 160) + 136));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[160] = v2;
    void *v2 = v0;
    v2[1] = sub_24A43CC4C;
    uint64_t v3 = v0[135];
    uint64_t v4 = v0[134];
    ((void (*)(void *, uint64_t, uint64_t, _UNKNOWN **))v53)(v0 + 33, v3, v4, &off_26FE15C80);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_OWORD *)v0 + 42) = *((_OWORD *)v0 + 18);
  sub_24A407ABC((uint64_t)(v0 + 84));
  id v54 = (id)v0[155];
  *((_OWORD *)v0 + 82) = 0u;
  uint64_t v5 = (void *)v0[146];
  uint64_t v6 = v0[99];
  v0[92] = sub_24A3ECFD8(MEMORY[0x263F8EE78]);
  xpc_dictionary_get_count(v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
  sub_24A4641F8();
  uint64_t v7 = swift_allocObject();
  v0[166] = v7;
  *(void *)(v7 + 16) = v0 + 92;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_24A449220;
  *(void *)(v8 + 24) = v7;
  v0[26] = sub_24A3F1134;
  v0[27] = v8;
  v0[22] = MEMORY[0x263EF8330];
  v0[23] = 1107296256;
  v0[24] = sub_24A3ED5F4;
  v0[25] = &block_descriptor_3;
  uint64_t v9 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v5, v9);
  swift_unknownObjectRelease();
  _Block_release(v9);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v5)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = 4079420;
  uint64_t v11 = v0[129];
  sub_24A448628(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v11);
  uint64_t v12 = type metadata accessor for ServiceEventValue();
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (v13(v11, 1, v12) != 1)
  {
    sub_24A4499D8(v0[129], v0[128], (uint64_t *)&unk_269793540);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_11:
      uint64_t v15 = sub_24A464A48();
      unint64_t v17 = v16;
      goto LABEL_14;
    }
    sub_24A44979C(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v17 = 0xE300000000000000;
  uint64_t v15 = 4079420;
LABEL_14:
  v0[168] = v17;
  v0[167] = v15;
  uint64_t v18 = v0[127];
  sub_24A3E2068(v0[129], (uint64_t *)&unk_269793540);
  sub_24A448628(0x7375746174735FLL, 0xE700000000000000, v0[92], v18);
  if (v13(v18, 1, v12) != 1)
  {
    sub_24A4499D8(v0[127], v0[126], (uint64_t *)&unk_269793540);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      v0[93] = *(void *)v0[126];
      goto LABEL_19;
    }
    if (v19 == 1)
    {
      v0[94] = *(void *)v0[126];
LABEL_19:
      uint64_t v10 = sub_24A464A48();
      unint64_t v21 = v20;
      goto LABEL_22;
    }
    sub_24A44979C(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v21 = 0xE300000000000000;
LABEL_22:
  v0[170] = v21;
  v0[169] = v10;
  uint64_t v22 = v0[125];
  uint64_t v23 = v0[105];
  uint64_t v24 = v0[104];
  sub_24A3E2068(v0[127], (uint64_t *)&unk_269793540);
  uint64_t v25 = sub_24A438C50();
  v0[171] = v25;
  int v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v0[172] = v26;
  v0[173] = (v23 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v24);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v15;
  *(void *)(v27 + 24) = v17;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v10;
  *(void *)(v28 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_24A463FF8();
  os_log_type_t v29 = sub_24A4645D8();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 34;
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_24A449C00;
  *(void *)(v32 + 24) = v27;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24A449AE4;
  *(void *)(v33 + 24) = v32;
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = 34;
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = 8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_24A449C00;
  *(void *)(v36 + 24) = v28;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_24A449AE4;
  *(void *)(v37 + 24) = v36;
  v0[174] = __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_24A468BB0;
  *(void *)(v38 + 32) = sub_24A449BF8;
  *(void *)(v38 + 40) = v30;
  *(void *)(v38 + 48) = sub_24A449BF8;
  *(void *)(v38 + 56) = v31;
  *(void *)(v38 + 64) = sub_24A449AE8;
  *(void *)(v38 + 72) = v33;
  *(void *)(v38 + 80) = sub_24A449BF8;
  *(void *)(v38 + 88) = v34;
  *(void *)(v38 + 96) = sub_24A449BF8;
  *(void *)(v38 + 104) = v35;
  *(void *)(v38 + 112) = sub_24A449AE8;
  *(void *)(v38 + 120) = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v29))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v59 = 0;
    uint64_t v60 = v40;
    *(_WORD *)uint64_t v39 = 514;
    v39[2] = *(unsigned char *)(v30 + 16);
    if (v54)
    {

      return;
    }
    swift_release();
    uint64_t v39[3] = *(unsigned char *)(v31 + 16);
    uint64_t v58 = v39 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v58, (uint64_t)&v59, &v60, *(uint64_t (**)(void))(v33 + 16));
    swift_release();
    uint64_t v44 = v58;
    *uint64_t v58 = *(unsigned char *)(v34 + 16);
    swift_release();
    v44[1] = *(unsigned char *)(v35 + 16);
    uint64_t v58 = v44 + 2;
    swift_release();
    sub_24A448A7C((uint64_t *)&v58, (uint64_t)&v59, &v60, *(uint64_t (**)(void))(v37 + 16));
    uint64_t v45 = (void *)v0[125];
    uint64_t v46 = v0[105];
    uint64_t v47 = v0[104];
    swift_release();
    _os_log_impl(&dword_24A3DA000, oslog, v29, "sending one message %{public}s:%{public}s", v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v40, -1, -1);
    MEMORY[0x24C5C5D60](v39, -1, -1);

    uint64_t v43 = *(void (**)(id, uint64_t))(v46 + 8);
    v43(v45, v47);
  }
  else
  {
    id v55 = (id)v0[125];
    uint64_t v41 = v0[105];
    uint64_t v42 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v43 = *(void (**)(id, uint64_t))(v41 + 8);
    v43(v55, v42);
  }
  v0[175] = v43;
  uint64_t v48 = v0[98];
  uint64_t v49 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v49);
  v0[78] = v50;
  v0[79] = v51;
  uint64_t v56 = (void (*)(void *))(*(void *)(**(void **)(v48 + 160) + 152)
                                      + **(int **)(**(void **)(v48 + 160) + 152));
  int v52 = (void *)swift_task_alloc();
  v0[176] = v52;
  void *v52 = v0;
  v52[1] = sub_24A43D7DC;
  v56(v0 + 15);
}

uint64_t sub_24A43CC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 1288) = v2;
  swift_task_dealloc();
  uint64_t v7 = (_OWORD *)(v6 + 288);
  uint64_t v8 = *(void *)(v6 + 784);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v6 + 640) = *v7;
    sub_24A407ABC(v6 + 640);
    uint64_t v9 = sub_24A4437E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 1296) = a2;
    *(void *)(v6 + 1304) = a1;
    *(_OWORD *)(v6 + 656) = *v7;
    sub_24A407ABC(v6 + 656);
    uint64_t v9 = sub_24A43CE1C;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

void sub_24A43CE1C()
{
  uint64_t v58 = v0;
  uint64_t v1 = v0[163];
  uint64_t v50 = (void *)v0[161];
  v0[165] = v0[162];
  v0[164] = v1;
  uint64_t v2 = (void *)v0[146];
  uint64_t v3 = v0[99];
  v0[92] = sub_24A3ECFD8(MEMORY[0x263F8EE78]);
  xpc_dictionary_get_count(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
  sub_24A4641F8();
  uint64_t v4 = swift_allocObject();
  v0[166] = v4;
  *(void *)(v4 + 16) = v0 + 92;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24A449220;
  *(void *)(v5 + 24) = v4;
  v0[26] = sub_24A3F1134;
  v0[27] = v5;
  v0[22] = MEMORY[0x263EF8330];
  v0[23] = 1107296256;
  v0[24] = sub_24A3ED5F4;
  v0[25] = &block_descriptor_3;
  uint64_t v6 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v2, v6);
  swift_unknownObjectRelease();
  _Block_release(v6);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v2)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 4079420;
  uint64_t v8 = v0[129];
  sub_24A448628(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v8);
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) != 1)
  {
    sub_24A4499D8(v0[129], v0[128], (uint64_t *)&unk_269793540);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_7:
      uint64_t v12 = sub_24A464A48();
      unint64_t v14 = v13;
      goto LABEL_10;
    }
    sub_24A44979C(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v14 = 0xE300000000000000;
  uint64_t v12 = 4079420;
LABEL_10:
  v0[168] = v14;
  v0[167] = v12;
  uint64_t v15 = v0[127];
  sub_24A3E2068(v0[129], (uint64_t *)&unk_269793540);
  sub_24A448628(0x7375746174735FLL, 0xE700000000000000, v0[92], v15);
  if (v10(v15, 1, v9) != 1)
  {
    sub_24A4499D8(v0[127], v0[126], (uint64_t *)&unk_269793540);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2)
    {
      v0[93] = *(void *)v0[126];
      goto LABEL_15;
    }
    if (v16 == 1)
    {
      v0[94] = *(void *)v0[126];
LABEL_15:
      uint64_t v7 = sub_24A464A48();
      unint64_t v18 = v17;
      goto LABEL_18;
    }
    sub_24A44979C(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v18 = 0xE300000000000000;
LABEL_18:
  v0[170] = v18;
  v0[169] = v7;
  uint64_t v19 = v0[125];
  uint64_t v20 = v0[105];
  uint64_t v21 = v0[104];
  sub_24A3E2068(v0[127], (uint64_t *)&unk_269793540);
  uint64_t v22 = sub_24A438C50();
  v0[171] = v22;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v0[172] = v23;
  v0[173] = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v23(v19, v22, v21);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v12;
  *(void *)(v24 + 24) = v14;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v7;
  *(void *)(v25 + 24) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  log = sub_24A463FF8();
  os_log_type_t v51 = sub_24A4645D8();
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = 34;
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = 8;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_24A449C00;
  *(void *)(v28 + 24) = v24;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_24A449AE4;
  *(void *)(v29 + 24) = v28;
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 34;
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_24A449C00;
  *(void *)(v32 + 24) = v25;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24A449AE4;
  *(void *)(v33 + 24) = v32;
  v0[174] = __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24A468BB0;
  *(void *)(v34 + 32) = sub_24A449BF8;
  *(void *)(v34 + 40) = v26;
  *(void *)(v34 + 48) = sub_24A449BF8;
  *(void *)(v34 + 56) = v27;
  *(void *)(v34 + 64) = sub_24A449AE8;
  *(void *)(v34 + 72) = v29;
  *(void *)(v34 + 80) = sub_24A449BF8;
  *(void *)(v34 + 88) = v30;
  *(void *)(v34 + 96) = sub_24A449BF8;
  *(void *)(v34 + 104) = v31;
  *(void *)(v34 + 112) = sub_24A449AE8;
  *(void *)(v34 + 120) = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v51))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v56 = 0;
    uint64_t v57 = v36;
    *(_WORD *)uint64_t v35 = 514;
    _OWORD v35[2] = *(unsigned char *)(v26 + 16);
    if (v50)
    {
      swift_unknownObjectRelease();

      return;
    }
    uint64_t v40 = v36;
    swift_release();
    uint64_t v35[3] = *(unsigned char *)(v27 + 16);
    id v55 = v35 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v29 + 16));
    swift_release();
    uint64_t v41 = v55;
    unsigned char *v55 = *(unsigned char *)(v30 + 16);
    swift_release();
    v41[1] = *(unsigned char *)(v31 + 16);
    id v55 = v41 + 2;
    swift_release();
    sub_24A448A7C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v33 + 16));
    uint64_t v42 = v0[125];
    uint64_t v43 = v0[105];
    uint64_t v44 = v0[104];
    swift_release();
    _os_log_impl(&dword_24A3DA000, log, v51, "sending one message %{public}s:%{public}s", v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v40, -1, -1);
    MEMORY[0x24C5C5D60](v35, -1, -1);

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v39(v42, v44);
  }
  else
  {
    uint64_t v52 = v0[125];
    uint64_t v37 = v0[105];
    uint64_t v38 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v52, v38);
  }
  v0[175] = v39;
  uint64_t v45 = v0[98];
  uint64_t v46 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v46);
  v0[78] = v47;
  v0[79] = v48;
  id v53 = (void (*)(void *))(*(void *)(**(void **)(v45 + 160) + 152)
                                      + **(int **)(**(void **)(v45 + 160) + 152));
  uint64_t v49 = (void *)swift_task_alloc();
  v0[176] = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_24A43D7DC;
  v53(v0 + 15);
}

uint64_t sub_24A43D7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v6 + 784);
  if (v2)
  {

    uint64_t v9 = sub_24A444150;
  }
  else
  {
    *(void *)(v7 + 1416) = a2;
    *(void *)(v7 + 1424) = a1;
    uint64_t v9 = sub_24A43D928;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

uint64_t sub_24A43D928()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[179] = v1;
  void *v1 = v0;
  v1[1] = sub_24A43DA28;
  uint64_t v2 = v0[178];
  uint64_t v3 = v0[177];
  return sub_24A42CEB8((uint64_t)(v0 + 2), (uint64_t)(v0 + 15), v2, v3, 0x4D656E4F646E6553, 0xEE00656761737365);
}

uint64_t sub_24A43DA28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 784);
  if (v0)
  {

    uint64_t v4 = (void (*)())sub_24A449AE0;
  }
  else
  {
    uint64_t v4 = sub_24A43DB60;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

void sub_24A43DB60()
{
  uint64_t v142 = v0;
  *(void *)(v0 + 248) = &type metadata for AllEventFieldProvider;
  *(void *)(v0 + 256) = &off_26FE169A8;
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 224) = v1;
  long long v2 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 96) = v2;
  *(void *)(v1 + 112) = *(void *)(v0 + 112);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 64) = v4;
  sub_24A3EB694((void *)(v0 + 224));
  __swift_destroy_boxed_opaque_existential_0(v0 + 224);
  uint64_t v5 = *(void **)(v0 + 1440);
  uint64_t v6 = *(void *)(v0 + 624);
  *(void *)(v0 + 1448) = *(void *)(v0 + 616);
  *(void *)(v0 + 1456) = v6;
  *(void *)(v0 + 1464) = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_24A42508C();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 1256);
  if (*v7 == 1)
  {
    uint64_t v9 = *(void *)(v8 + 16);
    *(void *)(v0 + 1472) = v9;
    if (v9)
    {
      uint64_t v10 = *(void *)(v0 + 800);
      LODWORD(v11) = *(_DWORD *)(v10 + 80);
      *(_DWORD *)(v0 + 1664) = v11;
      uint64_t v11 = v11;
      os_log_t logd = (os_log_t)((v11 + 16) & ~v11);
      *(void *)(v0 + 1480) = *(void *)(v10 + 72);
      *(void *)(v0 + 1496) = 0;
      *(void *)(v0 + 1488) = v5;
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
      uint64_t v13 = *(void *)(v0 + 1368);
      uint64_t v121 = *(void *)(v0 + 1360);
      uint64_t v118 = *(void *)(v0 + 1352);
      uint64_t v116 = *(void *)(v0 + 1344);
      uint64_t v114 = *(void *)(v0 + 1336);
      uint64_t v14 = *(void *)(v0 + 992);
      uint64_t v15 = *(void *)(v0 + 832);
      uint64_t v16 = *(void *)(v0 + 824);
      uint64_t v133 = v5;
      uint64_t v17 = *(void *)(v0 + 816);
      sub_24A449908(v8 + ((v11 + 32) & ~v11), v16, type metadata accessor for SessionConfiguration.Backend);
      v12(v14, v13, v15);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v114;
      *(void *)(v18 + 24) = v116;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v118;
      *(void *)(v19 + 24) = v121;
      sub_24A449908(v16, v17, type metadata accessor for SessionConfiguration.Backend);
      uint64_t v113 = swift_allocObject();
      sub_24A449970(v17, (uint64_t)logd + v113, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      osos_log_t log = sub_24A463FF8();
      os_log_type_t v122 = sub_24A4645D8();
      os_log_t log = (os_log_t)swift_allocObject();
      LOBYTE(log[2].isa) = 34;
      uint64_t v125 = swift_allocObject();
      *(unsigned char *)(v125 + 16) = 8;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_24A449C00;
      *(void *)(v20 + 24) = v18;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_24A449AE4;
      *(void *)(v21 + 24) = v20;
      uint64_t v115 = swift_allocObject();
      *(unsigned char *)(v115 + 16) = 34;
      uint64_t v124 = swift_allocObject();
      *(unsigned char *)(v124 + 16) = 8;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_24A449C00;
      *(void *)(v22 + 24) = v19;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_24A449AE4;
      *(void *)(v23 + 24) = v22;
      uint64_t v24 = v23;
      uint64_t v119 = v23;
      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = 34;
      uint64_t v117 = swift_allocObject();
      *(unsigned char *)(v117 + 16) = 8;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_24A44945C;
      *(void *)(v26 + 24) = v113;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_24A449AE4;
      *(void *)(v27 + 24) = v26;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_24A468BC0;
      *(void *)(v28 + 32) = sub_24A449BF8;
      *(void *)(v28 + 40) = log;
      *(void *)(v28 + 48) = sub_24A449BF8;
      *(void *)(v28 + 56) = v125;
      *(void *)(v28 + 64) = sub_24A449AE8;
      *(void *)(v28 + 72) = v21;
      *(void *)(v28 + 80) = sub_24A449BF8;
      *(void *)(v28 + 88) = v115;
      *(void *)(v28 + 96) = sub_24A449BF8;
      *(void *)(v28 + 104) = v124;
      *(void *)(v28 + 112) = sub_24A449AE8;
      *(void *)(v28 + 120) = v24;
      *(void *)(v28 + 128) = sub_24A449BF8;
      *(void *)(v28 + 136) = v25;
      *(void *)(v28 + 144) = sub_24A449BF8;
      *(void *)(v28 + 152) = v117;
      *(void *)(v28 + 160) = sub_24A449AE8;
      *(void *)(v28 + 168) = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, v122))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(void *)(v0 + 720) = 0;
        *(void *)(v0 + 728) = v30;
        *(_WORD *)uint64_t v29 = 770;
        v29[2] = (uint8_t)log[2].isa;
        *(void *)(v0 + 712) = v29 + 3;
        uint64_t v31 = v133;
        if (v133)
        {
          swift_unknownObjectRelease();
LABEL_14:

          return;
        }
        uint64_t v138 = v30;
        swift_release();
        uint64_t v90 = *(unsigned char **)(v0 + 712);
        unsigned char *v90 = *(unsigned char *)(v125 + 16);
        *(void *)(v0 + 712) = v90 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v21 + 16));
        swift_release();
        os_log_type_t v91 = *(unsigned char **)(v0 + 712);
        *os_log_type_t v91 = *(unsigned char *)(v115 + 16);
        *(void *)(v0 + 712) = v91 + 1;
        swift_release();
        uint64_t v92 = *(unsigned char **)(v0 + 712);
        unsigned char *v92 = *(unsigned char *)(v124 + 16);
        *(void *)(v0 + 712) = v92 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v119 + 16));
        swift_release();
        uint64_t v93 = *(unsigned char **)(v0 + 712);
        *uint64_t v93 = *(unsigned char *)(v25 + 16);
        *(void *)(v0 + 712) = v93 + 1;
        swift_release();
        uint64_t v94 = *(unsigned char **)(v0 + 712);
        unsigned char *v94 = *(unsigned char *)(v117 + 16);
        *(void *)(v0 + 712) = v94 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v27 + 16));
        uint64_t v95 = *(void *)(v0 + 992);
        uint64_t v96 = *(void *)(v0 + 840);
        uint64_t v97 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl(&dword_24A3DA000, oslog, v122, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v29, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v138, -1, -1);
        MEMORY[0x24C5C5D60](v29, -1, -1);

        int v75 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        v75(v95, v97);
      }
      else
      {
        uint64_t v136 = *(void *)(v0 + 992);
        uint64_t v73 = *(void *)(v0 + 840);
        uint64_t v74 = *(void *)(v0 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        int v75 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
        v75(v136, v74);
      }
      *(void *)(v0 + 1504) = v75;
      uint64_t v98 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
      *(void *)(v0 + 1512) = v98;
      *(void *)(v0 + 1520) = sub_24A3FC7EC();
      *(void *)(v0 + 1528) = v99;
      int v78 = sub_24A43EF50;
      uint64_t v76 = v98;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 1400);
  *(void *)(v0 + 1544) = v32;
  if (*(void *)(v0 + 1312))
  {
    uint64_t v120 = v32;
    uint64_t v134 = v5;
    uint64_t v33 = *(void *)(v0 + 1360);
    uint64_t v34 = *(void *)(v0 + 1352);
    uint64_t v35 = *(void *)(v0 + 1344);
    uint64_t v36 = *(void *)(v0 + 1336);
    uint64_t v123 = *(void *)(v0 + 1320);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = v35;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v34;
    *(void *)(v38 + 24) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    loga = sub_24A463FF8();
    os_log_type_t v39 = sub_24A4645D8();
    uint64_t v40 = swift_allocObject();
    *(unsigned char *)(v40 + 16) = 34;
    uint64_t v41 = swift_allocObject();
    *(unsigned char *)(v41 + 16) = 8;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_24A449C00;
    *(void *)(v42 + 24) = v37;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_24A449AE4;
    *(void *)(v43 + 24) = v42;
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = 34;
    uint64_t v45 = swift_allocObject();
    *(unsigned char *)(v45 + 16) = 8;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_24A449C00;
    *(void *)(v46 + 24) = v38;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_24A449AE4;
    *(void *)(v47 + 24) = v46;
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_24A468BB0;
    *(void *)(v48 + 32) = sub_24A449BF8;
    *(void *)(v48 + 40) = v40;
    *(void *)(v48 + 48) = sub_24A449BF8;
    *(void *)(v48 + 56) = v41;
    *(void *)(v48 + 64) = sub_24A449AE8;
    *(void *)(v48 + 72) = v43;
    *(void *)(v48 + 80) = sub_24A449BF8;
    *(void *)(v48 + 88) = v44;
    *(void *)(v48 + 96) = sub_24A449BF8;
    *(void *)(v48 + 104) = v45;
    *(void *)(v48 + 112) = sub_24A449AE8;
    *(void *)(v48 + 120) = v47;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(loga, v39))
    {
      os_log_type_t v126 = v39;
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v140 = 0;
      uint64_t v141 = v50;
      *(_WORD *)uint64_t v49 = 514;
      v49[2] = *(unsigned char *)(v40 + 16);
      if (v134) {
        goto LABEL_13;
      }
      uint64_t v79 = v50;
      swift_release();
      v49[3] = *(unsigned char *)(v41 + 16);
      uint64_t v139 = v49 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v139, (uint64_t)&v140, &v141, *(uint64_t (**)(void))(v43 + 16));
      swift_release();
      uint64_t v80 = v139;
      *uint64_t v139 = *(unsigned char *)(v44 + 16);
      swift_release();
      v80[1] = *(unsigned char *)(v45 + 16);
      uint64_t v139 = v80 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v139, (uint64_t)&v140, &v141, *(uint64_t (**)(void))(v47 + 16));
      uint64_t v81 = *(void *)(v0 + 984);
      uint64_t v82 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, loga, v126, "processing sendOneMessage, immediate %{public}s:%{public}s", v49, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v79, -1, -1);
      MEMORY[0x24C5C5D60](v49, -1, -1);

      uint64_t v71 = v81;
      uint64_t v72 = v82;
    }
    else
    {
      uint64_t v135 = *(void *)(v0 + 984);
      uint64_t v70 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v71 = v135;
      uint64_t v72 = v70;
    }
    v120(v71, v72);
    uint64_t v83 = *(void *)(v0 + 1464);
    uint64_t v84 = *(void *)(v0 + 1456);
    uint64_t v85 = *(void *)(v0 + 1448);
    uint64_t ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793580);
    uint64_t v87 = swift_allocObject();
    *(void *)(v0 + 1552) = v87;
    *(_OWORD *)(v87 + 16) = xmmword_24A466020;
    *(void *)(v87 + 32) = v85;
    *(void *)(v87 + 40) = v84;
    *(void *)(v87 + 48) = v83;
    os_log_t logc = (os_log_t)(*(void *)(v123 + 8) + **(int **)(v123 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v88 = (void *)swift_task_alloc();
    *(void *)(v0 + 1560) = v88;
    *uint64_t v88 = v0;
    v88[1] = sub_24A44035C;
    ((void (*)(uint64_t, uint64_t, uint64_t))logc)(v87, ObjectType, v123);
  }
  else
  {
    uint64_t v51 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (!v51)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1592) = v5;
      uint64_t v76 = *(uint64_t **)(v0 + 1224);
      uint64_t v77 = *v76;
      *(void *)(v0 + 1600) = *(void *)(*v76 + 256);
      *(void *)(v0 + 1608) = (v77 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
      int v78 = sub_24A441718;
LABEL_27:
      MEMORY[0x270FA2498](v78, v76, 0);
      return;
    }
    uint64_t v134 = v5;
    uint64_t v52 = *(void *)(v0 + 1360);
    uint64_t v53 = *(void *)(v0 + 1352);
    uint64_t v54 = *(void *)(v0 + 1344);
    uint64_t v55 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v55;
    *(void *)(v56 + 24) = v54;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v53;
    *(void *)(v57 + 24) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_24A463FF8();
    os_log_type_t logb = sub_24A4645D8();
    uint64_t v59 = swift_allocObject();
    *(unsigned char *)(v59 + 16) = 34;
    uint64_t v60 = swift_allocObject();
    *(unsigned char *)(v60 + 16) = 8;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_24A449C00;
    *(void *)(v61 + 24) = v56;
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = sub_24A449AE4;
    *(void *)(v62 + 24) = v61;
    uint64_t v63 = swift_allocObject();
    *(unsigned char *)(v63 + 16) = 34;
    uint64_t v64 = swift_allocObject();
    *(unsigned char *)(v64 + 16) = 8;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_24A449C00;
    *(void *)(v65 + 24) = v57;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_24A449AE4;
    *(void *)(v66 + 24) = v65;
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_24A468BB0;
    *(void *)(v67 + 32) = sub_24A449BF8;
    *(void *)(v67 + 40) = v59;
    *(void *)(v67 + 48) = sub_24A449BF8;
    *(void *)(v67 + 56) = v60;
    *(void *)(v67 + 64) = sub_24A449AE8;
    *(void *)(v67 + 72) = v62;
    *(void *)(v67 + 80) = sub_24A449BF8;
    *(void *)(v67 + 88) = v63;
    *(void *)(v67 + 96) = sub_24A449BF8;
    *(void *)(v67 + 104) = v64;
    *(void *)(v67 + 112) = sub_24A449AE8;
    *(void *)(v67 + 120) = v66;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v58, logb))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v140 = 0;
      uint64_t v141 = v69;
      *(_WORD *)uint64_t v68 = 514;
      v68[2] = *(unsigned char *)(v59 + 16);
      if (v134)
      {
LABEL_13:
        swift_unknownObjectRelease();
        uint64_t v31 = v134;
        goto LABEL_14;
      }
      uint64_t v100 = v69;
      swift_release();
      v68[3] = *(unsigned char *)(v60 + 16);
      uint64_t v139 = v68 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v139, (uint64_t)&v140, &v141, *(uint64_t (**)(void))(v62 + 16));
      swift_release();
      uint64_t v101 = v58;
      uint64_t v102 = v139;
      *uint64_t v139 = *(unsigned char *)(v63 + 16);
      swift_release();
      v102[1] = *(unsigned char *)(v64 + 16);
      uint64_t v139 = v102 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v139, (uint64_t)&v140, &v141, *(uint64_t (**)(void))(v66 + 16));
      uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v104 = *(void *)(v0 + 968);
      uint64_t v105 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, v101, logb, "caching sendOneMessage %{public}s:%{public}s", v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v100, -1, -1);
      MEMORY[0x24C5C5D60](v68, -1, -1);

      v103(v104, v105);
    }
    else
    {
      os_log_t loge = *(os_log_t *)(v0 + 968);
      uint64_t v137 = *(void (**)(os_log_t, uint64_t))(v0 + 1544);
      uint64_t v89 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v137(loge, v89);
    }
    sub_24A463E38();
    xpc_object_t v106 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v106;
    *xpc_object_t v106 = v0;
    v106[1] = sub_24A440F88;
    uint64_t v107 = *(void *)(v0 + 1464);
    uint64_t v108 = *(void *)(v0 + 1456);
    uint64_t v109 = *(void *)(v0 + 1448);
    double v110 = *(double *)(v0 + 1216);
    uint64_t v111 = *(void *)(v0 + 1056);
    sub_24A3F39EC(v0 + 120, v111, v110, v109, v108, v107);
  }
}

uint64_t sub_24A43EF50()
{
  uint64_t v1 = v0[186];
  sub_24A3E7C9C(v0[190], v0[191], v0[181], v0[182], v0[183]);
  v0[192] = v1;
  if (v1)
  {
    uint64_t v2 = v0[98];
    long long v3 = sub_24A445448;
  }
  else
  {
    uint64_t v4 = v0[98];
    swift_bridgeObjectRelease();
    long long v3 = sub_24A43F004;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

void sub_24A43F004()
{
  uint64_t v131 = v0;
  sub_24A44979C(*(void *)(v0 + 824), type metadata accessor for SessionConfiguration.Backend);
  uint64_t v1 = *(void **)(v0 + 1536);
  uint64_t v2 = *(void *)(v0 + 1496) + 1;
  if (v2 != *(void *)(v0 + 1472))
  {
    *(void *)(v0 + 1496) = v2;
    *(void *)(v0 + 1488) = v1;
    uint64_t v22 = *(unsigned __int8 *)(v0 + 1664);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
    uint64_t v24 = *(void *)(v0 + 1368);
    os_log_t logc = *(os_log_t *)(v0 + 1360);
    uint64_t v116 = *(void *)(v0 + 1352);
    uint64_t v108 = *(void *)(v0 + 1344);
    xpc_object_t v106 = v1;
    uint64_t v107 = *(void *)(v0 + 1336);
    uint64_t v25 = *(void *)(v0 + 992);
    uint64_t v26 = (v22 + 16) & ~v22;
    uint64_t v27 = *(void *)(v0 + 832);
    uint64_t v28 = *(void *)(v0 + 824);
    uint64_t v29 = *(void *)(v0 + 816);
    sub_24A449908(*(void *)(v0 + 1256) + ((v22 + 32) & ~v22) + *(void *)(v0 + 1480) * v2, v28, type metadata accessor for SessionConfiguration.Backend);
    v23(v25, v24, v27);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v107;
    *(void *)(v30 + 24) = v108;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v116;
    *(void *)(v31 + 24) = logc;
    sub_24A449908(v28, v29, type metadata accessor for SessionConfiguration.Backend);
    uint64_t v112 = swift_allocObject();
    sub_24A449970(v29, v112 + v26, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t loga = sub_24A463FF8();
    os_log_type_t v117 = sub_24A4645D8();
    os_log_t loga = (os_log_t)swift_allocObject();
    LOBYTE(loga[2].isa) = 34;
    uint64_t v32 = swift_allocObject();
    *(unsigned char *)(v32 + 16) = 8;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_24A449C00;
    *(void *)(v33 + 24) = v30;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_24A449AE4;
    *(void *)(v34 + 24) = v33;
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = 34;
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = 8;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_24A449C00;
    *(void *)(v37 + 24) = v31;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_24A449AE4;
    *(void *)(v38 + 24) = v37;
    uint64_t v39 = swift_allocObject();
    *(unsigned char *)(v39 + 16) = 34;
    uint64_t v40 = swift_allocObject();
    *(unsigned char *)(v40 + 16) = 8;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_24A44945C;
    *(void *)(v41 + 24) = v112;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_24A449AE4;
    *(void *)(v42 + 24) = v41;
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_24A468BC0;
    *(void *)(v43 + 32) = sub_24A449BF8;
    *(void *)(v43 + 40) = loga;
    *(void *)(v43 + 48) = sub_24A449BF8;
    *(void *)(v43 + 56) = v32;
    *(void *)(v43 + 64) = sub_24A449AE8;
    *(void *)(v43 + 72) = v34;
    *(void *)(v43 + 80) = sub_24A449BF8;
    *(void *)(v43 + 88) = v35;
    *(void *)(v43 + 96) = sub_24A449BF8;
    *(void *)(v43 + 104) = v36;
    *(void *)(v43 + 112) = sub_24A449AE8;
    *(void *)(v43 + 120) = v38;
    *(void *)(v43 + 128) = sub_24A449BF8;
    *(void *)(v43 + 136) = v39;
    *(void *)(v43 + 144) = sub_24A449BF8;
    *(void *)(v43 + 152) = v40;
    *(void *)(v43 + 160) = sub_24A449AE8;
    *(void *)(v43 + 168) = v42;
    swift_retain();
    uint64_t v114 = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v117))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)(v0 + 720) = 0;
      *(void *)(v0 + 728) = v45;
      *(_WORD *)uint64_t v44 = 770;
      v44[2] = (uint8_t)loga[2].isa;
      *(void *)(v0 + 712) = v44 + 3;
      if (v106)
      {
LABEL_8:
        swift_unknownObjectRelease();
        uint64_t v1 = v106;
        goto LABEL_9;
      }
      os_log_t logd = (os_log_t)v45;
      swift_release();
      uint64_t v70 = *(unsigned char **)(v0 + 712);
      *uint64_t v70 = *(unsigned char *)(v114 + 16);
      *(void *)(v0 + 712) = v70 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v34 + 16));
      swift_release();
      uint64_t v71 = *(unsigned char **)(v0 + 712);
      *uint64_t v71 = *(unsigned char *)(v35 + 16);
      *(void *)(v0 + 712) = v71 + 1;
      swift_release();
      uint64_t v72 = *(unsigned char **)(v0 + 712);
      *uint64_t v72 = *(unsigned char *)(v36 + 16);
      *(void *)(v0 + 712) = v72 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v38 + 16));
      swift_release();
      uint64_t v73 = *(unsigned char **)(v0 + 712);
      *uint64_t v73 = *(unsigned char *)(v39 + 16);
      *(void *)(v0 + 712) = v73 + 1;
      swift_release();
      uint64_t v74 = *(unsigned char **)(v0 + 712);
      unsigned char *v74 = *(unsigned char *)(v40 + 16);
      *(void *)(v0 + 712) = v74 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v42 + 16));
      uint64_t v75 = *(void *)(v0 + 992);
      uint64_t v76 = *(void *)(v0 + 840);
      uint64_t v77 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, osloga, v117, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v44, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](logd, -1, -1);
      MEMORY[0x24C5C5D60](v44, -1, -1);

      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v47(v75, v77);
    }
    else
    {
      uint64_t v118 = *(void *)(v0 + 992);
      uint64_t v46 = *(void *)(v0 + 840);
      uint64_t v113 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v47(v118, v113);
    }
    *(void *)(v0 + 1504) = v47;
    int v78 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
    *(void *)(v0 + 1512) = v78;
    *(void *)(v0 + 1520) = sub_24A3FC7EC();
    *(void *)(v0 + 1528) = v79;
    uint64_t v80 = sub_24A43EF50;
    uint64_t v81 = v78;
LABEL_20:
    MEMORY[0x270FA2498](v80, v81, 0);
    return;
  }
  long long v3 = *(NSObject **)(v0 + 1504);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1544) = v3;
  if (!*(void *)(v0 + 1312))
  {
    uint64_t v48 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (v48)
    {
      xpc_object_t v106 = v1;
      uint64_t v49 = *(void *)(v0 + 1360);
      uint64_t v50 = *(void *)(v0 + 1352);
      uint64_t v51 = *(void *)(v0 + 1344);
      uint64_t v52 = *(void *)(v0 + 1336);
      (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v52;
      *(void *)(v53 + 24) = v51;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v50;
      *(void *)(v54 + 24) = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_24A463FF8();
      os_log_type_t logb = sub_24A4645D8();
      uint64_t v56 = swift_allocObject();
      *(unsigned char *)(v56 + 16) = 34;
      uint64_t v57 = swift_allocObject();
      *(unsigned char *)(v57 + 16) = 8;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_24A449C00;
      *(void *)(v58 + 24) = v53;
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = sub_24A449AE4;
      *(void *)(v59 + 24) = v58;
      uint64_t v60 = swift_allocObject();
      *(unsigned char *)(v60 + 16) = 34;
      uint64_t v61 = swift_allocObject();
      *(unsigned char *)(v61 + 16) = 8;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_24A449C00;
      *(void *)(v62 + 24) = v54;
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = sub_24A449AE4;
      *(void *)(v63 + 24) = v62;
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_24A468BB0;
      *(void *)(v64 + 32) = sub_24A449BF8;
      *(void *)(v64 + 40) = v56;
      *(void *)(v64 + 48) = sub_24A449BF8;
      *(void *)(v64 + 56) = v57;
      *(void *)(v64 + 64) = sub_24A449AE8;
      *(void *)(v64 + 72) = v59;
      *(void *)(v64 + 80) = sub_24A449BF8;
      *(void *)(v64 + 88) = v60;
      *(void *)(v64 + 96) = sub_24A449BF8;
      *(void *)(v64 + 104) = v61;
      *(void *)(v64 + 112) = sub_24A449AE8;
      *(void *)(v64 + 120) = v63;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v55, logb))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v129 = 0;
        uint64_t v130 = v66;
        *(_WORD *)uint64_t v65 = 514;
        v65[2] = *(unsigned char *)(v56 + 16);
        if (v106) {
          goto LABEL_8;
        }
        uint64_t v94 = v66;
        swift_release();
        v65[3] = *(unsigned char *)(v57 + 16);
        uint64_t v128 = v65 + 4;
        swift_release();
        sub_24A448A7C((uint64_t *)&v128, (uint64_t)&v129, &v130, *(uint64_t (**)(void))(v59 + 16));
        swift_release();
        uint64_t v95 = v55;
        uint64_t v96 = v128;
        *uint64_t v128 = *(unsigned char *)(v60 + 16);
        swift_release();
        v96[1] = *(unsigned char *)(v61 + 16);
        uint64_t v128 = v96 + 2;
        swift_release();
        sub_24A448A7C((uint64_t *)&v128, (uint64_t)&v129, &v130, *(uint64_t (**)(void))(v63 + 16));
        uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
        uint64_t v98 = *(void *)(v0 + 968);
        uint64_t v99 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl(&dword_24A3DA000, v95, logb, "caching sendOneMessage %{public}s:%{public}s", v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v94, -1, -1);
        MEMORY[0x24C5C5D60](v65, -1, -1);

        v97(v98, v99);
      }
      else
      {
        uint64_t v121 = *(void *)(v0 + 968);
        os_log_t loge = *(os_log_t *)(v0 + 1544);
        uint64_t v93 = *(void *)(v0 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint64_t, uint64_t))loge)(v121, v93);
      }
      sub_24A463E38();
      uint64_t v100 = (void *)swift_task_alloc();
      *(void *)(v0 + 1576) = v100;
      *uint64_t v100 = v0;
      v100[1] = sub_24A440F88;
      uint64_t v101 = *(void *)(v0 + 1464);
      uint64_t v102 = *(void *)(v0 + 1456);
      uint64_t v103 = *(void *)(v0 + 1448);
      double v104 = *(double *)(v0 + 1216);
      uint64_t v105 = *(void *)(v0 + 1056);
      sub_24A3F39EC(v0 + 120, v105, v104, v103, v102, v101);
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1592) = v1;
    uint64_t v81 = *(uint64_t **)(v0 + 1224);
    uint64_t v82 = *v81;
    *(void *)(v0 + 1600) = *(void *)(*v81 + 256);
    *(void *)(v0 + 1608) = (v82 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
    uint64_t v80 = sub_24A441718;
    goto LABEL_20;
  }
  osos_log_t log = v3;
  uint64_t v4 = *(void *)(v0 + 1360);
  uint64_t v5 = *(void *)(v0 + 1352);
  uint64_t v6 = *(void *)(v0 + 1344);
  uint64_t v7 = *(void *)(v0 + 1336);
  uint64_t v111 = *(void *)(v0 + 1320);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  os_log_t log = sub_24A463FF8();
  os_log_type_t v10 = sub_24A4645D8();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24A449C00;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24A449AE4;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 34;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24A449C00;
  *(void *)(v17 + 24) = v9;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24A449AE4;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24A468BB0;
  *(void *)(v19 + 32) = sub_24A449BF8;
  *(void *)(v19 + 40) = v11;
  *(void *)(v19 + 48) = sub_24A449BF8;
  *(void *)(v19 + 56) = v12;
  *(void *)(v19 + 64) = sub_24A449AE8;
  *(void *)(v19 + 72) = v14;
  *(void *)(v19 + 80) = sub_24A449BF8;
  *(void *)(v19 + 88) = v15;
  *(void *)(v19 + 96) = sub_24A449BF8;
  *(void *)(v19 + 104) = v16;
  *(void *)(v19 + 112) = sub_24A449AE8;
  *(void *)(v19 + 120) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v10))
  {
    os_log_type_t v115 = v10;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v129 = 0;
    uint64_t v130 = v21;
    *(_WORD *)uint64_t v20 = 514;
    void v20[2] = *(unsigned char *)(v11 + 16);
    if (v1)
    {
      swift_unknownObjectRelease();
LABEL_9:

      return;
    }
    uint64_t v83 = v21;
    swift_release();
    v20[3] = *(unsigned char *)(v12 + 16);
    uint64_t v128 = v20 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v128, (uint64_t)&v129, &v130, *(uint64_t (**)(void))(v14 + 16));
    swift_release();
    uint64_t v84 = v128;
    *uint64_t v128 = *(unsigned char *)(v15 + 16);
    swift_release();
    v84[1] = *(unsigned char *)(v16 + 16);
    uint64_t v128 = v84 + 2;
    swift_release();
    sub_24A448A7C((uint64_t *)&v128, (uint64_t)&v129, &v130, *(uint64_t (**)(void))(v18 + 16));
    uint64_t v85 = *(void *)(v0 + 984);
    uint64_t v86 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_24A3DA000, log, v115, "processing sendOneMessage, immediate %{public}s:%{public}s", v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v83, -1, -1);
    MEMORY[0x24C5C5D60](v20, -1, -1);

    uint64_t v68 = v85;
    uint64_t v69 = v86;
  }
  else
  {
    uint64_t v119 = *(void *)(v0 + 984);
    uint64_t v67 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v68 = v119;
    uint64_t v69 = v67;
  }
  ((void (*)(uint64_t, uint64_t))oslog)(v68, v69);
  uint64_t v87 = *(void *)(v0 + 1464);
  uint64_t v88 = *(void *)(v0 + 1456);
  uint64_t v89 = *(void *)(v0 + 1448);
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793580);
  uint64_t v91 = swift_allocObject();
  *(void *)(v0 + 1552) = v91;
  *(_OWORD *)(v91 + 16) = xmmword_24A466020;
  *(void *)(v91 + 32) = v89;
  *(void *)(v91 + 40) = v88;
  *(void *)(v91 + 48) = v87;
  uint64_t v120 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 + 8) + **(int **)(v111 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v92 = (void *)swift_task_alloc();
  *(void *)(v0 + 1560) = v92;
  void *v92 = v0;
  v92[1] = sub_24A44035C;
  v120(v91, ObjectType, v111);
}

uint64_t sub_24A44035C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = sub_24A446F44;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24A440484;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

void sub_24A440484()
{
  uint64_t v76 = v0;
  uint64_t v1 = *(void *)(v0 + 1360);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 976), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  osos_log_t log = sub_24A463FF8();
  os_log_type_t v7 = sub_24A4645D8();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 34;
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24A449C00;
  *(void *)(v10 + 24) = v5;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24A449AE4;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 34;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24A449C00;
  *(void *)(v14 + 24) = v6;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24A449AE4;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24A468BB0;
  *(void *)(v16 + 32) = sub_24A449BF8;
  *(void *)(v16 + 40) = v8;
  *(void *)(v16 + 48) = sub_24A449BF8;
  *(void *)(v16 + 56) = v9;
  *(void *)(v16 + 64) = sub_24A449AE8;
  *(void *)(v16 + 72) = v11;
  *(void *)(v16 + 80) = sub_24A449BF8;
  *(void *)(v16 + 88) = v12;
  *(void *)(v16 + 96) = sub_24A449BF8;
  *(void *)(v16 + 104) = v13;
  *(void *)(v16 + 112) = sub_24A449AE8;
  *(void *)(v16 + 120) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v66 = v12;
    uint64_t v17 = *(void *)(v0 + 1568);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v74 = 0;
    uint64_t v75 = v19;
    *(_WORD *)uint64_t v18 = 514;
    void v18[2] = *(unsigned char *)(v8 + 16);
    uint64_t v20 = *(void **)(v0 + 1568);
    if (v17)
    {
LABEL_24:
      swift_unknownObjectRelease();

      return;
    }
    uint64_t v21 = v19;
    swift_release();
    id v18[3] = *(unsigned char *)(v9 + 16);
    uint64_t v73 = v18 + 4;
    uint64_t v22 = *(void *)(v0 + 1568);
    if (v20)
    {
      uint64_t v20 = *(void **)(v0 + 1568);
      goto LABEL_24;
    }
    swift_release();
    sub_24A448A7C((uint64_t *)&v73, (uint64_t)&v74, &v75, *(uint64_t (**)(void))(v11 + 16));
    uint64_t v57 = *(void *)(v0 + 1568);
    if (v22)
    {
      uint64_t v20 = *(void **)(v0 + 1568);
      goto LABEL_24;
    }
    swift_release();
    uint64_t v58 = v73;
    *uint64_t v73 = *(unsigned char *)(v66 + 16);
    uint64_t v20 = *(void **)(v0 + 1568);
    if (v57) {
      goto LABEL_24;
    }
    swift_release();
    v58[1] = *(unsigned char *)(v13 + 16);
    uint64_t v73 = v58 + 2;
    uint64_t v59 = *(void *)(v0 + 1568);
    if (v20)
    {
      uint64_t v20 = *(void **)(v0 + 1568);
      goto LABEL_24;
    }
    swift_release();
    sub_24A448A7C((uint64_t *)&v73, (uint64_t)&v74, &v75, *(uint64_t (**)(void))(v15 + 16));
    if (v59)
    {
      uint64_t v20 = *(void **)(v0 + 1568);
      goto LABEL_24;
    }
    uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v61 = *(void *)(v0 + 976);
    uint64_t v62 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_24A3DA000, oslog, v7, "processed sendOneMessage, immediate %{public}s:%{public}s", v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v21, -1, -1);
    MEMORY[0x24C5C5D60](v18, -1, -1);

    swift_unknownObjectRelease();
    v60(v61, v62);
  }
  else
  {
    uint64_t v64 = *(void *)(v0 + 976);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v63 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    v67(v64, v63);
  }
  uint64_t v23 = *(void **)(v0 + 1568);
  uint64_t v24 = *(void *)(*(void *)(v0 + 1256) + 16);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v0 + 1360);
  if (v24)
  {
    uint64_t v65 = v23;
    uint64_t v26 = *(void *)(v0 + 1352);
    uint64_t v27 = *(void *)(v0 + 1344);
    uint64_t v28 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v27;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v26;
    *(void *)(v30 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t loga = sub_24A463FF8();
    os_log_type_t v31 = sub_24A4645D8();
    uint64_t v32 = swift_allocObject();
    *(unsigned char *)(v32 + 16) = 34;
    uint64_t v33 = swift_allocObject();
    *(unsigned char *)(v33 + 16) = 8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_24A449C00;
    *(void *)(v34 + 24) = v29;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = sub_24A449AE4;
    *(void *)(v35 + 24) = v34;
    uint64_t v36 = swift_allocObject();
    *(unsigned char *)(v36 + 16) = 34;
    uint64_t v37 = swift_allocObject();
    *(unsigned char *)(v37 + 16) = 8;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_24A449C00;
    *(void *)(v38 + 24) = v30;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_24A449AE4;
    *(void *)(v39 + 24) = v38;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_24A468BB0;
    *(void *)(v40 + 32) = sub_24A449BF8;
    *(void *)(v40 + 40) = v32;
    *(void *)(v40 + 48) = sub_24A449BF8;
    *(void *)(v40 + 56) = v33;
    *(void *)(v40 + 64) = sub_24A449AE8;
    *(void *)(v40 + 72) = v35;
    *(void *)(v40 + 80) = sub_24A449BF8;
    *(void *)(v40 + 88) = v36;
    *(void *)(v40 + 96) = sub_24A449BF8;
    *(void *)(v40 + 104) = v37;
    *(void *)(v40 + 112) = sub_24A449AE8;
    *(void *)(v40 + 120) = v39;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v69 = v31;
    if (os_log_type_enabled(osloga, v31))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v74 = 0;
      uint64_t v75 = v42;
      *(_WORD *)uint64_t v41 = 514;
      v41[2] = *(unsigned char *)(v32 + 16);
      uint64_t v20 = v65;
      if (v65) {
        goto LABEL_24;
      }
      uint64_t v43 = v42;
      swift_release();
      v41[3] = *(unsigned char *)(v33 + 16);
      uint64_t v73 = v41 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v73, (uint64_t)&v74, &v75, *(uint64_t (**)(void))(v35 + 16));
      swift_release();
      uint64_t v44 = v73;
      *uint64_t v73 = *(unsigned char *)(v36 + 16);
      swift_release();
      v44[1] = *(unsigned char *)(v37 + 16);
      uint64_t v73 = v44 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v73, (uint64_t)&v74, &v75, *(uint64_t (**)(void))(v39 + 16));
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v46 = *(void *)(v0 + 968);
      uint64_t v47 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, osloga, v69, "caching sendOneMessage %{public}s:%{public}s", v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v43, -1, -1);
      MEMORY[0x24C5C5D60](v41, -1, -1);

      v45(v46, v47);
    }
    else
    {
      uint64_t v68 = *(void *)(v0 + 968);
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v50 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v70(v68, v50);
    }
    sub_24A463E38();
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_24A440F88;
    uint64_t v52 = *(void *)(v0 + 1464);
    uint64_t v53 = *(void *)(v0 + 1456);
    uint64_t v54 = *(void *)(v0 + 1448);
    double v55 = *(double *)(v0 + 1216);
    uint64_t v56 = *(void *)(v0 + 1056);
    sub_24A3F39EC(v0 + 120, v56, v55, v54, v53, v52);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1592) = v23;
    uint64_t v48 = *(uint64_t **)(v0 + 1224);
    uint64_t v49 = *v48;
    *(void *)(v0 + 1600) = *(void *)(*v48 + 256);
    *(void *)(v0 + 1608) = (v49 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
    MEMORY[0x270FA2498](sub_24A441718, v48, 0);
  }
}

uint64_t sub_24A440F88()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1584) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = v2[132];
    uint64_t v3 = v2[131];
    uint64_t v4 = v2[130];
    uint64_t v5 = v2[98];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
    uint64_t v6 = sub_24A447850;
  }
  else
  {
    uint64_t v7 = v2[132];
    uint64_t v8 = v2[131];
    uint64_t v9 = v2[130];
    uint64_t v5 = v2[98];
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_24A4411B0;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

void sub_24A4411B0()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 1360);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 960), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  os_log_t log = sub_24A463FF8();
  os_log_type_t v31 = sub_24A4645D8();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24A449C00;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24A449AE4;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24A449C00;
  *(void *)(v13 + 24) = v6;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24A449AE4;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24A468BB0;
  *(void *)(v15 + 32) = sub_24A449BF8;
  *(void *)(v15 + 40) = v7;
  *(void *)(v15 + 48) = sub_24A449BF8;
  *(void *)(v15 + 56) = v8;
  *(void *)(v15 + 64) = sub_24A449AE8;
  *(void *)(v15 + 72) = v10;
  *(void *)(v15 + 80) = sub_24A449BF8;
  *(void *)(v15 + 88) = v11;
  *(void *)(v15 + 96) = sub_24A449BF8;
  *(void *)(v15 + 104) = v12;
  *(void *)(v15 + 112) = sub_24A449AE8;
  *(void *)(v15 + 120) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v31))
  {
    uint64_t v16 = *(void *)(v0 + 1584);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = 0;
    uint64_t v36 = v18;
    *(_WORD *)uint64_t v17 = 514;
    void v17[2] = *(unsigned char *)(v7 + 16);
    uint64_t v19 = *(void **)(v0 + 1584);
    if (v16)
    {
LABEL_15:
      swift_unknownObjectRelease();

      return;
    }
    uint64_t v20 = v18;
    swift_release();
    v17[3] = *(unsigned char *)(v8 + 16);
    uint64_t v34 = v17 + 4;
    uint64_t v21 = *(void *)(v0 + 1584);
    if (v19)
    {
      uint64_t v19 = *(void **)(v0 + 1584);
      goto LABEL_15;
    }
    swift_release();
    sub_24A448A7C((uint64_t *)&v34, (uint64_t)&v35, &v36, *(uint64_t (**)(void))(v10 + 16));
    uint64_t v19 = *(void **)(v0 + 1584);
    if (v21) {
      goto LABEL_15;
    }
    swift_release();
    uint64_t v25 = v34;
    *uint64_t v34 = *(unsigned char *)(v11 + 16);
    uint64_t v26 = *(void *)(v0 + 1584);
    if (v19)
    {
      uint64_t v19 = *(void **)(v0 + 1584);
      goto LABEL_15;
    }
    swift_release();
    v25[1] = *(unsigned char *)(v12 + 16);
    uint64_t v34 = v25 + 2;
    uint64_t v19 = *(void **)(v0 + 1584);
    if (v26) {
      goto LABEL_15;
    }
    swift_release();
    sub_24A448A7C((uint64_t *)&v34, (uint64_t)&v35, &v36, *(uint64_t (**)(void))(v14 + 16));
    if (v19)
    {
      uint64_t v19 = *(void **)(v0 + 1584);
      goto LABEL_15;
    }
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v28 = *(void *)(v0 + 960);
    uint64_t v29 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_24A3DA000, log, v31, "cached sendOneMessage %{public}s:%{public}s", v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v20, -1, -1);
    MEMORY[0x24C5C5D60](v17, -1, -1);

    v27(v28, v29);
  }
  else
  {
    uint64_t v30 = *(void *)(v0 + 960);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v22 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v32(v30, v22);
  }
  *(void *)(v0 + 1592) = *(void *)(v0 + 1584);
  uint64_t v23 = *(void **)(v0 + 1224);
  uint64_t v24 = *v23 + 256;
  *(void *)(v0 + 1600) = *(void *)v24;
  *(void *)(v0 + 1608) = v24 & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
  MEMORY[0x270FA2498](sub_24A441718, v23, 0);
}

uint64_t sub_24A441718()
{
  uint64_t v1 = *(void *)(v0 + 784);
  (*(void (**)(void, void, uint64_t))(v0 + 1600))(*(void *)(v0 + 1184), *(void *)(v0 + 1192), 1);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24A4417AC, v1, 0);
}

uint64_t sub_24A4417AC()
{
  uint64_t v28 = v0;
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (!reply)
  {
    uint64_t v14 = *(void *)(v0 + 1080);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v14;
    goto LABEL_8;
  }
  uint64_t v2 = reply;
  uint64_t v3 = *(void *)(v0 + 784);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 112);
  if (!v4)
  {
    swift_unknownObjectRelease();
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t v5 = *(_xpc_connection_s **)(v4 + 16);
  if (!v5)
  {
LABEL_12:
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
  uint64_t v7 = *(void *)(v0 + 1368);
  uint64_t v8 = *(void *)(v0 + 952);
  uint64_t v9 = *(void *)(v0 + 832);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  xpc_connection_send_message(v5, v2);
  swift_unknownObjectRelease();
  v6(v8, v7, v9);
  uint64_t v10 = sub_24A463FF8();
  os_log_type_t v11 = sub_24A464598();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v22 = *(void *)(v0 + 1080);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v21 = *(void *)(v0 + 952);
    uint64_t v20 = *(void *)(v0 + 832);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = 0;
    v27[0] = 0;
    *(_WORD *)uint64_t v12 = 0;
    uint64_t v25 = v12 + 2;
    sub_24A4489E4(MEMORY[0x263F8EE78], (uint64_t)&v25, (uint64_t)&v26, (uint64_t)v27);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v10, v11, "SendOneMessage Reply Sent", v12, 2u);
    MEMORY[0x24C5C5D60](v12, -1, -1);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v23(v21, v20);
    uint64_t v13 = v22;
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v15 = *(void *)(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 952);
    uint64_t v17 = *(void *)(v0 + 832);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v24(v16, v17);
    uint64_t v13 = v15;
  }
LABEL_8:
  sub_24A44979C(v13, (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_24A441D10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A4422D8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A4428A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

_xpc_connection_s *sub_24A442E68()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void **)(v0 + 1240);
  uint64_t v2 = *(void *)(v0 + 880);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v48 = sub_24A438C50();
  uint64_t v46 = *(void (**)(uint64_t))(v3 + 16);
  v46(v2);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v0 + 152);
  *(void *)(v4 + 64) = *(void *)(v0 + 168);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_24A449124;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  id v8 = v1;
  uint64_t v9 = sub_24A463FF8();
  os_log_type_t v49 = sub_24A4645B8();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24A449144;
  *(void *)(v12 + 24) = v6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24A449AE4;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 32;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24A4490B8;
  *(void *)(v16 + 24) = v7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24A449AE4;
  *(void *)(v17 + 24) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24A468BB0;
  *(void *)(v18 + 32) = sub_24A449BF8;
  *(void *)(v18 + 40) = v10;
  *(void *)(v18 + 48) = sub_24A449BF8;
  *(void *)(v18 + 56) = v11;
  *(void *)(v18 + 64) = sub_24A449AE8;
  *(void *)(v18 + 72) = v13;
  *(void *)(v18 + 80) = sub_24A449BF8;
  *(void *)(v18 + 88) = v14;
  *(void *)(v18 + 96) = sub_24A449BF8;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = sub_24A449AE8;
  *(void *)(v18 + 120) = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v19 = v49;
  uint64_t v50 = v9;
  if (os_log_type_enabled(v9, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v53 = 0;
    v54[0] = v21;
    *(_WORD *)uint64_t v20 = 514;
    void v20[2] = *(unsigned char *)(v10 + 16);
    swift_release();
    v20[3] = *(unsigned char *)(v11 + 16);
    uint64_t v52 = v20 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v52, (uint64_t)&v53, v54, *(uint64_t (**)(void))(v13 + 16));
    swift_release();
    uint64_t v22 = v52;
    unsigned char *v52 = *(unsigned char *)(v14 + 16);
    swift_release();
    v22[1] = *(unsigned char *)(v15 + 16);
    uint64_t v52 = v22 + 2;
    swift_release();
    sub_24A448A7C((uint64_t *)&v52, (uint64_t)&v53, v54, *(uint64_t (**)(void))(v17 + 16));
    uint64_t v23 = *(void *)(v0 + 880);
    uint64_t v24 = *(void *)(v0 + 840);
    uint64_t v25 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_24A3DA000, v50, v19, "unable to find config for identity %{public}s with error %s", v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v21, -1, -1);
    MEMORY[0x24C5C5D60](v20, -1, -1);

    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v26(v23, v25);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 880);
    uint64_t v28 = *(void *)(v0 + 840);
    uint64_t v29 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v26(v27, v29);
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (reply)
  {
    os_log_type_t v31 = reply;
    uint64_t v32 = *(void *)(v0 + 784);
    xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage event fields");
    uint64_t result = (_xpc_connection_s *)swift_beginAccess();
    uint64_t v34 = *(void *)(v32 + 112);
    if (v34)
    {
      swift_beginAccess();
      uint64_t result = *(_xpc_connection_s **)(v34 + 16);
      if (result)
      {
        uint64_t v35 = *(void *)(v0 + 872);
        uint64_t v36 = *(void *)(v0 + 832);
        xpc_connection_send_message(result, v31);
        ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v35, v48, v36);
        uint64_t v37 = sub_24A463FF8();
        os_log_type_t v38 = sub_24A464598();
        BOOL v39 = os_log_type_enabled(v37, v38);
        uint64_t v40 = *(void **)(v0 + 1240);
        uint64_t v41 = *(void *)(v0 + 1080);
        uint64_t v42 = *(void *)(v0 + 872);
        uint64_t v51 = *(NSObject **)(v0 + 832);
        if (v39)
        {
          uint64_t v47 = *(void **)(v0 + 1240);
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v53 = 0;
          v54[0] = 0;
          *(_WORD *)uint64_t v43 = 0;
          uint64_t v52 = v43 + 2;
          sub_24A4489E4(MEMORY[0x263F8EE78], (uint64_t)&v52, (uint64_t)&v53, (uint64_t)v54);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24A3DA000, v37, v38, "SendOneMessage Error Reply Sent", v43, 2u);
          MEMORY[0x24C5C5D60](v43, -1, -1);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
        }
        v26(v42, (uint64_t)v51);
        sub_24A44979C(v41, (uint64_t (*)(void))type metadata accessor for CachedSession);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v44 = *(void **)(v0 + 1240);
  sub_24A44979C(*(void *)(v0 + 1080), (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return (_xpc_connection_s *)v45();
}

uint64_t sub_24A4437E8()
{
  uint64_t v58 = v0;
  *((_OWORD *)v0 + 82) = 0u;
  uint64_t v1 = (void *)v0[146];
  uint64_t v2 = v0[99];
  v0[92] = sub_24A3ECFD8(MEMORY[0x263F8EE78]);
  xpc_dictionary_get_count(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793890);
  sub_24A4641F8();
  uint64_t v3 = swift_allocObject();
  v0[166] = v3;
  *(void *)(v3 + 16) = v0 + 92;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_24A449220;
  *(void *)(v4 + 24) = v3;
  v0[26] = sub_24A3F1134;
  v0[27] = v4;
  v0[22] = MEMORY[0x263EF8330];
  v0[23] = 1107296256;
  v0[24] = sub_24A3ED5F4;
  v0[25] = &block_descriptor_3;
  long long v5 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v1, v5);
  swift_unknownObjectRelease();
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = 4079420;
  uint64_t v8 = v0[129];
  sub_24A448628(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v8);
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) != 1)
  {
    sub_24A4499D8(v0[129], v0[128], (uint64_t *)&unk_269793540);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_7:
      uint64_t v12 = sub_24A464A48();
      unint64_t v14 = v13;
      goto LABEL_10;
    }
    sub_24A44979C(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v14 = 0xE300000000000000;
  uint64_t v12 = 4079420;
LABEL_10:
  v0[168] = v14;
  v0[167] = v12;
  uint64_t v15 = v0[127];
  sub_24A3E2068(v0[129], (uint64_t *)&unk_269793540);
  sub_24A448628(0x7375746174735FLL, 0xE700000000000000, v0[92], v15);
  if (v10(v15, 1, v9) == 1)
  {
LABEL_17:
    unint64_t v18 = 0xE300000000000000;
    goto LABEL_18;
  }
  sub_24A4499D8(v0[127], v0[126], (uint64_t *)&unk_269793540);
  int v16 = swift_getEnumCaseMultiPayload();
  if (v16 == 2)
  {
    v0[93] = *(void *)v0[126];
    goto LABEL_15;
  }
  if (v16 != 1)
  {
    sub_24A44979C(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    goto LABEL_17;
  }
  v0[94] = *(void *)v0[126];
LABEL_15:
  uint64_t v7 = sub_24A464A48();
  unint64_t v18 = v17;
LABEL_18:
  v0[170] = v18;
  v0[169] = v7;
  uint64_t v19 = v0[125];
  uint64_t v20 = v0[105];
  uint64_t v21 = v0[104];
  sub_24A3E2068(v0[127], (uint64_t *)&unk_269793540);
  uint64_t v22 = sub_24A438C50();
  v0[171] = v22;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v0[172] = v23;
  v0[173] = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v23(v19, v22, v21);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v12;
  *(void *)(v24 + 24) = v14;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v7;
  *(void *)(v25 + 24) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_24A463FF8();
  os_log_type_t loga = sub_24A4645D8();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = 34;
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 8;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_24A449C00;
  *(void *)(v29 + 24) = v24;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_24A449AE4;
  *(void *)(v30 + 24) = v29;
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 34;
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = 8;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24A449C00;
  *(void *)(v33 + 24) = v25;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_24A449AE4;
  *(void *)(v34 + 24) = v33;
  v0[174] = __swift_instantiateConcreteTypeFromMangledName(&qword_269794018);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_24A468BB0;
  *(void *)(v35 + 32) = sub_24A449BF8;
  *(void *)(v35 + 40) = v27;
  *(void *)(v35 + 48) = sub_24A449BF8;
  *(void *)(v35 + 56) = v28;
  *(void *)(v35 + 64) = sub_24A449AE8;
  *(void *)(v35 + 72) = v30;
  *(void *)(v35 + 80) = sub_24A449BF8;
  *(void *)(v35 + 88) = v31;
  *(void *)(v35 + 96) = sub_24A449BF8;
  *(void *)(v35 + 104) = v32;
  *(void *)(v35 + 112) = sub_24A449AE8;
  *(void *)(v35 + 120) = v34;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v36 = loga;
  os_log_t log = v26;
  if (os_log_type_enabled(v26, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v56 = 0;
    uint64_t v57 = v38;
    *(_WORD *)uint64_t v37 = 514;
    v37[2] = *(unsigned char *)(v27 + 16);
    swift_release();
    v37[3] = *(unsigned char *)(v28 + 16);
    uint64_t v55 = v37 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v30 + 16));
    swift_release();
    BOOL v39 = v55;
    unsigned char *v55 = *(unsigned char *)(v31 + 16);
    swift_release();
    v39[1] = *(unsigned char *)(v32 + 16);
    uint64_t v55 = v39 + 2;
    swift_release();
    sub_24A448A7C((uint64_t *)&v55, (uint64_t)&v56, &v57, *(uint64_t (**)(void))(v34 + 16));
    uint64_t v40 = v0[125];
    uint64_t v41 = v0[105];
    uint64_t v42 = v0[104];
    swift_release();
    _os_log_impl(&dword_24A3DA000, log, v36, "sending one message %{public}s:%{public}s", v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v38, -1, -1);
    MEMORY[0x24C5C5D60](v37, -1, -1);

    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v43(v40, v42);
  }
  else
  {
    uint64_t v44 = v0[125];
    uint64_t v45 = v0[105];
    uint64_t v46 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v43(v44, v46);
  }
  v0[175] = v43;
  uint64_t v47 = v0[98];
  uint64_t v48 = v0[92];
  swift_bridgeObjectRetain();
  v0[77] = nullsub_1(0x4D656E4F646E6553, 0xEE00656761737365, v48);
  v0[78] = v49;
  v0[79] = v50;
  uint64_t v52 = (uint64_t (*)(void *))(*(void *)(**(void **)(v47 + 160) + 152)
                                         + **(int **)(**(void **)(v47 + 160) + 152));
  uint64_t v51 = (void *)swift_task_alloc();
  v0[176] = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_24A43D7DC;
  return v52(v0 + 15);
}

uint64_t sub_24A444150()
{
  uint64_t v127 = v0;
  *(void *)(v0 + 1448) = *(void *)(v0 + 616);
  *(void *)(v0 + 1456) = *(void *)(v0 + 624);
  *(void *)(v0 + 1464) = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_24A42508C();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 1256);
  if (*v1 == 1)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    *(void *)(v0 + 1472) = v3;
    if (v3)
    {
      uint64_t v4 = *(void *)(v0 + 800);
      LODWORD(v5) = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 1664) = v5;
      uint64_t v5 = v5;
      osos_log_t logc = (os_log_t)((v5 + 16) & ~v5);
      *(void *)(v0 + 1480) = *(void *)(v4 + 72);
      *(_OWORD *)(v0 + 1488) = 0u;
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
      uint64_t v7 = *(void *)(v0 + 1368);
      uint64_t v109 = *(void *)(v0 + 1360);
      uint64_t v111 = *(void *)(v0 + 1352);
      uint64_t v107 = *(void *)(v0 + 1344);
      uint64_t v8 = *(void *)(v0 + 1336);
      uint64_t v9 = *(void *)(v0 + 992);
      uint64_t v10 = *(void *)(v0 + 832);
      uint64_t v11 = *(void *)(v0 + 824);
      uint64_t v12 = *(void *)(v0 + 816);
      sub_24A449908(v2 + ((v5 + 32) & ~v5), v11, type metadata accessor for SessionConfiguration.Backend);
      v6(v9, v7, v10);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v8;
      *(void *)(v13 + 24) = v107;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v111;
      *(void *)(v14 + 24) = v109;
      sub_24A449908(v11, v12, type metadata accessor for SessionConfiguration.Backend);
      uint64_t v112 = swift_allocObject();
      sub_24A449970(v12, (uint64_t)oslogc + v112, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      osos_log_t log = sub_24A463FF8();
      os_log_type_t type = sub_24A4645D8();
      uint64_t v117 = swift_allocObject();
      *(unsigned char *)(v117 + 16) = 34;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 8;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_24A449C00;
      *(void *)(v16 + 24) = v13;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_24A449AE4;
      *(void *)(v17 + 24) = v16;
      uint64_t v18 = swift_allocObject();
      *(unsigned char *)(v18 + 16) = 34;
      uint64_t v19 = swift_allocObject();
      *(unsigned char *)(v19 + 16) = 8;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_24A449C00;
      *(void *)(v20 + 24) = v14;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_24A449AE4;
      *(void *)(v21 + 24) = v20;
      uint64_t v22 = swift_allocObject();
      *(unsigned char *)(v22 + 16) = 34;
      uint64_t v23 = swift_allocObject();
      *(unsigned char *)(v23 + 16) = 8;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_24A44945C;
      *(void *)(v24 + 24) = v112;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_24A449AE4;
      *(void *)(v25 + 24) = v24;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_24A468BC0;
      *(void *)(v26 + 32) = sub_24A449BF8;
      *(void *)(v26 + 40) = v117;
      *(void *)(v26 + 48) = sub_24A449BF8;
      *(void *)(v26 + 56) = v15;
      *(void *)(v26 + 64) = sub_24A449AE8;
      *(void *)(v26 + 72) = v17;
      *(void *)(v26 + 80) = sub_24A449BF8;
      *(void *)(v26 + 88) = v18;
      *(void *)(v26 + 96) = sub_24A449BF8;
      *(void *)(v26 + 104) = v19;
      *(void *)(v26 + 112) = sub_24A449AE8;
      *(void *)(v26 + 120) = v21;
      *(void *)(v26 + 128) = sub_24A449BF8;
      *(void *)(v26 + 136) = v22;
      *(void *)(v26 + 144) = sub_24A449BF8;
      *(void *)(v26 + 152) = v23;
      *(void *)(v26 + 160) = sub_24A449AE8;
      *(void *)(v26 + 168) = v25;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, type))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(void *)(v0 + 720) = 0;
        *(void *)(v0 + 728) = v108;
        *(_WORD *)uint64_t v27 = 770;
        void v27[2] = *(unsigned char *)(v117 + 16);
        *(void *)(v0 + 712) = v27 + 3;
        swift_release();
        uint64_t v28 = *(unsigned char **)(v0 + 712);
        *uint64_t v28 = *(unsigned char *)(v15 + 16);
        *(void *)(v0 + 712) = v28 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v17 + 16));
        swift_release();
        uint64_t v29 = *(unsigned char **)(v0 + 712);
        *uint64_t v29 = *(unsigned char *)(v18 + 16);
        *(void *)(v0 + 712) = v29 + 1;
        swift_release();
        uint64_t v30 = *(unsigned char **)(v0 + 712);
        *uint64_t v30 = *(unsigned char *)(v19 + 16);
        *(void *)(v0 + 712) = v30 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v21 + 16));
        swift_release();
        uint64_t v31 = *(unsigned char **)(v0 + 712);
        *uint64_t v31 = *(unsigned char *)(v22 + 16);
        *(void *)(v0 + 712) = v31 + 1;
        swift_release();
        uint64_t v32 = *(unsigned char **)(v0 + 712);
        unsigned char *v32 = *(unsigned char *)(v23 + 16);
        *(void *)(v0 + 712) = v32 + 1;
        swift_release();
        sub_24A448A7C((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v25 + 16));
        uint64_t v33 = *(void *)(v0 + 992);
        uint64_t v34 = *(void *)(v0 + 840);
        uint64_t v35 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl(&dword_24A3DA000, oslog, type, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v27, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v108, -1, -1);
        MEMORY[0x24C5C5D60](v27, -1, -1);

        os_log_type_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v36(v33, v35);
      }
      else
      {
        uint64_t v91 = *(void *)(v0 + 992);
        uint64_t v92 = *(void *)(v0 + 840);
        uint64_t v93 = *(void *)(v0 + 832);

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        os_log_type_t v36 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
        v36(v91, v93);
      }
      *(void *)(v0 + 1504) = v36;
      uint64_t v94 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
      *(void *)(v0 + 1512) = v94;
      *(void *)(v0 + 1520) = sub_24A3FC7EC();
      *(void *)(v0 + 1528) = v95;
      uint64_t v96 = sub_24A43EF50;
      uint64_t v97 = v94;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1400);
  *(void *)(v0 + 1544) = v37;
  if (*(void *)(v0 + 1312))
  {
    typea = v37;
    uint64_t v38 = *(void *)(v0 + 1360);
    uint64_t v39 = *(void *)(v0 + 1352);
    uint64_t v40 = *(void *)(v0 + 1344);
    uint64_t v41 = *(void *)(v0 + 1336);
    uint64_t v116 = *(void *)(v0 + 1320);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    *(void *)(v42 + 24) = v40;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v39;
    *(void *)(v43 + 24) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    osos_log_type_t loga = sub_24A463FF8();
    os_log_type_t v110 = sub_24A4645D8();
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = 34;
    uint64_t v45 = swift_allocObject();
    *(unsigned char *)(v45 + 16) = 8;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_24A449C00;
    *(void *)(v46 + 24) = v42;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_24A449AE4;
    *(void *)(v47 + 24) = v46;
    uint64_t v48 = swift_allocObject();
    *(unsigned char *)(v48 + 16) = 34;
    uint64_t v49 = swift_allocObject();
    *(unsigned char *)(v49 + 16) = 8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_24A449C00;
    *(void *)(v50 + 24) = v43;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_24A449AE4;
    *(void *)(v51 + 24) = v50;
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_24A468BB0;
    *(void *)(v52 + 32) = sub_24A449BF8;
    *(void *)(v52 + 40) = v44;
    *(void *)(v52 + 48) = sub_24A449BF8;
    *(void *)(v52 + 56) = v45;
    *(void *)(v52 + 64) = sub_24A449AE8;
    *(void *)(v52 + 72) = v47;
    *(void *)(v52 + 80) = sub_24A449BF8;
    *(void *)(v52 + 88) = v48;
    *(void *)(v52 + 96) = sub_24A449BF8;
    *(void *)(v52 + 104) = v49;
    *(void *)(v52 + 112) = sub_24A449AE8;
    *(void *)(v52 + 120) = v51;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v110))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v125 = 0;
      uint64_t v126 = v54;
      *(_WORD *)uint64_t v53 = 514;
      v53[2] = *(unsigned char *)(v44 + 16);
      swift_release();
      v53[3] = *(unsigned char *)(v45 + 16);
      uint64_t v124 = v53 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v124, (uint64_t)&v125, &v126, *(uint64_t (**)(void))(v47 + 16));
      swift_release();
      uint64_t v55 = v124;
      *uint64_t v124 = *(unsigned char *)(v48 + 16);
      swift_release();
      v55[1] = *(unsigned char *)(v49 + 16);
      uint64_t v124 = v55 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v124, (uint64_t)&v125, &v126, *(uint64_t (**)(void))(v51 + 16));
      uint64_t v56 = *(void *)(v0 + 984);
      uint64_t v57 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, osloga, v110, "processing sendOneMessage, immediate %{public}s:%{public}s", v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v54, -1, -1);
      MEMORY[0x24C5C5D60](v53, -1, -1);

      uint64_t v58 = v56;
      uint64_t v59 = v57;
    }
    else
    {
      uint64_t v82 = *(void *)(v0 + 984);
      uint64_t v83 = *(void *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v58 = v82;
      uint64_t v59 = v83;
    }
    typea(v58, v59);
    uint64_t v84 = *(void *)(v0 + 1464);
    uint64_t v85 = *(void *)(v0 + 1456);
    uint64_t v86 = *(void *)(v0 + 1448);
    uint64_t ObjectType = swift_getObjectType();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793580);
    uint64_t v88 = swift_allocObject();
    *(void *)(v0 + 1552) = v88;
    *(_OWORD *)(v88 + 16) = xmmword_24A466020;
    *(void *)(v88 + 32) = v86;
    *(void *)(v88 + 40) = v85;
    *(void *)(v88 + 48) = v84;
    typeb = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 + 8) + **(int **)(v116 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v89 = (void *)swift_task_alloc();
    *(void *)(v0 + 1560) = v89;
    void *v89 = v0;
    v89[1] = sub_24A44035C;
    return typeb(v88, ObjectType, v116);
  }
  else
  {
    uint64_t v60 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (!v60)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1592) = 0;
      uint64_t v97 = *(uint64_t **)(v0 + 1224);
      uint64_t v98 = *v97;
      *(void *)(v0 + 1600) = *(void *)(*v97 + 256);
      *(void *)(v0 + 1608) = (v98 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
      uint64_t v96 = sub_24A441718;
LABEL_18:
      return MEMORY[0x270FA2498](v96, v97, 0);
    }
    uint64_t v61 = *(void *)(v0 + 1360);
    uint64_t v62 = *(void *)(v0 + 1352);
    uint64_t v63 = *(void *)(v0 + 1344);
    uint64_t v64 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v64;
    *(void *)(v65 + 24) = v63;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v62;
    *(void *)(v66 + 24) = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_type_t logb = sub_24A463FF8();
    os_log_type_t v118 = sub_24A4645D8();
    uint64_t v67 = swift_allocObject();
    *(unsigned char *)(v67 + 16) = 34;
    uint64_t v68 = swift_allocObject();
    *(unsigned char *)(v68 + 16) = 8;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_24A449C00;
    *(void *)(v69 + 24) = v65;
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = sub_24A449AE4;
    *(void *)(v70 + 24) = v69;
    uint64_t v71 = swift_allocObject();
    *(unsigned char *)(v71 + 16) = 34;
    uint64_t v72 = swift_allocObject();
    *(unsigned char *)(v72 + 16) = 8;
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = sub_24A449C00;
    *(void *)(v73 + 24) = v66;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = sub_24A449AE4;
    *(void *)(v74 + 24) = v73;
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_24A468BB0;
    *(void *)(v75 + 32) = sub_24A449BF8;
    *(void *)(v75 + 40) = v67;
    *(void *)(v75 + 48) = sub_24A449BF8;
    *(void *)(v75 + 56) = v68;
    *(void *)(v75 + 64) = sub_24A449AE8;
    *(void *)(v75 + 72) = v70;
    *(void *)(v75 + 80) = sub_24A449BF8;
    *(void *)(v75 + 88) = v71;
    *(void *)(v75 + 96) = sub_24A449BF8;
    *(void *)(v75 + 104) = v72;
    *(void *)(v75 + 112) = sub_24A449AE8;
    *(void *)(v75 + 120) = v74;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslogb, v118))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      uint64_t v125 = 0;
      uint64_t v126 = v77;
      *(_WORD *)uint64_t v76 = 514;
      v76[2] = *(unsigned char *)(v67 + 16);
      swift_release();
      v76[3] = *(unsigned char *)(v68 + 16);
      uint64_t v124 = v76 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v124, (uint64_t)&v125, &v126, *(uint64_t (**)(void))(v70 + 16));
      swift_release();
      int v78 = v124;
      *uint64_t v124 = *(unsigned char *)(v71 + 16);
      swift_release();
      v78[1] = *(unsigned char *)(v72 + 16);
      uint64_t v124 = v78 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v124, (uint64_t)&v125, &v126, *(uint64_t (**)(void))(v74 + 16));
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v80 = *(void *)(v0 + 968);
      uint64_t v81 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, oslogb, v118, "caching sendOneMessage %{public}s:%{public}s", v76, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v77, -1, -1);
      MEMORY[0x24C5C5D60](v76, -1, -1);

      v79(v80, v81);
    }
    else
    {
      uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v99 = *(void *)(v0 + 968);
      uint64_t v100 = *(void *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v119(v99, v100);
    }
    sub_24A463E38();
    uint64_t v101 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v101;
    void *v101 = v0;
    v101[1] = sub_24A440F88;
    uint64_t v102 = *(void *)(v0 + 1464);
    uint64_t v103 = *(void *)(v0 + 1456);
    uint64_t v104 = *(void *)(v0 + 1448);
    double v105 = *(double *)(v0 + 1216);
    uint64_t v106 = *(void *)(v0 + 1056);
    return sub_24A3F39EC(v0 + 120, v106, v105, v104, v103, v102);
  }
}

uint64_t sub_24A445448()
{
  uint64_t v194 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 1664);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
  uint64_t v3 = *(void *)(v0 + 1368);
  os_log_t logc = *(os_log_t *)(v0 + 1352);
  *(void *)v176 = *(void *)(v0 + 1360);
  uint64_t v160 = *(void *)(v0 + 1344);
  uint64_t v161 = *(void *)(v0 + 1336);
  uint64_t v4 = *(void *)(v0 + 864);
  os_log_t v185 = *(os_log_t *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 832);
  osos_log_t logb = *(os_log_t *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 816);
  swift_bridgeObjectRelease();
  uint64_t v7 = (v1 + 16) & ~v1;
  v2(v4, v3, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v161;
  *(void *)(v8 + 24) = v160;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = logc;
  *(void *)(v9 + 24) = *(void *)v176;
  sub_24A449908((uint64_t)oslogb, v6, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v10 = swift_allocObject();
  sub_24A449970(v6, v10 + v7, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v162 = swift_allocObject();
  *(void *)(v162 + 16) = v185;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = v185;
  osos_log_t log = sub_24A463FF8();
  os_log_type_t v158 = sub_24A4645B8();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 34;
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 8;
  uint64_t v15 = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24A4494C0;
  *(void *)(v16 + 24) = v8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24A449AE4;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = v17;
  os_log_t log = (os_log_t)swift_allocObject();
  LOBYTE(log[2].isa) = 34;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24A449C00;
  *(void *)(v19 + 24) = v9;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_24A449AE4;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 34;
  os_log_t v186 = (os_log_t)swift_allocObject();
  LOBYTE(v186[2].isa) = 8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_24A44945C;
  *(void *)(v23 + 24) = v10;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_24A449AE4;
  *(void *)(v24 + 24) = v23;
  uint64_t v25 = v24;
  uint64_t v155 = v24;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 34;
  uint64_t v156 = swift_allocObject();
  *(unsigned char *)(v156 + 16) = 8;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_24A4490B8;
  *(void *)(v26 + 24) = v162;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_24A449AE4;
  *(void *)(v27 + 24) = v26;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24A468460;
  *(void *)(v28 + 32) = sub_24A449BF8;
  *(void *)(v28 + 40) = v13;
  *(void *)(v28 + 48) = sub_24A449BF8;
  *(void *)(v28 + 56) = v15;
  *(void *)(v28 + 64) = sub_24A449AE8;
  *(void *)(v28 + 72) = v18;
  *(void *)(v28 + 80) = sub_24A449BF8;
  *(void *)(v28 + 88) = log;
  *(void *)(v28 + 96) = sub_24A449BF8;
  *(void *)(v28 + 104) = v177;
  *(void *)(v28 + 112) = sub_24A449AE8;
  *(void *)(v28 + 120) = v21;
  *(void *)(v28 + 128) = sub_24A449BF8;
  *(void *)(v28 + 136) = v22;
  *(void *)(v28 + 144) = sub_24A449BF8;
  *(void *)(v28 + 152) = v186;
  *(void *)(v28 + 160) = sub_24A449AE8;
  *(void *)(v28 + 168) = v25;
  *(void *)(v28 + 176) = sub_24A449BF8;
  *(void *)(v28 + 184) = v182;
  *(void *)(v28 + 192) = sub_24A449BF8;
  *(void *)(v28 + 200) = v156;
  *(void *)(v28 + 208) = sub_24A449AE8;
  *(void *)(v28 + 216) = v27;
  swift_retain();
  uint64_t v163 = v15;
  swift_retain();
  uint64_t v157 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v29 = v158;
  if (os_log_type_enabled(oslog, v158))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v159 = swift_slowAlloc();
    *(void *)(v190 + 696) = 0;
    *(void *)(v190 + 704) = v159;
    *(_WORD *)uint64_t v30 = 1026;
    id v30[2] = *(unsigned char *)(v13 + 16);
    *(void *)(v190 + 688) = v30 + 3;
    swift_release();
    uint64_t v31 = *(unsigned char **)(v190 + 688);
    *uint64_t v31 = *(unsigned char *)(v163 + 16);
    *(void *)(v190 + 688) = v31 + 1;
    swift_release();
    os_log_type_t type = v29;
    sub_24A448A7C((uint64_t *)(v190 + 688), v190 + 696, (uint64_t *)(v190 + 704), *(uint64_t (**)(void))(v157 + 16));
    swift_release();
    uint64_t v32 = *(unsigned char **)(v190 + 688);
    unsigned char *v32 = log[2].isa;
    *(void *)(v190 + 688) = v32 + 1;
    swift_release();
    uint64_t v33 = *(unsigned char **)(v190 + 688);
    unsigned char *v33 = *(unsigned char *)(v177 + 16);
    *(void *)(v190 + 688) = v33 + 1;
    swift_release();
    sub_24A448A7C((uint64_t *)(v190 + 688), v190 + 696, (uint64_t *)(v190 + 704), *(uint64_t (**)(void))(v21 + 16));
    swift_release();
    uint64_t v34 = *(unsigned char **)(v190 + 688);
    *uint64_t v34 = *(unsigned char *)(v22 + 16);
    *(void *)(v190 + 688) = v34 + 1;
    swift_release();
    uint64_t v35 = *(unsigned char **)(v190 + 688);
    *uint64_t v35 = v186[2].isa;
    *(void *)(v190 + 688) = v35 + 1;
    swift_release();
    sub_24A448A7C((uint64_t *)(v190 + 688), v190 + 696, (uint64_t *)(v190 + 704), *(uint64_t (**)(void))(v155 + 16));
    swift_release();
    os_log_type_t v36 = *(unsigned char **)(v190 + 688);
    unsigned char *v36 = *(unsigned char *)(v182 + 16);
    *(void *)(v190 + 688) = v36 + 1;
    swift_release();
    uint64_t v37 = *(unsigned char **)(v190 + 688);
    *uint64_t v37 = *(unsigned char *)(v156 + 16);
    *(void *)(v190 + 688) = v37 + 1;
    swift_release();
    sub_24A448A7C((uint64_t *)(v190 + 688), v190 + 696, (uint64_t *)(v190 + 704), *(uint64_t (**)(void))(v27 + 16));
    uint64_t v38 = *(void **)(v190 + 1536);
    uint64_t v39 = *(void *)(v190 + 864);
    uint64_t v40 = *(void *)(v190 + 840);
    uint64_t v41 = *(void *)(v190 + 832);
    uint64_t v42 = *(void *)(v190 + 824);
    swift_release();
    _os_log_impl(&dword_24A3DA000, oslog, type, "failed writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s with error %{public}s", v30, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v159, -1, -1);
    MEMORY[0x24C5C5D60](v30, -1, -1);

    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v43(v39, v41);
    uint64_t v44 = v42;
  }
  else
  {
    uint64_t v45 = *(void **)(v190 + 1536);
    uint64_t v46 = *(void *)(v190 + 864);
    uint64_t v47 = *(void *)(v190 + 840);
    uint64_t v48 = *(void *)(v190 + 832);
    uint64_t v49 = *(void *)(v190 + 824);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v43(v46, v48);
    uint64_t v44 = v49;
  }
  sub_24A44979C(v44, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v50 = *(void *)(v190 + 1496) + 1;
  if (v50 == *(void *)(v190 + 1472))
  {
    swift_bridgeObjectRelease();
    *(void *)(v190 + 1544) = v43;
    if (*(void *)(v190 + 1312))
    {
      v178 = v43;
      uint64_t v51 = *(void *)(v190 + 1360);
      uint64_t v52 = *(void *)(v190 + 1352);
      uint64_t v53 = *(void *)(v190 + 1344);
      uint64_t v54 = *(void *)(v190 + 1336);
      uint64_t v183 = *(void *)(v190 + 1320);
      (*(void (**)(void, void, void))(v190 + 1376))(*(void *)(v190 + 984), *(void *)(v190 + 1368), *(void *)(v190 + 832));
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v54;
      *(void *)(v55 + 24) = v53;
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v52;
      *(void *)(v56 + 24) = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v57 = sub_24A463FF8();
      osos_log_type_t loga = sub_24A4645D8();
      uint64_t v58 = swift_allocObject();
      *(unsigned char *)(v58 + 16) = 34;
      uint64_t v59 = swift_allocObject();
      *(unsigned char *)(v59 + 16) = 8;
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = sub_24A449C00;
      *(void *)(v60 + 24) = v55;
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = sub_24A449AE4;
      *(void *)(v61 + 24) = v60;
      uint64_t v62 = swift_allocObject();
      *(unsigned char *)(v62 + 16) = 34;
      uint64_t v63 = swift_allocObject();
      *(unsigned char *)(v63 + 16) = 8;
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = sub_24A449C00;
      *(void *)(v64 + 24) = v56;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = sub_24A449AE4;
      *(void *)(v65 + 24) = v64;
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_24A468BB0;
      *(void *)(v66 + 32) = sub_24A449BF8;
      *(void *)(v66 + 40) = v58;
      *(void *)(v66 + 48) = sub_24A449BF8;
      *(void *)(v66 + 56) = v59;
      *(void *)(v66 + 64) = sub_24A449AE8;
      *(void *)(v66 + 72) = v61;
      *(void *)(v66 + 80) = sub_24A449BF8;
      *(void *)(v66 + 88) = v62;
      *(void *)(v66 + 96) = sub_24A449BF8;
      *(void *)(v66 + 104) = v63;
      *(void *)(v66 + 112) = sub_24A449AE8;
      *(void *)(v66 + 120) = v65;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      os_log_type_t loga = v57;
      if (os_log_type_enabled(v57, osloga))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v192 = 0;
        uint64_t v193 = v68;
        *(_WORD *)uint64_t v67 = 514;
        v67[2] = *(unsigned char *)(v58 + 16);
        swift_release();
        v67[3] = *(unsigned char *)(v59 + 16);
        v191 = v67 + 4;
        swift_release();
        sub_24A448A7C((uint64_t *)&v191, (uint64_t)&v192, &v193, *(uint64_t (**)(void))(v61 + 16));
        swift_release();
        uint64_t v69 = v191;
        unsigned char *v191 = *(unsigned char *)(v62 + 16);
        swift_release();
        v69[1] = *(unsigned char *)(v63 + 16);
        v191 = v69 + 2;
        swift_release();
        sub_24A448A7C((uint64_t *)&v191, (uint64_t)&v192, &v193, *(uint64_t (**)(void))(v65 + 16));
        uint64_t v70 = *(void *)(v190 + 984);
        uint64_t v71 = *(void *)(v190 + 832);
        swift_release();
        _os_log_impl(&dword_24A3DA000, loga, osloga, "processing sendOneMessage, immediate %{public}s:%{public}s", v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v68, -1, -1);
        MEMORY[0x24C5C5D60](v67, -1, -1);

        uint64_t v72 = v70;
        uint64_t v73 = v71;
      }
      else
      {
        uint64_t v137 = *(void *)(v190 + 984);
        uint64_t v138 = *(void *)(v190 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v72 = v137;
        uint64_t v73 = v138;
      }
      v178(v72, v73);
      uint64_t v139 = *(void *)(v190 + 1464);
      uint64_t v140 = *(void *)(v190 + 1456);
      uint64_t v141 = *(void *)(v190 + 1448);
      uint64_t ObjectType = swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269793580);
      uint64_t v143 = swift_allocObject();
      *(void *)(v190 + 1552) = v143;
      *(_OWORD *)(v143 + 16) = xmmword_24A466020;
      *(void *)(v143 + 32) = v141;
      *(void *)(v143 + 40) = v140;
      *(void *)(v143 + 48) = v139;
      os_log_t logb = (os_log_t)(*(void *)(v183 + 8) + **(int **)(v183 + 8));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v144 = (void *)swift_task_alloc();
      *(void *)(v190 + 1560) = v144;
      *unint64_t v144 = v190;
      v144[1] = sub_24A44035C;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))logb)(v143, ObjectType, v183);
    }
    uint64_t v113 = *(void *)(*(void *)(v190 + 1256) + 16);
    swift_bridgeObjectRelease();
    uint64_t v114 = *(void *)(v190 + 1360);
    if (v113)
    {
      uint64_t v115 = *(void *)(v190 + 1352);
      uint64_t v116 = *(void *)(v190 + 1344);
      uint64_t v117 = *(void *)(v190 + 1336);
      (*(void (**)(void, void, void))(v190 + 1376))(*(void *)(v190 + 968), *(void *)(v190 + 1368), *(void *)(v190 + 832));
      uint64_t v118 = swift_allocObject();
      *(void *)(v118 + 16) = v117;
      *(void *)(v118 + 24) = v116;
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = v115;
      *(void *)(v119 + 24) = v114;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v189 = sub_24A463FF8();
      os_log_type_t v184 = sub_24A4645D8();
      uint64_t v120 = swift_allocObject();
      *(unsigned char *)(v120 + 16) = 34;
      uint64_t v121 = swift_allocObject();
      *(unsigned char *)(v121 + 16) = 8;
      uint64_t v122 = swift_allocObject();
      *(void *)(v122 + 16) = sub_24A449C00;
      *(void *)(v122 + 24) = v118;
      uint64_t v123 = swift_allocObject();
      *(void *)(v123 + 16) = sub_24A449AE4;
      *(void *)(v123 + 24) = v122;
      uint64_t v124 = swift_allocObject();
      *(unsigned char *)(v124 + 16) = 34;
      uint64_t v125 = swift_allocObject();
      *(unsigned char *)(v125 + 16) = 8;
      uint64_t v126 = swift_allocObject();
      *(void *)(v126 + 16) = sub_24A449C00;
      *(void *)(v126 + 24) = v119;
      uint64_t v127 = swift_allocObject();
      *(void *)(v127 + 16) = sub_24A449AE4;
      *(void *)(v127 + 24) = v126;
      uint64_t v128 = swift_allocObject();
      *(_OWORD *)(v128 + 16) = xmmword_24A468BB0;
      *(void *)(v128 + 32) = sub_24A449BF8;
      *(void *)(v128 + 40) = v120;
      *(void *)(v128 + 48) = sub_24A449BF8;
      *(void *)(v128 + 56) = v121;
      *(void *)(v128 + 64) = sub_24A449AE8;
      *(void *)(v128 + 72) = v123;
      *(void *)(v128 + 80) = sub_24A449BF8;
      *(void *)(v128 + 88) = v124;
      *(void *)(v128 + 96) = sub_24A449BF8;
      *(void *)(v128 + 104) = v125;
      *(void *)(v128 + 112) = sub_24A449AE8;
      *(void *)(v128 + 120) = v127;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v189, v184))
      {
        uint64_t v129 = (uint8_t *)swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        uint64_t v192 = 0;
        uint64_t v193 = v130;
        *(_WORD *)uint64_t v129 = 514;
        v129[2] = *(unsigned char *)(v120 + 16);
        swift_release();
        v129[3] = *(unsigned char *)(v121 + 16);
        v191 = v129 + 4;
        swift_release();
        sub_24A448A7C((uint64_t *)&v191, (uint64_t)&v192, &v193, *(uint64_t (**)(void))(v123 + 16));
        swift_release();
        uint64_t v131 = v191;
        unsigned char *v191 = *(unsigned char *)(v124 + 16);
        swift_release();
        v131[1] = *(unsigned char *)(v125 + 16);
        v191 = v131 + 2;
        swift_release();
        sub_24A448A7C((uint64_t *)&v191, (uint64_t)&v192, &v193, *(uint64_t (**)(void))(v127 + 16));
        uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v190 + 1544);
        uint64_t v133 = *(void *)(v190 + 968);
        uint64_t v134 = *(void *)(v190 + 832);
        swift_release();
        _os_log_impl(&dword_24A3DA000, v189, v184, "caching sendOneMessage %{public}s:%{public}s", v129, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v130, -1, -1);
        MEMORY[0x24C5C5D60](v129, -1, -1);

        uint64_t v135 = v133;
        uint64_t v136 = v134;
      }
      else
      {
        uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v190 + 1544);
        uint64_t v146 = *(void *)(v190 + 968);
        uint64_t v147 = *(void *)(v190 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v135 = v146;
        uint64_t v136 = v147;
      }
      v132(v135, v136);
      sub_24A463E38();
      os_log_type_t v148 = (void *)swift_task_alloc();
      *(void *)(v190 + 1576) = v148;
      *os_log_type_t v148 = v190;
      v148[1] = sub_24A440F88;
      uint64_t v149 = *(void *)(v190 + 1464);
      uint64_t v150 = *(void *)(v190 + 1456);
      uint64_t v151 = *(void *)(v190 + 1448);
      double v152 = *(double *)(v190 + 1216);
      uint64_t v153 = *(void *)(v190 + 1056);
      return sub_24A3F39EC(v190 + 120, v153, v152, v151, v150, v149);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v190 + 1592) = 0;
    uint64_t v112 = *(uint64_t **)(v190 + 1224);
    uint64_t v145 = *v112;
    *(void *)(v190 + 1600) = *(void *)(*v112 + 256);
    *(void *)(v190 + 1608) = (v145 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
    uint64_t v111 = sub_24A441718;
  }
  else
  {
    *(void *)(v190 + 1496) = v50;
    *(void *)(v190 + 1488) = 0;
    uint64_t v74 = *(unsigned __int8 *)(v190 + 1664);
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v190 + 1376);
    uint64_t v76 = *(void *)(v190 + 1368);
    os_log_t v187 = *(os_log_t *)(v190 + 1360);
    *(void *)uint64_t v179 = *(void *)(v190 + 1352);
    *(void *)typea = *(void *)(v190 + 1344);
    uint64_t v77 = *(void *)(v190 + 1336);
    uint64_t v78 = *(void *)(v190 + 992);
    uint64_t v79 = (v74 + 16) & ~v74;
    uint64_t v80 = *(void *)(v190 + 832);
    uint64_t v81 = *(void *)(v190 + 824);
    uint64_t v82 = *(void *)(v190 + 816);
    sub_24A449908(*(void *)(v190 + 1256) + ((v74 + 32) & ~v74) + *(void *)(v190 + 1480) * v50, v81, type metadata accessor for SessionConfiguration.Backend);
    v75(v78, v76, v80);
    uint64_t v83 = swift_allocObject();
    *(void *)(v83 + 16) = v77;
    *(void *)(v83 + 24) = *(void *)typea;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = *(void *)v179;
    *(void *)(v84 + 24) = v187;
    sub_24A449908(v81, v82, type metadata accessor for SessionConfiguration.Backend);
    os_log_t logd = (os_log_t)swift_allocObject();
    sub_24A449970(v82, (uint64_t)logd + v79, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v188 = sub_24A463FF8();
    os_log_type_t v180 = sub_24A4645D8();
    uint64_t v85 = swift_allocObject();
    *(unsigned char *)(v85 + 16) = 34;
    uint64_t v86 = swift_allocObject();
    *(unsigned char *)(v86 + 16) = 8;
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = sub_24A449C00;
    *(void *)(v87 + 24) = v83;
    uint64_t v88 = swift_allocObject();
    *(void *)(v88 + 16) = sub_24A449AE4;
    *(void *)(v88 + 24) = v87;
    uint64_t v89 = swift_allocObject();
    *(unsigned char *)(v89 + 16) = 34;
    uint64_t v90 = swift_allocObject();
    *(unsigned char *)(v90 + 16) = 8;
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = sub_24A449C00;
    *(void *)(v91 + 24) = v84;
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = sub_24A449AE4;
    *(void *)(v92 + 24) = v91;
    uint64_t v93 = swift_allocObject();
    *(unsigned char *)(v93 + 16) = 34;
    uint64_t v94 = swift_allocObject();
    *(unsigned char *)(v94 + 16) = 8;
    uint64_t v95 = swift_allocObject();
    *(void *)(v95 + 16) = sub_24A44945C;
    *(void *)(v95 + 24) = logd;
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = sub_24A449AE4;
    *(void *)(v96 + 24) = v95;
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_24A468BC0;
    *(void *)(v97 + 32) = sub_24A449BF8;
    *(void *)(v97 + 40) = v85;
    *(void *)(v97 + 48) = sub_24A449BF8;
    *(void *)(v97 + 56) = v86;
    *(void *)(v97 + 64) = sub_24A449AE8;
    *(void *)(v97 + 72) = v88;
    *(void *)(v97 + 80) = sub_24A449BF8;
    *(void *)(v97 + 88) = v89;
    *(void *)(v97 + 96) = sub_24A449BF8;
    *(void *)(v97 + 104) = v90;
    *(void *)(v97 + 112) = sub_24A449AE8;
    *(void *)(v97 + 120) = v92;
    *(void *)(v97 + 128) = sub_24A449BF8;
    *(void *)(v97 + 136) = v93;
    *(void *)(v97 + 144) = sub_24A449BF8;
    *(void *)(v97 + 152) = v94;
    *(void *)(v97 + 160) = sub_24A449AE8;
    *(void *)(v97 + 168) = v96;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v188, v180))
    {
      osos_log_t logc = (uint8_t *)swift_slowAlloc();
      os_log_t loge = (os_log_t)swift_slowAlloc();
      *(void *)(v190 + 720) = 0;
      *(void *)(v190 + 728) = loge;
      *(_WORD *)osos_log_t logc = 770;
      oslogc[2] = *(unsigned char *)(v85 + 16);
      *(void *)(v190 + 712) = oslogc + 3;
      swift_release();
      uint64_t v98 = *(unsigned char **)(v190 + 712);
      *uint64_t v98 = *(unsigned char *)(v86 + 16);
      *(void *)(v190 + 712) = v98 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v190 + 712), v190 + 720, (uint64_t *)(v190 + 728), *(uint64_t (**)(void))(v88 + 16));
      swift_release();
      uint64_t v99 = *(unsigned char **)(v190 + 712);
      *uint64_t v99 = *(unsigned char *)(v89 + 16);
      *(void *)(v190 + 712) = v99 + 1;
      swift_release();
      uint64_t v100 = *(unsigned char **)(v190 + 712);
      *uint64_t v100 = *(unsigned char *)(v90 + 16);
      *(void *)(v190 + 712) = v100 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v190 + 712), v190 + 720, (uint64_t *)(v190 + 728), *(uint64_t (**)(void))(v92 + 16));
      swift_release();
      uint64_t v101 = *(unsigned char **)(v190 + 712);
      unsigned char *v101 = *(unsigned char *)(v93 + 16);
      *(void *)(v190 + 712) = v101 + 1;
      swift_release();
      uint64_t v102 = *(unsigned char **)(v190 + 712);
      unsigned char *v102 = *(unsigned char *)(v94 + 16);
      *(void *)(v190 + 712) = v102 + 1;
      swift_release();
      sub_24A448A7C((uint64_t *)(v190 + 712), v190 + 720, (uint64_t *)(v190 + 728), *(uint64_t (**)(void))(v96 + 16));
      uint64_t v103 = *(void *)(v190 + 992);
      uint64_t v104 = *(void *)(v190 + 840);
      uint64_t v105 = *(void *)(v190 + 832);
      swift_release();
      _os_log_impl(&dword_24A3DA000, v188, v180, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", oslogc, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](loge, -1, -1);
      MEMORY[0x24C5C5D60](oslogc, -1, -1);

      uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
      v106(v103, v105);
    }
    else
    {
      *(void *)uint64_t v181 = *(void *)(v190 + 992);
      uint64_t v107 = *(void *)(v190 + 840);
      uint64_t v108 = *(void *)(v190 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
      v106(*(void *)v181, v108);
    }
    *(void *)(v190 + 1504) = v106;
    uint64_t v109 = *(uint64_t **)(*(void *)(v190 + 784) + 168);
    *(void *)(v190 + 1512) = v109;
    *(void *)(v190 + 1520) = sub_24A3FC7EC();
    *(void *)(v190 + 1528) = v110;
    uint64_t v111 = sub_24A43EF50;
    uint64_t v112 = v109;
  }
  return MEMORY[0x270FA2498](v111, v112, 0);
}

uint64_t sub_24A446F44()
{
  uint64_t v64 = v0;
  uint64_t v1 = (void *)*((void *)v0 + 196);
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v0 + 172);
  uint64_t v3 = *((void *)v0 + 171);
  uint64_t v4 = *((void *)v0 + 107);
  uint64_t v5 = *((void *)v0 + 104);
  swift_bridgeObjectRelease();
  v2(v4, v3, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  id v7 = v1;
  uint64_t v8 = sub_24A463FF8();
  os_log_type_t v9 = sub_24A4645B8();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24A4490B8;
  *(void *)(v12 + 24) = v6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24A449AE4;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24A468450;
  *(void *)(v14 + 32) = sub_24A449BF8;
  *(void *)(v14 + 40) = v10;
  *(void *)(v14 + 48) = sub_24A449BF8;
  *(void *)(v14 + 56) = v11;
  *(void *)(v14 + 64) = sub_24A449AE8;
  *(void *)(v14 + 72) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v62 = 0;
    uint64_t v63 = v16;
    *(_WORD *)uint64_t v15 = 258;
    void v15[2] = *(unsigned char *)(v10 + 16);
    swift_release();
    v15[3] = *(unsigned char *)(v11 + 16);
    uint64_t v61 = v15 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v61, (uint64_t)&v62, &v63, *(uint64_t (**)(void))(v13 + 16));
    uint64_t v17 = (void *)*((void *)v0 + 196);
    uint64_t v56 = *((void *)v0 + 107);
    osos_log_type_t loga = (os_log_t)*((void *)v0 + 193);
    uint64_t v18 = *((void *)v0 + 104);
    swift_release();
    _os_log_impl(&dword_24A3DA000, v8, v9, "immediate backend failed to send events: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v16, -1, -1);
    MEMORY[0x24C5C5D60](v15, -1, -1);
    swift_unknownObjectRelease();

    ((void (*)(uint64_t, uint64_t))osloga)(v56, v18);
  }
  else
  {
    uint64_t v19 = (void *)*((void *)v0 + 196);
    uint64_t v20 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
    uint64_t v21 = *((void *)v0 + 107);
    uint64_t v22 = *((void *)v0 + 104);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    v20(v21, v22);
  }
  uint64_t v23 = *(void *)(*((void *)v0 + 157) + 16);
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v0 + 170);
  if (v23)
  {
    uint64_t v25 = *((void *)v0 + 169);
    uint64_t v26 = *((void *)v0 + 168);
    uint64_t v27 = *((void *)v0 + 167);
    (*((void (**)(void, void, void))v0 + 172))(*((void *)v0 + 121), *((void *)v0 + 171), *((void *)v0 + 104));
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = v26;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v25;
    *(void *)(v29 + 24) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t log = sub_24A463FF8();
    os_log_type_t v57 = sub_24A4645D8();
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 34;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_24A449C00;
    *(void *)(v32 + 24) = v28;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_24A449AE4;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(unsigned char *)(v34 + 16) = 34;
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = 8;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_24A449C00;
    *(void *)(v36 + 24) = v29;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_24A449AE4;
    *(void *)(v37 + 24) = v36;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_24A468BB0;
    *(void *)(v38 + 32) = sub_24A449BF8;
    *(void *)(v38 + 40) = v30;
    *(void *)(v38 + 48) = sub_24A449BF8;
    *(void *)(v38 + 56) = v31;
    *(void *)(v38 + 64) = sub_24A449AE8;
    *(void *)(v38 + 72) = v33;
    *(void *)(v38 + 80) = sub_24A449BF8;
    *(void *)(v38 + 88) = v34;
    *(void *)(v38 + 96) = sub_24A449BF8;
    *(void *)(v38 + 104) = v35;
    *(void *)(v38 + 112) = sub_24A449AE8;
    *(void *)(v38 + 120) = v37;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, v57))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v62 = 0;
      uint64_t v63 = v40;
      *(_WORD *)uint64_t v39 = 514;
      v39[2] = *(unsigned char *)(v30 + 16);
      swift_release();
      uint64_t v39[3] = *(unsigned char *)(v31 + 16);
      uint64_t v61 = v39 + 4;
      swift_release();
      sub_24A448A7C((uint64_t *)&v61, (uint64_t)&v62, &v63, *(uint64_t (**)(void))(v33 + 16));
      swift_release();
      uint64_t v41 = v61;
      unsigned char *v61 = *(unsigned char *)(v34 + 16);
      swift_release();
      v41[1] = *(unsigned char *)(v35 + 16);
      uint64_t v61 = v41 + 2;
      swift_release();
      sub_24A448A7C((uint64_t *)&v61, (uint64_t)&v62, &v63, *(uint64_t (**)(void))(v37 + 16));
      uint64_t v42 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
      uint64_t v43 = *((void *)v0 + 121);
      uint64_t v44 = *((void *)v0 + 104);
      swift_release();
      _os_log_impl(&dword_24A3DA000, oslog, v57, "caching sendOneMessage %{public}s:%{public}s", v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v40, -1, -1);
      MEMORY[0x24C5C5D60](v39, -1, -1);

      v42(v43, v44);
    }
    else
    {
      uint64_t v58 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
      uint64_t v47 = *((void *)v0 + 121);
      uint64_t v48 = *((void *)v0 + 104);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v58(v47, v48);
    }
    sub_24A463E38();
    uint64_t v49 = (void *)swift_task_alloc();
    *((void *)v0 + 197) = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_24A440F88;
    uint64_t v50 = *((void *)v0 + 183);
    uint64_t v51 = *((void *)v0 + 182);
    uint64_t v52 = *((void *)v0 + 181);
    double v53 = v0[152];
    uint64_t v54 = *((void *)v0 + 132);
    return sub_24A3F39EC((uint64_t)(v0 + 15), v54, v53, v52, v51, v50);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[199] = 0.0;
    uint64_t v45 = (uint64_t *)*((void *)v0 + 153);
    uint64_t v46 = *v45;
    v0[200] = *(double *)(*v45 + 256);
    *((void *)v0 + 201) = (v46 + 256) & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
    return MEMORY[0x270FA2498](sub_24A441718, v45, 0);
  }
}

uint64_t sub_24A447850()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void **)(v0 + 1584);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 848), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  uint64_t v4 = sub_24A463FF8();
  os_log_type_t v5 = sub_24A4645B8();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 34;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_24A4490B8;
  *(void *)(v8 + 24) = v2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24A449AE4;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24A468450;
  *(void *)(v10 + 32) = sub_24A449BF8;
  *(void *)(v10 + 40) = v6;
  *(void *)(v10 + 48) = sub_24A449BF8;
  *(void *)(v10 + 56) = v7;
  *(void *)(v10 + 64) = sub_24A449AE8;
  *(void *)(v10 + 72) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = 0;
    uint64_t v25 = v12;
    *(_WORD *)uint64_t v11 = 258;
    id v11[2] = *(unsigned char *)(v6 + 16);
    swift_release();
    v11[3] = *(unsigned char *)(v7 + 16);
    uint64_t v23 = v11 + 4;
    swift_release();
    sub_24A448A7C((uint64_t *)&v23, (uint64_t)&v24, &v25, *(uint64_t (**)(void))(v9 + 16));
    uint64_t v13 = *(void **)(v0 + 1584);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v14 = *(void *)(v0 + 848);
    uint64_t v15 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl(&dword_24A3DA000, v4, v5, "failed to cache sendOneMessage event: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v12, -1, -1);
    MEMORY[0x24C5C5D60](v11, -1, -1);

    v22(v14, v15);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v17 = *(void *)(v0 + 848);
    uint64_t v18 = *(void *)(v0 + 832);

    swift_release();
    swift_release();
    swift_release();
    v16(v17, v18);
  }
  *(void *)(v0 + 1592) = 0;
  uint64_t v19 = *(void **)(v0 + 1224);
  uint64_t v20 = *v19 + 256;
  *(void *)(v0 + 1600) = *(void *)v20;
  *(void *)(v0 + 1608) = v20 & 0xFFFFFFFFFFFFLL | 0x1E4F000000000000;
  return MEMORY[0x270FA2498](sub_24A441718, v19, 0);
}

void sub_24A447BDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24A464028();
  swift_unknownObjectRelease();
  if (v4 == a1)
  {
    if (qword_269799950 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24A464018();
    __swift_project_value_buffer(v15, (uint64_t)qword_269799958);
    swift_retain();
    uint64_t v16 = sub_24A463FF8();
    os_log_type_t v17 = sub_24A464598();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = v19;
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v20 = *(void *)(v2 + 128);
      unint64_t v21 = *(void *)(v2 + 136);
      swift_bridgeObjectRetain();
      sub_24A3E0E30(v20, v21, &v29);
      sub_24A4646E8();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24A3DA000, v16, v17, "XPC client %{public}s closed connection", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v19, -1, -1);
      MEMORY[0x24C5C5D60](v18, -1, -1);
    }
    else
    {

      swift_release();
    }
    sub_24A436CFC();
  }
  else
  {
    uint64_t v5 = sub_24A464038();
    swift_unknownObjectRelease();
    if (v5 == a1)
    {
      if (qword_269799950 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_24A464018();
      __swift_project_value_buffer(v22, (uint64_t)qword_269799958);
      swift_retain();
      uint64_t v23 = sub_24A463FF8();
      os_log_type_t v24 = sub_24A464598();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        uint64_t v29 = v26;
        *(_DWORD *)uint64_t v25 = 136446210;
        uint64_t v27 = *(void *)(v2 + 128);
        unint64_t v28 = *(void *)(v2 + 136);
        swift_bridgeObjectRetain();
        sub_24A3E0E30(v27, v28, &v29);
        sub_24A4646E8();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24A3DA000, v23, v24, "XPC client %{public}s interrupted connection", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v26, -1, -1);
        MEMORY[0x24C5C5D60](v25, -1, -1);
      }
      else
      {

        swift_release();
      }
    }
    else
    {
      uint64_t v6 = (void *)MEMORY[0x24C5C6060](a1);
      uint64_t v7 = sub_24A464368();
      unint64_t v9 = v8;
      if (qword_269799950 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_24A464018();
      __swift_project_value_buffer(v10, (uint64_t)qword_269799958);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_24A463FF8();
      os_log_type_t v12 = sub_24A464598();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v29 = v14;
        *(_DWORD *)uint64_t v13 = 136315138;
        swift_bridgeObjectRetain();
        sub_24A3E0E30(v7, v9, &v29);
        sub_24A4646E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A3DA000, v11, v12, "XPC connection triggered error: %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v14, -1, -1);
        MEMORY[0x24C5C5D60](v13, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_24A436CFC();
      free(v6);
    }
  }
}

void sub_24A4480E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793540);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for XPCObject();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v38 - v20;
  uint64_t v38 = sub_24A464368();
  uint64_t v23 = v22;
  os_log_type_t v24 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v24, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t *)&unk_2697938F0;
    uint64_t v26 = (uint64_t)v14;
  }
  else
  {
    sub_24A449970((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
    sub_24A449908((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for XPCObject);
    sub_24A3EC694((uint64_t)v19, (uint64_t)v8);
    uint64_t v27 = v41;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v8, 1, v9) != 1)
    {
      sub_24A449970((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v37 = v39;
      sub_24A449908((uint64_t)v11, v39, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v37, 0, 1, v9);
      sub_24A3ED438(v37, v38, v23);
      sub_24A44979C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      sub_24A44979C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
      return;
    }
    sub_24A44979C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t *)&unk_269793540;
    uint64_t v26 = (uint64_t)v8;
  }
  sub_24A3E2068(v26, v25);
  unint64_t v28 = (const _xpc_type_s *)MEMORY[0x24C5C6180](a2);
  xpc_type_get_name(v28);
  uint64_t v29 = sub_24A464368();
  unint64_t v31 = v30;
  if (qword_269799950 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_24A464018();
  __swift_project_value_buffer(v32, (uint64_t)qword_269799958);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_24A463FF8();
  os_log_type_t v34 = sub_24A4645B8();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v43 = v36;
    *(_DWORD *)uint64_t v35 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_24A3E0E30(v29, v31, &v43);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v33, v34, "skipping invalid payload value of type %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v36, -1, -1);
    MEMORY[0x24C5C5D60](v35, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_24A448628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_24A3E1488(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = type metadata accessor for ServiceEventValue();
    uint64_t v17 = *(void *)(v10 - 8);
    sub_24A449908(v9 + *(void *)(v17 + 72) * v8, a4, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = type metadata accessor for ServiceEventValue();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a4;
    uint64_t v13 = 1;
  }
  return v11(v12, v13, 1, v14);
}

uint64_t sub_24A448750()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_24A4487B0()
{
  sub_24A448750();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A4487DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24A464808();
  *a1 = result;
  return result;
}

uint64_t sub_24A448808()
{
  return sub_24A464BC8();
}

uint64_t sub_24A44886C(uint64_t a1, uint64_t a2)
{
  return sub_24A464BA8();
}

uint64_t sub_24A4488E4()
{
  return sub_24A464BC8();
}

BOOL sub_24A44894C(uint64_t a1, uint64_t a2)
{
  sub_24A448C7C((unint64_t *)&unk_269793FD0, a2, (void (*)(uint64_t))type metadata accessor for Client);
  uint64_t v2 = sub_24A464808();
  return v2 == sub_24A464808();
}

uint64_t sub_24A4489E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24A448A7C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_24A3E0E30(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_24A4646E8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_24A448AF4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_24A448B3C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24A3E0820;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24A3E2218;
  return sub_24A439B40(v2, v3);
}

uint64_t sub_24A448C28()
{
  return MEMORY[0x263F8D1F8];
}

uint64_t sub_24A448C34(uint64_t a1, uint64_t a2)
{
  return sub_24A448C7C(&qword_269793F90, a2, (void (*)(uint64_t))type metadata accessor for Client);
}

uint64_t sub_24A448C7C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A448CC8(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServiceTransportConfiguration()
{
  return &type metadata for ServiceTransportConfiguration;
}

uint64_t destroy for ClientIdentity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentity()
{
  return &type metadata for ClientIdentity;
}

uint64_t sub_24A449014()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char **sub_24A449024(unsigned char **result)
{
  unint64_t v2 = *result;
  unsigned char *v2 = *(unsigned char *)(v1 + 16);
  *__n128 result = v2 + 1;
  return result;
}

uint64_t sub_24A449038()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449048()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24A449070(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_24A448A7C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_24A449078()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449088()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449098()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4490A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4490BC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4490CC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4490DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24A449124@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 48) = *(void *)(v1 + 64);
  return sub_24A3E1C38(v1 + 16);
}

uint64_t sub_24A449144()
{
  (*(void (**)(void *__return_ptr))(v0 + 16))(v3);
  uint64_t v1 = sub_24A438B60();
  sub_24A3E1C84((uint64_t)v3);
  return v1;
}

uint64_t sub_24A449198()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4491A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4491B8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A4491F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449200()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449210()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A449220(uint64_t a1, uint64_t a2)
{
  sub_24A4480E0(a1, a2, *(void *)(v2 + 16));
  return 1;
}

uint64_t sub_24A449240()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_24A449268()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A4492A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4492B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4492C0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4492D0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4492E0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4492F0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449300()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449310()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449320()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A449358()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449368()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449378()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449388()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449398()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493A8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493C8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493D8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493E8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4493F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449408()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449418()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449428()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449438()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449448()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449460()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449470()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449480()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449490()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4494A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4494B0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4494C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t objectdestroy_365Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v0 + v3 + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    uint64_t v6 = sub_24A463D28();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24A449628()
{
  return sub_24A3FC7EC();
}

uint64_t sub_24A449684()
{
  return sub_24A464B38();
}

uint64_t sub_24A4496C4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4496D4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4496E4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A4496F4()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449704()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449714()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449724()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449734()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_24A449744()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_24A44979C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24A4497FC(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = sub_24A464338();
    v12[0] = sub_24A4643B8();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24A449908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A449970(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A4499D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A449A3C(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_24A464A78() & 1;
  }
}

uint64_t sub_24A449A94(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 < a1 >> 14) {
    __break(1u);
  }
  return MEMORY[0x270F9D8F0]();
}

uint64_t type metadata accessor for CachedStorebag(uint64_t a1)
{
  return sub_24A3FC974(a1, (uint64_t *)&unk_269799D80);
}

unint64_t sub_24A449C24()
{
  uint64_t v1 = sub_24A4639E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CacheError(0);
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (void **)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24A44FB1C(v0, (uint64_t)v7, type metadata accessor for CacheError);
  uint64_t v8 = 0x727265206B636F6DLL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000028;
      char v10 = "unable to access storebag cache (PERM): ";
      goto LABEL_4;
    case 2u:
      (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24A4647E8();
      sub_24A464358();
      goto LABEL_6;
    case 3u:
      uint64_t v11 = *v7;
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v14 = 0xD00000000000002BLL;
      unint64_t v15 = 0x800000024A46C090;
      swift_getErrorValue();
      sub_24A464B38();
      sub_24A464358();
      swift_bridgeObjectRelease();

      return v14;
    case 4u:
      return v8;
    default:
      (*(void (**)(char *, void **, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_24A4647E8();
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000026;
      char v10 = "unable to write storebag cache (OOS): ";
LABEL_4:
      unint64_t v14 = v9;
      unint64_t v15 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_6:
      sub_24A44A188(&qword_269793620, MEMORY[0x263F06060]);
      sub_24A464B38();
      sub_24A464358();
      swift_bridgeObjectRelease();
      uint64_t v8 = v14;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v8;
  }
}

uint64_t type metadata accessor for CacheError(uint64_t a1)
{
  return sub_24A3FC974(a1, (uint64_t *)&unk_269799D90);
}

uint64_t sub_24A449FC4()
{
  uint64_t v0 = sub_24A464018();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24A425000();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v7 = 0;
    _os_log_impl(&dword_24A3DA000, v5, v6, "mock error", v7, 2u);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for CacheError(0);
  sub_24A44A188(&qword_269794028, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_24A44A188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A44A1D0(uint64_t a1)
{
  return sub_24A44A23C(a1, "unable to write storebag cache (OOS): %{public}s", 0);
}

uint64_t sub_24A44A1F4(uint64_t a1)
{
  return sub_24A44A23C(a1, "unable to access storebag cache (PERM): %{public}s", 1);
}

uint64_t sub_24A44A218(uint64_t a1)
{
  return sub_24A44A23C(a1, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s", 2);
}

uint64_t sub_24A44A23C(uint64_t a1, const char *a2, int a3)
{
  int v32 = a3;
  unint64_t v28 = a2;
  uint64_t v4 = sub_24A4639E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24A464018();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24A425000();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v29 = v8;
  v13(v11, v12, v8);
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v31 = a1;
  uint64_t v14 = v4;
  v30(v7, a1, v4);
  unint64_t v15 = sub_24A463FF8();
  os_log_type_t v16 = sub_24A4645C8();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v34 = v27;
    uint64_t v25 = v17;
    os_log_t v26 = v15;
    *(_DWORD *)uint64_t v17 = 136446210;
    os_log_type_t v24 = v17 + 4;
    sub_24A44A188(&qword_269793620, MEMORY[0x263F06060]);
    uint64_t v18 = sub_24A464B38();
    uint64_t v33 = sub_24A3E0E30(v18, v19, &v34);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
    uint64_t v20 = v25;
    unint64_t v15 = v26;
    _os_log_impl(&dword_24A3DA000, v26, v16, v28, v25, 0xCu);
    uint64_t v21 = v27;
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v21, -1, -1);
    MEMORY[0x24C5C5D60](v20, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  type metadata accessor for CacheError(0);
  sub_24A44A188(&qword_269794028, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  v30(v22, v31, v14);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_24A44A5E8(void *a1)
{
  uint64_t v2 = sub_24A464018();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A425000();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = a1;
  id v8 = a1;
  uint64_t v9 = sub_24A463FF8();
  os_log_type_t v10 = sub_24A4645C8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    v19[1] = v12 + 4;
    swift_getErrorValue();
    uint64_t v14 = sub_24A464B38();
    uint64_t v21 = sub_24A3E0E30(v14, v15, &v22);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v9, v10, "unable to access storebag cache (UNKNOWN): %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v13, -1, -1);
    MEMORY[0x24C5C5D60](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for CacheError(0);
  sub_24A44A188(&qword_269794028, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  *os_log_type_t v16 = a1;
  swift_storeEnumTagMultiPayload();
  id v17 = a1;
  return swift_willThrow();
}

uint64_t sub_24A44A8BC()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A7D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A7D0);
  return sub_24A464008();
}

uint64_t sub_24A44A940()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A44A978(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24A44A9C0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24A44AA14()
{
  return swift_retain();
}

uint64_t sub_24A44AA4C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t (*sub_24A44AA94())()
{
  return j__swift_endAccess;
}

uint64_t sub_24A44AAE8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24A44AB20(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_24A44AB68())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_24A44ABBC()
{
  return sub_24A44ABC8(MEMORY[0x263F8EE78]);
}

unint64_t sub_24A44ABC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697940E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697940B8);
  uint64_t v6 = sub_24A464928();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24A450EF0(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_24A3E1488(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *unint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for CachedStorebag(0);
    unint64_t result = sub_24A44FB84(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A44ADA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_24A44AE18(a1, a2, a3, a4);
  return v8;
}

void *sub_24A44AE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24A463D28();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v22 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - v13;
  swift_defaultActor_initialize();
  v5[15] = 0;
  v5[16] = 0;
  v5[14] = a1;
  swift_beginAccess();
  v5[15] = a2;
  uint64_t v15 = a4;
  swift_retain();
  swift_release();
  swift_beginAccess();
  v5[16] = a3;
  uint64_t v25 = a3;
  uint64_t v16 = v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v17 = v24;
  sub_24A4264C4(a4, (void *)0x67616265726F7473, (void *)0xEA00000000002F73, (uint64_t)v14);
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    type metadata accessor for StorebagCache(0);
    swift_defaultActor_destroy();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a4, v10);
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))((uint64_t)v5 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCacheURL, v14, v10);
    type metadata accessor for StorebagCloudKitSource();
    uint64_t v18 = (uint64_t)v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, v15, v10);
    uint64_t v20 = sub_24A421414(v18);
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v10);
    *(void *)((char *)v5 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCloudKitSource) = v20;
  }
  return v5;
}

uint64_t sub_24A44B12C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v45 = a3;
  uint64_t v7 = sub_24A463E78();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794030);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v41 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for CachedStorebag(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v44 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 128);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = v18(v19);
  if (*(void *)(v20 + 16))
  {
    unint64_t v21 = sub_24A3E1488(a1, a2);
    uint64_t v23 = v16;
    if (v22)
    {
      sub_24A44FB1C(*(void *)(v20 + 56) + *(void *)(v16 + 72) * v21, (uint64_t)v14, type metadata accessor for CachedStorebag);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v24(v14, 0, 1, v15);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v24(v14, 1, 1, v15);
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v25(v14, 1, 1, v15);
    uint64_t v23 = v16;
    uint64_t v24 = v25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v15) == 1)
  {
    sub_24A3E2068((uint64_t)v14, (uint64_t *)&unk_269794030);
LABEL_16:
    uint64_t v37 = 1;
    uint64_t v36 = v45;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v36, v37, 1, v15);
  }
  uint64_t v26 = (uint64_t)v14;
  uint64_t v27 = v44;
  sub_24A44FB84(v26, v44);
  sub_24A463E38();
  char v28 = sub_24A463E08();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  if (v28)
  {
    if (qword_269799BF0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_24A464018();
    __swift_project_value_buffer(v29, (uint64_t)qword_26979A7D0);
    swift_bridgeObjectRetain_n();
    unint64_t v30 = sub_24A463FF8();
    os_log_type_t v31 = sub_24A4645D8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v43 = a1;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v42 = swift_slowAlloc();
      v47[0] = v42;
      *(_DWORD *)uint64_t v33 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24A3E0E30(v43, a2, v47);
      sub_24A4646E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v30, v31, "removing expired storebag %{public}s from memory cache", v33, 0xCu);
      uint64_t v34 = v42;
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v34, -1, -1);
      uint64_t v35 = v33;
      a1 = v43;
      MEMORY[0x24C5C5D60](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v38 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v4 + 144))(v47);
    uint64_t v39 = v41;
    sub_24A44EF48(a1, a2, v41);
    sub_24A3E2068(v39, (uint64_t *)&unk_269794030);
    v38(v47, 0);
    sub_24A4508E8(v44, type metadata accessor for CachedStorebag);
    goto LABEL_16;
  }
  uint64_t v36 = v45;
  sub_24A44FB84(v27, v45);
  uint64_t v37 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v36, v37, 1, v15);
}

uint64_t sub_24A44B69C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24A463D28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794030);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24A44B12C(a1, a2, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for CachedStorebag(0);
  char v12 = 1;
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  sub_24A3E2068((uint64_t)v10, (uint64_t *)&unk_269794030);
  if (v13 == 1)
  {
    void v15[2] = a1;
    v15[3] = a2;
    swift_bridgeObjectRetain();
    sub_24A464358();
    sub_24A463CA8();
    swift_bridgeObjectRelease();
    char v12 = sub_24A463CB8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v12 & 1;
}

uint64_t sub_24A44B8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794040);
  v4[33] = swift_task_alloc();
  uint64_t v5 = sub_24A463BD8();
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  uint64_t v6 = sub_24A463E78();
  v4[37] = v6;
  v4[38] = *(void *)(v6 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  uint64_t v7 = sub_24A463D28();
  v4[42] = v7;
  v4[43] = *(void *)(v7 - 8);
  v4[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794030);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CachedStorebag(0);
  v4[47] = v8;
  v4[48] = *(void *)(v8 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A44BB48, v3, 0);
}

uint64_t sub_24A44BB48()
{
  uint64_t v97 = v0;
  v96[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  sub_24A44B12C(*(void *)(v0 + 240), *(void *)(v0 + 248), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 400);
    sub_24A44FB84(*(void *)(v0 + 368), v7);
    int v95 = *(_DWORD *)(v7 + 8);
    uint64_t v8 = *(void *)(v7 + 24);
    uint64_t v91 = *(void *)(v7 + 16);
    uint64_t v92 = *(void *)v7;
    uint64_t v9 = *(void *)(v7 + 32);
    swift_bridgeObjectRetain();
    uint64_t v89 = v8;
    swift_bridgeObjectRetain();
    uint64_t v88 = v9;
    swift_bridgeObjectRetain();
    sub_24A4508E8(v7, type metadata accessor for CachedStorebag);
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 240);
  sub_24A3E2068(*(void *)(v0 + 368), (uint64_t *)&unk_269794030);
  v96[0] = v5;
  v96[1] = v4;
  swift_bridgeObjectRetain();
  sub_24A464358();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  char v6 = sub_24A463CB8();
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24A466020;
    uint64_t v14 = (void *)*MEMORY[0x263EFF5F8];
    *(void *)(inited + 32) = *MEMORY[0x263EFF5F8];
    id v15 = v14;
    sub_24A3EB0D4(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey();
    swift_arrayDestroy();
    sub_24A463C48();
    uint64_t v20 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v22 = *(void *)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease();
    sub_24A463BA8();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v24, 1, v20);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 264), *(void *)(v0 + 296));
    uint64_t v25 = sub_24A463D48();
    unint64_t v27 = v26;
    unsigned __int8 v28 = sub_24A400FAC();
    sub_24A401798(v25, v27, v28, v0 + 96);
    uint64_t v30 = *(void *)(v0 + 304);
    uint64_t v29 = *(void *)(v0 + 312);
    uint64_t v31 = *(void *)(v0 + 296);
    int v32 = *(_DWORD *)(v0 + 104);
    sub_24A463DE8();
    sub_24A463E38();
    LOBYTE(v25) = sub_24A463E08();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    *(void *)(v0 + 424) = v33;
    *(void *)(v0 + 432) = (v30 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v33(v29, v31);
    uint64_t v87 = v33;
    if (v25)
    {
      *(void *)(v0 + 184) = *(void *)(v0 + 96);
      sub_24A41101C(v0 + 184);
      *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
      sub_24A407ABC(v0 + 168);
      *(void *)(v0 + 200) = *(void *)(v0 + 128);
      sub_24A41101C(v0 + 200);
      if (qword_269799BF0 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_24A464018();
      __swift_project_value_buffer(v34, (uint64_t)qword_26979A7D0);
      swift_bridgeObjectRetain_n();
      uint64_t v35 = sub_24A463FF8();
      os_log_type_t v36 = sub_24A4645D8();
      BOOL v37 = os_log_type_enabled(v35, v36);
      unint64_t v38 = *(void *)(v0 + 248);
      if (v37)
      {
        uint64_t v93 = *(void *)(v0 + 240);
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        v96[0] = v40;
        *(_DWORD *)uint64_t v39 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 224) = sub_24A3E0E30(v93, v38, v96);
        sub_24A4646E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24A3DA000, v35, v36, "removing expired storebag %{public}s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v40, -1, -1);
        MEMORY[0x24C5C5D60](v39, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v65 = objc_msgSend(self, sel_defaultManager);
      uint64_t v66 = (void *)sub_24A463C88();
      *(void *)(v0 + 216) = 0;
      unsigned int v67 = objc_msgSend(v65, sel_removeItemAtURL_error_, v66, v0 + 216);

      uint64_t v68 = *(void **)(v0 + 216);
      if (v67)
      {
        uint64_t v69 = *(int **)(**(void **)(v0 + 256) + 232);
        uint64_t v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v69 + *v69);
        id v70 = v68;
        uint64_t v71 = (void *)swift_task_alloc();
        *(void *)(v0 + 440) = v71;
        *uint64_t v71 = v0;
        v71[1] = sub_24A44D624;
        uint64_t v72 = *(void *)(v0 + 248);
        uint64_t v73 = *(void *)(v0 + 240);
        return v94(v0 + 56, v73, v72);
      }
      uint64_t v75 = *(void *)(v0 + 344);
      uint64_t v74 = *(void *)(v0 + 352);
      uint64_t v77 = *(void *)(v0 + 328);
      uint64_t v76 = *(void *)(v0 + 336);
      uint64_t v78 = *(void *)(v0 + 320);
      uint64_t v79 = *(void *)(v0 + 296);
      id v80 = v68;
      sub_24A463C28();

      swift_willThrow();
      v87(v78, v79);
      v87(v77, v79);
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_5;
    }
    int v95 = v32;
    uint64_t v41 = *(void *)(v0 + 384);
    uint64_t v42 = *(void *)(v0 + 392);
    uint64_t v43 = *(void *)(v0 + 376);
    uint64_t v44 = *(void *)(v0 + 360);
    uint64_t v45 = *(void *)(v0 + 256);
    uint64_t v85 = *(void *)(v0 + 248);
    uint64_t v90 = *(void *)(v0 + 240);
    uint64_t v46 = *(void *)(v0 + 96);
    uint64_t v47 = *(void *)(v0 + 120);
    uint64_t v91 = *(void *)(v0 + 112);
    uint64_t v48 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 304) + 16))(v42 + *(int *)(v43 + 20), *(void *)(v0 + 320), *(void *)(v0 + 296));
    uint64_t v49 = *(void *)(v0 + 128);
    long long v50 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v42 + 16) = v50;
    *(void *)(v42 + 32) = v49;
    sub_24A44FB1C(v42, v44, type metadata accessor for CachedStorebag);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v43);
    uint64_t v51 = *(uint64_t (**)(uint64_t))(*(void *)v45 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v88 = v48;
    swift_bridgeObjectRetain();
    uint64_t v52 = (void (*)(uint64_t, void))v51(v0 + 136);
    sub_24A44DB9C(v44, v90, v85);
    v52(v0 + 136, 0);
    if (qword_269799BF0 != -1) {
      swift_once();
    }
    uint64_t v89 = v47;
    uint64_t v92 = v46;
    uint64_t v53 = sub_24A464018();
    __swift_project_value_buffer(v53, (uint64_t)qword_26979A7D0);
    swift_bridgeObjectRetain_n();
    uint64_t v54 = sub_24A463FF8();
    os_log_type_t v55 = sub_24A4645A8();
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v58 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v60 = *(void *)(v0 + 328);
    uint64_t v59 = *(void *)(v0 + 336);
    uint64_t v84 = *(void *)(v0 + 320);
    uint64_t v86 = *(void *)(v0 + 392);
    uint64_t v61 = *(void *)(v0 + 296);
    unint64_t v62 = *(void *)(v0 + 248);
    if (v56)
    {
      uint64_t v81 = *(void *)(v0 + 240);
      uint64_t v82 = *(void *)(v0 + 296);
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = v57;
      uint64_t v64 = swift_slowAlloc();
      v96[0] = v64;
      *(_DWORD *)uint64_t v63 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_24A3E0E30(v81, v62, v96);
      sub_24A4646E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v54, v55, "storing storebag %{public}s in cache", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v64, -1, -1);
      MEMORY[0x24C5C5D60](v63, -1, -1);

      sub_24A4508E8(v86, type metadata accessor for CachedStorebag);
      v87(v84, v82);
      v87(v60, v82);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v83, v59);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_24A4508E8(v86, type metadata accessor for CachedStorebag);
      v87(v84, v61);
      v87(v60, v61);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    }
LABEL_4:
    uint64_t v10 = *(void *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v10 = v92;
    *(_DWORD *)(v10 + 8) = v95;
    *(void *)(v10 + 16) = v91;
    *(void *)(v10 + 24) = v89;
    *(void *)(v10 + 32) = v88;
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v11();
  }
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_24A44C8F4;
  uint64_t v17 = *(void *)(v0 + 248);
  uint64_t v18 = *(void *)(v0 + 240);
  return sub_24A44DD58(v18, v17);
}

uint64_t sub_24A44C8F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v4 = sub_24A44D914;
  }
  else {
    uint64_t v4 = sub_24A44CA4C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A44CA4C()
{
  uint64_t v89 = v0;
  v88[1] = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void *)(v0 + 416);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793770);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24A466020;
  uint64_t v3 = (void *)*MEMORY[0x263EFF5F8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF5F8];
  id v4 = v3;
  sub_24A3EB0D4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_24A463C48();
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
    return v16();
  }
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v9 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease();
  sub_24A463BA8();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v6);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 264), *(void *)(v0 + 296));
  uint64_t v12 = sub_24A463D48();
  unint64_t v14 = v13;
  unsigned __int8 v15 = sub_24A400FAC();
  sub_24A401798(v12, v14, v15, v0 + 96);
  uint64_t v17 = v0 + 216;
  uint64_t v19 = *(void *)(v0 + 304);
  uint64_t v18 = *(void *)(v0 + 312);
  uint64_t v20 = *(void *)(v0 + 296);
  int v21 = *(_DWORD *)(v0 + 104);
  sub_24A463DE8();
  sub_24A463E38();
  char v22 = sub_24A463E08();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  *(void *)(v0 + 424) = v23;
  *(void *)(v0 + 432) = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v23(v18, v20);
  uint64_t v86 = v23;
  if ((v22 & 1) == 0)
  {
    int v85 = v21;
    uint64_t v34 = *(void *)(v0 + 384);
    uint64_t v33 = *(void *)(v0 + 392);
    uint64_t v35 = *(void *)(v0 + 376);
    uint64_t v36 = *(void *)(v0 + 360);
    uint64_t v37 = *(void *)(v0 + 256);
    uint64_t v77 = *(void *)(v0 + 248);
    uint64_t v79 = *(void *)(v0 + 240);
    uint64_t v38 = *(void *)(v0 + 96);
    uint64_t v39 = *(void *)(v0 + 120);
    uint64_t v84 = *(void *)(v0 + 112);
    uint64_t v40 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 304) + 16))(v33 + *(int *)(v35 + 20), *(void *)(v0 + 320), *(void *)(v0 + 296));
    uint64_t v41 = *(void *)(v0 + 128);
    long long v42 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v33 + 16) = v42;
    *(void *)(v33 + 32) = v41;
    sub_24A44FB1C(v33, v36, type metadata accessor for CachedStorebag);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
    uint64_t v43 = *(uint64_t (**)(uint64_t))(*(void *)v37 + 144);
    swift_bridgeObjectRetain();
    uint64_t v81 = v38;
    swift_bridgeObjectRetain();
    uint64_t v83 = v39;
    swift_bridgeObjectRetain();
    uint64_t v82 = v40;
    swift_bridgeObjectRetain();
    uint64_t v44 = (void (*)(uint64_t, void))v43(v0 + 136);
    sub_24A44DB9C(v36, v79, v77);
    v44(v0 + 136, 0);
    if (qword_269799BF0 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_24A464018();
    __swift_project_value_buffer(v45, (uint64_t)qword_26979A7D0);
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_24A463FF8();
    os_log_type_t v47 = sub_24A4645A8();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v49 = *(void *)(v0 + 392);
    uint64_t v51 = *(void *)(v0 + 344);
    uint64_t v50 = *(void *)(v0 + 352);
    uint64_t v53 = *(void *)(v0 + 328);
    uint64_t v52 = *(void *)(v0 + 336);
    uint64_t v80 = *(void *)(v0 + 320);
    uint64_t v54 = *(void *)(v0 + 296);
    unint64_t v55 = *(void *)(v0 + 248);
    if (v48)
    {
      uint64_t v75 = *(void *)(v0 + 240);
      uint64_t v78 = *(void *)(v0 + 328);
      BOOL v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = v49;
      uint64_t v57 = swift_slowAlloc();
      v88[0] = v57;
      *(_DWORD *)BOOL v56 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_24A3E0E30(v75, v55, v88);
      sub_24A4646E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v46, v47, "storing storebag %{public}s in cache", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v57, -1, -1);
      MEMORY[0x24C5C5D60](v56, -1, -1);

      sub_24A4508E8(v76, type metadata accessor for CachedStorebag);
      v86(v80, v54);
      v86(v78, v54);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_24A4508E8(v49, type metadata accessor for CachedStorebag);
      v86(v80, v54);
      v86(v53, v54);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    }
    uint64_t v67 = *(void *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v67 = v81;
    *(_DWORD *)(v67 + 8) = v85;
    *(void *)(v67 + 16) = v84;
    *(void *)(v67 + 24) = v83;
    *(void *)(v67 + 32) = v82;
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_6;
  }
  *(void *)(v0 + 184) = *(void *)(v0 + 96);
  sub_24A41101C(v0 + 184);
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
  sub_24A407ABC(v0 + 168);
  *(void *)(v0 + 200) = *(void *)(v0 + 128);
  sub_24A41101C(v0 + 200);
  if (qword_269799BF0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24A464018();
  __swift_project_value_buffer(v24, (uint64_t)qword_26979A7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_24A463FF8();
  os_log_type_t v26 = sub_24A4645D8();
  BOOL v27 = os_log_type_enabled(v25, v26);
  unint64_t v28 = *(void *)(v0 + 248);
  if (v27)
  {
    uint64_t v29 = *(void *)(v0 + 240);
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v88[0] = v31;
    *(_DWORD *)uint64_t v30 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 224) = sub_24A3E0E30(v29, v28, v88);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v25, v26, "removing expired storebag %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v32 = v31;
    uint64_t v17 = v0 + 216;
    MEMORY[0x24C5C5D60](v32, -1, -1);
    MEMORY[0x24C5C5D60](v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v58 = objc_msgSend(self, sel_defaultManager);
  uint64_t v59 = (void *)sub_24A463C88();
  *(void *)(v0 + 216) = 0;
  unsigned int v60 = objc_msgSend(v58, sel_removeItemAtURL_error_, v59, v17);

  uint64_t v61 = *(void **)(v0 + 216);
  if (!v60)
  {
    uint64_t v68 = *(void *)(v0 + 344);
    uint64_t v69 = *(void *)(v0 + 352);
    uint64_t v71 = *(void *)(v0 + 328);
    uint64_t v70 = *(void *)(v0 + 336);
    uint64_t v72 = *(void *)(v0 + 320);
    uint64_t v73 = *(void *)(v0 + 296);
    id v74 = v61;
    sub_24A463C28();

    swift_willThrow();
    v86(v72, v73);
    v86(v71, v73);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
    goto LABEL_5;
  }
  unint64_t v62 = *(int **)(**(void **)(v0 + 256) + 232);
  uint64_t v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v62 + *v62);
  id v63 = v61;
  uint64_t v64 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v64;
  void *v64 = v0;
  v64[1] = sub_24A44D624;
  uint64_t v65 = *(void *)(v0 + 248);
  uint64_t v66 = *(void *)(v0 + 240);
  return v87(v0 + 56, v66, v65);
}

uint64_t sub_24A44D624()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  if (v0) {
    id v4 = sub_24A44DA44;
  }
  else {
    id v4 = sub_24A44D77C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A44D77C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 296);
  v1(*(void *)(v0 + 320), v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v13 = *(void *)(v0 + 72);
  int v12 = *(_DWORD *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 232);
  long long v10 = *(_OWORD *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v7 = v11;
  *(_DWORD *)(v7 + 8) = v12;
  *(void *)(v7 + 16) = v13;
  *(_OWORD *)(v7 + 24) = v10;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24A44D914()
{
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24A44DA44()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v3 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v5 = v0[41];
  uint64_t v4 = v0[42];
  uint64_t v6 = v0[37];
  v1(v0[40], v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24A44DB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794030);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CachedStorebag(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_24A3E2068(a1, (uint64_t *)&unk_269794030);
    sub_24A44EF48(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_24A3E2068((uint64_t)v10, (uint64_t *)&unk_269794030);
  }
  else
  {
    sub_24A44FB84(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_24A44F920((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24A44DD58(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  void v3[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A44DDF0, v2, 0);
}

uint64_t sub_24A44DDF0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 152);
  uint64_t v3 = (*(void *)v1 + 152) & 0xFFFFFFFFFFFFLL | 0x6EC9000000000000;
  v0[8] = v2;
  v0[9] = v3;
  uint64_t v4 = v2();
  if (v4)
  {
    uint64_t v5 = v4;
    v0[10] = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    void *v6 = v0;
    v6[1] = sub_24A44E0D8;
    uint64_t v8 = MEMORY[0x263F8EE60] + 8;
    uint64_t v9 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FB8](v0 + 2, v5, v8, v7, v9);
  }
  else
  {
    uint64_t v11 = v0[6];
    uint64_t v10 = v0[7];
    uint64_t v13 = v0[4];
    uint64_t v12 = v0[5];
    uint64_t v14 = os_transaction_create();
    (*(void (**)(uint64_t))(*(void *)v11 + 184))(v14);
    uint64_t v15 = sub_24A4644E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
    uint64_t v16 = sub_24A44A188(&qword_2697940C8, (void (*)(uint64_t))type metadata accessor for StorebagCache);
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v11;
    v17[3] = v16;
    v17[4] = v11;
    v17[5] = v13;
    v17[6] = v12;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24A3E7624(v10, (uint64_t)&unk_2697940D0, (uint64_t)v17);
    v0[12] = v18;
    uint64_t v19 = *(void (**)(uint64_t))(*(void *)v11 + 160);
    uint64_t v20 = swift_retain();
    v19(v20);
    int v21 = (void *)swift_task_alloc();
    v0[13] = v21;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    *int v21 = v0;
    v21[1] = sub_24A44E4D4;
    uint64_t v23 = MEMORY[0x263F8EE60] + 8;
    uint64_t v24 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FA8](v22, v18, v23, v22, v24);
  }
}

uint64_t sub_24A44E0D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_24A450EE4(*(id *)(v1 + 16), *(unsigned char *)(v1 + 24));
  return MEMORY[0x270FA2498](sub_24A44E20C, v2, 0);
}

uint64_t sub_24A44E20C()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[8];
  uint64_t v2 = swift_release();
  uint64_t v3 = v1(v2);
  if (v3)
  {
    uint64_t v4 = v3;
    v0[10] = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    *uint64_t v5 = v0;
    v5[1] = sub_24A44E0D8;
    uint64_t v7 = MEMORY[0x263F8EE60] + 8;
    uint64_t v8 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FB8](v0 + 2, v4, v7, v6, v8);
  }
  else
  {
    uint64_t v10 = v0[6];
    uint64_t v9 = v0[7];
    uint64_t v12 = v0[4];
    uint64_t v11 = v0[5];
    uint64_t v13 = os_transaction_create();
    (*(void (**)(uint64_t))(*(void *)v10 + 184))(v13);
    uint64_t v14 = sub_24A4644E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    uint64_t v15 = sub_24A44A188(&qword_2697940C8, (void (*)(uint64_t))type metadata accessor for StorebagCache);
    uint64_t v16 = (void *)swift_allocObject();
    void v16[2] = v10;
    void v16[3] = v15;
    v16[4] = v10;
    v16[5] = v12;
    v16[6] = v11;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24A3E7624(v9, (uint64_t)&unk_2697940D0, (uint64_t)v16);
    v0[12] = v17;
    uint64_t v18 = *(void (**)(uint64_t))(*(void *)v10 + 160);
    uint64_t v19 = swift_retain();
    v18(v19);
    uint64_t v20 = (void *)swift_task_alloc();
    v0[13] = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    *uint64_t v20 = v0;
    v20[1] = sub_24A44E4D4;
    uint64_t v22 = MEMORY[0x263F8EE60] + 8;
    uint64_t v23 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FA8](v21, v17, v22, v21, v23);
  }
}

uint64_t sub_24A44E4D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_24A44E670;
  }
  else {
    uint64_t v4 = sub_24A44E600;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A44E600()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A44E670()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A44E6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  _OWORD v6[4] = a6;
  _OWORD v6[2] = a4;
  uint64_t v8 = sub_24A463D28();
  v6[5] = v8;
  v6[6] = *(void *)(v8 - 8);
  v6[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A44E7A8, a4, 0);
}

uint64_t sub_24A44E7A8()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCloudKitSource);
  swift_bridgeObjectRetain();
  sub_24A464358();
  sub_24A463CA8();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 136)
                                                         + **(int **)(*(void *)v1 + 136));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_24A44E91C;
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  return v7(v5, v4, v3);
}

uint64_t sub_24A44E91C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 16);
  if (v0) {
    uint64_t v7 = sub_24A44EB60;
  }
  else {
    uint64_t v7 = sub_24A44EAA4;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_24A44EAA4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  (*(void (**)(void))(*(void *)v1 + 160))(0);
  (*(void (**)(void))(*(void *)v1 + 184))(0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A44EB60()
{
  uint64_t v1 = *(void *)(v0 + 16);
  (*(void (**)(void))(*(void *)v1 + 160))(0);
  (*(void (**)(void))(*(void *)v1 + 184))(0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A44EC1C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794030);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269799BF0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_24A464018();
  __swift_project_value_buffer(v9, (uint64_t)qword_26979A7D0);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_24A463FF8();
  os_log_type_t v11 = sub_24A4645A8();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v17[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    swift_bridgeObjectRetain();
    v16[1] = sub_24A3E0E30(a1, a2, v17);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v10, v11, "evicting storebag %{public}s from cache", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v13, -1, -1);
    MEMORY[0x24C5C5D60](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v3 + 144))(v17);
  sub_24A44EF48(a1, a2, (uint64_t)v8);
  sub_24A3E2068((uint64_t)v8, (uint64_t *)&unk_269794030);
  return v14(v17, 0);
}

uint64_t sub_24A44EE84()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools13StorebagCache_storebagCacheURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for StorebagCache(uint64_t a1)
{
  return sub_24A3FC974(a1, (uint64_t *)&unk_269799DA0);
}

uint64_t sub_24A44EF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24A3E1488(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24A44F6A0();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for CachedStorebag(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_24A44FB84(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_24A44F490(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for CachedStorebag(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_24A44F0D8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for CachedStorebag(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697940B8);
  int v43 = a2;
  uint64_t v9 = sub_24A464918();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_24A44FB84(v30, (uint64_t)v7);
    }
    else
    {
      sub_24A44FB1C(v30, (uint64_t)v7, type metadata accessor for CachedStorebag);
      swift_bridgeObjectRetain();
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_24A44FB84((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_24A44F490(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24A464B98();
        swift_bridgeObjectRetain();
        sub_24A464318();
        uint64_t v9 = sub_24A464BC8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          _OWORD *v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for CachedStorebag(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *unint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_24A44F6A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CachedStorebag(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697940B8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A464908();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_24A44FB1C(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for CachedStorebag);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_24A44FB84((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24A44F920(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  int64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24A44F6A0();
      goto LABEL_7;
    }
    sub_24A44F0D8(v15, a4 & 1);
    unint64_t v22 = sub_24A3E1488(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24A464B28();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for CachedStorebag(0) - 8) + 72) * v12;
    return sub_24A450D90(a1, v20);
  }
LABEL_13:
  sub_24A44FA84(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A44FA84(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for CachedStorebag(0);
  uint64_t result = sub_24A44FB84(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_24A44FB1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24A44FB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A44FBE8()
{
  return sub_24A44A188(&qword_269794028, (void (*)(uint64_t))type metadata accessor for CacheError);
}

uint64_t sub_24A44FC30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_24A463E78();
    char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_24A44FD44(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24A463E78();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_24A44FDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24A463E78();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_24A44FE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_24A44FF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_24A44FFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24A463E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24A4500A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24A4500B4);
}

uint64_t sub_24A4500B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24A463E78();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    char v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24A450164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24A450178);
}

void *sub_24A450178(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24A463E78();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24A450220()
{
  uint64_t result = sub_24A463E78();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_24A4502B8(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v7 = sub_24A4639E8();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v10 = *a2;
        char v11 = v10;
        *(void *)a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_24A4504AC(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      uint64_t v2 = sub_24A4639E8();
      int v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 3u:
      uint64_t v4 = *a1;

      break;
    default:
      return;
  }
}

void *sub_24A45057C(void *a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      uint64_t v6 = sub_24A4639E8();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_5;
    case 3u:
      uint64_t v7 = *a2;
      id v8 = v7;
      *a1 = v7;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_24A450720(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A4508E8((uint64_t)a1, type metadata accessor for CacheError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v6 = sub_24A4639E8();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_6;
      case 3u:
        uint64_t v7 = *a2;
        id v8 = v7;
        *a1 = v7;
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24A4508E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_24A450948(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24A4639E8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_24A450AAC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A4508E8((uint64_t)a1, type metadata accessor for CacheError);
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24A4639E8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24A450C34()
{
  uint64_t result = sub_24A4639E8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_24A450CC8()
{
  return type metadata accessor for StorebagCache(0);
}

uint64_t sub_24A450CD0()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24A450D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A450DF4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24A450E3C()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  int v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *int v5 = v1;
  v5[1] = sub_24A3E0820;
  return sub_24A44E6E0((uint64_t)v5, v6, v7, v2, v3, v4);
}

void sub_24A450EE4(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_24A450EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697940E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24A450F5C()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_269799DB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269799DB8);
  return sub_24A464008();
}

uint64_t sub_24A450FE0()
{
  return swift_weakLoadStrong();
}

uint64_t sub_24A451024()
{
  return swift_release();
}

void (*sub_24A451078(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_24A4510F4;
}

void sub_24A4510F4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

unint64_t sub_24A451174(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794130);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24A3E1488(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24A451288(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794148);
  uint64_t v2 = (void *)sub_24A464928();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24A3E1488(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24A4513A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A4513DC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24A451424()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A45145C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 136) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24A4514A4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24A4514F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A451530(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 144) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_24A451578())()
{
  return j__swift_endAccess;
}

uint64_t sub_24A4515CC(char a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_24A3F2308;
  return sub_24A45168C(a1, a2, a3);
}

uint64_t sub_24A45168C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  *(void *)(v4 + 96) = a3;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 88) = a2;
  *(unsigned char *)(v4 + 160) = a1;
  *(void *)(v4 + 112) = *v5;
  uint64_t v7 = sub_24A463D28();
  *(void *)(v4 + 120) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 128) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 136) = v9;
  swift_defaultActor_initialize();
  swift_weakInit();
  uint64_t v10 = MEMORY[0x263F8EE78];
  unint64_t v11 = sub_24A451174(MEMORY[0x263F8EE78]);
  uint64_t v12 = MEMORY[0x263F8EE88];
  v5[16] = v11;
  v5[17] = v12;
  v5[18] = sub_24A451288(v10);
  type metadata accessor for StorebagCoordinator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, a3, v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_24A451840;
  return sub_24A4581AC(v9);
}

uint64_t sub_24A451840(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[16];
    uint64_t v7 = v4[15];
    uint64_t v8 = v4[12];
    swift_weakDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SessionCoordinator();
    swift_defaultActor_destroy();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v5[1];
    return v9();
  }
  else
  {
    uint64_t v11 = v4[13];
    *(void *)(v11 + 112) = a1;
    return MEMORY[0x270FA2498](sub_24A451A18, v11, 0);
  }
}

uint64_t sub_24A451A18()
{
  char v1 = *(unsigned char *)(v0 + 160);
  swift_beginAccess();
  swift_weakAssign();
  if (v1)
  {
    swift_release();
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 120));
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v3 = *(void *)(v0 + 104);
    return v2(v3);
  }
  else
  {
    uint64_t v5 = *(int **)(**(void **)(v0 + 104) + 264);
    uint64_t v7 = (uint64_t (*)(void))((char *)v5 + *v5);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v6;
    void *v6 = v0;
    v6[1] = sub_24A451BC0;
    return v7();
  }
}

uint64_t sub_24A451BC0()
{
  char v1 = (void *)*v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  id v5 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v6 = *MEMORY[0x263F536E0];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v2;
  v1[6] = sub_24A4520A0;
  v1[7] = v7;
  v1[2] = MEMORY[0x263EF8330];
  v1[3] = 1107296256;
  v1[4] = sub_24A4521A8;
  v1[5] = &block_descriptor_4;
  uint64_t v8 = _Block_copy(v1 + 2);
  swift_retain();
  swift_release();
  id v9 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, v6, 0, 0, v8);
  _Block_release(v8);
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(void, void))(v1[16] + 8))(v1[12], v1[15]);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v4 + 8);
  uint64_t v11 = v1[13];
  return v10(v11);
}

uint64_t type metadata accessor for SessionCoordinator()
{
  return self;
}

uint64_t sub_24A451EAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24A464018();
  __swift_project_value_buffer(v5, (uint64_t)qword_269799DB8);
  uint64_t v6 = sub_24A463FF8();
  os_log_type_t v7 = sub_24A4645D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_24A3DA000, v6, v7, "received notification for MC effective settings change", v8, 2u);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }

  uint64_t v9 = sub_24A4644E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_24A3E0AB0((uint64_t)v4, (uint64_t)&unk_269794140, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_24A452068()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24A4520A0()
{
  return sub_24A451EAC(*(void *)(v0 + 16));
}

uint64_t sub_24A4520A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v7 = (uint64_t (*)(void))(*(void *)(*(void *)a4 + 264) + **(int **)(*(void *)a4 + 264));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24A3E2218;
  return v7();
}

uint64_t sub_24A4521A8(uint64_t a1)
{
  uint64_t v2 = sub_24A463AC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_24A463AB8();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24A4522B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  v5[44] = *(void *)(a3 - 8);
  v5[45] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A452370, v4, 0);
}

uint64_t sub_24A452370()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(*(void *)(v0 + 344) + 112);
  *(void *)(v0 + 368) = v3;
  long long v9 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 216) = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 192));
  uint64_t v5 = *(void (**)(uint64_t *, uint64_t, void))(v1 + 16);
  *(void *)(v0 + 376) = v5;
  *(void *)(v0 + 384) = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(boxed_opaque_existential_1, v2, v9);
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v3 + 128) + **(int **)(*(void *)v3 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v6;
  void *v6 = v0;
  v6[1] = sub_24A4524CC;
  return v8(v0 + 192);
}

uint64_t sub_24A4524CC(char a1)
{
  uint64_t v2 = *(void *)v1 + 192;
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  *(unsigned char *)(*(void *)v1 + 432) = a1;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_0(v2);
  return MEMORY[0x270FA2498](sub_24A4525F0, v3, 0);
}

uint64_t sub_24A4525F0()
{
  if (static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 3)
    || static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 2))
  {
    uint64_t v1 = v0 + 272;
    uint64_t v2 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 376);
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 320);
    *(void *)(v0 + 296) = v5;
    *(void *)(v0 + 304) = v4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 272));
    v2(boxed_opaque_existential_1, v6, v5);
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v3 + 136)
                                                   + **(int **)(*(void *)v3 + 136));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_24A452950;
    uint64_t v9 = v0 + 152;
LABEL_4:
    return v30(v9, v1);
  }
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v13 = (void *)(v0 + 328);
  uint64_t v15 = *(void *)(v0 + 320);
  uint64_t v14 = *(void *)(v0 + 328);
  BOOL v16 = static SessionConfiguration.Availability.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 1);
  v11(v12, v15, v14);
  uint64_t v18 = *(void *)(v0 + 352);
  uint64_t v17 = *(void *)(v0 + 360);
  if (v16)
  {
    uint64_t v19 = *(void *)(v0 + 328);
    (*(void (**)(uint64_t))(*(void *)(v0 + 336) + 8))(v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_24A3E1C84(v0 + 16);
    if (*(unsigned char *)(v0 + 49))
    {
      uint64_t v1 = v0 + 232;
      uint64_t v20 = *(void (**)(uint64_t *, uint64_t, void))(v0 + 376);
      uint64_t v21 = *(void *)(v0 + 368);
      uint64_t v22 = *(void *)(v0 + 320);
      long long v31 = *(_OWORD *)v13;
      *(_OWORD *)(v0 + 256) = *(_OWORD *)v13;
      char v23 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 232));
      v20(v23, v22, v31);
      uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v21 + 136)
                                                     + **(int **)(*(void *)v21 + 136));
      unint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v24;
      void *v24 = v0;
      v24[1] = sub_24A452AD4;
      uint64_t v9 = v0 + 72;
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(void, void))(v18 + 8))(*(void *)(v0 + 360), *v13);
  }
  sub_24A3FCBB4(v0 + 112);
  uint64_t v25 = *(void *)(v0 + 312);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  char v28 = *(unsigned char *)(v0 + 128);
  long long v32 = *(_OWORD *)(v0 + 112);
  swift_task_dealloc();
  *(_OWORD *)uint64_t v25 = v32;
  *(unsigned char *)(v25 + 16) = v28;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = v27;
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_24A452950()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    return MEMORY[0x270FA2498](sub_24A452C58, v3, 0);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v6 = *(void *)(v2 + 184);
    char v7 = *(unsigned char *)(v2 + 168);
    long long v10 = *(_OWORD *)(v2 + 152);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v4 = v10;
    *(unsigned char *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v5;
    *(void *)(v4 + 32) = v6;
    uint64_t v8 = *(uint64_t (**)(void))(v2 + 8);
    return v8();
  }
}

uint64_t sub_24A452AD4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    return MEMORY[0x270FA2498](sub_24A452CC4, v3, 0);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 232);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = *(void *)(v2 + 96);
    uint64_t v6 = *(void *)(v2 + 104);
    char v7 = *(unsigned char *)(v2 + 88);
    long long v10 = *(_OWORD *)(v2 + 72);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v4 = v10;
    *(unsigned char *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v5;
    *(void *)(v4 + 32) = v6;
    uint64_t v8 = *(uint64_t (**)(void))(v2 + 8);
    return v8();
  }
}

uint64_t sub_24A452C58()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 272);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A452CC4()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 232);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24A452D30(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(uint64_t (**)(uint64_t *))(*(void *)v2 + 168);
  swift_bridgeObjectRetain();
  char v7 = (void (*)(uint64_t *, void))v6(v36);
  uint64_t v9 = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (void *)*v9;
  unint64_t v35 = (void *)*v9;
  *uint64_t v9 = 0x8000000000000000;
  unint64_t v13 = sub_24A3E1488(a1, a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_24A456254();
    }
  }
  else
  {
    sub_24A455F48(v16, isUniquelyReferenced_nonNull_native);
    unint64_t v18 = sub_24A3E1488(a1, a2);
    if ((v17 & 1) != (v19 & 1))
    {
LABEL_21:
      sub_24A464B28();
      __break(1u);
      return;
    }
    unint64_t v13 = v18;
  }
  *uint64_t v9 = v35;
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)*v9;
  if (v17) {
    goto LABEL_10;
  }
  v20[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v21 = (uint64_t *)(v20[6] + 16 * v13);
  *uint64_t v21 = a1;
  v21[1] = a2;
  *(void *)(v20[7] + 8 * v13) = 0;
  uint64_t v22 = v20[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  void v20[2] = v24;
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v25 = v20[7];
  uint64_t v26 = *(void *)(v25 + 8 * v13);
  BOOL v23 = __OFADD__(v26, 1);
  uint64_t v27 = v26 + 1;
  if (!v23)
  {
    *(void *)(v25 + 8 * v13) = v27;
    swift_bridgeObjectRelease();
    v7(v36, 0);
    if (qword_269799DB0 == -1) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_12:
  uint64_t v28 = sub_24A464018();
  __swift_project_value_buffer(v28, (uint64_t)qword_269799DB8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v29 = sub_24A463FF8();
  os_log_type_t v30 = sub_24A4645A8();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)uint64_t v31 = 136446466;
    swift_bridgeObjectRetain();
    sub_24A3E0E30(a1, a2, v36);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2048;
    long long v32 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 152);
    uint64_t v33 = swift_bridgeObjectRetain();
    if (*(void *)(v32(v33) + 16)) {
      sub_24A3E1488(a1, a2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_24A3DA000, v29, v30, "registered use for session config for %{public}s, now %lld uses", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v34, -1, -1);
    MEMORY[0x24C5C5D60](v31, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_24A453120(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(uint64_t (**)(uint64_t))(v8 + 152);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = v12(v13);
  if (*(void *)(v14 + 16))
  {
    unint64_t v15 = sub_24A3E1488(a1, a2);
    if (v16)
    {
      LODWORD(v64) = a3;
      uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v17 - 1;
      if (__OFSUB__(v17, 1))
      {
        __break(1u);
      }
      else if (qword_269799DB0 == -1)
      {
        goto LABEL_5;
      }
      swift_once();
LABEL_5:
      uint64_t v19 = sub_24A464018();
      uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_269799DB8);
      swift_bridgeObjectRetain_n();
      uint64_t v61 = v20;
      uint64_t v21 = sub_24A463FF8();
      os_log_type_t v22 = sub_24A4645A8();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v62 = v8;
      id v63 = v11;
      if (v23)
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        v66[0] = v25;
        *(_DWORD *)uint64_t v24 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v26 = a1;
        uint64_t v65 = sub_24A3E0E30(a1, a2, v66);
        sub_24A4646E8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2050;
        uint64_t v65 = v18;
        sub_24A4646E8();
        _os_log_impl(&dword_24A3DA000, v21, v22, "session config finished for %{public}s with %{public}lld uses remaining", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24C5C5D60](v25, -1, -1);
        MEMORY[0x24C5C5D60](v24, -1, -1);
      }
      else
      {
        uint64_t v26 = a1;
        swift_bridgeObjectRelease_n();
      }

      long long v32 = *(uint64_t (**)(uint64_t *))(*v4 + 168);
      if (v18 > 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = (void (*)(uint64_t *, void))v32(v66);
        unint64_t v35 = v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v65 = *v35;
        *unint64_t v35 = 0x8000000000000000;
        sub_24A456784(v18, v26, a2, isUniquelyReferenced_nonNull_native);
        *unint64_t v35 = v65;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33(v66, 0);
        return;
      }
      uint64_t v37 = (uint64_t (*)(uint64_t *, void))v32(v66);
      uint64_t v38 = v26;
      sub_24A456404(v26, a2);
      uint64_t v39 = v37(v66, 0);
      if (v64)
      {
        uint64_t v40 = (*(uint64_t (**)(uint64_t))(*v4 + 176))(v39);
        char v41 = sub_24A3F7CEC(v26, a2, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v42 = sub_24A463FF8();
        os_log_type_t v43 = sub_24A4645A8();
        BOOL v44 = os_log_type_enabled(v42, v43);
        if (v41)
        {
          if (v44)
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            uint64_t v46 = swift_slowAlloc();
            v66[0] = v46;
            *(_DWORD *)uint64_t v45 = 136446210;
            swift_bridgeObjectRetain();
            uint64_t v65 = sub_24A3E0E30(v26, a2, v66);
            sub_24A4646E8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_24A3DA000, v42, v43, "not evicting %{public}s: already running", v45, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x24C5C5D60](v46, -1, -1);
            MEMORY[0x24C5C5D60](v45, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          return;
        }
        if (v44)
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          v66[0] = v53;
          *(_DWORD *)uint64_t v52 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v65 = sub_24A3E0E30(v26, a2, v66);
          sub_24A4646E8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24A3DA000, v42, v43, "starting eviction timer for %{public}s", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5C5D60](v53, -1, -1);
          MEMORY[0x24C5C5D60](v52, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v54 = *(uint64_t (**)(uint64_t *))(*v4 + 192);
        swift_bridgeObjectRetain();
        unint64_t v55 = (void (*)(uint64_t *, void))v54(v66);
        sub_24A40501C(&v65, v26, a2);
        swift_bridgeObjectRelease();
        v55(v66, 0);
        uint64_t v56 = sub_24A4644E8();
        uint64_t v57 = (uint64_t)v63;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v63, 1, 1, v56);
        unint64_t v58 = sub_24A4564E4();
        uint64_t v59 = (void *)swift_allocObject();
        v59[2] = v4;
        v59[3] = v58;
        v59[4] = v4;
        v59[5] = v38;
        uint64_t v60 = v62;
        v59[6] = a2;
        v59[7] = v60;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_24A3E7624(v57, (uint64_t)&unk_269794120, (uint64_t)v59);
      }
      else
      {
        uint64_t v47 = sub_24A4644E8();
        uint64_t v48 = (uint64_t)v63;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v63, 1, 1, v47);
        unint64_t v49 = sub_24A4564E4();
        uint64_t v50 = (void *)swift_allocObject();
        id v50[2] = v4;
        v50[3] = v49;
        v50[4] = v38;
        v50[5] = a2;
        uint64_t v51 = v62;
        v50[6] = v4;
        v50[7] = v51;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_24A3E0AB0(v48, (uint64_t)&unk_269794110, (uint64_t)v50);
      }
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_24A464018();
  __swift_project_value_buffer(v27, (uint64_t)qword_269799DB8);
  swift_bridgeObjectRetain_n();
  uint64_t v64 = sub_24A463FF8();
  os_log_type_t v28 = sub_24A4645B8();
  if (os_log_type_enabled(v64, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v66[0] = v30;
    *(_DWORD *)uint64_t v29 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_24A3E0E30(a1, a2, v66);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v64, v28, "session config finished with no use count for %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v30, -1, -1);
    MEMORY[0x24C5C5D60](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v64;
  }
}

uint64_t sub_24A453A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  char v7 = (void *)swift_task_alloc();
  v6[15] = v7;
  *char v7 = v6;
  v7[1] = sub_24A453B30;
  return MEMORY[0x270FA1FF0](10000000000);
}

uint64_t sub_24A453B30()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_24A45432C;
  }
  else {
    uint64_t v3 = sub_24A453C58;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_24A453C58()
{
  uint64_t v32 = v0;
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A464018();
  __swift_project_value_buffer(v1, (uint64_t)qword_269799DB8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A463FF8();
  os_log_type_t v3 = sub_24A4645A8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 112);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 104);
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_24A3E0E30(v6, v5, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v2, v3, "eviction timer fired: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 152);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = v9(v10);
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_24A3E1488(*(void *)(v0 + 104), *(void *)(v0 + 112)), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
    {
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 112);
      uint64_t v17 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 48);
      sub_24A4569B8(v16, v15);
      swift_bridgeObjectRelease();
      v17(v0 + 48, 0);
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_24A463FF8();
  os_log_type_t v21 = sub_24A4645A8();
  BOOL v22 = os_log_type_enabled(v20, v21);
  unint64_t v23 = *(void *)(v0 + 112);
  if (v22)
  {
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v26;
    *(_DWORD *)uint64_t v25 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_24A3E0E30(v24, v23, &v31);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v20, v21, "requesting eviction for %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v26, -1, -1);
    MEMORY[0x24C5C5D60](v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 96) + 112) + 144)
                                                 + **(int **)(**(void **)(*(void *)(v0 + 96) + 112) + 144));
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v27;
  void *v27 = v0;
  v27[1] = sub_24A45414C;
  uint64_t v29 = *(void *)(v0 + 104);
  uint64_t v28 = *(void *)(v0 + 112);
  return v30(v29, v28);
}

uint64_t sub_24A45414C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A45425C, v1, 0);
}

uint64_t sub_24A45425C()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 48);
  sub_24A4569B8(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 48, 0);
  BOOL v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A45432C()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 16);
  sub_24A4569B8(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 16, 0);
  BOOL v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A4543FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return MEMORY[0x270FA2498](sub_24A454420, a6, 0);
}

uint64_t sub_24A454420()
{
  uint64_t v15 = v0;
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24A464018();
  __swift_project_value_buffer(v1, (uint64_t)qword_269799DB8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24A463FF8();
  os_log_type_t v3 = sub_24A4645A8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_24A3E0E30(v6, v5, &v14);
    sub_24A4646E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24A3DA000, v2, v3, "requesting immediate eviction for %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)(v0[5] + 112) + 144)
                                                 + **(int **)(**(void **)(v0[5] + 112) + 144));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24A4546BC;
  uint64_t v11 = v0[3];
  uint64_t v10 = v0[4];
  return v13(v11, v10);
}

uint64_t sub_24A4546BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24A4547B0()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x270FA2498](sub_24A4547D0, v0, 0);
}

uint64_t sub_24A4547D0()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 56) + 128))();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    void *v2 = v0;
    v2[1] = sub_24A454984;
    return sub_24A3F55F0();
  }
  else
  {
    if (qword_269799DB0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24A464018();
    __swift_project_value_buffer(v4, (uint64_t)qword_269799DB8);
    unint64_t v5 = sub_24A463FF8();
    os_log_type_t v6 = sub_24A4645C8();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting : diskCache nil", v7, 2u);
      MEMORY[0x24C5C5D60](v7, -1, -1);
    }

    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_24A454984(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 160) = a1;
  *(void *)(v4 + 80) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 56);
  if (v1) {
    os_log_type_t v6 = sub_24A455428;
  }
  else {
    os_log_type_t v6 = sub_24A454ABC;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_24A454ABC()
{
  int v1 = *(unsigned __int8 *)(v0 + 160);
  if (v1 == 2)
  {
    if (qword_269799DB0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24A464018();
    __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
    uint64_t v3 = sub_24A463FF8();
    os_log_type_t v4 = sub_24A4645D8();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_24A3DA000, v3, v4, "resetting clientIDs due to missing lastDNU setting", v5, 2u);
      MEMORY[0x24C5C5D60](v5, -1, -1);
    }

    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v6;
    void *v6 = v0;
    char v7 = sub_24A4550CC;
LABEL_13:
    v6[1] = v7;
    return sub_24A3F53C4();
  }
  int v8 = v1 & 1;
  if (v8 != (sub_24A4255B0() & 1))
  {
    if (qword_269799DB0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A464018();
    __swift_project_value_buffer(v9, (uint64_t)qword_269799DB8);
    uint64_t v10 = sub_24A463FF8();
    os_log_type_t v11 = sub_24A4645D8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67240448;
      *(_DWORD *)(v0 + 152) = v8;
      sub_24A4646E8();
      *(_WORD *)(v12 + 8) = 1026;
      *(_DWORD *)(v0 + 156) = sub_24A4255B0() & 1;
      sub_24A4646E8();
      _os_log_impl(&dword_24A3DA000, v10, v11, "DNU status changed (%{BOOL,public}d -> %{BOOL,public}d), resetting clientIDs", (uint8_t *)v12, 0xEu);
      MEMORY[0x24C5C5D60](v12, -1, -1);
    }

    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v6;
    void *v6 = v0;
    char v7 = sub_24A454DD0;
    goto LABEL_13;
  }
  swift_release();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_24A454DD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    os_log_type_t v4 = sub_24A455650;
  }
  else {
    os_log_type_t v4 = sub_24A454EFC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A454EFC()
{
  char v1 = sub_24A4255B0();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  void *v2 = v0;
  v2[1] = sub_24A454FA0;
  return sub_24A3F58A8(v1 & 1);
}

uint64_t sub_24A454FA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_24A455878;
  }
  else {
    uint64_t v4 = sub_24A456DE4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A4550CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_24A455AA0;
  }
  else {
    uint64_t v4 = sub_24A4551F8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A4551F8()
{
  char v1 = sub_24A4255B0();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  void *v2 = v0;
  v2[1] = sub_24A45529C;
  return sub_24A3F58A8(v1 & 1);
}

uint64_t sub_24A45529C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_24A455CC8;
  }
  else {
    uint64_t v4 = sub_24A4553C8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A4553C8()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A455428()
{
  uint64_t v14 = v0;
  swift_release();
  char v1 = (void *)v0[10];
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    v0[6] = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24A455650()
{
  uint64_t v14 = v0;
  swift_release();
  char v1 = (void *)v0[12];
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    v0[6] = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24A455878()
{
  uint64_t v14 = v0;
  swift_release();
  char v1 = (void *)v0[14];
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    v0[6] = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24A455AA0()
{
  uint64_t v14 = v0;
  swift_release();
  char v1 = (void *)v0[16];
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    v0[6] = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24A455CC8()
{
  uint64_t v14 = v0;
  swift_release();
  char v1 = (void *)v0[18];
  if (qword_269799DB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_269799DB8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)char v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    v0[6] = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to check last DNU setting: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_24A455EF0()
{
  swift_release();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24A455F48(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794130);
  char v37 = a2;
  uint64_t v6 = sub_24A464918();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    BOOL v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          id v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v34;
  BOOL v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

void *sub_24A456254()
{
  char v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794130);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24A464908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    BOOL v22 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24A456404(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24A3E1488(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24A456254();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_24A433AB4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_24A4564E4()
{
  unint64_t result = qword_269794108;
  if (!qword_269794108)
  {
    type metadata accessor for SessionCoordinator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269794108);
  }
  return result;
}

uint64_t sub_24A456538()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24A456580()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24A3E0820;
  v5[4] = v3;
  v5[5] = v4;
  v5[3] = v2;
  return MEMORY[0x270FA2498](sub_24A454420, v4, 0);
}

uint64_t sub_24A45663C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24A456684()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_24A3E0820;
  *(void *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v6;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 120) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_24A453B30;
  return MEMORY[0x270FA1FF0](10000000000);
}

uint64_t sub_24A456784(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24A3E1488(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24A456254();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24A455F48(result, a4 & 1);
  uint64_t result = sub_24A3E1488(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_24A464B28();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SessionHierarchyItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionHierarchyItem()
{
  return &type metadata for SessionHierarchyItem;
}

uint64_t sub_24A4569B8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_24A464B98();
  swift_bridgeObjectRetain();
  sub_24A464318();
  uint64_t v6 = sub_24A464BC8();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_24A464A78() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      char v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_24A464A78() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24A405648();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_24A456B48(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_24A456B48(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_24A464738();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_24A464B98();
        swift_bridgeObjectRetain();
        sub_24A464318();
        uint64_t v10 = sub_24A464BC8();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_24A456D10()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A456D50()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A3E2218;
  return sub_24A4520A8((uint64_t)v3, v4, v5, v2);
}

uint64_t variable initialization expression of StorebagCoordinator.pathMonitorQueue()
{
  uint64_t v11 = sub_24A464108();
  uint64_t v0 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24A464608();
  uint64_t v3 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v9 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24A4645F8();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_24A464138();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24A435A8C();
  sub_24A464118();
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_24A4590A8(&qword_269793F58, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793FC0);
  sub_24A3E9130((unint64_t *)&qword_269793F60, (uint64_t *)&unk_269793FC0);
  sub_24A464728();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v9, *MEMORY[0x263F8F138], v10);
  uint64_t v7 = v11;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F8F040], v11);
  sub_24A464638();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v7);
  return sub_24A464628();
}

char *StorebagCoordinator.mockAvailability.unsafeMutableAddressor()
{
  return &static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.getter()
{
  return static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  static StorebagCoordinator.mockAvailability = a1;
  return result;
}

uint64_t (*static StorebagCoordinator.mockAvailability.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_24A4571E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24A4640F8();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24A464138();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2697941A8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  v17[1] = *(void *)(a2 + 120);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_24A459000;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A3E77AC;
  aBlock[3] = &block_descriptor_5;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  sub_24A464128();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24A4590A8(&qword_269793738, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269793740);
  sub_24A3E9130(&qword_269793748, &qword_269793740);
  sub_24A464728();
  MEMORY[0x24C5C4DA0](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_24A457564(uint64_t a1, uint64_t a2)
{
  v23[1] = a2;
  uint64_t v3 = sub_24A4640C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = sub_24A4640E8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  BOOL v16 = (char *)v23 - v15;
  swift_beginAccess();
  if (static StorebagCoordinator.mockAvailability != 4)
  {
    char v24 = static StorebagCoordinator.mockAvailability;
    __swift_instantiateConcreteTypeFromMangledName(qword_2697941A8);
    return sub_24A4644B8();
  }
  v23[0] = a1;
  sub_24A464058();
  sub_24A4640D8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F142E8], v3);
  char v17 = sub_24A4640B8();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v7, v3);
  v18(v9, v3);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v14, v10);
LABEL_6:
    char v24 = 0;
    __swift_instantiateConcreteTypeFromMangledName(qword_2697941A8);
    sub_24A4644B8();
    return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
  }
  char v21 = sub_24A4640A8();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  if (v21) {
    goto LABEL_6;
  }
  if (sub_24A464098()) {
    char v22 = 1;
  }
  else {
    char v22 = 2;
  }
  char v24 = v22;
  __swift_instantiateConcreteTypeFromMangledName(qword_2697941A8);
  sub_24A4644B8();
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_24A4578A0(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = v1;
  return MEMORY[0x270FA2498](sub_24A4578C0, v1, 0);
}

uint64_t sub_24A4578C0()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = *(void *)(v0[10] + 128);
  v0[11] = v2;
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v5 = v0[3];
  v0[12] = v0[2];
  v0[13] = v5;
  swift_bridgeObjectRetain();
  sub_24A3E1C84((uint64_t)(v0 + 2));
  unint64_t v6 = (*(void *)v2 + 224) & 0xFFFFFFFFFFFFLL | 0xE7F4000000000000;
  v0[14] = *(void *)(*(void *)v2 + 224);
  v0[15] = v6;
  return MEMORY[0x270FA2498](sub_24A4579A0, v2, 0);
}

uint64_t sub_24A4579A0()
{
  char v1 = (*(uint64_t (**)(void, void))(v0 + 112))(*(void *)(v0 + 96), *(void *)(v0 + 104));
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v2(3);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 80);
    return MEMORY[0x270FA2498](sub_24A457A58, v4, 0);
  }
}

uint64_t sub_24A457A58()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_24A4590A8(qword_269794160, (void (*)(uint64_t))type metadata accessor for StorebagCoordinator);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24A457B78;
  uint64_t v4 = *(void *)(v0 + 80);
  return MEMORY[0x270FA2318](v0 + 136, v1, v2, 0xD000000000000013, 0x800000024A46C380, sub_24A457CEC, v4, &type metadata for SessionConfiguration.Availability);
}

uint64_t sub_24A457B78()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A457C88, v1, 0);
}

uint64_t sub_24A457C88()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t type metadata accessor for StorebagCoordinator()
{
  uint64_t result = qword_269799F60;
  if (!qword_269799F60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24A457CEC(uint64_t a1)
{
  return sub_24A4571E0(a1, v1);
}

uint64_t sub_24A457CF4(uint64_t a1, uint64_t a2)
{
  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  return MEMORY[0x270FA2498](sub_24A457D18, v2, 0);
}

uint64_t sub_24A457D18()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = *(void *)(v0[25] + 128);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  v0[26] = v6;
  swift_bridgeObjectRetain();
  sub_24A3E1C84((uint64_t)(v0 + 2));
  unint64_t v9 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(*(void *)v2 + 232)
                                                          + **(int **)(*(void *)v2 + 232));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[27] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24A457E94;
  return v9(v0 + 14, v5, v6);
}

uint64_t sub_24A457E94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = sub_24A458074;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 200);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24A457FB8;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A457FB8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  sub_24A401BD4(*(void **)(v0 + 192), (_OWORD *)(v0 + 72));
  *(void *)(v0 + 168) = *(void *)(v0 + 112);
  sub_24A41101C(v0 + 168);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 128);
  sub_24A407ABC(v0 + 152);
  *(void *)(v0 + 176) = *(void *)(v0 + 144);
  sub_24A41101C(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 88);
  long long v3 = *(_OWORD *)(v0 + 72);
  *(void *)(v1 + 32) = *(void *)(v0 + 104);
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24A458074()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A4580D8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24A4580FC, v2, 0);
}

uint64_t sub_24A4580FC()
{
  uint64_t v1 = *(void **)(v0[4] + 128);
  v0[5] = v1;
  uint64_t v2 = *v1 + 256;
  v0[6] = *(void *)v2;
  v0[7] = v2 & 0xFFFFFFFFFFFFLL | 0xA38A000000000000;
  return MEMORY[0x270FA2498](sub_24A458144, v1, 0);
}

uint64_t sub_24A458144()
{
  (*(void (**)(void, void))(v0 + 48))(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A4581AC(uint64_t a1)
{
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A3F2308;
  return sub_24A458254(a1);
}

uint64_t sub_24A458254(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_24A463D28();
  v2[5] = v3;
  uint64_t v21 = *(void *)(v3 - 8);
  v2[6] = v21;
  uint64_t v19 = swift_task_alloc();
  v2[7] = v19;
  uint64_t v22 = sub_24A464108();
  uint64_t v20 = *(void *)(v22 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[8] = v4;
  uint64_t v5 = sub_24A464608();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  uint64_t v6 = swift_task_alloc();
  v2[9] = v6;
  sub_24A4645F8();
  v2[10] = swift_task_alloc();
  sub_24A464138();
  v2[11] = swift_task_alloc();
  swift_defaultActor_initialize();
  sub_24A435A8C();
  sub_24A464118();
  v2[2] = MEMORY[0x263F8EE78];
  sub_24A4590A8(&qword_269793F58, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269793FC0);
  sub_24A3E9130((unint64_t *)&qword_269793F60, (uint64_t *)&unk_269793FC0);
  sub_24A464728();
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v6, *MEMORY[0x263F8F138], v18);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v4, *MEMORY[0x263F8F040], v22);
  sub_24A464638();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v4, v22);
  v16[15] = sub_24A464628();
  type metadata accessor for StorebagCache(0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  uint64_t v23 = v3;
  v7(v19, a1, v3);
  unint64_t v8 = sub_24A44ABBC();
  v16[16] = sub_24A44ADA8(v8, 0, 0, v19);
  __swift_instantiateConcreteTypeFromMangledName(qword_269794188);
  uint64_t v9 = sub_24A464048();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24A466020;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x263F141B0], v9);
  sub_24A464088();
  swift_allocObject();
  v16[14] = sub_24A464068();
  uint64_t v13 = (void *)v16[15];
  swift_retain();
  id v14 = v13;
  sub_24A464078();
  swift_release();

  v7((uint64_t)v16 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL, a1, v23);
  return MEMORY[0x270FA2498](sub_24A45882C, v16, 0);
}

uint64_t sub_24A45882C()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[3], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[4];
  return v1(v2);
}

uint64_t StorebagCoordinator.deinit()
{
  swift_release();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t StorebagCoordinator.__deallocating_deinit()
{
  swift_release();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CloudTelemetryTools19StorebagCoordinator_rootCacheURL;
  uint64_t v2 = sub_24A463D28();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t StorebagCoordinator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24A458A0C(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24A438DCC;
  return v6(a1);
}

uint64_t sub_24A458B10(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 56) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24A458C24;
  return v7(v3 + 16, a2);
}

uint64_t sub_24A458C24()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v4 = *(void *)(v2 + 56);
    long long v5 = *(_OWORD *)(v2 + 16);
    long long v6 = *(_OWORD *)(v2 + 32);
    *(void *)(v4 + 32) = *(void *)(v2 + 48);
    *(_OWORD *)uint64_t v4 = v5;
    *(_OWORD *)(v4 + 16) = v6;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v3 + 8);
  return v7();
}

uint64_t sub_24A458D34(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_24A3E0820;
  return v8(a1, a2);
}

uint64_t sub_24A458E40(uint64_t a1)
{
  uint64_t result = sub_24A4590A8(qword_269794160, (void (*)(uint64_t))type metadata accessor for StorebagCoordinator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24A458E98()
{
  return type metadata accessor for StorebagCoordinator();
}

uint64_t sub_24A458EA0()
{
  uint64_t result = sub_24A463D28();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24A458F58()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2697941A8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_24A459000()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2697941A8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_24A457564(v0 + v2, v3);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_24A4590A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24A4590F0()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A7F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A7F8);
  return sub_24A464008();
}

uint64_t sub_24A45916C()
{
  v1[7] = v0;
  uint64_t v2 = sub_24A463E78();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24A45923C, v0, 0);
}

uint64_t sub_24A45923C()
{
  uint64_t v1 = *(void *)(v0[7] + 112);
  v0[12] = v1;
  if (v1)
  {
    uint64_t v2 = v0[10];
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[9];
    swift_retain();
    sub_24A463E38();
    sub_24A463DE8();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v0[13] = v5;
    v0[14] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v5(v2, v3);
    unint64_t v6 = (void *)swift_task_alloc();
    v0[15] = v6;
    void *v6 = v0;
    v6[1] = sub_24A459448;
    uint64_t v7 = v0[11];
    return sub_24A3F4888(v7);
  }
  else
  {
    if (qword_269799F70 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A464018();
    __swift_project_value_buffer(v9, (uint64_t)qword_26979A7F8);
    uint64_t v10 = sub_24A463FF8();
    os_log_type_t v11 = sub_24A4645D8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl(&dword_24A3DA000, v10, v11, "cleanup cache activity skipped due to bad initialization", v12, 2u);
      MEMORY[0x24C5C5D60](v12, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_24A459448()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return MEMORY[0x270FA2498](sub_24A459770, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[17] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_24A4595B8;
    return sub_24A3F5AA0();
  }
}

uint64_t sub_24A4595B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_24A4599C4;
  }
  else {
    uint64_t v4 = sub_24A4596E4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24A4596E4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24A459770()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 128);
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  if (qword_269799F70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_26979A7F8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    *(void *)(v0 + 48) = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to delete outdated sessions: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24A4599C4()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 144);
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  if (qword_269799F70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_26979A7F8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_24A463FF8();
  os_log_type_t v6 = sub_24A4645C8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = sub_24A464B38();
    *(void *)(v0 + 48) = sub_24A3E0E30(v9, v10, &v13);
    sub_24A4646E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24A3DA000, v5, v6, "failed to delete outdated sessions: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v8, -1, -1);
    MEMORY[0x24C5C5D60](v7, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24A459C18()
{
  id v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 104) + **(int **)(*(void *)v0 + 104));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_24A3E0820;
  return v4();
}

uint64_t sub_24A459D0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A459D50()
{
  uint64_t v0 = *(void *)CacheCleanupActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_24A459D84(uint64_t a1)
{
  unint64_t result = sub_24A459DAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24A459DAC()
{
  unint64_t result = qword_2697941C0;
  if (!qword_2697941C0)
  {
    type metadata accessor for CacheCleanupActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697941C0);
  }
  return result;
}

uint64_t type metadata accessor for CacheCleanupActivity()
{
  return self;
}

uint64_t variable initialization expression of RequestOptions.networkingDelegate()
{
  return 0;
}

uint64_t sub_24A459E2C()
{
  type metadata accessor for RequestOptions();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  uint64_t result = swift_unknownObjectRelease();
  static RequestOptions.globalRequestOptions = v0;
  return result;
}

uint64_t RequestOptions.__allocating_init(networkingDelegate:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_unknownObjectRelease();
  return v2;
}

uint64_t *RequestOptions.globalRequestOptions.unsafeMutableAddressor()
{
  if (qword_26979A080 != -1) {
    swift_once();
  }
  return &static RequestOptions.globalRequestOptions;
}

uint64_t static RequestOptions.globalRequestOptions.getter()
{
  if (qword_26979A080 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static RequestOptions.globalRequestOptions.setter(uint64_t a1)
{
  if (qword_26979A080 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static RequestOptions.globalRequestOptions = a1;
  return swift_release();
}

uint64_t (*static RequestOptions.globalRequestOptions.modify())()
{
  if (qword_26979A080 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t RequestOptions.init(networkingDelegate:)(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  swift_unknownObjectRelease();
  return v1;
}

id sub_24A45A12C(unsigned int a1)
{
  char v2 = a1;
  uint64_t v3 = (a1 >> 8) & 1;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F2BDA8]), sel_init);
  objc_msgSend(v4, sel_set_timeoutIntervalForRequest_, 5.0);
  objc_msgSend(v4, sel_setAllowsCellularAccess_, v2 & 1);
  objc_msgSend(v4, sel_set_allowsExpensiveAccess_, v3);
  uint64_t v5 = (void *)sub_24A464248();
  objc_msgSend(v4, sel_set_sourceApplicationBundleIdentifier_, v5);

  swift_beginAccess();
  if (*(void *)(v1 + 16)) {
    objc_msgSend(v4, sel_setNetworkingDelegate_);
  }
  return v4;
}

uint64_t RequestOptions.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RequestOptions.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestOptions()
{
  return self;
}

uint64_t XPCTypeConnection.getter()
{
  return MEMORY[0x263EF86F0];
}

uint64_t XPCTypeEndpoint.getter()
{
  return MEMORY[0x263EF8718];
}

uint64_t XPCTypeNull.getter()
{
  return MEMORY[0x263EF8758];
}

uint64_t XPCTypeBool.getter()
{
  return MEMORY[0x263EF86E0];
}

uint64_t XPCTypeInt64.getter()
{
  return MEMORY[0x263EF8738];
}

uint64_t XPCTypeUInt64.getter()
{
  return MEMORY[0x263EF87A0];
}

uint64_t XPCTypeDouble.getter()
{
  return MEMORY[0x263EF8710];
}

uint64_t XPCTypeData.getter()
{
  return MEMORY[0x263EF86F8];
}

uint64_t XPCTypeDate.getter()
{
  return MEMORY[0x263EF8700];
}

uint64_t XPCTypeString.getter()
{
  return MEMORY[0x263EF8798];
}

uint64_t XPCTypeUUID.getter()
{
  return MEMORY[0x263EF87A8];
}

uint64_t XPCTypeShmem.getter()
{
  return MEMORY[0x263EF8790];
}

uint64_t XPCTypeArray.getter()
{
  return MEMORY[0x263EF86D8];
}

uint64_t XPCTypeDictionary.getter()
{
  return MEMORY[0x263EF8708];
}

uint64_t XPCTypeError.getter()
{
  return MEMORY[0x263EF8720];
}

uint64_t XPCTypeActivity.getter()
{
  return MEMORY[0x263EF86D0];
}

const char *SubmitEventsActivityConfig.identifier.unsafeMutableAddressor()
{
  return "submit";
}

uint64_t static SubmitEventsActivityConfig.identifier.getter()
{
  return 0x74696D627573;
}

uint64_t sub_24A45A378()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794230);
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794238);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A469080;
  id v4 = (void *)(v3 + v2);
  uint64_t v5 = (char *)v4 + *(int *)(v0 + 48);
  *id v4 = *MEMORY[0x263EF82A0];
  *uint64_t v5 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  os_log_type_t v6 = (void *)((char *)v4 + v1 + *(int *)(v0 + 48));
  *(void *)((char *)v4 + v1) = *MEMORY[0x263EF81A0];
  void *v6 = 86400;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)((char *)v4 + 2 * v1);
  uint64_t v8 = (void *)((char *)v7 + *(int *)(v0 + 48));
  *uint64_t v7 = *MEMORY[0x263EF81C0];
  *uint64_t v8 = 43200;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (void *)((char *)v4 + 3 * v1);
  unint64_t v10 = (void *)((char *)v9 + *(int *)(v0 + 48));
  *uint64_t v9 = *MEMORY[0x263EF8280];
  uint64_t *v10 = sub_24A464368();
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (void *)((char *)v4 + 4 * v1);
  uint64_t v13 = (char *)v12 + *(int *)(v0 + 48);
  void *v12 = *MEMORY[0x263EF8180];
  *uint64_t v13 = 0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF8270])
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v15 = (void *)((char *)v4 + 5 * v1);
  BOOL v16 = (char *)v15 + *(int *)(v0 + 48);
  void *v15 = *MEMORY[0x263EF8270];
  *BOOL v16 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF8298])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = (void *)((char *)v4 + 6 * v1);
  uint64_t v18 = (void *)((char *)v17 + *(int *)(v0 + 48));
  void *v17 = *MEMORY[0x263EF8298];
  *uint64_t v18 = 43200;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF82D0])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = (void *)((char *)&v4[v1] - v1);
  uint64_t v20 = (char *)v19 + *(int *)(v0 + 48);
  *uint64_t v19 = *MEMORY[0x263EF82D0];
  *uint64_t v20 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF82C8])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = &v4[v1];
  uint64_t v22 = (char *)v21 + *(int *)(v0 + 48);
  *uint64_t v21 = *MEMORY[0x263EF82C8];
  *uint64_t v22 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF8260])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v23 = (void *)((char *)v4 + 9 * v1);
  char v24 = (void *)((char *)v23 + *(int *)(v0 + 48));
  *uint64_t v23 = *MEMORY[0x263EF8260];
  void *v24 = 5242880;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF81B8])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v25 = (void *)((char *)v4 + 10 * v1);
  unint64_t v26 = (void *)((char *)v25 + *(int *)(v0 + 48));
  void *v25 = *MEMORY[0x263EF81B8];
  *unint64_t v26 = *MEMORY[0x263EF8210];
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF81D0])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v27 = (void *)((char *)v4 + 11 * v1);
  uint64_t v28 = (void *)((char *)v27 + *(int *)(v0 + 48));
  void *v27 = *MEMORY[0x263EF81D0];
  *uint64_t v28 = 0xD000000000000025;
  v28[1] = 0x800000024A46C4B0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x263EF81C8])
  {
    uint64_t v29 = (void *)((char *)v4 + 12 * v1);
    uint64_t v30 = (void *)((char *)v29 + *(int *)(v0 + 48));
    *uint64_t v29 = *MEMORY[0x263EF81C8];
    *uint64_t v30 = 1;
    swift_storeEnumTagMultiPayload();
    unint64_t v31 = sub_24A45AACC(v3);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t result = swift_deallocClassInstance();
    static SubmitEventsActivityConfig.activityFlags = v31;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *SubmitEventsActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_26979A088 != -1) {
    swift_once();
  }
  return &static SubmitEventsActivityConfig.activityFlags;
}

uint64_t static SubmitEventsActivityConfig.activityFlags.getter()
{
  if (qword_26979A088 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SubmitEventsActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_26979A088 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static SubmitEventsActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SubmitEventsActivityConfig.activityFlags.modify())()
{
  if (qword_26979A088 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24A45A950()
{
  if (qword_26979A088 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A45A9C8()
{
  return 0x74696D627573;
}

ValueMetadata *type metadata accessor for SubmitEventsActivityConfig()
{
  return &type metadata for SubmitEventsActivityConfig;
}

unint64_t sub_24A45A9EC(uint64_t a1)
{
  uint64_t v2 = sub_24A464B88();
  return sub_24A45AA30(a1, v2);
}

unint64_t sub_24A45AA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24A45AACC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794238);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794240);
    uint64_t v7 = (void *)sub_24A464928();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_24A45AC74(v9, (uint64_t)v5);
      uint64_t v11 = *v5;
      unint64_t result = sub_24A45A9EC(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for XPCObject();
      unint64_t result = sub_24A438814(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_24A45AC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *XPCObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  MEMORY[0x270FA5388](v8);
  char v13 = (uint64_t *)((char *)&v33 - v12);
  if (a1)
  {
    uint64_t v34 = v11;
    uint64_t v14 = swift_unknownObjectRetain();
    uint64_t v15 = MEMORY[0x24C5C6180](v14);
    if (XPCTypeNull.getter() == v15)
    {
      swift_unknownObjectRelease_n();
    }
    else
    {
      if (XPCTypeConnection.getter() == v15 || XPCTypeEndpoint.getter() == v15)
      {
LABEL_37:
        swift_unknownObjectRelease();
        *char v13 = a1;
        goto LABEL_28;
      }
      if (XPCTypeBool.getter() == v15)
      {
        BOOL value = xpc_BOOL_get_value(a1);
        swift_unknownObjectRelease_n();
        *(unsigned char *)char v13 = value;
      }
      else if (XPCTypeInt64.getter() == v15)
      {
        int64_t v20 = xpc_int64_get_value(a1);
        swift_unknownObjectRelease_n();
        *char v13 = v20;
      }
      else if (XPCTypeUInt64.getter() == v15)
      {
        uint64_t v21 = xpc_uint64_get_value(a1);
        swift_unknownObjectRelease_n();
        *char v13 = v21;
      }
      else if (XPCTypeDouble.getter() == v15)
      {
        double v22 = xpc_double_get_value(a1);
        swift_unknownObjectRelease_n();
        *(double *)char v13 = v22;
      }
      else
      {
        if (XPCTypeDate.getter() != v15)
        {
          if (XPCTypeData.getter() == v15)
          {
            unint64_t result = xpc_data_get_bytes_ptr(a1);
            if (result)
            {
              char v24 = result;
              size_t length = xpc_data_get_length(a1);
              uint64_t v26 = sub_24A45C0B8(v24, length);
              uint64_t v28 = v27;
              swift_unknownObjectRelease_n();
              uint64_t *v10 = v26;
              v10[1] = v28;
              swift_storeEnumTagMultiPayload();
              uint64_t v29 = (uint64_t)v10;
LABEL_34:
              sub_24A438814(v29, (uint64_t)v13);
              goto LABEL_29;
            }
            __break(1u);
          }
          else
          {
            if (XPCTypeString.getter() != v15)
            {
              if (XPCTypeUUID.getter() != v15)
              {
                if (XPCTypeShmem.getter() != v15 && XPCTypeArray.getter() != v15)
                {
                  uint64_t v16 = XPCTypeDictionary.getter();
                  swift_unknownObjectRelease();
                  if (v16 != v15)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v11 = v34;
                    goto LABEL_17;
                  }
                  *char v13 = a1;
                  goto LABEL_28;
                }
                goto LABEL_37;
              }
              unint64_t result = xpc_uuid_get_bytes(a1);
              if (result)
              {
                sub_24A463EB8();
                swift_unknownObjectRelease_n();
                goto LABEL_28;
              }
LABEL_41:
              __break(1u);
              return result;
            }
            unint64_t result = xpc_string_get_string_ptr(a1);
            if (result)
            {
              uint64_t v30 = sub_24A464368();
              uint64_t v32 = v31;
              swift_unknownObjectRelease_n();
              *uint64_t v7 = v30;
              v7[1] = v32;
              swift_storeEnumTagMultiPayload();
              uint64_t v29 = (uint64_t)v7;
              goto LABEL_34;
            }
          }
          __break(1u);
          goto LABEL_41;
        }
        int64_t v23 = xpc_date_get_value(a1);
        swift_unknownObjectRelease_n();
        *char v13 = v23;
      }
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
LABEL_29:
    sub_24A438814((uint64_t)v13, a2);
    return (unsigned char *)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(a2, 0, 1, v4);
  }
LABEL_17:
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  return (unsigned char *)v17(a2, 1, 1, v4);
}

uint64_t type metadata accessor for XPCObject()
{
  uint64_t result = qword_26979A190;
  if (!qword_26979A190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

xpc_object_t XPCObject.obj.getter()
{
  uint64_t v1 = v0;
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24A463EE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &uuid[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for XPCObject();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &uuid[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_24A438878(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      return xpc_BOOL_create(*v8);
    case 3u:
      return xpc_int64_create(*(void *)v8);
    case 4u:
      return xpc_uint64_create(*(void *)v8);
    case 5u:
      return xpc_double_create(*(double *)v8);
    case 6u:
      return xpc_date_create(*(void *)v8);
    case 7u:
      uint64_t v12 = *(void *)v8;
      unint64_t v11 = *((void *)v8 + 1);
      switch(v11 >> 62)
      {
        case 1uLL:
          if (v12 >> 32 < (int)v12)
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          sub_24A3E8D0C(v12, v11);
          double v22 = (char *)sub_24A463AF8();
          if (!v22) {
            goto LABEL_18;
          }
          uint64_t v23 = sub_24A463B28();
          if (__OFSUB__((int)v12, v23))
          {
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
          }
          v22 += (int)v12 - v23;
LABEL_18:
          uint64_t v24 = sub_24A463B18();
          if (v24 >= (v12 >> 32) - (int)v12) {
            uint64_t v25 = (v12 >> 32) - (int)v12;
          }
          else {
            uint64_t v25 = v24;
          }
          if (v22) {
            size_t v26 = v25;
          }
          else {
            size_t v26 = 0;
          }
          xpc_object_t v9 = xpc_data_create(v22, v26);
          sub_24A3E8CB4(v12, v11);
LABEL_38:
          sub_24A3E8CB4(v12, v11);
          return v9;
        case 2uLL:
          uint64_t v27 = *(void *)(v12 + 16);
          uint64_t v28 = *(void *)(v12 + 24);
          swift_retain();
          swift_retain();
          uint64_t v29 = (char *)sub_24A463AF8();
          if (!v29) {
            goto LABEL_28;
          }
          uint64_t v30 = sub_24A463B28();
          if (__OFSUB__(v27, v30)) {
            goto LABEL_42;
          }
          v29 += v27 - v30;
LABEL_28:
          BOOL v31 = __OFSUB__(v28, v27);
          uint64_t v32 = v28 - v27;
          if (v31) {
            goto LABEL_40;
          }
          uint64_t v33 = sub_24A463B18();
          if (v33 >= v32) {
            size_t v34 = v32;
          }
          else {
            size_t v34 = v33;
          }
          if (v29) {
            size_t v35 = v34;
          }
          else {
            size_t v35 = 0;
          }
          xpc_object_t v9 = xpc_data_create(v29, v35);
          swift_release();
          swift_release();
          goto LABEL_38;
        case 3uLL:
          memset(uuid, 0, 14);
          size_t v13 = 0;
          goto LABEL_37;
        default:
          *(void *)uuid = *(void *)v8;
          *(_WORD *)&uuid[8] = v11;
          uuid[10] = BYTE2(v11);
          uuid[11] = BYTE3(v11);
          uuid[12] = BYTE4(v11);
          size_t v13 = BYTE6(v11);
          uuid[13] = BYTE5(v11);
LABEL_37:
          xpc_object_t v9 = xpc_data_create(uuid, v13);
          goto LABEL_38;
      }
    case 8u:
      uint64_t v14 = sub_24A4642F8();
      swift_bridgeObjectRelease();
      xpc_object_t v9 = xpc_string_create((const char *)(v14 + 32));
      swift_release();
      return v9;
    case 9u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v3 + 32))(v5, v8, v2);
      *(void *)uuid = sub_24A463EC8();
      *(_WORD *)&uuid[8] = v15;
      uuid[10] = v16;
      uuid[11] = v17;
      uuid[12] = v18;
      uuid[13] = v19;
      uuid[14] = v20;
      uuid[15] = v21;
      xpc_object_t v9 = xpc_uuid_create(uuid);
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v5, v2);
      return v9;
    case 0xDu:
      return xpc_null_create();
    default:
      return *(xpc_object_t *)v8;
  }
}

BOOL static XPCObject.== infix(_:_:)()
{
  xpc_object_t v0 = XPCObject.obj.getter();
  xpc_object_t v1 = XPCObject.obj.getter();
  BOOL v2 = xpc_equal(v0, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v2;
}

BOOL sub_24A45B724()
{
  xpc_object_t v0 = XPCObject.obj.getter();
  xpc_object_t v1 = XPCObject.obj.getter();
  BOOL v2 = xpc_equal(v0, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v2;
}

xpc_object_t XPCDictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  xpc_object_t v1 = sub_24A45C16C(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t XPCDictionary.subscript.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  sub_24A4499D8(a1, (uint64_t)v5, (uint64_t *)&unk_2697938F0);
  uint64_t v7 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_24A3E2068((uint64_t)v5, (uint64_t *)&unk_2697938F0);
    xpc_object_t v8 = 0;
  }
  else
  {
    xpc_object_t v8 = XPCObject.obj.getter();
    sub_24A4388DC((uint64_t)v5);
  }
  uint64_t v9 = sub_24A4642F8();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(v6, (const char *)(v9 + 32), v8);
  swift_unknownObjectRelease();
  sub_24A3E2068(a1, (uint64_t *)&unk_2697938F0);
  return swift_release();
}

uint64_t XPCDictionary.keys.getter(void *a1)
{
  int64_t count = xpc_dictionary_get_count(a1);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || count > v3[3] >> 1)
  {
    if (v3[2] <= count) {
      int64_t v5 = count;
    }
    else {
      int64_t v5 = v3[2];
    }
    uint64_t v3 = sub_24A3F5D98(isUniquelyReferenced_nonNull_native, v5, 0, v3);
  }
  size_t v13 = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &v13;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24A45C51C;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_24A3F1134;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A3ED5F4;
  aBlock[3] = &block_descriptor_6;
  xpc_object_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v8);
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

unsigned char *XPCDictionary.subscript.getter@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24A4642F8();
  xpc_object_t v5 = xpc_dictionary_get_value(a1, (const char *)(v4 + 32));
  swift_release();
  return XPCObject.init(_:)(v5, a2);
}

void (*XPCDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  size_t v8 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0) - 8) + 64);
  v7[3] = malloc(v8);
  v7[4] = malloc(v8);
  _OWORD v7[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v7[6] = v9;
  uint64_t v10 = *v3;
  uint64_t v11 = sub_24A4642F8();
  xpc_object_t v12 = xpc_dictionary_get_value(v10, (const char *)(v11 + 32));
  swift_release();
  XPCObject.init(_:)(v12, (uint64_t)v9);
  return sub_24A45BC28;
}

void sub_24A45BC28(uint64_t a1, char a2)
{
  BOOL v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 48);
  if (a2)
  {
    uint64_t v5 = v2[3];
    uint64_t v4 = v2[4];
    uint64_t v6 = (void **)v2[2];
    sub_24A4499D8(v3, v4, (uint64_t *)&unk_2697938F0);
    uint64_t v7 = *v6;
    sub_24A4499D8(v4, v5, (uint64_t *)&unk_2697938F0);
    uint64_t v8 = type metadata accessor for XPCObject();
    LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8);
    swift_bridgeObjectRetain();
    uint64_t v9 = v2[3];
    if (v5 == 1)
    {
      sub_24A3E2068(v2[3], (uint64_t *)&unk_2697938F0);
      xpc_object_t v10 = 0;
    }
    else
    {
      xpc_object_t v10 = XPCObject.obj.getter();
      sub_24A4388DC(v9);
    }
    unsigned __int8 v18 = (void *)v2[5];
    unsigned __int8 v17 = (void *)v2[6];
    unsigned __int8 v20 = (void *)v2[3];
    unsigned __int8 v19 = (void *)v2[4];
    uint64_t v21 = sub_24A4642F8();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v7, (const char *)(v21 + 32), v10);
    swift_unknownObjectRelease();
    sub_24A3E2068((uint64_t)v19, (uint64_t *)&unk_2697938F0);
    swift_release();
    sub_24A3E2068((uint64_t)v17, (uint64_t *)&unk_2697938F0);
  }
  else
  {
    uint64_t v11 = v2[5];
    xpc_object_t v12 = *(void **)v2[2];
    sub_24A4499D8(v3, v11, (uint64_t *)&unk_2697938F0);
    uint64_t v13 = type metadata accessor for XPCObject();
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13);
    swift_bridgeObjectRetain();
    uint64_t v15 = v2[5];
    if (v14 == 1)
    {
      sub_24A3E2068(v2[5], (uint64_t *)&unk_2697938F0);
      xpc_object_t v16 = 0;
    }
    else
    {
      xpc_object_t v16 = XPCObject.obj.getter();
      sub_24A4388DC(v15);
    }
    unsigned __int8 v18 = (void *)v2[5];
    unsigned __int8 v17 = (void *)v2[6];
    unsigned __int8 v20 = (void *)v2[3];
    unsigned __int8 v19 = (void *)v2[4];
    uint64_t v22 = sub_24A4642F8();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v12, (const char *)(v22 + 32), v16);
    swift_unknownObjectRelease();
    sub_24A3E2068((uint64_t)v17, (uint64_t *)&unk_2697938F0);
    swift_release();
  }
  free(v17);
  free(v18);
  free(v19);
  free(v20);
  free(v2);
}

Swift::Bool __swiftcall XPCDictionary.contains(key:)(Swift::String key)
{
  BOOL v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24A4642F8();
  xpc_object_t v7 = xpc_dictionary_get_value(v2, (const char *)(v6 + 32));
  swift_release();
  XPCObject.init(_:)(v7, (uint64_t)v5);
  uint64_t v8 = type metadata accessor for XPCObject();
  LOBYTE(v7) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  sub_24A3E2068((uint64_t)v5, (uint64_t *)&unk_2697938F0);
  return (char)v7;
}

uint64_t sub_24A45BFB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  xpc_object_t v3 = sub_24A45C16C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_24A45BFF4(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_24A45C0B8(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_24A45BFF4(__src, &__src[a2]);
  }
  sub_24A463B38();
  swift_allocObject();
  sub_24A463AE8();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_24A463D68();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

xpc_object_t sub_24A45C16C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  char v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  xpc_object_t v7 = (char *)&v37 - v6;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794258);
  uint64_t v8 = *(void *)(v44 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v44);
  uint64_t v42 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v41 = (uint64_t *)((char *)&v37 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v37 - v14;
  MEMORY[0x270FA5388](v13);
  os_log_type_t v43 = (uint64_t *)((char *)&v37 - v16);
  xpc_object_t empty = xpc_dictionary_create_empty();
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v40 = (uint64_t)v43 + *(int *)(v44 + 48);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v19 = *(void *)(v8 + 72);
    uint64_t v38 = v15;
    uint64_t v39 = v19;
    do
    {
      uint64_t v22 = v43;
      sub_24A4499D8(v18, (uint64_t)v43, &qword_269794258);
      uint64_t v23 = v44;
      uint64_t v24 = (uint64_t)&v15[*(int *)(v44 + 48)];
      uint64_t v25 = (uint64_t *)v15;
      uint64_t v26 = *v22;
      uint64_t v27 = v22[1];
      uint64_t *v25 = *v22;
      v25[1] = v27;
      sub_24A438814(v40, v24);
      uint64_t v28 = *(int *)(v23 + 48);
      uint64_t v29 = v41;
      uint64_t v30 = (uint64_t)v41 + v28;
      *char v41 = v26;
      v29[1] = v27;
      uint64_t v46 = (uint64_t)v29 + v28;
      sub_24A438878(v24, v30);
      uint64_t v31 = *(int *)(v23 + 48);
      uint64_t v32 = v42;
      uint64_t v33 = (uint64_t)v42 + v31;
      *uint64_t v42 = v26;
      v32[1] = v27;
      sub_24A438878(v24, (uint64_t)v32 + v31);
      sub_24A438814(v33, (uint64_t)v7);
      uint64_t v34 = type metadata accessor for XPCObject();
      uint64_t v35 = *(void *)(v34 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v34);
      sub_24A4499D8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2697938F0);
      LODWORD(v34) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34);
      swift_bridgeObjectRetain();
      if (v34 == 1)
      {
        sub_24A3E2068((uint64_t)v5, (uint64_t *)&unk_2697938F0);
        xpc_object_t v20 = 0;
      }
      else
      {
        xpc_object_t v20 = XPCObject.obj.getter();
        sub_24A4388DC((uint64_t)v5);
      }
      uint64_t v21 = sub_24A4642F8();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(empty, (const char *)(v21 + 32), v20);
      swift_unknownObjectRelease();
      sub_24A3E2068((uint64_t)v7, (uint64_t *)&unk_2697938F0);
      swift_release();
      uint64_t v15 = v38;
      sub_24A3E2068((uint64_t)v38, &qword_269794258);
      sub_24A4388DC(v46);
      v18 += v39;
      --v17;
    }
    while (v17);
  }
  return empty;
}

uint64_t sub_24A45C50C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24A45C51C()
{
  xpc_object_t v1 = *(void ***)(v0 + 16);
  uint64_t v2 = sub_24A464368();
  uint64_t v4 = v3;
  char v5 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v1 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v5 = sub_24A3F5D98(0, v5[2] + 1, 1, v5);
    void *v1 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    char v5 = sub_24A3F5D98((void *)(v7 > 1), v8 + 1, 1, v5);
    void *v1 = v5;
  }
  v5[2] = v8 + 1;
  uint64_t v9 = &v5[2 * v8];
  void v9[4] = v2;
  v9[5] = v4;
  return 1;
}

uint64_t sub_24A45C5D4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v10 = *a2;
        unint64_t v9 = a2[1];
        sub_24A3E8D0C(v10, v9);
        *a1 = v10;
        a1[1] = v9;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v12 = sub_24A463EE8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for XPCObject(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 10:
    case 11:
    case 12:
      uint64_t result = swift_unknownObjectRelease();
      break;
    case 7:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      uint64_t result = sub_24A3E8CB4(v3, v4);
      break;
    case 8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      uint64_t v5 = sub_24A463EE8();
      uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(a1, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_7;
    case 7u:
      uint64_t v7 = *a2;
      unint64_t v6 = a2[1];
      sub_24A3E8D0C(v7, v6);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_7;
    case 8u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 9u:
      uint64_t v9 = sub_24A463EE8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A4388DC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_8;
      case 7u:
        uint64_t v7 = *a2;
        unint64_t v6 = a2[1];
        sub_24A3E8D0C(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_8;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 9u:
        uint64_t v8 = sub_24A463EE8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    uint64_t v6 = sub_24A463EE8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24A4388DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      uint64_t v6 = sub_24A463EE8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24A45CEBC()
{
  uint64_t result = sub_24A463EE8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCDictionary()
{
  return &type metadata for XPCDictionary;
}

uint64_t sub_24A45CF98(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_24A45CFCC()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24A45D004()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A1A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A1A8);
  return sub_24A464008();
}

uint64_t variable initialization expression of XPCActivity.currentTask()
{
  return 0;
}

uint64_t sub_24A45D084()
{
  return swift_retain();
}

uint64_t sub_24A45D0BC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_24A45D104())()
{
  return j__swift_endAccess;
}

uint64_t variable initialization expression of XPCActivity.disabled()
{
  return 0;
}

uint64_t sub_24A45D160()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_24A45D194(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 136) = a1;
  return result;
}

uint64_t *XPCActivity.makeHandler.unsafeMutableAddressor()
{
  return &static XPCActivity.makeHandler;
}

uint64_t static XPCActivity.makeHandler.getter()
{
  swift_beginAccess();
  uint64_t v0 = static XPCActivity.makeHandler;
  sub_24A45D238(static XPCActivity.makeHandler);
  return v0;
}

uint64_t sub_24A45D238(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t static XPCActivity.makeHandler.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = static XPCActivity.makeHandler;
  static XPCActivity.makeHandler = a1;
  qword_26979A828 = a2;
  sub_24A45D238(a1);
  sub_24A3F1178(v4);
  return sub_24A3F1178(a1);
}

uint64_t (*static XPCActivity.makeHandler.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall XPCActivity.register(disabled:)(Swift::Bool_optional disabled)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(self, sel_mainBundle);
  id v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_24A464278();

    if (disabled.value != 2) {
      (*(void (**)(Swift::Bool))(*v2 + 144))(disabled.value);
    }
    sub_24A4647E8();
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0x6C655464756F6C43;
    unint64_t v22 = 0xEF2E797274656D65;
    sub_24A464358();
    swift_bridgeObjectRelease();
    sub_24A464358();
    (*(void (**)(void))(v2[15] + 32))();
    sub_24A464358();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)*MEMORY[0x263EF8188];
    uint64_t v25 = sub_24A45F124;
    uint64_t v26 = v2;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v22 = 1107296256;
    uint64_t v23 = sub_24A45D850;
    uint64_t v24 = &block_descriptor_7;
    uint64_t v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v8 = sub_24A4642F8();
    xpc_activity_register((const char *)(v8 + 32), v6, v7);
    swift_release();
    _Block_release(v7);
    if (qword_26979A1A0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A464018();
    __swift_project_value_buffer(v9, (uint64_t)qword_26979A1A8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24A463FF8();
    os_log_type_t v11 = sub_24A4645A8();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t aBlock = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_24A3E0E30(0x6C655464756F6C43, 0xEF2E797274656D65, &aBlock);
      sub_24A4646E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24A3DA000, v10, v11, "registered: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v13, -1, -1);
      MEMORY[0x24C5C5D60](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_26979A1A0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24A464018();
    __swift_project_value_buffer(v14, (uint64_t)qword_26979A1A8);
    swift_retain_n();
    osos_log_t log = sub_24A463FF8();
    os_log_type_t v15 = sub_24A4645A8();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t aBlock = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v18 = (*(uint64_t (**)(void))(v2[15] + 32))();
      uint64_t v27 = sub_24A3E0E30(v18, v19, &aBlock);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24A3DA000, oslog, v15, "unable to register: %s, nil bundleIdentifier", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v17, -1, -1);
      MEMORY[0x24C5C5D60](v16, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t sub_24A45D850(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_24A45D8B0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for XPCObject();
  uint64_t v4 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794310);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (int64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  os_log_type_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 24);
  uint64_t v16 = *(void *)(v15(v13, v14) + 16);
  swift_bridgeObjectRelease();
  if (!v16) {
    return 0;
  }
  xpc_object_t v40 = XPCDictionary.init()();
  uint64_t result = v15(v13, v14);
  int64_t v39 = 0;
  uint64_t v18 = *(void *)(result + 64);
  uint64_t v34 = result + 64;
  uint64_t v19 = 1 << *(unsigned char *)(result + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  unint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  int64_t v35 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v36 = result;
  int64_t v33 = v35 - 1;
  uint64_t v37 = v4;
  if ((v20 & v18) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v23 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v24 = v23 | (v39 << 6);
  while (2)
  {
    uint64_t v25 = *(void *)(v36 + 56);
    void *v10 = *(void *)(*(void *)(v36 + 48) + 8 * v24);
    uint64_t v26 = v25 + *(void *)(v4 + 72) * v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794318);
    sub_24A438878(v26, (uint64_t)v10 + *(int *)(v27 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 0, 1, v27);
    while (1)
    {
      sub_24A45F698((uint64_t)v10, (uint64_t)v12);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794318);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v12, 1, v32) == 1)
      {
        swift_release();
        return (uint64_t)v40;
      }
      sub_24A438814((uint64_t)&v12[*(int *)(v32 + 48)], (uint64_t)v6);
      sub_24A464368();
      sub_24A438878((uint64_t)v6, (uint64_t)v3);
      (*v22)(v3, 0, 1, v38);
      XPCDictionary.subscript.setter((uint64_t)v3);
      uint64_t result = sub_24A4388DC((uint64_t)v6);
      uint64_t v4 = v37;
      if (v21) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v28 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v28 < v35)
      {
        unint64_t v29 = *(void *)(v34 + 8 * v28);
        if (v29) {
          goto LABEL_12;
        }
        int64_t v30 = v39 + 2;
        ++v39;
        if (v28 + 1 < v35)
        {
          unint64_t v29 = *(void *)(v34 + 8 * v30);
          if (v29) {
            goto LABEL_15;
          }
          int64_t v39 = v28 + 1;
          if (v28 + 2 < v35)
          {
            unint64_t v29 = *(void *)(v34 + 8 * (v28 + 2));
            if (v29)
            {
              v28 += 2;
              goto LABEL_12;
            }
            int64_t v30 = v28 + 3;
            int64_t v39 = v28 + 2;
            if (v28 + 3 < v35) {
              break;
            }
          }
        }
      }
LABEL_26:
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794318);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
      unint64_t v21 = 0;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v30);
    if (v29)
    {
LABEL_15:
      int64_t v28 = v30;
LABEL_12:
      unint64_t v21 = (v29 - 1) & v29;
      unint64_t v24 = __clz(__rbit64(v29)) + (v28 << 6);
      int64_t v39 = v28;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v35)
    {
      int64_t v39 = v33;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_24A45DD58(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for XPCActivityHandle();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = (_xpc_activity_s *)swift_unknownObjectRetain();
  xpc_activity_state_t state = xpc_activity_get_state(v8);
  if (state == 2)
  {
    if (qword_26979A1A0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24A464018();
    __swift_project_value_buffer(v17, (uint64_t)qword_26979A1A8);
    swift_retain_n();
    uint64_t v18 = sub_24A463FF8();
    os_log_type_t v19 = sub_24A4645D8();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v41 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v22 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
      uint64_t v40 = sub_24A3E0E30(v22, v23, &v41);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24A3DA000, v18, v19, "run: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v21, -1, -1);
      MEMORY[0x24C5C5D60](v20, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v34 = *(_xpc_activity_s **)(v7 + 16);
    if (xpc_activity_should_defer(v34))
    {
      xpc_activity_set_state(v34, 3);
    }
    else
    {
      xpc_activity_set_state(v34, 4);
      uint64_t v36 = sub_24A4644E8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v6, 1, 1, v36);
      uint64_t v37 = (void *)swift_allocObject();
      v37[2] = 0;
      v37[3] = 0;
      v37[4] = v2;
      v37[5] = v7;
      swift_retain();
      sub_24A3E0AB0((uint64_t)v6, (uint64_t)&unk_269794300, (uint64_t)v37);
    }
    goto LABEL_28;
  }
  if (!state)
  {
    if (qword_26979A1A0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24A464018();
    __swift_project_value_buffer(v10, (uint64_t)qword_26979A1A8);
    swift_retain_n();
    uint64_t v11 = sub_24A463FF8();
    os_log_type_t v12 = sub_24A4645A8();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v41 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
      uint64_t v40 = sub_24A3E0E30(v15, v16, &v41);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24A3DA000, v11, v12, "checkin: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v14, -1, -1);
      MEMORY[0x24C5C5D60](v13, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v31 = sub_24A45D8B0();
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      xpc_object_t v33 = xpc_activity_copy_criteria(*(xpc_activity_t *)(v7 + 16));
      swift_unknownObjectRelease();
      if (!v33) {
        xpc_activity_set_criteria(*(xpc_activity_t *)(v7 + 16), v32);
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_28;
  }
  if (qword_26979A1A0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24A464018();
  __swift_project_value_buffer(v24, (uint64_t)qword_26979A1A8);
  swift_retain_n();
  swift_retain_n();
  int64_t v39 = sub_24A463FF8();
  os_log_type_t v25 = sub_24A4645B8();
  if (os_log_type_enabled(v39, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v41 = v27;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v28 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
    uint64_t v40 = sub_24A3E0E30(v28, v29, &v41);
    sub_24A4646E8();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v26 + 12) = 2048;
    xpc_activity_state_t v30 = xpc_activity_get_state(*(xpc_activity_t *)(v7 + 16));
    swift_release();
    uint64_t v40 = v30;
    sub_24A4646E8();
    swift_release();
    _os_log_impl(&dword_24A3DA000, v39, v25, "activity: %s, encountered unrecognized XPC activity state: %ld", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v27, -1, -1);
    MEMORY[0x24C5C5D60](v26, -1, -1);

LABEL_28:
    swift_release();
    return;
  }
  swift_release_n();
  swift_release_n();
  int64_t v35 = v39;
}

uint64_t sub_24A45E400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_24A45E420, a4, 0);
}

uint64_t sub_24A45E420()
{
  sub_24A45E480(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24A45E480(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(v4 + 136))(v6))
  {
    xpc_activity_set_state(*(xpc_activity_t *)(a1 + 16), 5);
    if (qword_26979A1A0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24A464018();
    __swift_project_value_buffer(v9, (uint64_t)qword_26979A1A8);
    swift_retain_n();
    v22[0] = (id)sub_24A463FF8();
    os_log_type_t v10 = sub_24A4645B8();
    if (os_log_type_enabled((os_log_t)v22[0], v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      aBlock[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = (*(uint64_t (**)(void))(v1[15] + 32))();
      v22[1] = (id)sub_24A3E0E30(v13, v14, aBlock);
      sub_24A4646E8();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_24A3DA000, (os_log_t)v22[0], v10, "disabled: skipping %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5C5D60](v12, -1, -1);
      MEMORY[0x24C5C5D60](v11, -1, -1);
    }
    else
    {
      swift_release_n();
      id v21 = v22[0];
    }
  }
  else
  {
    aBlock[4] = (uint64_t)sub_24A45F188;
    aBlock[5] = (uint64_t)v1;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24A45D850;
    aBlock[3] = (uint64_t)&block_descriptor_8;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v16 = xpc_activity_add_eligibility_changed_handler();
    _Block_release(v15);
    uint64_t v17 = sub_24A4644E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    unint64_t v18 = sub_24A45F190();
    os_log_type_t v19 = (void *)swift_allocObject();
    void v19[2] = v2;
    v19[3] = v18;
    void v19[4] = v16;
    v19[5] = a1;
    v19[6] = v2;
    v19[7] = v4;
    swift_retain_n();
    swift_retain();
    uint64_t v20 = sub_24A3E7624((uint64_t)v8, (uint64_t)&unk_2697942D8, (uint64_t)v19);
    (*(void (**)(uint64_t))(*v2 + 120))(v20);
  }
}

uint64_t sub_24A45E860(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269793750);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = xpc_activity_should_defer(a1);
  if (result)
  {
    uint64_t v8 = sub_24A4644E8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = 0;
    _OWORD v9[3] = 0;
    void v9[4] = a2;
    swift_retain();
    sub_24A3E0AB0((uint64_t)v6, (uint64_t)&unk_2697942E8, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_24A45E970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24A45E990, a4, 0);
}

uint64_t sub_24A45E990()
{
  if ((*(uint64_t (**)(void))(**(void **)(v0 + 16) + 112))())
  {
    uint64_t v1 = *(void *)(v0 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697942F0);
    sub_24A464508();
    (*(void (**)(void))(*(void *)v1 + 120))(0);
    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24A45EA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return MEMORY[0x270FA2498](sub_24A45EA9C, a6, 0);
}

uint64_t sub_24A45EA9C()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = (int *)static XPCActivity.makeHandler;
  v0[11] = static XPCActivity.makeHandler;
  if (v2)
  {
    uint64_t v3 = v0[10];
    v0[12] = qword_26979A828;
    uint64_t v4 = *(void *)(v3 + 112);
    uint64_t v5 = *(void *)(v3 + 120);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v2 + *v2);
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = v6;
    void *v6 = v0;
    v6[1] = sub_24A45EBC4;
    uint64_t v7 = v0[10];
    return v8(v4, v5, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24A45EBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[5] = v2;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = v3[11];
  uint64_t v6 = v3[10];
  v4[14] = a1;
  swift_task_dealloc();
  sub_24A3F1178(v5);
  return MEMORY[0x270FA2498](sub_24A45ED20, v6, 0);
}

uint64_t sub_24A45ED20()
{
  sub_24A464538();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24A45EE8C;
  return v5(ObjectType, v1);
}

uint64_t sub_24A45EE8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24A45EF9C, v1, 0);
}

uint64_t sub_24A45EF9C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  swift_unknownObjectRelease();
  sub_24A45F2E8(v3, v1, v2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t XPCActivity.__allocating_init(handlerType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 120) = a2;
  *(void *)(v4 + 128) = 0;
  *(unsigned char *)(v4 + 136) = 0;
  *(void *)(v4 + 112) = a1;
  return v4;
}

uint64_t XPCActivity.init(handlerType:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 120) = a2;
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 136) = 0;
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t XPCActivity.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCActivity.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t XPCActivity.unownedExecutor.getter()
{
  return v0;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t type metadata accessor for XPCActivityHandle()
{
  return self;
}

uint64_t type metadata accessor for XPCActivity()
{
  return self;
}

uint64_t sub_24A45F188(_xpc_activity_s *a1)
{
  return sub_24A45E860(a1, v1);
}

unint64_t sub_24A45F190()
{
  unint64_t result = qword_2697942D0;
  if (!qword_2697942D0)
  {
    type metadata accessor for XPCActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697942D0);
  }
  return result;
}

uint64_t sub_24A45F1E4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24A45F22C()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24A3E0820;
  v5[9] = v3;
  v5[10] = v4;
  v5[8] = v2;
  return MEMORY[0x270FA2498](sub_24A45EA9C, v4, 0);
}

void sub_24A45F2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    xpc_activity_remove_eligibility_changed_handler();
  }
  xpc_activity_set_state(*(xpc_activity_t *)(a2 + 16), 5);
  if (qword_26979A1A0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24A464018();
  __swift_project_value_buffer(v5, (uint64_t)qword_26979A1A8);
  swift_retain_n();
  uint64_t v6 = sub_24A463FF8();
  os_log_type_t v7 = sub_24A4645D8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = (*(uint64_t (**)(void))(*(void *)(a3 + 120) + 32))();
    sub_24A3E0E30(v10, v11, &v12);
    sub_24A4646E8();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24A3DA000, v6, v7, "done: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5C5D60](v9, -1, -1);
    MEMORY[0x24C5C5D60](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24A45F4BC()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24A45F4FC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24A3E2218;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24A45E990, v2, 0);
}

uint64_t sub_24A45F5A4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24A45F5EC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_24A3E0820;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_24A45E420, v3, 0);
}

uint64_t sub_24A45F698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

const char *MessageKeys.eventType.unsafeMutableAddressor()
{
  return "et";
}

uint64_t static MessageKeys.eventType.getter()
{
  return 29797;
}

void *MessageKeys.clientType.unsafeMutableAddressor()
{
  return &static MessageKeys.clientType;
}

uint64_t static MessageKeys.clientType.getter()
{
  return 29795;
}

void *MessageKeys.legacyClient.unsafeMutableAddressor()
{
  return &static MessageKeys.legacyClient;
}

uint64_t static MessageKeys.legacyClient.getter()
{
  return 31084;
}

void *MessageKeys.payload.unsafeMutableAddressor()
{
  return &static MessageKeys.payload;
}

uint64_t static MessageKeys.payload.getter()
{
  return 27760;
}

void *MessageKeys.sessionID.unsafeMutableAddressor()
{
  return &static MessageKeys.sessionID;
}

uint64_t static MessageKeys.sessionID.getter()
{
  return 25705;
}

const char *MessageKeys.hierarchyLevel.unsafeMutableAddressor()
{
  return "hlvl";
}

uint64_t static MessageKeys.hierarchyLevel.getter()
{
  return 1819700328;
}

const char *MessageKeys.hierarchyToken.unsafeMutableAddressor()
{
  return "hktn";
}

uint64_t static MessageKeys.hierarchyToken.getter()
{
  return 1853123432;
}

const char *MessageKeys.samplingUUID.unsafeMutableAddressor()
{
  return "suuid";
}

uint64_t static MessageKeys.samplingUUID.getter()
{
  return 0x6469757573;
}

void *MessageKeys.transportConfiguration.unsafeMutableAddressor()
{
  return &static MessageKeys.transportConfiguration;
}

uint64_t static MessageKeys.transportConfiguration.getter()
{
  return 25460;
}

const char *MessageKeys.allowed.unsafeMutableAddressor()
{
  return "allowed";
}

uint64_t static MessageKeys.allowed.getter()
{
  return 0x6465776F6C6C61;
}

const char *MessageKeys.denied.unsafeMutableAddressor()
{
  return "denied";
}

uint64_t static MessageKeys.denied.getter()
{
  return 0x6465696E6564;
}

const char *MessageKeys.overrideSampling.unsafeMutableAddressor()
{
  return "orsf";
}

uint64_t static MessageKeys.overrideSampling.getter()
{
  return 1718841967;
}

void *MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageSessionInfo;
}

uint64_t static MessageKeys.sendOneMessageSessionInfo.getter()
{
  return 7549299;
}

void *MessageKeys.sendOneMessageEvent.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageEvent;
}

uint64_t static MessageKeys.sendOneMessageEvent.getter()
{
  return 6631795;
}

void *MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsCellularAccess;
}

uint64_t static MessageKeys.tcAllowsCellularAccess.getter()
{
  return 97;
}

void *MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsExpensiveAccess;
}

uint64_t static MessageKeys.tcAllowsExpensiveAccess.getter()
{
  return 101;
}

void *MessageKeys.tcBundleID.unsafeMutableAddressor()
{
  return &static MessageKeys.tcBundleID;
}

uint64_t static MessageKeys.tcBundleID.getter()
{
  return 98;
}

ValueMetadata *type metadata accessor for MessageKeys()
{
  return &type metadata for MessageKeys;
}

uint64_t XPCError.description.getter(void *a1)
{
  if (xpc_dictionary_get_string(a1, "XPCErrorDescription")) {
    return sub_24A464368();
  }
  else {
    return 0x64696C61766E693CLL;
  }
}

uint64_t XPCError.errorDescription.getter(void *a1)
{
  if (xpc_dictionary_get_string(a1, "XPCErrorDescription")) {
    return sub_24A464368();
  }
  else {
    return 0x64696C61766E693CLL;
  }
}

uint64_t sub_24A45F970()
{
  return XPCError.errorDescription.getter(*v0);
}

uint64_t sub_24A45F978()
{
  return XPCError.description.getter(*v0);
}

uint64_t XPCIncomingConnection.auditToken.getter()
{
  return 0;
}

unsigned char *XPCIncomingConnection.entitlementValue(forKey:)@<X0>(uint64_t a1@<X8>)
{
  sub_24A4642F8();
  uint64_t v2 = (void *)xpc_connection_copy_entitlement_value();
  swift_release();
  return XPCObject.init(_:)(v2, a1);
}

void *XPCIncomingConnection.makeConnection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3, _xpc_connection_s *a4)
{
  type metadata accessor for XPCConnection();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = a1;
  uint64_t v9 = sub_24A461538(a4, v8, a2, a3);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v9;
}

void *XPCConnection.__allocating_init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  id v8 = sub_24A461538(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v8;
}

uint64_t type metadata accessor for XPCConnection()
{
  return self;
}

uint64_t variable initialization expression of XPCConnection.conn()
{
  return 0;
}

uint64_t XPCConnection.conn.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t XPCConnection.conn.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*XPCConnection.conn.modify())()
{
  return j__swift_endAccess;
}

uint64_t variable initialization expression of XPCConnection.delegate()
{
  return 0;
}

uint64_t XPCConnection.delegate.getter()
{
  swift_beginAccess();
  return MEMORY[0x24C5C5E60](v0 + 24);
}

uint64_t XPCConnection.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*XPCConnection.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x24C5C5E60](v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  return sub_24A45FDA0;
}

void sub_24A45FDA0(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 32) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id XPCConnection.targetQ.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t sub_24A45FE2C()
{
  uint64_t v0 = sub_24A464018();
  __swift_allocate_value_buffer(v0, qword_26979A248);
  __swift_project_value_buffer(v0, (uint64_t)qword_26979A248);
  return sub_24A464008();
}

uint64_t XPCConnection.__allocating_init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  XPCConnection.init(targetQ:delegate:)(a1, a2, a3);
  return v6;
}

void *XPCConnection.init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v4[2] = 0;
  void v4[4] = 0;
  swift_unknownObjectWeakInit();
  os_log_type_t v7 = xpc_connection_create(0, a1);
  swift_beginAccess();
  void v4[4] = a3;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v4[2] = v7;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4[5] = a1;
  uint64_t v8 = qword_26979A240;
  uint64_t v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24A464018();
  __swift_project_value_buffer(v10, (uint64_t)qword_26979A248);
  unint64_t v11 = sub_24A463FF8();
  os_log_type_t v12 = sub_24A4645D8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_24A3DA000, v11, v12, "A.", v13, 2u);
    MEMORY[0x24C5C5D60](v13, -1, -1);
  }

  xpc_connection_set_target_queue(v7, v9);
  v16[4] = sub_24A461758;
  v16[5] = v4;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  void v16[2] = sub_24A45D850;
  void v16[3] = &block_descriptor_8;
  unint64_t v14 = _Block_copy(v16);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v7, v14);
  _Block_release(v14);
  xpc_connection_activate(v7);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v4;
}

uint64_t XPCConnection.eventHandler(obj:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x24C5C5E60](v1 + 24);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = MEMORY[0x24C5C6180](a1);
    uint64_t v6 = XPCTypeError.getter();
    uint64_t ObjectType = swift_getObjectType();
    if (v5 == v6) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    }
    else {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t XPCConnection.__allocating_init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v12 = swift_allocObject();
  XPCConnection.init(machService:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t XPCConnection.init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v7 = v6;
  *(void *)(v6 + 16) = 0;
  unint64_t v11 = (_xpc_connection_s **)(v6 + 16);
  id v11[2] = 0;
  swift_unknownObjectWeakInit();
  if (a4) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = 2;
  }
  uint64_t v13 = sub_24A4642F8();
  unint64_t v14 = a3;
  swift_bridgeObjectRelease();
  mach_service = xpc_connection_create_mach_service((const char *)(v13 + 32), v14, v12);

  swift_release();
  swift_beginAccess();
  id v11[2] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *unint64_t v11 = mach_service;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v11[3] = (_xpc_connection_s *)v14;
  uint64_t v16 = qword_26979A240;
  uint64_t v17 = v14;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_24A464018();
  __swift_project_value_buffer(v18, (uint64_t)qword_26979A248);
  os_log_type_t v19 = sub_24A463FF8();
  os_log_type_t v20 = sub_24A4645D8();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v21 = 0;
    _os_log_impl(&dword_24A3DA000, v19, v20, "B.", v21, 2u);
    MEMORY[0x24C5C5D60](v21, -1, -1);
  }

  xpc_connection_set_target_queue(mach_service, v17);
  v24[4] = sub_24A461758;
  v24[5] = v7;
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 1107296256;
  v24[2] = sub_24A45D850;
  v24[3] = &block_descriptor_3;
  uint64_t v22 = _Block_copy(v24);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(mach_service, v22);
  _Block_release(v22);
  xpc_connection_activate(mach_service);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v7;
}

uint64_t XPCConnection.__allocating_init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  XPCConnection.init(serviceName:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

void XPCConnection.init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  v7[2] = 0;
  unint64_t v11 = (xpc_connection_t *)(v7 + 2);
  v7[4] = 0;
  swift_unknownObjectWeakInit();
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v7[4] = a6;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v7[2] = 0;
    swift_unknownObjectRelease();
    _OWORD v7[5] = a3;
    return;
  }
  uint64_t v12 = sub_24A4642F8();
  uint64_t v13 = a3;
  swift_bridgeObjectRelease();
  xpc_connection_t v14 = xpc_connection_create((const char *)(v12 + 32), v13);

  swift_release();
  swift_beginAccess();
  v7[4] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v7[2] = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  _OWORD v7[5] = v13;
  uint64_t v15 = qword_26979A240;
  uint64_t v16 = v13;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24A464018();
  __swift_project_value_buffer(v17, (uint64_t)qword_26979A248);
  uint64_t v18 = sub_24A463FF8();
  os_log_type_t v19 = sub_24A4645D8();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v20 = 0;
    _os_log_impl(&dword_24A3DA000, v18, v19, "C.", v20, 2u);
    MEMORY[0x24C5C5D60](v20, -1, -1);
  }

  if (!*v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  xpc_connection_set_target_queue(*v11, v16);
  id v21 = *v11;
  if (!*v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v24[4] = sub_24A461758;
  v24[5] = v7;
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 1107296256;
  v24[2] = sub_24A45D850;
  v24[3] = &block_descriptor_6;
  uint64_t v22 = _Block_copy(v24);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  xpc_connection_set_event_handler(v21, v22);
  _Block_release(v22);
  swift_unknownObjectRelease();
  if (v7[2])
  {
    unint64_t v23 = (_xpc_connection_s *)swift_unknownObjectRetain();
    xpc_connection_activate(v23);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
LABEL_13:
  __break(1u);
}

void *XPCConnection.init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_24A461538(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t XPCConnection.__allocating_init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  XPCConnection.init(listener:targetQ:delegate:)(a1, a2, a3, a4);
  return v8;
}

_xpc_connection_s *XPCConnection.init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(a1 + 16);
  if (result)
  {
    uint64_t v10 = xpc_endpoint_create(result);
    unint64_t v11 = xpc_connection_create_from_endpoint(v10);
    swift_beginAccess();
    v5[2] = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v5[4] = a4;
    swift_unknownObjectWeakAssign();
    v5[5] = a2;
    uint64_t v12 = qword_26979A240;
    uint64_t v13 = a2;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24A464018();
    __swift_project_value_buffer(v14, (uint64_t)qword_26979A248);
    uint64_t v15 = sub_24A463FF8();
    os_log_type_t v16 = sub_24A4645D8();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_24A3DA000, v15, v16, "E.", v17, 2u);
      MEMORY[0x24C5C5D60](v17, -1, -1);
    }

    xpc_connection_set_target_queue(v11, v13);
    aBlock[4] = sub_24A461758;
    aBlock[5] = v5;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24A45D850;
    aBlock[3] = &block_descriptor_9;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_set_event_handler(v11, v18);
    _Block_release(v18);
    xpc_connection_activate(v11);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    return (_xpc_connection_s *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_xpc_connection_s *XPCConnection.endpoint()()
{
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(v0 + 16);
  if (result) {
    return xpc_endpoint_create(result);
  }
  __break(1u);
  return result;
}

uint64_t XPCConnection.send(_:)()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(_xpc_connection_s **)(v0 + 16);
  if (v2)
  {
    swift_unknownObjectRetain();
    long long v3 = (void *)j__swift_unknownObjectRetain();
    xpc_connection_send_message(v2, v3);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t XPCConnection.sendWithReply(_:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  return MEMORY[0x270FA2498](sub_24A460CE4, 0, 0);
}

uint64_t sub_24A460CE4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 16);
  *(void *)(v0 + 64) = v10;
  if (v10)
  {
    char v11 = *(unsigned char *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = *(void *)(*(void *)(v0 + 56) + 40);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 72) = v14;
    *(void *)(v14 + 16) = v10;
    *(void *)(v14 + 24) = v12;
    *(unsigned char *)(v14 + 32) = v11;
    *(void *)(v14 + 40) = v13;
    swift_unknownObjectRetain();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v15;
    void *v15 = v0;
    v15[1] = sub_24A460E2C;
    unint64_t v6 = 0x800000024A46C5B0;
    uint64_t v9 = &type metadata for XPCDictionary;
    uint64_t v7 = sub_24A461774;
    uint64_t v2 = v0 + 40;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0xD000000000000011;
    uint64_t v8 = v14;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2360](v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_24A460E2C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24A460FB0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24A460F48;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24A460F48()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_24A460FB0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24A46101C(uint64_t a1, _xpc_connection_s *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794330);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void *)j__swift_unknownObjectRetain();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_24A4618B4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24A45D850;
  aBlock[3] = &block_descriptor_16;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  xpc_connection_send_message_with_reply(a2, v10, a4, v13);
  _Block_release(v13);
  return swift_unknownObjectRelease();
}

Swift::Bool __swiftcall OS_xpc_object.isError()()
{
  uint64_t v0 = MEMORY[0x24C5C6180]();
  return v0 == XPCTypeError.getter();
}

uint64_t XPCConnection.auditToken.getter()
{
  swift_beginAccess();
  if (!*(void *)(v0 + 16)) {
    __break(1u);
  }
  xpc_connection_get_audit_token();
  return 0;
}

_xpc_connection_s *XPCConnection.remoteUID.getter()
{
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(v0 + 16);
  if (result) {
    return (_xpc_connection_s *)xpc_connection_get_euid(result);
  }
  __break(1u);
  return result;
}

uint64_t XPCConnection.deinit()
{
  uint64_t v1 = v0;
  if (qword_26979A240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_26979A248);
  uint64_t v3 = sub_24A463FF8();
  os_log_type_t v4 = sub_24A4645B8();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_24A3DA000, v3, v4, "connection released", v5, 2u);
    MEMORY[0x24C5C5D60](v5, -1, -1);
  }

  swift_beginAccess();
  unint64_t v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6) {
    xpc_connection_cancel(v6);
  }
  swift_unknownObjectRelease();
  sub_24A461780(v1 + 24);

  return v1;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (qword_26979A240 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24A464018();
  __swift_project_value_buffer(v2, (uint64_t)qword_26979A248);
  uint64_t v3 = sub_24A463FF8();
  os_log_type_t v4 = sub_24A4645B8();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl(&dword_24A3DA000, v3, v4, "connection released", v5, 2u);
    MEMORY[0x24C5C5D60](v5, -1, -1);
  }

  swift_beginAccess();
  unint64_t v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6) {
    xpc_connection_cancel(v6);
  }
  swift_unknownObjectRelease();
  sub_24A461780(v1 + 24);

  return swift_deallocClassInstance();
}

Swift::OpaquePointer __swiftcall OS_xpc_object.type()()
{
}

void *sub_24A461538(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v5[2] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_beginAccess();
  v5[4] = a4;
  swift_unknownObjectWeakAssign();
  v5[5] = a2;
  uint64_t v9 = qword_26979A240;
  uint64_t v10 = a2;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24A464018();
  __swift_project_value_buffer(v11, (uint64_t)qword_26979A248);
  uint64_t v12 = sub_24A463FF8();
  os_log_type_t v13 = sub_24A4645D8();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_24A3DA000, v12, v13, "D.", v14, 2u);
    MEMORY[0x24C5C5D60](v14, -1, -1);
  }

  xpc_connection_set_target_queue(a1, v10);
  uint64_t v17[4] = sub_24A461758;
  v17[5] = v5;
  v17[0] = MEMORY[0x263EF8330];
  v17[1] = 1107296256;
  void v17[2] = sub_24A45D850;
  v17[3] = &block_descriptor_19;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(a1, v15);
  _Block_release(v15);
  xpc_connection_activate(a1);
  return v5;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_24A461774(uint64_t a1)
{
  return sub_24A46101C(a1, *(_xpc_connection_s **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 40));
}

uint64_t sub_24A461780(uint64_t a1)
{
  return a1;
}

unint64_t sub_24A4617AC()
{
  unint64_t result = qword_269794328;
  if (!qword_269794328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269794328);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

ValueMetadata *type metadata accessor for XPCIncomingConnection()
{
  return &type metadata for XPCIncomingConnection;
}

uint64_t sub_24A461820()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794330);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24A4618B4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794330);
  uint64_t v2 = MEMORY[0x24C5C6180](a1);
  if (v2 == XPCTypeError.getter())
  {
    sub_24A4617AC();
    swift_allocError();
    *uint64_t v5 = a1;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794330);
    return sub_24A4644A8();
  }
  else
  {
    uint64_t v3 = swift_unknownObjectRetain();
    XPCDictionary.init(_:)(v3);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269794330);
    return sub_24A4644B8();
  }
}

uint64_t sub_24A4619AC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = MEMORY[0x24C5C5E60](v1 + 24);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = MEMORY[0x24C5C6180](a1);
    uint64_t v6 = XPCTypeError.getter();
    uint64_t ObjectType = swift_getObjectType();
    if (v5 == v6) {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    }
    else {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t getTimeIntervalSince1970(Date:)()
{
  uint64_t result = sub_24A463E28();
  if (v1 < 0.0 || (*(void *)&v1 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    return 0;
  }
  if (v1 <= -9.22337204e18)
  {
    __break(1u);
  }
  else if (v1 < 9.22337204e18)
  {
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

const char *PostInstallActivityConfig.identifier.unsafeMutableAddressor()
{
  return "postinstall";
}

uint64_t static PostInstallActivityConfig.identifier.getter()
{
  return 0x74736E6974736F70;
}

uint64_t sub_24A461B48()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794230);
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794238);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A468450;
  uint64_t v4 = (void *)(v3 + v2);
  uint64_t v5 = (void *)((char *)v4 + *(int *)(v0 + 48));
  *uint64_t v4 = *MEMORY[0x263EF8280];
  *uint64_t v5 = sub_24A464368();
  v5[1] = v6;
  type metadata accessor for XPCObject();
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x263EF8270])
  {
    uint64_t v8 = (char *)v4 + v1 + *(int *)(v0 + 48);
    *(void *)((char *)v4 + v1) = *MEMORY[0x263EF8270];
    *uint64_t v8 = 1;
    uint64_t result = swift_storeEnumTagMultiPayload();
    if (*MEMORY[0x263EF8268])
    {
      uint64_t v9 = (void *)((char *)v4 + 2 * v1);
      uint64_t v10 = (char *)v9 + *(int *)(v0 + 48);
      *uint64_t v9 = *MEMORY[0x263EF8268];
      unsigned char *v10 = 1;
      swift_storeEnumTagMultiPayload();
      unint64_t v11 = sub_24A45AACC(v3);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t result = swift_deallocClassInstance();
      static PostInstallActivityConfig.activityFlags = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *PostInstallActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_26979A3E0 != -1) {
    swift_once();
  }
  return &static PostInstallActivityConfig.activityFlags;
}

uint64_t static PostInstallActivityConfig.activityFlags.getter()
{
  if (qword_26979A3E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PostInstallActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_26979A3E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static PostInstallActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PostInstallActivityConfig.activityFlags.modify())()
{
  if (qword_26979A3E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24A461EC8()
{
  if (qword_26979A3E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A461F40()
{
  return 0x74736E6974736F70;
}

ValueMetadata *type metadata accessor for PostInstallActivityConfig()
{
  return &type metadata for PostInstallActivityConfig;
}

const char *CacheCleanupActivityConfig.identifier.unsafeMutableAddressor()
{
  return "db-cleanup";
}

uint64_t static CacheCleanupActivityConfig.identifier.getter()
{
  return 0x6E61656C632D6264;
}

uint64_t sub_24A461F98()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794230);
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269794238);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24A469540;
  uint64_t v4 = (void *)(v3 + v2);
  uint64_t v5 = (char *)v4 + *(int *)(v0 + 48);
  *uint64_t v4 = *MEMORY[0x263EF82A0];
  *uint64_t v5 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)((char *)v4 + v1 + *(int *)(v0 + 48));
  *(void *)((char *)v4 + v1) = *MEMORY[0x263EF81A0];
  void *v6 = 86400;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)((char *)v4 + 2 * v1);
  uint64_t v8 = (void *)((char *)v7 + *(int *)(v0 + 48));
  *uint64_t v7 = *MEMORY[0x263EF81C0];
  *uint64_t v8 = 43200;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (void *)((char *)v4 + 3 * v1);
  uint64_t v10 = (void *)((char *)v9 + *(int *)(v0 + 48));
  *uint64_t v9 = *MEMORY[0x263EF8280];
  uint64_t *v10 = sub_24A464368();
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (void *)((char *)v4 + 4 * v1);
  os_log_type_t v13 = (char *)v12 + *(int *)(v0 + 48);
  void *v12 = *MEMORY[0x263EF8180];
  *os_log_type_t v13 = 0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF8270])
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v15 = (void *)((char *)v4 + 5 * v1);
  os_log_type_t v16 = (char *)v15 + *(int *)(v0 + 48);
  void *v15 = *MEMORY[0x263EF8270];
  *os_log_type_t v16 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF8298])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v17 = (void *)((char *)v4 + 6 * v1);
  uint64_t v18 = (void *)((char *)v17 + *(int *)(v0 + 48));
  void *v17 = *MEMORY[0x263EF8298];
  *uint64_t v18 = 43200;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF81B8])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  os_log_type_t v19 = (void *)((char *)&v4[v1] - v1);
  os_log_type_t v20 = (void *)((char *)v19 + *(int *)(v0 + 48));
  *os_log_type_t v19 = *MEMORY[0x263EF81B8];
  *os_log_type_t v20 = *MEMORY[0x263EF81F8];
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF81D0])
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v21 = &v4[v1];
  uint64_t v22 = (void *)((char *)v21 + *(int *)(v0 + 48));
  *id v21 = *MEMORY[0x263EF81D0];
  *uint64_t v22 = 0xD000000000000025;
  v22[1] = 0x800000024A46C4B0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!*MEMORY[0x263EF81C8])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v23 = (void *)((char *)v4 + 9 * v1);
  uint64_t v24 = (void *)((char *)v23 + *(int *)(v0 + 48));
  *unint64_t v23 = *MEMORY[0x263EF81C8];
  void *v24 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (*MEMORY[0x263EF81A8])
  {
    os_log_type_t v25 = (void *)((char *)v4 + 10 * v1);
    uint64_t v26 = (char *)v25 + *(int *)(v0 + 48);
    void *v25 = *MEMORY[0x263EF81A8];
    *uint64_t v26 = 1;
    swift_storeEnumTagMultiPayload();
    unint64_t v27 = sub_24A45AACC(v3);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t result = swift_deallocClassInstance();
    static CacheCleanupActivityConfig.activityFlags = v27;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t *CacheCleanupActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_26979A3E8 != -1) {
    swift_once();
  }
  return &static CacheCleanupActivityConfig.activityFlags;
}

uint64_t static CacheCleanupActivityConfig.activityFlags.getter()
{
  if (qword_26979A3E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static CacheCleanupActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_26979A3E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static CacheCleanupActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CacheCleanupActivityConfig.activityFlags.modify())()
{
  if (qword_26979A3E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_24A4624F8()
{
  if (qword_26979A3E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24A462570()
{
  return 0x6E61656C632D6264;
}

ValueMetadata *type metadata accessor for CacheCleanupActivityConfig()
{
  return &type metadata for CacheCleanupActivityConfig;
}

uint64_t XPCMessage.MessageType.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_24A4625A8()
{
  return sub_24A464BC8();
}

uint64_t sub_24A4625F0()
{
  return sub_24A464BB8();
}

uint64_t sub_24A46261C()
{
  return sub_24A464BC8();
}

unint64_t sub_24A462660@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_24A46268C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t XPCMessage.ty.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t XPCMessage.init(ty:payload:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2;
  swift_unknownObjectRetain();
  xpc_object_t v7 = xpc_int64_create(a1);
  XPCObject.init(_:)(v7, (uint64_t)v6);
  XPCDictionary.subscript.setter((uint64_t)v6);
  swift_unknownObjectRelease();
  return v10;
}

void XPCMessage.init(fromXPC:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v0 - 8);
  swift_getObjectType();
  OS_xpc_object.type()();
}

void *sub_24A4627D8(uint64_t a1)
{
  if (a1 != XPCTypeDictionary.getter()) {
    goto LABEL_2;
  }
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = (void *)XPCDictionary.init(_:)(v2);
  XPCDictionary.subscript.getter(v3, (uint64_t)v1);
  swift_unknownObjectRelease();
  uint64_t v4 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v1, 1, v4) == 1)
  {
    swift_unknownObjectRelease();
    sub_24A463298((uint64_t)v1);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_unknownObjectRelease();
    sub_24A4388DC((uint64_t)v1);
    return 0;
  }
  if (*v1 >= 4uLL)
  {
LABEL_2:
    swift_unknownObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t XPCMessage.description.getter(void *a1, char a2)
{
  uint64_t v36 = type metadata accessor for XPCObject();
  uint64_t v4 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  LOBYTE(v37) = a2;
  sub_24A4648C8();
  sub_24A464358();
  int64_t v35 = a1;
  uint64_t v10 = XPCDictionary.keys.getter(a1);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v32 = v10;
  if (!v11)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    sub_24A4641D8();
    swift_bridgeObjectRelease();
    sub_24A464358();
    swift_bridgeObjectRelease();
    sub_24A464358();
    return v38;
  }
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v12 = (uint64_t *)(v10 + 40);
  os_log_type_t v13 = (void *)MEMORY[0x263F8EE80];
  xpc_object_t v33 = v9;
  while (1)
  {
    uint64_t v15 = *(v12 - 1);
    uint64_t v14 = *v12;
    swift_bridgeObjectRetain();
    XPCDictionary.subscript.getter(v35, (uint64_t)v9);
    if ((*v34)(v9, 1, v36) == 1) {
      break;
    }
    uint64_t v16 = (uint64_t)v9;
    uint64_t v17 = (uint64_t)v6;
    sub_24A438814(v16, (uint64_t)v6);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v13;
    unint64_t v20 = sub_24A3E1488(v15, v14);
    uint64_t v21 = v13[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      break;
    }
    char v24 = v19;
    if (v13[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v13 = v37;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_24A46301C();
        os_log_type_t v13 = v37;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_24A462C78(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_24A3E1488(v15, v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_21;
      }
      unint64_t v20 = v25;
      os_log_type_t v13 = v37;
      if (v24)
      {
LABEL_3:
        uint64_t v6 = (char *)v17;
        sub_24A4632F8(v17, v13[7] + *(void *)(v4 + 72) * v20);
        goto LABEL_4;
      }
    }
    v13[(v20 >> 6) + 8] |= 1 << v20;
    unint64_t v27 = (uint64_t *)(v13[6] + 16 * v20);
    uint64_t *v27 = v15;
    v27[1] = v14;
    uint64_t v6 = (char *)v17;
    sub_24A438814(v17, v13[7] + *(void *)(v4 + 72) * v20);
    uint64_t v28 = v13[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_19;
    }
    void v13[2] = v30;
    swift_bridgeObjectRetain();
LABEL_4:
    v12 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v11;
    uint64_t v9 = v33;
    if (!v11) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_24A464B28();
  __break(1u);
  return result;
}

uint64_t sub_24A462C6C()
{
  return XPCMessage.description.getter(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_24A462C78(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for XPCObject();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794348);
  int v43 = a2;
  uint64_t v9 = sub_24A464918();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  unint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_24A438814(v30, (uint64_t)v7);
    }
    else
    {
      sub_24A438878(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_24A464B98();
    sub_24A464318();
    uint64_t result = sub_24A464BC8();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    char v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *char v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_24A438814((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_24A46301C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for XPCObject();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269794348);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24A464908();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_24A438878(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_24A438814((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_24A463298(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697938F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24A4632F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24A463360()
{
  unint64_t result = qword_269794340;
  if (!qword_269794340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269794340);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for XPCMessage()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCMessage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage()
{
  return &type metadata for XPCMessage;
}

unsigned char *storeEnumTagSinglePayload for XPCMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24A4635E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage.MessageType()
{
  return &type metadata for XPCMessage.MessageType;
}

void __getCKOperationConfigurationClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCKOperationConfigurationClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 11, @"Unable to find class %s", "CKOperationConfiguration");

  __break(1u);
}

void CloudKitLibrary_cold_1(void *a1)
{
  uint64_t v2 = [MEMORY[0x263F08690] currentHandler];
  int v3 = [NSString stringWithUTF8String:"void *CloudKitLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"CKSoftLinkAssetFetch.m", 9, @"%s", *a1);

  __break(1u);
}

void __getCKContainerClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCKContainerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 10, @"Unable to find class %s", "CKContainer");

  __break(1u);
}

void __getCKRecordZoneIDClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCKRecordZoneIDClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 13, @"Unable to find class %s", "CKRecordZoneID");

  __break(1u);
}

void __getCKRecordIDClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCKRecordIDClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 14, @"Unable to find class %s", "CKRecordID");

  __break(1u);
}

void __getCKFetchRecordsOperationClass_block_invoke_cold_1()
{
  uint64_t v0 = [MEMORY[0x263F08690] currentHandler];
  uint64_t v1 = [NSString stringWithUTF8String:"Class getCKFetchRecordsOperationClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 15, @"Unable to find class %s", "CKFetchRecordsOperation");

  __break(1u);
  sub_24A463988();
}

uint64_t sub_24A463988()
{
  return MEMORY[0x270EED980]();
}

uint64_t sub_24A463998()
{
  return MEMORY[0x270EED988]();
}

uint64_t sub_24A4639A8()
{
  return MEMORY[0x270EED9B0]();
}

uint64_t sub_24A4639B8()
{
  return MEMORY[0x270EED9D0]();
}

uint64_t sub_24A4639C8()
{
  return MEMORY[0x270EED9E8]();
}

uint64_t sub_24A4639D8()
{
  return MEMORY[0x270EEDA90]();
}

uint64_t sub_24A4639E8()
{
  return MEMORY[0x270EEDAA0]();
}

uint64_t sub_24A4639F8()
{
  return MEMORY[0x270EEDBB0]();
}

uint64_t sub_24A463A08()
{
  return MEMORY[0x270EEDC50]();
}

uint64_t sub_24A463A18()
{
  return MEMORY[0x270EEDC88]();
}

uint64_t sub_24A463A28()
{
  return MEMORY[0x270EEDC90]();
}

uint64_t sub_24A463A38()
{
  return MEMORY[0x270EEDCA0]();
}

uint64_t sub_24A463A48()
{
  return MEMORY[0x270EEDCB8]();
}

uint64_t sub_24A463A58()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_24A463A68()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_24A463A78()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_24A463A88()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24A463A98()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24A463AA8()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24A463AB8()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_24A463AC8()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_24A463AD8()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_24A463AE8()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_24A463AF8()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24A463B08()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_24A463B18()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24A463B28()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24A463B38()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24A463B48()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_24A463B58()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_24A463B68()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_24A463B78()
{
  return MEMORY[0x270EEEEF0]();
}

uint64_t sub_24A463B88()
{
  return MEMORY[0x270EEEF00]();
}

uint64_t sub_24A463B98()
{
  return MEMORY[0x270EEEF88]();
}

uint64_t sub_24A463BA8()
{
  return MEMORY[0x270EEEFA8]();
}

uint64_t sub_24A463BB8()
{
  return MEMORY[0x270EEEFD0]();
}

uint64_t sub_24A463BC8()
{
  return MEMORY[0x270EEEFE8]();
}

uint64_t sub_24A463BD8()
{
  return MEMORY[0x270EEEFF8]();
}

uint64_t sub_24A463BE8()
{
  return MEMORY[0x270EEF228]();
}

uint64_t sub_24A463BF8()
{
  return MEMORY[0x270EEF250]();
}

uint64_t sub_24A463C08()
{
  return MEMORY[0x270EEF268]();
}

uint64_t sub_24A463C18()
{
  return MEMORY[0x270EEF7C8]();
}

uint64_t sub_24A463C28()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24A463C38()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_24A463C48()
{
  return MEMORY[0x270EEFC88]();
}

uint64_t sub_24A463C58()
{
  return MEMORY[0x270EEFCA0]();
}

uint64_t sub_24A463C68()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_24A463C78()
{
  return MEMORY[0x270EEFCE8]();
}

uint64_t sub_24A463C88()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24A463C98()
{
  return MEMORY[0x270EEFD70]();
}

uint64_t sub_24A463CA8()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_24A463CB8()
{
  return MEMORY[0x270EEFDB8]();
}

uint64_t sub_24A463CC8()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_24A463CD8()
{
  return MEMORY[0x270EEFE50]();
}

uint64_t sub_24A463CE8()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_24A463CF8()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24A463D08()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_24A463D18()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_24A463D28()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24A463D38()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_24A463D48()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_24A463D58()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_24A463D68()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24A463D78()
{
  return MEMORY[0x270EF00A8]();
}

uint64_t sub_24A463D88()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24A463D98()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_24A463DA8()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24A463DB8()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_24A463DC8()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_24A463DD8()
{
  return MEMORY[0x270EF06F8]();
}

uint64_t sub_24A463DE8()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_24A463DF8()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24A463E08()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_24A463E18()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_24A463E28()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24A463E38()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24A463E48()
{
  return MEMORY[0x270EF0BD8]();
}

uint64_t sub_24A463E58()
{
  return MEMORY[0x270EF0BE8]();
}

uint64_t sub_24A463E68()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24A463E78()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24A463E88()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24A463E98()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_24A463EA8()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24A463EB8()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_24A463EC8()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_24A463ED8()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24A463EE8()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24A463EF8()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_24A463F08()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_24A463F18()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_24A463F28()
{
  return MEMORY[0x270EF1050]();
}

uint64_t sub_24A463F38()
{
  return MEMORY[0x270EF1060]();
}

uint64_t sub_24A463F48()
{
  return MEMORY[0x270EF1080]();
}

uint64_t sub_24A463F58()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24A463F68()
{
  return MEMORY[0x270EF15A0]();
}

uint64_t sub_24A463F78()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_24A463F88()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_24A463F98()
{
  return MEMORY[0x270EF1698]();
}

uint64_t sub_24A463FA8()
{
  return MEMORY[0x270EF16A8]();
}

uint64_t sub_24A463FB8()
{
  return MEMORY[0x270EF16C8]();
}

uint64_t sub_24A463FC8()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24A463FD8()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24A463FE8()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24A463FF8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24A464008()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24A464018()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24A464028()
{
  return MEMORY[0x270FA1A58]();
}

uint64_t sub_24A464038()
{
  return MEMORY[0x270FA1A68]();
}

uint64_t sub_24A464048()
{
  return MEMORY[0x270EF7260]();
}

uint64_t sub_24A464058()
{
  return MEMORY[0x270EF7570]();
}

uint64_t sub_24A464068()
{
  return MEMORY[0x270EF7588]();
}

uint64_t sub_24A464078()
{
  return MEMORY[0x270EF7590]();
}

uint64_t sub_24A464088()
{
  return MEMORY[0x270EF75A8]();
}

uint64_t sub_24A464098()
{
  return MEMORY[0x270EF7760]();
}

uint64_t sub_24A4640A8()
{
  return MEMORY[0x270EF7780]();
}

uint64_t sub_24A4640B8()
{
  return MEMORY[0x270EF77B0]();
}

uint64_t sub_24A4640C8()
{
  return MEMORY[0x270EF77B8]();
}

uint64_t sub_24A4640D8()
{
  return MEMORY[0x270EF77C0]();
}

uint64_t sub_24A4640E8()
{
  return MEMORY[0x270EF77D0]();
}

uint64_t sub_24A4640F8()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24A464108()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_24A464118()
{
  return MEMORY[0x270FA09D8]();
}

uint64_t sub_24A464128()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24A464138()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24A464148()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_24A464158()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_24A464168()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_24A464178()
{
  return MEMORY[0x270EEAAA0]();
}

uint64_t sub_24A464188()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_24A464198()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_24A4641A8()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24A4641B8()
{
  return MEMORY[0x270EF1820]();
}

uint64_t sub_24A4641C8()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24A4641D8()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24A4641E8()
{
  return MEMORY[0x270F9D088]();
}

uint64_t sub_24A4641F8()
{
  return MEMORY[0x270F9D090]();
}

uint64_t sub_24A464208()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24A464218()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24A464228()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24A464238()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24A464248()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24A464258()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24A464268()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24A464278()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24A464288()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_24A464298()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_24A4642A8()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24A4642B8()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24A4642C8()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24A4642D8()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24A4642E8()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24A4642F8()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24A464308()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24A464318()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24A464328()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_24A464338()
{
  return MEMORY[0x270F9D750]();
}

uint64_t sub_24A464348()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_24A464358()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24A464368()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24A464378()
{
  return MEMORY[0x270F9D7C8]();
}

uint64_t sub_24A464388()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_24A464398()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24A4643A8()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_24A4643B8()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_24A4643C8()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24A4643E8()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_24A4643F8()
{
  return MEMORY[0x270F9DA28]();
}

uint64_t sub_24A464408()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_24A464418()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24A464428()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24A464438()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24A464448()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24A464458()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24A464468()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24A464478()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24A464488()
{
  return MEMORY[0x270F9DD00]();
}

uint64_t sub_24A464498()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24A4644A8()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24A4644B8()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24A4644D8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24A4644E8()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24A464508()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_24A464528()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_24A464538()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_24A464558()
{
  return MEMORY[0x270F9DDF0]();
}

uint64_t sub_24A464568()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24A464578()
{
  return MEMORY[0x270EF1E40]();
}

uint64_t sub_24A464588()
{
  return MEMORY[0x270EF1E60]();
}

uint64_t sub_24A464598()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24A4645A8()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24A4645B8()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24A4645C8()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24A4645D8()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24A4645F8()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24A464608()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24A464618()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24A464628()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24A464638()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_24A464648()
{
  return MEMORY[0x270FA0E10]();
}

uint64_t sub_24A464658()
{
  return MEMORY[0x270FA0E18]();
}

uint64_t sub_24A464668()
{
  return MEMORY[0x270FA0E20]();
}

uint64_t sub_24A464678()
{
  return MEMORY[0x270FA0E88]();
}

uint64_t sub_24A464688()
{
  return MEMORY[0x270FA0EA0]();
}

uint64_t sub_24A464698()
{
  return MEMORY[0x270FA0EC0]();
}

uint64_t sub_24A4646A8()
{
  return MEMORY[0x270FA0EC8]();
}

uint64_t sub_24A4646B8()
{
  return MEMORY[0x270EF2180]();
}

uint64_t sub_24A4646C8()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24A4646D8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24A4646E8()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24A4646F8()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24A464708()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_24A464718()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_24A464728()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24A464738()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24A464748()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24A464758()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_24A464768()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_24A464778()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_24A464788()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_24A464798()
{
  return MEMORY[0x270F9E878]();
}

uint64_t sub_24A4647A8()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24A4647B8()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24A4647C8()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_24A4647D8()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24A4647E8()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24A4647F8()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24A464808()
{
  return MEMORY[0x270F9E9D8]();
}

uint64_t sub_24A464818()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24A464828()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24A464838()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24A464848()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24A464858()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24A464878()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_24A464888()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_24A464898()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_24A4648A8()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_24A4648B8()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_24A4648C8()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24A4648D8()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24A4648E8()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24A4648F8()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24A464908()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24A464918()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24A464928()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24A464938()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24A464958()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24A464968()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24A464978()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_24A464988()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24A464998()
{
  return MEMORY[0x270F9F2B8]();
}

uint64_t sub_24A4649A8()
{
  return MEMORY[0x270F9F2C0]();
}

uint64_t sub_24A4649B8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24A4649C8()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_24A4649D8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24A4649E8()
{
  return MEMORY[0x270F9F320]();
}

uint64_t sub_24A4649F8()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24A464A08()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24A464A18()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24A464A28()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24A464A38()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24A464A48()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24A464A68()
{
  return MEMORY[0x270F9F658]();
}

uint64_t sub_24A464A78()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24A464A88()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_24A464A98()
{
  return MEMORY[0x270F9F820]();
}

uint64_t sub_24A464AA8()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_24A464AB8()
{
  return MEMORY[0x270F9F880]();
}

uint64_t sub_24A464AC8()
{
  return MEMORY[0x270F9F888]();
}

uint64_t sub_24A464AD8()
{
  return MEMORY[0x270F9F8C8]();
}

uint64_t sub_24A464AE8()
{
  return MEMORY[0x270F9F8E8]();
}

uint64_t sub_24A464AF8()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_24A464B18()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24A464B28()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24A464B38()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24A464B48()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24A464B58()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24A464B68()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24A464B78()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24A464B88()
{
  return MEMORY[0x270F9FC38]();
}

uint64_t sub_24A464B98()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24A464BA8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24A464BB8()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24A464BC8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24A464BD8()
{
  return MEMORY[0x270F9FD50]();
}

uint64_t sub_24A464BE8()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_24A464BF8()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24A464C08()
{
  return MEMORY[0x270F9FD80]();
}

uint64_t sub_24A464C18()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_24A464C28()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24A464C38()
{
  return MEMORY[0x270FA0090]();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return MEMORY[0x270F24B48]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x270F95F98]();
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return MEMORY[0x270F96038]();
}

uint64_t MobileGestalt_copy_deviceName_obj()
{
  return MEMORY[0x270F96058]();
}

uint64_t MobileGestalt_copy_marketingProductName_obj()
{
  return MEMORY[0x270F96080]();
}

uint64_t MobileGestalt_copy_productType_obj()
{
  return MEMORY[0x270F960A0]();
}

uint64_t MobileGestalt_copy_productVersion_obj()
{
  return MEMORY[0x270F960A8]();
}

uint64_t MobileGestalt_copy_serialNumber_obj()
{
  return MEMORY[0x270F960B0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x270F960E8]();
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x270EF2AD0]();
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA60](keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x270EFDAC8](key, algorithm, signedData, signature, error);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x270F76310]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x270ED85F8](*(void *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

int deflate(z_streamp strm, int flush)
{
  return MEMORY[0x270F9C698](strm, *(void *)&flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return MEMORY[0x270F9C6A0](strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return MEMORY[0x270F9C6A8](strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return MEMORY[0x270F9C6B0](strm, *(void *)&level, *(void *)&method, *(void *)&windowBits, *(void *)&memLevel, *(void *)&strategy, version, *(void *)&stream_size);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x270ED9620]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x270EDAA90]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x270EDAB40]();
}

int proc_pidpath_audittoken(audit_token_t *audittoken, void *buffer, uint32_t buffersize)
{
  return MEMORY[0x270EDAD90](audittoken, buffer, *(void *)&buffersize);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x270F9B4A0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x270F9B4A8](a1, *(void *)&a2, *(void *)&a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x270F9B4B0](a1, *(void *)&a2, a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x270F9B4E0](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

sqlite3_int64 sqlite3_changes64(sqlite3 *a1)
{
  return MEMORY[0x270F9B548](a1);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x270F9B560](a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B580](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  MEMORY[0x270F9B590](a1, *(void *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B598](a1, *(void *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x270F9B5A0](a1, *(void *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x270F9B5C0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return (const char *)MEMORY[0x270F9B660](*(void *)&a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x270F9B668](a1, sql, callback, a4, errmsg);
}

char *__cdecl sqlite3_expanded_sql(sqlite3_stmt *pStmt)
{
  return (char *)MEMORY[0x270F9B670](pStmt);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x270F9B690](pStmt);
}

void sqlite3_free(void *a1)
{
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x270F9B710](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x270F9B720](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x270F9B800](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return MEMORY[0x270FA02B8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t xpc_activity_add_eligibility_changed_handler()
{
  return MEMORY[0x270EDBCA0]();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x270EDBCA8](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCB8](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

uint64_t xpc_activity_remove_eligibility_changed_handler()
{
  return MEMORY[0x270EDBCC8]();
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x270EDBCE8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x270EDBCF0](activity);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return MEMORY[0x270EDBD10](xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x270EDBD38](xarray);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x270EDBDD8](value);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x270EDBDE0](xBOOL);
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return MEMORY[0x270EDBE30]();
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x270EDBE40](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x270EDBE48](endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x270EDBE58](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x270EDBE70]();
}

uid_t xpc_connection_get_euid(xpc_connection_t connection)
{
  return MEMORY[0x270EDBE88](connection);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x270EDBEA0](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x270EDBF40](object);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x270EDBF90](bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x270EDBFA8](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x270EDBFB8](xdata);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x270EDBFC8](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x270EDBFD8](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x270EDBFE8](xdict, applier);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x270EDC018]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x270EDC020](original);
}

size_t xpc_dictionary_get_count(xpc_object_t xdict)
{
  return MEMORY[0x270EDC058](xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x270EDC0A8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x270EDC0C0](xdict, key);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_object_t xpc_double_create(double value)
{
  return (xpc_object_t)MEMORY[0x270EDC168](value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  MEMORY[0x270EDC170](xdouble);
  return result;
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x270EDC180](connection);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return MEMORY[0x270EDC190](object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x270EDC200](object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x270EDC210](value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x270EDC218](xint);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x270EDC290]();
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x270EDC3D0](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x270EDC3F8](xstring);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return (const char *)MEMORY[0x270EDC428](type);
}

xpc_object_t xpc_uint64_create(uint64_t value)
{
  return (xpc_object_t)MEMORY[0x270EDC430](value);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x270EDC440](xuint);
}

xpc_object_t xpc_uuid_create(const unsigned __int8 *uuid)
{
  return (xpc_object_t)MEMORY[0x270EDC458](uuid);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return (const uint8_t *)MEMORY[0x270EDC460](xuuid);
}