uint64_t MXSpeechProfileReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        v23 = PBReaderReadData();
        v24 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v23;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_31;
          }
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          v19 = 0;
        }
LABEL_33:
        *(unsigned char *)(a1 + 16) = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MXModalityx_sharedOptions()
{
  if (MXModalityx_sharedOptions_once != -1) {
    dispatch_once(&MXModalityx_sharedOptions_once, &__block_literal_global);
  }
  v0 = (void *)MXModalityx_sharedOptions_sOptions;

  return v0;
}

id MXQss_single_userOptions()
{
  if (MXQss_single_userOptions_once != -1) {
    dispatch_once(&MXQss_single_userOptions_once, &__block_literal_global_0);
  }
  v0 = (void *)MXQss_single_userOptions_sOptions;

  return v0;
}

uint64_t MXSpeechProfileRebuildNeededReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXEntityWordsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXWordWithPronunciations);
        [a1 addWords:v17];
        if (!PBReaderPlaceMark() || (MXWordWithPronunciationsReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXProcessingErrorReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_39;
            }
            v17 += 7;
            BOOL v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_39:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v19) = 0;
          }
LABEL_41:
          uint64_t v32 = 8;
          goto LABEL_46;
        case 2u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 16;
          goto LABEL_37;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 40) |= 2u;
          break;
        case 4u:
          uint64_t v24 = PBReaderReadString();
          uint64_t v25 = 32;
LABEL_37:
          v31 = *(void **)(a1 + v25);
          *(void *)(a1 + v25) = v24;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v28 = *v3;
        unint64_t v29 = *(void *)(a2 + v28);
        if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
        *(void *)(a2 + v28) = v29 + 1;
        v19 |= (unint64_t)(v30 & 0x7F) << v26;
        if ((v30 & 0x80) == 0) {
          goto LABEL_43;
        }
        v26 += 7;
        BOOL v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_45;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_45:
      uint64_t v32 = 24;
LABEL_46:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXBeginRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          unint64_t v12 = *(void *)(a2 + v11);
          if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v14 = v9++ >= 9;
          if (v14)
          {
            unint64_t v10 = 0;
            int v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (!v15 && (v10 & 7) != 4)
        {
          unint64_t v17 = v10 >> 3;
          switch((v10 >> 3))
          {
            case 0x14u:
              unsigned int v18 = objc_alloc_init(MXAudioMetadata);
              objc_storeStrong((id *)(a1 + 8), v18);
              if PBReaderPlaceMark() && (MXAudioMetadataReadFrom((uint64_t)v18, a2))
              {
                PBReaderRecallMark();
                goto LABEL_57;
              }

              return 0;
            case 0x15u:
              char v21 = 0;
              unsigned int v22 = 0;
              uint64_t v23 = 0;
              *(unsigned char *)(a1 + 52) |= 2u;
              while (1)
              {
                uint64_t v24 = *v3;
                unint64_t v25 = *(void *)(a2 + v24);
                if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
                  break;
                }
                char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
                *(void *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_68;
                }
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  uint64_t v23 = 0;
                  goto LABEL_70;
                }
              }
              *(unsigned char *)(a2 + *v5) = 1;
LABEL_68:
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v23 = 0;
              }
LABEL_70:
              BOOL v53 = v23 != 0;
              uint64_t v54 = 48;
              goto LABEL_83;
            case 0x16u:
              char v27 = 0;
              unsigned int v28 = 0;
              uint64_t v29 = 0;
              *(unsigned char *)(a1 + 52) |= 0x10u;
              while (2)
              {
                uint64_t v30 = *v3;
                unint64_t v31 = *(void *)(a2 + v30);
                if (v31 == -1 || v31 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
                  *(void *)(a2 + v30) = v31 + 1;
                  v29 |= (unint64_t)(v32 & 0x7F) << v27;
                  if (v32 < 0)
                  {
                    v27 += 7;
                    BOOL v14 = v28++ >= 9;
                    if (v14)
                    {
                      uint64_t v29 = 0;
                      goto LABEL_74;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v29 = 0;
              }
LABEL_74:
              BOOL v53 = v29 != 0;
              uint64_t v54 = 51;
              goto LABEL_83;
            case 0x17u:
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              *(unsigned char *)(a1 + 52) |= 8u;
              while (2)
              {
                uint64_t v36 = *v3;
                unint64_t v37 = *(void *)(a2 + v36);
                if (v37 == -1 || v37 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v38 = *(unsigned char *)(*(void *)(a2 + *v7) + v37);
                  *(void *)(a2 + v36) = v37 + 1;
                  v35 |= (unint64_t)(v38 & 0x7F) << v33;
                  if (v38 < 0)
                  {
                    v33 += 7;
                    BOOL v14 = v34++ >= 9;
                    if (v14)
                    {
                      uint64_t v35 = 0;
                      goto LABEL_78;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v35 = 0;
              }
LABEL_78:
              BOOL v53 = v35 != 0;
              uint64_t v54 = 50;
              goto LABEL_83;
            case 0x18u:
              uint64_t v19 = PBReaderReadString();
              uint64_t v20 = 16;
              goto LABEL_47;
            case 0x19u:
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              *(unsigned char *)(a1 + 52) |= 4u;
              while (2)
              {
                uint64_t v43 = *v3;
                unint64_t v44 = *(void *)(a2 + v43);
                if (v44 == -1 || v44 >= *(void *)(a2 + *v4))
                {
                  *(unsigned char *)(a2 + *v5) = 1;
                }
                else
                {
                  char v45 = *(unsigned char *)(*(void *)(a2 + *v7) + v44);
                  *(void *)(a2 + v43) = v44 + 1;
                  v42 |= (unint64_t)(v45 & 0x7F) << v40;
                  if (v45 < 0)
                  {
                    v40 += 7;
                    BOOL v14 = v41++ >= 9;
                    if (v14)
                    {
                      uint64_t v42 = 0;
                      goto LABEL_82;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(unsigned char *)(a2 + *v5)) {
                uint64_t v42 = 0;
              }
LABEL_82:
              BOOL v53 = v42 != 0;
              uint64_t v54 = 49;
LABEL_83:
              *(unsigned char *)(a1 + v54) = v53;
              goto LABEL_84;
            case 0x1Au:
              PBReaderReadString();
              unsigned int v18 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
              if (v18) {
                [(id)a1 addInlineLmeItems:v18];
              }
LABEL_57:

              goto LABEL_84;
            default:
              if (v17 == 2)
              {
                char v46 = 0;
                unsigned int v47 = 0;
                uint64_t v48 = 0;
                *(unsigned char *)(a1 + 52) |= 1u;
                while (1)
                {
                  uint64_t v49 = *v3;
                  unint64_t v50 = *(void *)(a2 + v49);
                  if (v50 == -1 || v50 >= *(void *)(a2 + *v4)) {
                    break;
                  }
                  char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v50);
                  *(void *)(a2 + v49) = v50 + 1;
                  v48 |= (unint64_t)(v51 & 0x7F) << v46;
                  if ((v51 & 0x80) == 0) {
                    goto LABEL_87;
                  }
                  v46 += 7;
                  BOOL v14 = v47++ >= 9;
                  if (v14)
                  {
                    LODWORD(v48) = 0;
                    goto LABEL_89;
                  }
                }
                *(unsigned char *)(a2 + *v5) = 1;
LABEL_87:
                if (*(unsigned char *)(a2 + *v5)) {
                  LODWORD(v48) = 0;
                }
LABEL_89:
                *(_DWORD *)(a1 + 32) = v48;
              }
              else if (v17 == 1)
              {
                uint64_t v19 = PBReaderReadString();
                uint64_t v20 = 40;
LABEL_47:
                v39 = *(void **)(a1 + v20);
                *(void *)(a1 + v20) = v19;
              }
              else
              {
                uint64_t result = PBReaderSkipValueWithTag();
                if (!result) {
                  return result;
                }
              }
LABEL_84:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionChoiceReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (1)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
          *(void *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0) {
            goto LABEL_43;
          }
          v25 += 7;
          BOOL v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v27) = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v27) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 32) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_32;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_32:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          while (1)
          {
            uint64_t v34 = *v3;
            unint64_t v35 = *(void *)(a2 + v34);
            if (v35 == -1 || v35 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v36 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_55;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_55:
          PBRepeatedInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXItnAlignmentReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          char v17 = 0;
          unsigned int v18 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v20 = *v3;
            unint64_t v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4))
            {
              char v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
              goto LABEL_53;
            }
            char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              break;
            }
            v17 += 7;
            BOOL v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              char v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
              goto LABEL_56;
            }
          }
          char v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
          goto LABEL_54;
        case 2u:
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 8u;
          while (2)
          {
            uint64_t v27 = *v3;
            unint64_t v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              char v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
              goto LABEL_53;
            }
            char v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
            *(void *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                char v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          char v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
          goto LABEL_54;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (2)
          {
            uint64_t v32 = *v3;
            unint64_t v33 = *(void *)(a2 + v32);
            if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
            {
              char v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
              goto LABEL_53;
            }
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              BOOL v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                char v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          char v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
          goto LABEL_54;
        case 4u:
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v19 = 0;
          *(unsigned char *)(a1 + 24) |= 4u;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
          return 0;
      }
      while (1)
      {
        uint64_t v37 = *v3;
        unint64_t v38 = *(void *)(a2 + v37);
        if (v38 == -1 || v38 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v39 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
        *(void *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
        {
          char v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
          goto LABEL_54;
        }
        v35 += 7;
        BOOL v23 = v36++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          char v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
          goto LABEL_56;
        }
      }
      char v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
LABEL_53:
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v19) = 0;
      }
LABEL_56:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXCancelRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXAudioAnalyticsAcousticFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        unsigned int v18 = *(MXAcousticFeature **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    unsigned int v18 = objc_alloc_init(MXAcousticFeature);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (MXAcousticFeatureReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXFinalSpeechRecognitionResponseReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 88;
        goto LABEL_59;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 80;
        goto LABEL_59;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 104) |= 4u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_70:
        uint64_t v52 = 64;
        goto LABEL_79;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 72;
        goto LABEL_59;
      case 5u:
        unint64_t v28 = objc_alloc_init(MXRecognitionResult);
        objc_storeStrong((id *)(a1 + 48), v28);
        if (!PBReaderPlaceMark() || !MXRecognitionResultReadFrom((char *)v28, a2)) {
          goto LABEL_88;
        }
        goto LABEL_57;
      case 6u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 104) |= 2u;
        while (2)
        {
          uint64_t v31 = *v3;
          uint64_t v32 = *(void *)(a2 + v31);
          unint64_t v33 = v32 + 1;
          if (v32 == -1 || v33 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v32);
            *(void *)(a2 + v31) = v33;
            v23 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_74:
        uint64_t v52 = 24;
        goto LABEL_79;
      case 7u:
        unint64_t v28 = objc_alloc_init(MXAudioAnalytics);
        objc_storeStrong((id *)(a1 + 16), v28);
        if (!PBReaderPlaceMark() || !MXAudioAnalyticsReadFrom(v28, a2)) {
          goto LABEL_88;
        }
        goto LABEL_57;
      case 8u:
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 104) |= 8u;
        while (2)
        {
          uint64_t v37 = *v3;
          uint64_t v38 = *(void *)(a2 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v38);
            *(void *)(a2 + v37) = v39;
            v23 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              BOOL v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_78:
        uint64_t v52 = 96;
LABEL_79:
        *(_DWORD *)(a1 + v52) = v23;
        goto LABEL_86;
      case 9u:
        *(unsigned char *)(a1 + 104) |= 1u;
        uint64_t v41 = *v3;
        unint64_t v42 = *(void *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v43 = *(void *)(*(void *)(a2 + *v7) + v42);
          *(void *)(a2 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v43 = 0;
        }
        *(void *)(a1 + 8) = v43;
        goto LABEL_86;
      case 0xAu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 32;
        goto LABEL_59;
      case 0xBu:
        unint64_t v28 = objc_alloc_init(MXLatnnMitigatorResult);
        objc_storeStrong((id *)(a1 + 40), v28);
        if PBReaderPlaceMark() && (MXLatnnMitigatorResultReadFrom((uint64_t)v28, a2))
        {
LABEL_57:
          PBReaderRecallMark();

LABEL_86:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_88:

        return 0;
      case 0xCu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 56;
LABEL_59:
        unint64_t v44 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_86;
      case 0xDu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 104) |= 0x10u;
        while (2)
        {
          uint64_t v48 = *v3;
          uint64_t v49 = *(void *)(a2 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + *v7) + v49);
            *(void *)(a2 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v15 = v46++ >= 9;
              if (v15)
              {
                uint64_t v47 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v47 = 0;
        }
LABEL_83:
        *(unsigned char *)(a1 + 100) = v47 != 0;
        goto LABEL_86;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_86;
    }
  }
}

uint64_t MXRecognitionPhraseTokensAlternativesReadFrom(unsigned char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        a1[20] |= 1u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_33;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_35;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_33:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_35:
        a1[16] = v20 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXRecognitionPhraseTokens);
        [a1 addTokPhrases:v17];
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXWordWithPronunciationsReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_33;
        case 2u:
          uint64_t v20 = PBReaderReadData();
          if (v20) {
            [(id)a1 addPronunciations:v20];
          }

          continue;
        case 3u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 40) |= 1u;
          break;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
LABEL_33:
          char v27 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v24 = *v3;
        unint64_t v25 = *(void *)(a2 + v24);
        if (v25 == -1 || v25 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
        *(void *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0) {
          goto LABEL_35;
        }
        v21 += 7;
        BOOL v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_37;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
      if (*(unsigned char *)(a2 + *v5)) {
        LODWORD(v23) = 0;
      }
LABEL_37:
      *(_DWORD *)(a1 + 8) = v23;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXCategoryEntitiesReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(MXEntities **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = objc_alloc_init(MXEntities);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (MXEntitiesReadFrom(v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXStreamingSpeechProfileCommitReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXSpeechRecognitionFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v16 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        uint64_t v20 = *v3;
        unint64_t v21 = *(void *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v4))
        {
          int v22 = *(_DWORD *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v22 = 0;
        }
        *(_DWORD *)(a1 + 16) = v22;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v18 = PBReaderReadString();
        unsigned int v19 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v18;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MXSpeech_profile_dataOptions()
{
  if (MXSpeech_profile_dataOptions_once != -1) {
    dispatch_once(&MXSpeech_profile_dataOptions_once, &__block_literal_global_1);
  }
  v0 = (void *)MXSpeech_profile_dataOptions_sOptions;

  return v0;
}

uint64_t MXRecognitionCandidateReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      uint64_t v12 = *(void *)(a2 + v11);
      unint64_t v13 = v12 + 1;
      if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
        break;
      }
      char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v15 = v9++ >= 9;
      if (v15)
      {
        unint64_t v10 = 0;
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v16 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 104;
        goto LABEL_63;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 96;
        goto LABEL_63;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 116) |= 8u;
        while (2)
        {
          uint64_t v24 = *v3;
          uint64_t v25 = *(void *)(a2 + v24);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
            *(void *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              BOOL v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_67:
        uint64_t v47 = 80;
        goto LABEL_76;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 88;
        goto LABEL_63;
      case 5u:
        unint64_t v28 = objc_alloc_init(MXRecognitionResult);
        objc_storeStrong((id *)(a1 + 56), v28);
        if (!PBReaderPlaceMark() || !MXRecognitionResultReadFrom((char *)v28, a2)) {
          goto LABEL_84;
        }
        goto LABEL_61;
      case 6u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 72;
        goto LABEL_63;
      case 7u:
        *(unsigned char *)(a1 + 116) |= 1u;
        uint64_t v29 = *v3;
        unint64_t v30 = *(void *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v31 = *(void *)(*(void *)(a2 + *v7) + v30);
          *(void *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v31 = 0;
        }
        uint64_t v48 = 8;
        goto LABEL_81;
      case 8u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 116) |= 4u;
        while (2)
        {
          uint64_t v34 = *v3;
          uint64_t v35 = *(void *)(a2 + v34);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v35);
            *(void *)(a2 + v34) = v36;
            v23 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v15 = v33++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_71:
        uint64_t v47 = 32;
        goto LABEL_76;
      case 9u:
        unint64_t v28 = objc_alloc_init(MXAudioAnalytics);
        objc_storeStrong((id *)(a1 + 24), v28);
        if (!PBReaderPlaceMark() || !MXAudioAnalyticsReadFrom(v28, a2)) {
          goto LABEL_84;
        }
        goto LABEL_61;
      case 0xAu:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 116) |= 0x10u;
        while (2)
        {
          uint64_t v40 = *v3;
          uint64_t v41 = *(void *)(a2 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v41);
            *(void *)(a2 + v40) = v42;
            v23 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              BOOL v15 = v39++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v23) = 0;
        }
LABEL_75:
        uint64_t v47 = 112;
LABEL_76:
        *(_DWORD *)(a1 + v47) = v23;
        goto LABEL_82;
      case 0xBu:
        *(unsigned char *)(a1 + 116) |= 2u;
        uint64_t v44 = *v3;
        unint64_t v45 = *(void *)(a2 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v31 = *(void *)(*(void *)(a2 + *v7) + v45);
          *(void *)(a2 + v44) = v45 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          uint64_t v31 = 0;
        }
        uint64_t v48 = 16;
LABEL_81:
        *(void *)(a1 + v48) = v31;
        goto LABEL_82;
      case 0xCu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
        goto LABEL_63;
      case 0xDu:
        unint64_t v28 = objc_alloc_init(MXLatnnMitigatorResult);
        objc_storeStrong((id *)(a1 + 48), v28);
        if PBReaderPlaceMark() && (MXLatnnMitigatorResultReadFrom((uint64_t)v28, a2))
        {
LABEL_61:
          PBReaderRecallMark();

LABEL_82:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_84:

        return 0;
      case 0xEu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 64;
LABEL_63:
        unsigned int v46 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_82;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_82;
    }
  }
}

uint64_t MXLatnnMitigatorResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v16) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = (v10 & 7) == 4;
        }
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              *(unsigned char *)(a1 + 36) |= 4u;
              break;
            case 2u:
              uint64_t v26 = PBReaderReadString();
              char v27 = *(void **)(a1 + 24);
              *(void *)(a1 + 24) = v26;

              goto LABEL_44;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 2u;
              uint64_t v28 = *v3;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v30 = *(void *)(*(void *)(a2 + *v7) + v29);
                *(void *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v30 = 0;
              }
              uint64_t v33 = 16;
              goto LABEL_43;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 1u;
              uint64_t v31 = *v3;
              unint64_t v32 = *(void *)(a2 + v31);
              if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v30 = *(void *)(*(void *)(a2 + *v7) + v32);
                *(void *)(a2 + v31) = v32 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v30 = 0;
              }
              uint64_t v33 = 8;
LABEL_43:
              *(void *)(a1 + v33) = v30;
              goto LABEL_44;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_44:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v21 = *v3;
            uint64_t v22 = *(void *)(a2 + v21);
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)(a2 + *v4)) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
            *(void *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_36;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_38;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_36:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v20 = 0;
          }
LABEL_38:
          *(unsigned char *)(a1 + 32) = v20 != 0;
          goto LABEL_44;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionTokenReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_59;
        case 2u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 52) |= 8u;
          while (2)
          {
            uint64_t v23 = *v3;
            unint64_t v24 = *(void *)(a2 + v23);
            if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
              *(void *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                BOOL v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_63:
          uint64_t v48 = 36;
          goto LABEL_76;
        case 3u:
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (2)
          {
            uint64_t v28 = *v3;
            unint64_t v29 = *(void *)(a2 + v28);
            if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
              *(void *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                BOOL v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_67:
          uint64_t v48 = 12;
          goto LABEL_76;
        case 4u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 52) |= 4u;
          while (2)
          {
            uint64_t v33 = *v3;
            unint64_t v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                BOOL v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_71:
          uint64_t v48 = 32;
          goto LABEL_76;
        case 5u:
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 52) |= 1u;
          while (2)
          {
            uint64_t v38 = *v3;
            unint64_t v39 = *(void *)(a2 + v38);
            if (v39 == -1 || v39 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v40 = *(unsigned char *)(*(void *)(a2 + *v7) + v39);
              *(void *)(a2 + v38) = v39 + 1;
              v22 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                BOOL v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v22) = 0;
          }
LABEL_75:
          uint64_t v48 = 8;
LABEL_76:
          *(_DWORD *)(a1 + v48) = v22;
          continue;
        case 6u:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          *(unsigned char *)(a1 + 52) |= 0x10u;
          break;
        case 7u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
          goto LABEL_59;
        case 8u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
LABEL_59:
          uint64_t v47 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v44 = *v3;
        unint64_t v45 = *(void *)(a2 + v44);
        if (v45 == -1 || v45 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v46 = *(unsigned char *)(*(void *)(a2 + *v7) + v45);
        *(void *)(a2 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if ((v46 & 0x80) == 0) {
          goto LABEL_78;
        }
        v41 += 7;
        BOOL v14 = v42++ >= 9;
        if (v14)
        {
          uint64_t v43 = 0;
          goto LABEL_80;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_78:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v43 = 0;
      }
LABEL_80:
      *(unsigned char *)(a1 + 48) = v43 != 0;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXAcousticFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v18 = v10 & 7;
      if (v17 || v18 == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 36) |= 1u;
        uint64_t v25 = *v3;
        unint64_t v26 = *(void *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v4))
        {
          int v27 = *(_DWORD *)(*(void *)(a2 + *v7) + v26);
          *(void *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + *v5) = 1;
          int v27 = 0;
        }
        *(_DWORD *)(a1 + 32) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        if (v18 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (1)
          {
            unsigned int v21 = (unint64_t *)(a2 + *v3);
            unint64_t v22 = *v21;
            unint64_t v23 = *(void *)(a2 + *v4);
            if (*v21 >= v23) {
              break;
            }
            uint64_t v24 = *v5;
            if (*(unsigned char *)(a2 + v24)) {
              break;
            }
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > v23) {
              *(unsigned char *)(a2 + v24) = 1;
            }
            else {
              *unsigned int v21 = v22 + 4;
            }
            PBRepeatedFloatAdd();
          }
          PBReaderRecallMark();
        }
        else
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v4)) {
            *(void *)(a2 + v28) = v29 + 4;
          }
          else {
            *(unsigned char *)(a2 + v16) = 1;
          }
          PBRepeatedFloatAdd();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXAudioAnalyticsReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        int v17 = objc_alloc_init(MXSpeechRecognitionFeature);
        [a1 addSpeechRecognitionFeatures:v17];
        if (!PBReaderPlaceMark() || (MXSpeechRecognitionFeatureReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_30;
        }
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_27:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    int v17 = objc_alloc_init(MXAudioAnalyticsAcousticFeature);
    [a1 addAcousticFeatures:v17];
    if (!PBReaderPlaceMark() || !MXAudioAnalyticsAcousticFeatureReadFrom((uint64_t)v17, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXBeginDictationReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          int v17 = objc_alloc_init(MXAudioMetadata);
          objc_storeStrong((id *)(a1 + 32), v17);
          if PBReaderPlaceMark() && (MXAudioMetadataReadFrom((uint64_t)v17, a2))
          {
            PBReaderRecallMark();
            goto LABEL_50;
          }

          return 0;
        case 2u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 120;
          goto LABEL_75;
        case 3u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 40;
          goto LABEL_75;
        case 4u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 48;
          goto LABEL_75;
        case 5u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 16;
          goto LABEL_75;
        case 6u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 24;
          goto LABEL_75;
        case 7u:
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 144) |= 4u;
          while (2)
          {
            uint64_t v24 = *v3;
            unint64_t v25 = *(void *)(a2 + v24);
            if (v25 == -1 || v25 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v25);
              *(void *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                BOOL v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_100:
          uint64_t v68 = 84;
          goto LABEL_125;
        case 8u:
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 144) |= 2u;
          while (2)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
              *(void *)(a2 + v29) = v30 + 1;
              v23 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                BOOL v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_104:
          uint64_t v68 = 80;
          goto LABEL_125;
        case 9u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 128;
          goto LABEL_75;
        case 0xAu:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 104;
          goto LABEL_75;
        case 0xBu:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 96;
          goto LABEL_75;
        case 0xCu:
          PBReaderReadString();
          int v17 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
          if (v17) {
            [(id)a1 addInlineLmeItems:v17];
          }
          goto LABEL_50;
        case 0xDu:
          PBReaderReadString();
          int v17 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
          if (v17) {
            [(id)a1 addLanguages:v17];
          }
LABEL_50:

          continue;
        case 0xEu:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 112;
          goto LABEL_75;
        case 0xFu:
          uint64_t v19 = PBReaderReadData();
          uint64_t v20 = 8;
          goto LABEL_75;
        case 0x10u:
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          *(unsigned char *)(a1 + 144) |= 8u;
          while (2)
          {
            uint64_t v35 = *v3;
            unint64_t v36 = *(void *)(a2 + v35);
            if (v36 == -1 || v36 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v37 = *(unsigned char *)(*(void *)(a2 + *v7) + v36);
              *(void *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                BOOL v14 = v33++ >= 9;
                if (v14)
                {
                  uint64_t v34 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v34 = 0;
          }
LABEL_108:
          BOOL v69 = v34 != 0;
          uint64_t v70 = 136;
          goto LABEL_130;
        case 0x11u:
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 144) |= 0x80u;
          while (2)
          {
            uint64_t v41 = *v3;
            unint64_t v42 = *(void *)(a2 + v41);
            if (v42 == -1 || v42 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v7) + v42);
              *(void *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                BOOL v14 = v39++ >= 9;
                if (v14)
                {
                  uint64_t v40 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v40 = 0;
          }
LABEL_112:
          BOOL v69 = v40 != 0;
          uint64_t v70 = 140;
          goto LABEL_130;
        case 0x12u:
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v46 = 0;
          *(unsigned char *)(a1 + 144) |= 0x40u;
          while (2)
          {
            uint64_t v47 = *v3;
            unint64_t v48 = *(void *)(a2 + v47);
            if (v48 == -1 || v48 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v49 = *(unsigned char *)(*(void *)(a2 + *v7) + v48);
              *(void *)(a2 + v47) = v48 + 1;
              v46 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                BOOL v14 = v45++ >= 9;
                if (v14)
                {
                  uint64_t v46 = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v46 = 0;
          }
LABEL_116:
          BOOL v69 = v46 != 0;
          uint64_t v70 = 139;
          goto LABEL_130;
        case 0x13u:
          uint64_t v19 = PBReaderReadString();
          uint64_t v20 = 72;
LABEL_75:
          unint64_t v50 = *(void **)(a1 + v20);
          *(void *)(a1 + v20) = v19;

          continue;
        case 0x14u:
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          *(unsigned char *)(a1 + 144) |= 0x10u;
          while (2)
          {
            uint64_t v54 = *v3;
            unint64_t v55 = *(void *)(a2 + v54);
            if (v55 == -1 || v55 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v56 = *(unsigned char *)(*(void *)(a2 + *v7) + v55);
              *(void *)(a2 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                BOOL v14 = v52++ >= 9;
                if (v14)
                {
                  uint64_t v53 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v53 = 0;
          }
LABEL_120:
          BOOL v69 = v53 != 0;
          uint64_t v70 = 137;
          goto LABEL_130;
        case 0x15u:
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v23 = 0;
          *(unsigned char *)(a1 + 144) |= 1u;
          while (2)
          {
            uint64_t v59 = *v3;
            unint64_t v60 = *(void *)(a2 + v59);
            if (v60 == -1 || v60 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v7) + v60);
              *(void *)(a2 + v59) = v60 + 1;
              v23 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                BOOL v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v23) = 0;
          }
LABEL_124:
          uint64_t v68 = 64;
LABEL_125:
          *(_DWORD *)(a1 + v68) = v23;
          continue;
        case 0x16u:
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v64 = 0;
          *(unsigned char *)(a1 + 144) |= 0x20u;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v65 = *v3;
        unint64_t v66 = *(void *)(a2 + v65);
        if (v66 == -1 || v66 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v67 = *(unsigned char *)(*(void *)(a2 + *v7) + v66);
        *(void *)(a2 + v65) = v66 + 1;
        v64 |= (unint64_t)(v67 & 0x7F) << v62;
        if ((v67 & 0x80) == 0) {
          goto LABEL_127;
        }
        v62 += 7;
        BOOL v14 = v63++ >= 9;
        if (v14)
        {
          uint64_t v64 = 0;
          goto LABEL_129;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_127:
      if (*(unsigned char *)(a2 + *v5)) {
        uint64_t v64 = 0;
      }
LABEL_129:
      BOOL v69 = v64 != 0;
      uint64_t v70 = 138;
LABEL_130:
      *(unsigned char *)(a1 + v70) = v69;
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXAudioMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 44) |= 2u;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_54;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_56;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_54:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_56:
        uint64_t v44 = 24;
        goto LABEL_61;
      case 2u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 44) |= 1u;
        while (2)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
            *(void *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v19) = 0;
        }
LABEL_60:
        uint64_t v44 = 8;
LABEL_61:
        *(_DWORD *)(a1 + v44) = v19;
        goto LABEL_71;
      case 3u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        *(unsigned char *)(a1 + 44) |= 8u;
        while (2)
        {
          uint64_t v32 = *v3;
          unint64_t v33 = *(void *)(a2 + v32);
          if (v33 == -1 || v33 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v34 = *(unsigned char *)(*(void *)(a2 + *v7) + v33);
            *(void *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              BOOL v14 = v30++ >= 9;
              if (v14)
              {
                uint64_t v31 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v31 = 0;
        }
LABEL_65:
        BOOL v45 = v31 != 0;
        uint64_t v46 = 41;
        goto LABEL_70;
      case 4u:
        uint64_t v35 = objc_alloc_init(MXVoiceTriggerInfo);
        objc_storeStrong((id *)(a1 + 32), v35);
        if PBReaderPlaceMark() && (MXVoiceTriggerInfoReadFrom((uint64_t)v35, a2))
        {
          PBReaderRecallMark();

LABEL_71:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 44) |= 4u;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_69:
        BOOL v45 = v38 != 0;
        uint64_t v46 = 40;
LABEL_70:
        *(unsigned char *)(a1 + v46) = v45;
        goto LABEL_71;
      case 6u:
        uint64_t v42 = PBReaderReadString();
        char v43 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v42;

        goto LABEL_71;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_71;
    }
  }
}

uint64_t MXEntitiesReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v17 = objc_alloc_init(MXEntityWords);
        [a1 addEntities:v17];
        if (!PBReaderPlaceMark() || (MXEntityWordsReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXAudioFrameReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0) {
            goto LABEL_35;
          }
          v20 += 7;
          BOOL v14 = v21++ >= 9;
          if (v14)
          {
            uint64_t v22 = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_37:
        *(unsigned char *)(a1 + 24) = v22 != 0;
      }
      else if (v17 == 2)
      {
        uint64_t v26 = PBReaderReadData();
        if (v26) {
          [(id)a1 addAudio:v26];
        }
      }
      else if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v18;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXDeviceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      switch((v10 >> 3))
      {
        case 1u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
          goto LABEL_24;
        case 2u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 16;
          goto LABEL_24;
        case 3u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 32;
          goto LABEL_24;
        case 4u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 40;
          goto LABEL_24;
        case 5u:
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 24;
LABEL_24:
          uint64_t v19 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_25:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRepeatedItnAlignmentReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXItnAlignment);
        [a1 addItnAlignment:v17];
        if (!PBReaderPlaceMark() || !MXItnAlignmentReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXSpeechProfileBuildResponseReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_34;
      case 2u:
        uint64_t v19 = objc_alloc_init(MXProcessingError);
        objc_storeStrong((id *)(a1 + 8), v19);
        if PBReaderPlaceMark() && (MXProcessingErrorReadFrom((uint64_t)v19, a2))
        {
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 44) |= 1u;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                uint64_t v22 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v22 = 0;
        }
LABEL_38:
        *(unsigned char *)(a1 + 40) = v22 != 0;
        goto LABEL_39;
      case 0xAu:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
        goto LABEL_34;
      case 0xBu:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 24;
LABEL_34:
        unint64_t v27 = *(void **)(a1 + v18);
        *(void *)(a1 + v18) = v17;

        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

uint64_t MXSpeechProfileSourceDataReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXCategoryEntities);
        [a1 addEntitiesByCategory:v17];
        if (!PBReaderPlaceMark() || !MXCategoryEntitiesReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXStreamingSpeechProfileBeginReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((v10 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_24;
      }
      if (v17 == 1)
      {
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
LABEL_24:
        char v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v18 = PBReaderReadString();
    uint64_t v19 = 16;
    goto LABEL_24;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXRecognitionResultReadFrom(char *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        unint64_t v17 = objc_alloc_init(MXRecognitionSausage);
        uint64_t v18 = 32;
        goto LABEL_23;
      case 2u:
        unint64_t v17 = objc_alloc_init(MXRecognitionSausage);
        uint64_t v18 = 16;
LABEL_23:
        objc_storeStrong((id *)&a1[v18], v17);
        if (!PBReaderPlaceMark() || (MXRecognitionSausageReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_36;
      case 3u:
        unint64_t v17 = objc_alloc_init(MXRecognitionChoice);
        [a1 addPreItnNbestChoices:v17];
        goto LABEL_28;
      case 4u:
        unint64_t v17 = objc_alloc_init(MXRecognitionChoice);
        [a1 addPostItnNbestChoices:v17];
LABEL_28:
        if (!PBReaderPlaceMark() || (MXRecognitionChoiceReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_36;
      case 5u:
        unint64_t v17 = objc_alloc_init(MXItnAlignment);
        [a1 addPreItnTokenToPostItnCharAlignment:v17];
        if (!PBReaderPlaceMark() || !MXItnAlignmentReadFrom((uint64_t)v17, a2)) {
          goto LABEL_40;
        }
        goto LABEL_36;
      case 6u:
        unint64_t v17 = objc_alloc_init(MXChoiceAlignment);
        [a1 addChoiceAlignments:v17];
        if PBReaderPlaceMark() && (MXChoiceAlignmentReadFrom(v17, a2))
        {
LABEL_36:
          PBReaderRecallMark();

LABEL_37:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
    }
  }
}

uint64_t MXClientBoundFrameReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        unsigned int v17 = 0;
        do
        {
          uint64_t v18 = *v3;
          unint64_t v19 = *(void *)(a2 + v18);
          if (v19 == -1 || v19 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
            goto LABEL_46;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0) {
            break;
          }
        }
        while (v17++ <= 8);
        goto LABEL_46;
      case 1u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 1;
        unint64_t v24 = objc_alloc_init(MXRequestComplete);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (!PBReaderPlaceMark() || (MXRequestCompleteReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_45;
      case 2u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 2;
        unint64_t v24 = objc_alloc_init(MXProcessingError);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (MXProcessingErrorReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_45;
      case 3u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 3;
        unint64_t v24 = objc_alloc_init(MXASRResult);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || (MXASRResultReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_45;
      case 4u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 4;
        unint64_t v24 = objc_alloc_init(MXSpeechProfileRebuildNeeded);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || (MXSpeechProfileRebuildNeededReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_45;
      case 5u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 5;
        unint64_t v24 = objc_alloc_init(MXRequestMitigated);
        objc_storeStrong((id *)(a1 + 40), v24);
        if (!PBReaderPlaceMark() || (MXRequestMitigatedReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_50;
        }
        goto LABEL_45;
      case 6u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 6;
        unint64_t v24 = objc_alloc_init(MXSpeechProfileBuildResponse);
        objc_storeStrong((id *)(a1 + 56), v24);
        if PBReaderPlaceMark() && (MXSpeechProfileBuildResponseReadFrom((uint64_t)v24, a2))
        {
LABEL_45:
          PBReaderRecallMark();

LABEL_46:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_50:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_46;
    }
  }
}

uint64_t MXSessionMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      unint64_t v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 10)
      {
        if (v17 == 11)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          *(unsigned char *)(a1 + 32) |= 1u;
          while (1)
          {
            uint64_t v30 = *v3;
            unint64_t v31 = *(void *)(a2 + v30);
            if (v31 == -1 || v31 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)(a2 + *v7) + v31);
            *(void *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0) {
              goto LABEL_48;
            }
            v27 += 7;
            BOOL v14 = v28++ >= 9;
            if (v14)
            {
              LODWORD(v29) = 0;
              goto LABEL_50;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_48:
          if (*(unsigned char *)(a2 + *v5)) {
            LODWORD(v29) = 0;
          }
LABEL_50:
          *(_DWORD *)(a1 + 24) = v29;
        }
        else
        {
          if (v17 != 12)
          {
LABEL_41:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            continue;
          }
          uint64_t v24 = PBReaderReadString();
          char v25 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v24;
        }
      }
      else if (v17 == 1)
      {
        uint64_t v26 = objc_alloc_init(MXDeviceInfo);
        objc_storeStrong((id *)(a1 + 8), v26);
        if (!PBReaderPlaceMark() || !MXDeviceInfoReadFrom((uint64_t)v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 != 10) {
          goto LABEL_41;
        }
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        while (1)
        {
          uint64_t v21 = *v3;
          unint64_t v22 = *(void *)(a2 + v21);
          if (v22 == -1 || v22 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + *v7) + v22);
          *(void *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_44;
          }
          v18 += 7;
          BOOL v14 = v19++ >= 9;
          if (v14)
          {
            uint64_t v20 = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v20 = 0;
        }
LABEL_46:
        *(unsigned char *)(a1 + 28) = v20 != 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXVoiceTriggerInfoReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        int v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(unsigned char *)(a2 + *v5)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v16) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = (v10 & 7) == 4;
        }
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 88) |= 0x80u;
              uint64_t v18 = *v3;
              unint64_t v19 = *(void *)(a2 + v18);
              if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v19);
                *(void *)(a2 + v18) = v19 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 64;
              goto LABEL_67;
            case 2u:
              *(_WORD *)(a1 + 88) |= 0x100u;
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v23);
                *(void *)(a2 + v22) = v23 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 72;
              goto LABEL_67;
            case 3u:
              *(_WORD *)(a1 + 88) |= 0x10u;
              uint64_t v24 = *v3;
              unint64_t v25 = *(void *)(a2 + v24);
              if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v25);
                *(void *)(a2 + v24) = v25 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 40;
              goto LABEL_67;
            case 4u:
              *(_WORD *)(a1 + 88) |= 0x20u;
              uint64_t v26 = *v3;
              unint64_t v27 = *(void *)(a2 + v26);
              if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v27);
                *(void *)(a2 + v26) = v27 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 48;
              goto LABEL_67;
            case 5u:
              *(_WORD *)(a1 + 88) |= 4u;
              uint64_t v28 = *v3;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v29);
                *(void *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 24;
              goto LABEL_67;
            case 6u:
              *(_WORD *)(a1 + 88) |= 8u;
              uint64_t v30 = *v3;
              unint64_t v31 = *(void *)(a2 + v30);
              if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v31);
                *(void *)(a2 + v30) = v31 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 32;
              goto LABEL_67;
            case 7u:
              uint64_t v32 = PBReaderReadString();
              unint64_t v33 = *(void **)(a1 + 80);
              *(void *)(a1 + 80) = v32;

              goto LABEL_68;
            case 8u:
              *(_WORD *)(a1 + 88) |= 2u;
              uint64_t v34 = *v3;
              unint64_t v35 = *(void *)(a2 + v34);
              if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v35);
                *(void *)(a2 + v34) = v35 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 16;
              goto LABEL_67;
            case 9u:
              *(_WORD *)(a1 + 88) |= 1u;
              uint64_t v38 = *v3;
              unint64_t v39 = *(void *)(a2 + v38);
              if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v39);
                *(void *)(a2 + v38) = v39 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 8;
              goto LABEL_67;
            case 0xAu:
              *(_WORD *)(a1 + 88) |= 0x40u;
              uint64_t v36 = *v3;
              unint64_t v37 = *(void *)(a2 + v36);
              if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)(a2 + *v4))
              {
                uint64_t v20 = *(void *)(*(void *)(a2 + *v7) + v37);
                *(void *)(a2 + v36) = v37 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + *v5) = 1;
                uint64_t v20 = 0;
              }
              uint64_t v40 = 56;
LABEL_67:
              *(void *)(a1 + v40) = v20;
              goto LABEL_68;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_68:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MXModalityxOptions()
{
  if (MXModalityxOptions_once != -1) {
    dispatch_once(&MXModalityxOptions_once, &__block_literal_global_2);
  }
  v0 = (void *)MXModalityxOptions_sOptions;

  return v0;
}

void __MXModalityxOptions_block_invoke()
{
  v0 = (void *)MXModalityxOptions_sOptions;
  MXModalityxOptions_sOptions = (uint64_t)&unk_2705D9CD0;
}

uint64_t MXRequestMitigatedReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXChoiceAlignmentReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      int v16 = v10 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        unint64_t v25 = objc_alloc_init(MXRepeatedItnAlignment);
        [a1 addPreItnTokenToPostItnCharAlignments:v25];
        if (!PBReaderPlaceMark() || (MXRepeatedItnAlignmentReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v10 >> 3) == 1)
      {
        if (v16 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4) && !*(unsigned char *)(a2 + *v5))
          {
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            while (1)
            {
              uint64_t v22 = *v3;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
              *(void *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                BOOL v14 = v20++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_32;
            }
            *(unsigned char *)(a2 + *v5) = 1;
LABEL_32:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          while (1)
          {
            uint64_t v29 = *v3;
            unint64_t v30 = *(void *)(a2 + v29);
            if (v30 == -1 || v30 >= *(void *)(a2 + *v4)) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (!v14) {
                continue;
              }
            }
            goto LABEL_47;
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_47:
          PBRepeatedInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionPhraseTokensReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXRecognitionToken);
        [a1 addTokens:v17];
        if (!PBReaderPlaceMark() || (MXRecognitionTokenReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRequestCompleteReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL MXSpeechProfileBuildRequestReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 40;
        goto LABEL_29;
      case 2u:
        char v19 = objc_alloc_init(MXSpeechProfileSourceData);
        objc_storeStrong((id *)(a1 + 48), v19);
        if PBReaderPlaceMark() && (MXSpeechProfileSourceDataReadFrom(v19, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_29;
      case 4u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_29;
      case 5u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 8;
        goto LABEL_29;
      case 6u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
LABEL_29:
        char v19 = *(MXSpeechProfileSourceData **)(a1 + v18);
        *(void *)(a1 + v18) = v17;
        goto LABEL_30;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

uint64_t MXServerBoundFrameReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        unsigned int v17 = 0;
        do
        {
          uint64_t v18 = *v3;
          unint64_t v19 = *(void *)(a2 + v18);
          if (v19 == -1 || v19 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
            goto LABEL_58;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0) {
            break;
          }
        }
        while (v17++ <= 8);
        goto LABEL_58;
      case 1u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 1;
        char v24 = objc_alloc_init(MXSessionMetadata);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || (MXSessionMetadataReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 2u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 2;
        char v24 = objc_alloc_init(MXBeginRequest);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (MXBeginRequestReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 3u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 3;
        char v24 = objc_alloc_init(MXAudioFrame);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || (MXAudioFrameReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 4u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 4;
        char v24 = objc_alloc_init(MXSpeechProfile);
        objc_storeStrong((id *)(a1 + 56), v24);
        if (!PBReaderPlaceMark() || (MXSpeechProfileReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 5u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 5;
        char v24 = objc_alloc_init(MXCancelRequest);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (!PBReaderPlaceMark() || (MXCancelRequestReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 6u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 6;
        char v24 = objc_alloc_init(MXBeginDictation);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (MXBeginDictationReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 7u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 7;
        char v24 = objc_alloc_init(MXSpeechProfileBuildRequest);
        objc_storeStrong((id *)(a1 + 64), v24);
        if (!PBReaderPlaceMark() || !MXSpeechProfileBuildRequestReadFrom((uint64_t)v24, a2)) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 8u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 8;
        char v24 = objc_alloc_init(MXStreamingSpeechProfileBegin);
        objc_storeStrong((id *)(a1 + 88), v24);
        if (!PBReaderPlaceMark() || !MXStreamingSpeechProfileBeginReadFrom((uint64_t)v24, a2)) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 9u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 9;
        char v24 = objc_alloc_init(MXStreamingSpeechProfileAddData);
        objc_storeStrong((id *)(a1 + 80), v24);
        if (!PBReaderPlaceMark() || !MXStreamingSpeechProfileAddDataReadFrom((uint64_t)v24, a2)) {
          goto LABEL_62;
        }
        goto LABEL_57;
      case 0xAu:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 10;
        char v24 = objc_alloc_init(MXStreamingSpeechProfileCommit);
        objc_storeStrong((id *)(a1 + 72), v24);
        if PBReaderPlaceMark() && (MXStreamingSpeechProfileCommitReadFrom((uint64_t)v24, a2))
        {
LABEL_57:
          PBReaderRecallMark();

LABEL_58:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_62:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

uint64_t MXASRResultReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 0u:
        unsigned int v17 = 0;
        do
        {
          uint64_t v18 = *v3;
          unint64_t v19 = *(void *)(a2 + v18);
          if (v19 == -1 || v19 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
            goto LABEL_36;
          }
          unint64_t v20 = v19 + 1;
          int v21 = *(char *)(*(void *)(a2 + *v7) + v19);
          *(void *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0) {
            break;
          }
        }
        while (v17++ <= 8);
        goto LABEL_36;
      case 1u:
        uint64_t v24 = PBReaderReadString();
        unint64_t v25 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v24;

        goto LABEL_36;
      case 2u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 16) = 1;
        char v26 = objc_alloc_init(MXRecognitionCandidate);
        objc_storeStrong((id *)(a1 + 24), v26);
        if (!PBReaderPlaceMark() || (MXRecognitionCandidateReadFrom((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      case 3u:
        [(id)a1 clearOneofValuesForPayload];
        *(unsigned char *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 16) = 2;
        char v26 = objc_alloc_init(MXFinalSpeechRecognitionResponse);
        objc_storeStrong((id *)(a1 + 8), v26);
        if PBReaderPlaceMark() && (MXFinalSpeechRecognitionResponseReadFrom((uint64_t)v26, a2))
        {
LABEL_34:
          PBReaderRecallMark();

LABEL_36:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_38:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_36;
    }
  }
}

BOOL MXStreamingSpeechProfileAddDataReadFrom(uint64_t a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) >= *(void *)(a2 + (int)*MEMORY[0x263F62288])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  v7 = (int *)MEMORY[0x263F62268];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      if (v9++ >= 9)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 24;
        goto LABEL_27;
      case 2u:
        unint64_t v19 = objc_alloc_init(MXSpeechProfileSourceData);
        objc_storeStrong((id *)(a1 + 32), v19);
        if PBReaderPlaceMark() && (MXSpeechProfileSourceDataReadFrom(v19, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 8;
        goto LABEL_27;
      case 4u:
        uint64_t v17 = PBReaderReadData();
        uint64_t v18 = 16;
LABEL_27:
        unint64_t v19 = *(MXSpeechProfileSourceData **)(a1 + v18);
        *(void *)(a1 + v18) = v17;
        goto LABEL_28;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t MXSetAlternateRecognitionSausageReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXRecognitionPhraseTokensAlternatives);
        [a1 addPositionalTokPhraseAlt:v17];
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensAlternativesReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionSausageReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x263F62298];
  v4 = (int *)MEMORY[0x263F62288];
  v5 = (int *)MEMORY[0x263F62270];
  if (*(void *)(a2 + (int)*MEMORY[0x263F62298]) < *(void *)(a2 + (int)*MEMORY[0x263F62288]))
  {
    v7 = (int *)MEMORY[0x263F62268];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(MXRecognitionPhraseTokensAlternatives);
        [a1 addPositionalTokPhraseAlt:v17];
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensAlternativesReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id MXEnumsOptions()
{
  if (MXEnumsOptions_once != -1) {
    dispatch_once(&MXEnumsOptions_once, &__block_literal_global_3);
  }
  v0 = (void *)MXEnumsOptions_sOptions;

  return v0;
}

void __MXEnumsOptions_block_invoke()
{
  v0 = (void *)MXEnumsOptions_sOptions;
  MXEnumsOptions_sOptions = (uint64_t)&unk_2705D9CF8;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ModalityXUserInterfaceIdiom(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXUserInterfaceIdiom()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
}

Swift::Int specialized RawRepresentable<>.hashValue.getter(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = Hasher.init(_seed:)();
  a2(v3);
  OUTLINED_FUNCTION_7();
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXUserInterfaceIdiom(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXUserInterfaceIdiom(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = Hasher.init(_seed:)();
  a3(v4);
  OUTLINED_FUNCTION_7();
  return Hasher._finalize()();
}

void *static ModalityXUserInterfaceIdiom.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXUserInterfaceIdiom.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXUserInterfaceIdiom(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXUserInterfaceIdiom.allCases.getter;
}

ModalityXObjects::ModalityXFieldKeyboardType_optional __swiftcall ModalityXFieldKeyboardType.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXFieldKeyboardType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFieldKeyboardType(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFieldKeyboardType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
}

ModalityXObjects::ModalityXFieldKeyboardType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXFieldKeyboardType(Swift::Int *a1)
{
  return ModalityXFieldKeyboardType.init(rawValue:)(*a1);
}

void *static ModalityXFieldKeyboardType.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFieldKeyboardType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFieldKeyboardType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFieldKeyboardType.allCases.getter;
}

ModalityXObjects::ModalityXFieldKeyboardReturnKey_optional __swiftcall ModalityXFieldKeyboardReturnKey.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXFieldKeyboardReturnKey()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFieldKeyboardReturnKey(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFieldKeyboardReturnKey(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
}

ModalityXObjects::ModalityXFieldKeyboardReturnKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXFieldKeyboardReturnKey(Swift::Int *a1)
{
  return ModalityXFieldKeyboardReturnKey.init(rawValue:)(*a1);
}

void *static ModalityXFieldKeyboardReturnKey.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFieldKeyboardReturnKey.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFieldKeyboardReturnKey(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFieldKeyboardReturnKey.allCases.getter;
}

ModalityXObjects::ModalityXAudioSource_optional __swiftcall ModalityXAudioSource.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

uint64_t ModalityXAudioSource.rawValue.getter()
{
  return *v0;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXAudioSource()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioSource(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXAudioSource(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource);
}

ModalityXObjects::ModalityXAudioSource_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXAudioSource(Swift::Int *a1)
{
  return ModalityXAudioSource.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ModalityXAudioSource@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ModalityXAudioSource.rawValue.getter();
  *a1 = result;
  return result;
}

void *static ModalityXAudioSource.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXAudioSource.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXAudioSource(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXAudioSource.allCases.getter;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXCodec()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCodec(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXCodec(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec);
}

void *static ModalityXCodec.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXCodec.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXCodec(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXCodec.allCases.getter;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXMitigationType()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXMitigationType(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXMitigationType(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType);
}

void *static ModalityXMitigationType.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXMitigationType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXMitigationType(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXMitigationType.allCases.getter;
}

ModalityXObjects::ModalityXInputOrigin_optional __swiftcall ModalityXInputOrigin.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXInputOrigin()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXInputOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXInputOrigin(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
}

ModalityXObjects::ModalityXInputOrigin_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXInputOrigin(Swift::Int *a1)
{
  return ModalityXInputOrigin.init(rawValue:)(*a1);
}

void *static ModalityXInputOrigin.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXInputOrigin.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXInputOrigin(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXInputOrigin.allCases.getter;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXCancellationReason()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCancellationReason(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXCancellationReason(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
}

void *static ModalityXCancellationReason.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXCancellationReason.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXCancellationReason(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXCancellationReason.allCases.getter;
}

ModalityXObjects::ModalityXErrorSource_optional __swiftcall ModalityXErrorSource.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXErrorSource()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXErrorSource(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXErrorSource(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource);
}

ModalityXObjects::ModalityXErrorSource_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXErrorSource(Swift::Int *a1)
{
  return ModalityXErrorSource.init(rawValue:)(*a1);
}

void *static ModalityXErrorSource.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXErrorSource.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXErrorSource(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXErrorSource.allCases.getter;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXFingerprintDetectionResult()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFingerprintDetectionResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFingerprintDetectionResult(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
}

void *static ModalityXFingerprintDetectionResult.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFingerprintDetectionResult.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFingerprintDetectionResult(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFingerprintDetectionResult.allCases.getter;
}

ModalityXObjects::ModalityXWatermarkDetectionResult_optional __swiftcall ModalityXWatermarkDetectionResult.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXWatermarkDetectionResult()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXWatermarkDetectionResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXWatermarkDetectionResult(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
}

ModalityXObjects::ModalityXWatermarkDetectionResult_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXWatermarkDetectionResult(Swift::Int *a1)
{
  return ModalityXWatermarkDetectionResult.init(rawValue:)(*a1);
}

void *static ModalityXWatermarkDetectionResult.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXWatermarkDetectionResult.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXWatermarkDetectionResult(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXWatermarkDetectionResult.allCases.getter;
}

ModalityXObjects::ModalityXLanguageProfileRecreateCodes_optional __swiftcall ModalityXLanguageProfileRecreateCodes.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_2(v1);
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ModalityXLanguageProfileRecreateCodes()
{
  return specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXLanguageProfileRecreateCodes(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes();

  return MEMORY[0x270F44AF0](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXLanguageProfileRecreateCodes(uint64_t a1)
{
  return specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
}

ModalityXObjects::ModalityXLanguageProfileRecreateCodes_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXLanguageProfileRecreateCodes(Swift::Int *a1)
{
  return ModalityXLanguageProfileRecreateCodes.init(rawValue:)(*a1);
}

void *static ModalityXLanguageProfileRecreateCodes.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXLanguageProfileRecreateCodes.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXLanguageProfileRecreateCodes(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXLanguageProfileRecreateCodes.allCases.getter;
}

uint64_t one-time initialization function for _protobuf_nameMap()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXUserInterfaceIdiom._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXUserInterfaceIdiom._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC30;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "USER_INTERFACE_IDIOM_UNKNOWN";
  *(void *)(v6 + 8) = 28;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "PHONE";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "PAD";
  *((void *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "CAR";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 4;
  *(void *)int v16 = "ZEUS";
  *((void *)v16 + 1) = 4;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "WATCH";
  *((void *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 6;
  *(void *)unint64_t v20 = "HORSEMAN";
  *((void *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 7;
  *(void *)uint64_t v22 = "CAMEO";
  *((void *)v22 + 1) = 5;
  v22[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  char *v19;
  void *v20;
  char *v21;
  void *v22;
  char *v23;
  void *v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  char *v33;
  void *v34;
  char *v35;
  void *v36;
  char *v37;
  uint64_t v39;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFieldKeyboardType._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFieldKeyboardType._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_256A1BC40;
  uint64_t v4 = v39 + v3;
  unint64_t v5 = v39 + v3 + v1[14];
  *(void *)(v39 + v3) = 0;
  *(void *)unint64_t v5 = "KeyboardTypeDefault";
  *(void *)(v5 + 8) = 19;
  *(unsigned char *)(v5 + 16) = 2;
  unint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unsigned int v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 1;
  *(void *)unsigned int v9 = "ASCIICapable";
  *(void *)(v9 + 8) = 12;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 2;
  *(void *)uint64_t v11 = "Alphabet";
  *((void *)v11 + 1) = 8;
  v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  char v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 3;
  *(void *)char v13 = "NumbersAndPunctuation";
  *((void *)v13 + 1) = 21;
  v13[16] = 2;
  v8();
  BOOL v14 = (void *)(v4 + 4 * v2);
  int v15 = (char *)v14 + v1[14];
  *BOOL v14 = 4;
  *(void *)int v15 = "NumberPad";
  *((void *)v15 + 1) = 9;
  v15[16] = 2;
  v8();
  int v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *int v16 = 5;
  *(void *)uint64_t v17 = "DecimalPad";
  *((void *)v17 + 1) = 10;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  char *v18 = 6;
  *(void *)unint64_t v19 = "URL";
  *((void *)v19 + 1) = 3;
  v19[16] = 2;
  v8();
  unint64_t v20 = (void *)(v4 + 7 * v2);
  int v21 = (char *)v20 + v1[14];
  *unint64_t v20 = 7;
  *(void *)int v21 = "EmailAddress";
  *((void *)v21 + 1) = 12;
  v21[16] = 2;
  v8();
  uint64_t v22 = (void *)(v4 + 8 * v2);
  unint64_t v23 = (char *)v22 + v1[14];
  *uint64_t v22 = 8;
  *(void *)unint64_t v23 = "PhonePad";
  *((void *)v23 + 1) = 8;
  v23[16] = 2;
  v8();
  uint64_t v24 = (void *)(v4 + 9 * v2);
  unint64_t v25 = (char *)v24 + v1[14];
  *uint64_t v24 = 9;
  *(void *)unint64_t v25 = "NamePhonePad";
  *((void *)v25 + 1) = 12;
  v25[16] = 2;
  v8();
  char v26 = (void *)(v4 + 10 * v2);
  unsigned int v27 = (char *)v26 + v1[14];
  *char v26 = 10;
  *(void *)unsigned int v27 = "Twitter";
  *((void *)v27 + 1) = 7;
  v27[16] = 2;
  v8();
  uint64_t v28 = (void *)(v4 + 11 * v2);
  uint64_t v29 = (char *)v28 + v1[14];
  *uint64_t v28 = 11;
  *(void *)uint64_t v29 = "WebSearch";
  *((void *)v29 + 1) = 9;
  v29[16] = 2;
  v8();
  unint64_t v30 = (void *)(v4 + 12 * v2);
  char v31 = (char *)v30 + v1[14];
  *unint64_t v30 = 12;
  *(void *)char v31 = "Assistant";
  *((void *)v31 + 1) = 9;
  v31[16] = 2;
  v8();
  uint64_t v32 = (void *)(v4 + 13 * v2);
  unint64_t v33 = (char *)v32 + v1[14];
  *uint64_t v32 = 13;
  *(void *)unint64_t v33 = "ASCIICapableNumberPad";
  *((void *)v33 + 1) = 21;
  v33[16] = 2;
  v8();
  uint64_t v34 = (void *)(v4 + 14 * v2);
  unint64_t v35 = (char *)v34 + v1[14];
  *uint64_t v34 = 14;
  *(void *)unint64_t v35 = "NonEmoji";
  *((void *)v35 + 1) = 8;
  v35[16] = 2;
  v8();
  uint64_t v36 = (void *)(v4 + 15 * v2);
  unint64_t v37 = (char *)v36 + v1[14];
  *uint64_t v36 = 15;
  *(void *)unint64_t v37 = "Messages";
  *((void *)v37 + 1) = 8;
  v37[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  char *v28;
  uint64_t v30;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFieldKeyboardReturnKey._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFieldKeyboardReturnKey._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_256A1BC50;
  uint64_t v4 = v30 + v3 + v1[14];
  *(void *)(v30 + v3) = 0;
  *(void *)uint64_t v4 = "KeyboardReturnKeyDefault";
  *(void *)(v4 + 8) = 24;
  *(unsigned char *)(v4 + 16) = 2;
  unint64_t v5 = *MEMORY[0x263F50718];
  unint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  uint64_t v8 = v30 + v3 + v2 + v1[14];
  *(void *)(v30 + v3 + v2) = 1;
  *(void *)uint64_t v8 = "Go";
  *(void *)(v8 + 8) = 2;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unsigned int v9 = (void *)(v30 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *unsigned int v9 = 2;
  *(void *)unint64_t v10 = "Google";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v30 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "Join";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v7();
  char v13 = (void *)(v30 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "Next";
  *((void *)v14 + 1) = 4;
  v14[16] = 2;
  v7();
  int v15 = (void *)(v30 + v3 + 5 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "Route";
  *((void *)v16 + 1) = 5;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v30 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "Search";
  *((void *)v18 + 1) = 6;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v30 + v3 + 7 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)unint64_t v20 = "Send";
  *((void *)v20 + 1) = 4;
  v20[16] = 2;
  v7();
  int v21 = (void *)(v30 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 8;
  *(void *)uint64_t v22 = "Yahoo";
  *((void *)v22 + 1) = 5;
  v22[16] = 2;
  v7();
  unint64_t v23 = (void *)(v30 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *unint64_t v23 = 9;
  *(void *)uint64_t v24 = "Done";
  *((void *)v24 + 1) = 4;
  v24[16] = 2;
  v7();
  unint64_t v25 = (void *)(v30 + v3 + 10 * v2);
  char v26 = (char *)v25 + v1[14];
  *unint64_t v25 = 10;
  *(void *)char v26 = "EmergencyCall";
  *((void *)v26 + 1) = 13;
  v26[16] = 2;
  v7();
  unsigned int v27 = (void *)(v30 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  *unsigned int v27 = 11;
  *(void *)uint64_t v28 = "Continue";
  *((void *)v28 + 1) = 8;
  v28[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioSource._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioSource._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC30;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "BuiltInMic";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "LineIn";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "WiredHeadsetMic";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "BluetoothHandsFreeDeviceSource";
  *((void *)v14 + 1) = 30;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 4;
  *(void *)int v16 = "UsbAudioSource";
  *((void *)v16 + 1) = 14;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "CarAudioSource";
  *((void *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 6;
  *(void *)unint64_t v20 = "BluetoothDoAPDevice";
  *((void *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 7;
  *(void *)uint64_t v22 = "CarJarvisDevice";
  *((void *)v22 + 1) = 15;
  v22[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v23;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCodec._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCodec._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_256A1BC30;
  uint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 0;
  *(void *)unint64_t v5 = "CODEC_UNDEF";
  *(void *)(v5 + 8) = 11;
  *(unsigned char *)(v5 + 16) = 2;
  unint64_t v6 = *MEMORY[0x263F50718];
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unsigned int v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 1;
  *(void *)unsigned int v9 = "SPXWB";
  *(void *)(v9 + 8) = 5;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 2;
  *(void *)uint64_t v11 = "SPXNB";
  *((void *)v11 + 1) = 5;
  v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  char v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 3;
  *(void *)char v13 = "PCM_8K";
  *((void *)v13 + 1) = 6;
  v13[16] = 2;
  v8();
  BOOL v14 = (void *)(v4 + 4 * v2);
  int v15 = (char *)v14 + v1[14];
  *BOOL v14 = 4;
  *(void *)int v15 = "PCM_16K";
  *((void *)v15 + 1) = 7;
  v15[16] = 2;
  v8();
  int v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *int v16 = 5;
  *(void *)uint64_t v17 = "OPUS_8K";
  *((void *)v17 + 1) = 7;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  char *v18 = 6;
  *(void *)unint64_t v19 = "OPUS_16K";
  *((void *)v19 + 1) = 8;
  v19[16] = 2;
  v8();
  unint64_t v20 = (void *)(v4 + 7 * v2);
  int v21 = (char *)v20 + v1[14];
  *unint64_t v20 = 7;
  *(void *)int v21 = "ULAW_8K";
  *((void *)v21 + 1) = 7;
  v21[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXMitigationType._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXMitigationType._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC30;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "UNKNOWN_MITIGATION_TYPE";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "ACOUSTIC_ID_DETECTED";
  *(void *)(v10 + 8) = 20;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "WATERMARK_DETECTED";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "FINGERPRINT_DETECTED";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 4;
  *(void *)int v16 = "FALSE_TRIGGER_DETECTED";
  *((void *)v16 + 1) = 22;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 5;
  *(void *)uint64_t v18 = "LENIENT_PROMPT_SILENCE";
  *((void *)v18 + 1) = 22;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 6;
  *(void *)unint64_t v20 = "NON_PROMPT_SILENCE";
  *((void *)v20 + 1) = 18;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 7;
  *(void *)uint64_t v22 = "NON_VOX_SILENCE";
  *((void *)v22 + 1) = 15;
  v22[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  char *v28;
  void *v29;
  char *v30;
  void *v31;
  char *v32;
  void *v33;
  char *v34;
  void *v35;
  char *v36;
  void *v37;
  char *v38;
  void *v39;
  char *v40;
  void *v41;
  char *v42;
  uint64_t v44;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXInputOrigin._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXInputOrigin._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_256A1BC60;
  uint64_t v4 = v44 + v3 + v1[14];
  *(void *)(v44 + v3) = 0;
  *(void *)uint64_t v4 = "UndefinedInputOrigin";
  *(void *)(v4 + 8) = 20;
  *(unsigned char *)(v4 + 16) = 2;
  unint64_t v5 = *MEMORY[0x263F50718];
  unint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  uint64_t v8 = v44 + v3 + v2 + v1[14];
  *(void *)(v44 + v3 + v2) = 1;
  *(void *)uint64_t v8 = "HomeButton";
  *(void *)(v8 + 8) = 10;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unsigned int v9 = (void *)(v44 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *unsigned int v9 = 2;
  *(void *)unint64_t v10 = "RemoteButton";
  *((void *)v10 + 1) = 12;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v44 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "RemoteAppButton";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v7();
  char v13 = (void *)(v44 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "AssistantSpeechButton";
  *((void *)v14 + 1) = 21;
  v14[16] = 2;
  v7();
  int v15 = (void *)(v44 + v3 + 5 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "AssistantTextInput";
  *((void *)v16 + 1) = 18;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v44 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "PriorRequest";
  *((void *)v18 + 1) = 12;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v44 + v3 + 7 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)unint64_t v20 = "VoiceTrigger";
  *((void *)v20 + 1) = 12;
  v20[16] = 2;
  v7();
  int v21 = (void *)(v44 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 8;
  *(void *)uint64_t v22 = "ServerGenerated";
  *((void *)v22 + 1) = 15;
  v22[16] = 2;
  v7();
  unint64_t v23 = (void *)(v44 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *unint64_t v23 = 9;
  *(void *)uint64_t v24 = "MotionGesture";
  *((void *)v24 + 1) = 13;
  v24[16] = 2;
  v7();
  unint64_t v25 = (void *)(v44 + v3 + 10 * v2);
  char v26 = (char *)v25 + v1[14];
  *unint64_t v25 = 10;
  *(void *)char v26 = "RaiseToSpeak";
  *((void *)v26 + 1) = 12;
  v26[16] = 2;
  v7();
  unsigned int v27 = (void *)(v44 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  *unsigned int v27 = 11;
  *(void *)uint64_t v28 = "ClientGenerated";
  *((void *)v28 + 1) = 15;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v44 + v3 + 12 * v2);
  unint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 12;
  *(void *)unint64_t v30 = "TapToRefresh";
  *((void *)v30 + 1) = 12;
  v30[16] = 2;
  v7();
  char v31 = (void *)(v44 + v3 + 13 * v2);
  uint64_t v32 = (char *)v31 + v1[14];
  void *v31 = 13;
  *(void *)uint64_t v32 = "BackgroundRefresh";
  *((void *)v32 + 1) = 17;
  v32[16] = 2;
  v7();
  unint64_t v33 = (void *)(v44 + v3 + 14 * v2);
  uint64_t v34 = (char *)v33 + v1[14];
  *unint64_t v33 = 14;
  *(void *)uint64_t v34 = "BluetoothVoiceTrigger";
  *((void *)v34 + 1) = 21;
  v34[16] = 2;
  v7();
  unint64_t v35 = (void *)(v44 + v3 + 15 * v2);
  uint64_t v36 = (char *)v35 + v1[14];
  *unint64_t v35 = 15;
  *(void *)uint64_t v36 = "BluetoothDoubleTap";
  *((void *)v36 + 1) = 18;
  v36[16] = 2;
  v7();
  unint64_t v37 = (void *)(v44 + v3 + 16 * v2);
  uint64_t v38 = (char *)v37 + v1[14];
  *unint64_t v37 = 16;
  *(void *)uint64_t v38 = "TriggerlessFollowup";
  *((void *)v38 + 1) = 19;
  v38[16] = 2;
  v7();
  unint64_t v39 = (void *)(v44 + v3 + 17 * v2);
  uint64_t v40 = (char *)v39 + v1[14];
  void *v39 = 17;
  *(void *)uint64_t v40 = "DialogButtonTap";
  *((void *)v40 + 1) = 15;
  v40[16] = 2;
  v7();
  char v41 = (void *)(v44 + v3 + 18 * v2);
  uint64_t v42 = (char *)v41 + v1[14];
  *char v41 = 18;
  *(void *)uint64_t v42 = "MagusFollowup";
  *((void *)v42 + 1) = 13;
  v42[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  void *v11;
  char *v12;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCancellationReason._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCancellationReason._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC70;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 0;
  *(void *)unint64_t v6 = "UNKNOWN_CANCELLATION";
  *(void *)(v6 + 8) = 20;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "FALSE_VOICE_TRIGGER";
  *((void *)v10 + 1) = 19;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "USER_CANCELLED";
  *((void *)v12 + 1) = 14;
  v12[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  void *v11;
  char *v12;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXErrorSource._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXErrorSource._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC70;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 0;
  *(void *)unint64_t v6 = "UNKNOWN";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)unint64_t v10 = "QSS";
  *((void *)v10 + 1) = 3;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "MODALITY_X";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFingerprintDetectionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFingerprintDetectionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "FP_UNKNOWN_ENUM_VALUE";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "FP_NOT_CHECKED";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "FP_NOT_DETECTED";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "FP_DETECTED";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXWatermarkDetectionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXWatermarkDetectionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "WM_UNKNOWN_ENUM_VALUE";
  *(void *)(v6 + 8) = 21;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "WM_NOT_CHECKED";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "WM_NOT_DETECTED";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "WM_DETECTED";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC90;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "LANGUAGE_PROFILE_RECREATE_CODES_UNDEF";
  *(void *)(v6 + 8) = 37;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "LANGUAGE_PROFILE_OK";
  *(void *)(v10 + 8) = 19;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)unint64_t v12 = "LANGUAGE_PROFILE_REFRESH";
  *((void *)v12 + 1) = 24;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 3;
  *(void *)BOOL v14 = "LANGUAGE_PROFILE_INCOMPATIBLE";
  *((void *)v14 + 1) = 29;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 4;
  *(void *)int v16 = "LANGUAGE_PROFILE_CORRUPT";
  *((void *)v16 + 1) = 24;
  v16[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXServerBoundFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXServerBoundFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "session_metadata";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "begin_request";
  *(void *)(v10 + 8) = 13;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "audio_frame";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "speech_profile";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "cancel_request";
  *((void *)v16 + 1) = 14;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "begin_dictation";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)unint64_t v20 = "speech_profile_request";
  *((void *)v20 + 1) = 22;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 8;
  *(void *)uint64_t v22 = "streaming_speech_profile_request";
  *((void *)v22 + 1) = 32;
  v22[16] = 2;
  v9();
  unint64_t v23 = (void *)(v5 + 8 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *unint64_t v23 = 9;
  *(void *)uint64_t v24 = "streaming_speech_profile_data";
  *((void *)v24 + 1) = 29;
  v24[16] = 2;
  v9();
  unint64_t v25 = (void *)(v5 + 9 * v2);
  char v26 = (char *)v25 + v1[14];
  *unint64_t v25 = 10;
  *(void *)char v26 = "streaming_speech_profile_commit";
  *((void *)v26 + 1) = 31;
  v26[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  uint64_t v18;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXClientBoundFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXClientBoundFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_256A1CF80;
  uint64_t v4 = v18 + v3 + v1[14];
  *(void *)(v18 + v3) = 1;
  *(void *)uint64_t v4 = "request_complete";
  *(void *)(v4 + 8) = 16;
  *(unsigned char *)(v4 + 16) = 2;
  unint64_t v5 = *MEMORY[0x263F50728];
  unint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  uint64_t v8 = v18 + v3 + v2 + v1[14];
  *(void *)(v18 + v3 + v2) = 2;
  *(void *)uint64_t v8 = "processing_error";
  *(void *)(v8 + 8) = 16;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unsigned int v9 = (void *)(v18 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *unsigned int v9 = 3;
  *(void *)unint64_t v10 = "asr_result";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v18 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)unint64_t v12 = "speech_profile_rebuild_needed";
  *((void *)v12 + 1) = 29;
  v12[16] = 2;
  v7();
  char v13 = (void *)(v18 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 5;
  *(void *)BOOL v14 = "request_mitigated";
  *((void *)v14 + 1) = 17;
  v14[16] = 2;
  v7();
  int v15 = (void *)(v18 + v3 + 5 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 6;
  *(void *)int v16 = "speech_profile_response";
  *((void *)v16 + 1) = 23;
  v16[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSessionMetadata._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSessionMetadata._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "device_info";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 10;
  *(void *)unint64_t v10 = "data_sharing_opt_in_status";
  *(void *)(v10 + 8) = 26;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 11;
  *(void *)unint64_t v12 = "user_interface_idiom";
  *((void *)v12 + 1) = 20;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 12;
  *(void *)BOOL v14 = "language";
  *((void *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfile._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfile._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "more_data_follows";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "language_profile";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  uint64_t v24;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXBeginRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXBeginRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_256A1CFA0;
  uint64_t v4 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)uint64_t v4 = "request_id";
  *(void *)(v4 + 8) = 10;
  *(unsigned char *)(v4 + 16) = 2;
  unint64_t v5 = *MEMORY[0x263F50728];
  unint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  uint64_t v8 = v24 + v3 + v2 + v1[14];
  *(void *)(v24 + v3 + v2) = 2;
  *(void *)uint64_t v8 = "input_origin";
  *(void *)(v8 + 8) = 12;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unsigned int v9 = (void *)(v24 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *unsigned int v9 = 20;
  *(void *)unint64_t v10 = "audio_metadata";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v24 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 21;
  *(void *)unint64_t v12 = "enable_partial_results";
  *((void *)v12 + 1) = 22;
  v12[16] = 2;
  v7();
  char v13 = (void *)(v24 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 22;
  *(void *)BOOL v14 = "is_prompted_dictation";
  *((void *)v14 + 1) = 21;
  v14[16] = 2;
  v7();
  int v15 = (void *)(v24 + v3 + 5 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 23;
  *(void *)int v16 = "is_prompted_confirmation";
  *((void *)v16 + 1) = 24;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v24 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 24;
  *(void *)uint64_t v18 = "foreground_app_id";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v24 + v3 + 7 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 25;
  *(void *)unint64_t v20 = "is_auto_punctuation_enabled";
  *((void *)v20 + 1) = 27;
  v20[16] = 2;
  v7();
  int v21 = (void *)(v24 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 26;
  *(void *)uint64_t v22 = "inline_lme_items";
  *((void *)v22 + 1) = 16;
  v22[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  char *v19;
  void *v20;
  char *v21;
  void *v22;
  char *v23;
  void *v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  char *v33;
  void *v34;
  char *v35;
  void *v36;
  char *v37;
  void *v38;
  char *v39;
  void *v40;
  char *v41;
  void *v42;
  char *v43;
  void *v44;
  char *v45;
  void *v46;
  char *v47;
  void *v48;
  char *v49;
  uint64_t v51;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXBeginDictation._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXBeginDictation._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  char v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_256A1CFB0;
  uint64_t v4 = v51 + v3;
  unint64_t v5 = v51 + v3 + v1[14];
  *(void *)(v51 + v3) = 1;
  *(void *)unint64_t v5 = "audio_metadata";
  *(void *)(v5 + 8) = 14;
  *(unsigned char *)(v5 + 16) = 2;
  unint64_t v6 = *MEMORY[0x263F50728];
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unsigned int v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unsigned int v9 = "request_id";
  *(void *)(v9 + 8) = 10;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "field_id";
  *((void *)v11 + 1) = 8;
  v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  char v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 4;
  *(void *)char v13 = "field_label";
  *((void *)v13 + 1) = 11;
  v13[16] = 2;
  v8();
  BOOL v14 = (void *)(v4 + 4 * v2);
  int v15 = (char *)v14 + v1[14];
  *BOOL v14 = 5;
  *(void *)int v15 = "application_name";
  *((void *)v15 + 1) = 16;
  v15[16] = 2;
  v8();
  int v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *int v16 = 6;
  *(void *)uint64_t v17 = "application_version";
  *((void *)v17 + 1) = 19;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  char *v18 = 7;
  *(void *)unint64_t v19 = "keyboard_type";
  *((void *)v19 + 1) = 13;
  v19[16] = 2;
  v8();
  unint64_t v20 = (void *)(v4 + 7 * v2);
  int v21 = (char *)v20 + v1[14];
  *unint64_t v20 = 8;
  *(void *)int v21 = "keyboard_return_key";
  *((void *)v21 + 1) = 19;
  v21[16] = 2;
  v8();
  uint64_t v22 = (void *)(v4 + 8 * v2);
  unint64_t v23 = (char *)v22 + v1[14];
  *uint64_t v22 = 9;
  *(void *)unint64_t v23 = "selected_text";
  *((void *)v23 + 1) = 13;
  v23[16] = 2;
  v8();
  uint64_t v24 = (void *)(v4 + 9 * v2);
  unint64_t v25 = (char *)v24 + v1[14];
  *uint64_t v24 = 10;
  *(void *)unint64_t v25 = "prefix_text";
  *((void *)v25 + 1) = 11;
  v25[16] = 2;
  v8();
  char v26 = (void *)(v4 + 10 * v2);
  unsigned int v27 = (char *)v26 + v1[14];
  *char v26 = 11;
  *(void *)unsigned int v27 = "postfix_text";
  *((void *)v27 + 1) = 12;
  v27[16] = 2;
  v8();
  uint64_t v28 = (void *)(v4 + 11 * v2);
  uint64_t v29 = (char *)v28 + v1[14];
  *uint64_t v28 = 12;
  *(void *)uint64_t v29 = "inline_lme_items";
  *((void *)v29 + 1) = 16;
  v29[16] = 2;
  v8();
  unint64_t v30 = (void *)(v4 + 12 * v2);
  char v31 = (char *)v30 + v1[14];
  *unint64_t v30 = 13;
  *(void *)char v31 = "languages";
  *((void *)v31 + 1) = 9;
  v31[16] = 2;
  v8();
  uint64_t v32 = (void *)(v4 + 13 * v2);
  unint64_t v33 = (char *)v32 + v1[14];
  *uint64_t v32 = 14;
  *(void *)unint64_t v33 = "region";
  *((void *)v33 + 1) = 6;
  v33[16] = 2;
  v8();
  uint64_t v34 = (void *)(v4 + 14 * v2);
  unint64_t v35 = (char *)v34 + v1[14];
  *uint64_t v34 = 15;
  *(void *)unint64_t v35 = "activation_token";
  *((void *)v35 + 1) = 16;
  v35[16] = 2;
  v8();
  uint64_t v36 = (void *)(v4 + 15 * v2);
  unint64_t v37 = (char *)v36 + v1[14];
  *uint64_t v36 = 16;
  *(void *)unint64_t v37 = "censor_speech";
  *((void *)v37 + 1) = 13;
  v37[16] = 2;
  v8();
  uint64_t v38 = (void *)(v4 + 16 * v2);
  unint64_t v39 = (char *)v38 + v1[14];
  *uint64_t v38 = 17;
  *(void *)unint64_t v39 = "speaker_independent_recognition";
  *((void *)v39 + 1) = 31;
  v39[16] = 2;
  v8();
  uint64_t v40 = (void *)(v4 + 17 * v2);
  char v41 = (char *)v40 + v1[14];
  *uint64_t v40 = 18;
  *(void *)char v41 = "save_request_audio";
  *((void *)v41 + 1) = 18;
  v41[16] = 2;
  v8();
  uint64_t v42 = (void *)(v4 + 18 * v2);
  char v43 = (char *)v42 + v1[14];
  *uint64_t v42 = 19;
  *(void *)char v43 = "keyboard_identifier";
  *((void *)v43 + 1) = 19;
  v43[16] = 2;
  v8();
  uint64_t v44 = (void *)(v4 + 19 * v2);
  BOOL v45 = (char *)v44 + v1[14];
  *uint64_t v44 = 20;
  *(void *)BOOL v45 = "enable_partial_results";
  *((void *)v45 + 1) = 22;
  v45[16] = 2;
  v8();
  uint64_t v46 = (void *)(v4 + 20 * v2);
  uint64_t v47 = (char *)v46 + v1[14];
  *uint64_t v46 = 21;
  *(void *)uint64_t v47 = "input_origin";
  *((void *)v47 + 1) = 12;
  v47[16] = 2;
  v8();
  unint64_t v48 = (void *)(v4 + 21 * v2);
  char v49 = (char *)v48 + v1[14];
  *unint64_t v48 = 22;
  *(void *)char v49 = "is_auto_punctuation_enabled";
  *((void *)v49 + 1) = 27;
  v49[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCancelRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCancelRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "reason";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  void *v11;
  char *v12;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC70;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "audio";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "last_frame";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  void *v11;
  char *v12;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXASRResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXASRResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC70;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "recognition_candidate";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "final_speech_recognition_response";
  *((void *)v12 + 1) = 33;
  v12[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXProcessingError._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXProcessingError._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "code";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "error_description";
  *(void *)(v10 + 8) = 17;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "error_source";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "request_id";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRequestMitigated._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRequestMitigated._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "mitigation_type";
  *((void *)v10 + 1) = 15;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfileBuildRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfileBuildRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "source_data";
  *(void *)(v10 + 8) = 11;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "locale";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "phone_set_version";
  *((void *)v14 + 1) = 17;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "existing_language_profile";
  *((void *)v16 + 1) = 25;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "existing_pronunciation_cache";
  *((void *)v18 + 1) = 28;
  v18[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;
  void *v11;
  char *v12;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC70;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "locale";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  uint64_t v11 = (void *)((char *)v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "phone_set_version";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "source_data";
  *(void *)(v10 + 8) = 11;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "existing_language_profile";
  *((void *)v12 + 1) = 25;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "existing_pronunciation_cache";
  *((void *)v14 + 1) = 28;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfileBuildResponse._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfileBuildResponse._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC90;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "request_id";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "error";
  *(void *)(v10 + 8) = 5;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "incomplete_profile";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 10;
  *(void *)BOOL v14 = "language_profile";
  *((void *)v14 + 1) = 16;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 11;
  *(void *)int v16 = "pronunciation_cache";
  *((void *)v16 + 1) = 19;
  v16[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionToken._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionToken._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC30;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "token_text";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "start_milli_seconds";
  *(void *)(v10 + 8) = 19;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "end_milli_seconds";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "silence_start_milli_seconds";
  *((void *)v14 + 1) = 27;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "confidence";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "add_space_after";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)unint64_t v20 = "phone_seq";
  *((void *)v20 + 1) = 9;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 8;
  *(void *)uint64_t v22 = "ipa_phone_seq";
  *((void *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "tok_phrases";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "has_unsuggested_alternatives";
  *((void *)v10 + 1) = 28;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionChoice._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionChoice._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "alternative_index";
  *(void *)(v6 + 8) = 17;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "confidence";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXChoiceAlignment._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXChoiceAlignment._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "post_itn_choice_indices";
  *(void *)(v6 + 8) = 23;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "pre_itn_token_to_post_itn_char_alignments";
  *((void *)v10 + 1) = 41;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "pre_itn";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "post_itn";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "pre_itn_nbest_choices";
  *((void *)v12 + 1) = 21;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "post_itn_nbest_choices";
  *((void *)v14 + 1) = 22;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "pre_itn_token_to_post_itn_char_alignment";
  *((void *)v16 + 1) = 40;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "choice_alignments";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXLatnnMitigatorResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXLatnnMitigatorResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "processed";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "version";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "threshold";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "score";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  void *v10;
  char *v11;
  void *v12;
  char *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  void *v18;
  char *v19;
  void *v20;
  char *v21;
  void *v22;
  char *v23;
  void *v24;
  char *v25;
  void *v26;
  char *v27;
  void *v28;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  char *v33;
  uint64_t v35;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionCandidate._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionCandidate._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_256A1EE60;
  uint64_t v4 = v35 + v3;
  unint64_t v5 = v35 + v3 + v1[14];
  *(void *)(v35 + v3) = 1;
  *(void *)unint64_t v5 = "speech_id";
  *(void *)(v5 + 8) = 9;
  *(unsigned char *)(v5 + 16) = 2;
  unint64_t v6 = *MEMORY[0x263F50728];
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unsigned int v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unsigned int v9 = "session_id";
  *(void *)(v9 + 8) = 10;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "return_code";
  *((void *)v11 + 1) = 11;
  v11[16] = 2;
  v8();
  unint64_t v12 = (void *)(v4 + 3 * v2);
  char v13 = (char *)v12 + v1[14];
  *unint64_t v12 = 4;
  *(void *)char v13 = "return_str";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  BOOL v14 = (void *)(v4 + 4 * v2);
  int v15 = (char *)v14 + v1[14];
  *BOOL v14 = 5;
  *(void *)int v15 = "recognition_result";
  *((void *)v15 + 1) = 18;
  v15[16] = 2;
  v8();
  int v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *int v16 = 6;
  *(void *)uint64_t v17 = "result_id";
  *((void *)v17 + 1) = 9;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  char *v18 = 7;
  *(void *)unint64_t v19 = "snr";
  *((void *)v19 + 1) = 3;
  v19[16] = 2;
  v8();
  unint64_t v20 = (void *)(v4 + 7 * v2);
  int v21 = (char *)v20 + v1[14];
  *unint64_t v20 = 8;
  *(void *)int v21 = "fingerprint_detection";
  *((void *)v21 + 1) = 21;
  v21[16] = 2;
  v8();
  uint64_t v22 = (void *)(v4 + 8 * v2);
  unint64_t v23 = (char *)v22 + v1[14];
  *uint64_t v22 = 9;
  *(void *)unint64_t v23 = "audio_analytics";
  *((void *)v23 + 1) = 15;
  v23[16] = 2;
  v8();
  uint64_t v24 = (void *)(v4 + 9 * v2);
  unint64_t v25 = (char *)v24 + v1[14];
  *uint64_t v24 = 10;
  *(void *)unint64_t v25 = "watermark_detection";
  *((void *)v25 + 1) = 19;
  v25[16] = 2;
  v8();
  char v26 = (void *)(v4 + 10 * v2);
  unsigned int v27 = (char *)v26 + v1[14];
  *char v26 = 11;
  *(void *)unsigned int v27 = "watermark_peak_average";
  *((void *)v27 + 1) = 22;
  v27[16] = 2;
  v8();
  uint64_t v28 = (void *)(v4 + 11 * v2);
  uint64_t v29 = (char *)v28 + v1[14];
  *uint64_t v28 = 12;
  *(void *)uint64_t v29 = "language";
  *((void *)v29 + 1) = 8;
  v29[16] = 2;
  v8();
  unint64_t v30 = (void *)(v4 + 12 * v2);
  char v31 = (char *)v30 + v1[14];
  *unint64_t v30 = 13;
  *(void *)char v31 = "latnn_mitigator_result";
  *((void *)v31 + 1) = 22;
  v31[16] = 2;
  v8();
  uint64_t v32 = (void *)(v4 + 13 * v2);
  unint64_t v33 = (char *)v32 + v1[14];
  *uint64_t v32 = 14;
  *(void *)unint64_t v33 = "request_locale";
  *((void *)v33 + 1) = 14;
  v33[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXItnAlignment._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXItnAlignment._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "first_pre_itn_token_index";
  *(void *)(v6 + 8) = 25;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "last_pre_itn_token_index";
  *(void *)(v10 + 8) = 24;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "first_post_itn_char_pos";
  *((void *)v12 + 1) = 23;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "last_post_itn_char_pos";
  *((void *)v14 + 1) = 22;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAcousticFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAcousticFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "acoustic_feature_per_frame";
  *(void *)(v6 + 8) = 26;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "frame_duration";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechRecognitionFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechRecognitionFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioAnalytics._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioAnalytics._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "speech_recognition_features";
  *(void *)(v6 + 8) = 27;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "acoustic_features";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  unint64_t v8;
  void *v9;
  char *v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;
  void *v27;
  char *v28;
  void *v29;
  char *v30;
  uint64_t v32;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_256A1EE70;
  uint64_t v4 = v32 + v3 + v1[14];
  *(void *)(v32 + v3) = 1;
  *(void *)uint64_t v4 = "speech_id";
  *(void *)(v4 + 8) = 9;
  *(unsigned char *)(v4 + 16) = 2;
  unint64_t v5 = *MEMORY[0x263F50728];
  unint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  uint64_t v8 = v32 + v3 + v2 + v1[14];
  *(void *)(v32 + v3 + v2) = 2;
  *(void *)uint64_t v8 = "session_id";
  *(void *)(v8 + 8) = 10;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  unsigned int v9 = (void *)(v32 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *unsigned int v9 = 3;
  *(void *)unint64_t v10 = "return_code";
  *((void *)v10 + 1) = 11;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v32 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)unint64_t v12 = "return_str";
  *((void *)v12 + 1) = 10;
  v12[16] = 2;
  v7();
  char v13 = (void *)(v32 + v3 + 4 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 5;
  *(void *)BOOL v14 = "recognition_result";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v7();
  int v15 = (void *)(v32 + v3 + 5 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 6;
  *(void *)int v16 = "lang_profile_recreate_codes";
  *((void *)v16 + 1) = 27;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v32 + v3 + 6 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)uint64_t v18 = "audio_analytics";
  *((void *)v18 + 1) = 15;
  v18[16] = 2;
  v7();
  unint64_t v19 = (void *)(v32 + v3 + 7 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 8;
  *(void *)unint64_t v20 = "watermark_detection";
  *((void *)v20 + 1) = 19;
  v20[16] = 2;
  v7();
  int v21 = (void *)(v32 + v3 + 8 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 9;
  *(void *)uint64_t v22 = "watermark_peak_average";
  *((void *)v22 + 1) = 22;
  v22[16] = 2;
  v7();
  unint64_t v23 = (void *)(v32 + v3 + 9 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *unint64_t v23 = 10;
  *(void *)uint64_t v24 = "language";
  *((void *)v24 + 1) = 8;
  v24[16] = 2;
  v7();
  unint64_t v25 = (void *)(v32 + v3 + 10 * v2);
  char v26 = (char *)v25 + v1[14];
  *unint64_t v25 = 11;
  *(void *)char v26 = "latnn_mitigator_result";
  *((void *)v26 + 1) = 22;
  v26[16] = 2;
  v7();
  unsigned int v27 = (void *)(v32 + v3 + 11 * v2);
  uint64_t v28 = (char *)v27 + v1[14];
  *unsigned int v27 = 12;
  *(void *)uint64_t v28 = "request_locale";
  *((void *)v28 + 1) = 14;
  v28[16] = 2;
  v7();
  uint64_t v29 = (void *)(v32 + v3 + 12 * v2);
  unint64_t v30 = (char *)v29 + v1[14];
  *uint64_t v29 = 13;
  *(void *)unint64_t v30 = "has_result";
  *((void *)v30 + 1) = 10;
  v30[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXWordWithPronunciations._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXWordWithPronunciations._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "orthography";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "pronunciations";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "frequency";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "tag";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char *v10;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCategoryEntities._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCategoryEntities._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF90;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  int *v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXDeviceInfo._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXDeviceInfo._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1BC90;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "device_name";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "device_version";
  *(void *)(v10 + 8) = 14;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "system_name";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "system_version";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "system_build";
  *((void *)v16 + 1) = 12;
  v16[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioMetadata._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioMetadata._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "codec";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "audio_source";
  *(void *)(v10 + 8) = 12;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "is_far_field";
  *((void *)v12 + 1) = 12;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "voice_trigger_info";
  *((void *)v14 + 1) = 18;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "enable_server_endpoint";
  *((void *)v16 + 1) = 22;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "client_model_version";
  *((void *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  char *v20;
  void *v21;
  char *v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;

  uint64_t v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXVoiceTriggerInfo._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXVoiceTriggerInfo._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_256A1CF70;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "trigger_score";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50728];
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unsigned int v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "trigger_threshold";
  *(void *)(v10 + 8) = 17;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)unint64_t v12 = "sat_score";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  char v13 = (void *)(v5 + 3 * v2);
  BOOL v14 = (char *)v13 + v1[14];
  *char v13 = 4;
  *(void *)BOOL v14 = "sat_threshold";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  int v15 = (void *)(v5 + 4 * v2);
  int v16 = (char *)v15 + v1[14];
  *int v15 = 5;
  *(void *)int v16 = "recognizer_score";
  *((void *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)uint64_t v18 = "recognizer_threshold_offset";
  *((void *)v18 + 1) = 27;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)unint64_t v20 = "config_version";
  *((void *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  int v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *int v21 = 8;
  *(void *)uint64_t v22 = "hardware_sample_rate";
  *((void *)v22 + 1) = 20;
  v22[16] = 2;
  v9();
  unint64_t v23 = (void *)(v5 + 8 * v2);
  uint64_t v24 = (char *)v23 + v1[14];
  *unint64_t v23 = 9;
  *(void *)uint64_t v24 = "extra_samples_at_start";
  *((void *)v24 + 1) = 22;
  v24[16] = 2;
  v9();
  unint64_t v25 = (void *)(v5 + 9 * v2);
  char v26 = (char *)v25 + v1[14];
  *unint64_t v25 = 10;
  *(void *)char v26 = "trigger_end";
  *((void *)v26 + 1) = 11;
  v26[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXUserInterfaceIdiom._protobuf_nameMap, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t static ModalityXFieldKeyboardType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFieldKeyboardType._protobuf_nameMap, a1);
}

uint64_t static ModalityXFieldKeyboardReturnKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFieldKeyboardReturnKey._protobuf_nameMap, a1);
}

uint64_t static ModalityXAudioSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioSource._protobuf_nameMap, a1);
}

uint64_t static ModalityXCodec._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCodec._protobuf_nameMap, a1);
}

uint64_t static ModalityXMitigationType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXMitigationType._protobuf_nameMap, a1);
}

uint64_t static ModalityXInputOrigin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXInputOrigin._protobuf_nameMap, a1);
}

uint64_t static ModalityXCancellationReason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCancellationReason._protobuf_nameMap, a1);
}

uint64_t static ModalityXErrorSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXErrorSource._protobuf_nameMap, a1);
}

uint64_t static ModalityXFingerprintDetectionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFingerprintDetectionResult._protobuf_nameMap, a1);
}

uint64_t static ModalityXWatermarkDetectionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXWatermarkDetectionResult._protobuf_nameMap, a1);
}

uint64_t static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap, a1);
}

uint64_t static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for _NameMap();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

unint64_t lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXUserInterfaceIdiom()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXUserInterfaceIdiom] and conformance [A], &demangling cache variable for type metadata for [ModalityXUserInterfaceIdiom]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFieldKeyboardType()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFieldKeyboardType] and conformance [A], &demangling cache variable for type metadata for [ModalityXFieldKeyboardType]);
}

unint64_t lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFieldKeyboardReturnKey()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFieldKeyboardReturnKey] and conformance [A], &demangling cache variable for type metadata for [ModalityXFieldKeyboardReturnKey]);
}

unint64_t lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXAudioSource()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXAudioSource] and conformance [A], &demangling cache variable for type metadata for [ModalityXAudioSource]);
}

unint64_t lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXCodec()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXCodec] and conformance [A], &demangling cache variable for type metadata for [ModalityXCodec]);
}

unint64_t lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXMitigationType()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXMitigationType] and conformance [A], &demangling cache variable for type metadata for [ModalityXMitigationType]);
}

unint64_t lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXInputOrigin()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXInputOrigin] and conformance [A], &demangling cache variable for type metadata for [ModalityXInputOrigin]);
}

unint64_t lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXCancellationReason()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXCancellationReason] and conformance [A], &demangling cache variable for type metadata for [ModalityXCancellationReason]);
}

unint64_t lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXErrorSource()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXErrorSource] and conformance [A], &demangling cache variable for type metadata for [ModalityXErrorSource]);
}

unint64_t lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFingerprintDetectionResult()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFingerprintDetectionResult] and conformance [A], &demangling cache variable for type metadata for [ModalityXFingerprintDetectionResult]);
}

unint64_t lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXWatermarkDetectionResult()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXWatermarkDetectionResult] and conformance [A], &demangling cache variable for type metadata for [ModalityXWatermarkDetectionResult]);
}

unint64_t lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes()
{
  unint64_t result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXLanguageProfileRecreateCodes()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXLanguageProfileRecreateCodes] and conformance [A], &demangling cache variable for type metadata for [ModalityXLanguageProfileRecreateCodes]);
}

uint64_t lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

void type metadata accessor for ModalityXUserInterfaceIdiom()
{
}

uint64_t getEnumTagSinglePayload for ModalityXFieldKeyboardType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 15) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v5 = v6 - 16;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModalityXFieldKeyboardType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AAA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXFieldKeyboardType()
{
}

uint64_t getEnumTagSinglePayload for ModalityXFieldKeyboardReturnKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v5 = v6 - 12;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModalityXFieldKeyboardReturnKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AABA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXFieldKeyboardReturnKey()
{
}

uint64_t getEnumTag for ModalityXAudioSource(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *destructiveInjectEnumTag for ModalityXAudioSource(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

void type metadata accessor for ModalityXAudioSource()
{
}

void type metadata accessor for ModalityXCodec()
{
}

uint64_t getEnumTagSinglePayload for ModalityXUserInterfaceIdiom(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_8(-1);
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 8);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 8);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 8);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_8(v8);
}

unsigned char *storeEnumTagSinglePayload for ModalityXUserInterfaceIdiom(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_6((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_3((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AAD40);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_4((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_5(result, a2 + 7);
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXMitigationType()
{
}

uint64_t getEnumTagSinglePayload for ModalityXInputOrigin(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 18) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v5 = v6 - 19;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModalityXInputOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AAEC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXInputOrigin()
{
}

void type metadata accessor for ModalityXCancellationReason()
{
}

uint64_t getEnumTagSinglePayload for ModalityXCancellationReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_8(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_8(v8);
}

unsigned char *storeEnumTagSinglePayload for ModalityXCancellationReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_6((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_3((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AB050);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_4((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_5(result, a2 + 2);
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXErrorSource()
{
}

void type metadata accessor for ModalityXFingerprintDetectionResult()
{
}

uint64_t getEnumTagSinglePayload for ModalityXFingerprintDetectionResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_8(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_8((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_8(v8);
}

unsigned char *storeEnumTagSinglePayload for ModalityXFingerprintDetectionResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_6((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_3((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AB1D8);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_4((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_5(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXWatermarkDetectionResult()
{
}

uint64_t getEnumTagSinglePayload for ModalityXLanguageProfileRecreateCodes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ModalityXLanguageProfileRecreateCodes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2569AB360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ModalityXLanguageProfileRecreateCodes()
{
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void OUTLINED_FUNCTION_1(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void OUTLINED_FUNCTION_2(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_3@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *OUTLINED_FUNCTION_5@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_6@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_7()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_8@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

BOOL specialized == infix<A>(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ModalityXServerBoundFrame.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
}

uint64_t ModalityXServerBoundFrame.payload.setter(uint64_t a1)
{
  return outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
}

uint64_t (*ModalityXServerBoundFrame.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXServerBoundFrame.sessionMetadata.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_0(v5, v10);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v6);
  if (v7)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_6:
    UnknownStorage.init()();
    type metadata accessor for ModalityXSessionMetadata(0);
    uint64_t v9 = OUTLINED_FUNCTION_330();
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v9);
    *(unsigned char *)(v0 + v1[6]) = 2;
    *(unsigned char *)(v0 + v1[7]) = 8;
    OUTLINED_FUNCTION_86(v1[8]);
    return;
  }
  if (OUTLINED_FUNCTION_77())
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_76();
}

uint64_t ModalityXServerBoundFrame.sessionMetadata.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_143(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSessionMetadata, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXSessionMetadata.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  type metadata accessor for ModalityXSessionMetadata(0);
  uint64_t v4 = OUTLINED_FUNCTION_330();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v4);
  *(unsigned char *)(a1 + v1[6]) = 2;
  *(unsigned char *)(a1 + v1[7]) = 8;
  OUTLINED_FUNCTION_86(v1[8]);
}

uint64_t type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t type metadata accessor for ModalityXSessionMetadata(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSessionMetadata);
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

void ModalityXServerBoundFrame.sessionMetadata.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = (int *)type metadata accessor for ModalityXSessionMetadata(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!OUTLINED_FUNCTION_74())
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_8;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v14 = v8 + v6[5];
  uint64_t v15 = type metadata accessor for ModalityXDeviceInfo(0);
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  OUTLINED_FUNCTION_170(v6[6]);
  OUTLINED_FUNCTION_321(v6[7]);
  OUTLINED_FUNCTION_140(v6[8]);
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t outlined destroy of ModalityXServerBoundFrame.OneOf_Payload()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_307();
  v3();
  return v0;
}

uint64_t ModalityXServerBoundFrame.beginRequest.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v10);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 1) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v0 + v9) = static ModalityXBeginRequest._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(char *))
{
  OUTLINED_FUNCTION_306();
  uint64_t v9 = v8(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - v10;
  OUTLINED_FUNCTION_255();
  return a7(v11);
}

uint64_t ModalityXServerBoundFrame.beginRequest.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_137(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXBeginRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t ModalityXBeginRequest.init()()
{
  return ModalityXBeginRequest.init()();
}

{
  void *v0;
  void *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_124();
  uint64_t v4 = v3;
  UnknownStorage.init()();
  uint64_t v5 = OUTLINED_FUNCTION_174();
  char v6 = *(int *)(v2(v5) + 20);
  if (*v1 != -1)
  {
    OUTLINED_FUNCTION_146();
    swift_once();
  }
  *(void *)(v4 + v6) = *v0;

  return swift_retain();
}

uint64_t type metadata accessor for ModalityXBeginRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginRequest);
}

void ModalityXServerBoundFrame.beginRequest.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXBeginRequest(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v13 = OUTLINED_FUNCTION_74();
    if (v13 == 1)
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_10;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v14 = *(int *)(v6 + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v8 + v14) = static ModalityXBeginRequest._StorageClass.defaultInstance;
  swift_retain();
LABEL_10:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXServerBoundFrame.audioFrame.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0(v3, v7);
  uint64_t v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v4);
  if (v5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v6 = OUTLINED_FUNCTION_77();
    if (v6 == 2)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  OUTLINED_FUNCTION_302(MEMORY[0x263F8EE78]);
  OUTLINED_FUNCTION_223();
}

uint64_t ModalityXServerBoundFrame.audioFrame.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_216(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXAudioFrame, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXAudioFrame.init()()
{
}

void ModalityXServerBoundFrame.audioFrame.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  type metadata accessor for ModalityXAudioFrame(v5);
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = *(void **)(v6 + 64);
  size_t v8 = malloc((size_t)v7);
  uint64_t v9 = OUTLINED_FUNCTION_69((uint64_t)v8);
  OUTLINED_FUNCTION_11((uint64_t)v9);
  uint64_t v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v10);
  if (v11)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    void *v7 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_170(v13);
    goto LABEL_8;
  }
  int v12 = OUTLINED_FUNCTION_74();
  if (v12 != 2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

double ModalityXServerBoundFrame.speechProfile.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v11);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 3)
    {
      OUTLINED_FUNCTION_76();
      return result;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_327(v9);
  double result = 0.0;
  *(_OWORD *)(v0 + v10) = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXServerBoundFrame.speechProfile.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_213(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfile, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

double ModalityXSpeechProfile.init()@<D0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_327(v2);
  double result = 0.0;
  *(_OWORD *)(a1 + v4) = xmmword_256A1CF60;
  return result;
}

void ModalityXServerBoundFrame.speechProfile.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXSpeechProfile(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    OUTLINED_FUNCTION_170(*(int *)(v6 + 20));
    *(_OWORD *)(v8 + *(int *)(v6 + 24)) = xmmword_256A1CF60;
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 3)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXServerBoundFrame.cancelRequest.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v11);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 4) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = type metadata accessor for ModalityXCancelRequest(0);
  uint64_t result = OUTLINED_FUNCTION_328(v9);
  *(unsigned char *)(v0 + v10) = 3;
  return result;
}

uint64_t ModalityXServerBoundFrame.cancelRequest.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_212(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXCancelRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXCancelRequest.init()()
{
}

{
  char v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_221();
  uint64_t v3 = v2;
  UnknownStorage.init()();
  uint64_t v4 = v1(0);
  OUTLINED_FUNCTION_168(*(int *)(v4 + 20));
  *(unsigned char *)(v3 + *(int *)(v5 + 24)) = v0;
}

void ModalityXServerBoundFrame.cancelRequest.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  type metadata accessor for ModalityXCancelRequest(v5);
  OUTLINED_FUNCTION_2_0();
  int v7 = malloc(*(void *)(v6 + 64));
  size_t v8 = OUTLINED_FUNCTION_69((uint64_t)v7);
  OUTLINED_FUNCTION_11((uint64_t)v8);
  uint64_t v9 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v9);
  if (v10)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    OUTLINED_FUNCTION_193();
    OUTLINED_FUNCTION_297(v12);
    goto LABEL_8;
  }
  int v11 = OUTLINED_FUNCTION_74();
  if (v11 != 4)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXServerBoundFrame.beginDictation.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v10);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 5) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = *(int *)(type metadata accessor for ModalityXBeginDictation(0) + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v0 + v9) = static ModalityXBeginDictation._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t ModalityXServerBoundFrame.beginDictation.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_211(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXBeginDictation, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t ModalityXBeginDictation.init()()
{
  return ModalityXBeginRequest.init()();
}

void ModalityXServerBoundFrame.beginDictation.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXBeginDictation(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v13 = OUTLINED_FUNCTION_74();
    if (v13 == 5)
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_10;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v14 = *(int *)(v6 + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v8 + v14) = static ModalityXBeginDictation._StorageClass.defaultInstance;
  swift_retain();
LABEL_10:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

double ModalityXServerBoundFrame.speechProfileRequest.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v12);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 6)
    {
      OUTLINED_FUNCTION_76();
      return result;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  uint64_t v10 = OUTLINED_FUNCTION_63(v9);
  OUTLINED_FUNCTION_157(v10);
  double result = 0.0;
  *(_OWORD *)(v0 + v11) = xmmword_256A1CF60;
  *(_OWORD *)(v0 + *(int *)(v1 + 40)) = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXServerBoundFrame.speechProfileRequest.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

double ModalityXSpeechProfileBuildRequest.init()@<D0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v3 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  uint64_t v4 = OUTLINED_FUNCTION_63(v3);
  OUTLINED_FUNCTION_157(v4);
  double result = 0.0;
  *(_OWORD *)(a1 + v6) = xmmword_256A1CF60;
  *(_OWORD *)(a1 + *(int *)(v1 + 40)) = xmmword_256A1CF60;
  return result;
}

void ModalityXServerBoundFrame.speechProfileRequest.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    uint64_t v14 = OUTLINED_FUNCTION_219();
    OUTLINED_FUNCTION_171(v14);
    OUTLINED_FUNCTION_140(v15);
    OUTLINED_FUNCTION_140(v6[8]);
    *(_OWORD *)(v8 + v6[9]) = xmmword_256A1CF60;
    *(_OWORD *)(v8 + v6[10]) = xmmword_256A1CF60;
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXServerBoundFrame.streamingSpeechProfileRequest.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v11);
  uint64_t v5 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 7)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  size_t v8 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  uint64_t v9 = (void *)(v0 + v8[5]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(v0 + v8[6]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  OUTLINED_FUNCTION_86(v8[7]);
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileRequest.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXStreamingSpeechProfileBegin.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  uint64_t v3 = (void *)(a1 + v2[5]);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(a1 + v2[6]);
  void *v4 = 0;
  v4[1] = 0;
  OUTLINED_FUNCTION_86(v2[7]);
}

void ModalityXServerBoundFrame.streamingSpeechProfileRequest.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    uint64_t v14 = (void *)(v8 + *(int *)(v6 + 20));
    *uint64_t v14 = 0;
    v14[1] = 0;
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_140(v15);
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 7)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

double ModalityXServerBoundFrame.streamingSpeechProfileData.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_0(v5, v12);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v6);
  if (v7)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v8 = OUTLINED_FUNCTION_77();
    if (v8 == 8)
    {
      OUTLINED_FUNCTION_76();
      return result;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v10 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  uint64_t v11 = OUTLINED_FUNCTION_63(v10);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v11);
  double result = 0.0;
  *(_OWORD *)(v0 + *(int *)(v1 + 28)) = xmmword_256A1CF60;
  *(_OWORD *)(v0 + *(int *)(v1 + 32)) = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileData.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

double ModalityXStreamingSpeechProfileAddData.init()@<D0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v4 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  uint64_t v5 = OUTLINED_FUNCTION_63(v4);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v5);
  double result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v1 + 28)) = xmmword_256A1CF60;
  *(_OWORD *)(a1 + *(int *)(v1 + 32)) = xmmword_256A1CF60;
  return result;
}

void ModalityXServerBoundFrame.streamingSpeechProfileData.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    uint64_t v14 = OUTLINED_FUNCTION_219();
    OUTLINED_FUNCTION_171(v14);
    *(_OWORD *)(v8 + v15) = xmmword_256A1CF60;
    *(_OWORD *)(v8 + *(int *)(v6 + 32)) = xmmword_256A1CF60;
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXServerBoundFrame.streamingSpeechProfileCommit.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0(v3, v8);
  uint64_t v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v4);
  if (v5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v6 = OUTLINED_FUNCTION_77();
    if (v6 == 9)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v7 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  OUTLINED_FUNCTION_86(*(int *)(v7 + 20));
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileCommit.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXStreamingSpeechProfileCommit.init()()
{
}

void ModalityXServerBoundFrame.streamingSpeechProfileCommit.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(v5);
  OUTLINED_FUNCTION_2_0();
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = OUTLINED_FUNCTION_69((uint64_t)v8);
  OUTLINED_FUNCTION_11((uint64_t)v9);
  uint64_t v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v10);
  if (v11)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    OUTLINED_FUNCTION_140(*(int *)(v6 + 20));
    goto LABEL_8;
  }
  int v12 = OUTLINED_FUNCTION_74();
  if (v12 != 9)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXServerBoundFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_176();
  v1(v0);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_67();

  return v3(v2);
}

uint64_t ModalityXServerBoundFrame.unknownFields.setter()
{
  return ModalityXServerBoundFrame.unknownFields.setter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_167();
  v1(v0);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_52();

  return v3(v2);
}

uint64_t (*ModalityXServerBoundFrame.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXServerBoundFrame(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXServerBoundFrame.OneOf_Payload.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  v59[16] = v1;
  v59[17] = v2;
  uint64_t v3 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  v59[10] = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OUTLINED_FUNCTION_96();
  uint64_t v7 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v6);
  uint64_t v8 = OUTLINED_FUNCTION_7_0(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_36();
  v59[9] = v9;
  uint64_t v10 = OUTLINED_FUNCTION_96();
  uint64_t v11 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(v10);
  uint64_t v12 = OUTLINED_FUNCTION_7_0(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_36();
  v59[8] = v13;
  uint64_t v14 = OUTLINED_FUNCTION_96();
  uint64_t v15 = type metadata accessor for ModalityXSpeechProfileBuildRequest(v14);
  uint64_t v16 = OUTLINED_FUNCTION_7_0(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_36();
  v59[7] = v17;
  uint64_t v18 = OUTLINED_FUNCTION_96();
  uint64_t v19 = type metadata accessor for ModalityXBeginDictation(v18);
  uint64_t v20 = OUTLINED_FUNCTION_7_0(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_36();
  v59[6] = v21;
  uint64_t v22 = OUTLINED_FUNCTION_96();
  uint64_t v23 = type metadata accessor for ModalityXCancelRequest(v22);
  uint64_t v24 = OUTLINED_FUNCTION_7_0(v23);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_36();
  v59[5] = v25;
  uint64_t v26 = OUTLINED_FUNCTION_96();
  uint64_t v27 = type metadata accessor for ModalityXSpeechProfile(v26);
  uint64_t v28 = OUTLINED_FUNCTION_7_0(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_36();
  v59[4] = v29;
  uint64_t v30 = OUTLINED_FUNCTION_96();
  uint64_t v31 = type metadata accessor for ModalityXAudioFrame(v30);
  uint64_t v32 = OUTLINED_FUNCTION_7_0(v31);
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_36();
  v59[3] = v33;
  uint64_t v34 = OUTLINED_FUNCTION_96();
  uint64_t v35 = type metadata accessor for ModalityXBeginRequest(v34);
  uint64_t v36 = OUTLINED_FUNCTION_7_0(v35);
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_36();
  v59[2] = v37;
  uint64_t v38 = OUTLINED_FUNCTION_96();
  uint64_t v39 = type metadata accessor for ModalityXSessionMetadata(v38);
  uint64_t v40 = OUTLINED_FUNCTION_7_0(v39);
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_36();
  v59[1] = v41;
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_203();
  v59[15] = v43;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_341();
  v59[14] = v45;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_341();
  v59[13] = v47;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_341();
  v59[12] = v49;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_341();
  v59[11] = v51;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_113();
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_340();
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_58();
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_342();
  MEMORY[0x270FA5388](v56);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload, ModalityXServerBoundFrame.OneOf_Payload));
  uint64_t v58 = OUTLINED_FUNCTION_7_0(v57);
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_273();
  outlined init with copy of ModalityXSessionMetadata();
  outlined init with copy of ModalityXSessionMetadata();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 1) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      static ModalityXBeginRequest.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_23;
    case 2u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 2) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      static ModalityXAudioFrame.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_251();
      goto LABEL_23;
    case 3u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 3) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_317();
      static ModalityXSpeechProfile.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_23;
    case 4u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 4) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_338();
      static ModalityXCancelRequest.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_23;
    case 5u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 5) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXBeginDictation.== infix(_:_:)();
      goto LABEL_22;
    case 6u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 6) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXSpeechProfileBuildRequest.== infix(_:_:)();
      goto LABEL_22;
    case 7u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 7) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXStreamingSpeechProfileBegin.== infix(_:_:)();
      goto LABEL_22;
    case 8u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 8) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXStreamingSpeechProfileAddData.== infix(_:_:)();
      goto LABEL_22;
    case 9u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138() != 9) {
        goto LABEL_24;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
LABEL_22:
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_23;
    default:
      OUTLINED_FUNCTION_208();
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_138())
      {
LABEL_24:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload, ModalityXServerBoundFrame.OneOf_Payload));
      }
      else
      {
        outlined init with take of ModalityXSessionMetadata();
        static ModalityXSessionMetadata.== infix(_:_:)();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_23:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      }
      OUTLINED_FUNCTION_136();
      OUTLINED_FUNCTION_16();
      return;
  }
}

void static ModalityXSessionMetadata.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v49 = v9;
  uint64_t v50 = v8;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_203();
  v48[2] = v10;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v11);
  v48[1] = (uint64_t)v48 - v12;
  uint64_t v13 = OUTLINED_FUNCTION_96();
  uint64_t v14 = type metadata accessor for ModalityXDeviceInfo(v13);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_93(v16, v48[0]);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXDeviceInfo?, ModalityXDeviceInfo?));
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_59();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v20 = OUTLINED_FUNCTION_7_0(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_233();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_58();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = OUTLINED_FUNCTION_293();
  uint64_t v24 = (int *)type metadata accessor for ModalityXSessionMetadata(v23);
  uint64_t v25 = v24[5];
  uint64_t v51 = v7;
  OUTLINED_FUNCTION_56(v7 + v25);
  uint64_t v26 = v24[5];
  uint64_t v52 = v5;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v5 + v26, v0, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v27 = v2 + *(int *)(v18 + 56);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v2, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_334(v0);
  OUTLINED_FUNCTION_9(v2, 1, v14);
  if (v28)
  {
    OUTLINED_FUNCTION_218();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
    OUTLINED_FUNCTION_9(v27, 1, v14);
    if (v28)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
      goto LABEL_12;
    }
LABEL_9:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for (ModalityXDeviceInfo?, ModalityXDeviceInfo?));
    goto LABEL_10;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v3, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_9(v27, 1, v14);
  if (v28)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_9;
  }
  outlined init with take of ModalityXSessionMetadata();
  char v29 = static ModalityXDeviceInfo.== infix(_:_:)();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  if ((v29 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v30 = v24[6];
  uint64_t v31 = v51;
  uint64_t v32 = v52;
  int v33 = *(unsigned __int8 *)(v51 + v30);
  int v34 = *(unsigned __int8 *)(v52 + v30);
  if (v33 == 2)
  {
    if (v34 != 2) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v34 == 2) {
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_122();
    if ((v35 & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v36 = v24[7];
  int v37 = *(unsigned __int8 *)(v31 + v36);
  int v38 = *(unsigned __int8 *)(v32 + v36);
  if (v37 == 8)
  {
    if (v38 != 8) {
      goto LABEL_10;
    }
  }
  else if (v38 == 8 || v37 != v38)
  {
    goto LABEL_10;
  }
  uint64_t v40 = v24[8];
  uint64_t v41 = *(void *)(v32 + v40 + 8);
  if (*(void *)(v31 + v40 + 8))
  {
    if (v41)
    {
      OUTLINED_FUNCTION_21(v31 + v40);
      BOOL v44 = v28 && v42 == v43;
      if (v44 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_34;
      }
    }
  }
  else if (!v41)
  {
LABEL_34:
    uint64_t v45 = v49;
    uint64_t v46 = *(void (**)(void))(v49 + 16);
    OUTLINED_FUNCTION_311();
    OUTLINED_FUNCTION_99();
    v46();
    OUTLINED_FUNCTION_99();
    v46();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v47 = *(void (**)(void))(v45 + 8);
    OUTLINED_FUNCTION_317();
    OUTLINED_FUNCTION_284();
    v47();
    OUTLINED_FUNCTION_311();
    OUTLINED_FUNCTION_284();
    v47();
  }
LABEL_10:
  OUTLINED_FUNCTION_16();
}

void static ModalityXBeginRequest.== infix(_:_:)()
{
  static ModalityXBeginRequest.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(void);
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_53();
  uint64_t v11 = v5(v10);
  if (*(void *)(v1 + *(int *)(v11 + 20)) == *(void *)(v0 + *(int *)(v11 + 20))
    || (swift_retain(),
        swift_retain(),
        uint64_t v12 = OUTLINED_FUNCTION_318(),
        uint64_t v13 = v3(v12),
        swift_release(),
        swift_release(),
        (v13 & 1) != 0))
  {
    uint64_t v14 = *(void (**)(void))(v7 + 16);
    OUTLINED_FUNCTION_46();
    v14();
    OUTLINED_FUNCTION_46();
    v14();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v15 = *(void (**)(uint64_t))(v7 + 8);
    uint64_t v16 = OUTLINED_FUNCTION_67();
    v15(v16);
    uint64_t v17 = OUTLINED_FUNCTION_337();
    v15(v17);
  }
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

void static ModalityXAudioFrame.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_53();
  uint64_t v10 = type metadata accessor for ModalityXAudioFrame(v9);
  OUTLINED_FUNCTION_28();
  if (!v13)
  {
    if (v11) {
      goto LABEL_18;
    }
LABEL_10:
    if ((specialized static Array<A>.== infix(_:_:)(*v3, *v2) & 1) == 0) {
      goto LABEL_18;
    }
    OUTLINED_FUNCTION_238();
    if (v16)
    {
      if (v17 != 2) {
        goto LABEL_18;
      }
    }
    else
    {
      if (v17 == 2) {
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_122();
      if ((v18 & 1) == 0) {
        goto LABEL_18;
      }
    }
    uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    v19(v1, (char *)v3 + *(int *)(v10 + 20), v4);
    v19(v0, (char *)v2 + *(int *)(v10 + 20), v4);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v20 = OUTLINED_FUNCTION_57();
    ((void (*)(uint64_t))v2)(v20);
    OUTLINED_FUNCTION_65();
    ((void (*)(void))v2)();
    goto LABEL_18;
  }
  if (v11)
  {
    OUTLINED_FUNCTION_21(v12);
    BOOL v16 = v16 && v14 == v15;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_18:
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_37();
}

void static ModalityXSpeechProfile.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXSpeechProfile(v6);
  OUTLINED_FUNCTION_238();
  if (v9)
  {
    if (v8 != 2) {
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v11 = *(int *)(v7 + 24);
    uint64_t v12 = *(void *)(v1 + v11);
    unint64_t v13 = *(void *)(v1 + v11 + 8);
    uint64_t v14 = (uint64_t *)(v0 + v11);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    OUTLINED_FUNCTION_236();
    if (!v9 & v17)
    {
      if (v16 >> 60 != 15)
      {
LABEL_12:
        uint64_t v18 = OUTLINED_FUNCTION_253();
        outlined consume of Data?(v18, v19);
        outlined consume of Data?(v15, v16);
        goto LABEL_15;
      }
    }
    else
    {
      if (v16 >> 60 == 15) {
        goto LABEL_12;
      }
      uint64_t v20 = OUTLINED_FUNCTION_253();
      char v25 = MEMORY[0x25A2AA200](v20);
      outlined consume of Data?(v15, v16);
      outlined consume of Data?(v12, v13);
      if ((v25 & 1) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v21 = *(void (**)(void))(v3 + 16);
    OUTLINED_FUNCTION_46();
    v21();
    OUTLINED_FUNCTION_46();
    v21();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v22 = *(void (**)(uint64_t))(v3 + 8);
    uint64_t v23 = OUTLINED_FUNCTION_67();
    v22(v23);
    uint64_t v24 = OUTLINED_FUNCTION_337();
    v22(v24);
    goto LABEL_15;
  }
  if (v8 != 2)
  {
    OUTLINED_FUNCTION_122();
    if (v10) {
      goto LABEL_7;
    }
  }
LABEL_15:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

void static ModalityXCancelRequest.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_53();
  uint64_t v7 = type metadata accessor for ModalityXCancelRequest(v6);
  OUTLINED_FUNCTION_28();
  if (!v10)
  {
    if (v8) {
      goto LABEL_17;
    }
LABEL_10:
    uint64_t v14 = *(int *)(v7 + 24);
    int v15 = *(unsigned __int8 *)(v1 + v14);
    int v16 = *((unsigned __int8 *)v0 + v14);
    if (v15 == 3)
    {
      if (v16 != 3) {
        goto LABEL_17;
      }
    }
    else if (v16 == 3 || v15 != v16)
    {
      goto LABEL_17;
    }
    char v17 = *(void (**)(void))(v3 + 16);
    OUTLINED_FUNCTION_46();
    v17();
    OUTLINED_FUNCTION_46();
    v17();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v18 = OUTLINED_FUNCTION_57();
    ((void (*)(uint64_t))v0)(v18);
    OUTLINED_FUNCTION_65();
    v0();
    goto LABEL_17;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_21(v9);
    BOOL v13 = v13 && v11 == v12;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_37();
}

void static ModalityXBeginDictation.== infix(_:_:)()
{
  static ModalityXBeginRequest.== infix(_:_:)();
}

void static ModalityXSpeechProfileBuildRequest.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_203();
  v63[2] = v10;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v11);
  v63[1] = (char *)v63 - v12;
  uint64_t v13 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_273();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_112();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  uint64_t v18 = OUTLINED_FUNCTION_7_0(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_274();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_113();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = OUTLINED_FUNCTION_180();
  type metadata accessor for ModalityXSpeechProfileBuildRequest(v21);
  uint64_t v65 = v6;
  uint64_t v66 = v4;
  OUTLINED_FUNCTION_148();
  if (!v25)
  {
    v63[0] = v7;
    if (v22) {
      goto LABEL_28;
    }
LABEL_10:
    uint64_t v31 = (uint64_t (*)(uint64_t))&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
    uint64_t v32 = v24;
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v65 + *(int *)(v24 + 24), v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    OUTLINED_FUNCTION_334(v66 + *(int *)(v32 + 24));
    uint64_t v33 = v2 + *(int *)(v15 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    OUTLINED_FUNCTION_56(v1);
    OUTLINED_FUNCTION_9(v2, 1, v13);
    if (v28)
    {
      OUTLINED_FUNCTION_339();
      OUTLINED_FUNCTION_218();
      OUTLINED_FUNCTION_9(v33, 1, v13);
      if (v28)
      {
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v40 = OUTLINED_FUNCTION_318();
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v40, v41, v42);
      OUTLINED_FUNCTION_9(v33, 1, v13);
      if (!v43)
      {
        outlined init with take of ModalityXSessionMetadata();
        specialized static Array<A>.== infix(_:_:)();
        if (v46)
        {
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
          char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v31 = type metadata accessor for ModalityXSpeechProfileSourceData;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          if ((v47 & 1) == 0) {
            goto LABEL_28;
          }
LABEL_15:
          OUTLINED_FUNCTION_277();
          if (v36)
          {
            if (!v34) {
              goto LABEL_28;
            }
            OUTLINED_FUNCTION_21(v35);
            if (!v28 || v37 != v38)
            {
              LOBYTE(v31) = 0;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_28;
              }
            }
          }
          else if (v34)
          {
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_277();
          if (v50)
          {
            if (!v48) {
              goto LABEL_28;
            }
            OUTLINED_FUNCTION_21(v49);
            if (!v28 || v51 != v52)
            {
              LOBYTE(v31) = 0;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_28;
              }
            }
          }
          else if (v48)
          {
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_226();
          if (!v28 & v54)
          {
            OUTLINED_FUNCTION_236();
            if (!v28 & v54)
            {
LABEL_52:
              OUTLINED_FUNCTION_89();
              if (!v28 & v54)
              {
                OUTLINED_FUNCTION_173();
                if (!v28 & v54) {
                  goto LABEL_62;
                }
              }
              else
              {
                OUTLINED_FUNCTION_173();
                if (!(!v59 & v58))
                {
                  OUTLINED_FUNCTION_47();
                  OUTLINED_FUNCTION_101();
                  if ((v31 & 1) == 0) {
                    goto LABEL_28;
                  }
LABEL_62:
                  unint64_t v60 = (void (*)(void))(v64 + 16);
                  char v61 = *(void (**)(void))(v64 + 16);
                  OUTLINED_FUNCTION_99();
                  v61();
                  OUTLINED_FUNCTION_99();
                  v61();
                  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
                  OUTLINED_FUNCTION_158();
                  uint64_t v62 = OUTLINED_FUNCTION_121();
                  ((void (*)(uint64_t))v60)(v62);
                  OUTLINED_FUNCTION_128();
                  v60();
                  goto LABEL_28;
                }
              }
              uint64_t v56 = OUTLINED_FUNCTION_68();
LABEL_60:
              outlined consume of Data?(v56, v57);
              goto LABEL_28;
            }
          }
          else
          {
            OUTLINED_FUNCTION_236();
            if (!(!v55 & v54))
            {
              OUTLINED_FUNCTION_165();
              OUTLINED_FUNCTION_283();
              if ((v31 & 1) == 0) {
                goto LABEL_28;
              }
              goto LABEL_52;
            }
          }
          uint64_t v56 = OUTLINED_FUNCTION_164();
          goto LABEL_60;
        }
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        OUTLINED_FUNCTION_339();
        OUTLINED_FUNCTION_218();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        uint64_t v45 = v2;
        BOOL v44 = &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
LABEL_27:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v45, v44);
        goto LABEL_28;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    BOOL v44 = &demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?);
    uint64_t v45 = v2;
    goto LABEL_27;
  }
  if (v22)
  {
    v63[0] = v7;
    OUTLINED_FUNCTION_21(v23);
    BOOL v28 = v28 && v26 == v27;
    if (v28) {
      goto LABEL_10;
    }
    uint64_t v29 = v24;
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v24 = v29;
    if (v30) {
      goto LABEL_10;
    }
  }
LABEL_28:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

void static ModalityXStreamingSpeechProfileBegin.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXStreamingSpeechProfileBegin(v5);
  OUTLINED_FUNCTION_28();
  if (!v8)
  {
    if (v6) {
      goto LABEL_28;
    }
LABEL_10:
    OUTLINED_FUNCTION_28();
    if (v14)
    {
      if (!v12) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_21(v13);
      BOOL v17 = v11 && v15 == v16;
      if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_28;
      }
    }
    else if (v12)
    {
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_28();
    if (v20)
    {
      if (!v18) {
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_21(v19);
      BOOL v23 = v11 && v21 == v22;
      if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_28;
      }
    }
    else if (v18)
    {
      goto LABEL_28;
    }
    uint64_t v24 = *(void (**)(void))(v2 + 16);
    OUTLINED_FUNCTION_46();
    v24();
    OUTLINED_FUNCTION_46();
    v24();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v25 = OUTLINED_FUNCTION_57();
    ((void (*)(uint64_t))v0)(v25);
    OUTLINED_FUNCTION_65();
    v0();
    goto LABEL_28;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_21(v7);
    BOOL v11 = v11 && v9 == v10;
    if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_28:
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_37();
}

void static ModalityXStreamingSpeechProfileAddData.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v7);
  char v55 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_102();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v18 = OUTLINED_FUNCTION_242(v10, v11, v12, v13, v14, v15, v16, v17, v53);
  uint64_t v19 = type metadata accessor for ModalityXSpeechProfileSourceData(v18);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_93(v21, v53);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_59();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  uint64_t v25 = OUTLINED_FUNCTION_7_0(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_48(v26, v53);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_113();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = OUTLINED_FUNCTION_180();
  uint64_t v30 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v29);
  OUTLINED_FUNCTION_286();
  if (!v33)
  {
    uint64_t v54 = v5;
    if (v31) {
      goto LABEL_37;
    }
LABEL_10:
    uint64_t v37 = (uint64_t (*)(uint64_t))&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v4 + *(int *)(v30 + 24), v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    OUTLINED_FUNCTION_334(v58 + *(int *)(v30 + 24));
    uint64_t v38 = v2 + *(int *)(v22 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    OUTLINED_FUNCTION_56(v1);
    OUTLINED_FUNCTION_9(v2, 1, v19);
    if (v36)
    {
      OUTLINED_FUNCTION_339();
      OUTLINED_FUNCTION_218();
      OUTLINED_FUNCTION_9(v38, 1, v19);
      if (v36)
      {
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        goto LABEL_21;
      }
    }
    else
    {
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v57, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      OUTLINED_FUNCTION_9(v38, 1, v19);
      if (!v39)
      {
        outlined init with take of ModalityXSessionMetadata();
        specialized static Array<A>.== infix(_:_:)();
        if (v42)
        {
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
          char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v37 = type metadata accessor for ModalityXSpeechProfileSourceData;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          if ((v43 & 1) == 0) {
            goto LABEL_37;
          }
LABEL_21:
          OUTLINED_FUNCTION_89();
          if (!v36 & v44)
          {
            OUTLINED_FUNCTION_173();
            if (!(!v36 & v44)) {
              goto LABEL_36;
            }
          }
          else
          {
            OUTLINED_FUNCTION_173();
            if (!v45 & v44) {
              goto LABEL_36;
            }
            OUTLINED_FUNCTION_47();
            OUTLINED_FUNCTION_101();
            if ((v37 & 1) == 0) {
              goto LABEL_37;
            }
          }
          OUTLINED_FUNCTION_89();
          if (!v36 & v44)
          {
            OUTLINED_FUNCTION_173();
            if (!v36 & v44) {
              goto LABEL_39;
            }
          }
          else
          {
            OUTLINED_FUNCTION_173();
            if (!(!v47 & v46))
            {
              OUTLINED_FUNCTION_47();
              OUTLINED_FUNCTION_101();
              if ((v37 & 1) == 0) {
                goto LABEL_37;
              }
LABEL_39:
              uint64_t v50 = (void (*)(void))(v56 + 16);
              uint64_t v51 = *(void (**)(void))(v56 + 16);
              OUTLINED_FUNCTION_99();
              v51();
              OUTLINED_FUNCTION_99();
              v51();
              lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
              OUTLINED_FUNCTION_158();
              uint64_t v52 = OUTLINED_FUNCTION_121();
              ((void (*)(uint64_t))v50)(v52);
              OUTLINED_FUNCTION_128();
              v50();
              goto LABEL_37;
            }
          }
LABEL_36:
          uint64_t v48 = OUTLINED_FUNCTION_68();
          outlined consume of Data?(v48, v49);
          goto LABEL_37;
        }
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        OUTLINED_FUNCTION_339();
        OUTLINED_FUNCTION_218();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        uint64_t v41 = v2;
        uint64_t v40 = &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
LABEL_33:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v41, v40);
        goto LABEL_37;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t v40 = &demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?);
    uint64_t v41 = v2;
    goto LABEL_33;
  }
  if (v31)
  {
    uint64_t v54 = v5;
    OUTLINED_FUNCTION_21(v32);
    BOOL v36 = v36 && v34 == v35;
    if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_37:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

void static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

{
  void (*v0)(uint64_t);
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  void (*v13)(void);
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_38();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_53();
  v1(v6);
  OUTLINED_FUNCTION_28();
  if (!v9)
  {
    if (v7) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_21(v8);
    uint64_t v12 = v12 && v10 == v11;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_11:
      uint64_t v13 = *(void (**)(void))(v3 + 16);
      OUTLINED_FUNCTION_46();
      v13();
      OUTLINED_FUNCTION_46();
      v13();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      OUTLINED_FUNCTION_54();
      uint64_t v14 = *(void (**)(uint64_t))(v3 + 8);
      uint64_t v15 = OUTLINED_FUNCTION_67();
      v14(v15);
      uint64_t v16 = OUTLINED_FUNCTION_337();
      v14(v16);
    }
  }
LABEL_12:
  OUTLINED_FUNCTION_37();
}

uint64_t ModalityXServerBoundFrame.init()()
{
  return ModalityXServerBoundFrame.init()(type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload, (void (*)(void))type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t ModalityXClientBoundFrame.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
}

uint64_t ModalityXClientBoundFrame.payload.setter(uint64_t a1)
{
  return outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
}

uint64_t (*ModalityXClientBoundFrame.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXClientBoundFrame.requestComplete.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0(v3, v8);
  uint64_t v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v4);
  if (v5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_6:
    UnknownStorage.init()();
    uint64_t v7 = type metadata accessor for ModalityXRequestComplete(0);
    OUTLINED_FUNCTION_86(*(int *)(v7 + 20));
    return;
  }
  if (OUTLINED_FUNCTION_77())
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_76();
}

uint64_t ModalityXClientBoundFrame.requestComplete.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_143(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRequestComplete, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXRequestComplete.init()()
{
}

void ModalityXStreamingSpeechProfileCommit.init()(uint64_t (*a1)(void))
{
  UnknownStorage.init()();
  uint64_t v2 = a1(0);
  OUTLINED_FUNCTION_140(*(int *)(v2 + 20));
}

void ModalityXClientBoundFrame.requestComplete.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXRequestComplete(v5);
  OUTLINED_FUNCTION_2_0();
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = OUTLINED_FUNCTION_69((uint64_t)v8);
  OUTLINED_FUNCTION_11((uint64_t)v9);
  uint64_t v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v10);
  if (v11)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!OUTLINED_FUNCTION_74())
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_8;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  OUTLINED_FUNCTION_140(*(int *)(v6 + 20));
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXClientBoundFrame.processingError.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v11);
  uint64_t v5 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 1)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v8 = (int *)type metadata accessor for ModalityXProcessingError(0);
  uint64_t v9 = v0 + v8[5];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = (void *)(v0 + v8[6]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(v0 + v8[7]) = 3;
  OUTLINED_FUNCTION_86(v8[8]);
}

uint64_t ModalityXClientBoundFrame.processingError.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_137(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXProcessingError, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXProcessingError.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for ModalityXProcessingError(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = (void *)(a1 + v2[6]);
  void *v4 = 0;
  v4[1] = 0;
  *(unsigned char *)(a1 + v2[7]) = 3;
  OUTLINED_FUNCTION_86(v2[8]);
}

void ModalityXClientBoundFrame.processingError.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXProcessingError(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    size_t v14 = v8 + *(int *)(v6 + 20);
    *(_DWORD *)size_t v14 = 0;
    *(unsigned char *)(v14 + 4) = 1;
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_297(v15);
    OUTLINED_FUNCTION_140(*(int *)(v6 + 32));
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXClientBoundFrame.asrResult.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0(v3, v7);
  uint64_t v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v4);
  if (v5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v6 = OUTLINED_FUNCTION_77();
    if (v6 == 2)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_86(*(int *)(v0 + 24));
}

uint64_t ModalityXClientBoundFrame.asrResult.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_216(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXASRResult, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXASRResult.init()()
{
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_86(*(int *)(v0 + 24));
}

void ModalityXClientBoundFrame.asrResult.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXASRResult(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = OUTLINED_FUNCTION_69((uint64_t)v8);
  OUTLINED_FUNCTION_11((uint64_t)v9);
  uint64_t v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v10);
  if (v11)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    uint64_t v13 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    OUTLINED_FUNCTION_326(v13);
    UnknownStorage.init()();
    OUTLINED_FUNCTION_140(*(int *)(v6 + 24));
    goto LABEL_8;
  }
  int v12 = OUTLINED_FUNCTION_74();
  if (v12 != 2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

void ModalityXClientBoundFrame.speechProfileRebuildNeeded.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_0(v3, v8);
  uint64_t v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v4);
  if (v5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v6 = OUTLINED_FUNCTION_77();
    if (v6 == 3)
    {
      OUTLINED_FUNCTION_76();
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v7 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
  OUTLINED_FUNCTION_86(*(int *)(v7 + 20));
}

uint64_t ModalityXClientBoundFrame.speechProfileRebuildNeeded.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_213(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXSpeechProfileRebuildNeeded.init()()
{
}

void ModalityXClientBoundFrame.speechProfileRebuildNeeded.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v5);
  OUTLINED_FUNCTION_2_0();
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = OUTLINED_FUNCTION_69((uint64_t)v8);
  OUTLINED_FUNCTION_11((uint64_t)v9);
  uint64_t v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v10);
  if (v11)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    OUTLINED_FUNCTION_140(*(int *)(v6 + 20));
    goto LABEL_8;
  }
  int v12 = OUTLINED_FUNCTION_74();
  if (v12 != 3)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXClientBoundFrame.requestMitigated.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v11);
  uint64_t v5 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 4) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = type metadata accessor for ModalityXRequestMitigated(0);
  uint64_t result = OUTLINED_FUNCTION_328(v9);
  *(unsigned char *)(v0 + v10) = 8;
  return result;
}

uint64_t ModalityXClientBoundFrame.requestMitigated.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_212(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRequestMitigated, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXRequestMitigated.init()()
{
}

void ModalityXClientBoundFrame.requestMitigated.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  type metadata accessor for ModalityXRequestMitigated(v5);
  OUTLINED_FUNCTION_2_0();
  int v7 = malloc(*(void *)(v6 + 64));
  uint64_t v8 = OUTLINED_FUNCTION_69((uint64_t)v7);
  OUTLINED_FUNCTION_11((uint64_t)v8);
  uint64_t v9 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v9);
  if (v10)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    OUTLINED_FUNCTION_193();
    OUTLINED_FUNCTION_321(v12);
    goto LABEL_8;
  }
  int v11 = OUTLINED_FUNCTION_74();
  if (v11 != 4)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_189();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

double ModalityXClientBoundFrame.speechProfileResponse.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v10);
  uint64_t v5 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 5)
    {
      OUTLINED_FUNCTION_76();
      return result;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  OUTLINED_FUNCTION_88();
  double result = 0.0;
  *(_OWORD *)(v0 + v9) = xmmword_256A1CF60;
  *(_OWORD *)(v0 + *(int *)(v1 + 36)) = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXClientBoundFrame.speechProfileResponse.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_211(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

double ModalityXSpeechProfileBuildResponse.init()@<D0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  OUTLINED_FUNCTION_88();
  double result = 0.0;
  *(_OWORD *)(a1 + v4) = xmmword_256A1CF60;
  *(_OWORD *)(a1 + *(int *)(v1 + 36)) = xmmword_256A1CF60;
  return result;
}

void ModalityXClientBoundFrame.speechProfileResponse.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  char v6 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    UnknownStorage.init()();
    size_t v14 = (void *)(v8 + v6[5]);
    *size_t v14 = 0;
    v14[1] = 0;
    uint64_t v15 = type metadata accessor for ModalityXProcessingError(0);
    OUTLINED_FUNCTION_171(v15);
    OUTLINED_FUNCTION_170(v16);
    *(_OWORD *)(v8 + v6[8]) = xmmword_256A1CF60;
    *(_OWORD *)(v8 + v6[9]) = xmmword_256A1CF60;
    goto LABEL_8;
  }
  int v13 = OUTLINED_FUNCTION_74();
  if (v13 != 5)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_72();
LABEL_8:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_188();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXClientBoundFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXClientBoundFrame.unknownFields.setter()
{
  return ModalityXServerBoundFrame.unknownFields.setter();
}

uint64_t (*ModalityXClientBoundFrame.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXClientBoundFrame(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXClientBoundFrame.OneOf_Payload.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  v32[6] = v1;
  v32[7] = v2;
  uint64_t v3 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_93(v5, v32[0]);
  uint64_t v6 = type metadata accessor for ModalityXRequestMitigated(0);
  uint64_t v7 = OUTLINED_FUNCTION_7_0(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_36();
  v32[4] = v8;
  uint64_t v9 = OUTLINED_FUNCTION_96();
  uint64_t v10 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v9);
  uint64_t v11 = OUTLINED_FUNCTION_7_0(v10);
  MEMORY[0x270FA5388](v11);
  v32[3] = (uint64_t)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OUTLINED_FUNCTION_96();
  uint64_t v14 = type metadata accessor for ModalityXASRResult(v13);
  uint64_t v15 = OUTLINED_FUNCTION_7_0(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_36();
  v32[2] = v16;
  uint64_t v17 = type metadata accessor for ModalityXProcessingError(0);
  uint64_t v18 = OUTLINED_FUNCTION_7_0(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_36();
  v32[1] = v19;
  uint64_t v20 = OUTLINED_FUNCTION_96();
  uint64_t v21 = type metadata accessor for ModalityXRequestComplete(v20);
  uint64_t v22 = OUTLINED_FUNCTION_7_0(v21);
  MEMORY[0x270FA5388](v22);
  v32[0] = (uint64_t)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_274();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_113();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_340();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_342();
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload, ModalityXClientBoundFrame.OneOf_Payload));
  uint64_t v31 = OUTLINED_FUNCTION_7_0(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_231();
  outlined init with copy of ModalityXSessionMetadata();
  outlined init with copy of ModalityXSessionMetadata();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206() != 1) {
        goto LABEL_14;
      }
      outlined init with take of ModalityXSessionMetadata();
      static ModalityXProcessingError.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_16;
    case 2u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206() != 2) {
        goto LABEL_14;
      }
      outlined init with take of ModalityXSessionMetadata();
      static ModalityXASRResult.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_16;
    case 3u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206() != 3) {
        goto LABEL_14;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_317();
      static ModalityXSpeechProfileRebuildNeeded.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_16;
    case 4u:
      OUTLINED_FUNCTION_251();
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206() != 4) {
        goto LABEL_14;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_338();
      static ModalityXRequestMitigated.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_16;
    case 5u:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206() != 5) {
        goto LABEL_14;
      }
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_311();
      static ModalityXSpeechProfileBuildResponse.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_16;
    default:
      outlined init with copy of ModalityXSessionMetadata();
      if (OUTLINED_FUNCTION_206())
      {
LABEL_14:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload, ModalityXClientBoundFrame.OneOf_Payload));
      }
      else
      {
        outlined init with take of ModalityXSessionMetadata();
        OUTLINED_FUNCTION_146();
        static ModalityXRequestComplete.== infix(_:_:)();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_16:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      }
      OUTLINED_FUNCTION_16();
      return;
  }
}

void static ModalityXRequestComplete.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

void static ModalityXProcessingError.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_53();
  uint64_t v7 = type metadata accessor for ModalityXProcessingError(v6);
  OUTLINED_FUNCTION_45();
  if (v9)
  {
    if (!v8) {
      goto LABEL_31;
    }
  }
  else
  {
    OUTLINED_FUNCTION_24();
    if (v10) {
      goto LABEL_31;
    }
  }
  OUTLINED_FUNCTION_28();
  if (!v13)
  {
    if (v11) {
      goto LABEL_31;
    }
LABEL_14:
    uint64_t v17 = *(int *)(v7 + 28);
    int v18 = *(unsigned __int8 *)(v1 + v17);
    int v19 = *((unsigned __int8 *)v0 + v17);
    if (v18 == 3)
    {
      if (v19 != 3) {
        goto LABEL_31;
      }
    }
    else if (v19 == 3 || v18 != v19)
    {
      goto LABEL_31;
    }
    OUTLINED_FUNCTION_28();
    if (v23)
    {
      if (!v21) {
        goto LABEL_31;
      }
      OUTLINED_FUNCTION_21(v22);
      BOOL v26 = v16 && v24 == v25;
      if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_31;
      }
    }
    else if (v21)
    {
      goto LABEL_31;
    }
    uint64_t v27 = *(void (**)(void))(v3 + 16);
    OUTLINED_FUNCTION_46();
    v27();
    OUTLINED_FUNCTION_46();
    v27();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v28 = OUTLINED_FUNCTION_57();
    ((void (*)(uint64_t))v0)(v28);
    OUTLINED_FUNCTION_65();
    v0();
    goto LABEL_31;
  }
  if (v11)
  {
    OUTLINED_FUNCTION_21(v12);
    BOOL v16 = v16 && v14 == v15;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_14;
    }
  }
LABEL_31:
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_37();
}

void static ModalityXASRResult.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v48 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_48(v11, v47);
  MEMORY[0x270FA5388](v12);
  unint64_t v49 = (char *)&v47 - v13;
  uint64_t v14 = OUTLINED_FUNCTION_96();
  uint64_t v15 = type metadata accessor for ModalityXASRResult.OneOf_Payload(v14);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_130(v17, v47);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload?, ModalityXASRResult.OneOf_Payload?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_59();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v21 = OUTLINED_FUNCTION_7_0(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_233();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_113();
  MEMORY[0x270FA5388](v23);
  uint64_t v24 = OUTLINED_FUNCTION_180();
  uint64_t v25 = type metadata accessor for ModalityXASRResult(v24);
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v27 = v7;
  uint64_t v28 = v7 + v26;
  uint64_t v29 = *(void *)(v7 + v26 + 8);
  uint64_t v51 = v5;
  uint64_t v30 = *(void *)(v5 + v26 + 8);
  if (!v29)
  {
    uint64_t v31 = v25;
    uint64_t v47 = v9;
    if (v30) {
      goto LABEL_21;
    }
LABEL_10:
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v27, v0, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v51, v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    uint64_t v35 = v2 + *(int *)(v18 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    uint64_t v36 = OUTLINED_FUNCTION_338();
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v36, v37, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    OUTLINED_FUNCTION_9(v2, 1, v15);
    if (v34)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      uint64_t v38 = OUTLINED_FUNCTION_103();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v38, v39);
      OUTLINED_FUNCTION_9(v35, 1, v15);
      if (v34)
      {
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        goto LABEL_20;
      }
    }
    else
    {
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v3, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      OUTLINED_FUNCTION_9(v35, 1, v15);
      if (!v40)
      {
        outlined init with take of ModalityXSessionMetadata();
        static ModalityXASRResult.OneOf_Payload.== infix(_:_:)();
        char v42 = v41;
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        if ((v42 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_20:
        uint64_t v43 = v47;
        char v44 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        uint64_t v45 = v48;
        v44(v49, v27 + *(int *)(v31 + 20), v48);
        v44(v50, v51 + *(int *)(v31 + 20), v45);
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        dispatch thunk of static Equatable.== infix(_:_:)();
        char v46 = *(void (**)(void))(v43 + 8);
        OUTLINED_FUNCTION_284();
        v46();
        OUTLINED_FUNCTION_284();
        v46();
        goto LABEL_21;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload?, ModalityXASRResult.OneOf_Payload?));
    goto LABEL_21;
  }
  if (v30)
  {
    uint64_t v31 = v25;
    uint64_t v47 = v9;
    OUTLINED_FUNCTION_21(v28);
    BOOL v34 = v34 && v32 == v33;
    if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_16();
}

void static ModalityXSpeechProfileRebuildNeeded.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

void static ModalityXRequestMitigated.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_53();
  uint64_t v7 = type metadata accessor for ModalityXRequestMitigated(v6);
  OUTLINED_FUNCTION_28();
  if (!v10)
  {
    if (v8) {
      goto LABEL_17;
    }
LABEL_10:
    uint64_t v14 = *(int *)(v7 + 24);
    int v15 = *(unsigned __int8 *)(v1 + v14);
    int v16 = *((unsigned __int8 *)v0 + v14);
    if (v15 == 8)
    {
      if (v16 != 8) {
        goto LABEL_17;
      }
    }
    else if (v16 == 8 || v15 != v16)
    {
      goto LABEL_17;
    }
    uint64_t v17 = *(void (**)(void))(v3 + 16);
    OUTLINED_FUNCTION_46();
    v17();
    OUTLINED_FUNCTION_46();
    v17();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v18 = OUTLINED_FUNCTION_57();
    ((void (*)(uint64_t))v0)(v18);
    OUTLINED_FUNCTION_65();
    v0();
    goto LABEL_17;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_21(v9);
    BOOL v13 = v13 && v11 == v12;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_37();
}

void static ModalityXSpeechProfileBuildResponse.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v7);
  char v59 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_102();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v18 = OUTLINED_FUNCTION_242(v10, v11, v12, v13, v14, v15, v16, v17, v57);
  uint64_t v19 = type metadata accessor for ModalityXProcessingError(v18);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_93(v21, v57);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXProcessingError?, ModalityXProcessingError?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_112();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  uint64_t v25 = OUTLINED_FUNCTION_7_0(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_48(v26, v57);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_58();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = OUTLINED_FUNCTION_293();
  uint64_t v30 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v29);
  OUTLINED_FUNCTION_286();
  if (!v33)
  {
    uint64_t v58 = v5;
    if (v31) {
      goto LABEL_19;
    }
LABEL_10:
    uint64_t v37 = (uint64_t (*)(uint64_t))&demangling cache variable for type metadata for ModalityXProcessingError?;
    OUTLINED_FUNCTION_56(v4 + *(int *)(v30 + 24));
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v62 + *(int *)(v30 + 24), v0, &demangling cache variable for type metadata for ModalityXProcessingError?);
    uint64_t v38 = v2 + *(int *)(v22 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v2, &demangling cache variable for type metadata for ModalityXProcessingError?);
    OUTLINED_FUNCTION_334(v0);
    OUTLINED_FUNCTION_9(v2, 1, v19);
    if (v36)
    {
      OUTLINED_FUNCTION_218();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXProcessingError?);
      OUTLINED_FUNCTION_9(v38, 1, v19);
      if (v36)
      {
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXProcessingError?);
        goto LABEL_21;
      }
    }
    else
    {
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v61, &demangling cache variable for type metadata for ModalityXProcessingError?);
      OUTLINED_FUNCTION_9(v38, 1, v19);
      if (!v39)
      {
        outlined init with take of ModalityXSessionMetadata();
        OUTLINED_FUNCTION_208();
        static ModalityXProcessingError.== infix(_:_:)();
        char v41 = v40;
        uint64_t v37 = type metadata accessor for ModalityXProcessingError;
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXProcessingError?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXProcessingError?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        uint64_t v42 = OUTLINED_FUNCTION_318();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v42, v43);
        if ((v41 & 1) == 0) {
          goto LABEL_19;
        }
LABEL_21:
        uint64_t v44 = *(int *)(v30 + 28);
        int v45 = *(unsigned __int8 *)(v4 + v44);
        int v46 = *(unsigned __int8 *)(v62 + v44);
        if (v45 == 2)
        {
          if (v46 != 2) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v46 == 2) {
            goto LABEL_19;
          }
          OUTLINED_FUNCTION_122();
          if ((v47 & 1) == 0) {
            goto LABEL_19;
          }
        }
        OUTLINED_FUNCTION_226();
        if (!v36 & v48)
        {
          OUTLINED_FUNCTION_236();
          if (!v36 & v48)
          {
LABEL_35:
            OUTLINED_FUNCTION_89();
            if (!v36 & v48)
            {
              OUTLINED_FUNCTION_173();
              if (!v36 & v48) {
                goto LABEL_45;
              }
            }
            else
            {
              OUTLINED_FUNCTION_173();
              if (!(!v53 & v52))
              {
                OUTLINED_FUNCTION_47();
                OUTLINED_FUNCTION_101();
                if ((v37 & 1) == 0) {
                  goto LABEL_19;
                }
LABEL_45:
                uint64_t v54 = (void (*)(void))(v60 + 16);
                char v55 = *(void (**)(void))(v60 + 16);
                OUTLINED_FUNCTION_99();
                v55();
                OUTLINED_FUNCTION_99();
                v55();
                lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
                OUTLINED_FUNCTION_158();
                uint64_t v56 = OUTLINED_FUNCTION_121();
                ((void (*)(uint64_t))v54)(v56);
                OUTLINED_FUNCTION_128();
                v54();
                goto LABEL_19;
              }
            }
            uint64_t v50 = OUTLINED_FUNCTION_68();
LABEL_43:
            outlined consume of Data?(v50, v51);
            goto LABEL_19;
          }
        }
        else
        {
          OUTLINED_FUNCTION_236();
          if (!(!v49 & v48))
          {
            OUTLINED_FUNCTION_165();
            OUTLINED_FUNCTION_283();
            if ((v37 & 1) == 0) {
              goto LABEL_19;
            }
            goto LABEL_35;
          }
        }
        uint64_t v50 = OUTLINED_FUNCTION_164();
        goto LABEL_43;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXProcessingError?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXProcessingError?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for (ModalityXProcessingError?, ModalityXProcessingError?));
    goto LABEL_19;
  }
  if (v31)
  {
    uint64_t v58 = v5;
    OUTLINED_FUNCTION_21(v32);
    BOOL v36 = v36 && v34 == v35;
    if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_19:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

uint64_t ModalityXClientBoundFrame.init()()
{
  return ModalityXServerBoundFrame.init()(type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload, (void (*)(void))type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t ModalityXServerBoundFrame.init()(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v3 = a1(0);
  OUTLINED_FUNCTION_326(v3);
  a2(0);
  OUTLINED_FUNCTION_172();
  return UnknownStorage.init()();
}

uint64_t ModalityXSessionMetadata.deviceInfo.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_132();
  uint64_t v5 = type metadata accessor for ModalityXSessionMetadata(v4);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0 + *(int *)(v5 + 20), v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v6 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_9(v1, 1, (uint64_t)v6);
  if (!v7) {
    return outlined init with take of ModalityXSessionMetadata();
  }
  UnknownStorage.init()();
  OUTLINED_FUNCTION_86(v6[5]);
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_86(v8);
  OUTLINED_FUNCTION_86(v6[8]);
  OUTLINED_FUNCTION_86(v6[9]);
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
}

uint64_t ModalityXSessionMetadata.deviceInfo.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  uint64_t v2 = type metadata accessor for ModalityXSessionMetadata(v1);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0 + *(int *)(v2 + 20), &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_67();
  outlined init with take of ModalityXSessionMetadata();
  type metadata accessor for ModalityXDeviceInfo(0);
  uint64_t v3 = OUTLINED_FUNCTION_280();

  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

void ModalityXSessionMetadata.deviceInfo.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OUTLINED_FUNCTION_315((uint64_t)v8);
  uint64_t v10 = type metadata accessor for ModalityXSessionMetadata(v9);
  OUTLINED_FUNCTION_301(*(int *)(v10 + 20));
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, (uint64_t)v5);
  if (v11)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_168(v5[5]);
    OUTLINED_FUNCTION_299();
    OUTLINED_FUNCTION_168(v12);
    OUTLINED_FUNCTION_168(v5[8]);
    OUTLINED_FUNCTION_168(v5[9]);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v3 = *(int *)(*(void *)v0 + 40);
  uint64_t v4 = *(void **)(*(void *)v0 + 24);
  uint64_t v5 = *(void **)(*(void *)v0 + 32);
  uint64_t v6 = *(void **)(*(void *)v0 + 8);
  size_t v7 = **(void **)v0 + v3;
  if (v8)
  {
    outlined init with copy of ModalityXSessionMetadata();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v7, v2);
    outlined init with take of ModalityXSessionMetadata();
    OUTLINED_FUNCTION_291();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(**(void **)v0 + v3, v1);
    outlined init with take of ModalityXSessionMetadata();
    OUTLINED_FUNCTION_291();
  }
  free(v5);
  free(v4);
  free(v6);
  OUTLINED_FUNCTION_16();
  free(v9);
}

BOOL ModalityXSessionMetadata.hasDeviceInfo.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_131();
  uint64_t v5 = type metadata accessor for ModalityXSessionMetadata(v4);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0 + *(int *)(v5 + 20), v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v6 = type metadata accessor for ModalityXDeviceInfo(0);
  BOOL v7 = __swift_getEnumTagSinglePayload(v1, 1, v6) != 1;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  return v7;
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearDeviceInfo()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 20);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  uint64_t v2 = type metadata accessor for ModalityXDeviceInfo(0);

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t ModalityXSessionMetadata.dataSharingOptInStatus.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 24)) & 1;
}

uint64_t ModalityXSessionMetadata.dataSharingOptInStatus.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_167();
  uint64_t result = type metadata accessor for ModalityXSessionMetadata(v2);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v0;
  return result;
}

uint64_t (*ModalityXSessionMetadata.dataSharingOptInStatus.modify(void *a1))()
{
  *a1 = v1;
  uint64_t v2 = type metadata accessor for ModalityXSessionMetadata(0);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 24));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXSessionMetadata.hasDataSharingOptInStatus.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSessionMetadata(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearDataSharingOptInStatus()()
{
  uint64_t v0 = type metadata accessor for ModalityXSessionMetadata(0);
  OUTLINED_FUNCTION_170(*(int *)(v0 + 24));
}

void ModalityXSessionMetadata.userInterfaceIdiom.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_176();
  uint64_t v2 = type metadata accessor for ModalityXSessionMetadata(v1);
  OUTLINED_FUNCTION_162(*(unsigned char *)(v0 + *(int *)(v2 + 28)));
}

uint64_t key path setter for ModalityXSessionMetadata.userInterfaceIdiom : ModalityXSessionMetadata(char *a1)
{
  char v2 = *a1;
  return ModalityXSessionMetadata.userInterfaceIdiom.setter(&v2);
}

uint64_t ModalityXSessionMetadata.userInterfaceIdiom.setter(char *a1)
{
  return ModalityXSessionMetadata.userInterfaceIdiom.setter(a1, type metadata accessor for ModalityXSessionMetadata);
}

uint64_t (*ModalityXSessionMetadata.userInterfaceIdiom.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 8) {
    LOBYTE(v4) = 0;
  }
  OUTLINED_FUNCTION_169(v4);
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXSessionMetadata.hasUserInterfaceIdiom.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 28)) != 8;
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearUserInterfaceIdiom()()
{
  uint64_t v0 = type metadata accessor for ModalityXSessionMetadata(0);
  OUTLINED_FUNCTION_321(*(int *)(v0 + 28));
}

uint64_t ModalityXSessionMetadata.language.getter()
{
  return ModalityXSessionMetadata.language.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_261();
  char v2 = v1(v0);
  if (OUTLINED_FUNCTION_50(*(int *)(v2 + 32))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXSessionMetadata.language : ModalityXSessionMetadata()
{
  return ModalityXSessionMetadata.language.setter();
}

uint64_t ModalityXSessionMetadata.language.setter()
{
  return ModalityXSessionMetadata.language.setter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t result;

  uint64_t v3 = OUTLINED_FUNCTION_41();
  v4(v3);
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXSessionMetadata.language.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXSessionMetadata(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 32))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSessionMetadata.hasLanguage.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_261();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_139(*(int *)(v2 + 32));
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearLanguage()()
{
}

uint64_t (*ModalityXSessionMetadata.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfile.moreDataFollows.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXSpeechProfile(0) + 20)) & 1;
}

uint64_t ModalityXSpeechProfile.moreDataFollows.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_167();
  uint64_t result = type metadata accessor for ModalityXSpeechProfile(v2);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t (*ModalityXSpeechProfile.moreDataFollows.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXSpeechProfile(v1);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 20));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXSpeechProfile.hasMoreDataFollows.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfile(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXSpeechProfile.clearMoreDataFollows()()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_170(*(int *)(v0 + 20));
}

uint64_t ModalityXSpeechProfile.languageProfile.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfile(0);
  uint64_t v1 = OUTLINED_FUNCTION_81(*(int *)(v0 + 24));
  outlined copy of Data?(v1, v2);
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXSpeechProfile.languageProfile : ModalityXSpeechProfile(uint64_t a1)
{
  return ModalityXSpeechProfile.languageProfile.setter();
}

uint64_t ModalityXSpeechProfile.languageProfile.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_41();
  uint64_t v1 = type metadata accessor for ModalityXSpeechProfile(v0);
  return OUTLINED_FUNCTION_142(*(int *)(v1 + 24));
}

uint64_t (*ModalityXSpeechProfile.languageProfile.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXSpeechProfile(v2);
  uint64_t v4 = OUTLINED_FUNCTION_40(*(int *)(v3 + 24));
  unint64_t v7 = 0xC000000000000000;
  if (!(!v9 & v8)) {
    unint64_t v7 = v5;
  }
  void *v1 = v6;
  v1[1] = v7;
  outlined copy of Data?(v4, v5);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXSpeechProfile.hasLanguageProfile.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfile(0);
  return OUTLINED_FUNCTION_80(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXSpeechProfile.clearLanguageProfile()()
{
  uint64_t v1 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_247(*(int *)(v1 + 24));
  _OWORD *v0 = xmmword_256A1CF60;
}

uint64_t (*ModalityXSpeechProfile.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXBeginRequest.requestID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20));
  OUTLINED_FUNCTION_22();
  if (!*(void *)(v1 + 24)) {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXBeginRequest.requestID : ModalityXBeginRequest()
{
  return ModalityXBeginRequest.requestID.setter();
}

uint64_t ModalityXBeginRequest.requestID.setter()
{
  uint64_t v4 = OUTLINED_FUNCTION_41();
  type metadata accessor for ModalityXBeginRequest(v4);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_220();
    *(void *)(v1 + v3) = ModalityXBeginRequest._StorageClass.init(copying:)(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  OUTLINED_FUNCTION_34();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t ModalityXBeginRequest.requestID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_272((uint64_t)v2);
  uint64_t v4 = *(void *)(v0 + v3);
  OUTLINED_FUNCTION_15();
  if (*(void *)(v4 + 24)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v5;
  *(void *)(v1 + 80) = v6;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginRequest.requestID.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *(void *)(*v0 + 80);
  if (v4)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for ModalityXBeginRequest._StorageClass(0);
      OUTLINED_FUNCTION_29();
      uint64_t v5 = OUTLINED_FUNCTION_220();
      uint64_t v6 = ModalityXBeginRequest._StorageClass.init(copying:)(v5);
      OUTLINED_FUNCTION_150(v6);
    }
    uint64_t v7 = *(void *)(*(void *)(v1 + 88) + *(int *)(v1 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v7 + 16) = v2;
    *(void *)(v7 + 24) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for ModalityXBeginRequest._StorageClass(0);
      OUTLINED_FUNCTION_29();
      uint64_t v8 = OUTLINED_FUNCTION_220();
      uint64_t v9 = ModalityXBeginRequest._StorageClass.init(copying:)(v8);
      OUTLINED_FUNCTION_150(v9);
    }
    uint64_t v10 = *(void *)(*(void *)(v1 + 88) + *(int *)(v1 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v10 + 16) = v2;
    *(void *)(v10 + 24) = v3;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_37();
  free(v11);
}

BOOL ModalityXBeginRequest.hasRequestID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20));
  OUTLINED_FUNCTION_22();
  return *(void *)(v1 + 24) != 0;
}

Swift::Void __swiftcall ModalityXBeginRequest.clearRequestID()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v2 = OUTLINED_FUNCTION_87();
    uint64_t v3 = ModalityXBeginRequest._StorageClass.init(copying:)(v2);
    OUTLINED_FUNCTION_43(v3);
  }
  uint64_t v4 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRelease();
}

void ModalityXBeginRequest.inputOrigin.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_176();
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(v1) + 20));
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_162(*(unsigned char *)(v2 + 32));
}

uint64_t key path setter for ModalityXBeginRequest.inputOrigin : ModalityXBeginRequest(char *a1)
{
  char v2 = *a1;
  return ModalityXBeginRequest.inputOrigin.setter(&v2);
}

uint64_t ModalityXBeginRequest.inputOrigin.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v4 = OUTLINED_FUNCTION_87();
    *(void *)(v1 + v3) = ModalityXBeginRequest._StorageClass.init(copying:)(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v3);
  uint64_t result = OUTLINED_FUNCTION_34();
  *(unsigned char *)(v5 + 32) = v2;
  return result;
}

void (*ModalityXBeginRequest.inputOrigin.modify())()
{
  char v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20);
  *((_DWORD *)v2 + 20) = v3;
  uint64_t v4 = *(void *)(v1 + v3);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_296(*(unsigned char *)(v4 + 32));
  return ModalityXBeginRequest.inputOrigin.modify;
}

void ModalityXBeginRequest.inputOrigin.modify()
{
  OUTLINED_FUNCTION_38();
  char v1 = v0;
  uint64_t v3 = *v2;
  char v4 = *(unsigned char *)(*v2 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v1)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v8 = swift_retain();
    *(void *)(v7 + v6) = ModalityXBeginRequest._StorageClass.init(copying:)(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 32);
  OUTLINED_FUNCTION_34();
  *uint64_t v9 = v4;
  OUTLINED_FUNCTION_37();
  free(v10);
}

BOOL ModalityXBeginRequest.hasInputOrigin.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20));
  OUTLINED_FUNCTION_22();
  return *(unsigned char *)(v1 + 32) != 19;
}

Swift::Void __swiftcall ModalityXBeginRequest.clearInputOrigin()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v2 = OUTLINED_FUNCTION_87();
    uint64_t v3 = ModalityXBeginRequest._StorageClass.init(copying:)(v2);
    OUTLINED_FUNCTION_43(v3);
  }
  uint64_t v4 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(unsigned char *)(v4 + 32) = 19;
}

uint64_t ModalityXBeginRequest.audioMetadata.getter()
{
  return ModalityXBeginRequest.audioMetadata.getter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  OUTLINED_FUNCTION_306();
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v6 = OUTLINED_FUNCTION_7_0(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OUTLINED_FUNCTION_174();
  uint64_t v10 = *(void *)(v0 + *(int *)(v2(v9) + 20)) + *v1;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v10, (uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v11 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_9((uint64_t)v8, 1, v11);
  if (!v12) {
    return outlined init with take of ModalityXSessionMetadata();
  }
  ModalityXAudioMetadata.init()(v4);
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
}

void ModalityXBeginRequest.audioMetadata.setter()
{
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  void (*v5)(void);
  void (*v6)(void);
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v10 = OUTLINED_FUNCTION_7_0(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_274();
  uint64_t v13 = v11 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = OUTLINED_FUNCTION_174();
  uint64_t v18 = *(int *)(v8(v17) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v6(0);
    OUTLINED_FUNCTION_29();
    uint64_t v19 = swift_retain();
    *(void *)(v0 + v18) = v4(v19);
    swift_release();
  }
  uint64_t v20 = *(void *)(v0 + v18);
  OUTLINED_FUNCTION_64();
  uint64_t v21 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
  uint64_t v22 = OUTLINED_FUNCTION_311();
  outlined init with take of ModalityXAudioMetadata?(v22, v23);
  uint64_t v24 = v20 + *v2;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v13, v24, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_16();
}

void ModalityXBeginRequest.audioMetadata.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v2 = v1;
  uint64_t v3 = malloc(0x38uLL);
  *uint64_t v2 = v3;
  v3[3] = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_7_0(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  v3[4] = v6;
  uint64_t v7 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_2_0();
  size_t v9 = *(void *)(v8 + 64);
  v3[5] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[6] = v10;
  uint64_t v11 = *(void *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20))
      + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v11, (uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_9((uint64_t)v6, 1, v7);
  if (v12)
  {
    UnknownStorage.init()();
    uint64_t v13 = OUTLINED_FUNCTION_125();
    __swift_storeEnumTagSinglePayload(v11, 1, 1, v13);
    v10[*(int *)(v7 + 36)] = &demangling cache variable for type metadata for ModalityXAudioMetadata?;
    OUTLINED_FUNCTION_168(*(int *)(v7 + 40));
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

void ModalityXBeginRequest.audioMetadata.modify(uint64_t a1, char a2)
{
}

BOOL ModalityXBeginRequest.hasAudioMetadata.getter()
{
  return ModalityXBeginRequest.hasAudioMetadata.getter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v12;

  OUTLINED_FUNCTION_306();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OUTLINED_FUNCTION_174();
  uint64_t v8 = *(void *)(v0 + *(int *)(v2(v7) + 20)) + *v1;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v8, (uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  size_t v9 = type metadata accessor for ModalityXAudioMetadata(0);
  uint64_t v10 = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9) != 1;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  return v10;
}

Swift::Void __swiftcall ModalityXBeginRequest.clearAudioMetadata()()
{
}

uint64_t ModalityXBeginRequest.enablePartialResults.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  unsigned char *v4;

  uint64_t v2 = OUTLINED_FUNCTION_304();
  uint64_t v4 = (unsigned char *)(*(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0);
  OUTLINED_FUNCTION_22();
  return *v4 & 1;
}

uint64_t ModalityXBeginRequest.enablePartialResults.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
}

void (*ModalityXBeginRequest.enablePartialResults.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_51(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginRequest.enablePartialResults.modify;
}

void ModalityXBeginRequest.enablePartialResults.modify()
{
}

{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  void (*v2)(void);
  void (*v3)(void);
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *(unsigned char *)(*(void *)v6 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v5)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v3(0);
    uint64_t v3 = (void (*)(void))OUTLINED_FUNCTION_29();
    size_t v9 = swift_retain();
    uint64_t v10 = v1(v9);
    OUTLINED_FUNCTION_239(v10);
  }
LABEL_4:
  OUTLINED_FUNCTION_207();
  OUTLINED_FUNCTION_34();
  *(unsigned char *)uint64_t v3 = v7;
  OUTLINED_FUNCTION_16();
  free(v11);
}

BOOL ModalityXBeginRequest.hasEnablePartialResults.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  unsigned __int8 *v4;

  uint64_t v2 = OUTLINED_FUNCTION_304();
  uint64_t v4 = (unsigned __int8 *)(*(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0);
  OUTLINED_FUNCTION_22();
  return *v4 != 2;
}

Swift::Void __swiftcall ModalityXBeginRequest.clearEnablePartialResults()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginRequest._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginRequest.isPromptedDictation.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginRequest.isPromptedDictation.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
}

uint64_t ModalityXBeginRequest.enablePartialResults.setter(char a1, void (*a2)(void), void (*a3)(uint64_t), uint64_t (*a4)(uint64_t), unsigned char *a5)
{
  a2(0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = OUTLINED_FUNCTION_287();
    a3(v9);
    OUTLINED_FUNCTION_29();
    uint64_t v10 = OUTLINED_FUNCTION_263();
    uint64_t v11 = a4(v10);
    OUTLINED_FUNCTION_240(v11);
  }
  uint64_t result = OUTLINED_FUNCTION_12();
  *a5 = a1 & 1;
  return result;
}

void (*ModalityXBeginRequest.isPromptedDictation.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_51(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginRequest.isPromptedDictation.modify;
}

void ModalityXBeginRequest.isPromptedDictation.modify()
{
}

BOOL ModalityXBeginRequest.hasIsPromptedDictation.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsPromptedDictation()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginRequest._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginRequest.isPromptedConfirmation.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginRequest.isPromptedConfirmation.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
}

void (*ModalityXBeginRequest.isPromptedConfirmation.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_51(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginRequest.isPromptedConfirmation.modify;
}

void ModalityXBeginRequest.isPromptedConfirmation.modify()
{
}

BOOL ModalityXBeginRequest.hasIsPromptedConfirmation.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsPromptedConfirmation()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginRequest._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginRequest.foregroundAppID.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  uint64_t v2 = OUTLINED_FUNCTION_303();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0;
  OUTLINED_FUNCTION_22();
  if (!*(void *)(v4 + 8)) {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXBeginRequest.foregroundAppID : ModalityXBeginRequest(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginRequest.foregroundAppID.setter(v1, v2);
}

uint64_t ModalityXBeginRequest.foregroundAppID.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(void))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
}

uint64_t ModalityXBeginRequest.foregroundAppID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_272((uint64_t)v2);
  uint64_t v4 = *(void *)(v0 + v3)
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v4 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v5;
  *(void *)(v1 + 80) = v6;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginRequest.foregroundAppID.modify()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_235();
  uint64_t v6 = *(void *)(v5 + 72);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  if (v9)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = OUTLINED_FUNCTION_234();
      v1(v10);
      OUTLINED_FUNCTION_29();
      uint64_t v11 = OUTLINED_FUNCTION_331();
      *(void *)(v4 + v8) = v3(v11);
      swift_release();
    }
    char v12 = (void *)(*(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96)) + *v2);
    OUTLINED_FUNCTION_34();
    *char v12 = v6;
    v12[1] = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = OUTLINED_FUNCTION_234();
      v1(v13);
      OUTLINED_FUNCTION_29();
      uint64_t v14 = OUTLINED_FUNCTION_331();
      *(void *)(v4 + v8) = v3(v14);
      swift_release();
    }
    uint64_t v15 = (void *)(*(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96)) + *v2);
    OUTLINED_FUNCTION_34();
    *uint64_t v15 = v6;
    v15[1] = v7;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v16);
}

BOOL ModalityXBeginRequest.hasForegroundAppID.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  uint64_t v2 = OUTLINED_FUNCTION_303();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0;
  OUTLINED_FUNCTION_22();
  return *(void *)(v4 + 8) != 0;
}

Swift::Void __swiftcall ModalityXBeginRequest.clearForegroundAppID()()
{
}

uint64_t ModalityXBeginRequest.isAutoPunctuationEnabled.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginRequest.isAutoPunctuationEnabled.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
}

void (*ModalityXBeginRequest.isAutoPunctuationEnabled.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_51(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginRequest.isAutoPunctuationEnabled.modify;
}

void ModalityXBeginRequest.isAutoPunctuationEnabled.modify()
{
}

BOOL ModalityXBeginRequest.hasIsAutoPunctuationEnabled.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsAutoPunctuationEnabled()()
{
  if ((OUTLINED_FUNCTION_61() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginRequest._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginRequest.inlineLmeItems.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter((void (*)(void))type metadata accessor for ModalityXBeginRequest);
}

uint64_t key path setter for ModalityXBeginRequest.inlineLmeItems : ModalityXBeginRequest()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return ModalityXBeginRequest.inlineLmeItems.setter(v0);
}

uint64_t ModalityXBeginRequest.inlineLmeItems.setter(uint64_t a1)
{
  return ModalityXBeginRequest.inlineLmeItems.setter(a1, (uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
}

uint64_t ModalityXBeginRequest.inlineLmeItems.modify(void *a1)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_271(v4);
  OUTLINED_FUNCTION_13();
  v3[9] = *v1;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_251();
}

void ModalityXBeginRequest.inlineLmeItems.modify()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_235();
  uint64_t v5 = *(void *)(v4 + 72);
  if (v6)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = OUTLINED_FUNCTION_278();
      v1(v7);
      OUTLINED_FUNCTION_29();
      uint64_t v8 = OUTLINED_FUNCTION_331();
      uint64_t v9 = v3(v8);
      OUTLINED_FUNCTION_239(v9);
    }
    uint64_t v10 = (void *)(*(void *)(*(void *)(v0 + 80) + *(int *)(v0 + 88)) + *v2);
    OUTLINED_FUNCTION_34();
    *uint64_t v10 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v11 = OUTLINED_FUNCTION_278();
      v1(v11);
      OUTLINED_FUNCTION_29();
      char v12 = OUTLINED_FUNCTION_331();
      uint64_t v13 = v3(v12);
      OUTLINED_FUNCTION_239(v13);
    }
    uint64_t v14 = (void *)(*(void *)(*(void *)(v0 + 80) + *(int *)(v0 + 88)) + *v2);
    OUTLINED_FUNCTION_34();
    *uint64_t v14 = v5;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v15);
}

uint64_t (*ModalityXBeginRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXBeginDictation.audioMetadata.getter()
{
  return ModalityXBeginRequest.audioMetadata.getter();
}

void ModalityXBeginDictation.audioMetadata.setter()
{
}

uint64_t ModalityXBeginRequest._uniqueStorage()(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = OUTLINED_FUNCTION_174();
  uint64_t v8 = *(int *)(v7(v6) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    OUTLINED_FUNCTION_29();
    uint64_t v9 = swift_retain();
    *(void *)(v3 + v8) = a3(v9);
    swift_release();
  }

  return swift_retain();
}

void ModalityXBeginDictation.audioMetadata.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v2 = v1;
  uint64_t v3 = malloc(0x38uLL);
  *uint64_t v2 = v3;
  v3[3] = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_7_0(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  v3[4] = v6;
  uint64_t v7 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_2_0();
  size_t v9 = *(void *)(v8 + 64);
  v3[5] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[6] = v10;
  OUTLINED_FUNCTION_55();
  uint64_t v12 = v11
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v12, (uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_9((uint64_t)v6, 1, v7);
  if (v13)
  {
    UnknownStorage.init()();
    uint64_t v14 = OUTLINED_FUNCTION_125();
    __swift_storeEnumTagSinglePayload(v12, 1, 1, v14);
    v10[*(int *)(v7 + 36)] = &demangling cache variable for type metadata for ModalityXAudioMetadata?;
    OUTLINED_FUNCTION_168(*(int *)(v7 + 40));
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

void ModalityXBeginDictation.audioMetadata.modify(uint64_t a1, char a2)
{
}

void ModalityXBeginRequest.audioMetadata.modify(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void **)(*(void *)a1 + 48);
  uint64_t v7 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    OUTLINED_FUNCTION_118();
    outlined init with copy of ModalityXSessionMetadata();
    a3(v5);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v6);
  free(v5);
  free(v7);

  free(v4);
}

BOOL ModalityXBeginDictation.hasAudioMetadata.getter()
{
  return ModalityXBeginRequest.hasAudioMetadata.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearAudioMetadata()()
{
}

void ModalityXBeginRequest.clearAudioMetadata()()
{
  OUTLINED_FUNCTION_38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  size_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v11 = OUTLINED_FUNCTION_7_0(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_131();
  v9(v12);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v13 = OUTLINED_FUNCTION_287();
    v7(v13);
    OUTLINED_FUNCTION_29();
    uint64_t v14 = OUTLINED_FUNCTION_263();
    uint64_t v0 = v7;
    uint64_t v15 = v5(v14);
    OUTLINED_FUNCTION_240(v15);
  }
  uint64_t v16 = OUTLINED_FUNCTION_287();
  uint64_t v17 = type metadata accessor for ModalityXAudioMetadata(v16);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v17);
  uint64_t v18 = (uint64_t)v0 + *v3;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v1, v18, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_37();
}

uint64_t ModalityXBeginDictation.requestID.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.requestID : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.requestID.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.requestID.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
}

uint64_t ModalityXBeginRequest.foregroundAppID.setter(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t (*a5)(uint64_t), void *a6)
{
  uint64_t v12 = OUTLINED_FUNCTION_41();
  uint64_t v14 = *(int *)(v13(v12) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    OUTLINED_FUNCTION_29();
    uint64_t v15 = swift_retain();
    *(void *)(v7 + v14) = a5(v15);
    swift_release();
  }
  uint64_t v16 = (void *)(*(void *)(v7 + v14) + *a6);
  OUTLINED_FUNCTION_34();
  *uint64_t v16 = v8;
  v16[1] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t ModalityXBeginDictation.requestID.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.requestID.modify()
{
}

BOOL ModalityXBeginDictation.hasRequestID.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearRequestID()()
{
}

uint64_t ModalityXBeginRequest.clearForegroundAppID()(void (*a1)(void), void (*a2)(void), uint64_t (*a3)(uint64_t), void *a4)
{
  a1(0);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    a2(0);
    OUTLINED_FUNCTION_29();
    uint64_t v9 = OUTLINED_FUNCTION_220();
    *(void *)(v4 + v5) = a3(v9);
    swift_release();
  }
  OUTLINED_FUNCTION_12();
  *a4 = 0;
  a4[1] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t ModalityXBeginDictation.fieldID.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.fieldID : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.fieldID.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.fieldID.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
}

uint64_t ModalityXBeginDictation.fieldID.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.fieldID.modify()
{
}

BOOL ModalityXBeginDictation.hasFieldID.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearFieldID()()
{
}

uint64_t ModalityXBeginDictation.fieldLabel.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.fieldLabel : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.fieldLabel.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.fieldLabel.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
}

uint64_t ModalityXBeginDictation.fieldLabel.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.fieldLabel.modify()
{
}

BOOL ModalityXBeginDictation.hasFieldLabel.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearFieldLabel()()
{
}

uint64_t ModalityXBeginDictation.applicationName.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.applicationName : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.applicationName.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.applicationName.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
}

uint64_t ModalityXBeginDictation.applicationName.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.applicationName.modify()
{
}

BOOL ModalityXBeginDictation.hasApplicationName.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearApplicationName()()
{
}

uint64_t ModalityXBeginDictation.applicationVersion.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.applicationVersion : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.applicationVersion.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.applicationVersion.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
}

uint64_t ModalityXBeginDictation.applicationVersion.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.applicationVersion.modify()
{
}

BOOL ModalityXBeginDictation.hasApplicationVersion.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearApplicationVersion()()
{
}

void ModalityXBeginDictation.keyboardType.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_162(*v1);
}

uint64_t key path setter for ModalityXBeginDictation.keyboardType : ModalityXBeginDictation(char *a1)
{
  char v2 = *a1;
  return ModalityXBeginDictation.keyboardType.setter(&v2);
}

uint64_t ModalityXBeginDictation.keyboardType.setter(char *a1)
{
  return ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
}

void (*ModalityXBeginDictation.keyboardType.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_296(*v0);
  return ModalityXBeginDictation.keyboardType.modify;
}

void ModalityXBeginDictation.keyboardType.modify()
{
}

{
  unsigned char *v0;
  unsigned char *v1;
  unsigned char *v2;
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_38();
  char v2 = v1;
  uint64_t v4 = *(unsigned char *)(*(void *)v3 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v6 = OUTLINED_FUNCTION_220();
    char v2 = v0;
    uint64_t v7 = ModalityXBeginDictation._StorageClass.init(copying:)(v6);
    OUTLINED_FUNCTION_150(v7);
  }
LABEL_4:
  OUTLINED_FUNCTION_207();
  OUTLINED_FUNCTION_34();
  *char v2 = v4;
  OUTLINED_FUNCTION_37();
  free(v8);
}

BOOL ModalityXBeginDictation.hasKeyboardType.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  OUTLINED_FUNCTION_22();
  return *v1 != 16;
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardType()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v1 = OUTLINED_FUNCTION_87();
    uint64_t v2 = ModalityXBeginDictation._StorageClass.init(copying:)(v1);
    OUTLINED_FUNCTION_43(v2);
  }
  OUTLINED_FUNCTION_12();
  unsigned char *v0 = 16;
}

void ModalityXBeginDictation.keyboardReturnKey.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_162(*v1);
}

uint64_t key path setter for ModalityXBeginDictation.keyboardReturnKey : ModalityXBeginDictation(char *a1)
{
  char v2 = *a1;
  return ModalityXBeginDictation.keyboardReturnKey.setter(&v2);
}

uint64_t ModalityXBeginDictation.keyboardReturnKey.setter(char *a1)
{
  return ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
}

uint64_t ModalityXBeginDictation.keyboardType.setter(char *a1, unsigned char *a2)
{
  char v5 = *a1;
  type metadata accessor for ModalityXBeginDictation(0);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v6 = swift_retain();
    *(void *)(v2 + v3) = ModalityXBeginDictation._StorageClass.init(copying:)(v6);
    swift_release();
  }
  uint64_t result = OUTLINED_FUNCTION_12();
  *a2 = v5;
  return result;
}

void (*ModalityXBeginDictation.keyboardReturnKey.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_296(*v0);
  return ModalityXBeginDictation.keyboardReturnKey.modify;
}

void ModalityXBeginDictation.keyboardReturnKey.modify()
{
}

BOOL ModalityXBeginDictation.hasKeyboardReturnKey.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  OUTLINED_FUNCTION_22();
  return *v1 != 12;
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardReturnKey()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v1 = OUTLINED_FUNCTION_87();
    uint64_t v2 = ModalityXBeginDictation._StorageClass.init(copying:)(v1);
    OUTLINED_FUNCTION_43(v2);
  }
  OUTLINED_FUNCTION_12();
  unsigned char *v0 = 12;
}

uint64_t ModalityXBeginDictation.selectedText.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.selectedText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.selectedText.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.selectedText.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
}

uint64_t ModalityXBeginDictation.selectedText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.selectedText.modify()
{
}

BOOL ModalityXBeginDictation.hasSelectedText.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSelectedText()()
{
}

uint64_t ModalityXBeginDictation.prefixText.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.prefixText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.prefixText.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.prefixText.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
}

uint64_t ModalityXBeginDictation.prefixText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.prefixText.modify()
{
}

BOOL ModalityXBeginDictation.hasPrefixText.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearPrefixText()()
{
}

uint64_t ModalityXBeginDictation.postfixText.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.postfixText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.postfixText.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.postfixText.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
}

uint64_t ModalityXBeginDictation.postfixText.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.postfixText.modify()
{
}

BOOL ModalityXBeginDictation.hasPostfixText.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearPostfixText()()
{
}

uint64_t ModalityXBeginDictation.inlineLmeItems.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter((void (*)(void))type metadata accessor for ModalityXBeginDictation);
}

uint64_t ModalityXBeginRequest.inlineLmeItems.getter(void (*a1)(void))
{
  return swift_bridgeObjectRetain();
}

uint64_t key path setter for ModalityXBeginDictation.inlineLmeItems : ModalityXBeginDictation()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return ModalityXBeginDictation.inlineLmeItems.setter(v0);
}

uint64_t ModalityXBeginDictation.inlineLmeItems.setter(uint64_t a1)
{
  return ModalityXBeginRequest.inlineLmeItems.setter(a1, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
}

uint64_t ModalityXBeginRequest.inlineLmeItems.setter(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t (*a4)(uint64_t), void *a5)
{
  uint64_t v10 = OUTLINED_FUNCTION_167();
  uint64_t v12 = *(int *)(v11(v10) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v13 = OUTLINED_FUNCTION_287();
    a3(v13);
    OUTLINED_FUNCTION_29();
    uint64_t v14 = OUTLINED_FUNCTION_263();
    uint64_t v15 = a4(v14);
    OUTLINED_FUNCTION_240(v15);
  }
  uint64_t v16 = (void *)(*(void *)(v6 + v12) + *a5);
  OUTLINED_FUNCTION_34();
  *uint64_t v16 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t ModalityXBeginDictation.inlineLmeItems.modify(void *a1)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = type metadata accessor for ModalityXBeginDictation(0);
  OUTLINED_FUNCTION_271(v4);
  OUTLINED_FUNCTION_13();
  v3[9] = *v1;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_251();
}

void ModalityXBeginDictation.inlineLmeItems.modify()
{
}

uint64_t ModalityXBeginDictation.languages.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter((void (*)(void))type metadata accessor for ModalityXBeginDictation);
}

uint64_t key path setter for ModalityXBeginDictation.languages : ModalityXBeginDictation()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return ModalityXBeginDictation.languages.setter(v0);
}

uint64_t ModalityXBeginDictation.languages.setter(uint64_t a1)
{
  return ModalityXBeginRequest.inlineLmeItems.setter(a1, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
}

uint64_t ModalityXBeginDictation.languages.modify(void *a1)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = type metadata accessor for ModalityXBeginDictation(0);
  OUTLINED_FUNCTION_271(v4);
  OUTLINED_FUNCTION_13();
  v3[9] = *v1;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_251();
}

void ModalityXBeginDictation.languages.modify()
{
}

uint64_t ModalityXBeginDictation.region.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.region : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.region.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.region.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
}

uint64_t ModalityXBeginDictation.region.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.region.modify()
{
}

BOOL ModalityXBeginDictation.hasRegion.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearRegion()()
{
}

uint64_t ModalityXBeginDictation.activationToken.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken;
  OUTLINED_FUNCTION_22();
  outlined copy of Data?(*(void *)v1, *(void *)(v1 + 8));
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXBeginDictation.activationToken : ModalityXBeginDictation(uint64_t a1)
{
  return ModalityXBeginDictation.activationToken.setter();
}

uint64_t ModalityXBeginDictation.activationToken.setter()
{
  uint64_t v4 = OUTLINED_FUNCTION_41();
  type metadata accessor for ModalityXBeginDictation(v4);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_220();
    *(void *)(v1 + v3) = ModalityXBeginDictation._StorageClass.init(copying:)(v5);
    swift_release();
  }
  uint64_t v6 = (uint64_t *)(*(void *)(v1 + v3)
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  OUTLINED_FUNCTION_34();
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  *uint64_t v6 = v2;
  v6[1] = v0;
  return outlined consume of Data?(v7, v8);
}

void (*ModalityXBeginDictation.activationToken.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  void *v0 = v2;
  v2[11] = v1;
  *((_DWORD *)v2 + 24) = *(_DWORD *)(type metadata accessor for ModalityXBeginDictation(0) + 20);
  OUTLINED_FUNCTION_13();
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  if (v4 >> 60 == 15) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *v1;
  }
  unint64_t v6 = 0xC000000000000000;
  if (v4 >> 60 != 15) {
    unint64_t v6 = v1[1];
  }
  v2[9] = v5;
  v2[10] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXBeginDictation.activationToken.modify;
}

void ModalityXBeginDictation.activationToken.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *(void *)(*v0 + 80);
  if (v4)
  {
    uint64_t v5 = OUTLINED_FUNCTION_338();
    outlined copy of Data._Representation(v5, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for ModalityXBeginDictation._StorageClass(0);
      OUTLINED_FUNCTION_29();
      uint64_t v7 = OUTLINED_FUNCTION_263();
      uint64_t v8 = ModalityXBeginDictation._StorageClass.init(copying:)(v7);
      OUTLINED_FUNCTION_150(v8);
    }
    uint64_t v9 = (uint64_t *)(*(void *)(*(void *)(v1 + 88) + *(int *)(v1 + 96))
                   + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
    OUTLINED_FUNCTION_34();
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    *uint64_t v9 = v2;
    v9[1] = v3;
    outlined consume of Data?(v10, v11);
    outlined consume of Data._Representation(*(void *)(v1 + 72), *(void *)(v1 + 80));
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for ModalityXBeginDictation._StorageClass(0);
      OUTLINED_FUNCTION_29();
      uint64_t v12 = OUTLINED_FUNCTION_263();
      uint64_t v13 = ModalityXBeginDictation._StorageClass.init(copying:)(v12);
      OUTLINED_FUNCTION_150(v13);
    }
    uint64_t v14 = (uint64_t *)(*(void *)(*(void *)(v1 + 88) + *(int *)(v1 + 96))
                    + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
    OUTLINED_FUNCTION_34();
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    *uint64_t v14 = v2;
    v14[1] = v3;
    outlined consume of Data?(v15, v16);
  }
  OUTLINED_FUNCTION_37();
  free(v17);
}

BOOL ModalityXBeginDictation.hasActivationToken.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken;
  OUTLINED_FUNCTION_22();
  return *(void *)(v1 + 8) >> 60 != 15;
}

Swift::Void __swiftcall ModalityXBeginDictation.clearActivationToken()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v1 = OUTLINED_FUNCTION_87();
    uint64_t v2 = ModalityXBeginDictation._StorageClass.init(copying:)(v1);
    OUTLINED_FUNCTION_43(v2);
  }
  OUTLINED_FUNCTION_12();
  uint64_t v3 = *v0;
  unint64_t v4 = v0[1];
  *(_OWORD *)uint64_t v0 = xmmword_256A1CF60;
  outlined consume of Data?(v3, v4);
}

uint64_t ModalityXBeginDictation.censorSpeech.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginDictation.censorSpeech.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
}

void (*ModalityXBeginDictation.censorSpeech.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginDictation.censorSpeech.modify;
}

void ModalityXBeginDictation.censorSpeech.modify()
{
}

BOOL ModalityXBeginDictation.hasCensorSpeech.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearCensorSpeech()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginDictation._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginDictation.speakerIndependentRecognition.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginDictation.speakerIndependentRecognition.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
}

void (*ModalityXBeginDictation.speakerIndependentRecognition.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginDictation.speakerIndependentRecognition.modify;
}

void ModalityXBeginDictation.speakerIndependentRecognition.modify()
{
}

BOOL ModalityXBeginDictation.hasSpeakerIndependentRecognition.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSpeakerIndependentRecognition()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginDictation._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginDictation.saveRequestAudio.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginDictation.saveRequestAudio.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
}

void (*ModalityXBeginDictation.saveRequestAudio.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginDictation.saveRequestAudio.modify;
}

void ModalityXBeginDictation.saveRequestAudio.modify()
{
}

BOOL ModalityXBeginDictation.hasSaveRequestAudio.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSaveRequestAudio()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginDictation._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t ModalityXBeginDictation.keyboardIdentifier.getter()
{
  return ModalityXBeginRequest.foregroundAppID.getter();
}

uint64_t key path setter for ModalityXBeginDictation.keyboardIdentifier : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXBeginDictation.keyboardIdentifier.setter(v1, v2);
}

uint64_t ModalityXBeginDictation.keyboardIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXBeginRequest.foregroundAppID.setter(a1, a2, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
}

uint64_t ModalityXBeginDictation.keyboardIdentifier.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_10((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier;
  OUTLINED_FUNCTION_15();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXBeginDictation.keyboardIdentifier.modify()
{
}

BOOL ModalityXBeginDictation.hasKeyboardIdentifier.getter()
{
  return ModalityXBeginRequest.hasForegroundAppID.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardIdentifier()()
{
}

uint64_t ModalityXBeginDictation.enablePartialResults.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginDictation.enablePartialResults.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
}

void (*ModalityXBeginDictation.enablePartialResults.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginDictation.enablePartialResults.modify;
}

void ModalityXBeginDictation.enablePartialResults.modify()
{
}

BOOL ModalityXBeginDictation.hasEnablePartialResults.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearEnablePartialResults()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginDictation._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

void ModalityXBeginDictation.inputOrigin.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_162(*v1);
}

uint64_t key path setter for ModalityXBeginDictation.inputOrigin : ModalityXBeginDictation(char *a1)
{
  char v2 = *a1;
  return ModalityXBeginDictation.inputOrigin.setter(&v2);
}

uint64_t ModalityXBeginDictation.inputOrigin.setter(char *a1)
{
  return ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
}

void (*ModalityXBeginDictation.inputOrigin.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v1);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_296(*v0);
  return ModalityXBeginDictation.inputOrigin.modify;
}

void ModalityXBeginDictation.inputOrigin.modify()
{
}

BOOL ModalityXBeginDictation.hasInputOrigin.getter()
{
  OUTLINED_FUNCTION_55();
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  OUTLINED_FUNCTION_22();
  return *v1 != 19;
}

Swift::Void __swiftcall ModalityXBeginDictation.clearInputOrigin()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v1 = OUTLINED_FUNCTION_87();
    uint64_t v2 = ModalityXBeginDictation._StorageClass.init(copying:)(v1);
    OUTLINED_FUNCTION_43(v2);
  }
  OUTLINED_FUNCTION_12();
  unsigned char *v0 = 19;
}

uint64_t ModalityXBeginDictation.isAutoPunctuationEnabled.getter()
{
  return ModalityXBeginRequest.enablePartialResults.getter();
}

uint64_t ModalityXBeginDictation.isAutoPunctuationEnabled.setter(char a1)
{
  return ModalityXBeginRequest.enablePartialResults.setter(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
}

void (*ModalityXBeginDictation.isAutoPunctuationEnabled.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_23((uint64_t)v0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_78();
  return ModalityXBeginDictation.isAutoPunctuationEnabled.modify;
}

void ModalityXBeginDictation.isAutoPunctuationEnabled.modify()
{
}

BOOL ModalityXBeginDictation.hasIsAutoPunctuationEnabled.getter()
{
  return ModalityXBeginRequest.hasEnablePartialResults.getter();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearIsAutoPunctuationEnabled()()
{
  if ((OUTLINED_FUNCTION_39() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v0 = OUTLINED_FUNCTION_87();
    uint64_t v1 = ModalityXBeginDictation._StorageClass.init(copying:)(v0);
    OUTLINED_FUNCTION_43(v1);
  }
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_149();
}

uint64_t (*ModalityXBeginDictation.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXCancelRequest.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_260();
  uint64_t v2 = v1(v0);
  if (OUTLINED_FUNCTION_50(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXCancelRequest.requestID : ModalityXCancelRequest()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXCancelRequest.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t result;

  uint64_t v3 = OUTLINED_FUNCTION_41();
  v4(v3);
  uint64_t result = OUTLINED_FUNCTION_319();
  unsigned __int8 *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXCancelRequest.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXCancelRequest(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXCancelRequest.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_260();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_139(*(int *)(v2 + 20));
}

Swift::Void __swiftcall ModalityXCancelRequest.clearRequestID()()
{
}

void ModalityXCancelRequest.reason.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_176();
  uint64_t v2 = type metadata accessor for ModalityXCancelRequest(v1);
  OUTLINED_FUNCTION_162(*(unsigned char *)(v0 + *(int *)(v2 + 24)));
}

uint64_t key path setter for ModalityXCancelRequest.reason : ModalityXCancelRequest(char *a1)
{
  char v2 = *a1;
  return ModalityXCancelRequest.reason.setter(&v2);
}

uint64_t ModalityXCancelRequest.reason.setter(char *a1)
{
  return ModalityXCancelRequest.reason.setter(a1, type metadata accessor for ModalityXCancelRequest);
}

uint64_t (*ModalityXCancelRequest.reason.modify(void *a1))()
{
  uint64_t v3 = OUTLINED_FUNCTION_155(a1);
  uint64_t v4 = *(int *)(type metadata accessor for ModalityXCancelRequest(v3) + 24);
  *(_DWORD *)(v1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(v2 + v4);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  OUTLINED_FUNCTION_169(v5);
  return ModalityXCancelRequest.reason.modify;
}

BOOL ModalityXCancelRequest.hasReason.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXCancelRequest(0) + 24)) != 3;
}

Swift::Void __swiftcall ModalityXCancelRequest.clearReason()()
{
  uint64_t v0 = type metadata accessor for ModalityXCancelRequest(0);
  OUTLINED_FUNCTION_297(*(int *)(v0 + 24));
}

uint64_t (*ModalityXCancelRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioFrame.requestID.getter()
{
  return ModalityXAudioFrame.requestID.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_258();
  uint64_t v2 = v1(v0);
  if (OUTLINED_FUNCTION_50(*(int *)(v2 + 24))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXAudioFrame.requestID : ModalityXAudioFrame()
{
  return ModalityXAudioFrame.requestID.setter();
}

uint64_t ModalityXAudioFrame.requestID.setter()
{
  return ModalityXAudioFrame.requestID.setter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t result;

  uint64_t v3 = OUTLINED_FUNCTION_41();
  v4(v3);
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXAudioFrame.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXAudioFrame(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 24))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXAudioFrame.hasRequestID.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_258();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_139(*(int *)(v2 + 24));
}

Swift::Void __swiftcall ModalityXAudioFrame.clearRequestID()()
{
}

uint64_t ModalityXAudioFrame.audio.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXAudioFrame.audio.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ModalityXAudioFrame.audio.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioFrame.lastFrame.getter()
{
  return ModalityXAudioFrame.lastFrame.getter(type metadata accessor for ModalityXAudioFrame);
}

uint64_t ModalityXAudioFrame.lastFrame.setter()
{
  return ModalityXAudioFrame.lastFrame.setter();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  uint64_t v2 = OUTLINED_FUNCTION_167();
  uint64_t result = v3(v2);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v0;
  return result;
}

uint64_t (*ModalityXAudioFrame.lastFrame.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXAudioFrame(v1);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 28));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXAudioFrame.hasLastFrame.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioFrame(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXAudioFrame.clearLastFrame()()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioFrame(0);
  OUTLINED_FUNCTION_170(*(int *)(v0 + 28));
}

uint64_t ModalityXAudioFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXAudioFrame.unknownFields.setter()
{
  return ModalityXServerBoundFrame.unknownFields.setter();
}

uint64_t (*ModalityXAudioFrame.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXAudioFrame(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXASRResult.requestID.getter()
{
  return ModalityXAudioFrame.requestID.getter();
}

uint64_t key path setter for ModalityXASRResult.requestID : ModalityXASRResult()
{
  return ModalityXASRResult.requestID.setter();
}

uint64_t ModalityXASRResult.requestID.setter()
{
  return ModalityXAudioFrame.requestID.setter();
}

uint64_t ModalityXASRResult.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXASRResult(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 24))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXASRResult.hasRequestID.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXASRResult.clearRequestID()()
{
}

uint64_t ModalityXAudioFrame.clearRequestID()()
{
  uint64_t v1 = OUTLINED_FUNCTION_258();
  v2(v1);
  uint64_t result = OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t ModalityXASRResult.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
}

uint64_t ModalityXASRResult.payload.setter(uint64_t a1)
{
  return outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
}

uint64_t (*ModalityXASRResult.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXASRResult.recognitionCandidate.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v10);
  uint64_t v5 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 != 1) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(type metadata accessor for ModalityXRecognitionCandidate(0) + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v0 + v8) = static ModalityXRecognitionCandidate._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t ModalityXASRResult.recognitionCandidate.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_143(a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, type metadata accessor for ModalityXASRResult.OneOf_Payload);
}

void ModalityXASRResult.recognitionCandidate.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXRecognitionCandidate(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    int v13 = OUTLINED_FUNCTION_74();
    if (v13 != 1)
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_10;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v14 = *(int *)(v6 + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v8 + v14) = static ModalityXRecognitionCandidate._StorageClass.defaultInstance;
  swift_retain();
LABEL_10:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXASRResult.finalSpeechRecognitionResponse.getter()
{
  OUTLINED_FUNCTION_75();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_0(v4, v10);
  uint64_t v5 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  OUTLINED_FUNCTION_8_0(v5);
  if (v6)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    int v7 = OUTLINED_FUNCTION_77();
    if (v7 == 1) {
      return OUTLINED_FUNCTION_76();
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v9 = *(int *)(type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0) + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v0 + v9) = static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance;
  return swift_retain();
}

uint64_t ModalityXASRResult.finalSpeechRecognitionResponse.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_137(a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXASRResult.OneOf_Payload);
}

uint64_t ModalityXServerBoundFrame.sessionMetadata.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, a2);
  outlined init with take of ModalityXSessionMetadata();
  uint64_t v6 = a4(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = OUTLINED_FUNCTION_280();

  return __swift_storeEnumTagSinglePayload(v7, v8, v9, v6);
}

void ModalityXASRResult.finalSpeechRecognitionResponse.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  uint64_t v5 = OUTLINED_FUNCTION_32((uint64_t)v4);
  uint64_t v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(v5);
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = OUTLINED_FUNCTION_69((uint64_t)v9);
  OUTLINED_FUNCTION_11((uint64_t)v10);
  uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  OUTLINED_FUNCTION_6_0(v11);
  if (v12)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    int v13 = OUTLINED_FUNCTION_74();
    if (v13 == 1)
    {
      OUTLINED_FUNCTION_72();
      goto LABEL_10;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  UnknownStorage.init()();
  uint64_t v14 = *(int *)(v6 + 20);
  if (one-time initialization token for defaultInstance != -1) {
    swift_once();
  }
  *(void *)(v8 + v14) = static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance;
  swift_retain();
LABEL_10:
  OUTLINED_FUNCTION_37();
}

{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t vars8;

  OUTLINED_FUNCTION_20();
  if (v5)
  {
    OUTLINED_FUNCTION_73();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  else
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_4_0();
  }
  free(v3);
  free(v2);
  free(v1);

  free(v0);
}

uint64_t ModalityXASRResult.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXASRResult.unknownFields.setter()
{
  return ModalityXServerBoundFrame.unknownFields.setter();
}

uint64_t (*ModalityXASRResult.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXASRResult(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXASRResult.OneOf_Payload.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for ModalityXRecognitionCandidate(0);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_131();
  type metadata accessor for ModalityXASRResult.OneOf_Payload(v5);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_94();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload, ModalityXASRResult.OneOf_Payload));
  uint64_t v9 = OUTLINED_FUNCTION_7_0(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_231();
  outlined init with copy of ModalityXSessionMetadata();
  outlined init with copy of ModalityXSessionMetadata();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    outlined init with copy of ModalityXSessionMetadata();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_146();
LABEL_7:
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_8;
    }
  }
  else
  {
    outlined init with copy of ModalityXSessionMetadata();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_317();
      static ModalityXRecognitionCandidate.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      goto LABEL_7;
    }
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload, ModalityXASRResult.OneOf_Payload));
LABEL_8:
  OUTLINED_FUNCTION_16();
}

uint64_t ModalityXSpeechProfileRebuildNeeded.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXSpeechProfileRebuildNeeded.requestID : ModalityXSpeechProfileRebuildNeeded()
{
  return ModalityXSpeechProfileRebuildNeeded.requestID.setter();
}

uint64_t ModalityXSpeechProfileRebuildNeeded.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXSpeechProfileRebuildNeeded.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSpeechProfileRebuildNeeded.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileRebuildNeeded.clearRequestID()()
{
}

uint64_t ModalityXCancelRequest.clearRequestID()()
{
  uint64_t v1 = OUTLINED_FUNCTION_260();
  v2(v1);
  uint64_t result = OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t (*ModalityXSpeechProfileRebuildNeeded.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXProcessingError.code.getter()
{
  type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_172();
  if (v0[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v0;
  }
}

void ModalityXProcessingError.code.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXProcessingError(v1);
  OUTLINED_FUNCTION_172();
  *(_DWORD *)uint64_t v2 = v0;
  *(unsigned char *)(v2 + 4) = 0;
}

uint64_t (*ModalityXProcessingError.code.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXProcessingError(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return ModalityXProcessingError.code.modify;
}

uint64_t ModalityXProcessingError.code.modify(uint64_t result)
{
  uint64_t v1 = *(void *)result + *(int *)(result + 12);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)(result + 8);
  *(unsigned char *)(v1 + 4) = 0;
  return result;
}

BOOL ModalityXProcessingError.hasCode.getter()
{
  type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_172();
  return (*(unsigned char *)(v0 + 4) & 1) == 0;
}

Swift::Void __swiftcall ModalityXProcessingError.clearCode()()
{
  type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_172();
  *(_DWORD *)uint64_t v0 = 0;
  *(unsigned char *)(v0 + 4) = 1;
}

uint64_t ModalityXProcessingError.errorDescription.getter()
{
  return ModalityXAudioFrame.requestID.getter();
}

uint64_t key path setter for ModalityXProcessingError.errorDescription : ModalityXProcessingError()
{
  return ModalityXProcessingError.errorDescription.setter();
}

uint64_t ModalityXProcessingError.errorDescription.setter()
{
  return ModalityXAudioFrame.requestID.setter();
}

uint64_t ModalityXProcessingError.errorDescription.modify(void *a1)
{
  a1[2] = v1;
  uint64_t v3 = type metadata accessor for ModalityXProcessingError(0);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 24))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXProcessingError.hasErrorDescription.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXProcessingError.clearErrorDescription()()
{
}

void ModalityXProcessingError.errorSource.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_176();
  uint64_t v2 = type metadata accessor for ModalityXProcessingError(v1);
  OUTLINED_FUNCTION_162(*(unsigned char *)(v0 + *(int *)(v2 + 28)));
}

uint64_t key path setter for ModalityXProcessingError.errorSource : ModalityXProcessingError(char *a1)
{
  char v2 = *a1;
  return ModalityXProcessingError.errorSource.setter(&v2);
}

uint64_t ModalityXProcessingError.errorSource.setter(char *a1)
{
  return ModalityXSessionMetadata.userInterfaceIdiom.setter(a1, type metadata accessor for ModalityXProcessingError);
}

uint64_t ModalityXSessionMetadata.userInterfaceIdiom.setter(char *a1, uint64_t (*a2)(void))
{
  char v3 = *a1;
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 28)) = v3;
  return result;
}

uint64_t (*ModalityXProcessingError.errorSource.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXProcessingError(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 3) {
    LOBYTE(v4) = 0;
  }
  OUTLINED_FUNCTION_169(v4);
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXProcessingError.hasErrorSource.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXProcessingError(0) + 28)) != 3;
}

Swift::Void __swiftcall ModalityXProcessingError.clearErrorSource()()
{
  uint64_t v0 = type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_297(*(int *)(v0 + 28));
}

uint64_t ModalityXProcessingError.requestID.getter()
{
  return ModalityXSessionMetadata.language.getter();
}

uint64_t key path setter for ModalityXProcessingError.requestID : ModalityXProcessingError()
{
  return ModalityXProcessingError.requestID.setter();
}

uint64_t ModalityXProcessingError.requestID.setter()
{
  return ModalityXSessionMetadata.language.setter();
}

uint64_t ModalityXProcessingError.requestID.modify(void *a1)
{
  a1[2] = v1;
  uint64_t v3 = type metadata accessor for ModalityXProcessingError(0);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 32))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXProcessingError.hasRequestID.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter();
}

Swift::Void __swiftcall ModalityXProcessingError.clearRequestID()()
{
}

uint64_t ModalityXSessionMetadata.clearLanguage()()
{
  uint64_t v1 = OUTLINED_FUNCTION_261();
  v2(v1);
  uint64_t result = OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t (*ModalityXProcessingError.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRequestMitigated.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXRequestMitigated.requestID : ModalityXRequestMitigated()
{
  return ModalityXRequestMitigated.requestID.setter();
}

uint64_t ModalityXRequestMitigated.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXRequestMitigated.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXRequestMitigated(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXRequestMitigated.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXRequestMitigated.clearRequestID()()
{
}

void ModalityXRequestMitigated.mitigationType.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_176();
  uint64_t v2 = type metadata accessor for ModalityXRequestMitigated(v1);
  OUTLINED_FUNCTION_162(*(unsigned char *)(v0 + *(int *)(v2 + 24)));
}

uint64_t key path setter for ModalityXRequestMitigated.mitigationType : ModalityXRequestMitigated(char *a1)
{
  char v2 = *a1;
  return ModalityXRequestMitigated.mitigationType.setter(&v2);
}

uint64_t ModalityXRequestMitigated.mitigationType.setter(char *a1)
{
  return ModalityXCancelRequest.reason.setter(a1, type metadata accessor for ModalityXRequestMitigated);
}

uint64_t ModalityXCancelRequest.reason.setter(char *a1, uint64_t (*a2)(void))
{
  char v3 = *a1;
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 24)) = v3;
  return result;
}

uint64_t (*ModalityXRequestMitigated.mitigationType.modify(void *a1))()
{
  uint64_t v3 = OUTLINED_FUNCTION_155(a1);
  uint64_t v4 = *(int *)(type metadata accessor for ModalityXRequestMitigated(v3) + 24);
  *(_DWORD *)(v1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(v2 + v4);
  if (v5 == 8) {
    LOBYTE(v5) = 0;
  }
  OUTLINED_FUNCTION_169(v5);
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXRequestMitigated.hasMitigationType.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXRequestMitigated(0) + 24)) != 8;
}

Swift::Void __swiftcall ModalityXRequestMitigated.clearMitigationType()()
{
  uint64_t v0 = type metadata accessor for ModalityXRequestMitigated(0);
  OUTLINED_FUNCTION_321(*(int *)(v0 + 24));
}

uint64_t (*ModalityXRequestMitigated.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRequestComplete.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXRequestComplete.requestID : ModalityXRequestComplete()
{
  return ModalityXRequestComplete.requestID.setter();
}

uint64_t ModalityXRequestComplete.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXRequestComplete.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXRequestComplete(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXRequestComplete.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXRequestComplete.clearRequestID()()
{
}

uint64_t (*ModalityXRequestComplete.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfileBuildRequest.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXSpeechProfileBuildRequest.requestID : ModalityXSpeechProfileBuildRequest()
{
  return ModalityXSpeechProfileBuildRequest.requestID.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_156(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSpeechProfileBuildRequest.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearRequestID()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.getter@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest, a1);
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXSpeechProfileBuildRequest, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData);
}

void ModalityXSpeechProfileBuildRequest.sourceData.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OUTLINED_FUNCTION_315((uint64_t)v8);
  uint64_t v10 = type metadata accessor for ModalityXSpeechProfileBuildRequest(v9);
  OUTLINED_FUNCTION_248(v10);
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v11)
  {
    *uint64_t v8 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

uint64_t ModalityXSpeechProfileBuildRequest.hasSourceData.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasSourceData.getter((uint64_t)&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileSourceData);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearSourceData()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.locale.getter()
{
  return ModalityXSpeechProfileBuildRequest.locale.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_256();
  uint64_t v2 = v1(v0);
  if (OUTLINED_FUNCTION_50(*(int *)(v2 + 28))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXSpeechProfileBuildRequest.locale : ModalityXSpeechProfileBuildRequest()
{
  return ModalityXSpeechProfileBuildRequest.locale.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.locale.setter()
{
  return ModalityXSpeechProfileBuildRequest.locale.setter();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t result;

  uint64_t v3 = OUTLINED_FUNCTION_41();
  v4(v3);
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXSpeechProfileBuildRequest.locale.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_156(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 28))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSpeechProfileBuildRequest.hasLocale.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasLocale.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_256();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_139(*(int *)(v2 + 28));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearLocale()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.phoneSetVersion.getter()
{
  return ModalityXSessionMetadata.language.getter();
}

uint64_t key path setter for ModalityXSpeechProfileBuildRequest.phoneSetVersion : ModalityXSpeechProfileBuildRequest()
{
  return ModalityXSpeechProfileBuildRequest.phoneSetVersion.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.phoneSetVersion.setter()
{
  return ModalityXSessionMetadata.language.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.phoneSetVersion.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_156(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 32))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSpeechProfileBuildRequest.hasPhoneSetVersion.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearPhoneSetVersion()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter()
{
  return ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  uint64_t v0 = OUTLINED_FUNCTION_259();
  uint64_t v2 = v1(v0);
  uint64_t v3 = OUTLINED_FUNCTION_81(*(int *)(v2 + 36));
  outlined copy of Data?(v3, v4);
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXSpeechProfileBuildRequest.existingLanguageProfile : ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter()
{
  return ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_41();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_142(*(int *)(v2 + 36));
}

uint64_t (*ModalityXSpeechProfileBuildRequest.existingLanguageProfile.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_156(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 36));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_259();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_80(*(int *)(v2 + 36));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.existingPronunciationCache.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  uint64_t v1 = OUTLINED_FUNCTION_81(*(int *)(v0 + 40));
  outlined copy of Data?(v1, v2);
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXSpeechProfileBuildRequest.existingPronunciationCache : ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.existingPronunciationCache.setter();
}

uint64_t ModalityXSpeechProfileBuildRequest.existingPronunciationCache.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_41();
  uint64_t v1 = type metadata accessor for ModalityXSpeechProfileBuildRequest(v0);
  return OUTLINED_FUNCTION_142(*(int *)(v1 + 40));
}

uint64_t (*ModalityXSpeechProfileBuildRequest.existingPronunciationCache.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_156(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 40));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXSpeechProfileBuildRequest.hasExistingPronunciationCache.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  return OUTLINED_FUNCTION_80(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearExistingPronunciationCache()()
{
  uint64_t v1 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  OUTLINED_FUNCTION_247(*(int *)(v1 + 40));
  _OWORD *v0 = xmmword_256A1CF60;
}

uint64_t (*ModalityXSpeechProfileBuildRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXStreamingSpeechProfileBegin.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileBegin.requestID : ModalityXStreamingSpeechProfileBegin()
{
  return ModalityXStreamingSpeechProfileBegin.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_264(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearRequestID()()
{
}

uint64_t ModalityXStreamingSpeechProfileBegin.locale.getter()
{
  return ModalityXAudioFrame.requestID.getter();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileBegin.locale : ModalityXStreamingSpeechProfileBegin()
{
  return ModalityXStreamingSpeechProfileBegin.locale.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.locale.setter()
{
  return ModalityXAudioFrame.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.locale.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_264(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 24))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasLocale.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearLocale()()
{
}

uint64_t ModalityXStreamingSpeechProfileBegin.phoneSetVersion.getter()
{
  return ModalityXSpeechProfileBuildRequest.locale.getter();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileBegin.phoneSetVersion : ModalityXStreamingSpeechProfileBegin()
{
  return ModalityXStreamingSpeechProfileBegin.phoneSetVersion.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.phoneSetVersion.setter()
{
  return ModalityXSpeechProfileBuildRequest.locale.setter();
}

uint64_t ModalityXStreamingSpeechProfileBegin.phoneSetVersion.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_264(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 28))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasPhoneSetVersion.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasLocale.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearPhoneSetVersion()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.clearLocale()()
{
  uint64_t v1 = OUTLINED_FUNCTION_256();
  v2(v1);
  uint64_t result = OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

uint64_t (*ModalityXStreamingSpeechProfileBegin.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXStreamingSpeechProfileAddData.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileAddData.requestID : ModalityXStreamingSpeechProfileAddData()
{
  return ModalityXStreamingSpeechProfileAddData.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileAddData.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileAddData.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_265(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXStreamingSpeechProfileAddData.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearRequestID()()
{
}

uint64_t ModalityXStreamingSpeechProfileAddData.sourceData.getter@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData, a1);
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.getter@<X0>(uint64_t (*a1)(uint64_t)@<X0>, void *a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  uint64_t v7 = OUTLINED_FUNCTION_7_0(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_132();
  uint64_t v9 = a1(v8);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2 + *(int *)(v9 + 24), v3, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  uint64_t v10 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  OUTLINED_FUNCTION_9(v3, 1, v10);
  if (!v11) {
    return outlined init with take of ModalityXSessionMetadata();
  }
  *a2 = MEMORY[0x263F8EE78];
  UnknownStorage.init()();
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v3, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
}

uint64_t ModalityXStreamingSpeechProfileAddData.sourceData.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXStreamingSpeechProfileAddData, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData);
}

void ModalityXStreamingSpeechProfileAddData.sourceData.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OUTLINED_FUNCTION_315((uint64_t)v8);
  uint64_t v10 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v9);
  OUTLINED_FUNCTION_248(v10);
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v11)
  {
    *uint64_t v8 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

uint64_t ModalityXStreamingSpeechProfileAddData.hasSourceData.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasSourceData.getter((uint64_t)&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t ModalityXSpeechProfileBuildRequest.hasSourceData.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  OUTLINED_FUNCTION_306();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
  uint64_t v10 = OUTLINED_FUNCTION_7_0(v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_229();
  uint64_t v12 = v4(v11);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v3 + *(int *)(v12 + 24), v6, v5);
  uint64_t v13 = a3(0);
  OUTLINED_FUNCTION_9(v6, 1, v13);
  if (v14) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = 1;
  }
  uint64_t v16 = OUTLINED_FUNCTION_118();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v16, v17);
  return v15;
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearSourceData()()
{
}

uint64_t ModalityXSpeechProfileBuildRequest.clearSourceData()(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 24);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v6, a2);
  uint64_t v7 = a3(0);

  return __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
}

uint64_t ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  uint64_t v1 = OUTLINED_FUNCTION_81(*(int *)(v0 + 28));
  outlined copy of Data?(v1, v2);
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileAddData.existingLanguageProfile : ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  return ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.setter();
}

uint64_t ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_41();
  uint64_t v1 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v0);
  return OUTLINED_FUNCTION_142(*(int *)(v1 + 28));
}

uint64_t (*ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_265(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 28));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXStreamingSpeechProfileAddData.hasExistingLanguageProfile.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  return OUTLINED_FUNCTION_80(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearExistingLanguageProfile()()
{
  uint64_t v1 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  OUTLINED_FUNCTION_247(*(int *)(v1 + 28));
  _OWORD *v0 = xmmword_256A1CF60;
}

uint64_t ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter()
{
  return ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  uint64_t v0 = OUTLINED_FUNCTION_257();
  uint64_t v2 = v1(v0);
  uint64_t v3 = OUTLINED_FUNCTION_81(*(int *)(v2 + 32));
  outlined copy of Data?(v3, v4);
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileAddData.existingPronunciationCache : ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  return ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter();
}

uint64_t ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter()
{
  return ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_41();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_142(*(int *)(v2 + 32));
}

uint64_t (*ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_265(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 32));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter()
{
  return ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_257();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_80(*(int *)(v2 + 32));
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()()
{
}

uint64_t (*ModalityXStreamingSpeechProfileAddData.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXStreamingSpeechProfileCommit.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXStreamingSpeechProfileCommit.requestID : ModalityXStreamingSpeechProfileCommit()
{
  return ModalityXStreamingSpeechProfileCommit.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileCommit.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXStreamingSpeechProfileCommit.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXStreamingSpeechProfileCommit.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileCommit.clearRequestID()()
{
}

uint64_t (*ModalityXStreamingSpeechProfileCommit.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfileBuildResponse.requestID.getter()
{
  return ModalityXCancelRequest.requestID.getter();
}

uint64_t key path setter for ModalityXSpeechProfileBuildResponse.requestID : ModalityXSpeechProfileBuildResponse()
{
  return ModalityXSpeechProfileBuildResponse.requestID.setter();
}

uint64_t ModalityXSpeechProfileBuildResponse.requestID.setter()
{
  return ModalityXCancelRequest.requestID.setter();
}

uint64_t ModalityXSpeechProfileBuildResponse.requestID.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_266(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

uint64_t ModalityXSessionMetadata.language.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)(a1[2] + *((int *)a1 + 6));
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    void *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

BOOL ModalityXSpeechProfileBuildResponse.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearRequestID()()
{
}

uint64_t ModalityXSpeechProfileBuildResponse.error.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  uint64_t v5 = OUTLINED_FUNCTION_7_0(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = OUTLINED_FUNCTION_132();
  uint64_t v7 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v6);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1 + *(int *)(v7 + 24), v2, &demangling cache variable for type metadata for ModalityXProcessingError?);
  uint64_t v8 = type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_9(v2, 1, v8);
  if (!v9) {
    return outlined init with take of ModalityXSessionMetadata();
  }
  UnknownStorage.init()();
  uint64_t v10 = a1 + *(int *)(v8 + 20);
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  OUTLINED_FUNCTION_314();
  *(unsigned char *)(a1 + v11) = 3;
  OUTLINED_FUNCTION_86(*(int *)(v8 + 32));
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, &demangling cache variable for type metadata for ModalityXProcessingError?);
}

uint64_t ModalityXSpeechProfileBuildResponse.error.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXSpeechProfileBuildResponse, &demangling cache variable for type metadata for ModalityXProcessingError?, (uint64_t)type metadata accessor for ModalityXProcessingError, (void (*)(void))type metadata accessor for ModalityXProcessingError);
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.setter(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v8 = a2(0);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v5 + *(int *)(v8 + 24), a3);
  outlined init with take of ModalityXSessionMetadata();
  a5(0);
  uint64_t v9 = OUTLINED_FUNCTION_280();

  return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
}

void ModalityXSpeechProfileBuildResponse.error.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_320();
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = type metadata accessor for ModalityXProcessingError(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  uint64_t v9 = OUTLINED_FUNCTION_315((uint64_t)v8);
  uint64_t v10 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v9);
  OUTLINED_FUNCTION_301(*(int *)(v10 + 24));
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v11)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v8[*(int *)(v5 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    OUTLINED_FUNCTION_299();
    v8[v13] = 3;
    OUTLINED_FUNCTION_168(*(int *)(v5 + 32));
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

uint64_t ModalityXSpeechProfileBuildResponse.hasError.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasSourceData.getter((uint64_t)&demangling cache variable for type metadata for ModalityXProcessingError?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXProcessingError);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearError()()
{
}

uint64_t ModalityXSpeechProfileBuildResponse.incompleteProfile.getter()
{
  return ModalityXAudioFrame.lastFrame.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t ModalityXAudioFrame.lastFrame.getter(uint64_t (*a1)(void))
{
  return *(unsigned char *)(v1 + *(int *)(a1(0) + 28)) & 1;
}

uint64_t ModalityXSpeechProfileBuildResponse.incompleteProfile.setter()
{
  return ModalityXAudioFrame.lastFrame.setter();
}

uint64_t (*ModalityXSpeechProfileBuildResponse.incompleteProfile.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v1);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 28));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXSpeechProfileBuildResponse.hasIncompleteProfile.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearIncompleteProfile()()
{
  uint64_t v0 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  OUTLINED_FUNCTION_170(*(int *)(v0 + 28));
}

uint64_t ModalityXSpeechProfileBuildResponse.languageProfile.getter()
{
  return ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter();
}

uint64_t key path setter for ModalityXSpeechProfileBuildResponse.languageProfile : ModalityXSpeechProfileBuildResponse(uint64_t a1)
{
  return ModalityXSpeechProfileBuildResponse.languageProfile.setter();
}

uint64_t ModalityXSpeechProfileBuildResponse.languageProfile.setter()
{
  return ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter();
}

uint64_t (*ModalityXSpeechProfileBuildResponse.languageProfile.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_266(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 32));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

BOOL ModalityXSpeechProfileBuildResponse.hasLanguageProfile.getter()
{
  return ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearLanguageProfile()()
{
}

double ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()()
{
  uint64_t v1 = OUTLINED_FUNCTION_257();
  uint64_t v3 = v2(v1);
  OUTLINED_FUNCTION_247(*(int *)(v3 + 32));
  double result = 0.0;
  _OWORD *v0 = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXSpeechProfileBuildResponse.pronunciationCache.getter()
{
  return ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter();
}

uint64_t key path setter for ModalityXSpeechProfileBuildResponse.pronunciationCache : ModalityXSpeechProfileBuildResponse(uint64_t a1)
{
  return ModalityXSpeechProfileBuildResponse.pronunciationCache.setter();
}

uint64_t ModalityXSpeechProfileBuildResponse.pronunciationCache.setter()
{
  return ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter();
}

uint64_t (*ModalityXSpeechProfileBuildResponse.pronunciationCache.modify(uint64_t a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_266(a1);
  uint64_t v3 = OUTLINED_FUNCTION_40(*(int *)(v2 + 36));
  unint64_t v6 = 0xC000000000000000;
  if (!(!v8 & v7)) {
    unint64_t v6 = v4;
  }
  void *v1 = v5;
  v1[1] = v6;
  outlined copy of Data?(v3, v4);
  return ModalityXSpeechProfile.languageProfile.modify;
}

uint64_t ModalityXSpeechProfile.languageProfile.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2] + *((int *)a1 + 6);
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)v3;
  unint64_t v6 = *(void *)(v3 + 8);
  if (a2)
  {
    uint64_t v7 = OUTLINED_FUNCTION_52();
    outlined copy of Data._Representation(v7, v8);
    outlined consume of Data?(v5, v6);
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
    uint64_t v9 = OUTLINED_FUNCTION_52();
    return outlined consume of Data._Representation(v9, v10);
  }
  else
  {
    uint64_t result = outlined consume of Data?(*(void *)v3, *(void *)(v3 + 8));
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
  }
  return result;
}

BOOL ModalityXSpeechProfileBuildResponse.hasPronunciationCache.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearPronunciationCache()()
{
}

double ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()()
{
  uint64_t v1 = OUTLINED_FUNCTION_259();
  uint64_t v3 = v2(v1);
  OUTLINED_FUNCTION_247(*(int *)(v3 + 36));
  double result = 0.0;
  _OWORD *v0 = xmmword_256A1CF60;
  return result;
}

uint64_t ModalityXSessionMetadata.unknownFields.getter()
{
  OUTLINED_FUNCTION_176();
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_67();

  return v1(v0);
}

uint64_t ModalityXSessionMetadata.unknownFields.setter()
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_52();

  return v1(v0);
}

uint64_t (*ModalityXSpeechProfileBuildResponse.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

unint64_t static ModalityXServerBoundFrame.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(19);
}

uint64_t static ModalityXServerBoundFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXServerBoundFrame._protobuf_nameMap, a1);
}

uint64_t ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        uint64_t v5 = OUTLINED_FUNCTION_19();
        closure #1 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v5, v6, v7, v8);
        break;
      case 2:
        uint64_t v9 = OUTLINED_FUNCTION_19();
        closure #2 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v9, v10, v11, v12);
        break;
      case 3:
        uint64_t v13 = OUTLINED_FUNCTION_19();
        closure #3 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v13, v14, v15, v16);
        break;
      case 4:
        uint64_t v17 = OUTLINED_FUNCTION_19();
        closure #4 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v17, v18, v19, v20);
        break;
      case 5:
        uint64_t v21 = OUTLINED_FUNCTION_19();
        closure #5 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v21, v22, v23, v24);
        break;
      case 6:
        uint64_t v25 = OUTLINED_FUNCTION_19();
        closure #6 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v25, v26, v27, v28);
        break;
      case 7:
        uint64_t v29 = OUTLINED_FUNCTION_19();
        closure #7 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v29, v30, v31, v32);
        break;
      case 8:
        uint64_t v33 = OUTLINED_FUNCTION_19();
        closure #8 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v33, v34, v35, v36);
        break;
      case 9:
        uint64_t v37 = OUTLINED_FUNCTION_19();
        closure #9 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v37, v38, v39, v40);
        break;
      case 10:
        uint64_t v41 = OUTLINED_FUNCTION_19();
        closure #10 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v41, v42, v43, v44);
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXSessionMetadata(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSessionMetadata?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload())
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #2 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXBeginRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXBeginRequest?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginRequest?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginRequest?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #3 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXAudioFrame(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioFrame?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXAudioFrame?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXAudioFrame?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #4 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfile(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfile?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #5 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXCancelRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXCancelRequest?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXCancelRequest?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXCancelRequest?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #6 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXBeginDictation(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXBeginDictation?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginDictation?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginDictation?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #7 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #8 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #9 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #10 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t ModalityXServerBoundFrame.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_252();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_175(v3, v17);
  uint64_t v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_161(v4);
  if (!v5)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = OUTLINED_FUNCTION_14();
        closure #2 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v10);
        goto LABEL_12;
      case 2u:
        uint64_t v7 = OUTLINED_FUNCTION_14();
        closure #3 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v7);
        goto LABEL_12;
      case 3u:
        uint64_t v11 = OUTLINED_FUNCTION_14();
        closure #4 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v11);
        goto LABEL_12;
      case 4u:
        uint64_t v8 = OUTLINED_FUNCTION_14();
        closure #5 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v8);
        goto LABEL_12;
      case 5u:
        uint64_t v12 = OUTLINED_FUNCTION_14();
        closure #6 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v12);
        goto LABEL_12;
      case 6u:
        uint64_t v13 = OUTLINED_FUNCTION_14();
        closure #7 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v13);
        goto LABEL_12;
      case 7u:
        uint64_t v14 = OUTLINED_FUNCTION_14();
        closure #8 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v14);
        goto LABEL_12;
      case 8u:
        uint64_t v16 = OUTLINED_FUNCTION_14();
        closure #9 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v16);
        goto LABEL_15;
      case 9u:
        uint64_t v9 = OUTLINED_FUNCTION_14();
        closure #10 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v9);
LABEL_15:
        if (v0) {
          return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        }
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        break;
      default:
        uint64_t v6 = OUTLINED_FUNCTION_14();
        closure #1 in ModalityXServerBoundFrame.traverse<A>(visitor:)(v6);
LABEL_12:
        uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        if (!v0) {
          break;
        }
        return result;
    }
  }
  type metadata accessor for ModalityXServerBoundFrame(0);
  return OUTLINED_FUNCTION_224();
}

uint64_t closure #1 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXSessionMetadata(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXBeginRequest(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #3 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXAudioFrame(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #4 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfile(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #5 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXCancelRequest(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #6 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXBeginDictation(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #7 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #8 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #9 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #10 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

void static ModalityXServerBoundFrame.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v38 = OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_48(v5, v38);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v15 = OUTLINED_FUNCTION_241(v7, v8, v9, v10, v11, v12, v13, v14, v39);
  uint64_t v16 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(v15);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_111();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload?, ModalityXServerBoundFrame.OneOf_Payload?));
  uint64_t v19 = (uint64_t (*)(uint64_t))(v18 - 8);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_59();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  uint64_t v21 = OUTLINED_FUNCTION_7_0(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_232();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_343();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_181(v24, v25, v26, v27, v28, v29, v30, v31, v40);
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_250();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, (uint64_t)v19, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_9(v1, 1, v16);
  if (v32)
  {
    OUTLINED_FUNCTION_344();
    OUTLINED_FUNCTION_289();
    OUTLINED_FUNCTION_9((uint64_t)v19, 1, v16);
    if (v32)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_11:
      type metadata accessor for ModalityXServerBoundFrame(0);
      uint64_t v35 = OUTLINED_FUNCTION_119();
      v19(v35);
      uint64_t v36 = OUTLINED_FUNCTION_185();
      v19(v36);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      OUTLINED_FUNCTION_324();
      uint64_t v37 = *(void (**)(void))(v1 + 8);
      OUTLINED_FUNCTION_134();
      v37();
      OUTLINED_FUNCTION_134();
      v37();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v2, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_9((uint64_t)v19, 1, v16);
  if (v32)
  {
    OUTLINED_FUNCTION_344();
    OUTLINED_FUNCTION_289();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_9:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload?, ModalityXServerBoundFrame.OneOf_Payload?));
    goto LABEL_12;
  }
  outlined init with take of ModalityXSessionMetadata();
  OUTLINED_FUNCTION_208();
  static ModalityXServerBoundFrame.OneOf_Payload.== infix(_:_:)();
  char v34 = v33;
  uint64_t v19 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v3, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  if (v34) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

Swift::Int ModalityXServerBoundFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXServerBoundFrame);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXServerBoundFrame()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.isInitialized.getter in conformance ModalityXServerBoundFrame()
{
  return MEMORY[0x270F44C98]();
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXServerBoundFrame())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXServerBoundFrame(uint64_t a1, uint64_t a2)
{
  return ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXServerBoundFrame()
{
  return ModalityXServerBoundFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.hash(into:) in conformance ModalityXServerBoundFrame()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXServerBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for _MessageImplementationBase._protobuf_generated_isEqualTo(other:) in conformance ModalityXServerBoundFrame()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXServerBoundFrame(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXServerBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXClientBoundFrame.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(19);
}

uint64_t static ModalityXClientBoundFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXClientBoundFrame._protobuf_nameMap, a1);
}

uint64_t ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        uint64_t v5 = OUTLINED_FUNCTION_19();
        closure #1 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v5, v6, v7, v8);
        break;
      case 2:
        uint64_t v9 = OUTLINED_FUNCTION_19();
        closure #2 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v9, v10, v11, v12);
        break;
      case 3:
        uint64_t v13 = OUTLINED_FUNCTION_19();
        closure #3 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v13, v14, v15, v16);
        break;
      case 4:
        uint64_t v17 = OUTLINED_FUNCTION_19();
        closure #4 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v17, v18, v19, v20);
        break;
      case 5:
        uint64_t v21 = OUTLINED_FUNCTION_19();
        closure #5 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v21, v22, v23, v24);
        break;
      case 6:
        uint64_t v25 = OUTLINED_FUNCTION_19();
        closure #6 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v25, v26, v27, v28);
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXRequestComplete(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRequestComplete?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload())
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestComplete?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestComplete?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #2 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXProcessingError(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXProcessingError?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXProcessingError?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXProcessingError?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXProcessingError?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #3 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXASRResult(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXASRResult?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXASRResult?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXASRResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXASRResult?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXASRResult?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXASRResult?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #4 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #5 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXRequestMitigated(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRequestMitigated?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #6 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t ModalityXClientBoundFrame.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_252();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_175(v3, v13);
  uint64_t v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_161(v4);
  if (v5) {
    goto LABEL_10;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = OUTLINED_FUNCTION_14();
      closure #2 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v7);
      break;
    case 2u:
      uint64_t v8 = OUTLINED_FUNCTION_14();
      closure #3 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v8);
      break;
    case 3u:
      uint64_t v9 = OUTLINED_FUNCTION_14();
      closure #4 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v9);
      break;
    case 4u:
      uint64_t v10 = OUTLINED_FUNCTION_14();
      closure #5 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v10);
      break;
    case 5u:
      uint64_t v11 = OUTLINED_FUNCTION_14();
      closure #6 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v11);
      break;
    default:
      uint64_t v6 = OUTLINED_FUNCTION_14();
      closure #1 in ModalityXClientBoundFrame.traverse<A>(visitor:)(v6);
      break;
  }
  uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  if (!v0)
  {
LABEL_10:
    type metadata accessor for ModalityXClientBoundFrame(0);
    return OUTLINED_FUNCTION_224();
  }
  return result;
}

uint64_t closure #1 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRequestComplete(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXProcessingError(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #3 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXASRResult(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #4 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #5 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRequestMitigated(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #6 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

void static ModalityXClientBoundFrame.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v38 = OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_48(v5, v38);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v15 = OUTLINED_FUNCTION_241(v7, v8, v9, v10, v11, v12, v13, v14, v39);
  uint64_t v16 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(v15);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_111();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload?, ModalityXClientBoundFrame.OneOf_Payload?));
  uint64_t v19 = (uint64_t (*)(uint64_t))(v18 - 8);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_59();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  uint64_t v21 = OUTLINED_FUNCTION_7_0(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_232();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_343();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_181(v24, v25, v26, v27, v28, v29, v30, v31, v40);
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_250();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, (uint64_t)v19, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_9(v1, 1, v16);
  if (v32)
  {
    OUTLINED_FUNCTION_344();
    OUTLINED_FUNCTION_289();
    OUTLINED_FUNCTION_9((uint64_t)v19, 1, v16);
    if (v32)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_11:
      type metadata accessor for ModalityXClientBoundFrame(0);
      uint64_t v35 = OUTLINED_FUNCTION_119();
      v19(v35);
      uint64_t v36 = OUTLINED_FUNCTION_185();
      v19(v36);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      OUTLINED_FUNCTION_324();
      uint64_t v37 = *(void (**)(void))(v1 + 8);
      OUTLINED_FUNCTION_134();
      v37();
      OUTLINED_FUNCTION_134();
      v37();
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v2, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_9((uint64_t)v19, 1, v16);
  if (v32)
  {
    OUTLINED_FUNCTION_344();
    OUTLINED_FUNCTION_289();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_9:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload?, ModalityXClientBoundFrame.OneOf_Payload?));
    goto LABEL_12;
  }
  outlined init with take of ModalityXSessionMetadata();
  OUTLINED_FUNCTION_208();
  static ModalityXClientBoundFrame.OneOf_Payload.== infix(_:_:)();
  char v34 = v33;
  uint64_t v19 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v3, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  if (v34) {
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_16();
}

Swift::Int ModalityXClientBoundFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXClientBoundFrame);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXClientBoundFrame()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXClientBoundFrame(uint64_t a1, uint64_t a2)
{
  return ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXClientBoundFrame()
{
  return ModalityXClientBoundFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXClientBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXClientBoundFrame(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXClientBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSessionMetadata.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(18);
}

uint64_t static ModalityXSessionMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSessionMetadata._protobuf_nameMap, a1);
}

uint64_t ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 12:
          OUTLINED_FUNCTION_116();
          break;
        case 10:
          OUTLINED_FUNCTION_49();
          closure #2 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
          break;
        case 11:
          OUTLINED_FUNCTION_279();
          break;
        case 1:
          OUTLINED_FUNCTION_49();
          closure #1 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #2 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t ModalityXSessionMetadata.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXSessionMetadata.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXSessionMetadata.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXSessionMetadata.traverse<A>(visitor:)(v4);
    OUTLINED_FUNCTION_25();
    closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)();
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXDeviceInfo(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = type metadata accessor for ModalityXSessionMetadata(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1 + *(int *)(v6 + 20), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  }
  outlined init with take of ModalityXSessionMetadata();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t closure #2 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXSessionMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXSessionMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXSessionMetadata.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSessionMetadata);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSessionMetadata()
{
  return 0xD000000000000012;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXSessionMetadata())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSessionMetadata()
{
  return ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSessionMetadata()
{
  return ModalityXSessionMetadata.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSessionMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSessionMetadata(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSessionMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechProfile.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(16);
}

uint64_t static ModalityXSpeechProfile._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfile._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfile.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      OUTLINED_FUNCTION_115();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_49();
      closure #1 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)();
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #1 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t ModalityXSpeechProfile.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXSpeechProfile.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXSpeechProfile.traverse<A>(visitor:)(v3);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXSpeechProfile.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXSpeechProfile(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 20)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXSpeechProfile.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXSpeechProfile(0);
  uint64_t v3 = a1 + *(int *)(result + 24);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)v3;
    outlined copy of Data._Representation(*(void *)v3, *(void *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXSpeechProfile.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfile);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfile()
{
  return 0xD000000000000010;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfile(uint64_t a1, uint64_t a2)
{
  return ModalityXSpeechProfile.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfile()
{
  return ModalityXSpeechProfile.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfile(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXBeginRequest.protoMessageName.getter()
{
  return 0x6E696765422E584DLL;
}

uint64_t static ModalityXBeginRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXBeginRequest._protobuf_nameMap, a1);
}

uint64_t one-time initialization function for defaultInstance(uint64_t a1)
{
  return one-time initialization function for defaultInstance(a1, (void (*)(void))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(), &static ModalityXBeginRequest._StorageClass.defaultInstance);
}

{
  return one-time initialization function for defaultInstance(a1, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(), &static ModalityXBeginDictation._StorageClass.defaultInstance);
}

{
  return one-time initialization function for defaultInstance(a1, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate._StorageClass, ModalityXRecognitionCandidate._StorageClass.init(), &static ModalityXRecognitionCandidate._StorageClass.defaultInstance);
}

{
  return one-time initialization function for defaultInstance(a1, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass, ModalityXFinalSpeechRecognitionResponse._StorageClass.init(), &static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance);
}

uint64_t outlined init with take of ModalityXSessionMetadata()
{
  uint64_t v2 = OUTLINED_FUNCTION_249();
  v3(v2);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t outlined init with copy of ModalityXSessionMetadata()
{
  uint64_t v1 = OUTLINED_FUNCTION_249();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v3();
  return v0;
}

uint64_t type metadata accessor for ModalityXAudioFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioFrame);
}

uint64_t type metadata accessor for ModalityXSpeechProfile(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfile);
}

uint64_t type metadata accessor for ModalityXCancelRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXCancelRequest);
}

uint64_t type metadata accessor for ModalityXBeginDictation(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginDictation);
}

uint64_t ModalityXBeginRequest._StorageClass.init()()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 19;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  uint64_t v2 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation) = 2;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation) = 2;
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  void *v3 = 0;
  v3[1] = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled) = 2;
  *(void *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x263F8EE78];
  return v0;
}

uint64_t ModalityXBeginRequest._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v29 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 32) = 19;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  uint64_t v7 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  uint64_t v30 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  *uint64_t v30 = 2;
  uint64_t v31 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
  unsigned char *v31 = 2;
  char v32 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
  *char v32 = 2;
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  *uint64_t v8 = 0;
  v8[1] = 0;
  char v33 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  *char v33 = 2;
  char v34 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  *char v34 = MEMORY[0x263F8EE78];
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v10;
  *(void *)(v1 + 24) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v11 = *(unsigned char *)(a1 + 32);
  swift_beginAccess();
  *(unsigned char *)(v2 + 32) = v11;
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  uint64_t v13 = v29;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v12, v29, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v13, v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  uint64_t v14 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  LOBYTE(v14) = *v14;
  uint64_t v15 = v30;
  swift_beginAccess();
  *uint64_t v15 = (_BYTE)v14;
  uint64_t v16 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
  swift_beginAccess();
  LOBYTE(v16) = *v16;
  uint64_t v17 = v31;
  swift_beginAccess();
  *uint64_t v17 = (_BYTE)v16;
  uint64_t v18 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
  swift_beginAccess();
  LOBYTE(v18) = *v18;
  uint64_t v19 = v32;
  swift_beginAccess();
  *uint64_t v19 = (_BYTE)v18;
  uint64_t v20 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  swift_beginAccess();
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  swift_beginAccess();
  *uint64_t v8 = v22;
  v8[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  LOBYTE(v23) = *v23;
  uint64_t v24 = v33;
  swift_beginAccess();
  *uint64_t v24 = (_BYTE)v23;
  uint64_t v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  uint64_t v26 = *v25;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v27 = v34;
  swift_beginAccess();
  *uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ModalityXBeginRequest._StorageClass.deinit()
{
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXBeginRequest._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit(ModalityXBeginRequest._StorageClass.deinit);
}

uint64_t ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_294();
  ModalityXBeginRequest._uniqueStorage()((uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(void))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:));
  swift_release();
  type metadata accessor for ModalityXBeginRequest(0);
  swift_retain();
  OUTLINED_FUNCTION_308();
  closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(v0, v1, v2, v3);
  return swift_release();
}

uint64_t closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 20:
          closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 21:
        case 22:
        case 23:
        case 25:
          closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 24:
          closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(a2, a1, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID, MEMORY[0x263F50658]);
          break;
        case 26:
          closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        default:
          if (result == 2)
          {
            closure #2 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          }
          else if (result == 1)
          {
            closure #1 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          }
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t closure #1 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t closure #2 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(void))closure #1 in ModalityXBeginRequest.traverse<A>(visitor:));
}

uint64_t closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = closure #1 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1);
  if (!v4)
  {
    closure #2 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1);
    closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata);
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    uint64_t v10 = a1
        + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems;
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)v10 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t closure #1 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #2 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a1 + 32) != 19)
  {
    lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #1 in static ModalityXBeginRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXAudioMetadata(0);
  MEMORY[0x270FA5388](v4);
  v58[1] = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v58 - v13;
  swift_beginAccess();
  uint64_t v59 = a1;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v17 = *(void *)(a2 + 24);
  if (!v15)
  {
    if (v17) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  if (!v17) {
    goto LABEL_19;
  }
  BOOL v18 = v16 == *(void *)(a2 + 16) && v15 == v17;
  if (v18 || (char v19 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    uint64_t v20 = v59;
    swift_beginAccess();
    int v21 = *(unsigned __int8 *)(v20 + 32);
    swift_beginAccess();
    int v22 = *(unsigned __int8 *)(a2 + 32);
    if (v21 == 19)
    {
      if (v22 == 19) {
        goto LABEL_12;
      }
    }
    else if (v22 != 19 && v21 == v22)
    {
LABEL_12:
      uint64_t v23 = v20
          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
      swift_beginAccess();
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v23, (uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      uint64_t v24 = a2
          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
      swift_beginAccess();
      uint64_t v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, (uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v24, v25, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) == 1)
      {
        uint64_t v26 = v59;
        swift_retain();
        swift_retain();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        uint64_t v27 = a2;
        if (__swift_getEnumTagSinglePayload(v25, 1, v4) == 1)
        {
          uint64_t v28 = v26;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
LABEL_27:
          char v32 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
          swift_beginAccess();
          int v33 = *v32;
          char v34 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
          swift_beginAccess();
          int v35 = *v34;
          if (v33 == 2)
          {
            if (v35 != 2) {
              goto LABEL_23;
            }
          }
          else if (v35 == 2 || ((((v35 & 1) == 0) ^ v33) & 1) == 0)
          {
            goto LABEL_23;
          }
          uint64_t v36 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
          swift_beginAccess();
          int v37 = *v36;
          uint64_t v38 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
          swift_beginAccess();
          int v39 = *v38;
          if (v37 == 2)
          {
            if (v39 != 2) {
              goto LABEL_23;
            }
          }
          else if (v39 == 2 || ((((v39 & 1) == 0) ^ v37) & 1) == 0)
          {
            goto LABEL_23;
          }
          uint64_t v40 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
          swift_beginAccess();
          int v41 = *v40;
          uint64_t v42 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
          swift_beginAccess();
          int v43 = *v42;
          if (v41 == 2)
          {
            if (v43 != 2) {
              goto LABEL_23;
            }
          }
          else if (v43 == 2 || ((((v43 & 1) == 0) ^ v41) & 1) == 0)
          {
            goto LABEL_23;
          }
          uint64_t v44 = (uint64_t *)(v28
                          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
          swift_beginAccess();
          uint64_t v45 = *v44;
          uint64_t v46 = v44[1];
          char v47 = (void *)(v27
                         + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
          swift_beginAccess();
          uint64_t v48 = v47[1];
          if (v46)
          {
            if (!v48) {
              goto LABEL_23;
            }
            if (v45 != *v47 || v46 != v48)
            {
              char v19 = 0;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_24;
              }
            }
          }
          else if (v48)
          {
            goto LABEL_23;
          }
          uint64_t v50 = v59;
          unint64_t v51 = (unsigned __int8 *)(v59
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
          swift_beginAccess();
          int v52 = *v51;
          char v53 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
          swift_beginAccess();
          int v54 = *v53;
          if (v52 == 2)
          {
            if (v54 == 2)
            {
LABEL_56:
              char v55 = (void **)(v50
                              + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
              swift_beginAccess();
              uint64_t v56 = *v55;
              uint64_t v57 = (void **)(v27
                              + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
              swift_beginAccess();
              char v19 = specialized static Array<A>.== infix(_:_:)(v56, *v57);
              goto LABEL_24;
            }
          }
          else if (v54 != 2 && ((((v54 & 1) == 0) ^ v52) & 1) != 0)
          {
            goto LABEL_56;
          }
LABEL_23:
          char v19 = 0;
LABEL_24:
          swift_release();
          swift_release();
          return v19 & 1;
        }
      }
      else
      {
        outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        if (__swift_getEnumTagSinglePayload(v25, 1, v4) != 1)
        {
          outlined init with take of ModalityXSessionMetadata();
          uint64_t v28 = v59;
          swift_retain();
          swift_retain();
          char v31 = static ModalityXAudioMetadata.== infix(_:_:)();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
          uint64_t v27 = a2;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
          if ((v31 & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_27;
        }
        swift_retain();
        swift_retain();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
      goto LABEL_23;
    }
LABEL_19:
    char v19 = 0;
  }
  return v19 & 1;
}

Swift::Int ModalityXBeginRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXBeginRequest);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXBeginRequest()
{
  return 0x6E696765422E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXBeginRequest()
{
  return ModalityXBeginRequest.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXBeginRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXBeginRequest(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXBeginRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXBeginDictation.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(17);
}

uint64_t static ModalityXBeginDictation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXBeginDictation._protobuf_nameMap, a1);
}

uint64_t one-time initialization function for defaultInstance(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  OUTLINED_FUNCTION_29();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileBuildRequest);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileBegin(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileBegin);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileAddData);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileCommit(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileCommit);
}

uint64_t type metadata accessor for ModalityXServerBoundFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXServerBoundFrame);
}

uint64_t ModalityXBeginDictation._StorageClass.init()()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  uint64_t v2 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  void *v4 = 0;
  v4[1] = 0;
  uint64_t v5 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  void *v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  void *v7 = 0;
  v7[1] = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType) = 16;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey) = 12;
  uint64_t v8 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x263F8EE78];
  *(void *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages) = v11;
  uint64_t v12 = (void *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(_OWORD *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken) = xmmword_256A1CF60;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech) = 2;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition) = 2;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio) = 2;
  uint64_t v13 = (void *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin) = 19;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled) = 2;
  return v0;
}

uint64_t ModalityXBeginDictation._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  uint64_t v7 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  v89 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  *uint64_t v12 = 0;
  v12[1] = 0;
  v90 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType) = 16;
  uint64_t v13 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  *uint64_t v13 = 12;
  uint64_t v14 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  v91 = v13;
  v92 = v14;
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  v93 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  v94 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  *uint64_t v16 = 0;
  v16[1] = 0;
  v95 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)(v1
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x263F8EE78];
  BOOL v18 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  void *v18 = v17;
  char v19 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  v96 = v18;
  v97 = v19;
  *char v19 = 0;
  v19[1] = 0;
  v98 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  *(_OWORD *)(v1
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken) = xmmword_256A1CF60;
  v99 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech) = 2;
  v100 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition) = 2;
  v101 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio) = 2;
  uint64_t v20 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  v102 = (void *)(v1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  *uint64_t v20 = 0;
  v20[1] = 0;
  v103 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  int v21 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  *int v21 = 19;
  v104 = v21;
  v105 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  unsigned char *v105 = 2;
  uint64_t v22 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v22, (uint64_t)v5, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v5, v6, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  swift_beginAccess();
  *uint64_t v8 = v25;
  v8[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  swift_beginAccess();
  *uint64_t v9 = v28;
  v9[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  swift_beginAccess();
  *uint64_t v10 = v31;
  v10[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v32 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  swift_beginAccess();
  *uint64_t v11 = v34;
  v11[1] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v35 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v38 = v89;
  swift_beginAccess();
  *uint64_t v38 = v37;
  v38[1] = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v39 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  LOBYTE(v39) = *v39;
  uint64_t v40 = v90;
  swift_beginAccess();
  *uint64_t v40 = (_BYTE)v39;
  int v41 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  LOBYTE(v41) = *v41;
  uint64_t v42 = v91;
  swift_beginAccess();
  *uint64_t v42 = (_BYTE)v41;
  int v43 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  uint64_t v46 = v92;
  swift_beginAccess();
  *uint64_t v46 = v45;
  v46[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = v93;
  swift_beginAccess();
  *uint64_t v50 = v49;
  v50[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v51 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  int v54 = v94;
  swift_beginAccess();
  *int v54 = v53;
  v54[1] = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v55 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  uint64_t v56 = *v55;
  uint64_t v57 = v95;
  swift_beginAccess();
  *uint64_t v57 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  uint64_t v59 = *v58;
  uint64_t v60 = v96;
  swift_beginAccess();
  *uint64_t v60 = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  uint64_t v64 = v97;
  swift_beginAccess();
  *uint64_t v64 = v63;
  v64[1] = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  uint64_t v67 = *v65;
  unint64_t v66 = v65[1];
  uint64_t v68 = v98;
  swift_beginAccess();
  uint64_t v69 = *v68;
  unint64_t v70 = v68[1];
  *uint64_t v68 = v67;
  v68[1] = v66;
  outlined copy of Data?(v67, v66);
  outlined consume of Data?(v69, v70);
  v71 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  LOBYTE(v71) = *v71;
  v72 = v99;
  swift_beginAccess();
  unsigned char *v72 = (_BYTE)v71;
  v73 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  LOBYTE(v73) = *v73;
  v74 = v100;
  swift_beginAccess();
  unsigned char *v74 = (_BYTE)v73;
  v75 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  LOBYTE(v75) = *v75;
  v76 = v101;
  swift_beginAccess();
  unsigned char *v76 = (_BYTE)v75;
  v77 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  uint64_t v79 = *v77;
  uint64_t v78 = v77[1];
  v80 = v102;
  swift_beginAccess();
  void *v80 = v79;
  v80[1] = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v81 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  LOBYTE(v81) = *v81;
  v82 = v103;
  swift_beginAccess();
  unsigned char *v82 = (_BYTE)v81;
  v83 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  LOBYTE(v83) = *v83;
  v84 = v104;
  swift_beginAccess();
  unsigned char *v84 = (_BYTE)v83;
  v85 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  LOBYTE(v85) = *v85;
  swift_release();
  v86 = v105;
  swift_beginAccess();
  unsigned char *v86 = (_BYTE)v85;
  return v1;
}

uint64_t ModalityXBeginDictation._StorageClass.deinit()
{
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of Data?(*(void *)(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken), *(void *)(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken+ 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXBeginDictation._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit(ModalityXBeginDictation._StorageClass.deinit);
}

uint64_t ModalityXBeginRequest._StorageClass.__deallocating_deinit(uint64_t (*a1)(void))
{
  a1();

  return MEMORY[0x270FA0228]();
}

uint64_t ModalityXBeginDictation.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_294();
  ModalityXBeginRequest._uniqueStorage()((uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:));
  swift_release();
  type metadata accessor for ModalityXBeginDictation(0);
  swift_retain();
  OUTLINED_FUNCTION_308();
  closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(v0, v1, v2, v3);
  return swift_release();
}

uint64_t closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 2:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID;
          goto LABEL_20;
        case 3:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID;
          goto LABEL_20;
        case 4:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel;
          goto LABEL_20;
        case 5:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName;
          goto LABEL_20;
        case 6:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion;
          goto LABEL_20;
        case 7:
          uint64_t v17 = lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
          uint64_t v18 = a2;
          uint64_t v19 = a1;
          uint64_t v20 = a3;
          uint64_t v21 = a4;
          uint64_t v22 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType;
          goto LABEL_22;
        case 8:
          uint64_t v17 = lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
          uint64_t v18 = a2;
          uint64_t v19 = a1;
          uint64_t v20 = a3;
          uint64_t v21 = a4;
          uint64_t v22 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey;
          goto LABEL_22;
        case 9:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText;
          goto LABEL_20;
        case 10:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText;
          goto LABEL_20;
        case 11:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText;
          goto LABEL_20;
        case 12:
        case 13:
          closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 14:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region;
          goto LABEL_20;
        case 15:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F505E8];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken;
          goto LABEL_20;
        case 16:
        case 17:
        case 18:
        case 20:
        case 22:
          closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 19:
          uint64_t v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F50658];
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier;
LABEL_20:
          closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(v12, v13, v14, v15, v16, v11);
          break;
        case 21:
          uint64_t v17 = lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
          uint64_t v18 = a2;
          uint64_t v19 = a1;
          uint64_t v20 = a3;
          uint64_t v21 = a4;
          uint64_t v22 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin;
LABEL_22:
          closure #7 in closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(v18, v19, v20, v21, (uint64_t)v22, (void (*)(uint64_t))v17);
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  return OUTLINED_FUNCTION_243();
}

uint64_t closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  return OUTLINED_FUNCTION_243();
}

uint64_t closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = a2 + *a5;
  swift_beginAccess();
  a6(v9, a3, a4);
  return OUTLINED_FUNCTION_243();
}

uint64_t closure #7 in closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7 = swift_beginAccess();
  a6(v7);
  dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
  return OUTLINED_FUNCTION_243();
}

uint64_t closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  return OUTLINED_FUNCTION_243();
}

uint64_t ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))closure #1 in ModalityXBeginDictation.traverse<A>(visitor:));
}

uint64_t ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  OUTLINED_FUNCTION_124();
  uint64_t v7 = OUTLINED_FUNCTION_174();
  v8(v7);
  swift_retain();
  OUTLINED_FUNCTION_60();
  a5();
  uint64_t result = swift_release();
  if (!v5) {
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata);
  if (!v4)
  {
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    uint64_t v7 = a1
       + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems;
    swift_beginAccess();
    if (*(void *)(*(void *)v7 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = a1
       + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages;
    swift_beginAccess();
    if (*(void *)(*(void *)v8 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      swift_bridgeObjectRelease();
    }
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #13 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #19 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    return closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v9 = OUTLINED_FUNCTION_7_0(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_230();
  uint64_t v11 = type metadata accessor for ModalityXAudioMetadata(v10);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_112();
  uint64_t v13 = a1 + *a5;
  swift_beginAccess();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v13, v5, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload(v5, 1, v11) == 1) {
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v5, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  outlined init with take of ModalityXSessionMetadata();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t closure #7 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  uint64_t result = swift_beginAccess();
  if (*v1 != 16)
  {
    lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #8 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  uint64_t result = swift_beginAccess();
  if (*v1 != 12)
  {
    lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #13 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  uint64_t result = swift_beginAccess();
  unint64_t v3 = v1[1];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *v1;
    outlined copy of Data._Representation(v4, v3);
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v4, v3);
  }
  return result;
}

uint64_t closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_217();
  uint64_t v2 = v0 + v1;
  uint64_t result = swift_beginAccess();
  if (*(void *)(v2 + 8))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_151();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #19 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  uint64_t result = swift_beginAccess();
  if (*v1 != 19)
  {
    lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_217();
  uint64_t v2 = (unsigned char *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  if (*v2 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #1 in static ModalityXBeginDictation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXAudioMetadata(0);
  MEMORY[0x270FA5388](v4);
  v128[1] = (char *)v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v129 = (uint64_t)v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v128 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v15, (uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  uint64_t v16 = a2
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  uint64_t v17 = (uint64_t)&v9[*(int *)(v7 + 56)];
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, (uint64_t)v9, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v16, v17, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v17, 1, v4);
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v9, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      goto LABEL_10;
    }
LABEL_6:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v9, &demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
    goto LABEL_7;
  }
  uint64_t v20 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v9, v129, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload(v17, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_6;
  }
  outlined init with take of ModalityXSessionMetadata();
  swift_retain();
  uint64_t v19 = a2;
  swift_retain();
  char v22 = static ModalityXAudioMetadata.== infix(_:_:)();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v9, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if ((v22 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_10:
  uint64_t v23 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  uint64_t v26 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  uint64_t v27 = v26[1];
  if (v25)
  {
    if (!v27) {
      goto LABEL_7;
    }
    BOOL v28 = v24 == *v26 && v25 == v27;
    if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v27)
  {
    goto LABEL_7;
  }
  uint64_t v29 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  char v32 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  uint64_t v33 = v32[1];
  if (v31)
  {
    if (!v33) {
      goto LABEL_7;
    }
    BOOL v34 = v30 == *v32 && v31 == v33;
    if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v33)
  {
    goto LABEL_7;
  }
  int v35 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  uint64_t v38 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  uint64_t v39 = v38[1];
  if (v37)
  {
    if (!v39) {
      goto LABEL_7;
    }
    BOOL v40 = v36 == *v38 && v37 == v39;
    if (!v40 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v39)
  {
    goto LABEL_7;
  }
  int v41 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  uint64_t v45 = v44[1];
  if (v43)
  {
    if (!v45) {
      goto LABEL_7;
    }
    BOOL v46 = v42 == *v44 && v43 == v45;
    if (!v46 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v45)
  {
    goto LABEL_7;
  }
  char v47 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v47[1];
  uint64_t v50 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  uint64_t v51 = v50[1];
  if (v49)
  {
    if (!v51) {
      goto LABEL_7;
    }
    BOOL v52 = v48 == *v50 && v49 == v51;
    if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v51)
  {
    goto LABEL_7;
  }
  uint64_t v53 = (unsigned __int8 *)(v20
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  int v54 = *v53;
  char v55 = (unsigned __int8 *)(v19
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  int v56 = *v55;
  if (v54 == 16)
  {
    if (v56 != 16) {
      goto LABEL_7;
    }
  }
  else if (v56 == 16 || v54 != v56)
  {
    goto LABEL_7;
  }
  uint64_t v57 = (unsigned __int8 *)(v20
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  int v58 = *v57;
  uint64_t v59 = (unsigned __int8 *)(v19
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  int v60 = *v59;
  if (v58 == 12)
  {
    if (v60 != 12) {
      goto LABEL_7;
    }
  }
  else if (v60 == 12 || v58 != v60)
  {
    goto LABEL_7;
  }
  uint64_t v61 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  uint64_t v62 = *v61;
  uint64_t v63 = v61[1];
  uint64_t v64 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  uint64_t v65 = v64[1];
  if (v63)
  {
    if (!v65) {
      goto LABEL_7;
    }
    BOOL v66 = v62 == *v64 && v63 == v65;
    if (!v66 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v65)
  {
    goto LABEL_7;
  }
  uint64_t v67 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  unint64_t v70 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  uint64_t v71 = v70[1];
  if (v69)
  {
    if (!v71) {
      goto LABEL_7;
    }
    BOOL v72 = v68 == *v70 && v69 == v71;
    if (!v72 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v71)
  {
    goto LABEL_7;
  }
  v73 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  uint64_t v74 = *v73;
  uint64_t v75 = v73[1];
  v76 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  uint64_t v77 = v76[1];
  if (!v75)
  {
    if (!v77) {
      goto LABEL_92;
    }
LABEL_7:
    swift_release();
    swift_release();
    return 0;
  }
  if (!v77) {
    goto LABEL_7;
  }
  BOOL v78 = v74 == *v76 && v75 == v77;
  if (!v78 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_7;
  }
LABEL_92:
  uint64_t v79 = (void **)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  v80 = *v79;
  v81 = (void **)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  if ((specialized static Array<A>.== infix(_:_:)(v80, *v81) & 1) == 0) {
    goto LABEL_7;
  }
  v82 = (void **)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  v83 = *v82;
  v84 = (void **)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  if ((specialized static Array<A>.== infix(_:_:)(v83, *v84) & 1) == 0) {
    goto LABEL_7;
  }
  v85 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  uint64_t v86 = *v85;
  uint64_t v87 = v85[1];
  uint64_t v88 = (void *)(v19
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  uint64_t v89 = v88[1];
  if (v87)
  {
    if (!v89) {
      goto LABEL_7;
    }
    BOOL v90 = v86 == *v88 && v87 == v89;
    if (!v90 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v89)
  {
    goto LABEL_7;
  }
  v91 = (uint64_t *)(v20
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  uint64_t v92 = *v91;
  unint64_t v93 = v91[1];
  v94 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  uint64_t v95 = *v94;
  unint64_t v96 = v94[1];
  if (v93 >> 60 == 15)
  {
    if (v96 >> 60 == 15) {
      goto LABEL_109;
    }
    goto LABEL_107;
  }
  if (v96 >> 60 == 15)
  {
LABEL_107:
    outlined copy of Data?(v92, v93);
    outlined copy of Data?(v95, v96);
    outlined consume of Data?(v92, v93);
    outlined consume of Data?(v95, v96);
    goto LABEL_7;
  }
  outlined copy of Data?(v92, v93);
  outlined copy of Data?(v95, v96);
  char v97 = MEMORY[0x25A2AA200](v92, v93, v95, v96);
  outlined consume of Data?(v95, v96);
  outlined consume of Data?(v92, v93);
  if ((v97 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_109:
  v98 = (unsigned __int8 *)(v20
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  int v99 = *v98;
  v100 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  int v101 = *v100;
  if (v99 == 2)
  {
    if (v101 != 2) {
      goto LABEL_7;
    }
  }
  else if (v101 == 2 || ((((v101 & 1) == 0) ^ v99) & 1) == 0)
  {
    goto LABEL_7;
  }
  v102 = (unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  int v103 = *v102;
  v104 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  int v105 = *v104;
  if (v103 == 2)
  {
    if (v105 != 2) {
      goto LABEL_7;
    }
  }
  else if (v105 == 2 || ((((v105 & 1) == 0) ^ v103) & 1) == 0)
  {
    goto LABEL_7;
  }
  v106 = (unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  int v107 = *v106;
  v108 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  int v109 = *v108;
  if (v107 == 2)
  {
    if (v109 != 2) {
      goto LABEL_7;
    }
  }
  else if (v109 == 2 || ((((v109 & 1) == 0) ^ v107) & 1) == 0)
  {
    goto LABEL_7;
  }
  v110 = (uint64_t *)(v20
                   + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  uint64_t v111 = *v110;
  uint64_t v112 = v110[1];
  v113 = (void *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  uint64_t v114 = v113[1];
  if (v112)
  {
    if (!v114) {
      goto LABEL_7;
    }
    BOOL v115 = v111 == *v113 && v112 == v114;
    if (!v115 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_7;
    }
  }
  else if (v114)
  {
    goto LABEL_7;
  }
  v116 = (unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  int v117 = *v116;
  v118 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  int v119 = *v118;
  if (v117 == 2)
  {
    if (v119 != 2) {
      goto LABEL_7;
    }
  }
  else if (v119 == 2 || ((((v119 & 1) == 0) ^ v117) & 1) == 0)
  {
    goto LABEL_7;
  }
  v120 = (unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  int v121 = *v120;
  v122 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  int v123 = *v122;
  if (v121 == 19)
  {
    if (v123 != 19) {
      goto LABEL_7;
    }
  }
  else if (v123 == 19 || v121 != v123)
  {
    goto LABEL_7;
  }
  v124 = (unsigned __int8 *)(v20
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  int v125 = *v124;
  swift_release();
  v126 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  int v127 = *v126;
  swift_release();
  if (v125 == 2)
  {
    if (v127 != 2) {
      return 0;
    }
  }
  else if (v127 == 2 || ((((v127 & 1) == 0) ^ v125) & 1) == 0)
  {
    return 0;
  }
  return 1;
}

Swift::Int ModalityXBeginDictation.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXBeginDictation);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXBeginDictation()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXBeginDictation()
{
  return ModalityXBeginDictation.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXBeginDictation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginDictation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXBeginDictation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXBeginDictation(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXBeginDictation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXCancelRequest.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(16);
}

uint64_t static ModalityXCancelRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCancelRequest._protobuf_nameMap, a1);
}

uint64_t ModalityXCancelRequest.decodeMessage<A>(decoder:)()
{
  return ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      OUTLINED_FUNCTION_348();
      closure #2 in ModalityXCancelRequest.decodeMessage<A>(decoder:)();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_348();
      closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)();
    }
    OUTLINED_FUNCTION_208();
  }
  return result;
}

uint64_t ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXCancelRequest, (void (*)(uint64_t))closure #2 in ModalityXCancelRequest.traverse<A>(visitor:));
}

uint64_t closure #2 in ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXCancelRequest(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 3)
  {
    lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXCancelRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXCancelRequest);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXCancelRequest()
{
  return 0xD000000000000010;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXCancelRequest()
{
  return ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXCancelRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXCancelRequest(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCancelRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXAudioFrame.protoMessageName.getter()
{
  return 0x6F696475412E584DLL;
}

uint64_t static ModalityXAudioFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioFrame._protobuf_nameMap, a1);
}

uint64_t ModalityXAudioFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        OUTLINED_FUNCTION_345();
        break;
      case 2:
        OUTLINED_FUNCTION_103();
        dispatch thunk of Decoder.decodeRepeatedBytesField(value:)();
        break;
      case 1:
        OUTLINED_FUNCTION_115();
        break;
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #2 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_107();
  uint64_t v3 = v2(v1);
  uint64_t v4 = OUTLINED_FUNCTION_152(*(int *)(v3 + 24));
  return v0(v4);
}

uint64_t ModalityXAudioFrame.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_60();
  uint64_t result = closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)();
  if (!v1)
  {
    if (*(void *)(*(void *)v0 + 16))
    {
      OUTLINED_FUNCTION_60();
      dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)();
    }
    OUTLINED_FUNCTION_60();
    closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)();
    type metadata accessor for ModalityXAudioFrame(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int ModalityXAudioFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXAudioFrame);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioFrame()
{
  return 0x6F696475412E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioFrame(uint64_t a1, uint64_t a2)
{
  return ModalityXAudioFrame.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioFrame()
{
  return ModalityXAudioFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioFrame(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXASRResult.protoMessageName.getter()
{
  return 0x65525253412E584DLL;
}

uint64_t static ModalityXASRResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXASRResult._protobuf_nameMap, a1);
}

uint64_t ModalityXASRResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        uint64_t v5 = OUTLINED_FUNCTION_19();
        closure #3 in ModalityXASRResult.decodeMessage<A>(decoder:)(v5, v6, v7, v8);
        break;
      case 2:
        uint64_t v9 = OUTLINED_FUNCTION_19();
        closure #2 in ModalityXASRResult.decodeMessage<A>(decoder:)(v9, v10, v11, v12);
        break;
      case 1:
        OUTLINED_FUNCTION_115();
        break;
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #2 in ModalityXASRResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXRecognitionCandidate(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t closure #3 in ModalityXASRResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a2;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v24 - v17;
  __swift_storeEnumTagSinglePayload((uint64_t)&v24 - v17, 1, 1, v5);
  uint64_t v24 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v10, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v10, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    uint64_t v19 = v11;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata();
    outlined init with take of ModalityXSessionMetadata();
    uint64_t v19 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
      outlined init with take of ModalityXSessionMetadata();
      outlined init with take of ModalityXSessionMetadata();
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
  }
  uint64_t v20 = v27;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v18;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, (uint64_t)v16, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
    uint64_t v21 = (uint64_t)v16;
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v21, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  }
  outlined init with take of ModalityXSessionMetadata();
  if (EnumTagSinglePayload != 1) {
    dispatch thunk of Decoder.handleConflictingOneOf()();
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v18, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  uint64_t v23 = v24;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v24, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata();
  swift_storeEnumTagMultiPayload();
  return __swift_storeEnumTagSinglePayload(v23, 0, 1, v19);
}

uint64_t ModalityXASRResult.traverse<A>(visitor:)()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_194();
  uint64_t result = closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)();
  if (!v1)
  {
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    OUTLINED_FUNCTION_161(v6);
    if (!v7)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        OUTLINED_FUNCTION_194();
        closure #3 in ModalityXASRResult.traverse<A>(visitor:)(v8);
      }
      else
      {
        OUTLINED_FUNCTION_194();
        closure #2 in ModalityXASRResult.traverse<A>(visitor:)(v9);
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    type metadata accessor for ModalityXASRResult(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_187();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 24) + 8)) {
    return OUTLINED_FUNCTION_151();
  }
  return result;
}

uint64_t closure #2 in ModalityXASRResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionCandidate(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

uint64_t closure #3 in ModalityXASRResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  MEMORY[0x270FA5388](v5);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v6) == 1)
  {
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    }
    uint64_t result = outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
  __break(1u);
  return result;
}

Swift::Int ModalityXASRResult.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXASRResult);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXASRResult()
{
  return 0x65525253412E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXASRResult(uint64_t a1, uint64_t a2)
{
  return ModalityXASRResult.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXASRResult()
{
  return ModalityXASRResult.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXASRResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXASRResult(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXASRResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechProfileRebuildNeeded.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(29);
}

uint64_t one-time initialization function for _protobuf_nameMap(uint64_t a1)
{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXRequestComplete._protobuf_nameMap);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXEntityWords._protobuf_nameMap, (uint64_t)"words", 5, MEMORY[0x263F50718]);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXEntities._protobuf_nameMap, (uint64_t)"entities", 8, MEMORY[0x263F50718]);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXSpeechProfileSourceData._protobuf_nameMap, (uint64_t)"entities_by_category", 20, MEMORY[0x263F50728]);
}

uint64_t static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)()
{
  return ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)();
}

{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_183();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_153(*(int *)(v2 + 20));
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)()
{
  return ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)();
}

{
  uint64_t v0;
  uint64_t result;

  uint64_t result = OUTLINED_FUNCTION_95();
  if (!v0) {
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXCancelRequest.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_183();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 20) + 8)) {
    return OUTLINED_FUNCTION_151();
  }
  return result;
}

Swift::Int ModalityXSpeechProfileRebuildNeeded.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileRebuildNeeded()
{
  return 0xD00000000000001DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileRebuildNeeded()
{
  return ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileRebuildNeeded()
{
  return ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileRebuildNeeded(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXProcessingError.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(18);
}

uint64_t static ModalityXProcessingError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXProcessingError._protobuf_nameMap, a1);
}

uint64_t ModalityXProcessingError.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          OUTLINED_FUNCTION_49();
          closure #1 in ModalityXProcessingError.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_115();
          break;
        case 3:
          OUTLINED_FUNCTION_279();
          break;
        case 4:
          OUTLINED_FUNCTION_116();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXProcessingError.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #3 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_163();
  v2(v1);
  v0();
  return OUTLINED_FUNCTION_197();
}

uint64_t closure #4 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_107();
  uint64_t v3 = v2(v1);
  uint64_t v4 = OUTLINED_FUNCTION_152(*(int *)(v3 + 32));
  return v0(v4);
}

uint64_t ModalityXProcessingError.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXProcessingError.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    OUTLINED_FUNCTION_282();
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXProcessingError.traverse<A>(visitor:)(v3);
    OUTLINED_FUNCTION_281();
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXProcessingError.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXProcessingError(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 20) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXProcessingError.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXProcessingError(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28)) != 3)
  {
    lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_187();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 32) + 8)) {
    return OUTLINED_FUNCTION_151();
  }
  return result;
}

Swift::Int ModalityXProcessingError.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXProcessingError);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXProcessingError()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXProcessingError()
{
  return ModalityXProcessingError.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXProcessingError()
{
  return ModalityXProcessingError.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXProcessingError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXProcessingError(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXProcessingError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRequestMitigated.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(19);
}

uint64_t static ModalityXRequestMitigated._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRequestMitigated._protobuf_nameMap, a1);
}

uint64_t ModalityXRequestMitigated.decodeMessage<A>(decoder:)()
{
  return ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

uint64_t closure #2 in ModalityXCancelRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_163();
  v2(v1);
  v0();
  return OUTLINED_FUNCTION_197();
}

uint64_t ModalityXRequestMitigated.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXRequestMitigated, (void (*)(uint64_t))closure #2 in ModalityXRequestMitigated.traverse<A>(visitor:));
}

uint64_t ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t result = OUTLINED_FUNCTION_95();
  if (!v5)
  {
    uint64_t v8 = OUTLINED_FUNCTION_25();
    a5(v8);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #2 in ModalityXRequestMitigated.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRequestMitigated(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXRequestMitigated.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRequestMitigated);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRequestMitigated()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRequestMitigated()
{
  return ModalityXRequestMitigated.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRequestMitigated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRequestMitigated.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRequestMitigated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRequestMitigated(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRequestMitigated(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRequestComplete.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(18);
}

uint64_t static ModalityXRequestComplete._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRequestComplete._protobuf_nameMap, a1);
}

uint64_t ModalityXRequestComplete.decodeMessage<A>(decoder:)()
{
  return ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)();
}

uint64_t ModalityXRequestComplete.traverse<A>(visitor:)()
{
  return ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)();
}

Swift::Int ModalityXRequestComplete.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRequestComplete);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRequestComplete()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRequestComplete()
{
  return ModalityXRequestComplete.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRequestComplete()
{
  return ModalityXRequestComplete.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRequestComplete(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRequestComplete(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRequestComplete(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechProfileBuildRequest.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(28);
}

uint64_t static ModalityXSpeechProfileBuildRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileBuildRequest._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_147();
        break;
      case 2:
        OUTLINED_FUNCTION_347();
        break;
      case 3:
        OUTLINED_FUNCTION_204();
        break;
      case 4:
        OUTLINED_FUNCTION_116();
        break;
      case 5:
        OUTLINED_FUNCTION_346();
        break;
      case 6:
        OUTLINED_FUNCTION_49();
        closure #6 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #6 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

void ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  uint64_t v1 = OUTLINED_FUNCTION_95();
  if (!v0)
  {
    OUTLINED_FUNCTION_350(v1, v2, v3, v4, type metadata accessor for ModalityXSpeechProfileBuildRequest);
    OUTLINED_FUNCTION_349();
    OUTLINED_FUNCTION_281();
    OUTLINED_FUNCTION_25();
    closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #6 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(v5);
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #6 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  uint64_t v3 = a1 + *(int *)(result + 40);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)v3;
    outlined copy of Data._Representation(*(void *)v3, *(void *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXSpeechProfileBuildRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileBuildRequest()
{
  return 0xD00000000000001CLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2)
{
  return ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileBuildRequest()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXStreamingSpeechProfileBegin.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(30);
}

uint64_t static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap, a1);
}

uint64_t ModalityXStreamingSpeechProfileBegin.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        OUTLINED_FUNCTION_204();
        break;
      case 2:
        OUTLINED_FUNCTION_115();
        break;
      case 1:
        OUTLINED_FUNCTION_147();
        break;
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #3 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_107();
  uint64_t v3 = v2(v1);
  uint64_t v4 = OUTLINED_FUNCTION_152(*(int *)(v3 + 28));
  return v0(v4);
}

uint64_t ModalityXStreamingSpeechProfileBegin.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  uint64_t result = OUTLINED_FUNCTION_95();
  if (!v0)
  {
    OUTLINED_FUNCTION_282();
    OUTLINED_FUNCTION_349();
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #3 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_123();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 28) + 8)) {
    return OUTLINED_FUNCTION_151();
  }
  return result;
}

Swift::Int ModalityXStreamingSpeechProfileBegin.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileBegin()
{
  return 0xD00000000000001ELL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2)
{
  return ModalityXStreamingSpeechProfileBegin.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileBegin()
{
  return ModalityXStreamingSpeechProfileBegin.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileBegin(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXStreamingSpeechProfileAddData.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(32);
}

uint64_t static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap, a1);
}

uint64_t ModalityXStreamingSpeechProfileAddData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_147();
        break;
      case 2:
        OUTLINED_FUNCTION_347();
        break;
      case 3:
        OUTLINED_FUNCTION_204();
        break;
      case 4:
        OUTLINED_FUNCTION_116();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #2 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_123();
  v1(v0);
  type metadata accessor for ModalityXSpeechProfileSourceData(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
  OUTLINED_FUNCTION_262();
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

void ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  uint64_t v1 = OUTLINED_FUNCTION_95();
  if (!v0)
  {
    OUTLINED_FUNCTION_350(v1, v2, v3, v4, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)(v5);
    closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #2 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  uint64_t v9 = OUTLINED_FUNCTION_7_0(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_111();
  uint64_t v10 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_59();
  uint64_t v12 = a5(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1 + *(int *)(v12 + 24), v5, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  if (__swift_getEnumTagSinglePayload(v5, 1, v10) == 1) {
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v5, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  outlined init with take of ModalityXSessionMetadata();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t closure #3 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  uint64_t v3 = a1 + *(int *)(result + 28);
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = *(void *)v3;
    outlined copy of Data._Representation(*(void *)v3, *(void *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXStreamingSpeechProfileAddData.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileAddData()
{
  return 0xD000000000000020;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2)
{
  return ModalityXStreamingSpeechProfileAddData.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileAddData()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXStreamingSpeechProfileCommit.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(31);
}

uint64_t one-time initialization function for _protobuf_nameMap(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = OUTLINED_FUNCTION_52();
  __swift_project_value_buffer(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  uint64_t v6 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_256A1CFC0;
  unint64_t v9 = v8 + v7 + v6[14];
  *(void *)(v8 + v7) = 1;
  *(void *)unint64_t v9 = "request_id";
  *(void *)(v9 + 8) = 10;
  *(unsigned char *)(v9 + 16) = 2;
  uint64_t v10 = *MEMORY[0x263F50728];
  type metadata accessor for _NameMap.NameDescription();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(unint64_t, uint64_t))(v11 + 104))(v9, v10);
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap, a1);
}

uint64_t ModalityXStreamingSpeechProfileCommit.decodeMessage<A>(decoder:)()
{
  return ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)();
}

uint64_t ModalityXStreamingSpeechProfileCommit.traverse<A>(visitor:)()
{
  return ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)();
}

Swift::Int ModalityXStreamingSpeechProfileCommit.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileCommit()
{
  return 0xD00000000000001FLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileCommit()
{
  return ModalityXStreamingSpeechProfileCommit.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileCommit()
{
  return ModalityXStreamingSpeechProfileCommit.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileCommit(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechProfileBuildResponse.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(29);
}

uint64_t static ModalityXSpeechProfileBuildResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileBuildResponse._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_147();
        break;
      case 2:
        OUTLINED_FUNCTION_49();
        closure #2 in ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)();
        break;
      case 3:
        OUTLINED_FUNCTION_345();
        break;
      case 10:
        OUTLINED_FUNCTION_116();
        break;
      case 11:
        OUTLINED_FUNCTION_346();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #2 in ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #3 in ModalityXAudioFrame.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_182();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_153(*(int *)(v2 + 28));
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #5 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_123();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_153(*(int *)(v2 + 36));
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

void ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_95();
  if (!v0)
  {
    uint64_t v1 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)(v1);
    OUTLINED_FUNCTION_25();
    closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_25();
    closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_25();
    closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #2 in ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXProcessingError(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1 + *(int *)(v6 + 24), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXProcessingError?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  outlined init with take of ModalityXSessionMetadata();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_182();
  uint64_t result = v2(v1);
  if (*(unsigned char *)(v0 + *(int *)(result + 28)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

void closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_186();
  v2(v1);
  OUTLINED_FUNCTION_288();
  if (!(!v5 & v4))
  {
    uint64_t v6 = *v3;
    outlined copy of Data._Representation(*v3, v0);
    OUTLINED_FUNCTION_178();
    outlined consume of Data?(v6, v0);
  }
}

void closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_186();
  v2(v1);
  OUTLINED_FUNCTION_288();
  if (!(!v5 & v4))
  {
    uint64_t v6 = *v3;
    outlined copy of Data._Representation(*v3, v0);
    OUTLINED_FUNCTION_178();
    outlined consume of Data?(v6, v0);
  }
}

Swift::Int ModalityXSpeechProfileBuildResponse.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

Swift::Int ModalityXServerBoundFrame.hashValue.getter(void (*a1)(void))
{
  Hasher.init(_seed:)();
  a1(0);
  uint64_t v2 = (unint64_t *)OUTLINED_FUNCTION_146();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(v2, v3);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileBuildResponse()
{
  return 0xD00000000000001DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2)
{
  return ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileBuildResponse()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileBuildResponse(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXServerBoundFrame()
{
  return Hasher._finalize()();
}

void specialized static Array<A>.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v4 = OUTLINED_FUNCTION_254();
  type metadata accessor for ModalityXRecognitionToken(v4);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_94();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_179();
  uint64_t v8 = type metadata accessor for ModalityXRecognitionPhraseTokens(v7);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_91();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_133();
  if (v21 && v11 && v3 != v0)
  {
    OUTLINED_FUNCTION_114();
    uint64_t v52 = v2;
    unint64_t v53 = v1;
    uint64_t v50 = v8;
    while (1)
    {
      uint64_t v14 = v12 * v13;
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_276();
      OUTLINED_FUNCTION_275();
      if (!v21)
      {
LABEL_69:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        goto LABEL_70;
      }
      if (v8 && v3 != (uint64_t (*)(uint64_t))v14) {
        break;
      }
LABEL_63:
      uint64_t v8 = v50;
      uint64_t v2 = v52;
      unint64_t v1 = v53;
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v49 = OUTLINED_FUNCTION_292();
      uint64_t v3 = type metadata accessor for ModalityXRecognitionPhraseTokens;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if (v49)
      {
        OUTLINED_FUNCTION_322();
        if (!v21) {
          continue;
        }
      }
      goto LABEL_70;
    }
    OUTLINED_FUNCTION_225();
    uint64_t v51 = v15;
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      if (v1 >= *(void *)(v14 + 16)) {
        break;
      }
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_28();
      if (v18)
      {
        if (!v16
          || ((OUTLINED_FUNCTION_21(v17), v21) ? (BOOL v21 = v19 == v20) : (BOOL v21 = 0),
              !v21 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
LABEL_68:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          goto LABEL_69;
        }
      }
      else if (v16)
      {
        goto LABEL_68;
      }
      OUTLINED_FUNCTION_45();
      if (v23)
      {
        if (!v22) {
          goto LABEL_68;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v24) {
          goto LABEL_68;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v26)
      {
        if (!v25) {
          goto LABEL_68;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v27) {
          goto LABEL_68;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v29)
      {
        if (!v28) {
          goto LABEL_68;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v30) {
          goto LABEL_68;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v32)
      {
        if (!v31) {
          goto LABEL_68;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v33) {
          goto LABEL_68;
        }
      }
      OUTLINED_FUNCTION_238();
      if (v21)
      {
        if (v34 != 2) {
          goto LABEL_68;
        }
      }
      else
      {
        if (v34 == 2) {
          goto LABEL_68;
        }
        OUTLINED_FUNCTION_122();
        if ((v35 & 1) == 0) {
          goto LABEL_68;
        }
      }
      OUTLINED_FUNCTION_28();
      if (v38)
      {
        if (!v36) {
          goto LABEL_68;
        }
        OUTLINED_FUNCTION_21(v37);
        BOOL v41 = v21 && v39 == v40;
        if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_68;
        }
      }
      else if (v36)
      {
        goto LABEL_68;
      }
      OUTLINED_FUNCTION_28();
      if (v44)
      {
        if (!v42) {
          goto LABEL_68;
        }
        OUTLINED_FUNCTION_21(v43);
        BOOL v47 = v21 && v45 == v46;
        if (!v47 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_68;
        }
      }
      else if (v42)
      {
        goto LABEL_68;
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v48 = OUTLINED_FUNCTION_325();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if ((v48 & 1) == 0) {
        goto LABEL_69;
      }
      ++v1;
      v2 += v51;
      if (v8 == v1) {
        goto LABEL_63;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_70:
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_16();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  BOOL v13;

  OUTLINED_FUNCTION_17();
  uint64_t v2 = OUTLINED_FUNCTION_249();
  uint64_t v3 = type metadata accessor for ModalityXRecognitionToken(v2) - 8;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_129();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6 == *(void *)(v0 + 16) && v6 && v1 != v0)
  {
    uint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = *(void *)(v5 + 72);
    uint64_t v9 = v6 - 1;
    do
    {
      outlined init with copy of ModalityXSessionMetadata();
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_146();
      static ModalityXRecognitionToken.== infix(_:_:)();
      uint64_t v11 = v10;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      uint64_t v13 = v9-- != 0;
      if ((v11 & 1) == 0) {
        break;
      }
      v7 += v8;
    }
    while (v13);
  }
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;

  OUTLINED_FUNCTION_17();
  uint64_t v5 = OUTLINED_FUNCTION_41();
  uint64_t v6 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v5);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_92();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_90();
  if (v11 && v10 && v1 != v0)
  {
    OUTLINED_FUNCTION_222(v9);
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_255();
      specialized static Array<A>.== infix(_:_:)();
      if ((v12 & 1) == 0) {
        break;
      }
      uint64_t v13 = *(int *)(v6 + 24);
      uint64_t v14 = *(unsigned __int8 *)(v3 + v13);
      uint64_t v15 = *(unsigned __int8 *)(v2 + v13);
      if (v14 == 2)
      {
        if (v15 != 2) {
          break;
        }
      }
      else
      {
        if (v15 == 2) {
          break;
        }
        OUTLINED_FUNCTION_122();
        if ((v16 & 1) == 0) {
          break;
        }
      }
      OUTLINED_FUNCTION_300();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      uint64_t v17 = OUTLINED_FUNCTION_270();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_312();
      OUTLINED_FUNCTION_316();
      if (v17)
      {
        v4 += v19;
        if (v18) {
          continue;
        }
      }
      goto LABEL_17;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    OUTLINED_FUNCTION_309();
  }
LABEL_17:
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  char v11;
  int v12;
  char v13;
  char v14;
  int v15;
  char v16;
  char v17;
  int v18;
  char v19;
  char v20;
  char v21;
  char v22;

  OUTLINED_FUNCTION_17();
  uint64_t v4 = OUTLINED_FUNCTION_41();
  type metadata accessor for ModalityXItnAlignment(v4);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_92();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_90();
  if (v8 && v7 && v1 != v0)
  {
    OUTLINED_FUNCTION_267();
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_84();
      if (v10)
      {
        if (!v9) {
          goto LABEL_26;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v11) {
          goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_84();
      if (v13)
      {
        if (!v12) {
          goto LABEL_26;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v14) {
          goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_84();
      if (v16)
      {
        if (!v15) {
          goto LABEL_26;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v17) {
          goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_84();
      if (v19)
      {
        if (!v18) {
          goto LABEL_26;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v20)
        {
LABEL_26:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          OUTLINED_FUNCTION_309();
          break;
        }
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      BOOL v21 = OUTLINED_FUNCTION_323();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_312();
      OUTLINED_FUNCTION_316();
      if (v21)
      {
        v2 += v3;
        if (v22) {
          continue;
        }
      }
      break;
    }
  }
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  char v20;

  OUTLINED_FUNCTION_17();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for ModalityXRecognitionChoice(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_129();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_228();
  if (v15 && v2 && v7 != v5)
  {
    OUTLINED_FUNCTION_166(v11);
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_246();
      if (!v15) {
        break;
      }
      if (v14) {
        uint64_t v15 = v12 == v13;
      }
      else {
        uint64_t v15 = 1;
      }
      if (!v15)
      {
        if (*(_DWORD *)(v12 + 32) != *(_DWORD *)(v13 + 32)) {
          break;
        }
        OUTLINED_FUNCTION_245();
        while (v19)
        {
          OUTLINED_FUNCTION_244();
          if (!v15) {
            goto LABEL_26;
          }
        }
      }
      uint64_t v16 = *(int *)(v8 + 24);
      uint64_t v17 = *(unsigned char *)(v1 + v16 + 4);
      uint64_t v18 = *(unsigned __int8 *)(v0 + v16 + 4);
      if (v17)
      {
        if (!v18) {
          break;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v20) {
          break;
        }
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      if ((OUTLINED_FUNCTION_269() & 1) == 0) {
        break;
      }
      ++v3;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if (v3 == v2) {
        goto LABEL_27;
      }
    }
LABEL_26:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
LABEL_27:
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for ModalityXChoiceAlignment(0);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_129();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_228();
  if (v12 && v0 && v5 != v3)
  {
    OUTLINED_FUNCTION_166(v8);
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_246();
      if (!v12) {
        break;
      }
      if (v11) {
        uint64_t v12 = v9 == v10;
      }
      else {
        uint64_t v12 = 1;
      }
      if (!v12)
      {
        if (*(_DWORD *)(v9 + 32) != *(_DWORD *)(v10 + 32)) {
          break;
        }
        OUTLINED_FUNCTION_245();
        while (v14)
        {
          OUTLINED_FUNCTION_244();
          if (!v12) {
            goto LABEL_21;
          }
        }
      }
      specialized static Array<A>.== infix(_:_:)();
      if ((v13 & 1) == 0) {
        break;
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      if ((OUTLINED_FUNCTION_269() & 1) == 0) {
        break;
      }
      ++v1;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if (v1 == v0) {
        goto LABEL_22;
      }
    }
LABEL_21:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  }
LABEL_22:
  OUTLINED_FUNCTION_16();
}

{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  int v20;
  char v21;
  char v22;
  int v23;
  char v24;
  char v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_17();
  uint64_t v4 = OUTLINED_FUNCTION_254();
  type metadata accessor for ModalityXItnAlignment(v4);
  OUTLINED_FUNCTION_1_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_94();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_179();
  uint64_t v8 = type metadata accessor for ModalityXRepeatedItnAlignment(v7);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_91();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_133();
  if (v12 && v11 && v3 != v0)
  {
    OUTLINED_FUNCTION_114();
    char v32 = v2;
    char v33 = v1;
    int v31 = v8;
    while (1)
    {
      uint64_t v15 = v13 * v14;
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_276();
      OUTLINED_FUNCTION_275();
      if (!v12)
      {
LABEL_36:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        goto LABEL_37;
      }
      if (v8 && v3 != (uint64_t (*)(uint64_t))v15) {
        break;
      }
LABEL_30:
      uint64_t v8 = v31;
      uint64_t v2 = v32;
      unint64_t v1 = v33;
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v30 = OUTLINED_FUNCTION_292();
      uint64_t v3 = type metadata accessor for ModalityXRepeatedItnAlignment;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if (v30)
      {
        OUTLINED_FUNCTION_322();
        if (!v12) {
          continue;
        }
      }
      goto LABEL_37;
    }
    OUTLINED_FUNCTION_225();
    int v34 = v16;
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      if (v1 >= *(void *)(v15 + 16)) {
        break;
      }
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_45();
      if (v18)
      {
        if (!v17) {
          goto LABEL_35;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v19) {
          goto LABEL_35;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v21)
      {
        if (!v20) {
          goto LABEL_35;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v22) {
          goto LABEL_35;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v24)
      {
        if (!v23) {
          goto LABEL_35;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v25) {
          goto LABEL_35;
        }
      }
      OUTLINED_FUNCTION_45();
      if (v27)
      {
        if (!v26) {
          goto LABEL_35;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v28)
        {
LABEL_35:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          goto LABEL_36;
        }
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v29 = OUTLINED_FUNCTION_325();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if ((v29 & 1) == 0) {
        goto LABEL_36;
      }
      ++v1;
      v2 += v34;
      if (v8 == v1) {
        goto LABEL_30;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_37:
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_16();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  BOOL v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;

  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for ModalityXEntities(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_130(v7, v39);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  uint64_t v9 = OUTLINED_FUNCTION_7_0(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_111();
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_230();
  uint64_t v44 = type metadata accessor for ModalityXCategoryEntities(v11);
  OUTLINED_FUNCTION_5_0();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v45 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v43 = v4;
  uint64_t v18 = *(void *)(v4 + 16);
  if (v18 != *(void *)(v2 + 16) || !v18 || v43 == v2) {
    goto LABEL_34;
  }
  uint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v40 = *(void *)(v15 + 72);
  BOOL v41 = (char *)&v39 - v16;
  uint64_t v20 = v18 - 1;
  uint64_t v39 = v5;
  while (1)
  {
    outlined init with copy of ModalityXSessionMetadata();
    BOOL v21 = v45;
    outlined init with copy of ModalityXSessionMetadata();
    int v22 = *(int *)(v44 + 20);
    char v23 = *(void *)&v21[v22 + 8];
    if (*(void *)&v17[v22 + 8])
    {
      if (!v23) {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_21((uint64_t)&v17[v22]);
      char v26 = v26 && v24 == v25;
      if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_33;
      }
    }
    else if (v23)
    {
      goto LABEL_33;
    }
    char v27 = v0 + *(int *)(v42 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)&v17[*(int *)(v44 + 24)], v0, &demangling cache variable for type metadata for ModalityXEntities?);
    int v28 = OUTLINED_FUNCTION_337();
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v28, v29, &demangling cache variable for type metadata for ModalityXEntities?);
    OUTLINED_FUNCTION_9(v0, 1, v5);
    if (!v26) {
      break;
    }
    OUTLINED_FUNCTION_9(v27, 1, v5);
    if (!v26)
    {
      uint64_t v38 = &demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?);
      goto LABEL_32;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXEntities?);
LABEL_22:
    type metadata accessor for UnknownStorage();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    char v35 = OUTLINED_FUNCTION_292();
    uint64_t v17 = v41;
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    uint64_t v37 = v20-- != 0;
    if (v35)
    {
      v19 += v40;
      if (v37) {
        continue;
      }
    }
    goto LABEL_34;
  }
  char v30 = OUTLINED_FUNCTION_208();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v30, v31, &demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_9(v27, 1, v5);
  if (v32)
  {
    uint64_t v38 = &demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?);
    goto LABEL_31;
  }
  outlined init with take of ModalityXSessionMetadata();
  specialized static Array<A>.== infix(_:_:)();
  if (v33)
  {
    type metadata accessor for UnknownStorage();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    uint64_t v5 = v39;
    int v34 = dispatch thunk of static Equatable.== infix(_:_:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXEntities?);
    if ((v34 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_22;
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  uint64_t v38 = &demangling cache variable for type metadata for ModalityXEntities?;
LABEL_31:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_32:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v38);
LABEL_33:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_34:
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  int v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_17();
  uint64_t v6 = OUTLINED_FUNCTION_254();
  type metadata accessor for ModalityXWordWithPronunciations(v6);
  OUTLINED_FUNCTION_1_0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_94();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_179();
  type metadata accessor for ModalityXEntityWords(v11);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_91();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_133();
  if (v26 && v14 && v5 != v0)
  {
    OUTLINED_FUNCTION_114();
    uint64_t v40 = v4;
    BOOL v41 = v3;
    uint64_t v39 = v16;
    uint64_t v38 = v8;
    while (1)
    {
      uint64_t v42 = v15;
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_276();
      uint64_t v17 = *v3;
      uint64_t v18 = *(void *)(*(void *)v4 + 16);
      if (v18 != *(void *)(*v3 + 16))
      {
LABEL_41:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        goto LABEL_42;
      }
      if (v18 && *(void *)v4 != v17) {
        break;
      }
LABEL_36:
      uint64_t v4 = v40;
      uint64_t v3 = v41;
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      OUTLINED_FUNCTION_268();
      uint64_t v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if (v37)
      {
        uint64_t v15 = v42 + 1;
        if (v42 + 1 != v39) {
          continue;
        }
      }
      goto LABEL_42;
    }
    uint64_t v19 = 0;
    uint64_t v20 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v43 = *(void *)(v38 + 72);
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      if (v19 >= *(void *)(v17 + 16)) {
        break;
      }
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_28();
      if (v23)
      {
        if (!v21
          || ((OUTLINED_FUNCTION_21(v22), v26) ? (char v26 = v24 == v25) : (char v26 = 0),
              !v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
LABEL_40:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          goto LABEL_41;
        }
      }
      else if (v21)
      {
        goto LABEL_40;
      }
      if ((specialized static Array<A>.== infix(_:_:)(*v2, *v1) & 1) == 0) {
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_45();
      if (v28)
      {
        if (!v27) {
          goto LABEL_40;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v29) {
          goto LABEL_40;
        }
      }
      OUTLINED_FUNCTION_28();
      if (v32)
      {
        if (!v30) {
          goto LABEL_40;
        }
        OUTLINED_FUNCTION_21(v31);
        char v35 = v26 && v33 == v34;
        if (!v35 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_40;
        }
      }
      else if (v30)
      {
        goto LABEL_40;
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      uint64_t v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      if ((v36 & 1) == 0) {
        goto LABEL_41;
      }
      ++v19;
      v20 += v43;
      if (v18 == v19) {
        goto LABEL_36;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_42:
    OUTLINED_FUNCTION_136();
    OUTLINED_FUNCTION_16();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  char v26;
  uint64_t v27;

  OUTLINED_FUNCTION_17();
  uint64_t v5 = OUTLINED_FUNCTION_41();
  type metadata accessor for ModalityXWordWithPronunciations(v5);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_92();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_90();
  if (v15 && v9 && v1 != v0)
  {
    OUTLINED_FUNCTION_222(v8);
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_148();
      if (v12)
      {
        if (!v10
          || ((OUTLINED_FUNCTION_21(v11), v15) ? (uint64_t v15 = v13 == v14) : (uint64_t v15 = 0),
              !v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
LABEL_33:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          OUTLINED_FUNCTION_309();
          break;
        }
      }
      else if (v10)
      {
        goto LABEL_33;
      }
      if ((specialized static Array<A>.== infix(_:_:)(*v3, *v2) & 1) == 0) {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_84();
      if (v17)
      {
        if (!v16) {
          goto LABEL_33;
        }
      }
      else
      {
        OUTLINED_FUNCTION_24();
        if (v18) {
          goto LABEL_33;
        }
      }
      OUTLINED_FUNCTION_148();
      if (v21)
      {
        if (!v19) {
          goto LABEL_33;
        }
        OUTLINED_FUNCTION_21(v20);
        char v24 = v15 && v22 == v23;
        if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_33;
        }
      }
      else if (v19)
      {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_300();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      int v25 = OUTLINED_FUNCTION_270();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_312();
      OUTLINED_FUNCTION_316();
      if (v25)
      {
        v4 += v27;
        if (v26) {
          continue;
        }
      }
      break;
    }
  }
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v14;
  char v15;
  char v16;
  char v17;
  char v18;

  OUTLINED_FUNCTION_17();
  uint64_t v4 = OUTLINED_FUNCTION_41();
  type metadata accessor for ModalityXSpeechRecognitionFeature(v4);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_92();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_90();
  if (v13 && v7 && v1 != v0)
  {
    OUTLINED_FUNCTION_267();
    while (1)
    {
      outlined init with copy of ModalityXSessionMetadata();
      OUTLINED_FUNCTION_255();
      OUTLINED_FUNCTION_148();
      if (v10)
      {
        if (!v8
          || ((OUTLINED_FUNCTION_21(v9), v13) ? (uint64_t v13 = v11 == v12) : (uint64_t v13 = 0),
              !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
LABEL_23:
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
          OUTLINED_FUNCTION_309();
          break;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_84();
      if (v15)
      {
        if (!v14) {
          goto LABEL_23;
        }
      }
      else
      {
        OUTLINED_FUNCTION_290();
        if (v16) {
          goto LABEL_23;
        }
      }
      type metadata accessor for UnknownStorage();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      uint64_t v17 = OUTLINED_FUNCTION_323();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
      OUTLINED_FUNCTION_312();
      OUTLINED_FUNCTION_316();
      if (v17)
      {
        v2 += v3;
        if (v18) {
          continue;
        }
      }
      break;
    }
  }
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  float *v42;
  float *v43;
  uint64_t v44;
  float v45;
  float v46;
  float v47;
  uint64_t v48;
  char v49;
  int v50;
  char v51;
  char v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  uint64_t v11 = OUTLINED_FUNCTION_7_0(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = OUTLINED_FUNCTION_229();
  type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v16);
  OUTLINED_FUNCTION_5_0();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_91();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  int v22 = (char *)&v55 - v21;
  char v23 = *(void *)(v5 + 16);
  if (v23 != *(void *)(v3 + 16) || !v23 || v5 == v3) {
    goto LABEL_42;
  }
  int v56 = v6;
  uint64_t v57 = v9;
  char v24 = 0;
  int v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v61 = v5 + v25;
  uint64_t v62 = v19;
  uint64_t v59 = *(void *)(v20 + 72);
  int v60 = v3 + v25;
  int v58 = v23;
  while (1)
  {
    outlined init with copy of ModalityXSessionMetadata();
    outlined init with copy of ModalityXSessionMetadata();
    char v26 = v62;
    char v27 = *(int *)(v62 + 20);
    int v28 = *(void *)(v1 + v27 + 8);
    if (*(void *)&v22[v27 + 8])
    {
      if (!v28) {
        goto LABEL_41;
      }
      OUTLINED_FUNCTION_21((uint64_t)&v22[v27]);
      int v31 = v31 && v29 == v30;
      if (!v31 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_41;
      }
    }
    else if (v28)
    {
      goto LABEL_41;
    }
    char v32 = *(int *)(v26 + 24);
    char v33 = v1 + v32;
    int v34 = v0 + *(int *)(v14 + 48);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)&v22[v32], v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v33, v34, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    OUTLINED_FUNCTION_9(v0, 1, v6);
    if (v31)
    {
      OUTLINED_FUNCTION_9(v34, 1, v6);
      if (!v31)
      {
        int v54 = &demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?);
        goto LABEL_40;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      goto LABEL_34;
    }
    char v35 = OUTLINED_FUNCTION_118();
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v35, v36, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    OUTLINED_FUNCTION_9(v34, 1, v6);
    if (v37) {
      break;
    }
    uint64_t v38 = v57;
    outlined init with take of ModalityXSessionMetadata();
    OUTLINED_FUNCTION_246();
    if (!v31) {
      goto LABEL_38;
    }
    if (v41 && v39 != v40)
    {
      if (*(float *)(v39 + 32) != *(float *)(v40 + 32)) {
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_245();
      while (v44)
      {
        uint64_t v45 = *v42++;
        uint64_t v46 = v45;
        BOOL v47 = *v43++;
        --v44;
        if (v46 != v47) {
          goto LABEL_38;
        }
      }
    }
    char v48 = *(int *)(v6 + 24);
    char v49 = v13[v48 + 4];
    uint64_t v50 = v38[v48 + 4];
    if (v49)
    {
      if (!v50) {
        goto LABEL_38;
      }
    }
    else
    {
      OUTLINED_FUNCTION_290();
      if (v51)
      {
LABEL_38:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
        int v54 = &demangling cache variable for type metadata for ModalityXAcousticFeature?;
        goto LABEL_39;
      }
    }
    type metadata accessor for UnknownStorage();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    uint64_t v52 = OUTLINED_FUNCTION_292();
    uint64_t v6 = v56;
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    if ((v52 & 1) == 0) {
      goto LABEL_41;
    }
LABEL_34:
    type metadata accessor for UnknownStorage();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    unint64_t v53 = dispatch thunk of static Equatable.== infix(_:_:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    OUTLINED_FUNCTION_318();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    if ((v53 & 1) != 0 && ++v24 != v58) {
      continue;
    }
    goto LABEL_42;
  }
  int v54 = &demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?);
LABEL_39:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_40:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v54);
LABEL_41:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_42:
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_16();
}

uint64_t specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __s1[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v5 = *(v3 - 1);
      unint64_t v6 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      uint64_t v10 = (uint64_t)(v3 + 2);
      v4 += 2;
      uint64_t v11 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
          }
          uint64_t v11 = HIDWORD(v5) - (int)v5;
LABEL_10:
          outlined copy of Data._Representation(v5, v6);
          break;
        case 2uLL:
          uint64_t v13 = *(void *)(v5 + 16);
          uint64_t v12 = *(void *)(v5 + 24);
          uint64_t v11 = v12 - v13;
          if (!__OFSUB__(v12, v13)) {
            goto LABEL_10;
          }
          goto LABEL_78;
        case 3uLL:
          break;
        default:
          uint64_t v11 = BYTE6(v6);
          break;
      }
      uint64_t v60 = v10;
      unint64_t v14 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v15) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_79;
          }
          uint64_t v15 = (int)v15;
LABEL_20:
          if (v11 != v15)
          {
LABEL_75:
            OUTLINED_FUNCTION_195();
            return 0;
          }
          if (v11 < 1)
          {
LABEL_31:
            OUTLINED_FUNCTION_195();
          }
          else
          {
            uint64_t v19 = v9;
            uint64_t v20 = v8 >> 32;
            switch(v19)
            {
              case 1:
                if (v5 >> 32 < (int)v5) {
                  goto LABEL_81;
                }
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                outlined copy of Data._Representation(v5, v6);
                OUTLINED_FUNCTION_71();
                if (__DataStorage._bytes.getter() && __OFSUB__((int)v5, __DataStorage._offset.getter())) {
                  goto LABEL_84;
                }
                int v39 = __DataStorage._length.getter();
                OUTLINED_FUNCTION_160(v39, v40, v41, v42, v43, v44, v45, v46, 0, v10, v61, v62, __s1[0]);
                OUTLINED_FUNCTION_104();
                if (v5 >> 32) {
                  goto LABEL_97;
                }
                OUTLINED_FUNCTION_195();
                OUTLINED_FUNCTION_104();
                char v35 = __s1[0];
                goto LABEL_53;
              case 2:
                uint64_t v24 = *(void *)(v5 + 16);
                uint64_t v25 = *(void *)(v5 + 24);
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                swift_retain();
                swift_retain();
                if (__DataStorage._bytes.getter() && __OFSUB__(v24, __DataStorage._offset.getter())) {
                  goto LABEL_83;
                }
                BOOL v18 = __OFSUB__(v25, v24);
                uint64_t v26 = v25 - v24;
                if (v18) {
                  goto LABEL_82;
                }
                int v27 = __DataStorage._length.getter();
                OUTLINED_FUNCTION_160(v27, v28, v29, v30, v31, v32, v33, v34, 0, v10, v61, v62, __s1[0]);
                OUTLINED_FUNCTION_104();
                if (v26) {
                  goto LABEL_96;
                }
                swift_release();
                swift_release();
                char v35 = __s1[0];
                OUTLINED_FUNCTION_104();
LABEL_53:
                OUTLINED_FUNCTION_195();
                OUTLINED_FUNCTION_104();
                OUTLINED_FUNCTION_104();
                if ((v35 & 1) == 0) {
                  return 0;
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v14) {
                  goto LABEL_55;
                }
                if (v14 == 1)
                {
                  if (v20 < (int)v8) {
                    goto LABEL_85;
                  }
                  OUTLINED_FUNCTION_71();
                  OUTLINED_FUNCTION_71();
                  uint64_t v21 = __DataStorage._bytes.getter();
                  if (v21)
                  {
                    uint64_t v36 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v8, v36)) {
                      goto LABEL_92;
                    }
                    v21 += (int)v8 - v36;
                  }
                  uint64_t v23 = __DataStorage._length.getter();
                  if (!v21) {
                    goto LABEL_94;
                  }
                  goto LABEL_44;
                }
                uint64_t v48 = *(void *)(v8 + 16);
                uint64_t v49 = *(void *)(v8 + 24);
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                swift_retain();
                swift_retain();
                uint64_t v50 = (char *)__DataStorage._bytes.getter();
                if (v50)
                {
                  uint64_t v51 = __DataStorage._offset.getter();
                  if (__OFSUB__(v48, v51)) {
                    goto LABEL_89;
                  }
                  v50 += v48 - v51;
                }
                BOOL v18 = __OFSUB__(v49, v48);
                int64_t v52 = v49 - v48;
                if (v18) {
                  goto LABEL_87;
                }
                uint64_t v53 = __DataStorage._length.getter();
                if (!v50) {
                  goto LABEL_93;
                }
                goto LABEL_69;
              default:
                __s1[0] = v5;
                LOWORD(__s1[1]) = v6;
                BYTE2(__s1[1]) = BYTE2(v6);
                BYTE3(__s1[1]) = BYTE3(v6);
                BYTE4(__s1[1]) = BYTE4(v6);
                BYTE5(__s1[1]) = BYTE5(v6);
                if (!v14)
                {
LABEL_55:
                  WORD1(v61) = v8;
                  BYTE4(v61) = BYTE2(v8);
                  BYTE5(v61) = BYTE3(v8);
                  BYTE6(v61) = BYTE4(v8);
                  HIBYTE(v61) = BYTE5(v8);
                  LOBYTE(v62) = BYTE6(v8);
                  BYTE1(v62) = HIBYTE(v8);
                  WORD1(v62) = v7;
                  BYTE4(v62) = BYTE2(v7);
                  BYTE5(v62) = BYTE3(v7);
                  BYTE6(v62) = BYTE4(v7);
                  HIBYTE(v62) = BYTE5(v7);
                  OUTLINED_FUNCTION_71();
                  OUTLINED_FUNCTION_71();
                  uint64_t v38 = (char *)&v61 + 2;
                  size_t v37 = BYTE6(v7);
LABEL_56:
                  int v47 = memcmp(__s1, v38, v37);
                  OUTLINED_FUNCTION_195();
                  OUTLINED_FUNCTION_104();
                  OUTLINED_FUNCTION_104();
                  if (v47) {
                    return 0;
                  }
                  break;
                }
                if (v14 == 1)
                {
                  if (v20 < (int)v8) {
                    goto LABEL_86;
                  }
                  OUTLINED_FUNCTION_71();
                  OUTLINED_FUNCTION_71();
                  uint64_t v21 = __DataStorage._bytes.getter();
                  if (v21)
                  {
                    uint64_t v22 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v8, v22)) {
                      goto LABEL_91;
                    }
                    v21 += (int)v8 - v22;
                  }
                  uint64_t v23 = __DataStorage._length.getter();
                  if (!v21)
                  {
                    __break(1u);
LABEL_93:
                    __break(1u);
LABEL_94:
                    __break(1u);
LABEL_95:
                    __break(1u);
LABEL_96:
                    OUTLINED_FUNCTION_104();
                    OUTLINED_FUNCTION_104();
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_97:
                    OUTLINED_FUNCTION_104();
                    OUTLINED_FUNCTION_104();
                    OUTLINED_FUNCTION_195();
                    __break(1u);
                    JUMPOUT(0x2569D0724);
                  }
LABEL_44:
                  if (v23 >= v20 - (int)v8) {
                    size_t v37 = v20 - (int)v8;
                  }
                  else {
                    size_t v37 = v23;
                  }
                  uint64_t v38 = (char *)v21;
                  goto LABEL_56;
                }
                uint64_t v54 = *(void *)(v8 + 16);
                uint64_t v55 = *(void *)(v8 + 24);
                OUTLINED_FUNCTION_71();
                OUTLINED_FUNCTION_71();
                swift_retain();
                swift_retain();
                uint64_t v50 = (char *)__DataStorage._bytes.getter();
                if (v50)
                {
                  uint64_t v56 = __DataStorage._offset.getter();
                  if (__OFSUB__(v54, v56)) {
                    goto LABEL_90;
                  }
                  v50 += v54 - v56;
                }
                BOOL v18 = __OFSUB__(v55, v54);
                int64_t v52 = v55 - v54;
                if (v18) {
                  goto LABEL_88;
                }
                uint64_t v53 = __DataStorage._length.getter();
                if (!v50) {
                  goto LABEL_95;
                }
LABEL_69:
                if (v53 >= v52) {
                  size_t v57 = v52;
                }
                else {
                  size_t v57 = v53;
                }
                int v58 = memcmp(__s1, v50, v57);
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_195();
                OUTLINED_FUNCTION_104();
                OUTLINED_FUNCTION_104();
                if (v58) {
                  return 0;
                }
                break;
            }
          }
          --v2;
          uint64_t v3 = (unint64_t *)v60;
          if (!v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v8 + 16);
          uint64_t v16 = *(void *)(v8 + 24);
          BOOL v18 = __OFSUB__(v16, v17);
          uint64_t v15 = v16 - v17;
          if (!v18) {
            goto LABEL_20;
          }
          goto LABEL_80;
        case 3uLL:
          if (v11) {
            goto LABEL_75;
          }
          goto LABEL_31;
        default:
          uint64_t v15 = BYTE6(v7);
          goto LABEL_20;
      }
    }
  }
  return 1;
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined copy of Data._Representation(a1, a2);
  }
  return a1;
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined consume of Data._Representation(a1, a2);
  }
  return a1;
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16) && v2 && a1 != a2 && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32))
  {
    uint64_t v3 = v2 - 1;
    do
    {
      if (!v3) {
        break;
      }
      OUTLINED_FUNCTION_244();
    }
    while (v4);
  }
}

BOOL specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  char v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t specialized static Array<A>.== infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  float v8 = a1 + 7;
  float v9 = a2 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXClientBoundFrame.OneOf_Payload);
}

uint64_t type metadata accessor for ModalityXRequestComplete(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRequestComplete);
}

uint64_t type metadata accessor for ModalityXProcessingError(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXProcessingError);
}

uint64_t type metadata accessor for ModalityXASRResult.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXASRResult.OneOf_Payload);
}

uint64_t type metadata accessor for ModalityXASRResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXASRResult);
}

uint64_t type metadata accessor for ModalityXSpeechProfileRebuildNeeded(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t type metadata accessor for ModalityXRequestMitigated(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRequestMitigated);
}

uint64_t type metadata accessor for ModalityXSpeechProfileBuildResponse(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileBuildResponse);
}

uint64_t type metadata accessor for ModalityXClientBoundFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXClientBoundFrame);
}

uint64_t type metadata accessor for ModalityXBeginRequest._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginRequest._StorageClass);
}

uint64_t outlined init with take of ModalityXAudioMetadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ModalityXBeginDictation._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginDictation._StorageClass);
}

uint64_t type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

uint64_t lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXServerBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t base witness table accessor for Message in ModalityXServerBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t base witness table accessor for Hashable in ModalityXServerBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t base witness table accessor for Equatable in ModalityXServerBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXClientBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t base witness table accessor for Message in ModalityXClientBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t base witness table accessor for Hashable in ModalityXClientBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t base witness table accessor for Equatable in ModalityXClientBoundFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSessionMetadata()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
}

uint64_t base witness table accessor for Message in ModalityXSessionMetadata()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
}

uint64_t base witness table accessor for Hashable in ModalityXSessionMetadata()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
}

uint64_t base witness table accessor for Equatable in ModalityXSessionMetadata()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXSessionMetadata);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfile()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfile()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfile()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfile()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfile);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXBeginRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
}

uint64_t base witness table accessor for Message in ModalityXBeginRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
}

uint64_t base witness table accessor for Hashable in ModalityXBeginRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
}

uint64_t base witness table accessor for Equatable in ModalityXBeginRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (void (*)(uint64_t))type metadata accessor for ModalityXBeginRequest);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXBeginDictation()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
}

uint64_t base witness table accessor for Message in ModalityXBeginDictation()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
}

uint64_t base witness table accessor for Hashable in ModalityXBeginDictation()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
}

uint64_t base witness table accessor for Equatable in ModalityXBeginDictation()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (void (*)(uint64_t))type metadata accessor for ModalityXBeginDictation);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXCancelRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
}

uint64_t base witness table accessor for Message in ModalityXCancelRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
}

uint64_t base witness table accessor for Hashable in ModalityXCancelRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
}

uint64_t base witness table accessor for Equatable in ModalityXCancelRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (void (*)(uint64_t))type metadata accessor for ModalityXCancelRequest);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAudioFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
}

uint64_t base witness table accessor for Message in ModalityXAudioFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
}

uint64_t base witness table accessor for Hashable in ModalityXAudioFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
}

uint64_t base witness table accessor for Equatable in ModalityXAudioFrame()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (void (*)(uint64_t))type metadata accessor for ModalityXAudioFrame);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXASRResult()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
}

uint64_t base witness table accessor for Message in ModalityXASRResult()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
}

uint64_t base witness table accessor for Hashable in ModalityXASRResult()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
}

uint64_t base witness table accessor for Equatable in ModalityXASRResult()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileRebuildNeeded()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfileRebuildNeeded()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfileRebuildNeeded()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfileRebuildNeeded()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXProcessingError()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
}

uint64_t base witness table accessor for Message in ModalityXProcessingError()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
}

uint64_t base witness table accessor for Hashable in ModalityXProcessingError()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
}

uint64_t base witness table accessor for Equatable in ModalityXProcessingError()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRequestMitigated()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
}

uint64_t base witness table accessor for Message in ModalityXRequestMitigated()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
}

uint64_t base witness table accessor for Hashable in ModalityXRequestMitigated()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
}

uint64_t base witness table accessor for Equatable in ModalityXRequestMitigated()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (void (*)(uint64_t))type metadata accessor for ModalityXRequestMitigated);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRequestComplete()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
}

uint64_t base witness table accessor for Message in ModalityXRequestComplete()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
}

uint64_t base witness table accessor for Hashable in ModalityXRequestComplete()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
}

uint64_t base witness table accessor for Equatable in ModalityXRequestComplete()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (void (*)(uint64_t))type metadata accessor for ModalityXRequestComplete);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileBuildRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfileBuildRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfileBuildRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfileBuildRequest()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileBegin()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

uint64_t base witness table accessor for Message in ModalityXStreamingSpeechProfileBegin()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

uint64_t base witness table accessor for Hashable in ModalityXStreamingSpeechProfileBegin()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

uint64_t base witness table accessor for Equatable in ModalityXStreamingSpeechProfileBegin()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileAddData()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t base witness table accessor for Message in ModalityXStreamingSpeechProfileAddData()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t base witness table accessor for Hashable in ModalityXStreamingSpeechProfileAddData()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t base witness table accessor for Equatable in ModalityXStreamingSpeechProfileAddData()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileCommit()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

uint64_t base witness table accessor for Message in ModalityXStreamingSpeechProfileCommit()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

uint64_t base witness table accessor for Hashable in ModalityXStreamingSpeechProfileCommit()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

uint64_t base witness table accessor for Equatable in ModalityXStreamingSpeechProfileCommit()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (void (*)(uint64_t))type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileBuildResponse()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfileBuildResponse()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfileBuildResponse()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfileBuildResponse()
{
  return lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void sub_2569D3C0C()
{
}

uint64_t sub_2569D3C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSessionMetadata, (uint64_t)type metadata accessor for ModalityXSessionMetadata, (uint64_t (*)(char *))ModalityXServerBoundFrame.sessionMetadata.setter);
}

uint64_t sub_2569D3C84()
{
  return ModalityXServerBoundFrame.beginRequest.getter();
}

uint64_t sub_2569D3CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest, (uint64_t (*)(char *))ModalityXServerBoundFrame.beginRequest.setter);
}

void sub_2569D3CFC()
{
}

uint64_t sub_2569D3D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioFrame, (uint64_t)type metadata accessor for ModalityXAudioFrame, (uint64_t (*)(char *))ModalityXServerBoundFrame.audioFrame.setter);
}

double sub_2569D3D74()
{
  return ModalityXServerBoundFrame.speechProfile.getter();
}

uint64_t sub_2569D3D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfile, (uint64_t)type metadata accessor for ModalityXSpeechProfile, (uint64_t (*)(char *))ModalityXServerBoundFrame.speechProfile.setter);
}

uint64_t sub_2569D3DEC()
{
  return ModalityXServerBoundFrame.cancelRequest.getter();
}

uint64_t sub_2569D3E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXCancelRequest, (uint64_t)type metadata accessor for ModalityXCancelRequest, (uint64_t (*)(char *))ModalityXServerBoundFrame.cancelRequest.setter);
}

uint64_t sub_2569D3E64()
{
  return ModalityXServerBoundFrame.beginDictation.getter();
}

uint64_t sub_2569D3E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation, (uint64_t (*)(char *))ModalityXServerBoundFrame.beginDictation.setter);
}

double sub_2569D3EDC()
{
  return ModalityXServerBoundFrame.speechProfileRequest.getter();
}

uint64_t sub_2569D3F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t (*)(char *))ModalityXServerBoundFrame.speechProfileRequest.setter);
}

void sub_2569D3F54()
{
}

uint64_t sub_2569D3F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileRequest.setter);
}

double sub_2569D3FCC()
{
  return ModalityXServerBoundFrame.streamingSpeechProfileData.getter();
}

uint64_t sub_2569D3FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileData.setter);
}

void sub_2569D4044()
{
}

uint64_t sub_2569D4068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileCommit.setter);
}

void sub_2569D40BC()
{
}

uint64_t sub_2569D40E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRequestComplete, (uint64_t)type metadata accessor for ModalityXRequestComplete, (uint64_t (*)(char *))ModalityXClientBoundFrame.requestComplete.setter);
}

void sub_2569D4134()
{
}

uint64_t sub_2569D4158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXProcessingError, (uint64_t)type metadata accessor for ModalityXProcessingError, (uint64_t (*)(char *))ModalityXClientBoundFrame.processingError.setter);
}

void sub_2569D41AC()
{
}

uint64_t sub_2569D41D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXASRResult, (uint64_t)type metadata accessor for ModalityXASRResult, (uint64_t (*)(char *))ModalityXClientBoundFrame.asrResult.setter);
}

void sub_2569D4224()
{
}

uint64_t sub_2569D4248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t (*)(char *))ModalityXClientBoundFrame.speechProfileRebuildNeeded.setter);
}

uint64_t sub_2569D429C()
{
  return ModalityXClientBoundFrame.requestMitigated.getter();
}

uint64_t sub_2569D42C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRequestMitigated, (uint64_t)type metadata accessor for ModalityXRequestMitigated, (uint64_t (*)(char *))ModalityXClientBoundFrame.requestMitigated.setter);
}

double sub_2569D4314()
{
  return ModalityXClientBoundFrame.speechProfileResponse.getter();
}

uint64_t sub_2569D4338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t (*)(char *))ModalityXClientBoundFrame.speechProfileResponse.setter);
}

uint64_t sub_2569D438C()
{
  return ModalityXSessionMetadata.deviceInfo.getter();
}

uint64_t sub_2569D43B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXDeviceInfo, (uint64_t)type metadata accessor for ModalityXDeviceInfo, (uint64_t (*)(char *))ModalityXSessionMetadata.deviceInfo.setter);
}

uint64_t sub_2569D4404()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXSessionMetadata.dataSharingOptInStatus.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D442C(unsigned __int8 *a1)
{
  return ModalityXSessionMetadata.dataSharingOptInStatus.setter();
}

void sub_2569D4450()
{
}

uint64_t sub_2569D4478()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSessionMetadata.language.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D44A4()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXSpeechProfile.moreDataFollows.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D44CC(unsigned __int8 *a1)
{
  return ModalityXSpeechProfile.moreDataFollows.setter();
}

uint64_t sub_2569D44F0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfile.languageProfile.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D451C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginRequest.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_2569D4548()
{
}

uint64_t sub_2569D4570()
{
  return ModalityXBeginRequest.audioMetadata.getter();
}

uint64_t sub_2569D4594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (uint64_t (*)(char *))ModalityXBeginRequest.audioMetadata.setter);
}

uint64_t sub_2569D45E8()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginRequest.enablePartialResults.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4610(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginRequest.enablePartialResults.setter(v1);
}

uint64_t sub_2569D4634()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginRequest.isPromptedDictation.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D465C(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginRequest.isPromptedDictation.setter(v1);
}

uint64_t sub_2569D4680()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginRequest.isPromptedConfirmation.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D46A8(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginRequest.isPromptedConfirmation.setter(v1);
}

uint64_t sub_2569D46CC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginRequest.foregroundAppID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D46F8()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginRequest.isAutoPunctuationEnabled.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4720(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginRequest.isAutoPunctuationEnabled.setter(v1);
}

uint64_t sub_2569D4744()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginRequest.inlineLmeItems.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_2569D4770()
{
  return ModalityXBeginDictation.audioMetadata.getter();
}

uint64_t sub_2569D4794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (uint64_t (*)(char *))ModalityXBeginDictation.audioMetadata.setter);
}

uint64_t sub_2569D47E8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4814()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.fieldID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4840()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.fieldLabel.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D486C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.applicationName.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4898()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.applicationVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_2569D48C4()
{
}

void sub_2569D48EC()
{
}

uint64_t sub_2569D4914()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.selectedText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4940()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.prefixText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D496C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.postfixText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4998()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.inlineLmeItems.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_2569D49C4()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.languages.getter();
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_2569D49F0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.region.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4A1C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.activationToken.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4A48()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginDictation.censorSpeech.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4A70(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginDictation.censorSpeech.setter(v1);
}

uint64_t sub_2569D4A94()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginDictation.speakerIndependentRecognition.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4ABC(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginDictation.speakerIndependentRecognition.setter(v1);
}

uint64_t sub_2569D4AE0()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginDictation.saveRequestAudio.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4B08(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginDictation.saveRequestAudio.setter(v1);
}

uint64_t sub_2569D4B2C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXBeginDictation.keyboardIdentifier.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4B58()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginDictation.enablePartialResults.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4B80(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginDictation.enablePartialResults.setter(v1);
}

void sub_2569D4BA4()
{
}

uint64_t sub_2569D4BCC()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXBeginDictation.isAutoPunctuationEnabled.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4BF4(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXBeginDictation.isAutoPunctuationEnabled.setter(v1);
}

uint64_t sub_2569D4C18()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXCancelRequest.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_2569D4C44()
{
}

uint64_t sub_2569D4C6C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXAudioFrame.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4C98()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXAudioFrame.lastFrame.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D4CC0(unsigned __int8 *a1)
{
  return ModalityXAudioFrame.lastFrame.setter();
}

uint64_t sub_2569D4CE4()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXASRResult.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4D10()
{
  return ModalityXASRResult.recognitionCandidate.getter();
}

uint64_t sub_2569D4D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, (uint64_t (*)(char *))ModalityXASRResult.recognitionCandidate.setter);
}

uint64_t sub_2569D4D88()
{
  return ModalityXASRResult.finalSpeechRecognitionResponse.getter();
}

uint64_t sub_2569D4DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t (*)(char *))ModalityXASRResult.finalSpeechRecognitionResponse.setter);
}

uint64_t sub_2569D4E00()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileRebuildNeeded.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4E2C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXProcessingError.code.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_2569D4E54()
{
}

uint64_t sub_2569D4E7C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXProcessingError.errorDescription.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_2569D4EA8()
{
}

uint64_t sub_2569D4ED0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXProcessingError.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4EFC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRequestMitigated.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_2569D4F28()
{
}

uint64_t sub_2569D4F50()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRequestComplete.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4F7C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildRequest.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D4FA8@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.getter(a1);
}

uint64_t sub_2569D4FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t (*)(char *))ModalityXSpeechProfileBuildRequest.sourceData.setter);
}

uint64_t sub_2569D5020()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildRequest.locale.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D504C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildRequest.phoneSetVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5078()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D50A4()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildRequest.existingPronunciationCache.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D50D0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileBegin.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D50FC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileBegin.locale.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5128()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileBegin.phoneSetVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5154()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileAddData.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5180@<X0>(void *a1@<X8>)
{
  return ModalityXStreamingSpeechProfileAddData.sourceData.getter(a1);
}

uint64_t sub_2569D51A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t (*)(char *))ModalityXStreamingSpeechProfileAddData.sourceData.setter);
}

uint64_t sub_2569D51F8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5224()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5250()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXStreamingSpeechProfileCommit.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D527C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildResponse.requestID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D52A8@<X0>(uint64_t a1@<X8>)
{
  return ModalityXSpeechProfileBuildResponse.error.getter(a1);
}

uint64_t sub_2569D52CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXProcessingError, (uint64_t)type metadata accessor for ModalityXProcessingError, (uint64_t (*)(char *))ModalityXSpeechProfileBuildResponse.error.setter);
}

uint64_t sub_2569D5320()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXSpeechProfileBuildResponse.incompleteProfile.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_2569D5348(unsigned __int8 *a1)
{
  return ModalityXSpeechProfileBuildResponse.incompleteProfile.setter();
}

uint64_t sub_2569D536C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildResponse.languageProfile.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_2569D5398()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechProfileBuildResponse.pronunciationCache.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXServerBoundFrame(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v17 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          uint64_t v18 = type metadata accessor for ModalityXBeginRequest(0);
          *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
          swift_retain();
          break;
        case 2u:
          *a1 = *a2;
          uint64_t v19 = (int *)type metadata accessor for ModalityXAudioFrame(0);
          uint64_t v20 = v19[5];
          v150 = (char *)a1 + v20;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = type metadata accessor for UnknownStorage();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v150, v21, v22);
          uint64_t v24 = v19[6];
          uint64_t v25 = (uint64_t *)((char *)a1 + v24);
          uint64_t v26 = (uint64_t *)((char *)a2 + v24);
          uint64_t v27 = v26[1];
          *uint64_t v25 = *v26;
          v25[1] = v27;
          *((unsigned char *)a1 + v19[7]) = *((unsigned char *)a2 + v19[7]);
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v28 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          uint64_t v29 = type metadata accessor for ModalityXSpeechProfile(0);
          *((unsigned char *)a1 + *(int *)(v29 + 20)) = *((unsigned char *)a2 + *(int *)(v29 + 20));
          uint64_t v30 = *(int *)(v29 + 24);
          int v31 = (char *)a1 + v30;
          int v32 = (char *)a2 + v30;
          unint64_t v33 = *((void *)v32 + 1);
          if (v33 >> 60 == 15)
          {
            *(_OWORD *)int v31 = *(_OWORD *)v32;
          }
          else
          {
            uint64_t v85 = *(void *)v32;
            outlined copy of Data._Representation(*(void *)v32, *((void *)v32 + 1));
            *(void *)int v31 = v85;
            *((void *)v31 + 1) = v33;
          }
          break;
        case 4u:
          uint64_t v34 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          uint64_t v35 = type metadata accessor for ModalityXCancelRequest(0);
          uint64_t v36 = *(int *)(v35 + 20);
          size_t v37 = (uint64_t *)((char *)a1 + v36);
          uint64_t v38 = (uint64_t *)((char *)a2 + v36);
          uint64_t v40 = *v38;
          uint64_t v39 = v38[1];
          *size_t v37 = v40;
          v37[1] = v39;
          *((unsigned char *)a1 + *(int *)(v35 + 24)) = *((unsigned char *)a2 + *(int *)(v35 + 24));
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v41 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
          uint64_t v42 = type metadata accessor for ModalityXBeginDictation(0);
          *(uint64_t *)((char *)a1 + *(int *)(v42 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v42 + 20));
          swift_retain();
          break;
        case 6u:
          uint64_t v43 = type metadata accessor for UnknownStorage();
          v151 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16);
          v151(a1, a2, v43);
          int v44 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
          uint64_t v45 = v44[5];
          int v46 = (uint64_t *)((char *)a1 + v45);
          int v47 = (uint64_t *)((char *)a2 + v45);
          uint64_t v48 = v47[1];
          *int v46 = *v47;
          v46[1] = v48;
          uint64_t v49 = v44[6];
          uint64_t v50 = (uint64_t *)((char *)a1 + v49);
          uint64_t v51 = (uint64_t *)((char *)a2 + v49);
          uint64_t v52 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            *uint64_t v50 = *v51;
            uint64_t v110 = *(int *)(v52 + 20);
            uint64_t v111 = (char *)v50 + v110;
            uint64_t v112 = (char *)v51 + v110;
            swift_bridgeObjectRetain();
            v151((uint64_t *)v111, (uint64_t *)v112, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
          }
          uint64_t v113 = v44[7];
          uint64_t v114 = (uint64_t *)((char *)a1 + v113);
          BOOL v115 = (uint64_t *)((char *)a2 + v113);
          uint64_t v116 = v115[1];
          *uint64_t v114 = *v115;
          v114[1] = v116;
          uint64_t v117 = v44[8];
          v118 = (uint64_t *)((char *)a1 + v117);
          int v119 = (uint64_t *)((char *)a2 + v117);
          uint64_t v120 = v119[1];
          void *v118 = *v119;
          v118[1] = v120;
          uint64_t v121 = v44[9];
          v122 = (char *)a1 + v121;
          int v123 = (uint64_t *)((char *)a2 + v121);
          unint64_t v124 = *(uint64_t *)((char *)a2 + v121 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v124 >> 60 == 15)
          {
            *(_OWORD *)v122 = *(_OWORD *)v123;
          }
          else
          {
            uint64_t v125 = *v123;
            outlined copy of Data._Representation(*v123, v124);
            *(void *)v122 = v125;
            *((void *)v122 + 1) = v124;
          }
          uint64_t v126 = v44[10];
          int v127 = (char *)a1 + v126;
          v128 = (char *)a2 + v126;
          unint64_t v129 = *((void *)v128 + 1);
          if (v129 >> 60 == 15)
          {
            *(_OWORD *)int v127 = *(_OWORD *)v128;
          }
          else
          {
            uint64_t v130 = *(void *)v128;
            outlined copy of Data._Representation(*(void *)v128, *((void *)v128 + 1));
            *(void *)int v127 = v130;
            *((void *)v127 + 1) = v129;
          }
          break;
        case 7u:
          uint64_t v54 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          uint64_t v55 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
          uint64_t v56 = v55[5];
          size_t v57 = (uint64_t *)((char *)a1 + v56);
          int v58 = (uint64_t *)((char *)a2 + v56);
          uint64_t v60 = *v58;
          uint64_t v59 = v58[1];
          *size_t v57 = v60;
          v57[1] = v59;
          uint64_t v61 = v55[6];
          uint64_t v62 = (uint64_t *)((char *)a1 + v61);
          uint64_t v63 = (uint64_t *)((char *)a2 + v61);
          uint64_t v64 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v64;
          uint64_t v65 = v55[7];
          BOOL v66 = (uint64_t *)((char *)a1 + v65);
          uint64_t v67 = (uint64_t *)((char *)a2 + v65);
          uint64_t v68 = v67[1];
          *BOOL v66 = *v67;
          v66[1] = v68;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 8u:
          uint64_t v69 = type metadata accessor for UnknownStorage();
          v152 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v69 - 8) + 16);
          v152(a1, a2, v69);
          unint64_t v70 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
          uint64_t v71 = v70[5];
          BOOL v72 = (uint64_t *)((char *)a1 + v71);
          v73 = (uint64_t *)((char *)a2 + v71);
          uint64_t v74 = v73[1];
          void *v72 = *v73;
          v72[1] = v74;
          uint64_t v75 = v70[6];
          v76 = (uint64_t *)((char *)a1 + v75);
          uint64_t v77 = (uint64_t *)((char *)a2 + v75);
          uint64_t v78 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
          {
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            void *v76 = *v77;
            uint64_t v131 = *(int *)(v78 + 20);
            v132 = (char *)v76 + v131;
            v133 = (char *)v77 + v131;
            swift_bridgeObjectRetain();
            v152((uint64_t *)v132, (uint64_t *)v133, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
          }
          uint64_t v134 = v70[7];
          v135 = (char *)a1 + v134;
          v136 = (char *)a2 + v134;
          unint64_t v137 = *((void *)v136 + 1);
          if (v137 >> 60 == 15)
          {
            *(_OWORD *)v135 = *(_OWORD *)v136;
          }
          else
          {
            uint64_t v138 = *(void *)v136;
            outlined copy of Data._Representation(*(void *)v136, *((void *)v136 + 1));
            *(void *)v135 = v138;
            *((void *)v135 + 1) = v137;
          }
          uint64_t v139 = v70[8];
          v140 = (char *)a1 + v139;
          v141 = (char *)a2 + v139;
          unint64_t v142 = *((void *)v141 + 1);
          if (v142 >> 60 == 15)
          {
            *(_OWORD *)v140 = *(_OWORD *)v141;
          }
          else
          {
            uint64_t v143 = *(void *)v141;
            outlined copy of Data._Representation(*(void *)v141, *((void *)v141 + 1));
            *(void *)v140 = v143;
            *((void *)v140 + 1) = v142;
          }
          break;
        case 9u:
          uint64_t v80 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
          uint64_t v81 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
          v82 = (uint64_t *)((char *)a1 + v81);
          v83 = (uint64_t *)((char *)a2 + v81);
          uint64_t v84 = v83[1];
          void *v82 = *v83;
          v82[1] = v84;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v10 = type metadata accessor for UnknownStorage();
          uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
          v11(a1, a2, v10);
          v149 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
          uint64_t v12 = v149[5];
          uint64_t v13 = (char *)a1 + v12;
          unint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15))
          {
            uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
            memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            v11((uint64_t *)v13, (uint64_t *)v14, v10);
            uint64_t v86 = v15[5];
            uint64_t v87 = &v13[v86];
            uint64_t v88 = &v14[v86];
            uint64_t v89 = *((void *)v88 + 1);
            *(void *)uint64_t v87 = *(void *)v88;
            *((void *)v87 + 1) = v89;
            uint64_t v90 = v15[6];
            v91 = &v13[v90];
            uint64_t v92 = &v14[v90];
            uint64_t v93 = *((void *)v92 + 1);
            *(void *)v91 = *(void *)v92;
            *((void *)v91 + 1) = v93;
            uint64_t v94 = v15[7];
            uint64_t v95 = &v13[v94];
            unint64_t v96 = &v14[v94];
            uint64_t v97 = *((void *)v96 + 1);
            *(void *)uint64_t v95 = *(void *)v96;
            *((void *)v95 + 1) = v97;
            uint64_t v98 = v15[8];
            int v99 = &v13[v98];
            v100 = &v14[v98];
            uint64_t v101 = *((void *)v100 + 1);
            *(void *)int v99 = *(void *)v100;
            *((void *)v99 + 1) = v101;
            uint64_t v102 = v15[9];
            int v103 = &v13[v102];
            v104 = &v14[v102];
            uint64_t v105 = *((void *)v104 + 1);
            *(void *)int v103 = *(void *)v104;
            *((void *)v103 + 1) = v105;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
          }
          *((unsigned char *)a1 + v149[6]) = *((unsigned char *)a2 + v149[6]);
          *((unsigned char *)a1 + v149[7]) = *((unsigned char *)a2 + v149[7]);
          uint64_t v106 = v149[8];
          int v107 = (uint64_t *)((char *)a1 + v106);
          v108 = (uint64_t *)((char *)a2 + v106);
          uint64_t v109 = v108[1];
          *int v107 = *v108;
          v107[1] = v109;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v144 = *(int *)(a3 + 20);
    v145 = (char *)a1 + v144;
    v146 = (char *)a2 + v144;
    uint64_t v147 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
  }
  return a1;
}

uint64_t destroy for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v5 = type metadata accessor for UnknownStorage();
        unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        v6(a1, v5);
        uint64_t v7 = a1 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 20);
        uint64_t v8 = type metadata accessor for ModalityXDeviceInfo(0);
        if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
        {
          v6(v7, v5);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_26;
      case 1u:
        uint64_t v9 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
        type metadata accessor for ModalityXBeginRequest(0);
        goto LABEL_11;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v10 = a1 + *(int *)(type metadata accessor for ModalityXAudioFrame(0) + 20);
        uint64_t v11 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        goto LABEL_26;
      case 3u:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
        uint64_t v13 = *(int *)(type metadata accessor for ModalityXSpeechProfile(0) + 24);
        goto LABEL_23;
      case 4u:
        uint64_t v14 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
        type metadata accessor for ModalityXCancelRequest(0);
        goto LABEL_26;
      case 5u:
        uint64_t v15 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
        type metadata accessor for ModalityXBeginDictation(0);
LABEL_11:
        swift_release();
        break;
      case 6u:
        uint64_t v16 = type metadata accessor for UnknownStorage();
        uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
        v17(a1, v16);
        uint64_t v18 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        swift_bridgeObjectRelease();
        uint64_t v19 = a1 + v18[6];
        uint64_t v20 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
        {
          swift_bridgeObjectRelease();
          v17(v19 + *(int *)(v20 + 20), v16);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = (uint64_t *)(a1 + v18[9]);
        unint64_t v22 = v21[1];
        if (v22 >> 60 != 15) {
          outlined consume of Data._Representation(*v21, v22);
        }
        uint64_t v13 = v18[10];
        goto LABEL_23;
      case 7u:
        uint64_t v23 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
        type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      case 8u:
        uint64_t v24 = type metadata accessor for UnknownStorage();
        uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
        v25(a1, v24);
        uint64_t v26 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        swift_bridgeObjectRelease();
        uint64_t v27 = a1 + v26[6];
        uint64_t v28 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (!__swift_getEnumTagSinglePayload(v27, 1, v28))
        {
          swift_bridgeObjectRelease();
          v25(v27 + *(int *)(v28 + 20), v24);
        }
        uint64_t v29 = (uint64_t *)(a1 + v26[7]);
        unint64_t v30 = v29[1];
        if (v30 >> 60 != 15) {
          outlined consume of Data._Representation(*v29, v30);
        }
        uint64_t v13 = v26[8];
LABEL_23:
        int v31 = (uint64_t *)(a1 + v13);
        unint64_t v32 = v31[1];
        if (v32 >> 60 != 15) {
          outlined consume of Data._Representation(*v31, v32);
        }
        break;
      case 9u:
        uint64_t v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(a1, v33);
        type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
LABEL_26:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  uint64_t v34 = a1 + *(int *)(a2 + 20);
  uint64_t v35 = type metadata accessor for UnknownStorage();
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8);

  return v36(v34, v35);
}

void *initializeWithCopy for ModalityXServerBoundFrame(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v17 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v18 = v17[5];
        v148 = (char *)a1 + v18;
        uint64_t v19 = (char *)a2 + v18;
        uint64_t v20 = type metadata accessor for UnknownStorage();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v148, v19, v20);
        uint64_t v22 = v17[6];
        uint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v26 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v27 + 20)) = *((unsigned char *)a2 + *(int *)(v27 + 20));
        uint64_t v28 = *(int *)(v27 + 24);
        uint64_t v29 = (char *)a1 + v28;
        unint64_t v30 = (char *)a2 + v28;
        unint64_t v31 = *((void *)v30 + 1);
        if (v31 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        }
        else
        {
          uint64_t v83 = *(void *)v30;
          outlined copy of Data._Representation(*(void *)v30, *((void *)v30 + 1));
          *(void *)uint64_t v29 = v83;
          *((void *)v29 + 1) = v31;
        }
        break;
      case 4u:
        uint64_t v32 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        uint64_t v33 = type metadata accessor for ModalityXCancelRequest(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = (void *)((char *)a1 + v34);
        uint64_t v36 = (void *)((char *)a2 + v34);
        uint64_t v38 = *v36;
        uint64_t v37 = v36[1];
        *uint64_t v35 = v38;
        v35[1] = v37;
        *((unsigned char *)a1 + *(int *)(v33 + 24)) = *((unsigned char *)a2 + *(int *)(v33 + 24));
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v39 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        uint64_t v40 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v40 + 20)) = *(void *)((char *)a2 + *(int *)(v40 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v41 = type metadata accessor for UnknownStorage();
        v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        v149((char *)a1, (char *)a2, v41);
        uint64_t v42 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        uint64_t v43 = v42[5];
        int v44 = (void *)((char *)a1 + v43);
        uint64_t v45 = (void *)((char *)a2 + v43);
        uint64_t v46 = v45[1];
        *int v44 = *v45;
        v44[1] = v46;
        uint64_t v47 = v42[6];
        uint64_t v48 = (void *)((char *)a1 + v47);
        uint64_t v49 = (void *)((char *)a2 + v47);
        uint64_t v50 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          *uint64_t v48 = *v49;
          uint64_t v108 = *(int *)(v50 + 20);
          uint64_t v109 = (char *)v48 + v108;
          uint64_t v110 = (char *)v49 + v108;
          swift_bridgeObjectRetain();
          v149(v109, v110, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
        }
        uint64_t v111 = v42[7];
        uint64_t v112 = (void *)((char *)a1 + v111);
        uint64_t v113 = (void *)((char *)a2 + v111);
        uint64_t v114 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v114;
        uint64_t v115 = v42[8];
        uint64_t v116 = (void *)((char *)a1 + v115);
        uint64_t v117 = (void *)((char *)a2 + v115);
        uint64_t v118 = v117[1];
        void *v116 = *v117;
        v116[1] = v118;
        uint64_t v119 = v42[9];
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (void *)((char *)a2 + v119);
        unint64_t v122 = *(void *)((char *)a2 + v119 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v122 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
        }
        else
        {
          uint64_t v123 = *v121;
          outlined copy of Data._Representation(*v121, v122);
          *(void *)uint64_t v120 = v123;
          *((void *)v120 + 1) = v122;
        }
        uint64_t v124 = v42[10];
        uint64_t v125 = (char *)a1 + v124;
        uint64_t v126 = (char *)a2 + v124;
        unint64_t v127 = *((void *)v126 + 1);
        if (v127 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
        }
        else
        {
          uint64_t v128 = *(void *)v126;
          outlined copy of Data._Representation(*(void *)v126, *((void *)v126 + 1));
          *(void *)uint64_t v125 = v128;
          *((void *)v125 + 1) = v127;
        }
        break;
      case 7u:
        uint64_t v52 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
        uint64_t v53 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        uint64_t v54 = v53[5];
        uint64_t v55 = (void *)((char *)a1 + v54);
        uint64_t v56 = (void *)((char *)a2 + v54);
        uint64_t v58 = *v56;
        uint64_t v57 = v56[1];
        *uint64_t v55 = v58;
        v55[1] = v57;
        uint64_t v59 = v53[6];
        uint64_t v60 = (void *)((char *)a1 + v59);
        uint64_t v61 = (void *)((char *)a2 + v59);
        uint64_t v62 = v61[1];
        *uint64_t v60 = *v61;
        v60[1] = v62;
        uint64_t v63 = v53[7];
        uint64_t v64 = (void *)((char *)a1 + v63);
        uint64_t v65 = (void *)((char *)a2 + v63);
        uint64_t v66 = v65[1];
        *uint64_t v64 = *v65;
        v64[1] = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v67 = type metadata accessor for UnknownStorage();
        v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        v150((char *)a1, (char *)a2, v67);
        uint64_t v68 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        uint64_t v69 = v68[5];
        unint64_t v70 = (void *)((char *)a1 + v69);
        uint64_t v71 = (void *)((char *)a2 + v69);
        uint64_t v72 = v71[1];
        *unint64_t v70 = *v71;
        v70[1] = v72;
        uint64_t v73 = v68[6];
        uint64_t v74 = (void *)((char *)a1 + v73);
        uint64_t v75 = (void *)((char *)a2 + v73);
        uint64_t v76 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          void *v74 = *v75;
          uint64_t v129 = *(int *)(v76 + 20);
          uint64_t v130 = (char *)v74 + v129;
          uint64_t v131 = (char *)v75 + v129;
          swift_bridgeObjectRetain();
          v150(v130, v131, v67);
          __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
        }
        uint64_t v132 = v68[7];
        v133 = (char *)a1 + v132;
        uint64_t v134 = (char *)a2 + v132;
        unint64_t v135 = *((void *)v134 + 1);
        if (v135 >> 60 == 15)
        {
          *(_OWORD *)v133 = *(_OWORD *)v134;
        }
        else
        {
          uint64_t v136 = *(void *)v134;
          outlined copy of Data._Representation(*(void *)v134, *((void *)v134 + 1));
          *(void *)v133 = v136;
          *((void *)v133 + 1) = v135;
        }
        uint64_t v137 = v68[8];
        uint64_t v138 = (char *)a1 + v137;
        uint64_t v139 = (char *)a2 + v137;
        unint64_t v140 = *((void *)v139 + 1);
        if (v140 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
        }
        else
        {
          uint64_t v141 = *(void *)v139;
          outlined copy of Data._Representation(*(void *)v139, *((void *)v139 + 1));
          *(void *)uint64_t v138 = v141;
          *((void *)v138 + 1) = v140;
        }
        break;
      case 9u:
        uint64_t v78 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
        uint64_t v79 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
        uint64_t v80 = (void *)((char *)a1 + v79);
        uint64_t v81 = (void *)((char *)a2 + v79);
        uint64_t v82 = v81[1];
        void *v80 = *v81;
        v80[1] = v82;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v8 = type metadata accessor for UnknownStorage();
        uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
        v9((char *)a1, (char *)a2, v8);
        uint64_t v147 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v10 = v147[5];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          v9(v11, v12, v8);
          uint64_t v84 = v13[5];
          uint64_t v85 = &v11[v84];
          uint64_t v86 = &v12[v84];
          uint64_t v87 = *((void *)v86 + 1);
          *(void *)uint64_t v85 = *(void *)v86;
          *((void *)v85 + 1) = v87;
          uint64_t v88 = v13[6];
          uint64_t v89 = &v11[v88];
          uint64_t v90 = &v12[v88];
          uint64_t v91 = *((void *)v90 + 1);
          *(void *)uint64_t v89 = *(void *)v90;
          *((void *)v89 + 1) = v91;
          uint64_t v92 = v13[7];
          uint64_t v93 = &v11[v92];
          uint64_t v94 = &v12[v92];
          uint64_t v95 = *((void *)v94 + 1);
          *(void *)uint64_t v93 = *(void *)v94;
          *((void *)v93 + 1) = v95;
          uint64_t v96 = v13[8];
          uint64_t v97 = &v11[v96];
          uint64_t v98 = &v12[v96];
          uint64_t v99 = *((void *)v98 + 1);
          *(void *)uint64_t v97 = *(void *)v98;
          *((void *)v97 + 1) = v99;
          uint64_t v100 = v13[9];
          uint64_t v101 = &v11[v100];
          uint64_t v102 = &v12[v100];
          uint64_t v103 = *((void *)v102 + 1);
          *(void *)uint64_t v101 = *(void *)v102;
          *((void *)v101 + 1) = v103;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
        }
        *((unsigned char *)a1 + v147[6]) = *((unsigned char *)a2 + v147[6]);
        *((unsigned char *)a1 + v147[7]) = *((unsigned char *)a2 + v147[7]);
        uint64_t v104 = v147[8];
        uint64_t v105 = (void *)((char *)a1 + v104);
        uint64_t v106 = (void *)((char *)a2 + v104);
        uint64_t v107 = v106[1];
        void *v105 = *v106;
        v105[1] = v107;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v142 = *(int *)(a3 + 20);
  uint64_t v143 = (char *)a1 + v142;
  uint64_t v144 = (char *)a2 + v142;
  uint64_t v145 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
  return a1;
}

void *assignWithCopy for ModalityXServerBoundFrame(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v24 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          uint64_t v25 = type metadata accessor for ModalityXBeginRequest(0);
          *(void *)((char *)a1 + *(int *)(v25 + 20)) = *(void *)((char *)a2 + *(int *)(v25 + 20));
          swift_retain();
          break;
        case 2u:
          *a1 = *a2;
          uint64_t v26 = (int *)type metadata accessor for ModalityXAudioFrame(0);
          uint64_t v27 = v26[5];
          __dstf = (char *)a1 + v27;
          uint64_t v28 = (char *)a2 + v27;
          uint64_t v29 = type metadata accessor for UnknownStorage();
          unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
          swift_bridgeObjectRetain();
          v30(__dstf, v28, v29);
          uint64_t v31 = v26[6];
          uint64_t v32 = (void *)((char *)a1 + v31);
          uint64_t v33 = (void *)((char *)a2 + v31);
          *uint64_t v32 = *v33;
          v32[1] = v33[1];
          *((unsigned char *)a1 + v26[7]) = *((unsigned char *)a2 + v26[7]);
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v34 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          uint64_t v35 = type metadata accessor for ModalityXSpeechProfile(0);
          *((unsigned char *)a1 + *(int *)(v35 + 20)) = *((unsigned char *)a2 + *(int *)(v35 + 20));
          uint64_t v36 = *(int *)(v35 + 24);
          uint64_t v37 = (char *)a1 + v36;
          uint64_t v38 = (char *)a2 + v36;
          unint64_t v39 = *((void *)v38 + 1);
          if (v39 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
          }
          else
          {
            uint64_t v82 = *(void *)v38;
            outlined copy of Data._Representation(*(void *)v38, *((void *)v38 + 1));
            *(void *)uint64_t v37 = v82;
            *((void *)v37 + 1) = v39;
          }
          break;
        case 4u:
          uint64_t v40 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
          uint64_t v41 = type metadata accessor for ModalityXCancelRequest(0);
          uint64_t v42 = *(int *)(v41 + 20);
          uint64_t v43 = (void *)((char *)a1 + v42);
          int v44 = (void *)((char *)a2 + v42);
          *uint64_t v43 = *v44;
          v43[1] = v44[1];
          *((unsigned char *)a1 + *(int *)(v41 + 24)) = *((unsigned char *)a2 + *(int *)(v41 + 24));
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v45 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
          uint64_t v46 = type metadata accessor for ModalityXBeginDictation(0);
          *(void *)((char *)a1 + *(int *)(v46 + 20)) = *(void *)((char *)a2 + *(int *)(v46 + 20));
          swift_retain();
          break;
        case 6u:
          uint64_t v47 = type metadata accessor for UnknownStorage();
          __dstb = *(void **)(*(void *)(v47 - 8) + 16);
          ((void (*)(void *, void *, uint64_t))__dstb)(a1, a2, v47);
          uint64_t v48 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
          uint64_t v49 = v48[5];
          uint64_t v50 = (void *)((char *)a1 + v49);
          uint64_t v51 = (void *)((char *)a2 + v49);
          *uint64_t v50 = *v51;
          v50[1] = v51[1];
          uint64_t v52 = v48[6];
          uint64_t v53 = (void *)((char *)a1 + v52);
          uint64_t v54 = (void *)((char *)a2 + v52);
          uint64_t v55 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            *uint64_t v53 = *v54;
            uint64_t v159 = *(int *)(v55 + 20);
            v160 = (char *)v53 + v159;
            v161 = (char *)v54 + v159;
            swift_bridgeObjectRetain();
            ((void (*)(char *, char *, uint64_t))__dstb)(v160, v161, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v162 = v48[7];
          v163 = (void *)((char *)a1 + v162);
          v164 = (void *)((char *)a2 + v162);
          void *v163 = *v164;
          v163[1] = v164[1];
          uint64_t v165 = v48[8];
          v166 = (void *)((char *)a1 + v165);
          v167 = (void *)((char *)a2 + v165);
          void *v166 = *v167;
          v166[1] = v167[1];
          uint64_t v168 = v48[9];
          v169 = (char *)a1 + v168;
          v170 = (void *)((char *)a2 + v168);
          unint64_t v171 = *(void *)((char *)a2 + v168 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v171 >> 60 == 15)
          {
            *(_OWORD *)v169 = *(_OWORD *)v170;
          }
          else
          {
            uint64_t v172 = *v170;
            outlined copy of Data._Representation(*v170, v171);
            *(void *)v169 = v172;
            *((void *)v169 + 1) = v171;
          }
          uint64_t v173 = v48[10];
          v174 = (char *)a1 + v173;
          v175 = (char *)a2 + v173;
          unint64_t v176 = *((void *)v175 + 1);
          if (v176 >> 60 == 15)
          {
            *(_OWORD *)v174 = *(_OWORD *)v175;
          }
          else
          {
            uint64_t v177 = *(void *)v175;
            outlined copy of Data._Representation(*(void *)v175, *((void *)v175 + 1));
            *(void *)v174 = v177;
            *((void *)v174 + 1) = v176;
          }
          break;
        case 7u:
          uint64_t v57 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          uint64_t v58 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
          uint64_t v59 = v58[5];
          uint64_t v60 = (void *)((char *)a1 + v59);
          uint64_t v61 = (void *)((char *)a2 + v59);
          *uint64_t v60 = *v61;
          v60[1] = v61[1];
          uint64_t v62 = v58[6];
          uint64_t v63 = (void *)((char *)a1 + v62);
          uint64_t v64 = (void *)((char *)a2 + v62);
          *uint64_t v63 = *v64;
          v63[1] = v64[1];
          uint64_t v65 = v58[7];
          uint64_t v66 = (void *)((char *)a1 + v65);
          uint64_t v67 = (void *)((char *)a2 + v65);
          *uint64_t v66 = *v67;
          v66[1] = v67[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 8u:
          uint64_t v68 = type metadata accessor for UnknownStorage();
          __dstc = *(void **)(*(void *)(v68 - 8) + 16);
          ((void (*)(void *, void *, uint64_t))__dstc)(a1, a2, v68);
          uint64_t v69 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
          uint64_t v70 = v69[5];
          uint64_t v71 = (void *)((char *)a1 + v70);
          uint64_t v72 = (void *)((char *)a2 + v70);
          void *v71 = *v72;
          v71[1] = v72[1];
          uint64_t v73 = v69[6];
          uint64_t v74 = (void *)((char *)a1 + v73);
          uint64_t v75 = (void *)((char *)a2 + v73);
          uint64_t v76 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
          {
            uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            void *v74 = *v75;
            uint64_t v178 = *(int *)(v76 + 20);
            v179 = (char *)v74 + v178;
            v180 = (char *)v75 + v178;
            swift_bridgeObjectRetain();
            ((void (*)(char *, char *, uint64_t))__dstc)(v179, v180, v68);
            __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
          }
          uint64_t v181 = v69[7];
          v182 = (char *)a1 + v181;
          v183 = (char *)a2 + v181;
          unint64_t v184 = *((void *)v183 + 1);
          if (v184 >> 60 == 15)
          {
            *(_OWORD *)v182 = *(_OWORD *)v183;
          }
          else
          {
            uint64_t v185 = *(void *)v183;
            outlined copy of Data._Representation(*(void *)v183, *((void *)v183 + 1));
            *(void *)v182 = v185;
            *((void *)v182 + 1) = v184;
          }
          uint64_t v186 = v69[8];
          v187 = (char *)a1 + v186;
          v188 = (char *)a2 + v186;
          unint64_t v189 = *((void *)v188 + 1);
          if (v189 >> 60 == 15)
          {
            *(_OWORD *)v187 = *(_OWORD *)v188;
          }
          else
          {
            uint64_t v190 = *(void *)v188;
            outlined copy of Data._Representation(*(void *)v188, *((void *)v188 + 1));
            *(void *)v187 = v190;
            *((void *)v187 + 1) = v189;
          }
          break;
        case 9u:
          uint64_t v78 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
          uint64_t v79 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
          uint64_t v80 = (void *)((char *)a1 + v79);
          uint64_t v81 = (void *)((char *)a2 + v79);
          void *v80 = *v81;
          v80[1] = v81[1];
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v9 = type metadata accessor for UnknownStorage();
          uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
          v10((char *)a1, (char *)a2, v9);
          uint64_t v11 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
          uint64_t v12 = v11[5];
          __dst = (char *)a1 + v12;
          uint64_t v13 = (char *)a2 + v12;
          uint64_t v14 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14))
          {
            uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
            memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64));
          }
          else
          {
            v10(__dst, v13, v9);
            uint64_t v83 = v14[5];
            uint64_t v84 = &__dst[v83];
            uint64_t v85 = &v13[v83];
            *(void *)uint64_t v84 = *(void *)v85;
            *((void *)v84 + 1) = *((void *)v85 + 1);
            uint64_t v86 = v14[6];
            uint64_t v87 = &__dst[v86];
            uint64_t v88 = &v13[v86];
            *(void *)uint64_t v87 = *(void *)v88;
            *((void *)v87 + 1) = *((void *)v88 + 1);
            uint64_t v89 = v14[7];
            uint64_t v90 = &__dst[v89];
            uint64_t v91 = &v13[v89];
            *(void *)uint64_t v90 = *(void *)v91;
            *((void *)v90 + 1) = *((void *)v91 + 1);
            uint64_t v92 = v14[8];
            uint64_t v93 = &__dst[v92];
            uint64_t v94 = &v13[v92];
            *(void *)uint64_t v93 = *(void *)v94;
            *((void *)v93 + 1) = *((void *)v94 + 1);
            uint64_t v95 = v14[9];
            uint64_t v96 = &__dst[v95];
            uint64_t v97 = &v13[v95];
            *(void *)uint64_t v96 = *(void *)v97;
            *((void *)v96 + 1) = *((void *)v97 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, (uint64_t)v14);
          }
          *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
          *((unsigned char *)a1 + v11[7]) = *((unsigned char *)a2 + v11[7]);
          uint64_t v98 = v11[8];
          uint64_t v99 = (void *)((char *)a1 + v98);
          uint64_t v100 = (void *)((char *)a2 + v98);
          void *v99 = *v100;
          v99[1] = v100[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_77;
    }
LABEL_8:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_77;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v101 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 16))(a1, a2, v101);
        uint64_t v102 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v102 + 20)) = *(void *)((char *)a2 + *(int *)(v102 + 20));
        swift_retain();
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v103 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v104 = v103[5];
        __dstg = (char *)a1 + v104;
        uint64_t v105 = (char *)a2 + v104;
        uint64_t v106 = type metadata accessor for UnknownStorage();
        uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        v107(__dstg, v105, v106);
        uint64_t v108 = v103[6];
        uint64_t v109 = (void *)((char *)a1 + v108);
        uint64_t v110 = (void *)((char *)a2 + v108);
        *uint64_t v109 = *v110;
        v109[1] = v110[1];
        *((unsigned char *)a1 + v103[7]) = *((unsigned char *)a2 + v103[7]);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v111 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v111 - 8) + 16))(a1, a2, v111);
        uint64_t v112 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v112 + 20)) = *((unsigned char *)a2 + *(int *)(v112 + 20));
        uint64_t v113 = *(int *)(v112 + 24);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        unint64_t v116 = *((void *)v115 + 1);
        if (v116 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
        }
        else
        {
          uint64_t v191 = *(void *)v115;
          outlined copy of Data._Representation(*(void *)v115, *((void *)v115 + 1));
          *(void *)uint64_t v114 = v191;
          *((void *)v114 + 1) = v116;
        }
        break;
      case 4u:
        uint64_t v117 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 16))(a1, a2, v117);
        uint64_t v118 = type metadata accessor for ModalityXCancelRequest(0);
        uint64_t v119 = *(int *)(v118 + 20);
        uint64_t v120 = (void *)((char *)a1 + v119);
        uint64_t v121 = (void *)((char *)a2 + v119);
        void *v120 = *v121;
        v120[1] = v121[1];
        *((unsigned char *)a1 + *(int *)(v118 + 24)) = *((unsigned char *)a2 + *(int *)(v118 + 24));
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v122 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 16))(a1, a2, v122);
        uint64_t v123 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v123 + 20)) = *(void *)((char *)a2 + *(int *)(v123 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v124 = type metadata accessor for UnknownStorage();
        __dstd = *(void **)(*(void *)(v124 - 8) + 16);
        ((void (*)(void *, void *, uint64_t))__dstd)(a1, a2, v124);
        uint64_t v125 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        uint64_t v126 = v125[5];
        unint64_t v127 = (void *)((char *)a1 + v126);
        uint64_t v128 = (void *)((char *)a2 + v126);
        *unint64_t v127 = *v128;
        v127[1] = v128[1];
        uint64_t v129 = v125[6];
        uint64_t v130 = (void *)((char *)a1 + v129);
        uint64_t v131 = (void *)((char *)a2 + v129);
        uint64_t v132 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v132))
        {
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
          *uint64_t v130 = *v131;
          uint64_t v210 = *(int *)(v132 + 20);
          v211 = (char *)v130 + v210;
          v212 = (char *)v131 + v210;
          swift_bridgeObjectRetain();
          ((void (*)(char *, char *, uint64_t))__dstd)(v211, v212, v124);
          __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v132);
        }
        uint64_t v213 = v125[7];
        v214 = (void *)((char *)a1 + v213);
        v215 = (void *)((char *)a2 + v213);
        void *v214 = *v215;
        v214[1] = v215[1];
        uint64_t v216 = v125[8];
        v217 = (void *)((char *)a1 + v216);
        v218 = (void *)((char *)a2 + v216);
        void *v217 = *v218;
        v217[1] = v218[1];
        uint64_t v219 = v125[9];
        v220 = (char *)a1 + v219;
        v221 = (void *)((char *)a2 + v219);
        unint64_t v222 = *(void *)((char *)a2 + v219 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v222 >> 60 == 15)
        {
          *(_OWORD *)v220 = *(_OWORD *)v221;
        }
        else
        {
          uint64_t v223 = *v221;
          outlined copy of Data._Representation(*v221, v222);
          *(void *)v220 = v223;
          *((void *)v220 + 1) = v222;
        }
        uint64_t v224 = v125[10];
        v225 = (char *)a1 + v224;
        v226 = (char *)a2 + v224;
        unint64_t v227 = *((void *)v226 + 1);
        if (v227 >> 60 == 15)
        {
          *(_OWORD *)v225 = *(_OWORD *)v226;
        }
        else
        {
          uint64_t v228 = *(void *)v226;
          outlined copy of Data._Representation(*(void *)v226, *((void *)v226 + 1));
          *(void *)v225 = v228;
          *((void *)v225 + 1) = v227;
        }
        break;
      case 7u:
        uint64_t v134 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v134 - 8) + 16))(a1, a2, v134);
        unint64_t v135 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        uint64_t v136 = v135[5];
        uint64_t v137 = (void *)((char *)a1 + v136);
        uint64_t v138 = (void *)((char *)a2 + v136);
        *uint64_t v137 = *v138;
        v137[1] = v138[1];
        uint64_t v139 = v135[6];
        unint64_t v140 = (void *)((char *)a1 + v139);
        uint64_t v141 = (void *)((char *)a2 + v139);
        void *v140 = *v141;
        v140[1] = v141[1];
        uint64_t v142 = v135[7];
        uint64_t v143 = (void *)((char *)a1 + v142);
        uint64_t v144 = (void *)((char *)a2 + v142);
        *uint64_t v143 = *v144;
        v143[1] = v144[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v145 = type metadata accessor for UnknownStorage();
        __dste = *(void **)(*(void *)(v145 - 8) + 16);
        ((void (*)(void *, void *, uint64_t))__dste)(a1, a2, v145);
        v146 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        uint64_t v147 = v146[5];
        v148 = (void *)((char *)a1 + v147);
        v149 = (void *)((char *)a2 + v147);
        void *v148 = *v149;
        v148[1] = v149[1];
        uint64_t v150 = v146[6];
        v151 = (void *)((char *)a1 + v150);
        v152 = (void *)((char *)a2 + v150);
        uint64_t v153 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, v153))
        {
          uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          void *v151 = *v152;
          uint64_t v229 = *(int *)(v153 + 20);
          v230 = (char *)v151 + v229;
          v231 = (char *)v152 + v229;
          swift_bridgeObjectRetain();
          ((void (*)(char *, char *, uint64_t))__dste)(v230, v231, v145);
          __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v153);
        }
        uint64_t v232 = v146[7];
        v233 = (char *)a1 + v232;
        v234 = (char *)a2 + v232;
        unint64_t v235 = *((void *)v234 + 1);
        if (v235 >> 60 == 15)
        {
          *(_OWORD *)v233 = *(_OWORD *)v234;
        }
        else
        {
          uint64_t v236 = *(void *)v234;
          outlined copy of Data._Representation(*(void *)v234, *((void *)v234 + 1));
          *(void *)v233 = v236;
          *((void *)v233 + 1) = v235;
        }
        uint64_t v237 = v146[8];
        v238 = (char *)a1 + v237;
        v239 = (char *)a2 + v237;
        unint64_t v240 = *((void *)v239 + 1);
        if (v240 >> 60 == 15)
        {
          *(_OWORD *)v238 = *(_OWORD *)v239;
        }
        else
        {
          uint64_t v241 = *(void *)v239;
          outlined copy of Data._Representation(*(void *)v239, *((void *)v239 + 1));
          *(void *)v238 = v241;
          *((void *)v238 + 1) = v240;
        }
        break;
      case 9u:
        uint64_t v155 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v155 - 8) + 16))(a1, a2, v155);
        uint64_t v156 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
        v157 = (void *)((char *)a1 + v156);
        v158 = (void *)((char *)a2 + v156);
        void *v157 = *v158;
        v157[1] = v158[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v17 = type metadata accessor for UnknownStorage();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
        v18((char *)a1, (char *)a2, v17);
        __dsta = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v19 = __dsta[5];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, (uint64_t)v22))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          v18(v20, v21, v17);
          uint64_t v192 = v22[5];
          v193 = &v20[v192];
          v194 = &v21[v192];
          *(void *)v193 = *(void *)v194;
          *((void *)v193 + 1) = *((void *)v194 + 1);
          uint64_t v195 = v22[6];
          v196 = &v20[v195];
          v197 = &v21[v195];
          *(void *)v196 = *(void *)v197;
          *((void *)v196 + 1) = *((void *)v197 + 1);
          uint64_t v198 = v22[7];
          v199 = &v20[v198];
          v200 = &v21[v198];
          *(void *)v199 = *(void *)v200;
          *((void *)v199 + 1) = *((void *)v200 + 1);
          uint64_t v201 = v22[8];
          v202 = &v20[v201];
          v203 = &v21[v201];
          *(void *)v202 = *(void *)v203;
          *((void *)v202 + 1) = *((void *)v203 + 1);
          uint64_t v204 = v22[9];
          v205 = &v20[v204];
          v206 = &v21[v204];
          *(void *)v205 = *(void *)v206;
          *((void *)v205 + 1) = *((void *)v206 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, (uint64_t)v22);
        }
        *((unsigned char *)a1 + __dsta[6]) = *((unsigned char *)a2 + __dsta[6]);
        *((unsigned char *)a1 + __dsta[7]) = *((unsigned char *)a2 + __dsta[7]);
        uint64_t v207 = __dsta[8];
        v208 = (void *)((char *)a1 + v207);
        v209 = (void *)((char *)a2 + v207);
        void *v208 = *v209;
        v208[1] = v209[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_77:
  uint64_t v242 = *(int *)(a3 + 20);
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  uint64_t v245 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 24))(v243, v244, v245);
  return a1;
}

void *initializeWithTake for ModalityXServerBoundFrame(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v16 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)((char *)a2 + *(int *)(v17 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v18 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v19 = v18[5];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        *(_OWORD *)((char *)a1 + v18[6]) = *(_OWORD *)((char *)a2 + v18[6]);
        *((unsigned char *)a1 + v18[7]) = *((unsigned char *)a2 + v18[7]);
        break;
      case 3u:
        uint64_t v23 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v24 + 20)) = *((unsigned char *)a2 + *(int *)(v24 + 20));
        *(_OWORD *)((char *)a1 + *(int *)(v24 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 24));
        break;
      case 4u:
        uint64_t v25 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        uint64_t v26 = type metadata accessor for ModalityXCancelRequest(0);
        *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
        *((unsigned char *)a1 + *(int *)(v26 + 24)) = *((unsigned char *)a2 + *(int *)(v26 + 24));
        break;
      case 5u:
        uint64_t v27 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        uint64_t v28 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v28 + 20)) = *(void *)((char *)a2 + *(int *)(v28 + 20));
        break;
      case 6u:
        uint64_t v29 = type metadata accessor for UnknownStorage();
        unint64_t v30 = (void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32);
        uint64_t v55 = *v30;
        (*v30)((char *)a1, (char *)a2, v29);
        uint64_t v31 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        *(_OWORD *)((char *)a1 + v31[5]) = *(_OWORD *)((char *)a2 + v31[5]);
        uint64_t v32 = v31[6];
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (void *)((char *)a2 + v32);
        uint64_t v35 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
        {
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          *uint64_t v33 = *v34;
          v55((char *)v33 + *(int *)(v35 + 20), (char *)v34 + *(int *)(v35 + 20), v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
        }
        *(_OWORD *)((char *)a1 + v31[7]) = *(_OWORD *)((char *)a2 + v31[7]);
        *(_OWORD *)((char *)a1 + v31[8]) = *(_OWORD *)((char *)a2 + v31[8]);
        *(_OWORD *)((char *)a1 + v31[9]) = *(_OWORD *)((char *)a2 + v31[9]);
        *(_OWORD *)((char *)a1 + v31[10]) = *(_OWORD *)((char *)a2 + v31[10]);
        break;
      case 7u:
        uint64_t v37 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
        uint64_t v38 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        *(_OWORD *)((char *)a1 + v38[5]) = *(_OWORD *)((char *)a2 + v38[5]);
        *(_OWORD *)((char *)a1 + v38[6]) = *(_OWORD *)((char *)a2 + v38[6]);
        *(_OWORD *)((char *)a1 + v38[7]) = *(_OWORD *)((char *)a2 + v38[7]);
        break;
      case 8u:
        uint64_t v39 = type metadata accessor for UnknownStorage();
        uint64_t v40 = (void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
        uint64_t v56 = *v40;
        (*v40)((char *)a1, (char *)a2, v39);
        uint64_t v41 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        *(_OWORD *)((char *)a1 + v41[5]) = *(_OWORD *)((char *)a2 + v41[5]);
        uint64_t v42 = v41[6];
        uint64_t v43 = (void *)((char *)a1 + v42);
        int v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *uint64_t v43 = *v44;
          v56((char *)v43 + *(int *)(v45 + 20), (char *)v44 + *(int *)(v45 + 20), v39);
          __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
        }
        *(_OWORD *)((char *)a1 + v41[7]) = *(_OWORD *)((char *)a2 + v41[7]);
        *(_OWORD *)((char *)a1 + v41[8]) = *(_OWORD *)((char *)a2 + v41[8]);
        break;
      case 9u:
        uint64_t v47 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
        uint64_t v48 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
        *(_OWORD *)((char *)a1 + *(int *)(v48 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v48 + 20));
        break;
      default:
        uint64_t v8 = type metadata accessor for UnknownStorage();
        uint64_t v9 = (void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
        uint64_t v54 = *v9;
        (*v9)((char *)a1, (char *)a2, v8);
        uint64_t v10 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v11 = v10[5];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          v54(v12, v13, v8);
          *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
          *(_OWORD *)&v12[v14[6]] = *(_OWORD *)&v13[v14[6]];
          *(_OWORD *)&v12[v14[7]] = *(_OWORD *)&v13[v14[7]];
          *(_OWORD *)&v12[v14[8]] = *(_OWORD *)&v13[v14[8]];
          *(_OWORD *)&v12[v14[9]] = *(_OWORD *)&v13[v14[9]];
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, (uint64_t)v14);
        }
        *((unsigned char *)a1 + v10[6]) = *((unsigned char *)a2 + v10[6]);
        *((unsigned char *)a1 + v10[7]) = *((unsigned char *)a2 + v10[7]);
        *(_OWORD *)((char *)a1 + v10[8]) = *(_OWORD *)((char *)a2 + v10[8]);
        break;
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v49 = *(int *)(a3 + 20);
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  return a1;
}

void *assignWithTake for ModalityXServerBoundFrame(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v26 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
          uint64_t v27 = type metadata accessor for ModalityXBeginRequest(0);
          *(void *)((char *)a1 + *(int *)(v27 + 20)) = *(void *)((char *)a2 + *(int *)(v27 + 20));
          break;
        case 2u:
          *a1 = *a2;
          uint64_t v28 = (int *)type metadata accessor for ModalityXAudioFrame(0);
          uint64_t v29 = v28[5];
          unint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          *(_OWORD *)((char *)a1 + v28[6]) = *(_OWORD *)((char *)a2 + v28[6]);
          *((unsigned char *)a1 + v28[7]) = *((unsigned char *)a2 + v28[7]);
          break;
        case 3u:
          uint64_t v33 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          uint64_t v34 = type metadata accessor for ModalityXSpeechProfile(0);
          *((unsigned char *)a1 + *(int *)(v34 + 20)) = *((unsigned char *)a2 + *(int *)(v34 + 20));
          *(_OWORD *)((char *)a1 + *(int *)(v34 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v34 + 24));
          break;
        case 4u:
          uint64_t v35 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
          uint64_t v36 = type metadata accessor for ModalityXCancelRequest(0);
          *(_OWORD *)((char *)a1 + *(int *)(v36 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v36 + 20));
          *((unsigned char *)a1 + *(int *)(v36 + 24)) = *((unsigned char *)a2 + *(int *)(v36 + 24));
          break;
        case 5u:
          uint64_t v37 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
          uint64_t v38 = type metadata accessor for ModalityXBeginDictation(0);
          *(void *)((char *)a1 + *(int *)(v38 + 20)) = *(void *)((char *)a2 + *(int *)(v38 + 20));
          break;
        case 6u:
          uint64_t v39 = type metadata accessor for UnknownStorage();
          uint64_t v40 = (void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
          uint64_t v99 = *v40;
          (*v40)((char *)a1, (char *)a2, v39);
          uint64_t v41 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
          *(_OWORD *)((char *)a1 + v41[5]) = *(_OWORD *)((char *)a2 + v41[5]);
          uint64_t v42 = v41[6];
          uint64_t v43 = (void *)((char *)a1 + v42);
          int v44 = (void *)((char *)a2 + v42);
          uint64_t v45 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            *uint64_t v43 = *v44;
            v99((char *)v43 + *(int *)(v45 + 20), (char *)v44 + *(int *)(v45 + 20), v39);
            __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
          }
          *(_OWORD *)((char *)a1 + v41[7]) = *(_OWORD *)((char *)a2 + v41[7]);
          *(_OWORD *)((char *)a1 + v41[8]) = *(_OWORD *)((char *)a2 + v41[8]);
          *(_OWORD *)((char *)a1 + v41[9]) = *(_OWORD *)((char *)a2 + v41[9]);
          *(_OWORD *)((char *)a1 + v41[10]) = *(_OWORD *)((char *)a2 + v41[10]);
          break;
        case 7u:
          uint64_t v47 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
          uint64_t v48 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
          *(_OWORD *)((char *)a1 + v48[5]) = *(_OWORD *)((char *)a2 + v48[5]);
          *(_OWORD *)((char *)a1 + v48[6]) = *(_OWORD *)((char *)a2 + v48[6]);
          *(_OWORD *)((char *)a1 + v48[7]) = *(_OWORD *)((char *)a2 + v48[7]);
          break;
        case 8u:
          uint64_t v49 = type metadata accessor for UnknownStorage();
          uint64_t v50 = (void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32);
          uint64_t v100 = *v50;
          (*v50)((char *)a1, (char *)a2, v49);
          uint64_t v51 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
          *(_OWORD *)((char *)a1 + v51[5]) = *(_OWORD *)((char *)a2 + v51[5]);
          uint64_t v52 = v51[6];
          uint64_t v53 = (void *)((char *)a1 + v52);
          uint64_t v54 = (void *)((char *)a2 + v52);
          uint64_t v55 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            *uint64_t v53 = *v54;
            v100((char *)v53 + *(int *)(v55 + 20), (char *)v54 + *(int *)(v55 + 20), v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          }
          *(_OWORD *)((char *)a1 + v51[7]) = *(_OWORD *)((char *)a2 + v51[7]);
          *(_OWORD *)((char *)a1 + v51[8]) = *(_OWORD *)((char *)a2 + v51[8]);
          break;
        case 9u:
          uint64_t v57 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          uint64_t v58 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
          *(_OWORD *)((char *)a1 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v58 + 20));
          break;
        default:
          uint64_t v9 = type metadata accessor for UnknownStorage();
          uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
          uint64_t v97 = *v10;
          (*v10)((char *)a1, (char *)a2, v9);
          uint64_t v11 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
          uint64_t v12 = v11[5];
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15))
          {
            uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
            memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
          }
          else
          {
            v97(v13, v14, v9);
            *(_OWORD *)&v13[v15[5]] = *(_OWORD *)&v14[v15[5]];
            *(_OWORD *)&v13[v15[6]] = *(_OWORD *)&v14[v15[6]];
            *(_OWORD *)&v13[v15[7]] = *(_OWORD *)&v14[v15[7]];
            *(_OWORD *)&v13[v15[8]] = *(_OWORD *)&v14[v15[8]];
            *(_OWORD *)&v13[v15[9]] = *(_OWORD *)&v14[v15[9]];
            __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
          }
          *((unsigned char *)a1 + v11[6]) = *((unsigned char *)a2 + v11[6]);
          *((unsigned char *)a1 + v11[7]) = *((unsigned char *)a2 + v11[7]);
          *(_OWORD *)((char *)a1 + v11[8]) = *(_OWORD *)((char *)a2 + v11[8]);
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_49;
    }
LABEL_8:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_49;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v59 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 32))(a1, a2, v59);
        uint64_t v60 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v60 + 20)) = *(void *)((char *)a2 + *(int *)(v60 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v61 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v62 = v61[5];
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        *(_OWORD *)((char *)a1 + v61[6]) = *(_OWORD *)((char *)a2 + v61[6]);
        *((unsigned char *)a1 + v61[7]) = *((unsigned char *)a2 + v61[7]);
        break;
      case 3u:
        uint64_t v66 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 32))(a1, a2, v66);
        uint64_t v67 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v67 + 20)) = *((unsigned char *)a2 + *(int *)(v67 + 20));
        *(_OWORD *)((char *)a1 + *(int *)(v67 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v67 + 24));
        break;
      case 4u:
        uint64_t v68 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        uint64_t v69 = type metadata accessor for ModalityXCancelRequest(0);
        *(_OWORD *)((char *)a1 + *(int *)(v69 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v69 + 20));
        *((unsigned char *)a1 + *(int *)(v69 + 24)) = *((unsigned char *)a2 + *(int *)(v69 + 24));
        break;
      case 5u:
        uint64_t v70 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 32))(a1, a2, v70);
        uint64_t v71 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v71 + 20)) = *(void *)((char *)a2 + *(int *)(v71 + 20));
        break;
      case 6u:
        uint64_t v72 = type metadata accessor for UnknownStorage();
        uint64_t v73 = (void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32);
        uint64_t v101 = *v73;
        (*v73)((char *)a1, (char *)a2, v72);
        uint64_t v74 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        *(_OWORD *)((char *)a1 + v74[5]) = *(_OWORD *)((char *)a2 + v74[5]);
        uint64_t v75 = v74[6];
        uint64_t v76 = (void *)((char *)a1 + v75);
        uint64_t v77 = (void *)((char *)a2 + v75);
        uint64_t v78 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
        {
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          void *v76 = *v77;
          v101((char *)v76 + *(int *)(v78 + 20), (char *)v77 + *(int *)(v78 + 20), v72);
          __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
        }
        *(_OWORD *)((char *)a1 + v74[7]) = *(_OWORD *)((char *)a2 + v74[7]);
        *(_OWORD *)((char *)a1 + v74[8]) = *(_OWORD *)((char *)a2 + v74[8]);
        *(_OWORD *)((char *)a1 + v74[9]) = *(_OWORD *)((char *)a2 + v74[9]);
        *(_OWORD *)((char *)a1 + v74[10]) = *(_OWORD *)((char *)a2 + v74[10]);
        break;
      case 7u:
        uint64_t v80 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
        uint64_t v81 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        *(_OWORD *)((char *)a1 + v81[5]) = *(_OWORD *)((char *)a2 + v81[5]);
        *(_OWORD *)((char *)a1 + v81[6]) = *(_OWORD *)((char *)a2 + v81[6]);
        *(_OWORD *)((char *)a1 + v81[7]) = *(_OWORD *)((char *)a2 + v81[7]);
        break;
      case 8u:
        uint64_t v82 = type metadata accessor for UnknownStorage();
        uint64_t v83 = (void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32);
        uint64_t v102 = *v83;
        (*v83)((char *)a1, (char *)a2, v82);
        uint64_t v84 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        *(_OWORD *)((char *)a1 + v84[5]) = *(_OWORD *)((char *)a2 + v84[5]);
        uint64_t v85 = v84[6];
        uint64_t v86 = (void *)((char *)a1 + v85);
        uint64_t v87 = (void *)((char *)a2 + v85);
        uint64_t v88 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
        {
          uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          void *v86 = *v87;
          v102((char *)v86 + *(int *)(v88 + 20), (char *)v87 + *(int *)(v88 + 20), v82);
          __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
        }
        *(_OWORD *)((char *)a1 + v84[7]) = *(_OWORD *)((char *)a2 + v84[7]);
        *(_OWORD *)((char *)a1 + v84[8]) = *(_OWORD *)((char *)a2 + v84[8]);
        break;
      case 9u:
        uint64_t v90 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v90 - 8) + 32))(a1, a2, v90);
        uint64_t v91 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
        *(_OWORD *)((char *)a1 + *(int *)(v91 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v91 + 20));
        break;
      default:
        uint64_t v18 = type metadata accessor for UnknownStorage();
        uint64_t v19 = (void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
        uint64_t v98 = *v19;
        (*v19)((char *)a1, (char *)a2, v18);
        uint64_t v20 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, (uint64_t)v24))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          v98(v22, v23, v18);
          *(_OWORD *)&v22[v24[5]] = *(_OWORD *)&v23[v24[5]];
          *(_OWORD *)&v22[v24[6]] = *(_OWORD *)&v23[v24[6]];
          *(_OWORD *)&v22[v24[7]] = *(_OWORD *)&v23[v24[7]];
          *(_OWORD *)&v22[v24[8]] = *(_OWORD *)&v23[v24[8]];
          *(_OWORD *)&v22[v24[9]] = *(_OWORD *)&v23[v24[9]];
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, (uint64_t)v24);
        }
        *((unsigned char *)a1 + v20[6]) = *((unsigned char *)a2 + v20[6]);
        *((unsigned char *)a1 + v20[7]) = *((unsigned char *)a2 + v20[7]);
        *(_OWORD *)((char *)a1 + v20[8]) = *(_OWORD *)((char *)a2 + v20[8]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_49:
  uint64_t v92 = *(int *)(a3 + 20);
  uint64_t v93 = (char *)a1 + v92;
  uint64_t v94 = (char *)a2 + v92;
  uint64_t v95 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 40))(v93, v94, v95);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569D995C);
}

uint64_t sub_2569D995C()
{
  return __swift_get_extra_inhabitant_indexTm();
}

uint64_t storeEnumTagSinglePayload for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569D997C);
}

uint64_t sub_2569D997C(uint64_t a1, uint64_t a2, int a3)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3);
}

void type metadata completion function for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for ModalityXServerBoundFrame.OneOf_Payload(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v17 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v18 = v17[5];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for UnknownStorage();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        uint64_t v23 = v17[6];
        uint64_t v24 = (void *)((char *)a1 + v23);
        uint64_t v25 = (void *)((char *)a2 + v23);
        uint64_t v26 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v26;
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v27 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v28 + 20)) = *((unsigned char *)a2 + *(int *)(v28 + 20));
        uint64_t v29 = *(int *)(v28 + 24);
        unint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        unint64_t v32 = *((void *)v31 + 1);
        if (v32 >> 60 == 15)
        {
          *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
        }
        else
        {
          uint64_t v86 = *(void *)v31;
          outlined copy of Data._Representation(*(void *)v31, *((void *)v31 + 1));
          *(void *)unint64_t v30 = v86;
          *((void *)v30 + 1) = v32;
        }
        break;
      case 4u:
        uint64_t v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = type metadata accessor for ModalityXCancelRequest(0);
        uint64_t v35 = *(int *)(v34 + 20);
        uint64_t v36 = (void *)((char *)a1 + v35);
        uint64_t v37 = (void *)((char *)a2 + v35);
        uint64_t v39 = *v37;
        uint64_t v38 = v37[1];
        *uint64_t v36 = v39;
        v36[1] = v38;
        *((unsigned char *)a1 + *(int *)(v34 + 24)) = *((unsigned char *)a2 + *(int *)(v34 + 24));
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v40 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        uint64_t v41 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v41 + 20)) = *(void *)((char *)a2 + *(int *)(v41 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v42 = type metadata accessor for UnknownStorage();
        uint64_t v43 = (void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        v146 = *v43;
        (*v43)((char *)a1, (char *)a2, v42);
        int v44 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        uint64_t v45 = v44[5];
        uint64_t v46 = (void *)((char *)a1 + v45);
        uint64_t v47 = (void *)((char *)a2 + v45);
        uint64_t v48 = v47[1];
        *uint64_t v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = v44[6];
        uint64_t v50 = (void *)((char *)a1 + v49);
        uint64_t v51 = (void *)((char *)a2 + v49);
        uint64_t v52 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          *uint64_t v50 = *v51;
          uint64_t v111 = *(int *)(v52 + 20);
          uint64_t v112 = (char *)v50 + v111;
          uint64_t v113 = (char *)v51 + v111;
          swift_bridgeObjectRetain();
          v146(v112, v113, v42);
          __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v114 = v44[7];
        uint64_t v115 = (void *)((char *)a1 + v114);
        unint64_t v116 = (void *)((char *)a2 + v114);
        uint64_t v117 = v116[1];
        *uint64_t v115 = *v116;
        v115[1] = v117;
        uint64_t v118 = v44[8];
        uint64_t v119 = (void *)((char *)a1 + v118);
        uint64_t v120 = (void *)((char *)a2 + v118);
        uint64_t v121 = v120[1];
        *uint64_t v119 = *v120;
        v119[1] = v121;
        uint64_t v122 = v44[9];
        uint64_t v123 = (char *)a1 + v122;
        uint64_t v124 = (void *)((char *)a2 + v122);
        unint64_t v125 = *(void *)((char *)a2 + v122 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v125 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
        }
        else
        {
          uint64_t v126 = *v124;
          outlined copy of Data._Representation(*v124, v125);
          *(void *)uint64_t v123 = v126;
          *((void *)v123 + 1) = v125;
        }
        uint64_t v127 = v44[10];
        uint64_t v128 = (char *)a1 + v127;
        uint64_t v129 = (char *)a2 + v127;
        unint64_t v130 = *((void *)v129 + 1);
        if (v130 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
        }
        else
        {
          uint64_t v131 = *(void *)v129;
          outlined copy of Data._Representation(*(void *)v129, *((void *)v129 + 1));
          *(void *)uint64_t v128 = v131;
          *((void *)v128 + 1) = v130;
        }
        break;
      case 7u:
        uint64_t v54 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
        uint64_t v55 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        uint64_t v56 = v55[5];
        uint64_t v57 = (void *)((char *)a1 + v56);
        uint64_t v58 = (void *)((char *)a2 + v56);
        uint64_t v60 = *v58;
        uint64_t v59 = v58[1];
        *uint64_t v57 = v60;
        v57[1] = v59;
        uint64_t v61 = v55[6];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)a2 + v61);
        uint64_t v64 = v63[1];
        *uint64_t v62 = *v63;
        v62[1] = v64;
        uint64_t v65 = v55[7];
        uint64_t v66 = (void *)((char *)a1 + v65);
        uint64_t v67 = (void *)((char *)a2 + v65);
        uint64_t v68 = v67[1];
        *uint64_t v66 = *v67;
        v66[1] = v68;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v69 = type metadata accessor for UnknownStorage();
        uint64_t v70 = (void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        uint64_t v147 = *v70;
        (*v70)((char *)a1, (char *)a2, v69);
        uint64_t v71 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        uint64_t v72 = v71[5];
        uint64_t v73 = (void *)((char *)a1 + v72);
        uint64_t v74 = (void *)((char *)a2 + v72);
        uint64_t v75 = v74[1];
        void *v73 = *v74;
        v73[1] = v75;
        uint64_t v76 = v71[6];
        uint64_t v77 = (void *)((char *)a1 + v76);
        uint64_t v78 = (void *)((char *)a2 + v76);
        uint64_t v79 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          void *v77 = *v78;
          uint64_t v132 = *(int *)(v79 + 20);
          uint64_t v133 = (char *)v77 + v132;
          uint64_t v134 = (char *)v78 + v132;
          swift_bridgeObjectRetain();
          v147(v133, v134, v69);
          __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v79);
        }
        uint64_t v135 = v71[7];
        uint64_t v136 = (char *)a1 + v135;
        uint64_t v137 = (char *)a2 + v135;
        unint64_t v138 = *((void *)v137 + 1);
        if (v138 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
        }
        else
        {
          uint64_t v139 = *(void *)v137;
          outlined copy of Data._Representation(*(void *)v137, *((void *)v137 + 1));
          *(void *)uint64_t v136 = v139;
          *((void *)v136 + 1) = v138;
        }
        uint64_t v140 = v71[8];
        uint64_t v141 = (char *)a1 + v140;
        uint64_t v142 = (char *)a2 + v140;
        unint64_t v143 = *((void *)v142 + 1);
        if (v143 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
        }
        else
        {
          uint64_t v144 = *(void *)v142;
          outlined copy of Data._Representation(*(void *)v142, *((void *)v142 + 1));
          *(void *)uint64_t v141 = v144;
          *((void *)v141 + 1) = v143;
        }
        break;
      case 9u:
        uint64_t v81 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
        uint64_t v82 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
        uint64_t v83 = (void *)((char *)a1 + v82);
        uint64_t v84 = (void *)((char *)a2 + v82);
        uint64_t v85 = v84[1];
        void *v83 = *v84;
        v83[1] = v85;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = type metadata accessor for UnknownStorage();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7((char *)a1, (char *)a2, v6);
        int v8 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          v7(v10, v11, v6);
          uint64_t v87 = v12[5];
          uint64_t v88 = &v10[v87];
          uint64_t v89 = &v11[v87];
          uint64_t v90 = *((void *)v89 + 1);
          *(void *)uint64_t v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          uint64_t v91 = v12[6];
          uint64_t v92 = &v10[v91];
          uint64_t v93 = &v11[v91];
          uint64_t v94 = *((void *)v93 + 1);
          *(void *)uint64_t v92 = *(void *)v93;
          *((void *)v92 + 1) = v94;
          uint64_t v95 = v12[7];
          uint64_t v96 = &v10[v95];
          uint64_t v97 = &v11[v95];
          uint64_t v98 = *((void *)v97 + 1);
          *(void *)uint64_t v96 = *(void *)v97;
          *((void *)v96 + 1) = v98;
          uint64_t v99 = v12[8];
          uint64_t v100 = &v10[v99];
          uint64_t v101 = &v11[v99];
          uint64_t v102 = *((void *)v101 + 1);
          *(void *)uint64_t v100 = *(void *)v101;
          *((void *)v100 + 1) = v102;
          uint64_t v103 = v12[9];
          uint64_t v104 = &v10[v103];
          uint64_t v105 = &v11[v103];
          uint64_t v106 = *((void *)v105 + 1);
          *(void *)uint64_t v104 = *(void *)v105;
          *((void *)v104 + 1) = v106;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
        }
        *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
        *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
        uint64_t v107 = v8[8];
        uint64_t v108 = (void *)((char *)a1 + v107);
        uint64_t v109 = (void *)((char *)a2 + v107);
        uint64_t v110 = v109[1];
        void *v108 = *v109;
        v108[1] = v110;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for UnknownStorage();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      uint64_t v5 = a1 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 20);
      uint64_t v6 = type metadata accessor for ModalityXDeviceInfo(0);
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
      {
        v4(v5, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_29;
    case 1:
      uint64_t v7 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for ModalityXBeginRequest(0);
      goto LABEL_10;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + *(int *)(type metadata accessor for ModalityXAudioFrame(0) + 20);
      uint64_t v9 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      goto LABEL_29;
    case 3:
      uint64_t v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      uint64_t result = type metadata accessor for ModalityXSpeechProfile(0);
      uint64_t v11 = *(int *)(result + 24);
      goto LABEL_24;
    case 4:
      uint64_t v12 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      type metadata accessor for ModalityXCancelRequest(0);
      goto LABEL_29;
    case 5:
      uint64_t v13 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      type metadata accessor for ModalityXBeginDictation(0);
LABEL_10:
      return swift_release();
    case 6:
      uint64_t v14 = type metadata accessor for UnknownStorage();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      v15(a1, v14);
      uint64_t v16 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
      swift_bridgeObjectRelease();
      uint64_t v17 = a1 + v16[6];
      uint64_t v18 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        swift_bridgeObjectRelease();
        v15(v17 + *(int *)(v18 + 20), v14);
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t *)(a1 + v16[9]);
      unint64_t v20 = v19[1];
      if (v20 >> 60 != 15) {
        uint64_t result = outlined consume of Data._Representation(*v19, v20);
      }
      uint64_t v11 = v16[10];
      goto LABEL_24;
    case 7:
      uint64_t v21 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
      type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    case 8:
      uint64_t v22 = type metadata accessor for UnknownStorage();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      v23(a1, v22);
      uint64_t v24 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
      swift_bridgeObjectRelease();
      uint64_t v25 = a1 + v24[6];
      uint64_t v26 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      uint64_t result = __swift_getEnumTagSinglePayload(v25, 1, v26);
      if (!result)
      {
        swift_bridgeObjectRelease();
        uint64_t result = v23(v25 + *(int *)(v26 + 20), v22);
      }
      uint64_t v27 = (uint64_t *)(a1 + v24[7]);
      unint64_t v28 = v27[1];
      if (v28 >> 60 != 15) {
        uint64_t result = outlined consume of Data._Representation(*v27, v28);
      }
      uint64_t v11 = v24[8];
LABEL_24:
      uint64_t v29 = (uint64_t *)(a1 + v11);
      unint64_t v30 = v29[1];
      if (v30 >> 60 != 15)
      {
        uint64_t v31 = *v29;
        uint64_t result = outlined consume of Data._Representation(v31, v30);
      }
      break;
    case 9:
      uint64_t v32 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
      type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
LABEL_29:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for ModalityXServerBoundFrame.OneOf_Payload(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for ModalityXBeginRequest(0);
      *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
      swift_retain();
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v14 = (int *)type metadata accessor for ModalityXAudioFrame(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for UnknownStorage();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      uint64_t v20 = v14[6];
      uint64_t v21 = (void *)((char *)a1 + v20);
      uint64_t v22 = (void *)((char *)a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v24 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = type metadata accessor for ModalityXSpeechProfile(0);
      *((unsigned char *)a1 + *(int *)(v25 + 20)) = *((unsigned char *)a2 + *(int *)(v25 + 20));
      uint64_t v26 = *(int *)(v25 + 24);
      uint64_t v27 = (char *)a1 + v26;
      unint64_t v28 = (char *)a2 + v26;
      unint64_t v29 = *((void *)v28 + 1);
      if (v29 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      }
      else
      {
        uint64_t v83 = *(void *)v28;
        outlined copy of Data._Representation(*(void *)v28, *((void *)v28 + 1));
        *(void *)uint64_t v27 = v83;
        *((void *)v27 + 1) = v29;
      }
      break;
    case 4u:
      uint64_t v30 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = type metadata accessor for ModalityXCancelRequest(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = (void *)((char *)a1 + v32);
      uint64_t v34 = (void *)((char *)a2 + v32);
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      *uint64_t v33 = v36;
      v33[1] = v35;
      *((unsigned char *)a1 + *(int *)(v31 + 24)) = *((unsigned char *)a2 + *(int *)(v31 + 24));
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v37 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
      uint64_t v38 = type metadata accessor for ModalityXBeginDictation(0);
      *(void *)((char *)a1 + *(int *)(v38 + 20)) = *(void *)((char *)a2 + *(int *)(v38 + 20));
      swift_retain();
      break;
    case 6u:
      uint64_t v39 = type metadata accessor for UnknownStorage();
      uint64_t v40 = (void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
      unint64_t v143 = *v40;
      (*v40)((char *)a1, (char *)a2, v39);
      uint64_t v41 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
      uint64_t v42 = v41[5];
      uint64_t v43 = (void *)((char *)a1 + v42);
      int v44 = (void *)((char *)a2 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      uint64_t v46 = v41[6];
      uint64_t v47 = (void *)((char *)a1 + v46);
      uint64_t v48 = (void *)((char *)a2 + v46);
      uint64_t v49 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        *uint64_t v47 = *v48;
        uint64_t v108 = *(int *)(v49 + 20);
        uint64_t v109 = (char *)v47 + v108;
        uint64_t v110 = (char *)v48 + v108;
        swift_bridgeObjectRetain();
        v143(v109, v110, v39);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      }
      uint64_t v111 = v41[7];
      uint64_t v112 = (void *)((char *)a1 + v111);
      uint64_t v113 = (void *)((char *)a2 + v111);
      uint64_t v114 = v113[1];
      *uint64_t v112 = *v113;
      v112[1] = v114;
      uint64_t v115 = v41[8];
      unint64_t v116 = (void *)((char *)a1 + v115);
      uint64_t v117 = (void *)((char *)a2 + v115);
      uint64_t v118 = v117[1];
      void *v116 = *v117;
      v116[1] = v118;
      uint64_t v119 = v41[9];
      uint64_t v120 = (char *)a1 + v119;
      uint64_t v121 = (void *)((char *)a2 + v119);
      unint64_t v122 = *(void *)((char *)a2 + v119 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v122 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      }
      else
      {
        uint64_t v123 = *v121;
        outlined copy of Data._Representation(*v121, v122);
        *(void *)uint64_t v120 = v123;
        *((void *)v120 + 1) = v122;
      }
      uint64_t v124 = v41[10];
      unint64_t v125 = (char *)a1 + v124;
      uint64_t v126 = (char *)a2 + v124;
      unint64_t v127 = *((void *)v126 + 1);
      if (v127 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v125 = *(_OWORD *)v126;
      }
      else
      {
        uint64_t v128 = *(void *)v126;
        outlined copy of Data._Representation(*(void *)v126, *((void *)v126 + 1));
        *(void *)unint64_t v125 = v128;
        *((void *)v125 + 1) = v127;
      }
      break;
    case 7u:
      uint64_t v51 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
      uint64_t v52 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
      uint64_t v53 = v52[5];
      uint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v57 = *v55;
      uint64_t v56 = v55[1];
      *uint64_t v54 = v57;
      v54[1] = v56;
      uint64_t v58 = v52[6];
      uint64_t v59 = (void *)((char *)a1 + v58);
      uint64_t v60 = (void *)((char *)a2 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v52[7];
      uint64_t v63 = (void *)((char *)a1 + v62);
      uint64_t v64 = (void *)((char *)a2 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t v66 = type metadata accessor for UnknownStorage();
      uint64_t v67 = (void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
      uint64_t v144 = *v67;
      (*v67)((char *)a1, (char *)a2, v66);
      uint64_t v68 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
      uint64_t v69 = v68[5];
      uint64_t v70 = (void *)((char *)a1 + v69);
      uint64_t v71 = (void *)((char *)a2 + v69);
      uint64_t v72 = v71[1];
      *uint64_t v70 = *v71;
      v70[1] = v72;
      uint64_t v73 = v68[6];
      uint64_t v74 = (void *)((char *)a1 + v73);
      uint64_t v75 = (void *)((char *)a2 + v73);
      uint64_t v76 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        void *v74 = *v75;
        uint64_t v129 = *(int *)(v76 + 20);
        unint64_t v130 = (char *)v74 + v129;
        uint64_t v131 = (char *)v75 + v129;
        swift_bridgeObjectRetain();
        v144(v130, v131, v66);
        __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v76);
      }
      uint64_t v132 = v68[7];
      uint64_t v133 = (char *)a1 + v132;
      uint64_t v134 = (char *)a2 + v132;
      unint64_t v135 = *((void *)v134 + 1);
      if (v135 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      }
      else
      {
        uint64_t v136 = *(void *)v134;
        outlined copy of Data._Representation(*(void *)v134, *((void *)v134 + 1));
        *(void *)uint64_t v133 = v136;
        *((void *)v133 + 1) = v135;
      }
      uint64_t v137 = v68[8];
      unint64_t v138 = (char *)a1 + v137;
      uint64_t v139 = (char *)a2 + v137;
      unint64_t v140 = *((void *)v139 + 1);
      if (v140 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v138 = *(_OWORD *)v139;
      }
      else
      {
        uint64_t v141 = *(void *)v139;
        outlined copy of Data._Representation(*(void *)v139, *((void *)v139 + 1));
        *(void *)unint64_t v138 = v141;
        *((void *)v138 + 1) = v140;
      }
      break;
    case 9u:
      uint64_t v78 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
      uint64_t v79 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
      uint64_t v80 = (void *)((char *)a1 + v79);
      uint64_t v81 = (void *)((char *)a2 + v79);
      uint64_t v82 = v81[1];
      void *v80 = *v81;
      v80[1] = v82;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = type metadata accessor for UnknownStorage();
      uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5((char *)a1, (char *)a2, v4);
      uint64_t v6 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        v5(v8, v9, v4);
        uint64_t v84 = v10[5];
        uint64_t v85 = &v8[v84];
        uint64_t v86 = &v9[v84];
        uint64_t v87 = *((void *)v86 + 1);
        *(void *)uint64_t v85 = *(void *)v86;
        *((void *)v85 + 1) = v87;
        uint64_t v88 = v10[6];
        uint64_t v89 = &v8[v88];
        uint64_t v90 = &v9[v88];
        uint64_t v91 = *((void *)v90 + 1);
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = v91;
        uint64_t v92 = v10[7];
        uint64_t v93 = &v8[v92];
        uint64_t v94 = &v9[v92];
        uint64_t v95 = *((void *)v94 + 1);
        *(void *)uint64_t v93 = *(void *)v94;
        *((void *)v93 + 1) = v95;
        uint64_t v96 = v10[8];
        uint64_t v97 = &v8[v96];
        uint64_t v98 = &v9[v96];
        uint64_t v99 = *((void *)v98 + 1);
        *(void *)uint64_t v97 = *(void *)v98;
        *((void *)v97 + 1) = v99;
        uint64_t v100 = v10[9];
        uint64_t v101 = &v8[v100];
        uint64_t v102 = &v9[v100];
        uint64_t v103 = *((void *)v102 + 1);
        *(void *)uint64_t v101 = *(void *)v102;
        *((void *)v101 + 1) = v103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
      }
      *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      uint64_t v104 = v6[8];
      uint64_t v105 = (void *)((char *)a1 + v104);
      uint64_t v106 = (void *)((char *)a2 + v104);
      uint64_t v107 = v106[1];
      void *v105 = *v106;
      v105[1] = v107;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ModalityXServerBoundFrame.OneOf_Payload(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
        swift_retain();
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v14 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = type metadata accessor for UnknownStorage();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        uint64_t v20 = v14[6];
        uint64_t v21 = (void *)((char *)a1 + v20);
        uint64_t v22 = (void *)((char *)a2 + v20);
        *uint64_t v21 = *v22;
        v21[1] = v22[1];
        *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v23 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v24 + 20)) = *((unsigned char *)a2 + *(int *)(v24 + 20));
        uint64_t v25 = *(int *)(v24 + 24);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        unint64_t v28 = *((void *)v27 + 1);
        if (v28 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        }
        else
        {
          uint64_t v73 = *(void *)v27;
          outlined copy of Data._Representation(*(void *)v27, *((void *)v27 + 1));
          *(void *)uint64_t v26 = v73;
          *((void *)v26 + 1) = v28;
        }
        break;
      case 4u:
        uint64_t v29 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = type metadata accessor for ModalityXCancelRequest(0);
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = (void *)((char *)a1 + v31);
        uint64_t v33 = (void *)((char *)a2 + v31);
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        *((unsigned char *)a1 + *(int *)(v30 + 24)) = *((unsigned char *)a2 + *(int *)(v30 + 24));
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v34 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v36 = type metadata accessor for UnknownStorage();
        uint64_t v37 = (void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
        unint64_t v125 = *v37;
        (*v37)((char *)a1, (char *)a2, v36);
        uint64_t v38 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        uint64_t v39 = v38[5];
        uint64_t v40 = (void *)((char *)a1 + v39);
        uint64_t v41 = (void *)((char *)a2 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        uint64_t v42 = v38[6];
        uint64_t v43 = (void *)((char *)a1 + v42);
        int v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *uint64_t v43 = *v44;
          uint64_t v92 = *(int *)(v45 + 20);
          uint64_t v93 = (char *)v43 + v92;
          uint64_t v94 = (char *)v44 + v92;
          swift_bridgeObjectRetain();
          v125(v93, v94, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
        }
        uint64_t v95 = v38[7];
        uint64_t v96 = (void *)((char *)a1 + v95);
        uint64_t v97 = (void *)((char *)a2 + v95);
        void *v96 = *v97;
        v96[1] = v97[1];
        uint64_t v98 = v38[8];
        uint64_t v99 = (void *)((char *)a1 + v98);
        uint64_t v100 = (void *)((char *)a2 + v98);
        void *v99 = *v100;
        v99[1] = v100[1];
        uint64_t v101 = v38[9];
        uint64_t v102 = (char *)a1 + v101;
        uint64_t v103 = (void *)((char *)a2 + v101);
        unint64_t v104 = *(void *)((char *)a2 + v101 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v104 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
        }
        else
        {
          uint64_t v105 = *v103;
          outlined copy of Data._Representation(*v103, v104);
          *(void *)uint64_t v102 = v105;
          *((void *)v102 + 1) = v104;
        }
        uint64_t v106 = v38[10];
        uint64_t v107 = (char *)a1 + v106;
        uint64_t v108 = (char *)a2 + v106;
        unint64_t v109 = *((void *)v108 + 1);
        if (v109 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        }
        else
        {
          uint64_t v110 = *(void *)v108;
          outlined copy of Data._Representation(*(void *)v108, *((void *)v108 + 1));
          *(void *)uint64_t v107 = v110;
          *((void *)v107 + 1) = v109;
        }
        break;
      case 7u:
        uint64_t v47 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
        uint64_t v48 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        uint64_t v49 = v48[5];
        uint64_t v50 = (void *)((char *)a1 + v49);
        uint64_t v51 = (void *)((char *)a2 + v49);
        *uint64_t v50 = *v51;
        v50[1] = v51[1];
        uint64_t v52 = v48[6];
        uint64_t v53 = (void *)((char *)a1 + v52);
        uint64_t v54 = (void *)((char *)a2 + v52);
        *uint64_t v53 = *v54;
        v53[1] = v54[1];
        uint64_t v55 = v48[7];
        uint64_t v56 = (void *)((char *)a1 + v55);
        uint64_t v57 = (void *)((char *)a2 + v55);
        *uint64_t v56 = *v57;
        v56[1] = v57[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 8u:
        uint64_t v58 = type metadata accessor for UnknownStorage();
        uint64_t v59 = (void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        uint64_t v126 = *v59;
        (*v59)((char *)a1, (char *)a2, v58);
        uint64_t v60 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        uint64_t v61 = v60[5];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)a2 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        uint64_t v64 = v60[6];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        uint64_t v67 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *uint64_t v65 = *v66;
          uint64_t v111 = *(int *)(v67 + 20);
          uint64_t v112 = (char *)v65 + v111;
          uint64_t v113 = (char *)v66 + v111;
          swift_bridgeObjectRetain();
          v126(v112, v113, v58);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
        }
        uint64_t v114 = v60[7];
        uint64_t v115 = (char *)a1 + v114;
        unint64_t v116 = (char *)a2 + v114;
        unint64_t v117 = *((void *)v116 + 1);
        if (v117 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
        }
        else
        {
          uint64_t v118 = *(void *)v116;
          outlined copy of Data._Representation(*(void *)v116, *((void *)v116 + 1));
          *(void *)uint64_t v115 = v118;
          *((void *)v115 + 1) = v117;
        }
        uint64_t v119 = v60[8];
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        unint64_t v122 = *((void *)v121 + 1);
        if (v122 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
        }
        else
        {
          uint64_t v123 = *(void *)v121;
          outlined copy of Data._Representation(*(void *)v121, *((void *)v121 + 1));
          *(void *)uint64_t v120 = v123;
          *((void *)v120 + 1) = v122;
        }
        break;
      case 9u:
        uint64_t v69 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
        uint64_t v70 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileCommit(0) + 20);
        uint64_t v71 = (void *)((char *)a1 + v70);
        uint64_t v72 = (void *)((char *)a2 + v70);
        void *v71 = *v72;
        v71[1] = v72[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = type metadata accessor for UnknownStorage();
        uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16);
        v5((char *)a1, (char *)a2, v4);
        uint64_t v6 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          v5(v8, v9, v4);
          uint64_t v74 = v10[5];
          uint64_t v75 = &v8[v74];
          uint64_t v76 = &v9[v74];
          *(void *)uint64_t v75 = *(void *)v76;
          *((void *)v75 + 1) = *((void *)v76 + 1);
          uint64_t v77 = v10[6];
          uint64_t v78 = &v8[v77];
          uint64_t v79 = &v9[v77];
          *(void *)uint64_t v78 = *(void *)v79;
          *((void *)v78 + 1) = *((void *)v79 + 1);
          uint64_t v80 = v10[7];
          uint64_t v81 = &v8[v80];
          uint64_t v82 = &v9[v80];
          *(void *)uint64_t v81 = *(void *)v82;
          *((void *)v81 + 1) = *((void *)v82 + 1);
          uint64_t v83 = v10[8];
          uint64_t v84 = &v8[v83];
          uint64_t v85 = &v9[v83];
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = *((void *)v85 + 1);
          uint64_t v86 = v10[9];
          uint64_t v87 = &v8[v86];
          uint64_t v88 = &v9[v86];
          *(void *)uint64_t v87 = *(void *)v88;
          *((void *)v87 + 1) = *((void *)v88 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
        }
        *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
        *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
        uint64_t v89 = v6[8];
        uint64_t v90 = (void *)((char *)a1 + v89);
        uint64_t v91 = (void *)((char *)a2 + v89);
        void *v90 = *v91;
        v90[1] = v91[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for ModalityXServerBoundFrame.OneOf_Payload(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for ModalityXBeginRequest(0);
      *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
      break;
    case 2u:
      *a1 = *a2;
      uint64_t v14 = (int *)type metadata accessor for ModalityXAudioFrame(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + v14[6]) = *(_OWORD *)((char *)a2 + v14[6]);
      *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
      break;
    case 3u:
      uint64_t v19 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = type metadata accessor for ModalityXSpeechProfile(0);
      *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
      *(_OWORD *)((char *)a1 + *(int *)(v20 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v20 + 24));
      break;
    case 4u:
      uint64_t v21 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for ModalityXCancelRequest(0);
      *(_OWORD *)((char *)a1 + *(int *)(v22 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 20));
      *((unsigned char *)a1 + *(int *)(v22 + 24)) = *((unsigned char *)a2 + *(int *)(v22 + 24));
      break;
    case 5u:
      uint64_t v23 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = type metadata accessor for ModalityXBeginDictation(0);
      *(void *)((char *)a1 + *(int *)(v24 + 20)) = *(void *)((char *)a2 + *(int *)(v24 + 20));
      break;
    case 6u:
      uint64_t v25 = type metadata accessor for UnknownStorage();
      uint64_t v26 = *(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32);
      v26(a1, a2, v25);
      uint64_t v27 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
      *(_OWORD *)((char *)a1 + v27[5]) = *(_OWORD *)((char *)a2 + v27[5]);
      uint64_t v28 = v27[6];
      uint64_t v29 = (void *)((char *)a1 + v28);
      uint64_t v30 = (void *)((char *)a2 + v28);
      uint64_t v31 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *uint64_t v29 = *v30;
        v26((void *)((char *)v29 + *(int *)(v31 + 20)), (void *)((char *)v30 + *(int *)(v31 + 20)), v25);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      *(_OWORD *)((char *)a1 + v27[7]) = *(_OWORD *)((char *)a2 + v27[7]);
      *(_OWORD *)((char *)a1 + v27[8]) = *(_OWORD *)((char *)a2 + v27[8]);
      *(_OWORD *)((char *)a1 + v27[9]) = *(_OWORD *)((char *)a2 + v27[9]);
      *(_OWORD *)((char *)a1 + v27[10]) = *(_OWORD *)((char *)a2 + v27[10]);
      break;
    case 7u:
      uint64_t v33 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
      uint64_t v34 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
      *(_OWORD *)((char *)a1 + v34[5]) = *(_OWORD *)((char *)a2 + v34[5]);
      *(_OWORD *)((char *)a1 + v34[6]) = *(_OWORD *)((char *)a2 + v34[6]);
      *(_OWORD *)((char *)a1 + v34[7]) = *(_OWORD *)((char *)a2 + v34[7]);
      break;
    case 8u:
      uint64_t v35 = type metadata accessor for UnknownStorage();
      uint64_t v36 = *(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32);
      v36(a1, a2, v35);
      uint64_t v37 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
      *(_OWORD *)((char *)a1 + v37[5]) = *(_OWORD *)((char *)a2 + v37[5]);
      uint64_t v38 = v37[6];
      uint64_t v39 = (void *)((char *)a1 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        void *v39 = *v40;
        v36((void *)((char *)v39 + *(int *)(v41 + 20)), (void *)((char *)v40 + *(int *)(v41 + 20)), v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      }
      *(_OWORD *)((char *)a1 + v37[7]) = *(_OWORD *)((char *)a2 + v37[7]);
      *(_OWORD *)((char *)a1 + v37[8]) = *(_OWORD *)((char *)a2 + v37[8]);
      break;
    case 9u:
      uint64_t v43 = type metadata accessor for UnknownStorage();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
      uint64_t v44 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
      *(_OWORD *)((char *)a1 + *(int *)(v44 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v44 + 20));
      break;
    default:
      uint64_t v4 = type metadata accessor for UnknownStorage();
      uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 32);
      v5((char *)a1, (char *)a2, v4);
      uint64_t v6 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        v5(v8, v9, v4);
        *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
        *(_OWORD *)&v8[v10[6]] = *(_OWORD *)&v9[v10[6]];
        *(_OWORD *)&v8[v10[7]] = *(_OWORD *)&v9[v10[7]];
        *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
        *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
      }
      *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for ModalityXServerBoundFrame.OneOf_Payload(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = type metadata accessor for ModalityXBeginRequest(0);
        *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
        break;
      case 2u:
        *a1 = *a2;
        uint64_t v14 = (int *)type metadata accessor for ModalityXAudioFrame(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)a1 + v14[6]) = *(_OWORD *)((char *)a2 + v14[6]);
        *((unsigned char *)a1 + v14[7]) = *((unsigned char *)a2 + v14[7]);
        break;
      case 3u:
        uint64_t v19 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for ModalityXSpeechProfile(0);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        *(_OWORD *)((char *)a1 + *(int *)(v20 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v20 + 24));
        break;
      case 4u:
        uint64_t v21 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for ModalityXCancelRequest(0);
        *(_OWORD *)((char *)a1 + *(int *)(v22 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 20));
        *((unsigned char *)a1 + *(int *)(v22 + 24)) = *((unsigned char *)a2 + *(int *)(v22 + 24));
        break;
      case 5u:
        uint64_t v23 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for ModalityXBeginDictation(0);
        *(void *)((char *)a1 + *(int *)(v24 + 20)) = *(void *)((char *)a2 + *(int *)(v24 + 20));
        break;
      case 6u:
        uint64_t v25 = type metadata accessor for UnknownStorage();
        uint64_t v26 = *(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32);
        v26(a1, a2, v25);
        uint64_t v27 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        *(_OWORD *)((char *)a1 + v27[5]) = *(_OWORD *)((char *)a2 + v27[5]);
        uint64_t v28 = v27[6];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        uint64_t v31 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *uint64_t v29 = *v30;
          v26((void *)((char *)v29 + *(int *)(v31 + 20)), (void *)((char *)v30 + *(int *)(v31 + 20)), v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
        }
        *(_OWORD *)((char *)a1 + v27[7]) = *(_OWORD *)((char *)a2 + v27[7]);
        *(_OWORD *)((char *)a1 + v27[8]) = *(_OWORD *)((char *)a2 + v27[8]);
        *(_OWORD *)((char *)a1 + v27[9]) = *(_OWORD *)((char *)a2 + v27[9]);
        *(_OWORD *)((char *)a1 + v27[10]) = *(_OWORD *)((char *)a2 + v27[10]);
        break;
      case 7u:
        uint64_t v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        uint64_t v34 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        *(_OWORD *)((char *)a1 + v34[5]) = *(_OWORD *)((char *)a2 + v34[5]);
        *(_OWORD *)((char *)a1 + v34[6]) = *(_OWORD *)((char *)a2 + v34[6]);
        *(_OWORD *)((char *)a1 + v34[7]) = *(_OWORD *)((char *)a2 + v34[7]);
        break;
      case 8u:
        uint64_t v35 = type metadata accessor for UnknownStorage();
        uint64_t v36 = *(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32);
        v36(a1, a2, v35);
        uint64_t v37 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        *(_OWORD *)((char *)a1 + v37[5]) = *(_OWORD *)((char *)a2 + v37[5]);
        uint64_t v38 = v37[6];
        uint64_t v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = (void *)((char *)a2 + v38);
        uint64_t v41 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          void *v39 = *v40;
          v36((void *)((char *)v39 + *(int *)(v41 + 20)), (void *)((char *)v40 + *(int *)(v41 + 20)), v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
        }
        *(_OWORD *)((char *)a1 + v37[7]) = *(_OWORD *)((char *)a2 + v37[7]);
        *(_OWORD *)((char *)a1 + v37[8]) = *(_OWORD *)((char *)a2 + v37[8]);
        break;
      case 9u:
        uint64_t v43 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(a1, a2, v43);
        uint64_t v44 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
        *(_OWORD *)((char *)a1 + *(int *)(v44 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v44 + 20));
        break;
      default:
        uint64_t v4 = type metadata accessor for UnknownStorage();
        uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 32);
        v5((char *)a1, (char *)a2, v4);
        uint64_t v6 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
          memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          v5(v8, v9, v4);
          *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
          *(_OWORD *)&v8[v10[6]] = *(_OWORD *)&v9[v10[6]];
          *(_OWORD *)&v8[v10[7]] = *(_OWORD *)&v9[v10[7]];
          *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
          *(_OWORD *)&v8[v10[9]] = *(_OWORD *)&v9[v10[9]];
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
        }
        *((unsigned char *)a1 + v6[6]) = *((unsigned char *)a2 + v6[6]);
        *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
        *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destructiveInjectEnumTag for ModalityXServerBoundFrame.OneOf_Payload()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for ModalityXServerBoundFrame.OneOf_Payload()
{
  uint64_t result = type metadata accessor for ModalityXSessionMetadata(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ModalityXBeginRequest(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ModalityXAudioFrame(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ModalityXSpeechProfile(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for ModalityXCancelRequest(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for ModalityXBeginDictation(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for ModalityXSpeechProfileBuildRequest(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for ModalityXStreamingSpeechProfileBegin(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for ModalityXStreamingSpeechProfileAddData(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for ModalityXStreamingSpeechProfileCommit(319);
                    if (v10 <= 0x3F)
                    {
                      swift_initEnumMetadataMultiPayload();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXClientBoundFrame(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v15 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          uint64_t v16 = (int *)type metadata accessor for ModalityXProcessingError(0);
          uint64_t v17 = v16[5];
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
          v18[4] = v19[4];
          uint64_t v20 = v16[6];
          uint64_t v21 = (uint64_t *)((char *)a1 + v20);
          uint64_t v22 = (uint64_t *)((char *)a2 + v20);
          uint64_t v24 = *v22;
          uint64_t v23 = v22[1];
          *uint64_t v21 = v24;
          v21[1] = v23;
          *((unsigned char *)a1 + v16[7]) = *((unsigned char *)a2 + v16[7]);
          uint64_t v25 = v16[8];
          uint64_t v26 = (uint64_t *)((char *)a1 + v25);
          uint64_t v27 = (uint64_t *)((char *)a2 + v25);
          uint64_t v28 = v27[1];
          *uint64_t v26 = *v27;
          v26[1] = v28;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v29 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v29))
          {
            uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
            memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v55 = type metadata accessor for UnknownStorage();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
            if (EnumCaseMultiPayload == 1) {
              uint64_t v56 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
            }
            else {
              uint64_t v56 = type metadata accessor for ModalityXRecognitionCandidate(0);
            }
            *(uint64_t *)((char *)a1 + *(int *)(v56 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v56 + 20));
            swift_retain();
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v29);
          }
          uint64_t v78 = type metadata accessor for ModalityXASRResult(0);
          uint64_t v79 = *(int *)(v78 + 20);
          uint64_t v80 = (char *)a1 + v79;
          uint64_t v81 = (char *)a2 + v79;
          uint64_t v82 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
          uint64_t v83 = *(int *)(v78 + 24);
          uint64_t v84 = (uint64_t *)((char *)a1 + v83);
          uint64_t v85 = (uint64_t *)((char *)a2 + v83);
          uint64_t v86 = v85[1];
          void *v84 = *v85;
          v84[1] = v86;
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v31 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
          uint64_t v32 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
          uint64_t v33 = (uint64_t *)((char *)a1 + v32);
          uint64_t v34 = (uint64_t *)((char *)a2 + v32);
          uint64_t v35 = v34[1];
          *uint64_t v33 = *v34;
          v33[1] = v35;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v36 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
          uint64_t v37 = type metadata accessor for ModalityXRequestMitigated(0);
          uint64_t v38 = *(int *)(v37 + 20);
          uint64_t v39 = (uint64_t *)((char *)a1 + v38);
          uint64_t v40 = (uint64_t *)((char *)a2 + v38);
          uint64_t v42 = *v40;
          uint64_t v41 = v40[1];
          void *v39 = v42;
          v39[1] = v41;
          *((unsigned char *)a1 + *(int *)(v37 + 24)) = *((unsigned char *)a2 + *(int *)(v37 + 24));
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v43 = type metadata accessor for UnknownStorage();
          uint64_t v92 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v43 - 8) + 16);
          v92(a1, a2, v43);
          uint64_t v44 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
          uint64_t v45 = v44[5];
          uint64_t v46 = (uint64_t *)((char *)a1 + v45);
          uint64_t v47 = (uint64_t *)((char *)a2 + v45);
          uint64_t v48 = v47[1];
          *uint64_t v46 = *v47;
          v46[1] = v48;
          uint64_t v49 = v44[6];
          uint64_t v50 = (char *)a1 + v49;
          uint64_t v51 = (char *)a2 + v49;
          uint64_t v52 = (int *)type metadata accessor for ModalityXProcessingError(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, (uint64_t)v52))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
            memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            v92((uint64_t *)v50, (uint64_t *)v51, v43);
            uint64_t v57 = v52[5];
            uint64_t v58 = &v50[v57];
            uint64_t v59 = &v51[v57];
            *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
            v58[4] = v59[4];
            uint64_t v60 = v52[6];
            uint64_t v61 = &v50[v60];
            uint64_t v62 = &v51[v60];
            uint64_t v63 = *((void *)v62 + 1);
            *(void *)uint64_t v61 = *(void *)v62;
            *((void *)v61 + 1) = v63;
            v50[v52[7]] = v51[v52[7]];
            uint64_t v64 = v52[8];
            uint64_t v65 = &v50[v64];
            uint64_t v66 = &v51[v64];
            uint64_t v67 = *((void *)v66 + 1);
            *(void *)uint64_t v65 = *(void *)v66;
            *((void *)v65 + 1) = v67;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, (uint64_t)v52);
          }
          *((unsigned char *)a1 + v44[7]) = *((unsigned char *)a2 + v44[7]);
          uint64_t v68 = v44[8];
          uint64_t v69 = (char *)a1 + v68;
          uint64_t v70 = (char *)a2 + v68;
          unint64_t v71 = *((void *)v70 + 1);
          if (v71 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
          }
          else
          {
            uint64_t v72 = *(void *)v70;
            outlined copy of Data._Representation(*(void *)v70, *((void *)v70 + 1));
            *(void *)uint64_t v69 = v72;
            *((void *)v69 + 1) = v71;
          }
          uint64_t v73 = v44[9];
          uint64_t v74 = (char *)a1 + v73;
          uint64_t v75 = (char *)a2 + v73;
          unint64_t v76 = *((void *)v75 + 1);
          if (v76 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
          }
          else
          {
            uint64_t v77 = *(void *)v75;
            outlined copy of Data._Representation(*(void *)v75, *((void *)v75 + 1));
            *(void *)uint64_t v74 = v77;
            *((void *)v74 + 1) = v76;
          }
          break;
        default:
          uint64_t v10 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          uint64_t v11 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
          uint64_t v12 = (uint64_t *)((char *)a1 + v11);
          uint64_t v13 = (uint64_t *)((char *)a2 + v11);
          uint64_t v14 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v14;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v87 = *(int *)(a3 + 20);
    uint64_t v88 = (char *)a1 + v87;
    uint64_t v89 = (char *)a2 + v87;
    uint64_t v90 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
  }
  return a1;
}

uint64_t destroy for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v5 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        type metadata accessor for ModalityXRequestComplete(0);
        goto LABEL_20;
      case 1u:
        uint64_t v6 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      case 2u:
        uint64_t v7 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (!__swift_getEnumTagSinglePayload(a1, 1, v7))
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v9 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
          if (EnumCaseMultiPayload == 1) {
            type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          swift_release();
        }
        uint64_t v21 = a1 + *(int *)(type metadata accessor for ModalityXASRResult(0) + 20);
        uint64_t v22 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        goto LABEL_20;
      case 3u:
        uint64_t v10 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
        type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
        goto LABEL_20;
      case 4u:
        uint64_t v11 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
        type metadata accessor for ModalityXRequestMitigated(0);
LABEL_20:
        swift_bridgeObjectRelease();
        break;
      case 5u:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(a1, v12);
        uint64_t v14 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        swift_bridgeObjectRelease();
        uint64_t v15 = a1 + v14[6];
        uint64_t v16 = type metadata accessor for ModalityXProcessingError(0);
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
        {
          v13(v15, v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v17 = (uint64_t *)(a1 + v14[8]);
        unint64_t v18 = v17[1];
        if (v18 >> 60 != 15) {
          outlined consume of Data._Representation(*v17, v18);
        }
        uint64_t v19 = (uint64_t *)(a1 + v14[9]);
        unint64_t v20 = v19[1];
        if (v20 >> 60 != 15) {
          outlined consume of Data._Representation(*v19, v20);
        }
        break;
      default:
        break;
    }
  }
  uint64_t v23 = a1 + *(int *)(a2 + 20);
  uint64_t v24 = type metadata accessor for UnknownStorage();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

char *initializeWithCopy for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
        v16[4] = v17[4];
        uint64_t v18 = v14[6];
        uint64_t v19 = &a1[v18];
        unint64_t v20 = &a2[v18];
        uint64_t v22 = *(void *)v20;
        uint64_t v21 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = v22;
        *((void *)v19 + 1) = v21;
        a1[v14[7]] = a2[v14[7]];
        uint64_t v23 = v14[8];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        uint64_t v26 = *((void *)v25 + 1);
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v27 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v53 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          if (EnumCaseMultiPayload == 1) {
            uint64_t v54 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v54 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v54 + 20)] = *(void *)&a2[*(int *)(v54 + 20)];
          swift_retain();
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v27);
        }
        uint64_t v76 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v77 = *(int *)(v76 + 20);
        uint64_t v78 = &a1[v77];
        uint64_t v79 = &a2[v77];
        uint64_t v80 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
        uint64_t v81 = *(int *)(v76 + 24);
        uint64_t v82 = &a1[v81];
        uint64_t v83 = &a2[v81];
        uint64_t v84 = *((void *)v83 + 1);
        *(void *)uint64_t v82 = *(void *)v83;
        *((void *)v82 + 1) = v84;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v29 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
        uint64_t v31 = &a1[v30];
        uint64_t v32 = &a2[v30];
        uint64_t v33 = *((void *)v32 + 1);
        *(void *)uint64_t v31 = *(void *)v32;
        *((void *)v31 + 1) = v33;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v34 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = type metadata accessor for ModalityXRequestMitigated(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        uint64_t v40 = *(void *)v38;
        uint64_t v39 = *((void *)v38 + 1);
        *(void *)uint64_t v37 = v40;
        *((void *)v37 + 1) = v39;
        a1[*(int *)(v35 + 24)] = a2[*(int *)(v35 + 24)];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v41 = type metadata accessor for UnknownStorage();
        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
        v90(a1, a2, v41);
        uint64_t v42 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        uint64_t v43 = v42[5];
        uint64_t v44 = &a1[v43];
        uint64_t v45 = &a2[v43];
        uint64_t v46 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v46;
        uint64_t v47 = v42[6];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        uint64_t v50 = (int *)type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, (uint64_t)v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          v90(v48, v49, v41);
          uint64_t v55 = v50[5];
          uint64_t v56 = &v48[v55];
          uint64_t v57 = &v49[v55];
          *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
          v56[4] = v57[4];
          uint64_t v58 = v50[6];
          uint64_t v59 = &v48[v58];
          uint64_t v60 = &v49[v58];
          uint64_t v61 = *((void *)v60 + 1);
          *(void *)uint64_t v59 = *(void *)v60;
          *((void *)v59 + 1) = v61;
          v48[v50[7]] = v49[v50[7]];
          uint64_t v62 = v50[8];
          uint64_t v63 = &v48[v62];
          uint64_t v64 = &v49[v62];
          uint64_t v65 = *((void *)v64 + 1);
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, (uint64_t)v50);
        }
        a1[v42[7]] = a2[v42[7]];
        uint64_t v66 = v42[8];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        unint64_t v69 = *((void *)v68 + 1);
        if (v69 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        }
        else
        {
          uint64_t v70 = *(void *)v68;
          outlined copy of Data._Representation(*(void *)v68, *((void *)v68 + 1));
          *(void *)uint64_t v67 = v70;
          *((void *)v67 + 1) = v69;
        }
        uint64_t v71 = v42[9];
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        unint64_t v74 = *((void *)v73 + 1);
        if (v74 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
        }
        else
        {
          uint64_t v75 = *(void *)v73;
          outlined copy of Data._Representation(*(void *)v73, *((void *)v73 + 1));
          *(void *)uint64_t v72 = v75;
          *((void *)v72 + 1) = v74;
        }
        break;
      default:
        uint64_t v8 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v12;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v85 = *(int *)(a3 + 20);
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  uint64_t v88 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
  return a1;
}

unsigned char *assignWithCopy for ModalityXClientBoundFrame(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v18 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          uint64_t v19 = (int *)type metadata accessor for ModalityXProcessingError(0);
          uint64_t v20 = v19[5];
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          char v23 = v22[4];
          *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
          v21[4] = v23;
          uint64_t v24 = v19[6];
          uint64_t v25 = &a1[v24];
          uint64_t v26 = &a2[v24];
          *uint64_t v25 = *v26;
          v25[1] = v26[1];
          a1[v19[7]] = a2[v19[7]];
          uint64_t v27 = v19[8];
          uint64_t v28 = &a1[v27];
          uint64_t v29 = &a2[v27];
          *uint64_t v28 = *v29;
          v28[1] = v29[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v30 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v30))
          {
            uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
            memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v85 = type metadata accessor for UnknownStorage();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v85 - 8) + 16))(a1, a2, v85);
            if (EnumCaseMultiPayload == 1) {
              uint64_t v86 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
            }
            else {
              uint64_t v86 = type metadata accessor for ModalityXRecognitionCandidate(0);
            }
            *(void *)&a1[*(int *)(v86 + 20)] = *(void *)&a2[*(int *)(v86 + 20)];
            swift_retain();
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v30);
          }
          uint64_t v107 = type metadata accessor for ModalityXASRResult(0);
          uint64_t v108 = *(int *)(v107 + 20);
          unint64_t v109 = &a1[v108];
          uint64_t v110 = &a2[v108];
          uint64_t v111 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
          uint64_t v112 = *(int *)(v107 + 24);
          uint64_t v113 = &a1[v112];
          uint64_t v114 = &a2[v112];
          void *v113 = *v114;
          v113[1] = v114[1];
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v32 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          uint64_t v33 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
          uint64_t v34 = &a1[v33];
          uint64_t v35 = &a2[v33];
          *uint64_t v34 = *v35;
          v34[1] = v35[1];
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v36 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
          uint64_t v37 = type metadata accessor for ModalityXRequestMitigated(0);
          uint64_t v38 = *(int *)(v37 + 20);
          uint64_t v39 = &a1[v38];
          uint64_t v40 = &a2[v38];
          void *v39 = *v40;
          v39[1] = v40[1];
          a1[*(int *)(v37 + 24)] = a2[*(int *)(v37 + 24)];
          swift_bridgeObjectRetain();
          break;
        case 5u:
          uint64_t v41 = type metadata accessor for UnknownStorage();
          v151 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          v151(a1, a2, v41);
          uint64_t v42 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
          uint64_t v43 = v42[5];
          uint64_t v44 = &a1[v43];
          uint64_t v45 = &a2[v43];
          *uint64_t v44 = *v45;
          v44[1] = v45[1];
          uint64_t v46 = v42[6];
          uint64_t v47 = &a1[v46];
          uint64_t v48 = &a2[v46];
          uint64_t v49 = (int *)type metadata accessor for ModalityXProcessingError(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, (uint64_t)v49))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
            memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            v151(v47, v48, v41);
            uint64_t v87 = v49[5];
            uint64_t v88 = &v47[v87];
            uint64_t v89 = &v48[v87];
            int v90 = *(_DWORD *)v89;
            v88[4] = v89[4];
            *(_DWORD *)uint64_t v88 = v90;
            uint64_t v91 = v49[6];
            uint64_t v92 = &v47[v91];
            uint64_t v93 = &v48[v91];
            *(void *)uint64_t v92 = *(void *)v93;
            *((void *)v92 + 1) = *((void *)v93 + 1);
            v47[v49[7]] = v48[v49[7]];
            uint64_t v94 = v49[8];
            uint64_t v95 = &v47[v94];
            uint64_t v96 = &v48[v94];
            *(void *)uint64_t v95 = *(void *)v96;
            *((void *)v95 + 1) = *((void *)v96 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, (uint64_t)v49);
          }
          a1[v42[7]] = a2[v42[7]];
          uint64_t v97 = v42[8];
          uint64_t v98 = &a1[v97];
          uint64_t v99 = &a2[v97];
          unint64_t v100 = *((void *)v99 + 1);
          if (v100 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
          }
          else
          {
            uint64_t v101 = *(void *)v99;
            outlined copy of Data._Representation(*(void *)v99, *((void *)v99 + 1));
            *(void *)uint64_t v98 = v101;
            *((void *)v98 + 1) = v100;
          }
          uint64_t v102 = v42[9];
          uint64_t v103 = &a1[v102];
          unint64_t v104 = &a2[v102];
          unint64_t v105 = *((void *)v104 + 1);
          if (v105 >> 60 == 15)
          {
            *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
          }
          else
          {
            uint64_t v106 = *(void *)v104;
            outlined copy of Data._Representation(*(void *)v104, *((void *)v104 + 1));
            *(void *)uint64_t v103 = v106;
            *((void *)v103 + 1) = v105;
          }
          break;
        default:
          uint64_t v9 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
          uint64_t v10 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
          uint64_t v11 = &a1[v10];
          uint64_t v12 = &a2[v10];
          *uint64_t v11 = *v12;
          v11[1] = v12[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_53;
    }
LABEL_7:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_53;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v51 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        uint64_t v52 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v53 = v52[5];
        uint64_t v54 = &a1[v53];
        uint64_t v55 = &a2[v53];
        char v56 = v55[4];
        *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
        v54[4] = v56;
        uint64_t v57 = v52[6];
        uint64_t v58 = &a1[v57];
        uint64_t v59 = &a2[v57];
        *uint64_t v58 = *v59;
        v58[1] = v59[1];
        a1[v52[7]] = a2[v52[7]];
        uint64_t v60 = v52[8];
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v63 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v63))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          int v115 = swift_getEnumCaseMultiPayload();
          uint64_t v116 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 16))(a1, a2, v116);
          if (v115 == 1) {
            uint64_t v117 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v117 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v117 + 20)] = *(void *)&a2[*(int *)(v117 + 20)];
          swift_retain();
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v63);
        }
        uint64_t v138 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v139 = *(int *)(v138 + 20);
        unint64_t v140 = &a1[v139];
        uint64_t v141 = &a2[v139];
        uint64_t v142 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
        uint64_t v143 = *(int *)(v138 + 24);
        uint64_t v144 = &a1[v143];
        uint64_t v145 = &a2[v143];
        *uint64_t v144 = *v145;
        v144[1] = v145[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v65 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
        uint64_t v66 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        *uint64_t v67 = *v68;
        v67[1] = v68[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v69 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
        uint64_t v70 = type metadata accessor for ModalityXRequestMitigated(0);
        uint64_t v71 = *(int *)(v70 + 20);
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        void *v72 = *v73;
        v72[1] = v73[1];
        a1[*(int *)(v70 + 24)] = a2[*(int *)(v70 + 24)];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v74 = type metadata accessor for UnknownStorage();
        v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        v152(a1, a2, v74);
        uint64_t v75 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        uint64_t v76 = v75[5];
        uint64_t v77 = &a1[v76];
        uint64_t v78 = &a2[v76];
        void *v77 = *v78;
        v77[1] = v78[1];
        uint64_t v79 = v75[6];
        uint64_t v80 = &a1[v79];
        uint64_t v81 = &a2[v79];
        uint64_t v82 = (int *)type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v81, 1, (uint64_t)v82))
        {
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          v152(v80, v81, v74);
          uint64_t v118 = v82[5];
          uint64_t v119 = &v80[v118];
          uint64_t v120 = &v81[v118];
          int v121 = *(_DWORD *)v120;
          v119[4] = v120[4];
          *(_DWORD *)uint64_t v119 = v121;
          uint64_t v122 = v82[6];
          uint64_t v123 = &v80[v122];
          uint64_t v124 = &v81[v122];
          *(void *)uint64_t v123 = *(void *)v124;
          *((void *)v123 + 1) = *((void *)v124 + 1);
          v80[v82[7]] = v81[v82[7]];
          uint64_t v125 = v82[8];
          uint64_t v126 = &v80[v125];
          unint64_t v127 = &v81[v125];
          *(void *)uint64_t v126 = *(void *)v127;
          *((void *)v126 + 1) = *((void *)v127 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, (uint64_t)v82);
        }
        a1[v75[7]] = a2[v75[7]];
        uint64_t v128 = v75[8];
        uint64_t v129 = &a1[v128];
        unint64_t v130 = &a2[v128];
        unint64_t v131 = *((void *)v130 + 1);
        if (v131 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
        }
        else
        {
          uint64_t v132 = *(void *)v130;
          outlined copy of Data._Representation(*(void *)v130, *((void *)v130 + 1));
          *(void *)uint64_t v129 = v132;
          *((void *)v129 + 1) = v131;
        }
        uint64_t v133 = v75[9];
        uint64_t v134 = &a1[v133];
        unint64_t v135 = &a2[v133];
        unint64_t v136 = *((void *)v135 + 1);
        if (v136 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
        }
        else
        {
          uint64_t v137 = *(void *)v135;
          outlined copy of Data._Representation(*(void *)v135, *((void *)v135 + 1));
          *(void *)uint64_t v134 = v137;
          *((void *)v134 + 1) = v136;
        }
        break;
      default:
        uint64_t v14 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *uint64_t v16 = *v17;
        v16[1] = v17[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_53:
  uint64_t v146 = *(int *)(a3 + 20);
  uint64_t v147 = &a1[v146];
  v148 = &a2[v146];
  uint64_t v149 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 24))(v147, v148, v149);
  return a1;
}

char *initializeWithTake for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v12 = v11[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
        v13[4] = v14[4];
        *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
        a1[v11[7]] = a2[v11[7]];
        *(_OWORD *)&a1[v11[8]] = *(_OWORD *)&a2[v11[8]];
        break;
      case 2u:
        uint64_t v15 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v15))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v30 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
          if (EnumCaseMultiPayload == 1) {
            uint64_t v31 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v31 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v31 + 20)] = *(void *)&a2[*(int *)(v31 + 20)];
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v15);
        }
        uint64_t v35 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        uint64_t v39 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        *(_OWORD *)&a1[*(int *)(v35 + 24)] = *(_OWORD *)&a2[*(int *)(v35 + 24)];
        break;
      case 3u:
        uint64_t v17 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
        *(_OWORD *)&a1[*(int *)(v18 + 20)] = *(_OWORD *)&a2[*(int *)(v18 + 20)];
        break;
      case 4u:
        uint64_t v19 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = type metadata accessor for ModalityXRequestMitigated(0);
        *(_OWORD *)&a1[*(int *)(v20 + 20)] = *(_OWORD *)&a2[*(int *)(v20 + 20)];
        a1[*(int *)(v20 + 24)] = a2[*(int *)(v20 + 24)];
        break;
      case 5u:
        uint64_t v21 = type metadata accessor for UnknownStorage();
        uint64_t v22 = (void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32);
        uint64_t v45 = *v22;
        (*v22)(a1, a2, v21);
        char v23 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        *(_OWORD *)&a1[v23[5]] = *(_OWORD *)&a2[v23[5]];
        uint64_t v24 = v23[6];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = (int *)type metadata accessor for ModalityXProcessingError(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, (uint64_t)v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          v45(v25, v26, v21);
          uint64_t v32 = v27[5];
          uint64_t v33 = &v25[v32];
          uint64_t v34 = &v26[v32];
          *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
          v33[4] = v34[4];
          *(_OWORD *)&v25[v27[6]] = *(_OWORD *)&v26[v27[6]];
          v25[v27[7]] = v26[v27[7]];
          *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, (uint64_t)v27);
        }
        a1[v23[7]] = a2[v23[7]];
        *(_OWORD *)&a1[v23[8]] = *(_OWORD *)&a2[v23[8]];
        *(_OWORD *)&a1[v23[9]] = *(_OWORD *)&a2[v23[9]];
        break;
      default:
        uint64_t v8 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = type metadata accessor for ModalityXRequestComplete(0);
        *(_OWORD *)&a1[*(int *)(v9 + 20)] = *(_OWORD *)&a2[*(int *)(v9 + 20)];
        break;
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  return a1;
}

unsigned char *assignWithTake for ModalityXClientBoundFrame(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v14 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          uint64_t v15 = (int *)type metadata accessor for ModalityXProcessingError(0);
          uint64_t v16 = v15[5];
          uint64_t v17 = &a1[v16];
          uint64_t v18 = &a2[v16];
          *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
          v17[4] = v18[4];
          *(_OWORD *)&a1[v15[6]] = *(_OWORD *)&a2[v15[6]];
          a1[v15[7]] = a2[v15[7]];
          *(_OWORD *)&a1[v15[8]] = *(_OWORD *)&a2[v15[8]];
          break;
        case 2u:
          uint64_t v19 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v19))
          {
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
            memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v53 = type metadata accessor for UnknownStorage();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v53 - 8) + 32))(a1, a2, v53);
            if (EnumCaseMultiPayload == 1) {
              uint64_t v54 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
            }
            else {
              uint64_t v54 = type metadata accessor for ModalityXRecognitionCandidate(0);
            }
            *(void *)&a1[*(int *)(v54 + 20)] = *(void *)&a2[*(int *)(v54 + 20)];
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v19);
          }
          uint64_t v58 = type metadata accessor for ModalityXASRResult(0);
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v60 = &a1[v59];
          uint64_t v61 = &a2[v59];
          uint64_t v62 = type metadata accessor for UnknownStorage();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
          *(_OWORD *)&a1[*(int *)(v58 + 24)] = *(_OWORD *)&a2[*(int *)(v58 + 24)];
          break;
        case 3u:
          uint64_t v21 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          uint64_t v22 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
          *(_OWORD *)&a1[*(int *)(v22 + 20)] = *(_OWORD *)&a2[*(int *)(v22 + 20)];
          break;
        case 4u:
          uint64_t v23 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
          uint64_t v24 = type metadata accessor for ModalityXRequestMitigated(0);
          *(_OWORD *)&a1[*(int *)(v24 + 20)] = *(_OWORD *)&a2[*(int *)(v24 + 20)];
          a1[*(int *)(v24 + 24)] = a2[*(int *)(v24 + 24)];
          break;
        case 5u:
          uint64_t v25 = type metadata accessor for UnknownStorage();
          uint64_t v26 = (void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32);
          uint64_t v79 = *v26;
          (*v26)(a1, a2, v25);
          uint64_t v27 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
          *(_OWORD *)&a1[v27[5]] = *(_OWORD *)&a2[v27[5]];
          uint64_t v28 = v27[6];
          uint64_t v29 = &a1[v28];
          uint64_t v30 = &a2[v28];
          uint64_t v31 = (int *)type metadata accessor for ModalityXProcessingError(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v31))
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
            memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            v79(v29, v30, v25);
            uint64_t v55 = v31[5];
            char v56 = &v29[v55];
            uint64_t v57 = &v30[v55];
            *(_DWORD *)char v56 = *(_DWORD *)v57;
            v56[4] = v57[4];
            *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
            v29[v31[7]] = v30[v31[7]];
            *(_OWORD *)&v29[v31[8]] = *(_OWORD *)&v30[v31[8]];
            __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, (uint64_t)v31);
          }
          a1[v27[7]] = a2[v27[7]];
          *(_OWORD *)&a1[v27[8]] = *(_OWORD *)&a2[v27[8]];
          *(_OWORD *)&a1[v27[9]] = *(_OWORD *)&a2[v27[9]];
          break;
        default:
          uint64_t v9 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
          uint64_t v10 = type metadata accessor for ModalityXRequestComplete(0);
          *(_OWORD *)&a1[*(int *)(v10 + 20)] = *(_OWORD *)&a2[*(int *)(v10 + 20)];
          break;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_41;
    }
LABEL_7:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_41;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        uint64_t v34 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v35 = v34[5];
        uint64_t v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        v36[4] = v37[4];
        *(_OWORD *)&a1[v34[6]] = *(_OWORD *)&a2[v34[6]];
        a1[v34[7]] = a2[v34[7]];
        *(_OWORD *)&a1[v34[8]] = *(_OWORD *)&a2[v34[8]];
        break;
      case 2u:
        uint64_t v38 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v38))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          int v63 = swift_getEnumCaseMultiPayload();
          uint64_t v64 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 32))(a1, a2, v64);
          if (v63 == 1) {
            uint64_t v65 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v65 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v65 + 20)] = *(void *)&a2[*(int *)(v65 + 20)];
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v38);
        }
        uint64_t v69 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v70 = *(int *)(v69 + 20);
        uint64_t v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        uint64_t v73 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
        *(_OWORD *)&a1[*(int *)(v69 + 24)] = *(_OWORD *)&a2[*(int *)(v69 + 24)];
        break;
      case 3u:
        uint64_t v40 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
        uint64_t v41 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
        *(_OWORD *)&a1[*(int *)(v41 + 20)] = *(_OWORD *)&a2[*(int *)(v41 + 20)];
        break;
      case 4u:
        uint64_t v42 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
        uint64_t v43 = type metadata accessor for ModalityXRequestMitigated(0);
        *(_OWORD *)&a1[*(int *)(v43 + 20)] = *(_OWORD *)&a2[*(int *)(v43 + 20)];
        a1[*(int *)(v43 + 24)] = a2[*(int *)(v43 + 24)];
        break;
      case 5u:
        uint64_t v44 = type metadata accessor for UnknownStorage();
        uint64_t v45 = (void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 32);
        uint64_t v80 = *v45;
        (*v45)(a1, a2, v44);
        uint64_t v46 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        *(_OWORD *)&a1[v46[5]] = *(_OWORD *)&a2[v46[5]];
        uint64_t v47 = v46[6];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        uint64_t v50 = (int *)type metadata accessor for ModalityXProcessingError(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, (uint64_t)v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          v80(v48, v49, v44);
          uint64_t v66 = v50[5];
          uint64_t v67 = &v48[v66];
          uint64_t v68 = &v49[v66];
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          v67[4] = v68[4];
          *(_OWORD *)&v48[v50[6]] = *(_OWORD *)&v49[v50[6]];
          v48[v50[7]] = v49[v50[7]];
          *(_OWORD *)&v48[v50[8]] = *(_OWORD *)&v49[v50[8]];
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, (uint64_t)v50);
        }
        a1[v46[7]] = a2[v46[7]];
        *(_OWORD *)&a1[v46[8]] = *(_OWORD *)&a2[v46[8]];
        *(_OWORD *)&a1[v46[9]] = *(_OWORD *)&a2[v46[9]];
        break;
      default:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = type metadata accessor for ModalityXRequestComplete(0);
        *(_OWORD *)&a1[*(int *)(v13 + 20)] = *(_OWORD *)&a2[*(int *)(v13 + 20)];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_41:
  uint64_t v74 = *(int *)(a3 + 20);
  uint64_t v75 = &a1[v74];
  uint64_t v76 = &a2[v74];
  uint64_t v77 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569DFCCC);
}

uint64_t sub_2569DFCCC()
{
  return __swift_get_extra_inhabitant_indexTm();
}

uint64_t __swift_get_extra_inhabitant_indexTm()
{
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v2 + 84) == v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_262();
  }
  else
  {
    type metadata accessor for UnknownStorage();
    uint64_t v3 = OUTLINED_FUNCTION_196();
  }

  return __swift_getEnumTagSinglePayload(v3, v0, v4);
}

uint64_t storeEnumTagSinglePayload for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569DFD5C);
}

uint64_t sub_2569DFD5C(uint64_t a1, uint64_t a2, int a3)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3)
{
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v5 + 84) == a3)
  {
    OUTLINED_FUNCTION_268();
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_199();
  }
  OUTLINED_FUNCTION_159();

  return __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
}

void type metadata completion function for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void type metadata completion function for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, a4, a5);
  if (v5 <= 0x3F)
  {
    type metadata accessor for UnknownStorage();
    if (v6 <= 0x3F) {
      OUTLINED_FUNCTION_335();
    }
  }
}

void type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ModalityXClientBoundFrame.OneOf_Payload(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v14 = v13[5];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
        v15[4] = v16[4];
        uint64_t v17 = v13[6];
        uint64_t v18 = (void *)((char *)a1 + v17);
        uint64_t v19 = (void *)((char *)a2 + v17);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        void *v18 = v21;
        v18[1] = v20;
        *((unsigned char *)a1 + v13[7]) = *((unsigned char *)a2 + v13[7]);
        uint64_t v22 = v13[8];
        uint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v26 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v53 = type metadata accessor for UnknownStorage();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          if (EnumCaseMultiPayload == 1) {
            uint64_t v54 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v54 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)((char *)a1 + *(int *)(v54 + 20)) = *(void *)((char *)a2 + *(int *)(v54 + 20));
          swift_retain();
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v26);
        }
        uint64_t v76 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v77 = *(int *)(v76 + 20);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
        uint64_t v81 = *(int *)(v76 + 24);
        uint64_t v82 = (void *)((char *)a1 + v81);
        uint64_t v83 = (void *)((char *)a2 + v81);
        uint64_t v84 = v83[1];
        void *v82 = *v83;
        v82[1] = v84;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v28 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
        uint64_t v30 = (void *)((char *)a1 + v29);
        uint64_t v31 = (void *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v34 = type metadata accessor for ModalityXRequestMitigated(0);
        uint64_t v35 = *(int *)(v34 + 20);
        uint64_t v36 = (void *)((char *)a1 + v35);
        uint64_t v37 = (void *)((char *)a2 + v35);
        uint64_t v39 = *v37;
        uint64_t v38 = v37[1];
        *uint64_t v36 = v39;
        v36[1] = v38;
        *((unsigned char *)a1 + *(int *)(v34 + 24)) = *((unsigned char *)a2 + *(int *)(v34 + 24));
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v40 = type metadata accessor for UnknownStorage();
        uint64_t v41 = (void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
        uint64_t v86 = *v41;
        (*v41)((char *)a1, (char *)a2, v40);
        uint64_t v42 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        uint64_t v43 = v42[5];
        uint64_t v44 = (void *)((char *)a1 + v43);
        uint64_t v45 = (void *)((char *)a2 + v43);
        uint64_t v46 = v45[1];
        *uint64_t v44 = *v45;
        v44[1] = v46;
        uint64_t v47 = v42[6];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = (int *)type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, (uint64_t)v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          v86(v48, v49, v40);
          uint64_t v55 = v50[5];
          char v56 = &v48[v55];
          uint64_t v57 = &v49[v55];
          *(_DWORD *)char v56 = *(_DWORD *)v57;
          v56[4] = v57[4];
          uint64_t v58 = v50[6];
          uint64_t v59 = &v48[v58];
          uint64_t v60 = &v49[v58];
          uint64_t v61 = *((void *)v60 + 1);
          *(void *)uint64_t v59 = *(void *)v60;
          *((void *)v59 + 1) = v61;
          v48[v50[7]] = v49[v50[7]];
          uint64_t v62 = v50[8];
          int v63 = &v48[v62];
          uint64_t v64 = &v49[v62];
          uint64_t v65 = *((void *)v64 + 1);
          *(void *)int v63 = *(void *)v64;
          *((void *)v63 + 1) = v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, (uint64_t)v50);
        }
        *((unsigned char *)a1 + v42[7]) = *((unsigned char *)a2 + v42[7]);
        uint64_t v66 = v42[8];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        unint64_t v69 = *((void *)v68 + 1);
        if (v69 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        }
        else
        {
          uint64_t v70 = *(void *)v68;
          outlined copy of Data._Representation(*(void *)v68, *((void *)v68 + 1));
          *(void *)uint64_t v67 = v70;
          *((void *)v67 + 1) = v69;
        }
        uint64_t v71 = v42[9];
        uint64_t v72 = (char *)a1 + v71;
        uint64_t v73 = (char *)a2 + v71;
        unint64_t v74 = *((void *)v73 + 1);
        if (v74 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
        }
        else
        {
          uint64_t v75 = *(void *)v73;
          outlined copy of Data._Representation(*(void *)v73, *((void *)v73 + 1));
          *(void *)uint64_t v72 = v75;
          *((void *)v72 + 1) = v74;
        }
        break;
      default:
        uint64_t v6 = type metadata accessor for UnknownStorage();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
        uint64_t v8 = (void *)((char *)a1 + v7);
        uint64_t v9 = (void *)((char *)a2 + v7);
        uint64_t v10 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v10;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ModalityXClientBoundFrame.OneOf_Payload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for ModalityXRequestComplete(0);
      goto LABEL_21;
    case 1:
      uint64_t v4 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for ModalityXProcessingError(0);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 2:
      uint64_t v5 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v5))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v7 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
        if (EnumCaseMultiPayload == 1) {
          type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
        }
        else {
          type metadata accessor for ModalityXRecognitionCandidate(0);
        }
        swift_release();
      }
      uint64_t v20 = a1 + *(int *)(type metadata accessor for ModalityXASRResult(0) + 20);
      uint64_t v21 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      goto LABEL_21;
    case 3:
      uint64_t v8 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
      goto LABEL_21;
    case 4:
      uint64_t v9 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for ModalityXRequestMitigated(0);
LABEL_21:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v10 = type metadata accessor for UnknownStorage();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(a1, v10);
      uint64_t v12 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
      swift_bridgeObjectRelease();
      uint64_t v13 = a1 + v12[6];
      uint64_t v14 = type metadata accessor for ModalityXProcessingError(0);
      uint64_t result = __swift_getEnumTagSinglePayload(v13, 1, v14);
      if (!result)
      {
        v11(v13, v10);
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v15 = (uint64_t *)(a1 + v12[8]);
      unint64_t v16 = v15[1];
      if (v16 >> 60 != 15) {
        uint64_t result = outlined consume of Data._Representation(*v15, v16);
      }
      uint64_t v17 = (uint64_t *)(a1 + v12[9]);
      unint64_t v18 = v17[1];
      if (v18 >> 60 != 15)
      {
        uint64_t v19 = *v17;
        uint64_t result = outlined consume of Data._Representation(v19, v18);
      }
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *initializeWithCopy for ModalityXClientBoundFrame.OneOf_Payload(unsigned char *a1, unsigned char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = (int *)type metadata accessor for ModalityXProcessingError(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
      v12[4] = v13[4];
      uint64_t v14 = v10[6];
      uint64_t v15 = &a1[v14];
      unint64_t v16 = (uint64_t *)&a2[v14];
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      *uint64_t v15 = v18;
      v15[1] = v17;
      a1[v10[7]] = a2[v10[7]];
      uint64_t v19 = v10[8];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v23 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v50 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        if (EnumCaseMultiPayload == 1) {
          uint64_t v51 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
        }
        else {
          uint64_t v51 = type metadata accessor for ModalityXRecognitionCandidate(0);
        }
        *(void *)&a1[*(int *)(v51 + 20)] = *(void *)&a2[*(int *)(v51 + 20)];
        swift_retain();
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v23);
      }
      uint64_t v73 = type metadata accessor for ModalityXASRResult(0);
      uint64_t v74 = *(int *)(v73 + 20);
      uint64_t v75 = &a1[v74];
      uint64_t v76 = &a2[v74];
      uint64_t v77 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
      uint64_t v78 = *(int *)(v73 + 24);
      uint64_t v79 = &a1[v78];
      uint64_t v80 = &a2[v78];
      uint64_t v81 = v80[1];
      *uint64_t v79 = *v80;
      v79[1] = v81;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v25 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v29;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v30 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = type metadata accessor for ModalityXRequestMitigated(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = &a1[v32];
      uint64_t v34 = (uint64_t *)&a2[v32];
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      *uint64_t v33 = v36;
      v33[1] = v35;
      a1[*(int *)(v31 + 24)] = a2[*(int *)(v31 + 24)];
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v37 = type metadata accessor for UnknownStorage();
      uint64_t v38 = (void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 16);
      uint64_t v83 = *v38;
      (*v38)(a1, a2, v37);
      uint64_t v39 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
      uint64_t v40 = v39[5];
      uint64_t v41 = &a1[v40];
      uint64_t v42 = &a2[v40];
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = v39[6];
      uint64_t v45 = &a1[v44];
      uint64_t v46 = &a2[v44];
      uint64_t v47 = (int *)type metadata accessor for ModalityXProcessingError(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, (uint64_t)v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        v83(v45, v46, v37);
        uint64_t v52 = v47[5];
        uint64_t v53 = &v45[v52];
        uint64_t v54 = &v46[v52];
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        v53[4] = v54[4];
        uint64_t v55 = v47[6];
        char v56 = &v45[v55];
        uint64_t v57 = &v46[v55];
        uint64_t v58 = *((void *)v57 + 1);
        *(void *)char v56 = *(void *)v57;
        *((void *)v56 + 1) = v58;
        v45[v47[7]] = v46[v47[7]];
        uint64_t v59 = v47[8];
        uint64_t v60 = &v45[v59];
        uint64_t v61 = &v46[v59];
        uint64_t v62 = *((void *)v61 + 1);
        *(void *)uint64_t v60 = *(void *)v61;
        *((void *)v60 + 1) = v62;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, (uint64_t)v47);
      }
      a1[v39[7]] = a2[v39[7]];
      uint64_t v63 = v39[8];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      unint64_t v66 = *((void *)v65 + 1);
      if (v66 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      }
      else
      {
        uint64_t v67 = *(void *)v65;
        outlined copy of Data._Representation(*(void *)v65, *((void *)v65 + 1));
        *(void *)uint64_t v64 = v67;
        *((void *)v64 + 1) = v66;
      }
      uint64_t v68 = v39[9];
      unint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      unint64_t v71 = *((void *)v70 + 1);
      if (v71 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v69 = *(_OWORD *)v70;
      }
      else
      {
        uint64_t v72 = *(void *)v70;
        outlined copy of Data._Representation(*(void *)v70, *((void *)v70 + 1));
        *(void *)unint64_t v69 = v72;
        *((void *)v69 + 1) = v71;
      }
      break;
    default:
      uint64_t v4 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = v7[1];
      *uint64_t v6 = *v7;
      v6[1] = v8;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithCopy for ModalityXClientBoundFrame.OneOf_Payload(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        char v13 = v12[4];
        *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
        v11[4] = v13;
        uint64_t v14 = v9[6];
        uint64_t v15 = &a1[v14];
        unint64_t v16 = &a2[v14];
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
        a1[v9[7]] = a2[v9[7]];
        uint64_t v17 = v9[8];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        void *v18 = *v19;
        v18[1] = v19[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v20 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v20))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v43 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
          if (EnumCaseMultiPayload == 1) {
            uint64_t v44 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v44 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v44 + 20)] = *(void *)&a2[*(int *)(v44 + 20)];
          swift_retain();
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v20);
        }
        uint64_t v65 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v66 = *(int *)(v65 + 20);
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        uint64_t v69 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
        uint64_t v70 = *(int *)(v65 + 24);
        unint64_t v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        void *v71 = *v72;
        v71[1] = v72[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v22 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = *(int *)(type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0) + 20);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        *uint64_t v24 = *v25;
        v24[1] = v25[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v26 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = type metadata accessor for ModalityXRequestMitigated(0);
        uint64_t v28 = *(int *)(v27 + 20);
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        a1[*(int *)(v27 + 24)] = a2[*(int *)(v27 + 24)];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v31 = type metadata accessor for UnknownStorage();
        uint64_t v32 = (void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16);
        uint64_t v74 = *v32;
        (*v32)(a1, a2, v31);
        uint64_t v33 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        uint64_t v34 = v33[5];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        *uint64_t v35 = *v36;
        v35[1] = v36[1];
        uint64_t v37 = v33[6];
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = (int *)type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, (uint64_t)v40))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          v74(v38, v39, v31);
          uint64_t v45 = v40[5];
          uint64_t v46 = &v38[v45];
          uint64_t v47 = &v39[v45];
          int v48 = *(_DWORD *)v47;
          v46[4] = v47[4];
          *(_DWORD *)uint64_t v46 = v48;
          uint64_t v49 = v40[6];
          uint64_t v50 = &v38[v49];
          uint64_t v51 = &v39[v49];
          *(void *)uint64_t v50 = *(void *)v51;
          *((void *)v50 + 1) = *((void *)v51 + 1);
          v38[v40[7]] = v39[v40[7]];
          uint64_t v52 = v40[8];
          uint64_t v53 = &v38[v52];
          uint64_t v54 = &v39[v52];
          *(void *)uint64_t v53 = *(void *)v54;
          *((void *)v53 + 1) = *((void *)v54 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, (uint64_t)v40);
        }
        a1[v33[7]] = a2[v33[7]];
        uint64_t v55 = v33[8];
        char v56 = &a1[v55];
        uint64_t v57 = &a2[v55];
        unint64_t v58 = *((void *)v57 + 1);
        if (v58 >> 60 == 15)
        {
          *(_OWORD *)char v56 = *(_OWORD *)v57;
        }
        else
        {
          uint64_t v59 = *(void *)v57;
          outlined copy of Data._Representation(*(void *)v57, *((void *)v57 + 1));
          *(void *)char v56 = v59;
          *((void *)v56 + 1) = v58;
        }
        uint64_t v60 = v33[9];
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        unint64_t v63 = *((void *)v62 + 1);
        if (v63 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        }
        else
        {
          uint64_t v64 = *(void *)v62;
          outlined copy of Data._Representation(*(void *)v62, *((void *)v62 + 1));
          *(void *)uint64_t v61 = v64;
          *((void *)v61 + 1) = v63;
        }
        break;
      default:
        uint64_t v4 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
        uint64_t v6 = &a1[v5];
        uint64_t v7 = &a2[v5];
        *uint64_t v6 = *v7;
        v6[1] = v7[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for ModalityXClientBoundFrame.OneOf_Payload(unsigned char *a1, unsigned char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for ModalityXProcessingError(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
      v9[4] = v10[4];
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      a1[v7[7]] = a2[v7[7]];
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      break;
    case 2u:
      uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v26 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        if (EnumCaseMultiPayload == 1) {
          uint64_t v27 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
        }
        else {
          uint64_t v27 = type metadata accessor for ModalityXRecognitionCandidate(0);
        }
        *(void *)&a1[*(int *)(v27 + 20)] = *(void *)&a2[*(int *)(v27 + 20)];
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
      }
      uint64_t v31 = type metadata accessor for ModalityXASRResult(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v35 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *(_OWORD *)&a1[*(int *)(v31 + 24)] = *(_OWORD *)&a2[*(int *)(v31 + 24)];
      break;
    case 3u:
      uint64_t v13 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
      *(_OWORD *)&a1[*(int *)(v14 + 20)] = *(_OWORD *)&a2[*(int *)(v14 + 20)];
      break;
    case 4u:
      uint64_t v15 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      uint64_t v16 = type metadata accessor for ModalityXRequestMitigated(0);
      *(_OWORD *)&a1[*(int *)(v16 + 20)] = *(_OWORD *)&a2[*(int *)(v16 + 20)];
      a1[*(int *)(v16 + 24)] = a2[*(int *)(v16 + 24)];
      break;
    case 5u:
      uint64_t v17 = type metadata accessor for UnknownStorage();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
      v18(a1, a2, v17);
      uint64_t v19 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
      *(_OWORD *)&a1[v19[5]] = *(_OWORD *)&a2[v19[5]];
      uint64_t v20 = v19[6];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = (int *)type metadata accessor for ModalityXProcessingError(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, (uint64_t)v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v18(v21, v22, v17);
        uint64_t v28 = v23[5];
        uint64_t v29 = &v21[v28];
        uint64_t v30 = &v22[v28];
        *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
        v29[4] = v30[4];
        *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
        v21[v23[7]] = v22[v23[7]];
        *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, (uint64_t)v23);
      }
      a1[v19[7]] = a2[v19[7]];
      *(_OWORD *)&a1[v19[8]] = *(_OWORD *)&a2[v19[8]];
      *(_OWORD *)&a1[v19[9]] = *(_OWORD *)&a2[v19[9]];
      break;
    default:
      uint64_t v4 = type metadata accessor for UnknownStorage();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for ModalityXRequestComplete(0);
      *(_OWORD *)&a1[*(int *)(v5 + 20)] = *(_OWORD *)&a2[*(int *)(v5 + 20)];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *assignWithTake for ModalityXClientBoundFrame.OneOf_Payload(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for ModalityXProcessingError(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
        v9[4] = v10[4];
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        a1[v7[7]] = a2[v7[7]];
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        break;
      case 2u:
        uint64_t v11 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v26 = type metadata accessor for UnknownStorage();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
          if (EnumCaseMultiPayload == 1) {
            uint64_t v27 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          }
          else {
            uint64_t v27 = type metadata accessor for ModalityXRecognitionCandidate(0);
          }
          *(void *)&a1[*(int *)(v27 + 20)] = *(void *)&a2[*(int *)(v27 + 20)];
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v11);
        }
        uint64_t v31 = type metadata accessor for ModalityXASRResult(0);
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v35 = type metadata accessor for UnknownStorage();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        *(_OWORD *)&a1[*(int *)(v31 + 24)] = *(_OWORD *)&a2[*(int *)(v31 + 24)];
        break;
      case 3u:
        uint64_t v13 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
        *(_OWORD *)&a1[*(int *)(v14 + 20)] = *(_OWORD *)&a2[*(int *)(v14 + 20)];
        break;
      case 4u:
        uint64_t v15 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for ModalityXRequestMitigated(0);
        *(_OWORD *)&a1[*(int *)(v16 + 20)] = *(_OWORD *)&a2[*(int *)(v16 + 20)];
        a1[*(int *)(v16 + 24)] = a2[*(int *)(v16 + 24)];
        break;
      case 5u:
        uint64_t v17 = type metadata accessor for UnknownStorage();
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
        v18(a1, a2, v17);
        uint64_t v19 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        *(_OWORD *)&a1[v19[5]] = *(_OWORD *)&a2[v19[5]];
        uint64_t v20 = v19[6];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = (int *)type metadata accessor for ModalityXProcessingError(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, (uint64_t)v23))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          v18(v21, v22, v17);
          uint64_t v28 = v23[5];
          uint64_t v29 = &v21[v28];
          uint64_t v30 = &v22[v28];
          *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
          v29[4] = v30[4];
          *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
          v21[v23[7]] = v22[v23[7]];
          *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
          __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, (uint64_t)v23);
        }
        a1[v19[7]] = a2[v19[7]];
        *(_OWORD *)&a1[v19[8]] = *(_OWORD *)&a2[v19[8]];
        *(_OWORD *)&a1[v19[9]] = *(_OWORD *)&a2[v19[9]];
        break;
      default:
        uint64_t v4 = type metadata accessor for UnknownStorage();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for ModalityXRequestComplete(0);
        *(_OWORD *)&a1[*(int *)(v5 + 20)] = *(_OWORD *)&a2[*(int *)(v5 + 20)];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ModalityXClientBoundFrame.OneOf_Payload()
{
  uint64_t result = type metadata accessor for ModalityXRequestComplete(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ModalityXProcessingError(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ModalityXASRResult(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for ModalityXRequestMitigated(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for ModalityXSpeechProfileBuildResponse(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXSessionMetadata(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v15 = v12[5];
      uint64_t v16 = &v10[v15];
      uint64_t v17 = &v11[v15];
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v12[7];
      uint64_t v24 = &v10[v23];
      uint64_t v25 = &v11[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      uint64_t v27 = v12[8];
      uint64_t v28 = &v10[v27];
      uint64_t v29 = &v11[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v12[9];
      uint64_t v32 = &v10[v31];
      uint64_t v33 = &v11[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
    }
    uint64_t v35 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v35] = a2[v35];
    uint64_t v36 = a3[8];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for ModalityXDeviceInfo(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v13 = v11[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v11[7];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = v11[8];
    uint64_t v26 = &v9[v25];
    uint64_t v27 = &v10[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v11[9];
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v33 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[8];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v50 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v35 = v12[5];
      uint64_t v36 = &v10[v35];
      uint64_t v37 = &v11[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = *((void *)v37 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v38 = v12[6];
      uint64_t v39 = &v10[v38];
      uint64_t v40 = &v11[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = *((void *)v40 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v41 = v12[7];
      uint64_t v42 = &v10[v41];
      uint64_t v43 = &v11[v41];
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = *((void *)v43 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v44 = v12[8];
      uint64_t v45 = &v10[v44];
      uint64_t v46 = &v11[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = *((void *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v47 = v12[9];
      int v48 = &v10[v47];
      uint64_t v49 = &v11[v47];
      *(void *)int v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v10, v11, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v15 = v12[5];
  uint64_t v16 = &v10[v15];
  uint64_t v17 = &v11[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  uint64_t v18 = v12[6];
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  uint64_t v21 = v12[7];
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  uint64_t v24 = v12[8];
  uint64_t v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  uint64_t v27 = v12[9];
  uint64_t v28 = &v10[v27];
  uint64_t v29 = &v11[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  *(unsigned char *)(a1 + v50[6]) = *(unsigned char *)(a2 + v50[6]);
  *(unsigned char *)(a1 + v50[7]) = *(unsigned char *)(a2 + v50[7]);
  uint64_t v31 = v50[8];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  int v48 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v23 = v12[5];
      uint64_t v24 = &v10[v23];
      uint64_t v25 = &v11[v23];
      uint64_t v27 = *(void *)v25;
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = v12[6];
      uint64_t v29 = &v10[v28];
      uint64_t v30 = &v11[v28];
      uint64_t v32 = *(void *)v30;
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = v32;
      *((void *)v29 + 1) = v31;
      swift_bridgeObjectRelease();
      uint64_t v33 = v12[7];
      uint64_t v34 = &v10[v33];
      uint64_t v35 = &v11[v33];
      uint64_t v37 = *(void *)v35;
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = v37;
      *((void *)v34 + 1) = v36;
      swift_bridgeObjectRelease();
      uint64_t v38 = v12[8];
      uint64_t v39 = &v10[v38];
      uint64_t v40 = &v11[v38];
      uint64_t v42 = *(void *)v40;
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = v42;
      *((void *)v39 + 1) = v41;
      swift_bridgeObjectRelease();
      uint64_t v43 = v12[9];
      uint64_t v44 = &v10[v43];
      uint64_t v45 = &v11[v43];
      uint64_t v47 = *(void *)v45;
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = v47;
      *((void *)v44 + 1) = v46;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  *(_OWORD *)&v10[v12[5]] = *(_OWORD *)&v11[v12[5]];
  *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
  *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
  *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
  *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  uint64_t v16 = v48[7];
  *(unsigned char *)(a1 + v48[6]) = *(unsigned char *)(a2 + v48[6]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = v48[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E2E04);
}

uint64_t sub_2569E2E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_262();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v9 + 84) != v3) {
      return OUTLINED_FUNCTION_44(v4 + *(int *)(a3 + 32));
    }
    uint64_t v7 = OUTLINED_FUNCTION_196();
  }

  return __swift_getEnumTagSinglePayload(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E2EB4);
}

void sub_2569E2EB4()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    OUTLINED_FUNCTION_268();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v3 + 84) != v1)
    {
      OUTLINED_FUNCTION_154(*(int *)(v0 + 32));
      return;
    }
    OUTLINED_FUNCTION_199();
  }
  OUTLINED_FUNCTION_159();

  __swift_storeEnumTagSinglePayload(v4, v5, v6, v7);
}

void type metadata completion function for ModalityXSessionMetadata()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXDeviceInfo?, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfile(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (void *)((char *)a2 + v8);
    unint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *v10;
      outlined copy of Data._Representation(*v10, v11);
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return outlined consume of Data._Representation(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    outlined copy of Data._Representation(*v9, v10);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      outlined copy of Data._Representation(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      outlined consume of Data._Representation(v13, v14);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  uint64_t v11 = *v9;
  outlined copy of Data._Representation(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t outlined destroy of Data(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      outlined consume of Data._Representation(v12, v10);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E3544);
}

uint64_t sub_2569E3544()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v3 + 84) == v1)
  {
    uint64_t v4 = OUTLINED_FUNCTION_198();
    return __swift_getEnumTagSinglePayload(v4, v5, v6);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v8 >= 2) {
      int v9 = ((v8 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v9 = -2;
    }
    if (v9 < 0) {
      int v9 = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E35EC);
}

void sub_2569E35EC()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 2;
  }
}

uint64_t type metadata completion function for ModalityXSpeechProfile()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

{
  uint64_t result;
  unint64_t v1;

  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_141(result);
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_211Tm);
}

uint64_t storeEnumTagSinglePayload for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_212Tm);
}

uint64_t type metadata completion function for ModalityXBeginRequest()
{
  return type metadata completion function for ModalityXBeginRequest();
}

{
  uint64_t result;
  unint64_t v1;

  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_141(result);
    OUTLINED_FUNCTION_335();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXBeginRequest(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_0_0();
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
  }
  else
  {
    uint64_t v7 = v4;
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_100();
    v8();
    *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ModalityXBeginRequest()
{
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_307();
  v0();

  return swift_release();
}

uint64_t initializeWithCopy for ModalityXBeginRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_retain();
  return v2;
}

uint64_t assignWithCopy for ModalityXBeginRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_202();
  v4(v3);
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_retain();
  swift_release();
  return v2;
}

uint64_t initializeWithTake for ModalityXBeginRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_201();
  v4(v3);
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t assignWithTake for ModalityXBeginRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_200();
  v4(v3);
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_release();
  return v2;
}

uint64_t getEnumTagSinglePayload for ModalityXBeginDictation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E3954);
}

uint64_t __swift_get_extra_inhabitant_index_211Tm()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_332(*(void *)(v0 + *(int *)(v2 + 20)));
  }
  uint64_t v4 = OUTLINED_FUNCTION_198();

  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ModalityXBeginDictation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E39D8);
}

void __swift_store_extra_inhabitant_index_212Tm()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t getEnumTagSinglePayload for ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm);
}

uint64_t storeEnumTagSinglePayload for ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_218Tm);
}

uint64_t type metadata completion function for ModalityXCancelRequest()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

void *initializeBufferWithCopyOfBuffer for ModalityXAudioFrame(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v7 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)v7 + v14) = *((unsigned char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModalityXAudioFrame(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ModalityXAudioFrame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ModalityXAudioFrame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *initializeWithTake for ModalityXAudioFrame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void *assignWithTake for ModalityXAudioFrame(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E3F54);
}

uint64_t sub_2569E3F54(unint64_t *a1, uint64_t a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_332(*a1);
  }
  type metadata accessor for UnknownStorage();
  uint64_t v4 = OUTLINED_FUNCTION_196();

  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E3FDC);
}

void sub_2569E3FDC()
{
  OUTLINED_FUNCTION_221();
  if (v2 == 0x7FFFFFFF)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_159();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t type metadata completion function for ModalityXAudioFrame()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXASRResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v11 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v12 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      }
      else {
        uint64_t v12 = type metadata accessor for ModalityXRecognitionCandidate(0);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
      swift_retain();
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXASRResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    if (EnumCaseMultiPayload == 1) {
      type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v9 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v10 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v10 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
    swift_retain();
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v11 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      }
      else {
        uint64_t v11 = type metadata accessor for ModalityXRecognitionCandidate(0);
      }
      *(void *)&a1[*(int *)(v11 + 20)] = *(void *)&a2[*(int *)(v11 + 20)];
      swift_retain();
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    int v13 = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
    if (v13 == 1) {
      uint64_t v15 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v15 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v9 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v10 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v10 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  int v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      if (EnumCaseMultiPayload == 1) {
        uint64_t v11 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      }
      else {
        uint64_t v11 = type metadata accessor for ModalityXRecognitionCandidate(0);
      }
      *(void *)&a1[*(int *)(v11 + 20)] = *(void *)&a2[*(int *)(v11 + 20)];
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    int v13 = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
    if (v13 == 1) {
      uint64_t v15 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v15 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)&a1[*(int *)(v15 + 20)] = *(void *)&a2[*(int *)(v15 + 20)];
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXASRResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E4C38);
}

uint64_t sub_2569E4C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_262();
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v9 + 84) != v3) {
      return OUTLINED_FUNCTION_44(v4 + *(int *)(a3 + 24));
    }
    uint64_t v7 = OUTLINED_FUNCTION_196();
  }

  return __swift_getEnumTagSinglePayload(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXASRResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E4CF0);
}

void sub_2569E4CF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    OUTLINED_FUNCTION_268();
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v7 + 84) != a3)
    {
      OUTLINED_FUNCTION_154(*(int *)(a4 + 24));
      return;
    }
    OUTLINED_FUNCTION_199();
  }
  OUTLINED_FUNCTION_159();

  __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
}

void type metadata completion function for ModalityXASRResult()
{
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult.OneOf_Payload);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UnknownStorage();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXASRResult.OneOf_Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v8 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v8 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ModalityXASRResult.OneOf_Payload(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1) {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  }
  else {
    type metadata accessor for ModalityXRecognitionCandidate(0);
  }

  return swift_release();
}

uint64_t initializeWithCopy for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1) {
    uint64_t v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  }
  else {
    uint64_t v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
  }
  *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1) {
    uint64_t v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  }
  else {
    uint64_t v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
  }
  *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1) {
      uint64_t v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    }
    else {
      uint64_t v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
    }
    *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ModalityXASRResult.OneOf_Payload()
{
  uint64_t result = type metadata accessor for ModalityXRecognitionCandidate(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_0);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_218Tm_0);
}

uint64_t type metadata completion function for ModalityXSpeechProfileRebuildNeeded()
{
  return type metadata completion function for ModalityXBeginRequest();
}

void *initializeBufferWithCopyOfBuffer for ModalityXProcessingError(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (void *)((char *)a1 + v9);
    int v13 = (void *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXProcessingError(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(unsigned char *)(v8 + 4) = *((unsigned char *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXProcessingError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E5968);
}

uint64_t sub_2569E5968()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_44(v0 + *(int *)(v2 + 24));
  }
  uint64_t v4 = OUTLINED_FUNCTION_198();

  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ModalityXProcessingError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E59E8);
}

void sub_2569E59E8()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(v0 + 24));
  }
}

uint64_t type metadata completion function for ModalityXProcessingError()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ModalityXCancelRequest(uint64_t a1)
{
  OUTLINED_FUNCTION_0_0();
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_205();
  }
  else
  {
    uint64_t v4 = v2;
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_100();
    v5();
    OUTLINED_FUNCTION_313(*(int *)(v4 + 20));
    *(unsigned char *)(a1 + v7) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for ModalityXCancelRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v2();
  OUTLINED_FUNCTION_313(*(int *)(v0 + 20));
  *(unsigned char *)(v1 + v4) = v3;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t assignWithCopy for ModalityXCancelRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_202();
  v1(v0);
  uint64_t v2 = OUTLINED_FUNCTION_215();
  *(void *)(v3 + 8) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_333();
}

uint64_t initializeWithTake for ModalityXCancelRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_201();
  v4(v3);
  uint64_t v5 = *(int *)(v0 + 24);
  *(_OWORD *)(v2 + *(int *)(v0 + 20)) = *(_OWORD *)(v1 + *(int *)(v0 + 20));
  *(unsigned char *)(v2 + v5) = *(unsigned char *)(v1 + v5);
  return v2;
}

uint64_t assignWithTake for ModalityXCancelRequest()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_200();
  v1(v0);
  OUTLINED_FUNCTION_214();
  return OUTLINED_FUNCTION_333();
}

uint64_t getEnumTagSinglePayload for ModalityXRequestMitigated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_1);
}

uint64_t storeEnumTagSinglePayload for ModalityXRequestMitigated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_218Tm_1);
}

uint64_t type metadata completion function for ModalityXRequestMitigated()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

uint64_t getEnumTagSinglePayload for ModalityXRequestComplete(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_2);
}

uint64_t storeEnumTagSinglePayload for ModalityXRequestComplete(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_218Tm_2);
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileBuildRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (uint64_t *)((char *)a1 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v20 = (char *)v14 + v19;
      uint64_t v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)a1 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (uint64_t *)((char *)a1 + v23);
    uint64_t v28 = (uint64_t *)((char *)a2 + v23);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    unint64_t v33 = *(uint64_t *)((char *)a2 + v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *v32;
      outlined copy of Data._Representation(*v32, v33);
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = a3[10];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      outlined copy of Data._Representation(*(void *)v37, *((void *)v37 + 1));
      *(void *)uint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfileBuildRequest(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 20), v4);
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(a1 + a2[9]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    uint64_t result = outlined consume of Data._Representation(*v9, v10);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[10]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *v11;
    return outlined consume of Data._Representation(v13, v12);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  unint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)(a1 + v21);
  uint64_t v26 = (void *)(a2 + v21);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  unint64_t v31 = *(void *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *v30;
    outlined copy of Data._Representation(*v30, v31);
    *(void *)uint64_t v29 = v32;
    *(void *)(v29 + 8) = v31;
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  unint64_t v36 = v35[1];
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *v35;
    outlined copy of Data._Representation(*v35, v35[1]);
    *(void *)uint64_t v34 = v37;
    *(void *)(v34 + 8) = v36;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *uint64_t v12 = *v13;
      uint64_t v17 = *(int *)(v14 + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v19 = (char *)v13 + v17;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
      swift_bridgeObjectRetain();
      v20(v18, v19, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v6);
LABEL_7:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = (uint64_t *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  unint64_t v31 = *(void *)(a2 + v28 + 8);
  if (*(void *)(a1 + v28 + 8) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      uint64_t v32 = *v30;
      outlined copy of Data._Representation(v32, v31);
      *uint64_t v29 = v32;
      v29[1] = v31;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v31 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v29);
LABEL_12:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_14;
  }
  uint64_t v33 = *v30;
  outlined copy of Data._Representation(v33, v31);
  uint64_t v34 = *v29;
  unint64_t v35 = v29[1];
  *uint64_t v29 = v33;
  v29[1] = v31;
  outlined consume of Data._Representation(v34, v35);
LABEL_14:
  uint64_t v36 = a3[10];
  uint64_t v37 = (uint64_t *)(a1 + v36);
  unint64_t v38 = (uint64_t *)(a2 + v36);
  unint64_t v39 = *(void *)(a2 + v36 + 8);
  if (*(void *)(a1 + v36 + 8) >> 60 != 15)
  {
    if (v39 >> 60 != 15)
    {
      uint64_t v41 = *v38;
      outlined copy of Data._Representation(v41, v39);
      uint64_t v42 = *v37;
      unint64_t v43 = v37[1];
      *uint64_t v37 = v41;
      v37[1] = v39;
      outlined consume of Data._Representation(v42, v43);
      return a1;
    }
    outlined destroy of Data((uint64_t)v37);
    goto LABEL_19;
  }
  if (v39 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    return a1;
  }
  uint64_t v40 = *v38;
  outlined copy of Data._Representation(v40, v39);
  *uint64_t v37 = v40;
  v37[1] = v39;
  return a1;
}

char *initializeWithTake for ModalityXSpeechProfileBuildRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  unint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v14 = *(void *)v15;
  swift_bridgeObjectRelease();
  v7((uint64_t)&v14[*(int *)(v16 + 20)], (uint64_t)&v15[*(int *)(v16 + 20)], v6);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  unint64_t v33 = *(void *)(a1 + v30 + 8);
  if (v33 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    goto LABEL_12;
  }
  unint64_t v34 = *(void *)(v32 + 8);
  if (v34 >> 60 == 15)
  {
    outlined destroy of Data(v31);
    goto LABEL_10;
  }
  uint64_t v35 = *(void *)v31;
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = v34;
  outlined consume of Data._Representation(v35, v33);
LABEL_12:
  uint64_t v36 = a3[10];
  uint64_t v37 = (uint64_t *)(a1 + v36);
  unint64_t v38 = (uint64_t *)(a2 + v36);
  unint64_t v39 = *(void *)(a1 + v36 + 8);
  if (v39 >> 60 != 15)
  {
    unint64_t v40 = v38[1];
    if (v40 >> 60 != 15)
    {
      uint64_t v41 = *v37;
      *uint64_t v37 = *v38;
      v37[1] = v40;
      outlined consume of Data._Representation(v41, v39);
      return a1;
    }
    outlined destroy of Data((uint64_t)v37);
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E6AF8);
}

uint64_t sub_2569E6AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_239Tm(a1, a2, a3, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E6B18);
}

void sub_2569E6B18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void type metadata completion function for ModalityXSpeechProfileBuildRequest()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXSpeechProfileSourceData?, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXStreamingSpeechProfileBegin(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    int v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXStreamingSpeechProfileBegin(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_3);
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_218Tm_3);
}

uint64_t type metadata completion function for ModalityXStreamingSpeechProfileBegin()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXStreamingSpeechProfileAddData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (uint64_t *)((char *)a1 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v20 = (char *)v14 + v19;
      uint64_t v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    unint64_t v25 = *((void *)v24 + 1);
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      outlined copy of Data._Representation(*(void *)v24, *((void *)v24 + 1));
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v25;
    }
    uint64_t v27 = a3[8];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    unint64_t v30 = *((void *)v29 + 1);
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
    else
    {
      uint64_t v31 = *(void *)v29;
      outlined copy of Data._Representation(*(void *)v29, *((void *)v29 + 1));
      *(void *)uint64_t v28 = v31;
      *((void *)v28 + 1) = v30;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = v5(v6 + *(int *)(v7 + 20), v4);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[7]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    uint64_t result = outlined consume of Data._Representation(*v9, v10);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[8]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *v11;
    return outlined consume of Data._Representation(v13, v12);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  unint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v24 = *v22;
    outlined copy of Data._Representation(*v22, v22[1]);
    *(void *)uint64_t v21 = v24;
    *(void *)(v21 + 8) = v23;
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  unint64_t v28 = v27[1];
  if (v28 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  else
  {
    uint64_t v29 = *v27;
    outlined copy of Data._Representation(*v27, v27[1]);
    *(void *)uint64_t v26 = v29;
    *(void *)(v26 + 8) = v28;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *uint64_t v12 = *v13;
      uint64_t v17 = *(int *)(v14 + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v19 = (char *)v13 + v17;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      swift_bridgeObjectRetain();
      v20(v18, v19, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v6);
LABEL_7:
  uint64_t v22 = a3[7];
  unint64_t v23 = (uint64_t *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = *(void *)(a2 + v22 + 8);
  if (*(void *)(a1 + v22 + 8) >> 60 == 15)
  {
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *v24;
      outlined copy of Data._Representation(v26, v25);
      *unint64_t v23 = v26;
      v23[1] = v25;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v25 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v23);
LABEL_12:
    *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    goto LABEL_14;
  }
  uint64_t v27 = *v24;
  outlined copy of Data._Representation(v27, v25);
  uint64_t v28 = *v23;
  unint64_t v29 = v23[1];
  *unint64_t v23 = v27;
  v23[1] = v25;
  outlined consume of Data._Representation(v28, v29);
LABEL_14:
  uint64_t v30 = a3[8];
  uint64_t v31 = (uint64_t *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  unint64_t v33 = *(void *)(a2 + v30 + 8);
  if (*(void *)(a1 + v30 + 8) >> 60 != 15)
  {
    if (v33 >> 60 != 15)
    {
      uint64_t v35 = *v32;
      outlined copy of Data._Representation(v35, v33);
      uint64_t v36 = *v31;
      unint64_t v37 = v31[1];
      uint64_t *v31 = v35;
      v31[1] = v33;
      outlined consume of Data._Representation(v36, v37);
      return a1;
    }
    outlined destroy of Data((uint64_t)v31);
    goto LABEL_19;
  }
  if (v33 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    return a1;
  }
  uint64_t v34 = *v32;
  outlined copy of Data._Representation(v34, v33);
  uint64_t *v31 = v34;
  v31[1] = v33;
  return a1;
}

char *initializeWithTake for ModalityXStreamingSpeechProfileAddData(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  unint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

uint64_t assignWithTake for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v14 = *(void *)v15;
  swift_bridgeObjectRelease();
  v7((uint64_t)&v14[*(int *)(v16 + 20)], (uint64_t)&v15[*(int *)(v16 + 20)], v6);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  unint64_t v23 = *(void *)(a1 + v20 + 8);
  if (v23 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    goto LABEL_12;
  }
  unint64_t v24 = *(void *)(v22 + 8);
  if (v24 >> 60 == 15)
  {
    outlined destroy of Data(v21);
    goto LABEL_10;
  }
  uint64_t v25 = *(void *)v21;
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v24;
  outlined consume of Data._Representation(v25, v23);
LABEL_12:
  uint64_t v26 = a3[8];
  uint64_t v27 = (uint64_t *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  unint64_t v29 = *(void *)(a1 + v26 + 8);
  if (v29 >> 60 != 15)
  {
    unint64_t v30 = v28[1];
    if (v30 >> 60 != 15)
    {
      uint64_t v31 = *v27;
      *uint64_t v27 = *v28;
      v27[1] = v30;
      outlined consume of Data._Representation(v31, v29);
      return a1;
    }
    outlined destroy of Data((uint64_t)v27);
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E7D60);
}

uint64_t sub_2569E7D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_239Tm(a1, a2, a3, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E7D80);
}

void sub_2569E7D80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void type metadata completion function for ModalityXStreamingSpeechProfileAddData()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXSpeechProfileSourceData?, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_205();
  }
  else
  {
    uint64_t v6 = v4;
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_100();
    v7();
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    unint64_t v10 = (void *)(a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXCancelRequest(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_307();
  v3();
  OUTLINED_FUNCTION_50(*(int *)(a2 + 20));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXSpeechProfileRebuildNeeded()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v3();
  uint64_t v4 = *(int *)(v0 + 20);
  uint64_t v5 = (void *)(v2 + v4);
  uint64_t v6 = (void *)(v1 + v4);
  uint64_t v7 = v6[1];
  void *v5 = *v6;
  v5[1] = v7;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t assignWithCopy for ModalityXSpeechProfileRebuildNeeded()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_202();
  v2(v1);
  uint64_t v3 = OUTLINED_FUNCTION_215();
  *(void *)(v4 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t initializeWithTake for ModalityXSpeechProfileRebuildNeeded()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_201();
  v4(v3);
  *(_OWORD *)(v2 + *(int *)(v0 + 20)) = *(_OWORD *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t assignWithTake for ModalityXSpeechProfileRebuildNeeded()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_200();
  v2(v1);
  OUTLINED_FUNCTION_214();
  return v0;
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E80FC);
}

uint64_t __swift_get_extra_inhabitant_index_217Tm()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_44(v0 + *(int *)(v2 + 20));
  }
  uint64_t v4 = OUTLINED_FUNCTION_198();

  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E8180);
}

void __swift_store_extra_inhabitant_index_218Tm()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(v0 + 20));
  }
}

char *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileBuildResponse(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    uint64_t v15 = &a2[v10];
    uint64_t v16 = (int *)type metadata accessor for ModalityXProcessingError(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v8(v14, v15, v7);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      uint64_t v22 = v16[6];
      unint64_t v23 = &v14[v22];
      unint64_t v24 = &v15[v22];
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)unint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      v14[v16[7]] = v15[v16[7]];
      uint64_t v26 = v16[8];
      uint64_t v27 = &v14[v26];
      uint64_t v28 = &v15[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, (uint64_t)v16);
    }
    uint64_t v30 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = (uint64_t *)&a2[v30];
    unint64_t v33 = *(void *)&a2[v30 + 8];
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *v32;
      outlined copy of Data._Representation(*v32, v33);
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = a3[9];
    uint64_t v36 = &a1[v35];
    unint64_t v37 = &a2[v35];
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      outlined copy of Data._Representation(*(void *)v37, *((void *)v37 + 1));
      *(void *)uint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfileBuildResponse(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for ModalityXProcessingError(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[8]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    uint64_t result = outlined consume of Data._Representation(*v9, v10);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[9]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *v11;
    return outlined consume of Data._Representation(v13, v12);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  unint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (char *)(a1 + v9);
  uint64_t v14 = (char *)(a2 + v9);
  uint64_t v15 = (int *)type metadata accessor for ModalityXProcessingError(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    uint64_t v17 = v15[5];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = &v14[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = v15[6];
    uint64_t v21 = &v13[v20];
    uint64_t v22 = &v14[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v13[v15[7]] = v14[v15[7]];
    uint64_t v24 = v15[8];
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  uint64_t v28 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  unint64_t v31 = *(void *)(a2 + v28 + 8);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *v30;
    outlined copy of Data._Representation(*v30, v31);
    *(void *)uint64_t v29 = v32;
    *(void *)(v29 + 8) = v31;
  }
  uint64_t v33 = a3[9];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  unint64_t v36 = v35[1];
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    uint64_t v37 = *v35;
    outlined copy of Data._Representation(*v35, v35[1]);
    *(void *)uint64_t v34 = v37;
    *(void *)(v34 + 8) = v36;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for ModalityXProcessingError(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 16))(v12, v13, v6);
      uint64_t v17 = v14[5];
      uint64_t v18 = &v12[v17];
      uint64_t v19 = &v13[v17];
      int v20 = *(_DWORD *)v19;
      v18[4] = v19[4];
      *(_DWORD *)uint64_t v18 = v20;
      uint64_t v21 = v14[6];
      uint64_t v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      *uint64_t v22 = *v23;
      v22[1] = v23[1];
      v12[v14[7]] = v13[v14[7]];
      uint64_t v24 = v14[8];
      uint64_t v25 = &v12[v24];
      uint64_t v26 = &v13[v24];
      *uint64_t v25 = *v26;
      v25[1] = v26[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, (uint64_t)v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v12, v13, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v12, (uint64_t)v13, v6);
  uint64_t v45 = v14[5];
  uint64_t v46 = &v12[v45];
  uint64_t v47 = &v13[v45];
  int v48 = *(_DWORD *)v47;
  v46[4] = v47[4];
  *(_DWORD *)uint64_t v46 = v48;
  uint64_t v49 = v14[6];
  uint64_t v50 = &v12[v49];
  uint64_t v51 = &v13[v49];
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[v14[7]] = v13[v14[7]];
  uint64_t v52 = v14[8];
  uint64_t v53 = &v12[v52];
  uint64_t v54 = &v13[v52];
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v28 = a3[8];
  uint64_t v29 = (uint64_t *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  unint64_t v31 = *(void *)(a2 + v28 + 8);
  if (*(void *)(a1 + v28 + 8) >> 60 == 15)
  {
    if (v31 >> 60 != 15)
    {
      uint64_t v32 = *v30;
      outlined copy of Data._Representation(v32, v31);
      *uint64_t v29 = v32;
      v29[1] = v31;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v31 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v29);
LABEL_12:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_14;
  }
  uint64_t v33 = *v30;
  outlined copy of Data._Representation(v33, v31);
  uint64_t v34 = *v29;
  unint64_t v35 = v29[1];
  *uint64_t v29 = v33;
  v29[1] = v31;
  outlined consume of Data._Representation(v34, v35);
LABEL_14:
  uint64_t v36 = a3[9];
  uint64_t v37 = (uint64_t *)(a1 + v36);
  unint64_t v38 = (uint64_t *)(a2 + v36);
  unint64_t v39 = *(void *)(a2 + v36 + 8);
  if (*(void *)(a1 + v36 + 8) >> 60 != 15)
  {
    if (v39 >> 60 != 15)
    {
      uint64_t v41 = *v38;
      outlined copy of Data._Representation(v41, v39);
      uint64_t v42 = *v37;
      unint64_t v43 = v37[1];
      *uint64_t v37 = v41;
      v37[1] = v39;
      outlined consume of Data._Representation(v42, v43);
      return a1;
    }
    outlined destroy of Data((uint64_t)v37);
    goto LABEL_19;
  }
  if (v39 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    return a1;
  }
  uint64_t v40 = *v38;
  outlined copy of Data._Representation(v40, v39);
  *uint64_t v37 = v40;
  v37[1] = v39;
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v9 = (char *)(a1 + v8);
  unint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ModalityXProcessingError(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v13 = v11[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
    v9[v11[7]] = v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for ModalityXProcessingError(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32))(v14, v15, v6);
      uint64_t v19 = v16[5];
      int v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(_DWORD *)int v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
      v14[v16[7]] = v15[v16[7]];
      *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, (uint64_t)v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v14, (uint64_t)v15, v6);
  uint64_t v36 = v16[5];
  uint64_t v37 = &v14[v36];
  unint64_t v38 = &v15[v36];
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  uint64_t v39 = v16[6];
  uint64_t v40 = &v14[v39];
  uint64_t v41 = (uint64_t *)&v15[v39];
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v14[v16[7]] = v15[v16[7]];
  uint64_t v44 = v16[8];
  uint64_t v45 = &v14[v44];
  uint64_t v46 = (uint64_t *)&v15[v44];
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  unint64_t v26 = *(void *)(a1 + v23 + 8);
  if (v26 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_12;
  }
  unint64_t v27 = *(void *)(v25 + 8);
  if (v27 >> 60 == 15)
  {
    outlined destroy of Data(v24);
    goto LABEL_10;
  }
  uint64_t v28 = *(void *)v24;
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v27;
  outlined consume of Data._Representation(v28, v26);
LABEL_12:
  uint64_t v29 = a3[9];
  uint64_t v30 = (uint64_t *)(a1 + v29);
  unint64_t v31 = (uint64_t *)(a2 + v29);
  unint64_t v32 = *(void *)(a1 + v29 + 8);
  if (v32 >> 60 != 15)
  {
    unint64_t v33 = v31[1];
    if (v33 >> 60 != 15)
    {
      uint64_t v34 = *v30;
      *uint64_t v30 = *v31;
      v30[1] = v33;
      outlined consume of Data._Representation(v34, v32);
      return a1;
    }
    outlined destroy of Data((uint64_t)v30);
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2569E9050);
}

uint64_t sub_2569E9050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_239Tm(a1, a2, a3, &demangling cache variable for type metadata for ModalityXProcessingError?);
}

uint64_t __swift_get_extra_inhabitant_index_239Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v8 + 84) == v4)
  {
    uint64_t v9 = OUTLINED_FUNCTION_262();
  }
  else
  {
    if (v4 == 2147483646) {
      return OUTLINED_FUNCTION_44(v5 + *(int *)(a3 + 20));
    }
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
    uint64_t v9 = v5 + *(int *)(a3 + 24);
  }

  return __swift_getEnumTagSinglePayload(v9, v4, v10);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2569E910C);
}

void sub_2569E910C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void __swift_store_extra_inhabitant_index_240Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    OUTLINED_FUNCTION_268();
  }
  else
  {
    if (a3 == 2147483646)
    {
      OUTLINED_FUNCTION_154(*(int *)(a4 + 20));
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(a5);
  }
  OUTLINED_FUNCTION_159();

  __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
}

void type metadata completion function for ModalityXSpeechProfileBuildResponse()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXProcessingError?, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t ObjC metadata update function for ModalityXBeginRequest._StorageClass()
{
  return type metadata accessor for ModalityXBeginRequest._StorageClass(0);
}

void type metadata completion function for ModalityXBeginRequest._StorageClass()
{
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioMetadata?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for ModalityXBeginDictation._StorageClass()
{
  return type metadata accessor for ModalityXBeginDictation._StorageClass(0);
}

void type metadata completion function for ModalityXBeginDictation._StorageClass()
{
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioMetadata?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v4();
  return a2;
}

uint64_t outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_307();
  v3();
  return a1;
}

uint64_t closure #1 in static Data.== infix(_:_:)@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, BOOL *a4@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v6 = v4;
  uint64_t v7 = a3;
  uint64_t v9 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (a2 >> 32 < (int)a2) {
        __break(1u);
      }
      swift_retain();
      char v14 = specialized __DataStorage.withUnsafeBytes<A>(in:apply:)((int)a2, a2 >> 32, v7 & 0x3FFFFFFFFFFFFFFFLL, v9);
      if (v6) {
        goto LABEL_16;
      }
      BOOL v10 = v14;
      __s1 = outlined consume of Data._Representation(a2, v7);
      break;
    case 2uLL:
      uint64_t v7 = a3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v13 = specialized __DataStorage.withUnsafeBytes<A>(in:apply:)(v11, v12, v7, v9);
      if (v6) {
        goto LABEL_15;
      }
      BOOL v10 = v13;
      swift_release();
      __s1 = swift_release();
      break;
    case 3uLL:
      if (!__s1) {
        goto LABEL_14;
      }
      BOOL v10 = 1;
      break;
    default:
      uint64_t __s2 = a2;
      __int16 v16 = a3;
      char v17 = BYTE2(a3);
      char v18 = BYTE3(a3);
      char v19 = BYTE4(a3);
      char v20 = BYTE5(a3);
      if (!__s1)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        outlined consume of Data._Representation(a2, v7);
        __break(1u);
        JUMPOUT(0x2569E9778);
      }
      __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
      BOOL v10 = __s1 == 0;
      break;
  }
  *a4 = v10;
  return __s1;
}

uint64_t specialized __DataStorage.withUnsafeBytes<A>(in:apply:)(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v8 = (char *)result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = __DataStorage._length.getter();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

uint64_t OUTLINED_FUNCTION_3_0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_6_0(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_7_0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_8_0(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_9(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_10(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXBeginDictation(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_11(uint64_t a1)
{
  *(void *)(v3 + 24) = a1;
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v1, v4);
}

uint64_t OUTLINED_FUNCTION_12()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_22()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_23(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 72) = v2;
  uint64_t result = type metadata accessor for ModalityXBeginDictation(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return v0;
}

void *OUTLINED_FUNCTION_26(void *result)
{
  void *v1 = result;
  *uint64_t result = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_27(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_29()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_31@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 24) = a1;
  return *(void *)(v2 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_32(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return 0;
}

void *OUTLINED_FUNCTION_33()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_34()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_35()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_39()
{
  type metadata accessor for ModalityXBeginDictation(0);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_40@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 24) = a1;
  return *(void *)(v2 + a1);
}

uint64_t OUTLINED_FUNCTION_41()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_43(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_44@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void OUTLINED_FUNCTION_47()
{
  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  JUMPOUT(0x25A2AA200);
}

void OUTLINED_FUNCTION_48(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_50@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_51(uint64_t result)
{
  *(_DWORD *)(v1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_54()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_55()
{
  return type metadata accessor for ModalityXBeginDictation(0);
}

uint64_t OUTLINED_FUNCTION_56(uint64_t a1)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_61()
{
  type metadata accessor for ModalityXBeginRequest(0);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_62()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_63(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(int *)(a1 + 20));
  void *v3 = 0;
  v3[1] = 0;
  return type metadata accessor for ModalityXSpeechProfileSourceData(0);
}

uint64_t OUTLINED_FUNCTION_64()
{
  return outlined init with take of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_67()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68()
{
  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  outlined consume of Data?(v0, v1);
  return v2;
}

void *OUTLINED_FUNCTION_69(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  return malloc(v1);
}

uint64_t OUTLINED_FUNCTION_70()
{
  return outlined init with take of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_71()
{
  return outlined copy of Data._Representation(v1, v0);
}

uint64_t OUTLINED_FUNCTION_72()
{
  return outlined init with take of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_73()
{
  return outlined init with copy of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_76()
{
  return outlined init with take of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_78()
{
  *(unsigned char *)(v1 + 84) = *v0 & 1;
}

uint64_t OUTLINED_FUNCTION_79()
{
  return type metadata accessor for UnknownStorage();
}

BOOL OUTLINED_FUNCTION_80@<W0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8) >> 60 != 15;
}

uint64_t OUTLINED_FUNCTION_81@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_82()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_83(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return 0;
}

unint64_t OUTLINED_FUNCTION_85(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_86(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_87()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_88()
{
  uint64_t v1 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  uint64_t v2 = (void *)(v0 + v1[5]);
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = v0 + v1[6];
  uint64_t v4 = type metadata accessor for ModalityXProcessingError(0);
  uint64_t result = __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(unsigned char *)(v0 + v1[7]) = 2;
  return result;
}

void OUTLINED_FUNCTION_93(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_95()
{
  return closure #1 in ModalityXCancelRequest.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_96()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_97()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_98()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_101()
{
  outlined consume of Data?(v2, v3);
  return outlined consume of Data?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_103()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104()
{
  return outlined consume of Data._Representation(v1, v0);
}

uint64_t OUTLINED_FUNCTION_105(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_106(uint64_t result)
{
  unsigned char *v1 = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_107()
{
  return 0;
}

void OUTLINED_FUNCTION_108(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 8) = a1;
  *(unsigned char *)(v1 + 12) = *(unsigned char *)(v2 + a1) & 1;
}

void *OUTLINED_FUNCTION_109()
{
  return malloc(0x68uLL);
}

void *OUTLINED_FUNCTION_110()
{
  return malloc(0x58uLL);
}

uint64_t OUTLINED_FUNCTION_115()
{
  return closure #2 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_116()
{
  return closure #4 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_118()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_119()
{
  return *(void *)(v0 - 112);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_121()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_123()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_125()
{
  *(unsigned char *)(v0 + v1[5]) = 8;
  *(unsigned char *)(v0 + v1[6]) = 8;
  *(unsigned char *)(v0 + v1[7]) = 2;
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

uint64_t OUTLINED_FUNCTION_126()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_127()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_130(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_131()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_132()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_135()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_136()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_137(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_138()
{
  return swift_getEnumCaseMultiPayload();
}

BOOL OUTLINED_FUNCTION_139@<W0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1 + 8) != 0;
}

void OUTLINED_FUNCTION_140(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_141(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_142@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v2 + a1;
  uint64_t result = outlined consume of Data?(*(void *)v4, *(void *)(v4 + 8));
  *(void *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_143(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_144()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_145()
{
  uint64_t v1 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  type metadata accessor for ModalityXASRResult(0);
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_147()
{
  return closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

void OUTLINED_FUNCTION_149()
{
  unsigned char *v0 = 2;
}

uint64_t OUTLINED_FUNCTION_150(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_151()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_152@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_153@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

void OUTLINED_FUNCTION_154(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_155(void *a1)
{
  *a1 = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_156(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
}

uint64_t OUTLINED_FUNCTION_157(uint64_t a1)
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  uint64_t v5 = (void *)(v1 + *(int *)(v2 + 28));
  void *v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (void *)(v1 + *(int *)(v2 + 32));
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_160(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return closure #1 in static Data.== infix(_:_:)(v15, v14, v13, (BOOL *)&a13);
}

uint64_t OUTLINED_FUNCTION_161(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_162(char a1@<W8>)
{
  if (v1) {
    a1 = 0;
  }
  *uint64_t v2 = a1;
}

uint64_t OUTLINED_FUNCTION_163()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_164()
{
  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  outlined consume of Data?(v0, v1);
  return v2;
}

void OUTLINED_FUNCTION_165()
{
  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  JUMPOUT(0x25A2AA200);
}

void OUTLINED_FUNCTION_166(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = v1
                       + ((*(unsigned __int8 *)(a1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a1 + 80));
}

uint64_t OUTLINED_FUNCTION_167()
{
  return 0;
}

void OUTLINED_FUNCTION_168(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)(v1 + a1);
  *uint64_t v2 = 0;
  v2[1] = 0;
}

void OUTLINED_FUNCTION_169(char a1@<W8>)
{
  *(unsigned char *)(v1 + 12) = a1;
}

void OUTLINED_FUNCTION_170(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = 2;
}

uint64_t OUTLINED_FUNCTION_171(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_174()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_175@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_176()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_177()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_178()
{
  return dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_179()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_180()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_181(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v12 - 120) = v11;
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v11, (uint64_t)&a9 - v9, v10);
}

uint64_t OUTLINED_FUNCTION_182()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_183()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_184@<W0>(uint64_t a1@<X8>)
{
  return *(unsigned char *)(v1 + a1) != 2;
}

uint64_t OUTLINED_FUNCTION_185()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_186()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_187()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_188()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_189()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_190()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_191()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_192()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 24));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

void OUTLINED_FUNCTION_193()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 20));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_195()
{
  return outlined consume of Data._Representation(v0, v1);
}

uint64_t OUTLINED_FUNCTION_196()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_197()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t OUTLINED_FUNCTION_198()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_199()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_200()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_201()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_202()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_204()
{
  return closure #3 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_205()
{
  void *v0 = *v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_206()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_207()
{
  return *(void *)(*(void *)(v0 + 72) + *(int *)(v0 + 80)) + *v1;
}

uint64_t OUTLINED_FUNCTION_208()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_209()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t OUTLINED_FUNCTION_211(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_212(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_213(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_214()
{
  uint64_t v4 = *(int *)(v0 + 20);
  uint64_t v5 = (void *)(v2 + v4);
  uint64_t v6 = (uint64_t *)(v1 + v4);
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  void *v5 = v8;
  v5[1] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_215()
{
  uint64_t v3 = *(int *)(v0 + 20);
  uint64_t v4 = (void *)(v2 + v3);
  uint64_t v5 = (void *)(v1 + v3);
  void *v4 = *v5;
  return v5[1];
}

uint64_t OUTLINED_FUNCTION_216(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_218()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_219()
{
  uint64_t v3 = (void *)(v0 + *(int *)(v1 + 20));
  void *v3 = 0;
  v3[1] = 0;
  return type metadata accessor for ModalityXSpeechProfileSourceData(0);
}

uint64_t OUTLINED_FUNCTION_220()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_222(uint64_t a1@<X8>)
{
  *(void *)(v1 - 88) = *(void *)(a1 + 72);
}

void OUTLINED_FUNCTION_223()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 24));
  *uint64_t v2 = 0;
  v2[1] = 0;
  *(unsigned char *)(v0 + *(int *)(v1 + 28)) = 2;
}

uint64_t OUTLINED_FUNCTION_224()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_227(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(int *)(result + 8)) = *(unsigned char *)(result + 12);
  return result;
}

uint64_t OUTLINED_FUNCTION_229()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_230()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_234()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_237()
{
  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_239(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_240(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_241(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 112) = (char *)&a9 - v9;
  return 0;
}

uint64_t OUTLINED_FUNCTION_242(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 128) = (char *)&a9 - v9;
  return 0;
}

uint64_t OUTLINED_FUNCTION_243()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_247@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + a1);
  unint64_t v4 = *(void *)(v1 + a1 + 8);
  return outlined consume of Data?(v3, v4);
}

uint64_t OUTLINED_FUNCTION_248(uint64_t a1)
{
  uint64_t v6 = *(int *)(a1 + 24);
  *(_DWORD *)(v3 + 40) = v6;
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1 + v6, v2, v4);
}

uint64_t OUTLINED_FUNCTION_249()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_250()
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_251()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_253()
{
  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  return v0;
}

uint64_t OUTLINED_FUNCTION_254()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_255()
{
  return outlined init with copy of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_256()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_257()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_258()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_259()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_260()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_261()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_262()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_263()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_264(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
}

uint64_t OUTLINED_FUNCTION_265(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
}

uint64_t OUTLINED_FUNCTION_266(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
}

uint64_t OUTLINED_FUNCTION_268()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_269()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_270()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_271(uint64_t result)
{
  *(_DWORD *)(v1 + 88) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_272(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXBeginRequest(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_276()
{
  return outlined init with copy of ModalityXSessionMetadata();
}

uint64_t OUTLINED_FUNCTION_278()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_279()
{
  return closure #3 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_280()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_281()
{
  return closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_282()
{
  return closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_283()
{
  outlined consume of Data?(v2, v3);
  return outlined consume of Data?(v0, v1);
}

void OUTLINED_FUNCTION_286()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t OUTLINED_FUNCTION_287()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_289()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v0);
}

float OUTLINED_FUNCTION_290()
{
  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_291()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_292()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_293()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_295()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_296(char a1@<W8>)
{
  if (v1) {
    a1 = 0;
  }
  *(unsigned char *)(v2 + 84) = a1;
}

void OUTLINED_FUNCTION_297(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = 3;
}

uint64_t OUTLINED_FUNCTION_298()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_299()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 24));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_300()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_301@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v3 + 40) = a1;
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1 + a1, v2, v4);
}

uint64_t OUTLINED_FUNCTION_302@<X0>(uint64_t a1@<X8>)
{
  void *v1 = a1;
  type metadata accessor for ModalityXAudioFrame(0);
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_303()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_304()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_305()
{
  *(void *)(v3 - 104) = v1;
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_309()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t OUTLINED_FUNCTION_310()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_311()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_312()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload();
}

uint64_t OUTLINED_FUNCTION_313@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)(v2 + a1);
  uint64_t result = v3[1];
  void *v1 = *v3;
  v1[1] = result;
  return result;
}

void OUTLINED_FUNCTION_314()
{
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 24));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_315(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_317()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_318()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_319()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_320()
{
  return malloc(0x30uLL);
}

void OUTLINED_FUNCTION_321(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = 8;
}

uint64_t OUTLINED_FUNCTION_323()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_324()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_325()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_326(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_327(uint64_t result)
{
  *(unsigned char *)(v1 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_328(uint64_t result)
{
  uint64_t v2 = (void *)(v1 + *(int *)(result + 20));
  *uint64_t v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_330()
{
  return type metadata accessor for ModalityXDeviceInfo(0);
}

uint64_t OUTLINED_FUNCTION_331()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_332@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_333()
{
  *(unsigned char *)(v2 + *(int *)(v0 + 24)) = *(unsigned char *)(v1 + *(int *)(v0 + 24));
  return v2;
}

uint64_t OUTLINED_FUNCTION_334(uint64_t a1)
{
  return outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_335()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_337()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_338()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_339()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_344()
{
  return outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v0);
}

uint64_t OUTLINED_FUNCTION_345()
{
  return closure #3 in ModalityXAudioFrame.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_346()
{
  return closure #5 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_347()
{
  return closure #2 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_348()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_349()
{
  return closure #3 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return closure #2 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

uint64_t ModalityXRecognitionCandidate.init()()
{
  return ModalityXRecognitionCandidate.init()();
}

{
  void *v0;
  void *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  OUTLINED_FUNCTION_124();
  uint64_t v4 = v3;
  UnknownStorage.init()();
  uint64_t v5 = OUTLINED_FUNCTION_23_0();
  uint64_t v6 = *(int *)(v2(v5) + 20);
  if (*v1 != -1) {
    swift_once();
  }
  *(void *)(v4 + v6) = *v0;

  return swift_retain();
}

uint64_t type metadata accessor for ModalityXRecognitionCandidate(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionCandidate);
}

uint64_t ModalityXFinalSpeechRecognitionResponse.init()()
{
  return ModalityXRecognitionCandidate.init()();
}

void static ModalityXRecognitionCandidate.== infix(_:_:)()
{
  static ModalityXRecognitionCandidate.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void (*)(void), void (*)(void));
  uint64_t (*v3)(void (*)(void), void (*)(void));
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void);
  void (*v13)(void);
  char v14;
  uint64_t v15;
  void (*v16)(void);

  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_23_0();
  uint64_t v11 = *(int *)(v5(v10) + 20);
  uint64_t v12 = *(void (**)(void))(v1 + v11);
  uint64_t v13 = *(void (**)(void))(v0 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), uint64_t v14 = v3(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    uint64_t v15 = OUTLINED_FUNCTION_38_0();
    ((void (*)(uint64_t))v12)(v15);
    OUTLINED_FUNCTION_46();
    v12();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v16 = *(void (**)(void))(v7 + 8);
    OUTLINED_FUNCTION_132_0();
    v16();
    OUTLINED_FUNCTION_132_0();
    v16();
  }
  OUTLINED_FUNCTION_16();
}

void static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)()
{
  static ModalityXRecognitionCandidate.== infix(_:_:)();
}

uint64_t ModalityXRecognitionToken.tokenText.getter()
{
  return ModalityXRecognitionToken.tokenText.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_159_0();
  uint64_t v2 = v1(v0);
  if (OUTLINED_FUNCTION_50(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXRecognitionToken.tokenText : ModalityXRecognitionToken(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXRecognitionToken.tokenText.setter(v1, v2);
}

uint64_t ModalityXRecognitionToken.tokenText.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXRecognitionToken.tokenText.setter(a1, a2);
}

{
  void *v2;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t result;

  uint64_t v5 = OUTLINED_FUNCTION_159_0();
  v6(v5);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXRecognitionToken.tokenText.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_184_0(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXRecognitionToken.hasTokenText.getter()
{
  return ModalityXRecognitionToken.hasTokenText.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_159_0();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_139(*(int *)(v2 + 20));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearTokenText()()
{
}

uint64_t ModalityXRecognitionToken.startMilliSeconds.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.startMilliSeconds.setter()
{
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_167();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_95_0(*(int *)(v2 + 24));
}

uint64_t (*ModalityXRecognitionToken.startMilliSeconds.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_97_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 24));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXRecognitionToken.hasStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearStartMilliSeconds()()
{
}

uint64_t ModalityXRecognitionToken.endMilliSeconds.getter()
{
  return ModalityXRecognitionToken.endMilliSeconds.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_32_0(*(int *)(v2 + 28));
}

void ModalityXRecognitionToken.endMilliSeconds.setter()
{
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_95_0(*(int *)(v2 + 28));
}

uint64_t (*ModalityXRecognitionToken.endMilliSeconds.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_97_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 28));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXRecognitionToken.hasEndMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasEndMilliSeconds.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_53_0(*(int *)(v2 + 28));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearEndMilliSeconds()()
{
}

uint64_t ModalityXRecognitionToken.silenceStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.silenceStartMilliSeconds.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_32_0(*(int *)(v2 + 32));
}

void ModalityXRecognitionToken.silenceStartMilliSeconds.setter()
{
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  OUTLINED_FUNCTION_95_0(*(int *)(v2 + 32));
}

uint64_t (*ModalityXRecognitionToken.silenceStartMilliSeconds.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_97_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 32));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter();
}

{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  uint64_t v2 = v1(v0);
  return OUTLINED_FUNCTION_53_0(*(int *)(v2 + 32));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearSilenceStartMilliSeconds()()
{
}

uint64_t ModalityXRecognitionToken.confidence.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_32_0(*(int *)(v0 + 36));
}

void ModalityXRecognitionToken.confidence.setter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_95_0(*(int *)(v0 + 36));
}

uint64_t (*ModalityXRecognitionToken.confidence.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_97_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 36));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXRecognitionToken.hasConfidence.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_53_0(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearConfidence()()
{
  uint64_t v1 = type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_30_0(v0 + *(int *)(v1 + 36));
}

uint64_t ModalityXRecognitionToken.addSpaceAfter.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionToken(0) + 40)) & 1;
}

uint64_t ModalityXRecognitionToken.addSpaceAfter.setter(char a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionToken(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*ModalityXRecognitionToken.addSpaceAfter.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_97_0(a1);
  OUTLINED_FUNCTION_108(*(int *)(v1 + 40));
  return ModalityXCancelRequest.reason.modify;
}

BOOL ModalityXRecognitionToken.hasAddSpaceAfter.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearAddSpaceAfter()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionToken(0) + 40)) = 2;
}

uint64_t ModalityXRecognitionToken.phoneSeq.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 44))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXRecognitionToken.phoneSeq : ModalityXRecognitionToken(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXRecognitionToken.phoneSeq.setter(v1, v2);
}

uint64_t ModalityXRecognitionToken.phoneSeq.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ModalityXRecognitionToken(0);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXRecognitionToken.phoneSeq.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_184_0(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 44))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXRecognitionToken.hasPhoneSeq.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 44));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearPhoneSeq()()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t ModalityXRecognitionToken.ipaPhoneSeq.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 48))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXRecognitionToken.ipaPhoneSeq : ModalityXRecognitionToken(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXRecognitionToken.ipaPhoneSeq.setter(v1, v2);
}

uint64_t ModalityXRecognitionToken.ipaPhoneSeq.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ModalityXRecognitionToken(0);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXRecognitionToken.ipaPhoneSeq.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_184_0(a1);
  if (OUTLINED_FUNCTION_31(*(int *)(v2 + 48))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXRecognitionToken.hasIpaPhoneSeq.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 48));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearIpaPhoneSeq()()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t (*ModalityXRecognitionToken.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionToken.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXRecognitionToken(0);
  uint64_t v3 = (void *)(a1 + *(int *)(v2 + 20));
  void *v3 = 0;
  v3[1] = 0;
  OUTLINED_FUNCTION_30_0(a1 + *(int *)(v2 + 24));
  uint64_t v5 = OUTLINED_FUNCTION_107_0(v4);
  uint64_t v6 = a1 + *(int *)(v5 + 36);
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = v7;
  OUTLINED_FUNCTION_220_0(*(int *)(v5 + 40));
  OUTLINED_FUNCTION_86(*(int *)(v8 + 44));
  OUTLINED_FUNCTION_86(*(int *)(v9 + 48));
}

uint64_t (*ModalityXRecognitionPhraseTokens.tokens.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionPhraseTokens.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_176();
  v1(v0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_67();

  return v3(v2);
}

uint64_t ModalityXRecognitionPhraseTokens.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_167();
  v1(v0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_52();

  return v3(v2);
}

uint64_t (*ModalityXRecognitionPhraseTokens.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXRecognitionPhraseTokens(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionPhraseTokens.init()@<X0>(void *a1@<X8>)
{
  return ModalityXRecognitionPhraseTokens.init()((void (*)(void))type metadata accessor for ModalityXRecognitionPhraseTokens, a1);
}

uint64_t (*ModalityXRecognitionPhraseTokensAlternatives.tokPhrases.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0) + 24)) & 1;
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_167();
  uint64_t result = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v2);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v0;
  return result;
}

uint64_t (*ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v1);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 24));
  return ModalityXCancelRequest.reason.modify;
}

BOOL ModalityXRecognitionPhraseTokensAlternatives.hasHasUnsuggestedAlternatives_p.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXRecognitionPhraseTokensAlternatives.clearHasUnsuggestedAlternatives_p()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0) + 24)) = 2;
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXRecognitionPhraseTokensAlternatives.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionPhraseTokensAlternatives.init()(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v1 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  UnknownStorage.init()();
  OUTLINED_FUNCTION_220_0(*(int *)(v1 + 24));
}

uint64_t (*ModalityXRecognitionSausage.positionalTokPhraseAlt.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionSausage.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionSausage.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXRecognitionSausage.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXRecognitionSausage(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionSausage.init()@<X0>(void *a1@<X8>)
{
  return ModalityXRecognitionPhraseTokens.init()((void (*)(void))type metadata accessor for ModalityXRecognitionSausage, a1);
}

uint64_t ModalityXRecognitionPhraseTokens.init()@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return UnknownStorage.init()();
}

uint64_t (*ModalityXSetAlternateRecognitionSausage.positionalTokPhraseAlt.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSetAlternateRecognitionSausage.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXSetAlternateRecognitionSausage.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXSetAlternateRecognitionSausage.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXSetAlternateRecognitionSausage(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSetAlternateRecognitionSausage.init()@<X0>(void *a1@<X8>)
{
  return ModalityXRecognitionPhraseTokens.init()((void (*)(void))type metadata accessor for ModalityXSetAlternateRecognitionSausage, a1);
}

uint64_t (*ModalityXRecognitionChoice.alternativeIndex.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionChoice.confidence.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t ModalityXRecognitionToken.startMilliSeconds.getter(uint64_t (*a1)(void))
{
  uint64_t v1 = a1(0);
  return OUTLINED_FUNCTION_32_0(*(int *)(v1 + 24));
}

void ModalityXRecognitionChoice.confidence.setter()
{
}

uint64_t (*ModalityXRecognitionChoice.confidence.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXRecognitionChoice(v1);
  OUTLINED_FUNCTION_4_1(*(int *)(v2 + 24));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXRecognitionChoice.hasConfidence.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionChoice);
}

BOOL ModalityXRecognitionToken.hasStartMilliSeconds.getter(uint64_t (*a1)(void))
{
  uint64_t v1 = a1(0);
  return OUTLINED_FUNCTION_53_0(*(int *)(v1 + 24));
}

Swift::Void __swiftcall ModalityXRecognitionChoice.clearConfidence()()
{
}

void ModalityXRecognitionToken.clearStartMilliSeconds()(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  OUTLINED_FUNCTION_30_0(v1 + *(int *)(v2 + 24));
}

uint64_t ModalityXRecognitionChoice.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionChoice.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXRecognitionChoice.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXRecognitionChoice(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionChoice.init()(void *a1@<X8>)
{
}

uint64_t (*ModalityXRepeatedItnAlignment.itnAlignment.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRepeatedItnAlignment.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRepeatedItnAlignment.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXRepeatedItnAlignment.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXRepeatedItnAlignment(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRepeatedItnAlignment.init()@<X0>(void *a1@<X8>)
{
  return ModalityXRecognitionPhraseTokens.init()((void (*)(void))type metadata accessor for ModalityXRepeatedItnAlignment, a1);
}

uint64_t (*ModalityXChoiceAlignment.postItnChoiceIndices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t (*ModalityXChoiceAlignment.preItnTokenToPostItnCharAlignments.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXChoiceAlignment.unknownFields.getter()
{
  return ModalityXChoiceAlignment.unknownFields.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_176();
  v1(v0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_67();

  return v3(v2);
}

uint64_t ModalityXChoiceAlignment.unknownFields.setter()
{
  return ModalityXChoiceAlignment.unknownFields.setter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_167();
  v1(v0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_52();

  return v3(v2);
}

uint64_t (*ModalityXChoiceAlignment.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXChoiceAlignment(v0);
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXChoiceAlignment.init()@<X0>(void *a1@<X8>)
{
  return ModalityXChoiceAlignment.init()((void (*)(void))type metadata accessor for ModalityXChoiceAlignment, a1);
}

uint64_t ModalityXRecognitionResult.preItn.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_167_0(*(int *)(v3 + 36));
  uint64_t v4 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_9(v0, 1, v4);
  if (!v5) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  OUTLINED_FUNCTION_169_0(MEMORY[0x263F8EE78]);
  return outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
}

uint64_t ModalityXRecognitionResult.preItn.setter()
{
  uint64_t v1 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 36), &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined init with take of ModalityXRecognitionSausage();
  type metadata accessor for ModalityXRecognitionSausage(0);
  uint64_t v2 = OUTLINED_FUNCTION_135_0();

  return __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

void ModalityXRecognitionResult.preItn.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = malloc(0x30uLL);
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v0[4] = v8;
  uint64_t v9 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_244_0(*(int *)(v9 + 36));
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v10)
  {
    *uint64_t v8 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_194_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionResult.preItn.modify();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_38();
  uint64_t v2 = v1;
  uint64_t v3 = *(int *)(*(void *)v0 + 40);
  uint64_t v4 = *(void **)(*(void *)v0 + 24);
  uint64_t v5 = *(void **)(*(void *)v0 + 32);
  uint64_t v6 = *(void **)(*(void *)v0 + 8);
  size_t v7 = **(void **)v0 + v3;
  if (v8)
  {
    outlined init with copy of ModalityXRecognitionSausage();
    outlined destroy of ModalityXRecognitionSausage?(v7, v2);
    outlined init with take of ModalityXRecognitionSausage();
    OUTLINED_FUNCTION_234_0();
    outlined destroy of ModalityXRecognitionSausage();
  }
  else
  {
    outlined destroy of ModalityXRecognitionSausage?(**(void **)v0 + v3, v1);
    outlined init with take of ModalityXRecognitionSausage();
    OUTLINED_FUNCTION_234_0();
  }
  free(v5);
  free(v4);
  free(v6);
  OUTLINED_FUNCTION_37();
  free(v9);
}

uint64_t ModalityXRecognitionResult.hasPreItn.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_166_0(*(int *)(v3 + 36));
  uint64_t v4 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_51_0(v4);
  return v0;
}

Swift::Void __swiftcall ModalityXRecognitionResult.clearPreItn()()
{
  uint64_t v1 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 36), &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  type metadata accessor for ModalityXRecognitionSausage(0);
  uint64_t v2 = OUTLINED_FUNCTION_83_0();

  __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

uint64_t ModalityXRecognitionResult.postItn.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_167_0(*(int *)(v3 + 40));
  uint64_t v4 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_9(v0, 1, v4);
  if (!v5) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  OUTLINED_FUNCTION_169_0(MEMORY[0x263F8EE78]);
  return outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
}

uint64_t key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)&v12 - v9;
  outlined init with copy of ModalityXRecognitionSausage();
  return a7(v10);
}

uint64_t ModalityXRecognitionResult.postItn.setter()
{
  uint64_t v1 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 40), &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined init with take of ModalityXRecognitionSausage();
  type metadata accessor for ModalityXRecognitionSausage(0);
  uint64_t v2 = OUTLINED_FUNCTION_135_0();

  return __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

void ModalityXRecognitionResult.postItn.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = malloc(0x30uLL);
  OUTLINED_FUNCTION_26(v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  v0[1] = v4;
  uint64_t v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  v0[2] = v5;
  OUTLINED_FUNCTION_2_0();
  size_t v7 = *(void *)(v6 + 64);
  v0[3] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v0[4] = v8;
  uint64_t v9 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_244_0(*(int *)(v9 + 40));
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v10)
  {
    *uint64_t v8 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_194_0();
  }
  OUTLINED_FUNCTION_37();
}

uint64_t ModalityXRecognitionResult.hasPostItn.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_166_0(*(int *)(v3 + 40));
  uint64_t v4 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_51_0(v4);
  return v0;
}

Swift::Void __swiftcall ModalityXRecognitionResult.clearPostItn()()
{
  uint64_t v1 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 40), &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  type metadata accessor for ModalityXRecognitionSausage(0);
  uint64_t v2 = OUTLINED_FUNCTION_83_0();

  __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

uint64_t (*ModalityXRecognitionResult.preItnNbestChoices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t (*ModalityXRecognitionResult.postItnNbestChoices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.choiceAlignments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXRecognitionResult.choiceAlignments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ModalityXRecognitionResult.choiceAlignments.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.unknownFields.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_176();
  type metadata accessor for ModalityXRecognitionResult(v0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_67();

  return v2(v1);
}

uint64_t ModalityXRecognitionResult.unknownFields.setter()
{
  type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_52();

  return v1(v0);
}

uint64_t (*ModalityXRecognitionResult.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  *a1 = MEMORY[0x263F8EE78];
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = v2;
  uint64_t v3 = type metadata accessor for ModalityXRecognitionResult(0);
  UnknownStorage.init()();
  uint64_t v4 = (uint64_t)a1 + *(int *)(v3 + 36);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_165_0(v4);
  uint64_t v6 = (uint64_t)a1 + *(int *)(v3 + 40);

  return __swift_storeEnumTagSinglePayload(v6, 1, 1, v5);
}

uint64_t ModalityXLatnnMitigatorResult.processed.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 20)) & 1;
}

uint64_t ModalityXLatnnMitigatorResult.processed.setter()
{
  uint64_t v2 = OUTLINED_FUNCTION_167();
  uint64_t result = type metadata accessor for ModalityXLatnnMitigatorResult(v2);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t (*ModalityXLatnnMitigatorResult.processed.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_155(a1);
  uint64_t v2 = type metadata accessor for ModalityXLatnnMitigatorResult(v1);
  OUTLINED_FUNCTION_108(*(int *)(v2 + 20));
  return ModalityXCancelRequest.reason.modify;
}

BOOL ModalityXLatnnMitigatorResult.hasProcessed.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return OUTLINED_FUNCTION_184(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearProcessed()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 20)) = 2;
}

uint64_t ModalityXLatnnMitigatorResult.version.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 24))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXLatnnMitigatorResult.version : ModalityXLatnnMitigatorResult(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXLatnnMitigatorResult.version.setter(v1, v2);
}

uint64_t ModalityXLatnnMitigatorResult.version.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXLatnnMitigatorResult.version.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXLatnnMitigatorResult(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 24))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXLatnnMitigatorResult.hasVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearVersion()()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

double ModalityXLatnnMitigatorResult.threshold.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 28));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXLatnnMitigatorResult.threshold.setter(double a1)
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_106_0();
  *(double *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = 0;
}

uint64_t (*ModalityXLatnnMitigatorResult.threshold.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  double v4 = OUTLINED_FUNCTION_54_0(v3);
  if (!v6) {
    double v4 = v5;
  }
  *(double *)a1 = v4;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXLatnnMitigatorResult.hasThreshold.getter()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_106_0();
  return OUTLINED_FUNCTION_91_0(*(unsigned char *)(v0 + 8));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearThreshold()()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_196_0(v0);
}

double ModalityXLatnnMitigatorResult.score.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 32));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXLatnnMitigatorResult.score.setter(double a1)
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_105_0();
  *(double *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = 0;
}

uint64_t (*ModalityXLatnnMitigatorResult.score.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  double v4 = OUTLINED_FUNCTION_54_0(v3);
  if (!v6) {
    double v4 = v5;
  }
  *(double *)a1 = v4;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

uint64_t ModalityXLatnnMitigatorResult.threshold.modify(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8) + *(int *)(result + 16);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

BOOL ModalityXLatnnMitigatorResult.hasScore.getter()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_105_0();
  return OUTLINED_FUNCTION_91_0(*(unsigned char *)(v0 + 8));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearScore()()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_196_0(v0);
}

uint64_t (*ModalityXLatnnMitigatorResult.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXLatnnMitigatorResult.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_220_0(*(int *)(v2 + 20));
  OUTLINED_FUNCTION_86(*(int *)(v3 + 24));
  OUTLINED_FUNCTION_196_0(a1 + *(int *)(v4 + 28));
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = v7;
}

uint64_t ModalityXRecognitionCandidate.speechID.getter()
{
  return ModalityXRecognitionCandidate.speechID.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 24)) {
    OUTLINED_FUNCTION_239_0();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

void key path setter for ModalityXRecognitionCandidate.speechID : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.speechID.setter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_114_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  char v10 = OUTLINED_FUNCTION_23_0();
  v11(v10);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    uint64_t v12 = OUTLINED_FUNCTION_35_0();
    v5(v12);
    OUTLINED_FUNCTION_29();
    uint64_t v13 = OUTLINED_FUNCTION_263();
    uint64_t v14 = v3(v13);
    OUTLINED_FUNCTION_240(v14);
  }
  uint64_t v15 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v15 + 16) = v9;
  *(void *)(v15 + 24) = v7;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
}

uint64_t ModalityXRecognitionCandidate.speechID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_45_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 24)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.speechID.modify()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_49_0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v6 = OUTLINED_FUNCTION_25_0();
      v1(v6);
      OUTLINED_FUNCTION_29();
      char v7 = OUTLINED_FUNCTION_110_0();
      uint64_t v8 = v3(v7);
      OUTLINED_FUNCTION_239(v8);
    }
    uint64_t v9 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v9 + 16) = v4;
    *(void *)(v9 + 24) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v10 = OUTLINED_FUNCTION_25_0();
      v1(v10);
      OUTLINED_FUNCTION_29();
      uint64_t v11 = OUTLINED_FUNCTION_110_0();
      uint64_t v12 = v3(v11);
      OUTLINED_FUNCTION_239(v12);
    }
    uint64_t v13 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v13 + 16) = v4;
    *(void *)(v13 + 24) = v2;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v14);
}

BOOL ModalityXRecognitionCandidate.hasSpeechID.getter()
{
  return ModalityXRecognitionCandidate.hasSpeechID.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_103_0(*(void *)(v3 + 24));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSpeechID()()
{
}

uint64_t ModalityXRecognitionCandidate.sessionID.getter()
{
  return ModalityXRecognitionCandidate.sessionID.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 40)) {
    OUTLINED_FUNCTION_239_0();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

void key path setter for ModalityXRecognitionCandidate.sessionID : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.sessionID.setter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_114_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  char v10 = OUTLINED_FUNCTION_23_0();
  v11(v10);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    uint64_t v12 = OUTLINED_FUNCTION_35_0();
    v5(v12);
    OUTLINED_FUNCTION_29();
    uint64_t v13 = OUTLINED_FUNCTION_263();
    uint64_t v14 = v3(v13);
    OUTLINED_FUNCTION_240(v14);
  }
  uint64_t v15 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v15 + 32) = v9;
  *(void *)(v15 + 40) = v7;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
}

uint64_t ModalityXRecognitionCandidate.sessionID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_45_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 40)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.sessionID.modify()
{
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_49_0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v6 = OUTLINED_FUNCTION_25_0();
      v1(v6);
      OUTLINED_FUNCTION_29();
      char v7 = OUTLINED_FUNCTION_110_0();
      uint64_t v8 = v3(v7);
      OUTLINED_FUNCTION_239(v8);
    }
    uint64_t v9 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v9 + 32) = v4;
    *(void *)(v9 + 40) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v10 = OUTLINED_FUNCTION_25_0();
      v1(v10);
      OUTLINED_FUNCTION_29();
      uint64_t v11 = OUTLINED_FUNCTION_110_0();
      uint64_t v12 = v3(v11);
      OUTLINED_FUNCTION_239(v12);
    }
    uint64_t v13 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v13 + 32) = v4;
    *(void *)(v13 + 40) = v2;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v14);
}

BOOL ModalityXRecognitionCandidate.hasSessionID.getter()
{
  return ModalityXRecognitionCandidate.hasSessionID.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_103_0(*(void *)(v3 + 40));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSessionID()()
{
}

uint64_t ModalityXRecognitionCandidate.returnCode.getter()
{
  return ModalityXRecognitionCandidate.returnCode.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  if (*(unsigned char *)(v3 + 52)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v3 + 48);
  }
}

void ModalityXRecognitionCandidate.returnCode.setter()
{
  ModalityXRecognitionCandidate.returnCode.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  int v6;
  int v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v8 = OUTLINED_FUNCTION_23_0();
  v9(v8);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    char v10 = OUTLINED_FUNCTION_35_0();
    v5(v10);
    OUTLINED_FUNCTION_29();
    uint64_t v11 = OUTLINED_FUNCTION_220();
    uint64_t v12 = v3(v11);
    OUTLINED_FUNCTION_139_0(v12);
  }
  uint64_t v13 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(_DWORD *)(v13 + 48) = v7;
  *(unsigned char *)(v13 + 52) = 0;
  OUTLINED_FUNCTION_128_0();
}

void (*ModalityXRecognitionCandidate.returnCode.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  *((_DWORD *)v2 + 21) = *(_DWORD *)(type metadata accessor for ModalityXRecognitionCandidate(0) + 20);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_188_0();
  return ModalityXRecognitionCandidate.returnCode.modify;
}

void ModalityXRecognitionCandidate.returnCode.modify()
{
  ModalityXRecognitionCandidate.returnCode.modify();
}

{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  char v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = *v6;
  uint64_t v8 = *(_DWORD *)(*v6 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v5)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    char v10 = *(int *)(v7 + 84);
    uint64_t v11 = *(void *)(v7 + 72);
    uint64_t v12 = OUTLINED_FUNCTION_35_0();
    v3(v12);
    OUTLINED_FUNCTION_29();
    uint64_t v13 = swift_retain();
    *(void *)(v11 + v10) = v1(v13);
    swift_release();
  }
LABEL_4:
  uint64_t v14 = *(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 84));
  OUTLINED_FUNCTION_34();
  *(_DWORD *)(v14 + 48) = v8;
  *(unsigned char *)(v14 + 52) = 0;
  OUTLINED_FUNCTION_37();
  free(v15);
}

BOOL ModalityXRecognitionCandidate.hasReturnCode.getter()
{
  return ModalityXRecognitionCandidate.hasReturnCode.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_91_0(*(unsigned char *)(v3 + 52));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearReturnCode()()
{
}

uint64_t ModalityXRecognitionCandidate.returnStr.getter()
{
  return ModalityXRecognitionCandidate.returnStr.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 64)) {
    OUTLINED_FUNCTION_239_0();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

void key path setter for ModalityXRecognitionCandidate.returnStr : ModalityXRecognitionCandidate()
{
  ModalityXRecognitionCandidate.returnStr.setter();
}

void ModalityXRecognitionCandidate.returnStr.setter()
{
  ModalityXRecognitionCandidate.returnStr.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_114_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = v8;
  char v10 = OUTLINED_FUNCTION_23_0();
  v11(v10);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    uint64_t v12 = OUTLINED_FUNCTION_35_0();
    v5(v12);
    OUTLINED_FUNCTION_29();
    uint64_t v13 = OUTLINED_FUNCTION_263();
    uint64_t v14 = v3(v13);
    OUTLINED_FUNCTION_240(v14);
  }
  uint64_t v15 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v15 + 56) = v9;
  *(void *)(v15 + 64) = v7;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
}

uint64_t ModalityXRecognitionCandidate.returnStr.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_45_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 64)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.returnStr.modify()
{
  ModalityXRecognitionCandidate.returnStr.modify();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_49_0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v6 = OUTLINED_FUNCTION_25_0();
      v1(v6);
      OUTLINED_FUNCTION_29();
      char v7 = OUTLINED_FUNCTION_110_0();
      uint64_t v8 = v3(v7);
      OUTLINED_FUNCTION_239(v8);
    }
    uint64_t v9 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v9 + 56) = v4;
    *(void *)(v9 + 64) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v10 = OUTLINED_FUNCTION_25_0();
      v1(v10);
      OUTLINED_FUNCTION_29();
      uint64_t v11 = OUTLINED_FUNCTION_110_0();
      uint64_t v12 = v3(v11);
      OUTLINED_FUNCTION_239(v12);
    }
    uint64_t v13 = *(void *)(*(void *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_34();
    *(void *)(v13 + 56) = v4;
    *(void *)(v13 + 64) = v2;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v14);
}

BOOL ModalityXRecognitionCandidate.hasReturnStr.getter()
{
  return ModalityXRecognitionCandidate.hasReturnStr.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  uint64_t v1 = OUTLINED_FUNCTION_23_0();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2(v1) + 20));
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_103_0(*(void *)(v3 + 64));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearReturnStr()()
{
}

uint64_t ModalityXRecognitionCandidate.recognitionResult.getter()
{
  return ModalityXRecognitionCandidate.recognitionResult.getter();
}

{
  void *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_204_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v1(v6);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_179_0();
  char v7 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_9((uint64_t)v5, 1, v7);
  if (!v8) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  void *v0 = MEMORY[0x263F8EE78];
  v0[1] = v9;
  v0[2] = v9;
  v0[3] = v9;
  UnknownStorage.init()();
  char v10 = (uint64_t)v0 + *(int *)(v7 + 36);
  type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_165_0(v10);
  OUTLINED_FUNCTION_165_0((uint64_t)v0 + *(int *)(v7 + 40));
  return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
}

void ModalityXRecognitionCandidate.recognitionResult.setter()
{
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void v19[4];

  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v7 = __swift_instantiateConcreteTypeFromMangledName(v5);
  uint64_t v8 = OUTLINED_FUNCTION_7_0(v7);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v19 - v12;
  uint64_t v14 = *(int *)(type metadata accessor for ModalityXRecognitionCandidate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
    OUTLINED_FUNCTION_29();
    v19[0] = v6;
    uint64_t v15 = swift_retain();
    uint64_t v6 = (uint64_t *)v19[0];
    *(void *)(v0 + v14) = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v15);
    swift_release();
  }
  uint64_t v16 = *(void *)(v0 + v14);
  outlined init with take of ModalityXRecognitionSausage();
  char v17 = v4(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
  outlined init with take of ModalityXRecognitionResult?((uint64_t)v13, (uint64_t)v11, v6);
  char v18 = v16 + *v2;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of ModalityXRecognitionResult?((uint64_t)v11, v18, v6);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_16();
}

void ModalityXRecognitionCandidate.recognitionResult.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_2_0();
  char v7 = malloc(*(void *)(v6 + 64));
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v8)
  {
    OUTLINED_FUNCTION_227_0(MEMORY[0x263F8EE78]);
    OUTLINED_FUNCTION_52_0();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

{
  uint64_t v0;
  void (*v1)(void *);
  void (*v2)(void *);
  void *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_38();
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(*(void *)v0 + 40);
  uint64_t v4 = *(void **)(*(void *)v0 + 48);
  uint64_t v5 = *(void **)(*(void *)v0 + 32);
  if (v6)
  {
    OUTLINED_FUNCTION_118();
    outlined init with copy of ModalityXRecognitionSausage();
    v2(v3);
    outlined destroy of ModalityXRecognitionSausage();
  }
  else
  {
    v1(*(void **)(*(void *)v0 + 48));
  }
  free(v4);
  free(v3);
  free(v5);
  OUTLINED_FUNCTION_37();
  free(v7);
}

BOOL ModalityXRecognitionCandidate.hasRecognitionResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, type metadata accessor for ModalityXRecognitionResult);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearRecognitionResult()()
{
}

uint64_t ModalityXRecognitionCandidate.resultID.getter()
{
  return ModalityXRecognitionCandidate.resultID.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  uint64_t v2 = OUTLINED_FUNCTION_217_0();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v4 + 8)) {
    OUTLINED_FUNCTION_239_0();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

void key path setter for ModalityXRecognitionCandidate.resultID : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.resultID.setter()
{
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  void (*v5)(void);
  void (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  void *v14;

  OUTLINED_FUNCTION_114_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  char v10 = v9;
  uint64_t v12 = *(int *)(v11(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v6(0);
    OUTLINED_FUNCTION_29();
    uint64_t v13 = swift_retain();
    *(void *)(v0 + v12) = v4(v13);
    swift_release();
  }
  uint64_t v14 = (void *)(*(void *)(v0 + v12) + *v2);
  OUTLINED_FUNCTION_34();
  *uint64_t v14 = v10;
  v14[1] = v8;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_0();
}

uint64_t ModalityXRecognitionCandidate.resultID.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_46_0((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.resultID.modify()
{
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = *v7;
  uint64_t v9 = *(void *)(*v7 + 72);
  char v10 = *(void *)(*v7 + 80);
  uint64_t v11 = *(void *)(*v7 + 88);
  if (v12)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = OUTLINED_FUNCTION_197_0();
      v6(v13);
      OUTLINED_FUNCTION_29();
      uint64_t v14 = swift_retain();
      *(void *)(v0 + v11) = v4(v14);
      swift_release();
    }
    uint64_t v15 = (void *)(*(void *)(*(void *)(v8 + 88) + *(int *)(v8 + 96)) + *v2);
    OUTLINED_FUNCTION_34();
    *uint64_t v15 = v9;
    v15[1] = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v16 = OUTLINED_FUNCTION_197_0();
      v6(v16);
      OUTLINED_FUNCTION_29();
      char v17 = swift_retain();
      *(void *)(v0 + v11) = v4(v17);
      swift_release();
    }
    char v18 = (void *)(*(void *)(*(void *)(v8 + 88) + *(int *)(v8 + 96)) + *v2);
    OUTLINED_FUNCTION_34();
    char *v18 = v9;
    v18[1] = v10;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16();
  free(v19);
}

BOOL ModalityXRecognitionCandidate.hasResultID.getter()
{
  return ModalityXRecognitionCandidate.hasResultID.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  uint64_t v2 = OUTLINED_FUNCTION_217_0();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0;
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_103_0(*(void *)(v4 + 8));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearResultID()()
{
}

double ModalityXRecognitionCandidate.snr.getter()
{
  return ModalityXRecognitionCandidate.snr.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  double result;
  double v3;
  char v4;

  uint64_t v0 = OUTLINED_FUNCTION_116_0();
  v1(v0);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_108_0();
  if (!v4) {
    return v3;
  }
  return result;
}

uint64_t ModalityXRecognitionCandidate.snr.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter((void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, (void (*)(void))type metadata accessor for ModalityXRecognitionCandidate._StorageClass, ModalityXRecognitionCandidate._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr, a1);
}

void (*ModalityXRecognitionCandidate.snr.modify())()
{
  uint64_t v1 = malloc(0x60uLL);
  OUTLINED_FUNCTION_173_0((uint64_t)v1);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_108_0();
  if (!v4) {
    double v2 = v3;
  }
  *(double *)(v0 + 72) = v2;
  return ModalityXRecognitionCandidate.snr.modify;
}

void ModalityXRecognitionCandidate.snr.modify()
{
}

{
  uint64_t v0;
  void (*v1)(void);
  void *v2;
  uint64_t (*v3)(uint64_t);
  char v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_145_0();
  uint64_t v6 = *(void *)(v5 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v4)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v1(0);
    OUTLINED_FUNCTION_29();
    char v8 = OUTLINED_FUNCTION_110_0();
    uint64_t v9 = v3(v8);
    OUTLINED_FUNCTION_239(v9);
  }
LABEL_4:
  char v10 = *(void *)(*(void *)(v0 + 80) + *(int *)(v0 + 88)) + *v2;
  OUTLINED_FUNCTION_34();
  *(void *)char v10 = v6;
  *(unsigned char *)(v10 + 8) = 0;
  OUTLINED_FUNCTION_16();
  free(v11);
}

BOOL ModalityXRecognitionCandidate.hasSnr.getter()
{
  return ModalityXRecognitionCandidate.hasSnr.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  double v2 = OUTLINED_FUNCTION_116_0();
  char v4 = *(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0;
  OUTLINED_FUNCTION_22();
  return OUTLINED_FUNCTION_91_0(*(unsigned char *)(v4 + 8));
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSnr()()
{
}

uint64_t ModalityXRecognitionCandidate.fingerprintDetection.getter@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXRecognitionCandidate.fingerprintDetection.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection, a1);
}

void key path setter for ModalityXRecognitionCandidate.fingerprintDetection : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.fingerprintDetection.setter()
{
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  void (*v6)(void);
  void (*v7)(void);
  char *v8;
  char v9;
  void (*v10)(void);
  uint64_t v11;
  unsigned char *v12;

  OUTLINED_FUNCTION_114_0();
  double v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v9 = *v8;
  v10(0);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    v7(0);
    OUTLINED_FUNCTION_29();
    uint64_t v11 = OUTLINED_FUNCTION_220();
    *(void *)(v0 + v1) = v5(v11);
    swift_release();
  }
  uint64_t v12 = (unsigned char *)(*(void *)(v0 + v1) + *v3);
  OUTLINED_FUNCTION_34();
  *uint64_t v12 = v9;
  OUTLINED_FUNCTION_111_0();
}

void (*ModalityXRecognitionCandidate.fingerprintDetection.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_174_0((uint64_t)v0);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_118_0();
  return ModalityXRecognitionCandidate.fingerprintDetection.modify;
}

void ModalityXRecognitionCandidate.fingerprintDetection.modify()
{
}

{
  uint64_t v0;
  void (*v1)(void);
  void *v2;
  uint64_t (*v3)(uint64_t);
  char v4;
  uint64_t v5;
  char v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  unsigned char *v10;
  void *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_145_0();
  uint64_t v6 = *(unsigned char *)(v5 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v4)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v1(0);
    OUTLINED_FUNCTION_29();
    char v8 = OUTLINED_FUNCTION_110_0();
    uint64_t v9 = v3(v8);
    OUTLINED_FUNCTION_239(v9);
  }
LABEL_4:
  char v10 = (unsigned char *)(*(void *)(*(void *)(v0 + 72) + *(int *)(v0 + 80)) + *v2);
  OUTLINED_FUNCTION_34();
  *char v10 = v6;
  OUTLINED_FUNCTION_16();
  free(v11);
}

BOOL ModalityXRecognitionCandidate.hasFingerprintDetection.getter()
{
  return ModalityXRecognitionCandidate.hasFingerprintDetection.getter();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  unsigned __int8 *v4;

  double v2 = OUTLINED_FUNCTION_116_0();
  char v4 = (unsigned __int8 *)(*(void *)(v1 + *(int *)(v3(v2) + 20)) + *v0);
  OUTLINED_FUNCTION_22();
  return *v4 != 4;
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearFingerprintDetection()()
{
}

uint64_t ModalityXRecognitionCandidate.audioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.audioAnalytics.getter();
}

{
  void *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_204_0();
  double v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  double v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v1(v6);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_179_0();
  char v7 = type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_9((uint64_t)v5, 1, v7);
  if (!v8) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  void *v0 = MEMORY[0x263F8EE78];
  v0[1] = v9;
  UnknownStorage.init()();
  return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
}

void ModalityXRecognitionCandidate.audioAnalytics.setter()
{
}

uint64_t ModalityXAudioAnalytics.init()@<X0>(void *a1@<X8>)
{
  return ModalityXChoiceAlignment.init()((void (*)(void))type metadata accessor for ModalityXAudioAnalytics, a1);
}

uint64_t ModalityXChoiceAlignment.init()@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v3 = MEMORY[0x263F8EE78];
  *a2 = MEMORY[0x263F8EE78];
  a2[1] = v3;
  a1(0);
  return UnknownStorage.init()();
}

void ModalityXRecognitionCandidate.audioAnalytics.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_7_0(v2);
  char v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_2_0();
  char v7 = malloc(*(void *)(v6 + 64));
  char v8 = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  *(void *)(v0 + 48) = v8;
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_69_0();
  uint64_t v10 = v9
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXRecognitionSausage?(v10, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v11)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    *char v8 = MEMORY[0x263F8EE78];
    v8[1] = v12;
    UnknownStorage.init()();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXRecognitionCandidate.hasAudioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, type metadata accessor for ModalityXAudioAnalytics);
}

BOOL ModalityXRecognitionCandidate.hasRecognitionResult.getter(uint64_t *a1, void (*a2)(void), void *a3, uint64_t (*a4)(void))
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v10 = OUTLINED_FUNCTION_7_0(v9);
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_59();
  a2(0);
  OUTLINED_FUNCTION_69_0();
  uint64_t v12 = v11 + *a3;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXRecognitionSausage?(v12, v4, a1);
  uint64_t v13 = a4(0);
  BOOL v14 = __swift_getEnumTagSinglePayload(v4, 1, v13) != 1;
  outlined destroy of ModalityXRecognitionSausage?(v4, a1);
  return v14;
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearAudioAnalytics()()
{
}

void ModalityXRecognitionCandidate.clearRecognitionResult()()
{
  OUTLINED_FUNCTION_38();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(v6);
  uint64_t v9 = OUTLINED_FUNCTION_7_0(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_132();
  uint64_t v11 = *(int *)(type metadata accessor for ModalityXRecognitionCandidate(v10) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v12 = swift_retain();
    *(void *)(v0 + v11) = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v0 + v11);
  uint64_t v14 = v5(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v14);
  uint64_t v15 = v13 + *v3;
  swift_beginAccess();
  swift_retain();
  outlined assign with take of ModalityXRecognitionResult?(v1, v15, v7);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_37();
}

uint64_t ModalityXRecognitionCandidate.watermarkDetection.getter@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXRecognitionCandidate.fingerprintDetection.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, a1);
}

uint64_t ModalityXRecognitionCandidate.fingerprintDetection.getter@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v5 = (unsigned __int8 *)(*(void *)(v3 + *(int *)(a1(0) + 20)) + *a2);
  uint64_t result = OUTLINED_FUNCTION_22();
  int v7 = *v5;
  if (v7 == 4) {
    LOBYTE(v7) = 0;
  }
  *a3 = v7;
  return result;
}

void key path setter for ModalityXRecognitionCandidate.watermarkDetection : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.watermarkDetection.setter()
{
}

void (*ModalityXRecognitionCandidate.watermarkDetection.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_174_0((uint64_t)v0);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_118_0();
  return ModalityXRecognitionCandidate.watermarkDetection.modify;
}

void ModalityXRecognitionCandidate.watermarkDetection.modify()
{
}

BOOL ModalityXRecognitionCandidate.hasWatermarkDetection.getter()
{
  return ModalityXRecognitionCandidate.hasFingerprintDetection.getter();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearWatermarkDetection()()
{
}

void ModalityXRecognitionCandidate.clearFingerprintDetection()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  type metadata accessor for ModalityXRecognitionCandidate(0);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v4 = OUTLINED_FUNCTION_242_0();
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(v4);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_63_0();
    uint64_t v6 = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_101_0(v6);
  }
  int v7 = (unsigned char *)(*(void *)(v0 + v1) + *v3);
  OUTLINED_FUNCTION_34();
  unsigned char *v7 = 4;
  OUTLINED_FUNCTION_128_0();
}

double ModalityXRecognitionCandidate.watermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.snr.getter();
}

uint64_t ModalityXRecognitionCandidate.watermarkPeakAverage.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter((void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, (void (*)(void))type metadata accessor for ModalityXRecognitionCandidate._StorageClass, ModalityXRecognitionCandidate._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage, a1);
}

uint64_t ModalityXRecognitionCandidate.snr.setter(void (*a1)(void), void (*a2)(void), uint64_t (*a3)(uint64_t), void *a4, double a5)
{
  a1(0);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    a2(0);
    OUTLINED_FUNCTION_29();
    uint64_t v11 = OUTLINED_FUNCTION_220();
    uint64_t v12 = a3(v11);
    OUTLINED_FUNCTION_139_0(v12);
  }
  uint64_t v13 = *(void *)(v5 + v6) + *a4;
  uint64_t result = OUTLINED_FUNCTION_34();
  *(double *)uint64_t v13 = a5;
  *(unsigned char *)(v13 + 8) = 0;
  return result;
}

void (*ModalityXRecognitionCandidate.watermarkPeakAverage.modify())()
{
  uint64_t v1 = malloc(0x60uLL);
  OUTLINED_FUNCTION_173_0((uint64_t)v1);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_108_0();
  if (!v4) {
    double v2 = v3;
  }
  *(double *)(v0 + 72) = v2;
  return ModalityXRecognitionCandidate.watermarkPeakAverage.modify;
}

void ModalityXRecognitionCandidate.watermarkPeakAverage.modify()
{
}

BOOL ModalityXRecognitionCandidate.hasWatermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.hasSnr.getter();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearWatermarkPeakAverage()()
{
}

void ModalityXRecognitionCandidate.clearSnr()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v5 = OUTLINED_FUNCTION_161_0();
  v6(v5);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    v3(0);
    OUTLINED_FUNCTION_29();
    uint64_t v7 = OUTLINED_FUNCTION_220();
    uint64_t v8 = v2(v7);
    OUTLINED_FUNCTION_139_0(v8);
  }
  uint64_t v9 = *(void *)(v1 + v4) + *v0;
  OUTLINED_FUNCTION_34();
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXRecognitionCandidate.language.getter()
{
  return ModalityXRecognitionCandidate.resultID.getter();
}

void key path setter for ModalityXRecognitionCandidate.language : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.language.setter()
{
}

uint64_t ModalityXRecognitionCandidate.language.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_46_0((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.language.modify()
{
}

BOOL ModalityXRecognitionCandidate.hasLanguage.getter()
{
  return ModalityXRecognitionCandidate.hasResultID.getter();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearLanguage()()
{
}

void ModalityXRecognitionCandidate.clearResultID()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v5 = OUTLINED_FUNCTION_161_0();
  v6(v5);
  if ((OUTLINED_FUNCTION_295() & 1) == 0)
  {
    v3(0);
    OUTLINED_FUNCTION_29();
    uint64_t v7 = OUTLINED_FUNCTION_220();
    uint64_t v8 = v2(v7);
    OUTLINED_FUNCTION_139_0(v8);
  }
  uint64_t v9 = (void *)(*(void *)(v1 + v4) + *v0);
  OUTLINED_FUNCTION_34();
  *uint64_t v9 = 0;
  v9[1] = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXRecognitionCandidate.latnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  OUTLINED_FUNCTION_204_0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v3 = OUTLINED_FUNCTION_7_0(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v1(v6);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_179_0();
  uint64_t v7 = (int *)type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_9((uint64_t)v5, 1, (uint64_t)v7);
  if (!v8) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  UnknownStorage.init()();
  OUTLINED_FUNCTION_220_0(v7[5]);
  OUTLINED_FUNCTION_86(v7[6]);
  uint64_t v9 = v0 + v7[7];
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v0 + v7[8];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
}

void ModalityXRecognitionCandidate.latnnMitigatorResult.setter()
{
}

void ModalityXRecognitionCandidate.latnnMitigatorResult.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = malloc(*(void *)(v6 + 64));
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v8)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_47_0();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXRecognitionCandidate.hasLatnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearLatnnMitigatorResult()()
{
}

uint64_t ModalityXRecognitionCandidate.requestLocale.getter()
{
  return ModalityXRecognitionCandidate.resultID.getter();
}

void key path setter for ModalityXRecognitionCandidate.requestLocale : ModalityXRecognitionCandidate()
{
}

void ModalityXRecognitionCandidate.requestLocale.setter()
{
}

uint64_t ModalityXRecognitionCandidate.requestLocale.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_46_0((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXRecognitionCandidate.requestLocale.modify()
{
}

BOOL ModalityXRecognitionCandidate.hasRequestLocale.getter()
{
  return ModalityXRecognitionCandidate.hasResultID.getter();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearRequestLocale()()
{
}

uint64_t (*ModalityXRecognitionCandidate.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXItnAlignment.firstPreItnTokenIndex.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXItnAlignment(0);
  return OUTLINED_FUNCTION_32_0(*(int *)(v0 + 20));
}

void ModalityXItnAlignment.firstPreItnTokenIndex.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  uint64_t v1 = type metadata accessor for ModalityXItnAlignment(v0);
  OUTLINED_FUNCTION_95_0(*(int *)(v1 + 20));
}

uint64_t (*ModalityXItnAlignment.firstPreItnTokenIndex.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_125_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 20));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXItnAlignment.hasFirstPreItnTokenIndex.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXItnAlignment(0);
  return OUTLINED_FUNCTION_53_0(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXItnAlignment.clearFirstPreItnTokenIndex()()
{
  uint64_t v1 = type metadata accessor for ModalityXItnAlignment(0);
  OUTLINED_FUNCTION_30_0(v0 + *(int *)(v1 + 20));
}

uint64_t ModalityXItnAlignment.lastPreItnTokenIndex.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

void ModalityXItnAlignment.lastPreItnTokenIndex.setter()
{
}

uint64_t (*ModalityXItnAlignment.lastPreItnTokenIndex.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_125_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 24));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXItnAlignment.hasLastPreItnTokenIndex.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

Swift::Void __swiftcall ModalityXItnAlignment.clearLastPreItnTokenIndex()()
{
}

uint64_t ModalityXItnAlignment.firstPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.endMilliSeconds.getter();
}

void ModalityXItnAlignment.firstPostItnCharPos.setter()
{
}

uint64_t (*ModalityXItnAlignment.firstPostItnCharPos.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_125_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 28));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXItnAlignment.hasFirstPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.hasEndMilliSeconds.getter();
}

Swift::Void __swiftcall ModalityXItnAlignment.clearFirstPostItnCharPos()()
{
}

void ModalityXRecognitionToken.clearEndMilliSeconds()()
{
  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  v1(v0);
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_30_0(v2);
}

uint64_t ModalityXItnAlignment.lastPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.silenceStartMilliSeconds.getter();
}

void ModalityXItnAlignment.lastPostItnCharPos.setter()
{
}

uint64_t (*ModalityXItnAlignment.lastPostItnCharPos.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_125_0(a1);
  OUTLINED_FUNCTION_4_1(*(int *)(v1 + 32));
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXItnAlignment.hasLastPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter();
}

Swift::Void __swiftcall ModalityXItnAlignment.clearLastPostItnCharPos()()
{
}

void ModalityXRecognitionToken.clearSilenceStartMilliSeconds()()
{
  uint64_t v0 = OUTLINED_FUNCTION_62_0();
  v1(v0);
  OUTLINED_FUNCTION_105_0();
  OUTLINED_FUNCTION_30_0(v2);
}

uint64_t (*ModalityXItnAlignment.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXItnAlignment.init()@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXItnAlignment(0);
  OUTLINED_FUNCTION_30_0(a1 + *(int *)(v2 + 20));
  uint64_t v4 = a1 + *(int *)(v3 + 24);
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = v5;
  return OUTLINED_FUNCTION_107_0(v3);
}

uint64_t (*ModalityXAcousticFeature.acousticFeaturePerFrame.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

float ModalityXAcousticFeature.frameDuration.getter()
{
  return ModalityXAcousticFeature.frameDuration.getter(type metadata accessor for ModalityXAcousticFeature);
}

uint64_t ModalityXAcousticFeature.frameDuration.setter(float a1)
{
  return ModalityXAcousticFeature.frameDuration.setter(type metadata accessor for ModalityXAcousticFeature, a1);
}

uint64_t (*ModalityXAcousticFeature.frameDuration.modify(void *a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_155(a1);
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXAcousticFeature(v2) + 24);
  *(_DWORD *)(v1 + 12) = v3;
  float v4 = OUTLINED_FUNCTION_94_0(v3);
  if (!v6) {
    float v4 = v5;
  }
  *(float *)(v1 + 8) = v4;
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXAcousticFeature.hasFrameDuration.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXAcousticFeature);
}

Swift::Void __swiftcall ModalityXAcousticFeature.clearFrameDuration()()
{
}

uint64_t ModalityXAcousticFeature.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXAcousticFeature.unknownFields.setter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.setter();
}

uint64_t (*ModalityXAcousticFeature.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXAcousticFeature(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXAcousticFeature.init()(void *a1@<X8>)
{
}

void ModalityXRecognitionChoice.init()(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  uint64_t v3 = a1(0);
  UnknownStorage.init()();
  OUTLINED_FUNCTION_30_0((uint64_t)a2 + *(int *)(v3 + 24));
}

uint64_t ModalityXSpeechRecognitionFeature.key.getter()
{
  return ModalityXRecognitionToken.tokenText.getter();
}

uint64_t key path setter for ModalityXSpeechRecognitionFeature.key : ModalityXSpeechRecognitionFeature(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXSpeechRecognitionFeature.key.setter(v1, v2);
}

uint64_t ModalityXSpeechRecognitionFeature.key.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXRecognitionToken.tokenText.setter(a1, a2);
}

uint64_t ModalityXSpeechRecognitionFeature.key.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXSpeechRecognitionFeature(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXSpeechRecognitionFeature.hasKey.getter()
{
  return ModalityXRecognitionToken.hasTokenText.getter();
}

Swift::Void __swiftcall ModalityXSpeechRecognitionFeature.clearKey()()
{
}

uint64_t ModalityXRecognitionToken.clearTokenText()()
{
  uint64_t v1 = OUTLINED_FUNCTION_159_0();
  v2(v1);
  uint64_t result = OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
  return result;
}

float ModalityXSpeechRecognitionFeature.value.getter()
{
  return ModalityXAcousticFeature.frameDuration.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

float ModalityXAcousticFeature.frameDuration.getter(uint64_t (*a1)(void))
{
  uint64_t v1 = a1(0);
  float result = OUTLINED_FUNCTION_94_0(*(int *)(v1 + 24));
  if (!v4) {
    return v3;
  }
  return result;
}

uint64_t ModalityXSpeechRecognitionFeature.value.setter(float a1)
{
  return ModalityXAcousticFeature.frameDuration.setter(type metadata accessor for ModalityXSpeechRecognitionFeature, a1);
}

uint64_t ModalityXAcousticFeature.frameDuration.setter(uint64_t (*a1)(void), float a2)
{
  uint64_t result = a1(0);
  uint64_t v5 = v2 + *(int *)(result + 24);
  *(float *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*ModalityXSpeechRecognitionFeature.value.modify(void *a1))()
{
  uint64_t v2 = OUTLINED_FUNCTION_155(a1);
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXSpeechRecognitionFeature(v2) + 24);
  *(_DWORD *)(v1 + 12) = v3;
  float v4 = OUTLINED_FUNCTION_94_0(v3);
  if (!v6) {
    float v4 = v5;
  }
  *(float *)(v1 + 8) = v4;
  return ModalityXRecognitionToken.startMilliSeconds.modify;
}

BOOL ModalityXSpeechRecognitionFeature.hasValue.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

Swift::Void __swiftcall ModalityXSpeechRecognitionFeature.clearValue()()
{
}

uint64_t (*ModalityXSpeechRecognitionFeature.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXSpeechRecognitionFeature.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXSpeechRecognitionFeature(0);
  uint64_t v3 = (void *)(a1 + *(int *)(v2 + 20));
  void *v3 = 0;
  v3[1] = 0;
  OUTLINED_FUNCTION_30_0(a1 + *(int *)(v2 + 24));
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.key.getter()
{
  return ModalityXRecognitionToken.tokenText.getter();
}

uint64_t key path setter for ModalityXAudioAnalyticsAcousticFeature.key : ModalityXAudioAnalyticsAcousticFeature(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXAudioAnalyticsAcousticFeature.key.setter(v1, v2);
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.key.setter(uint64_t a1, uint64_t a2)
{
  return ModalityXRecognitionToken.tokenText.setter(a1, a2);
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.key.modify(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_83(a1);
  uint64_t v3 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v2);
  if (OUTLINED_FUNCTION_31(*(int *)(v3 + 20))) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  void *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXAudioAnalyticsAcousticFeature.hasKey.getter()
{
  return ModalityXRecognitionToken.hasTokenText.getter();
}

Swift::Void __swiftcall ModalityXAudioAnalyticsAcousticFeature.clearKey()()
{
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_132();
  uint64_t v6 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v5);
  OUTLINED_FUNCTION_167_0(*(int *)(v6 + 24));
  uint64_t v7 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_9(v1, 1, v7);
  if (!v8) {
    return outlined init with take of ModalityXRecognitionSausage();
  }
  OUTLINED_FUNCTION_169_0(MEMORY[0x263F8EE78]);
  uint64_t v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.value.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  uint64_t v2 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v1);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v2 + 24), &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  outlined init with take of ModalityXRecognitionSausage();
  type metadata accessor for ModalityXAcousticFeature(0);
  uint64_t v3 = OUTLINED_FUNCTION_135_0();

  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

void ModalityXAudioAnalyticsAcousticFeature.value.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v2 = malloc(0x30uLL);
  OUTLINED_FUNCTION_26(v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  OUTLINED_FUNCTION_7_0(v3);
  uint64_t v5 = malloc(*(void *)(v4 + 64));
  *(void *)(v1 + 8) = v5;
  uint64_t v6 = type metadata accessor for ModalityXAcousticFeature(0);
  *(void *)(v1 + 16) = v6;
  OUTLINED_FUNCTION_2_0();
  size_t v8 = *(void *)(v7 + 64);
  *(void *)(v1 + 24) = malloc(v8);
  uint64_t v9 = malloc(v8);
  *(void *)(v1 + 32) = v9;
  uint64_t v10 = *(int *)(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0) + 24);
  *(_DWORD *)(v1 + 40) = v10;
  outlined init with copy of ModalityXRecognitionSausage?(v0 + v10, (uint64_t)v5, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  OUTLINED_FUNCTION_9((uint64_t)v5, 1, v6);
  if (v11)
  {
    *uint64_t v9 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    uint64_t v12 = (char *)v9 + *(int *)(v6 + 24);
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  else
  {
    outlined init with take of ModalityXRecognitionSausage();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionResult.preItn.modify();
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.hasValue.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  OUTLINED_FUNCTION_166_0(*(int *)(v3 + 24));
  uint64_t v4 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_51_0(v4);
  return v0;
}

Swift::Void __swiftcall ModalityXAudioAnalyticsAcousticFeature.clearValue()()
{
  uint64_t v1 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 24), &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  type metadata accessor for ModalityXAcousticFeature(0);
  uint64_t v2 = OUTLINED_FUNCTION_83_0();

  __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

uint64_t (*ModalityXAudioAnalyticsAcousticFeature.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.init()@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (void *)(a1 + *(int *)(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0) + 20));
  *uint64_t v2 = 0;
  v2[1] = 0;
  type metadata accessor for ModalityXAcousticFeature(0);
  uint64_t v3 = OUTLINED_FUNCTION_83_0();

  return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
}

uint64_t ModalityXAudioAnalytics.speechRecognitionFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXAudioAnalytics.speechRecognitionFeatures.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ModalityXAudioAnalytics.speechRecognitionFeatures.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalytics.acousticFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXAudioAnalytics.acousticFeatures.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ModalityXAudioAnalytics.acousticFeatures.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalytics.unknownFields.getter()
{
  return ModalityXChoiceAlignment.unknownFields.getter();
}

uint64_t ModalityXAudioAnalytics.unknownFields.setter()
{
  return ModalityXChoiceAlignment.unknownFields.setter();
}

uint64_t (*ModalityXAudioAnalytics.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXAudioAnalytics(v0);
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXFinalSpeechRecognitionResponse.speechID.getter()
{
  return ModalityXRecognitionCandidate.speechID.getter();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.speechID : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.speechID.setter()
{
}

uint64_t ModalityXRecognitionCandidate._uniqueStorage()(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t v5 = OUTLINED_FUNCTION_23_0();
  v6(v5);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_35_0();
    a2(v7);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_206_0();
    uint64_t v8 = a3();
    OUTLINED_FUNCTION_89_0(v8);
  }

  return swift_retain();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.speechID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_44_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 24)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXFinalSpeechRecognitionResponse.speechID.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasSpeechID.getter()
{
  return ModalityXRecognitionCandidate.hasSpeechID.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearSpeechID()()
{
}

void ModalityXRecognitionCandidate.clearSpeechID()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v7(v6);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_35_0();
    v5(v8);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_206_0();
    uint64_t v9 = v3();
    OUTLINED_FUNCTION_89_0(v9);
  }
  uint64_t v10 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.sessionID.getter()
{
  return ModalityXRecognitionCandidate.sessionID.getter();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.sessionID : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.sessionID.setter()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.sessionID.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_44_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 40)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXFinalSpeechRecognitionResponse.sessionID.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasSessionID.getter()
{
  return ModalityXRecognitionCandidate.hasSessionID.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearSessionID()()
{
}

void ModalityXRecognitionCandidate.clearSessionID()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v7(v6);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_35_0();
    v5(v8);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_206_0();
    uint64_t v9 = v3();
    OUTLINED_FUNCTION_89_0(v9);
  }
  uint64_t v10 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.returnCode.getter()
{
  return ModalityXRecognitionCandidate.returnCode.getter();
}

void ModalityXFinalSpeechRecognitionResponse.returnCode.setter()
{
  ModalityXRecognitionCandidate.returnCode.setter();
}

void (*ModalityXFinalSpeechRecognitionResponse.returnCode.modify())()
{
  uint64_t v2 = OUTLINED_FUNCTION_110();
  void *v0 = v2;
  v2[9] = v1;
  *((_DWORD *)v2 + 21) = *(_DWORD *)(type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0) + 20);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_188_0();
  return ModalityXFinalSpeechRecognitionResponse.returnCode.modify;
}

void ModalityXFinalSpeechRecognitionResponse.returnCode.modify()
{
  ModalityXRecognitionCandidate.returnCode.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasReturnCode.getter()
{
  return ModalityXRecognitionCandidate.hasReturnCode.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearReturnCode()()
{
}

void ModalityXRecognitionCandidate.clearReturnCode()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v7(v6);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_35_0();
    v5(v8);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_206_0();
    uint64_t v9 = v3();
    OUTLINED_FUNCTION_89_0(v9);
  }
  uint64_t v10 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(_DWORD *)(v10 + 48) = 0;
  *(unsigned char *)(v10 + 52) = 1;
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.returnStr.getter()
{
  return ModalityXRecognitionCandidate.returnStr.getter();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.returnStr : ModalityXFinalSpeechRecognitionResponse()
{
  ModalityXFinalSpeechRecognitionResponse.returnStr.setter();
}

void ModalityXFinalSpeechRecognitionResponse.returnStr.setter()
{
  ModalityXRecognitionCandidate.returnStr.setter();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.returnStr.modify()
{
  uint64_t v2 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_44_0((uint64_t)v2);
  OUTLINED_FUNCTION_22();
  if (*(void *)(v0 + 64)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXFinalSpeechRecognitionResponse.returnStr.modify()
{
  ModalityXRecognitionCandidate.returnStr.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasReturnStr.getter()
{
  return ModalityXRecognitionCandidate.hasReturnStr.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearReturnStr()()
{
}

void ModalityXRecognitionCandidate.clearReturnStr()()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = OUTLINED_FUNCTION_23_0();
  v7(v6);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    uint64_t v8 = OUTLINED_FUNCTION_35_0();
    v5(v8);
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_206_0();
    uint64_t v9 = v3();
    OUTLINED_FUNCTION_89_0(v9);
  }
  uint64_t v10 = *(void *)(v0 + v1);
  OUTLINED_FUNCTION_34();
  *(void *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_128_0();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.recognitionResult.getter()
{
  return ModalityXRecognitionCandidate.recognitionResult.getter();
}

void ModalityXFinalSpeechRecognitionResponse.recognitionResult.setter()
{
  OUTLINED_FUNCTION_38();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v1 = OUTLINED_FUNCTION_7_0(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v3 = OUTLINED_FUNCTION_263();
    uint64_t v4 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v3);
    OUTLINED_FUNCTION_164_0(v4);
  }
  OUTLINED_FUNCTION_194_0();
  uint64_t v5 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_133_0(v5);
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_87_0();
  swift_retain();
  OUTLINED_FUNCTION_191_0();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_37();
}

void ModalityXFinalSpeechRecognitionResponse.recognitionResult.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = malloc(*(void *)(v6 + 64));
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v8)
  {
    OUTLINED_FUNCTION_227_0(MEMORY[0x263F8EE78]);
    OUTLINED_FUNCTION_52_0();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasRecognitionResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, type metadata accessor for ModalityXRecognitionResult);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearRecognitionResult()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_63_0();
    uint64_t v6 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_101_0(v6);
  }
  uint64_t v7 = OUTLINED_FUNCTION_242_0();
  uint64_t v8 = type metadata accessor for ModalityXRecognitionResult(v7);
  OUTLINED_FUNCTION_134_0(v8);
  OUTLINED_FUNCTION_88_0();
  swift_retain();
  outlined assign with take of ModalityXRecognitionResult?((uint64_t)v4, v0, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_endAccess();
  swift_release();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.getter@<X0>(unsigned char *a1@<X8>)
{
  OUTLINED_FUNCTION_39_0();
  uint64_t v3 = (unsigned __int8 *)(v2
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  uint64_t result = OUTLINED_FUNCTION_22();
  int v5 = *v3;
  if (v5 == 5) {
    LOBYTE(v5) = 0;
  }
  *a1 = v5;
  return result;
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.setter()
{
}

void (*ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_61_0((uint64_t)v1);
  uint64_t v3 = (unsigned __int8 *)(v2
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  OUTLINED_FUNCTION_22();
  int v4 = *v3;
  if (v4 == 5) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(v0 + 84) = v4;
  return ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.modify;
}

void ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasLangProfileRecreateCodes.getter()
{
  OUTLINED_FUNCTION_39_0();
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  OUTLINED_FUNCTION_22();
  return *v1 != 5;
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLangProfileRecreateCodes()()
{
  if ((OUTLINED_FUNCTION_115_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v2 = swift_retain();
    uint64_t v3 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v2);
    OUTLINED_FUNCTION_43(v3);
  }
  int v4 = (unsigned char *)(*(void *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  OUTLINED_FUNCTION_34();
  unsigned char *v4 = 5;
}

uint64_t ModalityXFinalSpeechRecognitionResponse.audioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.audioAnalytics.getter();
}

void ModalityXFinalSpeechRecognitionResponse.audioAnalytics.setter()
{
  OUTLINED_FUNCTION_38();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v1 = OUTLINED_FUNCTION_7_0(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v3 = OUTLINED_FUNCTION_263();
    uint64_t v4 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v3);
    OUTLINED_FUNCTION_164_0(v4);
  }
  OUTLINED_FUNCTION_194_0();
  uint64_t v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_133_0(v5);
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_87_0();
  swift_retain();
  OUTLINED_FUNCTION_191_0();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_37();
}

void ModalityXFinalSpeechRecognitionResponse.audioAnalytics.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = malloc(*(void *)(v6 + 64));
  uint64_t v8 = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  *(void *)(v0 + 48) = v8;
  OUTLINED_FUNCTION_39_0();
  uint64_t v10 = v9
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  OUTLINED_FUNCTION_22();
  outlined init with copy of ModalityXRecognitionSausage?(v10, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v11)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    *uint64_t v8 = MEMORY[0x263F8EE78];
    v8[1] = v12;
    UnknownStorage.init()();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasAudioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, type metadata accessor for ModalityXAudioAnalytics);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearAudioAnalytics()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_63_0();
    uint64_t v6 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_101_0(v6);
  }
  uint64_t v7 = OUTLINED_FUNCTION_242_0();
  uint64_t v8 = type metadata accessor for ModalityXAudioAnalytics(v7);
  OUTLINED_FUNCTION_134_0(v8);
  OUTLINED_FUNCTION_88_0();
  swift_retain();
  outlined assign with take of ModalityXRecognitionResult?((uint64_t)v4, v0, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_endAccess();
  swift_release();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.watermarkDetection.getter@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXRecognitionCandidate.fingerprintDetection.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, a1);
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.watermarkDetection : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.watermarkDetection.setter()
{
}

void (*ModalityXFinalSpeechRecognitionResponse.watermarkDetection.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_61_0((uint64_t)v0);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_118_0();
  return ModalityXFinalSpeechRecognitionResponse.watermarkDetection.modify;
}

void ModalityXFinalSpeechRecognitionResponse.watermarkDetection.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasWatermarkDetection.getter()
{
  return ModalityXRecognitionCandidate.hasFingerprintDetection.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearWatermarkDetection()()
{
  if ((OUTLINED_FUNCTION_115_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v2 = swift_retain();
    uint64_t v3 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v2);
    OUTLINED_FUNCTION_43(v3);
  }
  uint64_t v4 = (unsigned char *)(*(void *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  OUTLINED_FUNCTION_34();
  unsigned char *v4 = 4;
}

double ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.snr.getter();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter((void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass, ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage, a1);
}

void (*ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.modify(void *a1))()
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  *((_DWORD *)v3 + 22) = *(_DWORD *)(type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0) + 20);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_108_0();
  if (!v6) {
    double v4 = v5;
  }
  *((double *)v3 + 9) = v4;
  return ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.modify;
}

void ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasWatermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.hasSnr.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearWatermarkPeakAverage()()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.language.getter()
{
  return ModalityXRecognitionCandidate.resultID.getter();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.language : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.language.setter()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.language.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_148_0((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXFinalSpeechRecognitionResponse.language.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasLanguage.getter()
{
  return ModalityXRecognitionCandidate.hasResultID.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLanguage()()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
}

void ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.setter()
{
  OUTLINED_FUNCTION_38();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v1 = OUTLINED_FUNCTION_7_0(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_112_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v3 = OUTLINED_FUNCTION_263();
    uint64_t v4 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v3);
    OUTLINED_FUNCTION_164_0(v4);
  }
  OUTLINED_FUNCTION_194_0();
  uint64_t v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_133_0(v5);
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_87_0();
  swift_retain();
  OUTLINED_FUNCTION_191_0();
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_37();
}

void ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.modify()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_66_0((uint64_t)v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  OUTLINED_FUNCTION_7_0(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *(void *)(v0 + 32) = v4;
  uint64_t v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = malloc(*(void *)(v6 + 64));
  *(void *)(v0 + 48) = OUTLINED_FUNCTION_154_0((uint64_t)v7);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_9((uint64_t)v4, 1, v5);
  if (v8)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_47_0();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    OUTLINED_FUNCTION_151_0();
  }
  OUTLINED_FUNCTION_37();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasLatnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLatnnMitigatorResult()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_63_0();
    uint64_t v6 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_101_0(v6);
  }
  uint64_t v7 = OUTLINED_FUNCTION_242_0();
  uint64_t v8 = type metadata accessor for ModalityXLatnnMitigatorResult(v7);
  OUTLINED_FUNCTION_134_0(v8);
  OUTLINED_FUNCTION_88_0();
  swift_retain();
  outlined assign with take of ModalityXRecognitionResult?((uint64_t)v4, v0, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_endAccess();
  swift_release();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.requestLocale.getter()
{
  return ModalityXRecognitionCandidate.resultID.getter();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.requestLocale : ModalityXFinalSpeechRecognitionResponse()
{
}

void ModalityXFinalSpeechRecognitionResponse.requestLocale.setter()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.requestLocale.modify()
{
  uint64_t v1 = OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_148_0((uint64_t)v1);
  uint64_t v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale;
  OUTLINED_FUNCTION_22();
  if (*(void *)(v3 + 8)) {
    OUTLINED_FUNCTION_117();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_103();
}

void ModalityXFinalSpeechRecognitionResponse.requestLocale.modify()
{
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasRequestLocale.getter()
{
  return ModalityXRecognitionCandidate.hasResultID.getter();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearRequestLocale()()
{
}

uint64_t ModalityXFinalSpeechRecognitionResponse.hasResult_p.getter()
{
  OUTLINED_FUNCTION_39_0();
  uint64_t v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_22();
  return *v1 & 1;
}

void ModalityXFinalSpeechRecognitionResponse.hasResult_p.setter()
{
  OUTLINED_FUNCTION_143_0();
  uint64_t v3 = v1;
  uint64_t v4 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(v4);
  if ((OUTLINED_FUNCTION_85_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v5 = OUTLINED_FUNCTION_63_0();
    uint64_t v6 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_101_0(v6);
  }
  char v7 = v0 & 1;
  uint64_t v8 = (unsigned char *)(*(void *)(v3 + v2)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_34();
  *uint64_t v8 = v7;
  OUTLINED_FUNCTION_128_0();
}

void (*ModalityXFinalSpeechRecognitionResponse.hasResult_p.modify())()
{
  uint64_t v1 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_61_0((uint64_t)v1);
  uint64_t v3 = (unsigned char *)(v2
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_22();
  *(unsigned char *)(v0 + 84) = *v3 & 1;
  return ModalityXFinalSpeechRecognitionResponse.hasResult_p.modify;
}

void ModalityXFinalSpeechRecognitionResponse.hasResult_p.modify()
{
  OUTLINED_FUNCTION_38();
  char v1 = v0;
  uint64_t v3 = *v2;
  char v4 = *(unsigned char *)(*v2 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (v1)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v8 = OUTLINED_FUNCTION_63_0();
    *(void *)(v7 + v6) = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v8);
    swift_release();
  }
LABEL_4:
  uint64_t v9 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80))
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_34();
  *uint64_t v9 = v4;
  OUTLINED_FUNCTION_37();
  free(v10);
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasHasResult_p.getter()
{
  OUTLINED_FUNCTION_39_0();
  char v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_22();
  return *v1 != 2;
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearHasResult_p()()
{
  if ((OUTLINED_FUNCTION_115_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_29();
    uint64_t v2 = swift_retain();
    uint64_t v3 = ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(v2);
    OUTLINED_FUNCTION_43(v3);
  }
  char v4 = (unsigned char *)(*(void *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_34();
  unsigned char *v4 = 2;
}

uint64_t (*ModalityXFinalSpeechRecognitionResponse.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

unint64_t static ModalityXRecognitionToken.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(19);
}

uint64_t static ModalityXRecognitionToken._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionToken._protobuf_nameMap, a1);
}

uint64_t ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_120_0();
        break;
      case 2:
        OUTLINED_FUNCTION_121_0(result, v4, v5, v6, type metadata accessor for ModalityXRecognitionToken, MEMORY[0x263F50608]);
        break;
      case 3:
        OUTLINED_FUNCTION_225_0();
        break;
      case 4:
        OUTLINED_FUNCTION_226_0();
        break;
      case 5:
        OUTLINED_FUNCTION_6_1();
        closure #5 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
        break;
      case 6:
        OUTLINED_FUNCTION_6_1();
        closure #6 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
        break;
      case 7:
        OUTLINED_FUNCTION_6_1();
        closure #7 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
        break;
      case 8:
        OUTLINED_FUNCTION_6_1();
        closure #8 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #5 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #6 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #7 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #8 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

void ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_119_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_224_0();
    OUTLINED_FUNCTION_222_0();
    OUTLINED_FUNCTION_223_0();
    uint64_t v1 = OUTLINED_FUNCTION_25();
    closure #5 in ModalityXRecognitionToken.traverse<A>(visitor:)(v1);
    uint64_t v2 = OUTLINED_FUNCTION_25();
    closure #6 in ModalityXRecognitionToken.traverse<A>(visitor:)(v2);
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #7 in ModalityXRecognitionToken.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #8 in ModalityXRecognitionToken.traverse<A>(visitor:)(v4);
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #5 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionToken(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #6 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #7 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(void *)(a1 + *(int *)(result + 44) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #8 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(void *)(a1 + *(int *)(result + 48) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

void static ModalityXRecognitionToken.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXRecognitionToken(v5);
  OUTLINED_FUNCTION_28();
  if (!v8)
  {
    if (v6) {
      goto LABEL_50;
    }
LABEL_10:
    OUTLINED_FUNCTION_45();
    if (v13)
    {
      if (!v12) {
        goto LABEL_50;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v14) {
        goto LABEL_50;
      }
    }
    OUTLINED_FUNCTION_45();
    if (v16)
    {
      if (!v15) {
        goto LABEL_50;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v17) {
        goto LABEL_50;
      }
    }
    OUTLINED_FUNCTION_45();
    if (v19)
    {
      if (!v18) {
        goto LABEL_50;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v20) {
        goto LABEL_50;
      }
    }
    OUTLINED_FUNCTION_45();
    if (v22)
    {
      if (!v21) {
        goto LABEL_50;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v23) {
        goto LABEL_50;
      }
    }
    OUTLINED_FUNCTION_238();
    if (v11)
    {
      if (v24 != 2) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v24 == 2) {
        goto LABEL_50;
      }
      OUTLINED_FUNCTION_122();
      if ((v25 & 1) == 0) {
        goto LABEL_50;
      }
    }
    OUTLINED_FUNCTION_28();
    if (v28)
    {
      if (!v26) {
        goto LABEL_50;
      }
      OUTLINED_FUNCTION_21(v27);
      if (!v11 || v29 != v30)
      {
        uint64_t v0 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_50;
        }
      }
    }
    else if (v26)
    {
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_28();
    if (v34)
    {
      if (!v32) {
        goto LABEL_50;
      }
      OUTLINED_FUNCTION_21(v33);
      if (!v11 || v35 != v36)
      {
        uint64_t v0 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_50;
        }
      }
    }
    else if (v32)
    {
      goto LABEL_50;
    }
    uint64_t v38 = OUTLINED_FUNCTION_38_0();
    ((void (*)(uint64_t))v0)(v38);
    OUTLINED_FUNCTION_46();
    v0();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v39 = *(void (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_65();
    v39();
    OUTLINED_FUNCTION_65();
    v39();
    goto LABEL_50;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_21(v7);
    BOOL v11 = v11 && v9 == v10;
    if (v11) {
      goto LABEL_10;
    }
    uint64_t v0 = 0;
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_10;
    }
  }
LABEL_50:
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXRecognitionToken.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionToken, &lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionToken()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionToken(uint64_t a1, uint64_t a2)
{
  return ModalityXRecognitionToken.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionToken()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionToken(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionPhraseTokens.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(26);
}

void one-time initialization function for _protobuf_nameMap()
{
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  unsigned int *v0;
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v8, v7);
  __swift_project_value_buffer(v8, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  uint64_t v9 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
             - 8);
  uint64_t v10 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  BOOL v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_256A1CFC0;
  int v12 = v11 + v10 + v9[14];
  *(void *)(v11 + v10) = 1;
  *(void *)int v12 = v5;
  *(void *)(v12 + 8) = v3;
  *(unsigned char *)(v12 + 16) = 2;
  char v13 = *v1;
  type metadata accessor for _NameMap.NameDescription();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(unint64_t, uint64_t))(v14 + 104))(v12, v13);
  _NameMap.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_37();
}

uint64_t static ModalityXRecognitionPhraseTokens._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRecognitionPhraseTokens._protobuf_nameMap, a1);
}

void ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_129_0();
  while (1)
  {
    uint64_t v1 = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (v1 == 1) {
      closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
    }
  }
  OUTLINED_FUNCTION_141_0();
}

void ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXRecognitionToken(0),
        uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken), OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXRecognitionPhraseTokens(0);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXRecognitionPhraseTokens.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  void (*v10)(void);

  OUTLINED_FUNCTION_38();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_33_0();
  if (v3(v8))
  {
    v1(0);
    uint64_t v9 = *(void (**)(void))(v5 + 16);
    OUTLINED_FUNCTION_28_0();
    v9();
    OUTLINED_FUNCTION_28_0();
    v9();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v10 = *(void (**)(void))(v5 + 8);
    OUTLINED_FUNCTION_65();
    v10();
    OUTLINED_FUNCTION_65();
    v10();
  }
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXRecognitionPhraseTokens.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionPhraseTokens, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionPhraseTokens()
{
  return 0xD00000000000001ALL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionPhraseTokens()
{
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionPhraseTokens()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionPhraseTokens(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionPhraseTokensAlternatives.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(38);
}

uint64_t static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap, a1);
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        OUTLINED_FUNCTION_6_1();
        closure #2 in ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)();
      }
      else if (result == 1)
      {
        OUTLINED_FUNCTION_180_0();
      }
      uint64_t result = OUTLINED_FUNCTION_240_0();
    }
  }
  return result;
}

uint64_t closure #2 in ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

void ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXRecognitionPhraseTokens(0),
        uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens), OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    OUTLINED_FUNCTION_142_0();
    closure #1 in ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)(v3);
    if (!v0)
    {
      type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
      OUTLINED_FUNCTION_19_0();
    }
  }
  OUTLINED_FUNCTION_141_0();
}

uint64_t closure #1 in ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

void static ModalityXRecognitionPhraseTokensAlternatives.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_33_0();
  specialized static Array<A>.== infix(_:_:)();
  if (v4)
  {
    type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
    OUTLINED_FUNCTION_238();
    if (v6)
    {
      if (v5 != 2) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (v5 != 2)
    {
      OUTLINED_FUNCTION_122();
      if (v7)
      {
LABEL_8:
        uint64_t v8 = *(void (**)(void))(v1 + 16);
        OUTLINED_FUNCTION_28_0();
        v8();
        OUTLINED_FUNCTION_28_0();
        v8();
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        OUTLINED_FUNCTION_54();
        uint64_t v9 = OUTLINED_FUNCTION_67_0();
        ((void (*)(uint64_t))(v1 + 16))(v9);
        uint64_t v10 = OUTLINED_FUNCTION_193_0();
        ((void (*)(uint64_t))(v1 + 16))(v10);
      }
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXRecognitionPhraseTokensAlternatives.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  return 0xD000000000000026;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  return ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionSausage.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(21);
}

uint64_t static ModalityXRecognitionSausage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRecognitionSausage._protobuf_nameMap, a1);
}

void ModalityXRecognitionSausage.decodeMessage<A>(decoder:)()
{
}

void ModalityXRecognitionSausage.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0),
        uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives), OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXRecognitionSausage(0);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXRecognitionSausage.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXRecognitionSausage.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionSausage, &lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionSausage()
{
  return 0xD000000000000015;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionSausage()
{
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionSausage()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionSausage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionSausage(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionSausage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSetAlternateRecognitionSausage.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(33);
}

uint64_t static ModalityXSetAlternateRecognitionSausage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXSetAlternateRecognitionSausage._protobuf_nameMap, a1);
}

void ModalityXSetAlternateRecognitionSausage.decodeMessage<A>(decoder:)()
{
}

void ModalityXSetAlternateRecognitionSausage.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0),
        uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives), OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXSetAlternateRecognitionSausage(0);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXSetAlternateRecognitionSausage.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXSetAlternateRecognitionSausage.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSetAlternateRecognitionSausage, &lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSetAlternateRecognitionSausage()
{
  return 0xD000000000000021;
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSetAlternateRecognitionSausage()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSetAlternateRecognitionSausage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSetAlternateRecognitionSausage(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSetAlternateRecognitionSausage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionChoice.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(20);
}

uint64_t static ModalityXRecognitionChoice._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionChoice._protobuf_nameMap, a1);
}

uint64_t ModalityXRecognitionChoice.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.decodeMessage<A>(decoder:)(a1, a2, a3, MEMORY[0x263F505D8], type metadata accessor for ModalityXRecognitionChoice, MEMORY[0x263F50608]);
}

uint64_t closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = a5(0);
  return a6(a2 + *(int *)(v10 + 24), a3, a4);
}

uint64_t ModalityXRecognitionChoice.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.traverse<A>(visitor:)(a1, a2, a3, MEMORY[0x263F506D8], (uint64_t)type metadata accessor for ModalityXRecognitionChoice, (uint64_t (*)(void))closure #2 in ModalityXRecognitionToken.traverse<A>(visitor:), (void (*)(void))type metadata accessor for ModalityXRecognitionChoice);
}

void closure #2 in ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_123();
  v1(v0);
  OUTLINED_FUNCTION_212_0();
  if ((v2 & 1) == 0) {
    OUTLINED_FUNCTION_123_0();
  }
}

void static ModalityXRecognitionChoice.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_33_0();
  specialized static Array<A>.== infix(_:_:)(v4, v5);
  if (v6)
  {
    type metadata accessor for ModalityXRecognitionChoice(0);
    OUTLINED_FUNCTION_45();
    if (v8)
    {
      if (!v7) {
        goto LABEL_7;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v9) {
        goto LABEL_7;
      }
    }
    uint64_t v10 = *(void (**)(void))(v1 + 16);
    OUTLINED_FUNCTION_28_0();
    v10();
    OUTLINED_FUNCTION_28_0();
    v10();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v11 = OUTLINED_FUNCTION_67_0();
    ((void (*)(uint64_t))(v1 + 16))(v11);
    uint64_t v12 = OUTLINED_FUNCTION_193_0();
    ((void (*)(uint64_t))(v1 + 16))(v12);
  }
LABEL_7:
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXRecognitionChoice.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionChoice, &lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionChoice()
{
  return 0xD000000000000014;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionChoice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionChoice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionChoice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionChoice(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionChoice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRepeatedItnAlignment.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(23);
}

uint64_t static ModalityXRepeatedItnAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRepeatedItnAlignment._protobuf_nameMap, a1);
}

void ModalityXRepeatedItnAlignment.decodeMessage<A>(decoder:)()
{
}

void ModalityXRepeatedItnAlignment.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXItnAlignment(0),
        uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment), OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXRepeatedItnAlignment(0);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXRepeatedItnAlignment.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXRepeatedItnAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRepeatedItnAlignment, &lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRepeatedItnAlignment()
{
  return 0xD000000000000017;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRepeatedItnAlignment()
{
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRepeatedItnAlignment()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRepeatedItnAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRepeatedItnAlignment(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRepeatedItnAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXChoiceAlignment.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(18);
}

uint64_t static ModalityXChoiceAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXChoiceAlignment._protobuf_nameMap, a1);
}

uint64_t ModalityXChoiceAlignment.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        OUTLINED_FUNCTION_92_0();
      }
      else if (result == 1)
      {
        OUTLINED_FUNCTION_103();
        dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)();
      }
      uint64_t result = OUTLINED_FUNCTION_240_0();
    }
  }
  return result;
}

void ModalityXChoiceAlignment.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  if (!*(void *)(*v0 + 16) || (dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(), !v1))
  {
    uint64_t v2 = v0[1];
    if (!*(void *)(v2 + 16)
      || (type metadata accessor for ModalityXRepeatedItnAlignment(0),
          uint64_t v3 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment), OUTLINED_FUNCTION_15_0(v2, 2, v4, v3), !v1))
    {
      type metadata accessor for ModalityXChoiceAlignment(0);
      OUTLINED_FUNCTION_19_0();
    }
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXChoiceAlignment.== infix(_:_:)()
{
  static ModalityXChoiceAlignment.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  uint64_t (*v4)(void, void);
  uint64_t (*v5)(void, void);
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void);
  void (*v14)(void);

  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  int v7 = v6;
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  char v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = OUTLINED_FUNCTION_33_0();
  if (v7(v12) & 1) != 0 && (v5(*(void *)(v1 + 8), *(void *)(v0 + 8)))
  {
    v3(0);
    char v13 = *(void (**)(void))(v9 + 16);
    OUTLINED_FUNCTION_28_0();
    v13();
    OUTLINED_FUNCTION_28_0();
    v13();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    char v14 = *(void (**)(void))(v9 + 8);
    OUTLINED_FUNCTION_132_0();
    v14();
    OUTLINED_FUNCTION_132_0();
    v14();
  }
  OUTLINED_FUNCTION_16();
}

Swift::Int ModalityXChoiceAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXChoiceAlignment, &lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXChoiceAlignment()
{
  return 0xD000000000000012;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXChoiceAlignment())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXChoiceAlignment()
{
  return ModalityXChoiceAlignment.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXChoiceAlignment()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXChoiceAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXChoiceAlignment(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXChoiceAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionResult.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(20);
}

uint64_t static ModalityXRecognitionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionResult._protobuf_nameMap, a1);
}

uint64_t ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          OUTLINED_FUNCTION_6_1();
          closure #1 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_6_1();
          closure #2 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_180_0();
          break;
        case 4:
          OUTLINED_FUNCTION_92_0();
          break;
        case 5:
          OUTLINED_FUNCTION_6_1();
          closure #5 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 6:
          OUTLINED_FUNCTION_6_1();
          closure #6 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      uint64_t result = OUTLINED_FUNCTION_240_0();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #2 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #5 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t closure #6 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

void ModalityXRecognitionResult.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  closure #1 in ModalityXRecognitionResult.traverse<A>(visitor:)((uint64_t)v0);
  if (!v1)
  {
    closure #2 in ModalityXRecognitionResult.traverse<A>(visitor:)((uint64_t)v0);
    if (*(void *)(*v0 + 16))
    {
      type metadata accessor for ModalityXRecognitionChoice(0);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
      uint64_t v2 = OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_55_0(v2, 3, v3, v4);
    }
    if (*(void *)(v0[1] + 16))
    {
      type metadata accessor for ModalityXRecognitionChoice(0);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
      uint64_t v5 = OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_55_0(v5, 4, v6, v7);
    }
    if (*(void *)(v0[2] + 16))
    {
      type metadata accessor for ModalityXItnAlignment(0);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
      uint64_t v8 = OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_55_0(v8, 5, v9, v10);
    }
    if (*(void *)(v0[3] + 16))
    {
      type metadata accessor for ModalityXChoiceAlignment(0);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
      uint64_t v11 = OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_55_0(v11, 6, v12, v13);
    }
    type metadata accessor for ModalityXRecognitionResult(0);
    UnknownStorage.traverse<A>(visitor:)();
  }
  OUTLINED_FUNCTION_141_0();
}

uint64_t closure #1 in ModalityXRecognitionResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v6 + 36), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #2 in ModalityXRecognitionResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v6 + 40), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

void static ModalityXRecognitionResult.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v64 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v61 = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_203();
  v60[2] = v7;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v8);
  v60[1] = (uint64_t)v60 - v9;
  uint64_t v10 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_203();
  uint64_t v62 = v12;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_138_0(v16, v60[0]);
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)v60 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v21 = OUTLINED_FUNCTION_7_0(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_203();
  uint64_t v63 = v22;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v23);
  uint64_t v69 = (uint64_t)v60 - v24;
  OUTLINED_FUNCTION_102();
  MEMORY[0x270FA5388](v25);
  uint64_t v65 = (uint64_t)v60 - v26;
  OUTLINED_FUNCTION_102();
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)v60 - v29;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_238_0();
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)v60 - v32;
  uint64_t v34 = type metadata accessor for ModalityXRecognitionResult(0);
  uint64_t v35 = *(int *)(v34 + 36);
  uint64_t v67 = v4;
  uint64_t v36 = v4 + v35;
  uint64_t v37 = v34;
  outlined init with copy of ModalityXRecognitionSausage?(v36, (uint64_t)v33, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v38 = *(int *)(v37 + 36);
  uint64_t v68 = v2;
  outlined init with copy of ModalityXRecognitionSausage?(v2 + v38, v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v39 = (uint64_t)&v19[*(int *)(v14 + 48)];
  outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v33, (uint64_t)v19, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined init with copy of ModalityXRecognitionSausage?(v0, v39, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_9((uint64_t)v19, 1, v10);
  if (v52)
  {
    outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v33, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    OUTLINED_FUNCTION_9(v39, 1, v10);
    if (v52)
    {
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v19, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      goto LABEL_6;
    }
LABEL_19:
    uint64_t v53 = &demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?);
    uint64_t v54 = (uint64_t)v19;
    goto LABEL_32;
  }
  outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v19, (uint64_t)v30, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_9(v39, 1, v10);
  if (v52)
  {
    outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v33, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage();
    goto LABEL_19;
  }
  outlined init with take of ModalityXRecognitionSausage();
  specialized static Array<A>.== infix(_:_:)();
  if ((v55 & 1) == 0)
  {
    outlined destroy of ModalityXRecognitionSausage();
    outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v33, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage();
    uint64_t v54 = (uint64_t)v19;
    uint64_t v53 = &demangling cache variable for type metadata for ModalityXRecognitionSausage?;
    goto LABEL_32;
  }
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
  char v56 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of ModalityXRecognitionSausage();
  outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v33, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined destroy of ModalityXRecognitionSausage();
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v19, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  if ((v56 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_6:
  uint64_t v40 = v65;
  outlined init with copy of ModalityXRecognitionSausage?(v67 + *(int *)(v37 + 40), v65, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v41 = v69;
  outlined init with copy of ModalityXRecognitionSausage?(v68 + *(int *)(v37 + 40), v69, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  uint64_t v42 = *(int *)(v14 + 48);
  uint64_t v43 = v66;
  uint64_t v44 = v66 + v42;
  outlined init with copy of ModalityXRecognitionSausage?(v40, v66, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined init with copy of ModalityXRecognitionSausage?(v41, v44, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_9(v43, 1, v10);
  if (!v52)
  {
    outlined init with copy of ModalityXRecognitionSausage?(v43, v63, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    OUTLINED_FUNCTION_9(v44, 1, v10);
    if (!v57)
    {
      outlined init with take of ModalityXRecognitionSausage();
      specialized static Array<A>.== infix(_:_:)();
      if (v58)
      {
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        OUTLINED_FUNCTION_67();
        char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
        outlined destroy of ModalityXRecognitionSausage();
        outlined destroy of ModalityXRecognitionSausage?(v69, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
        outlined destroy of ModalityXRecognitionSausage?(v40, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
        outlined destroy of ModalityXRecognitionSausage();
        outlined destroy of ModalityXRecognitionSausage?(v43, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
        if ((v59 & 1) == 0) {
          goto LABEL_33;
        }
        goto LABEL_11;
      }
      outlined destroy of ModalityXRecognitionSausage();
      outlined destroy of ModalityXRecognitionSausage?(v69, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      outlined destroy of ModalityXRecognitionSausage?(v40, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      outlined destroy of ModalityXRecognitionSausage();
      uint64_t v54 = v43;
      uint64_t v53 = &demangling cache variable for type metadata for ModalityXRecognitionSausage?;
LABEL_32:
      outlined destroy of ModalityXRecognitionSausage?(v54, v53);
      goto LABEL_33;
    }
    outlined destroy of ModalityXRecognitionSausage?(v41, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage?(v40, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    outlined destroy of ModalityXRecognitionSausage();
LABEL_26:
    uint64_t v53 = &demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?);
    uint64_t v54 = v43;
    goto LABEL_32;
  }
  outlined destroy of ModalityXRecognitionSausage?(v41, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  outlined destroy of ModalityXRecognitionSausage?(v40, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_9(v44, 1, v10);
  if (!v52) {
    goto LABEL_26;
  }
  outlined destroy of ModalityXRecognitionSausage?(v43, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
LABEL_11:
  specialized static Array<A>.== infix(_:_:)();
  if (v45)
  {
    specialized static Array<A>.== infix(_:_:)();
    if (v46)
    {
      specialized static Array<A>.== infix(_:_:)();
      if (v47)
      {
        specialized static Array<A>.== infix(_:_:)();
        if (v48)
        {
          uint64_t v49 = v61;
          uint64_t v50 = *(void (**)(void))(v61 + 16);
          OUTLINED_FUNCTION_237_0();
          v50();
          OUTLINED_FUNCTION_237_0();
          v50();
          _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v51 = *(void (**)(void))(v49 + 8);
          OUTLINED_FUNCTION_284();
          v51();
          OUTLINED_FUNCTION_284();
          v51();
        }
      }
    }
  }
LABEL_33:
  OUTLINED_FUNCTION_16();
}

Swift::Int ModalityXRecognitionResult.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionResult, &lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionResult()
{
  return 0xD000000000000014;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXRecognitionResult())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionResult()
{
  return ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionResult()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionResult(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXLatnnMitigatorResult.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(23);
}

uint64_t static ModalityXLatnnMitigatorResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXLatnnMitigatorResult._protobuf_nameMap, a1);
}

uint64_t ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
        break;
      case 2:
        OUTLINED_FUNCTION_6_1();
        closure #2 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
        break;
      case 3:
        OUTLINED_FUNCTION_6_1();
        closure #3 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
        break;
      case 4:
        OUTLINED_FUNCTION_6_1();
        closure #4 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #2 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #4 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t ModalityXLatnnMitigatorResult.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v4);
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #4 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v5);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 20)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 28) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 32) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

void static ModalityXLatnnMitigatorResult.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXLatnnMitigatorResult(v5);
  OUTLINED_FUNCTION_238();
  if (v13)
  {
    if (v6 != 2) {
      goto LABEL_22;
    }
  }
  else
  {
    if (v6 == 2) {
      goto LABEL_22;
    }
    OUTLINED_FUNCTION_122();
    if ((v7 & 1) == 0) {
      goto LABEL_22;
    }
  }
  OUTLINED_FUNCTION_28();
  if (!v10)
  {
    if (v8) {
      goto LABEL_22;
    }
LABEL_16:
    OUTLINED_FUNCTION_235_0();
    if (v15)
    {
      if (!v14) {
        goto LABEL_22;
      }
    }
    else
    {
      OUTLINED_FUNCTION_230_0();
      if (v16) {
        goto LABEL_22;
      }
    }
    OUTLINED_FUNCTION_235_0();
    if (v18)
    {
      if (!v17) {
        goto LABEL_22;
      }
    }
    else
    {
      OUTLINED_FUNCTION_230_0();
      if (v19) {
        goto LABEL_22;
      }
    }
    uint64_t v20 = OUTLINED_FUNCTION_38_0();
    ((void (*)(uint64_t))v0)(v20);
    OUTLINED_FUNCTION_46();
    v0();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v21 = *(void (**)(void))(v2 + 8);
    OUTLINED_FUNCTION_65();
    v21();
    OUTLINED_FUNCTION_65();
    v21();
    goto LABEL_22;
  }
  if (v8)
  {
    OUTLINED_FUNCTION_21(v9);
    BOOL v13 = v13 && v11 == v12;
    if (v13) {
      goto LABEL_16;
    }
    uint64_t v0 = 0;
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_16;
    }
  }
LABEL_22:
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXLatnnMitigatorResult.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXLatnnMitigatorResult, &lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXLatnnMitigatorResult()
{
  return 0xD000000000000017;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2)
{
  return ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXLatnnMitigatorResult()
{
  return ModalityXLatnnMitigatorResult.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXLatnnMitigatorResult(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXRecognitionCandidate.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(23);
}

uint64_t static ModalityXRecognitionCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionCandidate._protobuf_nameMap, a1);
}

uint64_t type metadata accessor for ModalityXFinalSpeechRecognitionResponse(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t ModalityXRecognitionCandidate._StorageClass.init()()
{
  *(_DWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(unsigned char *)(v0 + 52) = 1;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v2 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  uint64_t v3 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection) = 4;
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v6 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  uint64_t v7 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v10 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = (void *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *uint64_t v11 = 0;
  v11[1] = 0;
  return v0;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v72 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v69 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v62 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 52) = 1;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 56) = 0;
  uint64_t v60 = (void *)(v1 + 56);
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v61 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v10 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  uint64_t v63 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v64 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection) = 4;
  uint64_t v13 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v65 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v14 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  uint64_t v66 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  uint64_t v67 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  char v16 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  uint64_t v68 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *char v16 = 0;
  v16[1] = 0;
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v70 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v18 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  char v19 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  unint64_t v71 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *char v19 = 0;
  v19[1] = 0;
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v20;
  *(void *)(v1 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v23 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v23;
  *(void *)(v1 + 40) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v22) = *(_DWORD *)(a1 + 48);
  char v24 = *(unsigned char *)(a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 48) = v22;
  *(unsigned char *)(v1 + 52) = v24;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v27 = v60;
  swift_beginAccess();
  *uint64_t v27 = v26;
  *(void *)(v1 + 64) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  uint64_t v29 = v62;
  outlined init with copy of ModalityXRecognitionSausage?(v28, v62, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v30 = v61;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v29, v30, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_endAccess();
  uint64_t v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  swift_beginAccess();
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  swift_beginAccess();
  *uint64_t v11 = v33;
  v11[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr);
  swift_beginAccess();
  uint64_t v35 = *v34;
  LOBYTE(v34) = *((unsigned char *)v34 + 8);
  uint64_t v36 = v63;
  swift_beginAccess();
  *(void *)uint64_t v36 = v35;
  *(unsigned char *)(v36 + 8) = (_BYTE)v34;
  uint64_t v37 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
  swift_beginAccess();
  LOBYTE(v37) = *v37;
  uint64_t v38 = v64;
  swift_beginAccess();
  *uint64_t v38 = (_BYTE)v37;
  uint64_t v39 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  uint64_t v40 = v69;
  outlined init with copy of ModalityXRecognitionSausage?(v39, v69, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v41 = v65;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v40, v41, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_endAccess();
  uint64_t v42 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  swift_beginAccess();
  LOBYTE(v42) = *v42;
  uint64_t v43 = v66;
  swift_beginAccess();
  *uint64_t v43 = (_BYTE)v42;
  uint64_t v44 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
  swift_beginAccess();
  uint64_t v45 = *v44;
  LOBYTE(v44) = *((unsigned char *)v44 + 8);
  uint64_t v46 = v67;
  swift_beginAccess();
  *(void *)uint64_t v46 = v45;
  *(unsigned char *)(v46 + 8) = (_BYTE)v44;
  char v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  swift_beginAccess();
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  uint64_t v50 = v68;
  swift_beginAccess();
  *uint64_t v50 = v49;
  v50[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  uint64_t v52 = v72;
  outlined init with copy of ModalityXRecognitionSausage?(v51, v72, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v53 = v70;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v52, v53, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_endAccess();
  uint64_t v54 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  swift_beginAccess();
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  swift_bridgeObjectRetain();
  swift_release();
  char v57 = v71;
  swift_beginAccess();
  *char v57 = v56;
  v57[1] = v55;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.__deallocating_deinit()
{
  return ModalityXRecognitionCandidate._StorageClass.__deallocating_deinit(ModalityXRecognitionCandidate._StorageClass.deinit);
}

uint64_t ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_294();
  ModalityXRecognitionCandidate._uniqueStorage()((uint64_t)type metadata accessor for ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate._StorageClass, (uint64_t (*)(void))ModalityXRecognitionCandidate._StorageClass.init(copying:));
  swift_release();
  type metadata accessor for ModalityXRecognitionCandidate(0);
  swift_retain();
  OUTLINED_FUNCTION_142_0();
  closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v0, v1, v2, v3);
  return swift_release();
}

void closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 2:
          closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 3:
          closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 4:
          closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 5:
          closure #5 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 6:
        case 12:
        case 14:
          closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 7:
        case 11:
          closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 8:
          uint64_t v11 = lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          char v16 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection;
          goto LABEL_13;
        case 9:
          closure #9 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 10:
          uint64_t v11 = lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          char v16 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection;
LABEL_13:
          closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v12, v13, v14, v15, (uint64_t)v16, (void (*)(uint64_t))v11);
          break;
        case 13:
          closure #13 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      uint64_t v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

uint64_t closure #5 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t closure #9 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t closure #13 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:));
}

uint64_t closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
  if (!v4)
  {
    closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #5 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
    closure #9 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #13 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    return closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #5 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #9 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #13 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #1 in static ModalityXRecognitionCandidate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v116 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x270FA5388](v116);
  uint64_t v112 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
  MEMORY[0x270FA5388](v114);
  uint64_t v117 = (uint64_t)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v113 = (uint64_t)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v115 = (uint64_t)&v110 - v9;
  uint64_t v122 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x270FA5388](v122);
  uint64_t v118 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?));
  MEMORY[0x270FA5388](v120);
  uint64_t v121 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v119 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v123 = (uint64_t)&v110 - v15;
  uint64_t v16 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?));
  MEMORY[0x270FA5388](v17);
  uint64_t v124 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v110 - v23;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v27 = *(void *)(a2 + 24);
  if (!v25)
  {
    if (v27) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v27) {
    return 0;
  }
  BOOL v28 = v26 == *(void *)(a2 + 16) && v25 == v27;
  if (v28 || (v29 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v29 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v31 = *(void *)(a1 + 32);
    uint64_t v32 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v33 = *(void *)(a2 + 40);
    if (v32)
    {
      if (!v33) {
        return 0;
      }
      if (v31 != *(void *)(a2 + 32) || v32 != v33)
      {
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v33)
    {
      return 0;
    }
    swift_beginAccess();
    int v36 = *(_DWORD *)(a1 + 48);
    uint64_t v110 = a1;
    char v37 = *(unsigned char *)(a1 + 52);
    swift_beginAccess();
    uint64_t v111 = a2;
    char v38 = *(unsigned char *)(a2 + 52);
    if (v37)
    {
      if (!*(unsigned char *)(a2 + 52)) {
        return 0;
      }
    }
    else
    {
      if (v36 != *(_DWORD *)(a2 + 48)) {
        char v38 = 1;
      }
      if (v38) {
        return 0;
      }
    }
    uint64_t v39 = v110;
    swift_beginAccess();
    uint64_t v40 = *(void *)(v39 + 56);
    uint64_t v41 = *(void *)(v39 + 64);
    uint64_t v42 = v111;
    swift_beginAccess();
    uint64_t v43 = *(void *)(v42 + 64);
    if (v41)
    {
      if (v43)
      {
        if (v40 != *(void *)(v42 + 56) || v41 != v43)
        {
          char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v45 & 1) == 0) {
            return result;
          }
        }
LABEL_34:
        uint64_t v46 = v39
            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        outlined init with copy of ModalityXRecognitionSausage?(v46, (uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        uint64_t v47 = v111
            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        uint64_t v48 = v124;
        uint64_t v49 = v124 + *(int *)(v17 + 48);
        outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v24, v124, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        outlined init with copy of ModalityXRecognitionSausage?(v47, v49, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        if (__swift_getEnumTagSinglePayload(v48, 1, v16) == 1)
        {
          uint64_t v50 = v110;
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v49, 1, v16) == 1)
          {
            outlined destroy of ModalityXRecognitionSausage?(v48, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
LABEL_45:
            uint64_t v55 = (uint64_t *)(v50
                            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
            swift_beginAccess();
            uint64_t v56 = *v55;
            uint64_t v57 = v55[1];
            uint64_t v58 = v111;
            uint64_t v59 = (void *)(v111
                           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
            swift_beginAccess();
            uint64_t v60 = v59[1];
            if (v57)
            {
              if (!v60) {
                goto LABEL_41;
              }
              BOOL v61 = v56 == *v59 && v57 == v60;
              if (!v61 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_41;
              }
            }
            else if (v60)
            {
              goto LABEL_41;
            }
            uint64_t v62 = v50
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
            swift_beginAccess();
            double v63 = *(double *)v62;
            uint64_t v64 = v58;
            char v65 = *(unsigned char *)(v62 + 8);
            uint64_t v66 = v64
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
            swift_beginAccess();
            if (v65)
            {
              uint64_t v67 = v123;
              if ((*(unsigned char *)(v66 + 8) & 1) == 0) {
                goto LABEL_41;
              }
            }
            else
            {
              uint64_t v67 = v123;
              if ((*(unsigned char *)(v66 + 8) & 1) != 0 || v63 != *(double *)v66) {
                goto LABEL_41;
              }
            }
            uint64_t v68 = (unsigned __int8 *)(v50
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
            swift_beginAccess();
            int v69 = *v68;
            uint64_t v70 = (unsigned __int8 *)(v111
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
            swift_beginAccess();
            int v71 = *v70;
            if (v69 == 4)
            {
              if (v71 != 4) {
                goto LABEL_41;
              }
            }
            else if (v71 == 4 || v69 != v71)
            {
              goto LABEL_41;
            }
            uint64_t v72 = v50
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            outlined init with copy of ModalityXRecognitionSausage?(v72, v67, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            uint64_t v73 = v111
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            uint64_t v74 = v121;
            uint64_t v75 = v121 + *(int *)(v120 + 48);
            outlined init with copy of ModalityXRecognitionSausage?(v67, v121, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined init with copy of ModalityXRecognitionSausage?(v73, v75, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            uint64_t v76 = v122;
            if (__swift_getEnumTagSinglePayload(v74, 1, v122) == 1)
            {
              outlined destroy of ModalityXRecognitionSausage?(v67, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              if (__swift_getEnumTagSinglePayload(v75, 1, v76) == 1)
              {
                outlined destroy of ModalityXRecognitionSausage?(v74, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
LABEL_68:
                uint64_t v77 = (unsigned __int8 *)(v50
                                        + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                int v78 = *v77;
                uint64_t v79 = v111;
                uint64_t v80 = (unsigned __int8 *)(v111
                                        + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                int v81 = *v80;
                if (v78 == 4)
                {
                  if (v81 != 4) {
                    goto LABEL_41;
                  }
                }
                else if (v81 == 4 || v78 != v81)
                {
                  goto LABEL_41;
                }
                uint64_t v85 = v50
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                double v86 = *(double *)v85;
                uint64_t v87 = v79;
                char v88 = *(unsigned char *)(v85 + 8);
                uint64_t v89 = v87
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                if (v88)
                {
                  if ((*(unsigned char *)(v89 + 8) & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                else if ((*(unsigned char *)(v89 + 8) & 1) != 0 || v86 != *(double *)v89)
                {
                  goto LABEL_41;
                }
                int v90 = (uint64_t *)(v110
                                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                uint64_t v91 = *v90;
                uint64_t v92 = v90[1];
                uint64_t v93 = (void *)(v111
                               + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                uint64_t v94 = v93[1];
                if (v92)
                {
                  if (!v94) {
                    goto LABEL_41;
                  }
                  BOOL v95 = v91 == *v93 && v92 == v94;
                  if (!v95 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                else if (v94)
                {
                  goto LABEL_41;
                }
                uint64_t v96 = v110
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                uint64_t v97 = v115;
                outlined init with copy of ModalityXRecognitionSausage?(v96, v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                uint64_t v98 = v111
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                uint64_t v99 = v117;
                uint64_t v100 = v117 + *(int *)(v114 + 48);
                outlined init with copy of ModalityXRecognitionSausage?(v97, v117, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                outlined init with copy of ModalityXRecognitionSausage?(v98, v100, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                if (__swift_getEnumTagSinglePayload(v99, 1, v116) == 1)
                {
                  outlined destroy of ModalityXRecognitionSausage?(v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v100, 1, v116) == 1)
                  {
                    outlined destroy of ModalityXRecognitionSausage?(v117, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    goto LABEL_102;
                  }
                }
                else
                {
                  outlined init with copy of ModalityXRecognitionSausage?(v117, v113, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v100, 1, v116) != 1)
                  {
                    outlined init with take of ModalityXRecognitionSausage();
                    static ModalityXLatnnMitigatorResult.== infix(_:_:)();
                    char v102 = v101;
                    outlined destroy of ModalityXRecognitionSausage();
                    outlined destroy of ModalityXRecognitionSausage?(v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    outlined destroy of ModalityXRecognitionSausage();
                    outlined destroy of ModalityXRecognitionSausage?(v117, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    if ((v102 & 1) == 0) {
                      goto LABEL_41;
                    }
LABEL_102:
                    uint64_t v103 = (uint64_t *)(v110
                                     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    uint64_t v104 = *v103;
                    uint64_t v105 = v103[1];
                    uint64_t v106 = (void *)(v111
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    uint64_t v107 = v106[1];
                    if (v105)
                    {
                      if (!v107) {
                        goto LABEL_41;
                      }
                      if (v104 == *v106 && v105 == v107)
                      {
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                      }
                      else
                      {
                        char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        uint64_t result = 0;
                        if ((v109 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else
                    {
                      swift_bridgeObjectRetain();
                      swift_release();
                      swift_release();
                      if (v107)
                      {
                        swift_bridgeObjectRelease();
                        return 0;
                      }
                    }
                    return 1;
                  }
                  outlined destroy of ModalityXRecognitionSausage?(v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  outlined destroy of ModalityXRecognitionSausage();
                }
                outlined destroy of ModalityXRecognitionSausage?(v117, &demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
LABEL_41:
                swift_release();
                swift_release();
                return 0;
              }
              goto LABEL_73;
            }
            outlined init with copy of ModalityXRecognitionSausage?(v74, v119, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            if (__swift_getEnumTagSinglePayload(v75, 1, v76) == 1)
            {
              outlined destroy of ModalityXRecognitionSausage?(v123, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              outlined destroy of ModalityXRecognitionSausage();
LABEL_73:
              uint64_t v51 = &demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?);
              uint64_t v52 = v74;
              goto LABEL_40;
            }
            outlined init with take of ModalityXRecognitionSausage();
            specialized static Array<A>.== infix(_:_:)();
            if (v82)
            {
              specialized static Array<A>.== infix(_:_:)();
              if (v83)
              {
                type metadata accessor for UnknownStorage();
                _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
                char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
                outlined destroy of ModalityXRecognitionSausage();
                outlined destroy of ModalityXRecognitionSausage?(v123, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                outlined destroy of ModalityXRecognitionSausage();
                outlined destroy of ModalityXRecognitionSausage?(v74, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                if ((v84 & 1) == 0) {
                  goto LABEL_41;
                }
                goto LABEL_68;
              }
            }
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?(v123, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined destroy of ModalityXRecognitionSausage();
            uint64_t v52 = v74;
            uint64_t v51 = &demangling cache variable for type metadata for ModalityXAudioAnalytics?;
LABEL_40:
            outlined destroy of ModalityXRecognitionSausage?(v52, v51);
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v50 = v110;
          outlined init with copy of ModalityXRecognitionSausage?(v48, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v49, 1, v16) != 1)
          {
            outlined init with take of ModalityXRecognitionSausage();
            swift_retain();
            swift_retain();
            static ModalityXRecognitionResult.== infix(_:_:)();
            char v54 = v53;
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?(v48, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            if ((v54 & 1) == 0) {
              goto LABEL_41;
            }
            goto LABEL_45;
          }
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          outlined destroy of ModalityXRecognitionSausage();
        }
        uint64_t v51 = &demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?);
        uint64_t v52 = v48;
        goto LABEL_40;
      }
    }
    else if (!v43)
    {
      goto LABEL_34;
    }
    return 0;
  }
  return result;
}

Swift::Int ModalityXRecognitionCandidate.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXRecognitionCandidate, &lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionCandidate()
{
  return 0xD000000000000017;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionCandidate()
{
  return ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionCandidate(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXItnAlignment.protoMessageName.getter()
{
  return 0x6C416E74492E584DLL;
}

uint64_t static ModalityXItnAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXItnAlignment._protobuf_nameMap, a1);
}

uint64_t ModalityXItnAlignment.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXItnAlignment.decodeMessage<A>(decoder:)();
        break;
      case 2:
        OUTLINED_FUNCTION_121_0(result, v4, v5, v6, type metadata accessor for ModalityXItnAlignment, MEMORY[0x263F50608]);
        break;
      case 3:
        OUTLINED_FUNCTION_225_0();
        break;
      case 4:
        OUTLINED_FUNCTION_226_0();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXItnAlignment.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #3 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_27_0();
  v1(v0);
  return OUTLINED_FUNCTION_168_0();
}

uint64_t closure #4 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_27_0();
  v1(v0);
  return OUTLINED_FUNCTION_168_0();
}

void ModalityXItnAlignment.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  closure #1 in ModalityXItnAlignment.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    OUTLINED_FUNCTION_224_0();
    OUTLINED_FUNCTION_222_0();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #1 in ModalityXItnAlignment.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXItnAlignment(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 20) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  }
  return result;
}

void closure #3 in ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_27_0();
  v1(v0);
  OUTLINED_FUNCTION_212_0();
  if ((v2 & 1) == 0) {
    OUTLINED_FUNCTION_123_0();
  }
}

void closure #4 in ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_27_0();
  v1(v0);
  OUTLINED_FUNCTION_212_0();
  if ((v2 & 1) == 0) {
    OUTLINED_FUNCTION_123_0();
  }
}

void static ModalityXItnAlignment.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v4 = OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXItnAlignment(v9);
  OUTLINED_FUNCTION_45();
  if (v11)
  {
    if (!v10) {
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_24();
    if (v12) {
      goto LABEL_15;
    }
  }
  OUTLINED_FUNCTION_45();
  if (v14)
  {
    if (!v13) {
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_24();
    if (v15) {
      goto LABEL_15;
    }
  }
  OUTLINED_FUNCTION_45();
  if (v17)
  {
    if (!v16) {
      goto LABEL_15;
    }
LABEL_13:
    OUTLINED_FUNCTION_45();
    if (v20)
    {
      if (!v19) {
        goto LABEL_15;
      }
    }
    else
    {
      OUTLINED_FUNCTION_24();
      if (v21) {
        goto LABEL_15;
      }
    }
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v22(v1, v3, v4);
    v22(v0, v2, v4);
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v23 = *(void (**)(uint64_t))(v6 + 8);
    uint64_t v24 = OUTLINED_FUNCTION_67();
    v23(v24);
    ((void (*)(uint64_t, uint64_t))v23)(v1, v4);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_24();
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_15:
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXItnAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXItnAlignment, &lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXItnAlignment()
{
  return 0x6C416E74492E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXItnAlignment(uint64_t a1, uint64_t a2)
{
  return ModalityXItnAlignment.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXItnAlignment()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXItnAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXItnAlignment(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXItnAlignment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXAcousticFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(18);
}

uint64_t static ModalityXAcousticFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAcousticFeature._protobuf_nameMap, a1);
}

uint64_t ModalityXAcousticFeature.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.decodeMessage<A>(decoder:)(a1, a2, a3, MEMORY[0x263F505D0], type metadata accessor for ModalityXAcousticFeature, MEMORY[0x263F505F8]);
}

uint64_t ModalityXRecognitionChoice.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = v6;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v7 || (v16 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(a1, v11, a2, a3, a5, a6);
    }
    else if (result == 1)
    {
      a4(v11, a2, a3);
    }
  }
  return result;
}

uint64_t ModalityXAcousticFeature.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionChoice.traverse<A>(visitor:)(a1, a2, a3, MEMORY[0x263F506D0], (uint64_t)type metadata accessor for ModalityXAcousticFeature, (uint64_t (*)(void))closure #1 in ModalityXAcousticFeature.traverse<A>(visitor:), (void (*)(void))type metadata accessor for ModalityXAcousticFeature);
}

uint64_t ModalityXRecognitionChoice.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(void), void (*a7)(void))
{
  if (!*(void *)(*(void *)v7 + 16) || (uint64_t result = a4(), !v8))
  {
    OUTLINED_FUNCTION_142_0();
    uint64_t result = a6();
    if (!v8)
    {
      a7(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

void static ModalityXAcousticFeature.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_33_0();
  if (specialized static Array<A>.== infix(_:_:)(v4, v5))
  {
    type metadata accessor for ModalityXAcousticFeature(0);
    OUTLINED_FUNCTION_45();
    if (v7)
    {
      if (!v6) {
        goto LABEL_7;
      }
    }
    else
    {
      OUTLINED_FUNCTION_290();
      if (v8) {
        goto LABEL_7;
      }
    }
    uint64_t v9 = *(void (**)(void))(v1 + 16);
    OUTLINED_FUNCTION_28_0();
    v9();
    OUTLINED_FUNCTION_28_0();
    v9();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    OUTLINED_FUNCTION_54();
    uint64_t v10 = OUTLINED_FUNCTION_67_0();
    ((void (*)(uint64_t))(v1 + 16))(v10);
    uint64_t v11 = OUTLINED_FUNCTION_193_0();
    ((void (*)(uint64_t))(v1 + 16))(v11);
  }
LABEL_7:
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXAcousticFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXAcousticFeature, &lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAcousticFeature()
{
  return 0xD000000000000012;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXAcousticFeature.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXAcousticFeature.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAcousticFeature(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechRecognitionFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(27);
}

uint64_t static ModalityXSpeechRecognitionFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechRecognitionFeature._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechRecognitionFeature.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      OUTLINED_FUNCTION_121_0(2, v4, v5, v6, type metadata accessor for ModalityXSpeechRecognitionFeature, MEMORY[0x263F505F8]);
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_120_0();
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #1 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_126_0();
  v1(v0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

void ModalityXSpeechRecognitionFeature.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_119_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_25();
    closure #1 in ModalityXAcousticFeature.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_82();
  }
}

uint64_t closure #1 in ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_126_0();
  uint64_t result = v2(v1);
  if (*(void *)(v0 + *(int *)(result + 20) + 8)) {
    return OUTLINED_FUNCTION_151();
  }
  return result;
}

void closure #1 in ModalityXAcousticFeature.traverse<A>(visitor:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_123();
  v1(v0);
  OUTLINED_FUNCTION_212_0();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_181_0();
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
}

void static ModalityXSpeechRecognitionFeature.== infix(_:_:)()
{
  OUTLINED_FUNCTION_38();
  uint64_t v2 = OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXSpeechRecognitionFeature(v7);
  OUTLINED_FUNCTION_28();
  if (v10)
  {
    if (!v8) {
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_21(v9);
    BOOL v13 = v13 && v11 == v12;
    if (!v13)
    {
      uint64_t v1 = 0;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_15;
      }
    }
  }
  else if (v8)
  {
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_45();
  if (v15)
  {
    if (!v14) {
      goto LABEL_15;
    }
  }
  else
  {
    OUTLINED_FUNCTION_290();
    if (v16) {
      goto LABEL_15;
    }
  }
  uint64_t v17 = OUTLINED_FUNCTION_38_0();
  ((void (*)(uint64_t))v1)(v17);
  OUTLINED_FUNCTION_46();
  v1();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
  OUTLINED_FUNCTION_54();
  char v18 = *(void (**)(void))(v4 + 8);
  OUTLINED_FUNCTION_65();
  v18();
  ((void (*)(uint64_t, uint64_t))v18)(v0, v2);
LABEL_15:
  OUTLINED_FUNCTION_37();
}

Swift::Int ModalityXSpeechRecognitionFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechRecognitionFeature, &lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechRecognitionFeature()
{
  return 0xD00000000000001BLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2)
{
  return ModalityXSpeechRecognitionFeature.decodeMessage<A>(decoder:)(a1, a2);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechRecognitionFeature()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechRecognitionFeature(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXAudioAnalyticsAcousticFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(32);
}

uint64_t static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap, a1);
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      OUTLINED_FUNCTION_6_1();
      closure #2 in ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_120_0();
    }
    OUTLINED_FUNCTION_118();
  }
  return result;
}

uint64_t closure #2 in ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_124();
  uint64_t result = OUTLINED_FUNCTION_119_0();
  if (!v0)
  {
    uint64_t v2 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)(v2);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #2 in ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXAcousticFeature(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v6 + 24), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

void static ModalityXAudioAnalyticsAcousticFeature.== infix(_:_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v38[0] = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_138_0(v8, v38[0]);
  MEMORY[0x270FA5388](v9);
  v38[1] = (uint64_t)v38 - v10;
  uint64_t v11 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_59();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  uint64_t v16 = OUTLINED_FUNCTION_7_0(v15);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  int v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_238_0();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v38 - v21;
  uint64_t v23 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v40 = v5;
  uint64_t v41 = v3;
  uint64_t v25 = *(void *)(v3 + v24 + 8);
  if (!*(void *)(v5 + v24 + 8))
  {
    if (v25) {
      goto LABEL_21;
    }
LABEL_10:
    outlined init with copy of ModalityXRecognitionSausage?(v40 + *(int *)(v23 + 24), (uint64_t)v22, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    outlined init with copy of ModalityXRecognitionSausage?(v41 + *(int *)(v23 + 24), v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    uint64_t v29 = v1 + *(int *)(v13 + 48);
    outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v22, v1, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    outlined init with copy of ModalityXRecognitionSausage?(v0, v29, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    OUTLINED_FUNCTION_9(v1, 1, v11);
    if (v28)
    {
      outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v22, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      OUTLINED_FUNCTION_9(v29, 1, v11);
      if (v28)
      {
        outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
        goto LABEL_20;
      }
    }
    else
    {
      outlined init with copy of ModalityXRecognitionSausage?(v1, (uint64_t)v19, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      OUTLINED_FUNCTION_9(v29, 1, v11);
      if (!v30)
      {
        outlined init with take of ModalityXRecognitionSausage();
        static ModalityXAcousticFeature.== infix(_:_:)();
        char v32 = v31;
        outlined destroy of ModalityXRecognitionSausage();
        uint64_t v33 = OUTLINED_FUNCTION_103();
        outlined destroy of ModalityXRecognitionSausage?(v33, v34);
        outlined destroy of ModalityXRecognitionSausage?((uint64_t)v22, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
        outlined destroy of ModalityXRecognitionSausage();
        outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
        if ((v32 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_20:
        uint64_t v35 = v39;
        int v36 = *(void (**)(void))(v39 + 16);
        OUTLINED_FUNCTION_237_0();
        v36();
        OUTLINED_FUNCTION_237_0();
        v36();
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        OUTLINED_FUNCTION_189_0();
        dispatch thunk of static Equatable.== infix(_:_:)();
        char v37 = *(void (**)(void))(v35 + 8);
        OUTLINED_FUNCTION_284();
        v37();
        OUTLINED_FUNCTION_284();
        v37();
        goto LABEL_21;
      }
      outlined destroy of ModalityXRecognitionSausage?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v22, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      outlined destroy of ModalityXRecognitionSausage();
    }
    outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
    goto LABEL_21;
  }
  if (v25)
  {
    OUTLINED_FUNCTION_21(v5 + v24);
    BOOL v28 = v28 && v26 == v27;
    if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      goto LABEL_10;
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_16();
}

Swift::Int ModalityXAudioAnalyticsAcousticFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, &lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  return 0xD000000000000020;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2)
{
  return ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  return ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioAnalyticsAcousticFeature(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXAudioAnalytics.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(17);
}

uint64_t static ModalityXAudioAnalytics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioAnalytics._protobuf_nameMap, a1);
}

uint64_t ModalityXAudioAnalytics.decodeMessage<A>(decoder:)()
{
  uint64_t result = OUTLINED_FUNCTION_209();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        OUTLINED_FUNCTION_92_0();
      }
      else if (result == 1)
      {
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
      }
      uint64_t result = OUTLINED_FUNCTION_240_0();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_147_0();
  v0(0);
  OUTLINED_FUNCTION_232_0();
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t closure #2 in ModalityXChoiceAlignment.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_147_0();
  v0(0);
  OUTLINED_FUNCTION_232_0();
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

void ModalityXAudioAnalytics.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_129_0();
  OUTLINED_FUNCTION_11_0();
  if (!v2
    || (type metadata accessor for ModalityXSpeechRecognitionFeature(0),
        uint64_t v3 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature), OUTLINED_FUNCTION_9_0(v3), !v0))
  {
    uint64_t v4 = *(void *)(v1 + 8);
    if (!*(void *)(v4 + 16)
      || (type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0),
          uint64_t v5 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature), OUTLINED_FUNCTION_15_0(v4, 2, v6, v5), !v0))
    {
      type metadata accessor for ModalityXAudioAnalytics(0);
      OUTLINED_FUNCTION_19_0();
    }
  }
  OUTLINED_FUNCTION_141_0();
}

void static ModalityXAudioAnalytics.== infix(_:_:)()
{
  static ModalityXChoiceAlignment.== infix(_:_:)();
}

Swift::Int ModalityXAudioAnalytics.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXAudioAnalytics, &lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioAnalytics()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioAnalytics()
{
  return ModalityXAudioAnalytics.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioAnalytics()
{
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioAnalytics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioAnalytics(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioAnalytics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXFinalSpeechRecognitionResponse.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(33);
}

uint64_t static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap, a1);
}

uint64_t one-time initialization function for defaultInstance(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = OUTLINED_FUNCTION_35_0();
  v7(v6);
  OUTLINED_FUNCTION_29();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.init()()
{
  *(_DWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(unsigned char *)(v0 + 52) = 1;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v2 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes) = 5;
  uint64_t v3 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v4 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  uint64_t v5 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v8 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  uint64_t v9 = (void *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *uint64_t v9 = 0;
  v9[1] = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p) = 2;
  return v0;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v66 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 52) = 1;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 56) = 0;
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v55 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  uint64_t v10 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  *uint64_t v11 = 5;
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v57 = v11;
  uint64_t v58 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  uint64_t v13 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  uint64_t v14 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  *uint64_t v14 = 4;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  uint64_t v59 = v14;
  uint64_t v60 = v15;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  BOOL v61 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v63 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  uint64_t v18 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  int v19 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  uint64_t v64 = (void *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *int v19 = 0;
  v19[1] = 0;
  char v65 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p) = 2;
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v20;
  *(void *)(v1 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = *(void *)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v22;
  *(void *)(v1 + 40) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v22) = *(_DWORD *)(a1 + 48);
  LOBYTE(v23) = *(unsigned char *)(a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 48) = v22;
  *(unsigned char *)(v1 + 52) = v23;
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v25 = *(void *)(a1 + 64);
  swift_beginAccess();
  *(void *)(v1 + 56) = v24;
  *(void *)(v1 + 64) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  uint64_t v27 = v26;
  uint64_t v28 = v56;
  outlined init with copy of ModalityXRecognitionSausage?(v27, v56, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v29 = v55;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v28, v29, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_endAccess();
  char v30 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  swift_beginAccess();
  LOBYTE(v24) = *v30;
  char v31 = v57;
  swift_beginAccess();
  unsigned char *v31 = v24;
  uint64_t v32 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  uint64_t v33 = v32;
  uint64_t v34 = v62;
  outlined init with copy of ModalityXRecognitionSausage?(v33, v62, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v35 = v58;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v34, v35, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_endAccess();
  int v36 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  swift_beginAccess();
  LOBYTE(v24) = *v36;
  char v37 = v59;
  swift_beginAccess();
  *char v37 = v24;
  char v38 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
  swift_beginAccess();
  uint64_t v39 = *v38;
  LOBYTE(v38) = *((unsigned char *)v38 + 8);
  uint64_t v40 = v60;
  swift_beginAccess();
  *(void *)uint64_t v40 = v39;
  *(unsigned char *)(v40 + 8) = (_BYTE)v38;
  uint64_t v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  swift_beginAccess();
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = v61;
  swift_beginAccess();
  *uint64_t v44 = v42;
  v44[1] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  uint64_t v46 = v66;
  outlined init with copy of ModalityXRecognitionSausage?(v45, v66, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v47 = v63;
  swift_beginAccess();
  outlined assign with take of ModalityXRecognitionResult?(v46, v47, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_endAccess();
  uint64_t v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  swift_beginAccess();
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  uint64_t v51 = v64;
  swift_beginAccess();
  *uint64_t v51 = v50;
  v51[1] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  swift_beginAccess();
  LOBYTE(v52) = *v52;
  swift_release();
  char v53 = v65;
  swift_beginAccess();
  *char v53 = (_BYTE)v52;
  return v1;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXRecognitionSausage?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.__deallocating_deinit()
{
  return ModalityXRecognitionCandidate._StorageClass.__deallocating_deinit(ModalityXFinalSpeechRecognitionResponse._StorageClass.deinit);
}

uint64_t ModalityXRecognitionCandidate._StorageClass.__deallocating_deinit(uint64_t (*a1)(void))
{
  a1();

  return MEMORY[0x270FA0228]();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_294();
  ModalityXRecognitionCandidate._uniqueStorage()((uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass, (uint64_t (*)(void))ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:));
  swift_release();
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  swift_retain();
  OUTLINED_FUNCTION_142_0();
  closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)(v0, v1, v2, v3);
  return swift_release();
}

void closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 2:
          closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 3:
          closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 4:
          closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 5:
          closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
          break;
        case 6:
          uint64_t v11 = lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes;
          goto LABEL_13;
        case 7:
          closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
          break;
        case 8:
          uint64_t v11 = lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
          uint64_t v12 = a2;
          uint64_t v13 = a1;
          uint64_t v14 = a3;
          uint64_t v15 = a4;
          uint64_t v16 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection;
LABEL_13:
          closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v12, v13, v14, v15, (uint64_t)v16, (void (*)(uint64_t))v11);
          break;
        case 9:
          closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 10:
        case 12:
          closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 11:
          closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
          break;
        case 13:
          closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      uint64_t v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

void closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

void closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

void closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

void closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

uint64_t closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7 = swift_beginAccess();
  a6(v7);
  dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
  return OUTLINED_FUNCTION_243();
}

void closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

uint64_t closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

void closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
}

uint64_t closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  return swift_endAccess();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:));
}

uint64_t ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_124();
  uint64_t v10 = OUTLINED_FUNCTION_23_0();
  v11(v10);
  uint64_t v12 = swift_retain();
  a5(v12, v8, v7, v5);
  uint64_t result = swift_release();
  if (!v6) {
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
  if (!v4)
  {
    closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #6 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    return closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
  }
  return result;
}

uint64_t closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_98_0();
  uint64_t result = OUTLINED_FUNCTION_76_0();
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_151();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_98_0();
  uint64_t result = OUTLINED_FUNCTION_76_0();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_151();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
    return OUTLINED_FUNCTION_123_0();
  }
  return result;
}

uint64_t closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_98_0();
  uint64_t result = OUTLINED_FUNCTION_76_0();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_151();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #6 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  uint64_t result = swift_beginAccess();
  if (*v1 != 5)
  {
    lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t))
{
  uint64_t v7 = (unsigned char *)(a1 + *a5);
  uint64_t result = swift_beginAccess();
  if (*v7 != 4)
  {
    a6(result);
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_217();
  uint64_t v2 = v0 + v1;
  uint64_t result = OUTLINED_FUNCTION_76_0();
  if ((*(unsigned char *)(v2 + 8) & 1) == 0)
  {
    OUTLINED_FUNCTION_181_0();
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v6, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  outlined init with take of ModalityXRecognitionSausage();
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXRecognitionSausage();
}

uint64_t closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  uint64_t result = swift_beginAccess();
  if (*v1 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #1 in static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v108 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x270FA5388](v108);
  uint64_t v105 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v106 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v110 = (uint64_t)&v103 - v9;
  uint64_t v115 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x270FA5388](v115);
  uint64_t v111 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?));
  MEMORY[0x270FA5388](v113);
  uint64_t v114 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v112 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v116 = (char *)&v103 - v15;
  uint64_t v16 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?));
  MEMORY[0x270FA5388](v17);
  uint64_t v117 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v103 - v23;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v27 = *(void *)(a2 + 24);
  if (!v25)
  {
    if (v27) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v27) {
    return 0;
  }
  BOOL v28 = v26 == *(void *)(a2 + 16) && v25 == v27;
  if (v28 || (v29 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v29 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v31 = *(void *)(a1 + 32);
    uint64_t v32 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v33 = *(void *)(a2 + 40);
    if (v32)
    {
      if (!v33) {
        return 0;
      }
      if (v31 != *(void *)(a2 + 32) || v32 != v33)
      {
        char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v33)
    {
      return 0;
    }
    swift_beginAccess();
    int v36 = *(_DWORD *)(a1 + 48);
    uint64_t v103 = a1;
    char v37 = *(unsigned char *)(a1 + 52);
    swift_beginAccess();
    uint64_t v104 = a2;
    char v38 = *(unsigned char *)(a2 + 52);
    if (v37)
    {
      if (!*(unsigned char *)(a2 + 52)) {
        return 0;
      }
    }
    else
    {
      if (v36 != *(_DWORD *)(a2 + 48)) {
        char v38 = 1;
      }
      if (v38) {
        return 0;
      }
    }
    uint64_t v39 = v103;
    swift_beginAccess();
    uint64_t v40 = *(void *)(v39 + 56);
    uint64_t v41 = *(void *)(v39 + 64);
    uint64_t v42 = v104;
    swift_beginAccess();
    uint64_t v43 = *(void *)(v42 + 64);
    if (v41)
    {
      if (v43)
      {
        if (v40 != *(void *)(v42 + 56) || v41 != v43)
        {
          char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v45 & 1) == 0) {
            return result;
          }
        }
LABEL_34:
        uint64_t v46 = v39
            + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        outlined init with copy of ModalityXRecognitionSausage?(v46, (uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        uint64_t v47 = v104
            + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        uint64_t v48 = v117;
        uint64_t v49 = v117 + *(int *)(v17 + 48);
        outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v24, v117, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        outlined init with copy of ModalityXRecognitionSausage?(v47, v49, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        if (__swift_getEnumTagSinglePayload(v48, 1, v16) == 1)
        {
          uint64_t v50 = v103;
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v49, 1, v16) == 1)
          {
            outlined destroy of ModalityXRecognitionSausage?(v48, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
LABEL_44:
            uint64_t v55 = (unsigned __int8 *)(v50
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
            swift_beginAccess();
            int v56 = *v55;
            uint64_t v57 = (unsigned __int8 *)(v104
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
            swift_beginAccess();
            int v58 = *v57;
            if (v56 == 5)
            {
              uint64_t v59 = (uint64_t)v116;
              if (v58 != 5) {
                goto LABEL_41;
              }
            }
            else
            {
              uint64_t v59 = (uint64_t)v116;
              if (v58 == 5 || v56 != v58) {
                goto LABEL_41;
              }
            }
            uint64_t v60 = v50
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            outlined init with copy of ModalityXRecognitionSausage?(v60, v59, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            uint64_t v61 = v104
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            uint64_t v62 = v114;
            uint64_t v63 = v114 + *(int *)(v113 + 48);
            outlined init with copy of ModalityXRecognitionSausage?(v59, v114, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined init with copy of ModalityXRecognitionSausage?(v61, v63, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            uint64_t v64 = v115;
            if (__swift_getEnumTagSinglePayload(v62, 1, v115) == 1)
            {
              outlined destroy of ModalityXRecognitionSausage?(v59, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              if (__swift_getEnumTagSinglePayload(v63, 1, v64) == 1)
              {
                outlined destroy of ModalityXRecognitionSausage?(v62, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
LABEL_52:
                char v65 = (unsigned __int8 *)(v50
                                        + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                int v66 = *v65;
                uint64_t v67 = v104;
                uint64_t v68 = (unsigned __int8 *)(v104
                                        + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                int v69 = *v68;
                if (v66 == 4)
                {
                  if (v69 != 4) {
                    goto LABEL_41;
                  }
                }
                else if (v69 == 4 || v66 != v69)
                {
                  goto LABEL_41;
                }
                uint64_t v73 = v50
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                double v74 = *(double *)v73;
                uint64_t v75 = v67;
                char v76 = *(unsigned char *)(v73 + 8);
                uint64_t v77 = v75
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                if (v76)
                {
                  if ((*(unsigned char *)(v77 + 8) & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                else if ((*(unsigned char *)(v77 + 8) & 1) != 0 || v74 != *(double *)v77)
                {
                  goto LABEL_41;
                }
                int v78 = (uint64_t *)(v50
                                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                uint64_t v79 = *v78;
                uint64_t v80 = v78[1];
                uint64_t v81 = v104;
                char v82 = (void *)(v104
                               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                uint64_t v83 = v82[1];
                if (v80)
                {
                  if (!v83) {
                    goto LABEL_41;
                  }
                  BOOL v84 = v79 == *v82 && v80 == v83;
                  if (!v84 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                    goto LABEL_41;
                  }
                }
                else if (v83)
                {
                  goto LABEL_41;
                }
                uint64_t v85 = v50
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                uint64_t v86 = v110;
                outlined init with copy of ModalityXRecognitionSausage?(v85, v110, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                uint64_t v87 = v81
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                uint64_t v88 = v109;
                uint64_t v89 = v109 + *(int *)(v107 + 48);
                outlined init with copy of ModalityXRecognitionSausage?(v86, v109, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                outlined init with copy of ModalityXRecognitionSausage?(v87, v89, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                uint64_t v90 = v108;
                if (__swift_getEnumTagSinglePayload(v88, 1, v108) == 1)
                {
                  outlined destroy of ModalityXRecognitionSausage?(v110, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v89, 1, v90) == 1)
                  {
                    outlined destroy of ModalityXRecognitionSausage?(v88, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    goto LABEL_87;
                  }
                }
                else
                {
                  outlined init with copy of ModalityXRecognitionSausage?(v88, v106, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v89, 1, v90) != 1)
                  {
                    outlined init with take of ModalityXRecognitionSausage();
                    static ModalityXLatnnMitigatorResult.== infix(_:_:)();
                    char v92 = v91;
                    outlined destroy of ModalityXRecognitionSausage();
                    outlined destroy of ModalityXRecognitionSausage?(v110, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    outlined destroy of ModalityXRecognitionSausage();
                    outlined destroy of ModalityXRecognitionSausage?(v109, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    if ((v92 & 1) == 0) {
                      goto LABEL_41;
                    }
LABEL_87:
                    uint64_t v93 = (uint64_t *)(v103
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    uint64_t v94 = *v93;
                    uint64_t v95 = v93[1];
                    uint64_t v96 = (void *)(v104
                                   + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    uint64_t v97 = v96[1];
                    if (v95)
                    {
                      if (!v97) {
                        goto LABEL_41;
                      }
                      BOOL v98 = v94 == *v96 && v95 == v97;
                      if (!v98 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                        goto LABEL_41;
                      }
                    }
                    else if (v97)
                    {
                      goto LABEL_41;
                    }
                    uint64_t v99 = (unsigned __int8 *)(v103
                                            + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
                    swift_beginAccess();
                    int v100 = *v99;
                    swift_release();
                    char v101 = (unsigned __int8 *)(v104
                                             + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
                    swift_beginAccess();
                    int v102 = *v101;
                    swift_release();
                    if (v100 == 2)
                    {
                      if (v102 != 2) {
                        return 0;
                      }
                    }
                    else if (v102 == 2 || ((((v102 & 1) == 0) ^ v100) & 1) == 0)
                    {
                      return 0;
                    }
                    return 1;
                  }
                  outlined destroy of ModalityXRecognitionSausage?(v110, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  outlined destroy of ModalityXRecognitionSausage();
                  uint64_t v88 = v109;
                }
                outlined destroy of ModalityXRecognitionSausage?(v88, &demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
LABEL_41:
                swift_release();
                swift_release();
                return 0;
              }
              goto LABEL_57;
            }
            outlined init with copy of ModalityXRecognitionSausage?(v62, v112, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            if (__swift_getEnumTagSinglePayload(v63, 1, v64) == 1)
            {
              outlined destroy of ModalityXRecognitionSausage?(v59, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              outlined destroy of ModalityXRecognitionSausage();
LABEL_57:
              uint64_t v51 = &demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?);
              uint64_t v52 = v62;
              goto LABEL_40;
            }
            outlined init with take of ModalityXRecognitionSausage();
            specialized static Array<A>.== infix(_:_:)();
            if (v70)
            {
              specialized static Array<A>.== infix(_:_:)();
              if (v71)
              {
                type metadata accessor for UnknownStorage();
                _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
                char v72 = dispatch thunk of static Equatable.== infix(_:_:)();
                outlined destroy of ModalityXRecognitionSausage();
                outlined destroy of ModalityXRecognitionSausage?(v59, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                outlined destroy of ModalityXRecognitionSausage();
                outlined destroy of ModalityXRecognitionSausage?(v62, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                if ((v72 & 1) == 0) {
                  goto LABEL_41;
                }
                goto LABEL_52;
              }
            }
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?(v59, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined destroy of ModalityXRecognitionSausage();
            uint64_t v52 = v62;
            uint64_t v51 = &demangling cache variable for type metadata for ModalityXAudioAnalytics?;
LABEL_40:
            outlined destroy of ModalityXRecognitionSausage?(v52, v51);
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v50 = v103;
          outlined init with copy of ModalityXRecognitionSausage?(v48, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v49, 1, v16) != 1)
          {
            outlined init with take of ModalityXRecognitionSausage();
            swift_retain();
            swift_retain();
            static ModalityXRecognitionResult.== infix(_:_:)();
            char v54 = v53;
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            outlined destroy of ModalityXRecognitionSausage();
            outlined destroy of ModalityXRecognitionSausage?(v48, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            if ((v54 & 1) == 0) {
              goto LABEL_41;
            }
            goto LABEL_44;
          }
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          outlined destroy of ModalityXRecognitionSausage();
        }
        uint64_t v51 = &demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?);
        uint64_t v52 = v48;
        goto LABEL_40;
      }
    }
    else if (!v43)
    {
      goto LABEL_34;
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ModalityXRecognitionToken(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionToken);
}

uint64_t type metadata accessor for ModalityXRecognitionPhraseTokens(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionPhraseTokens);
}

uint64_t type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t type metadata accessor for ModalityXRecognitionSausage(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionSausage);
}

uint64_t type metadata accessor for ModalityXSetAlternateRecognitionSausage(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSetAlternateRecognitionSausage);
}

uint64_t type metadata accessor for ModalityXRecognitionChoice(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionChoice);
}

uint64_t type metadata accessor for ModalityXRepeatedItnAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRepeatedItnAlignment);
}

uint64_t type metadata accessor for ModalityXChoiceAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXChoiceAlignment);
}

uint64_t type metadata accessor for ModalityXRecognitionResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionResult);
}

uint64_t type metadata accessor for ModalityXLatnnMitigatorResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXLatnnMitigatorResult);
}

uint64_t type metadata accessor for ModalityXRecognitionCandidate._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionCandidate._StorageClass);
}

uint64_t outlined init with take of ModalityXRecognitionSausage()
{
  uint64_t v1 = OUTLINED_FUNCTION_218_0();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v3();
  return v0;
}

uint64_t outlined init with copy of ModalityXRecognitionSausage()
{
  uint64_t v1 = OUTLINED_FUNCTION_218_0();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v3();
  return v0;
}

uint64_t outlined destroy of ModalityXRecognitionSausage()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(v0);
  return v0;
}

uint64_t type metadata accessor for ModalityXAudioAnalytics(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioAnalytics);
}

uint64_t outlined init with take of ModalityXRecognitionResult?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_175_0(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v4();
  return v3;
}

uint64_t outlined assign with take of ModalityXRecognitionResult?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_175_0(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0();
  v4();
  return v3;
}

uint64_t type metadata accessor for ModalityXItnAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXItnAlignment);
}

uint64_t type metadata accessor for ModalityXAcousticFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAcousticFeature);
}

uint64_t type metadata accessor for ModalityXSpeechRecognitionFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechRecognitionFeature);
}

uint64_t type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioAnalyticsAcousticFeature);
}

uint64_t outlined init with copy of ModalityXRecognitionSausage?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_175_0(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100();
  v4();
  return v3;
}

uint64_t type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXFinalSpeechRecognitionResponse._StorageClass);
}

uint64_t _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int ModalityXFinalSpeechRecognitionResponse.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter((void (*)(void))type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

Swift::Int ModalityXRecognitionToken.hashValue.getter(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXFinalSpeechRecognitionResponse()
{
  return 0xD000000000000021;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXFinalSpeechRecognitionResponse()
{
  return ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXFinalSpeechRecognitionResponse(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionToken()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionToken()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionToken()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionToken()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionToken);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionPhraseTokens()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionPhraseTokens()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionPhraseTokens()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionPhraseTokens()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionPhraseTokensAlternatives()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionPhraseTokensAlternatives()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionPhraseTokensAlternatives()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionPhraseTokensAlternatives()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSetAlternateRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

uint64_t base witness table accessor for Message in ModalityXSetAlternateRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

uint64_t base witness table accessor for Hashable in ModalityXSetAlternateRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

uint64_t base witness table accessor for Equatable in ModalityXSetAlternateRecognitionSausage()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (void (*)(uint64_t))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionChoice()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionChoice()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionChoice()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionChoice()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRepeatedItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t base witness table accessor for Message in ModalityXRepeatedItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t base witness table accessor for Hashable in ModalityXRepeatedItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t base witness table accessor for Equatable in ModalityXRepeatedItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXChoiceAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
}

uint64_t base witness table accessor for Message in ModalityXChoiceAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
}

uint64_t base witness table accessor for Hashable in ModalityXChoiceAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
}

uint64_t base witness table accessor for Equatable in ModalityXChoiceAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXChoiceAlignment);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXLatnnMitigatorResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
}

uint64_t base witness table accessor for Message in ModalityXLatnnMitigatorResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
}

uint64_t base witness table accessor for Hashable in ModalityXLatnnMitigatorResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
}

uint64_t base witness table accessor for Equatable in ModalityXLatnnMitigatorResult()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionCandidate()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
}

uint64_t base witness table accessor for Message in ModalityXRecognitionCandidate()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
}

uint64_t base witness table accessor for Hashable in ModalityXRecognitionCandidate()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
}

uint64_t base witness table accessor for Equatable in ModalityXRecognitionCandidate()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionCandidate);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
}

uint64_t base witness table accessor for Message in ModalityXItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
}

uint64_t base witness table accessor for Hashable in ModalityXItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
}

uint64_t base witness table accessor for Equatable in ModalityXItnAlignment()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (void (*)(uint64_t))type metadata accessor for ModalityXItnAlignment);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
}

uint64_t base witness table accessor for Message in ModalityXAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
}

uint64_t base witness table accessor for Hashable in ModalityXAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
}

uint64_t base witness table accessor for Equatable in ModalityXAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechRecognitionFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);
}

uint64_t base witness table accessor for Message in ModalityXSpeechRecognitionFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechRecognitionFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechRecognitionFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechRecognitionFeature);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAudioAnalyticsAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

uint64_t base witness table accessor for Message in ModalityXAudioAnalyticsAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

uint64_t base witness table accessor for Hashable in ModalityXAudioAnalyticsAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

uint64_t base witness table accessor for Equatable in ModalityXAudioAnalyticsAcousticFeature()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAudioAnalytics()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
}

uint64_t base witness table accessor for Message in ModalityXAudioAnalytics()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
}

uint64_t base witness table accessor for Hashable in ModalityXAudioAnalytics()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
}

uint64_t base witness table accessor for Equatable in ModalityXAudioAnalytics()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXFinalSpeechRecognitionResponse()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t base witness table accessor for Message in ModalityXFinalSpeechRecognitionResponse()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t base witness table accessor for Hashable in ModalityXFinalSpeechRecognitionResponse()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t base witness table accessor for Equatable in ModalityXFinalSpeechRecognitionResponse()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (void (*)(uint64_t))type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t sub_256A037EC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.tokenText.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A03818()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.startMilliSeconds.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A03840(unsigned int *a1)
{
}

uint64_t sub_256A03864()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.endMilliSeconds.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A0388C(unsigned int *a1)
{
}

uint64_t sub_256A038B0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.silenceStartMilliSeconds.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A038D8(unsigned int *a1)
{
}

uint64_t sub_256A038FC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.confidence.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A03924(unsigned int *a1)
{
}

uint64_t sub_256A03948()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXRecognitionToken.addSpaceAfter.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_256A03970(unsigned __int8 *a1)
{
  char v1 = OUTLINED_FUNCTION_105(a1);
  return ModalityXRecognitionToken.addSpaceAfter.setter(v1);
}

uint64_t sub_256A03994()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.phoneSeq.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A039C0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionToken.ipaPhoneSeq.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A039EC()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_256A03A14(unsigned __int8 *a1)
{
  return ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.setter();
}

uint64_t sub_256A03A38()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionChoice.confidence.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A03A60(unsigned int *a1)
{
}

uint64_t sub_256A03A84()
{
  return ModalityXRecognitionResult.preItn.getter();
}

uint64_t sub_256A03AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)type metadata accessor for ModalityXRecognitionSausage, (uint64_t (*)(char *))ModalityXRecognitionResult.preItn.setter);
}

uint64_t sub_256A03AFC()
{
  return ModalityXRecognitionResult.postItn.getter();
}

uint64_t sub_256A03B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)type metadata accessor for ModalityXRecognitionSausage, (uint64_t (*)(char *))ModalityXRecognitionResult.postItn.setter);
}

uint64_t sub_256A03B74()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXLatnnMitigatorResult.processed.getter();
  return OUTLINED_FUNCTION_106(v0);
}

uint64_t sub_256A03B9C(unsigned __int8 *a1)
{
  return ModalityXLatnnMitigatorResult.processed.setter();
}

uint64_t sub_256A03BC0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXLatnnMitigatorResult.version.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A03BEC()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXLatnnMitigatorResult.threshold.getter();
}

void sub_256A03C14(uint64_t a1)
{
  double v1 = OUTLINED_FUNCTION_185_0(a1);
  ModalityXLatnnMitigatorResult.threshold.setter(v1);
}

void sub_256A03C38()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXLatnnMitigatorResult.score.getter();
}

void sub_256A03C60(uint64_t a1)
{
  double v1 = OUTLINED_FUNCTION_185_0(a1);
  ModalityXLatnnMitigatorResult.score.setter(v1);
}

uint64_t sub_256A03C84()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.speechID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A03CB0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.sessionID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A03CDC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.returnCode.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A03D04(unsigned int *a1)
{
  ModalityXRecognitionCandidate.returnCode.setter();
}

uint64_t sub_256A03D28()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.returnStr.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A03D54()
{
  return ModalityXRecognitionCandidate.recognitionResult.getter();
}

uint64_t sub_256A03D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionResult, (uint64_t)type metadata accessor for ModalityXRecognitionResult, (uint64_t (*)(char *))ModalityXRecognitionCandidate.recognitionResult.setter);
}

uint64_t sub_256A03DCC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.resultID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A03DF8()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXRecognitionCandidate.snr.getter();
}

uint64_t sub_256A03E20(uint64_t a1)
{
  double v1 = OUTLINED_FUNCTION_185_0(a1);
  return ModalityXRecognitionCandidate.snr.setter(v1);
}

uint64_t sub_256A03E44@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXRecognitionCandidate.fingerprintDetection.getter(a1);
}

uint64_t sub_256A03E6C()
{
  return ModalityXRecognitionCandidate.audioAnalytics.getter();
}

uint64_t sub_256A03E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)type metadata accessor for ModalityXAudioAnalytics, (uint64_t (*)(char *))ModalityXRecognitionCandidate.audioAnalytics.setter);
}

uint64_t sub_256A03EE4@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXRecognitionCandidate.watermarkDetection.getter(a1);
}

void sub_256A03F0C()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXRecognitionCandidate.watermarkPeakAverage.getter();
}

uint64_t sub_256A03F34(uint64_t a1)
{
  double v1 = OUTLINED_FUNCTION_185_0(a1);
  return ModalityXRecognitionCandidate.watermarkPeakAverage.setter(v1);
}

uint64_t sub_256A03F58()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.language.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A03F84()
{
  return ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
}

uint64_t sub_256A03FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t (*)(char *))ModalityXRecognitionCandidate.latnnMitigatorResult.setter);
}

uint64_t sub_256A03FFC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXRecognitionCandidate.requestLocale.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A04028()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXItnAlignment.firstPreItnTokenIndex.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A04050(unsigned int *a1)
{
}

uint64_t sub_256A04074()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXItnAlignment.lastPreItnTokenIndex.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A0409C(unsigned int *a1)
{
}

uint64_t sub_256A040C0()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXItnAlignment.firstPostItnCharPos.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A040E8(unsigned int *a1)
{
}

uint64_t sub_256A0410C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXItnAlignment.lastPostItnCharPos.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A04134(unsigned int *a1)
{
}

void sub_256A04158()
{
  OUTLINED_FUNCTION_18();
  float *v0 = ModalityXAcousticFeature.frameDuration.getter();
}

uint64_t sub_256A04180(float *a1)
{
  return ModalityXAcousticFeature.frameDuration.setter(*a1);
}

uint64_t sub_256A041A8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXSpeechRecognitionFeature.key.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A041D4()
{
  OUTLINED_FUNCTION_18();
  float *v0 = ModalityXSpeechRecognitionFeature.value.getter();
}

uint64_t sub_256A041FC(float *a1)
{
  return ModalityXSpeechRecognitionFeature.value.setter(*a1);
}

uint64_t sub_256A04224()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXAudioAnalyticsAcousticFeature.key.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A04250@<X0>(uint64_t a1@<X8>)
{
  return ModalityXAudioAnalyticsAcousticFeature.value.getter(a1);
}

uint64_t sub_256A04274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAcousticFeature, (uint64_t)type metadata accessor for ModalityXAcousticFeature, (uint64_t (*)(char *))ModalityXAudioAnalyticsAcousticFeature.value.setter);
}

uint64_t sub_256A042C8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.speechID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A042F4()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.sessionID.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A04320()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.returnCode.getter();
  _DWORD *v0 = result;
  return result;
}

void sub_256A04348(unsigned int *a1)
{
  ModalityXFinalSpeechRecognitionResponse.returnCode.setter();
}

uint64_t sub_256A0436C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.returnStr.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A04398()
{
  return ModalityXFinalSpeechRecognitionResponse.recognitionResult.getter();
}

uint64_t sub_256A043BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionResult, (uint64_t)type metadata accessor for ModalityXRecognitionResult, (uint64_t (*)(char *))ModalityXFinalSpeechRecognitionResponse.recognitionResult.setter);
}

uint64_t sub_256A04410@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.getter(a1);
}

uint64_t sub_256A04438()
{
  return ModalityXFinalSpeechRecognitionResponse.audioAnalytics.getter();
}

uint64_t sub_256A0445C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)type metadata accessor for ModalityXAudioAnalytics, (uint64_t (*)(char *))ModalityXFinalSpeechRecognitionResponse.audioAnalytics.setter);
}

uint64_t sub_256A044B0@<X0>(unsigned char *a1@<X8>)
{
  return ModalityXFinalSpeechRecognitionResponse.watermarkDetection.getter(a1);
}

void sub_256A044D8()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.getter();
}

uint64_t sub_256A04500(uint64_t a1)
{
  double v1 = OUTLINED_FUNCTION_185_0(a1);
  return ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.setter(v1);
}

uint64_t sub_256A04524()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.language.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A04550()
{
  return ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.getter();
}

uint64_t sub_256A04574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t (*)(char *))ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.setter);
}

uint64_t sub_256A045C8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXFinalSpeechRecognitionResponse.requestLocale.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A045F4()
{
  OUTLINED_FUNCTION_18();
  uint64_t v0 = ModalityXFinalSpeechRecognitionResponse.hasResult_p.getter();
  return OUTLINED_FUNCTION_106(v0);
}

void sub_256A0461C(unsigned __int8 *a1)
{
}

void *initializeBufferWithCopyOfBuffer for ModalityXRecognitionToken(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = (char *)a1 + v16;
    uint64_t v20 = (char *)a2 + v16;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v25 = a3[11];
    uint64_t v26 = a3[12];
    uint64_t v27 = (void *)((char *)a1 + v25);
    BOOL v28 = (void *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    char v30 = (void *)((char *)a1 + v26);
    uint64_t v31 = (void *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *char v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXRecognitionToken(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v24);
  uint64_t v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  char v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (int *)(a2 + v10);
  int v13 = *v12;
  *(unsigned char *)(v11 + 4) = *((unsigned char *)v12 + 4);
  *(_DWORD *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (int *)(a2 + v18);
  int v21 = *v20;
  *(unsigned char *)(v19 + 4) = *((unsigned char *)v20 + 4);
  *(_DWORD *)uint64_t v19 = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (int *)(a2 + v22);
  int v25 = *v24;
  *(unsigned char *)(v23 + 4) = *((unsigned char *)v24 + 4);
  *(_DWORD *)uint64_t v23 = v25;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  char v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *char v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v20 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  uint64_t v24 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  int v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *int v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  char v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *char v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_4);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t type metadata completion function for ModalityXRecognitionToken()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm);
}

void *initializeBufferWithCopyOfBuffer for ModalityXRecognitionPhraseTokensAlternatives(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((unsigned char *)v7 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

void *initializeWithCopy for ModalityXRecognitionPhraseTokensAlternatives(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for ModalityXRecognitionPhraseTokensAlternatives(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *initializeWithTake for ModalityXRecognitionPhraseTokensAlternatives(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ModalityXRecognitionPhraseTokensAlternatives(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm_0);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm_0);
}

uint64_t type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives()
{
  return type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives();
}

{
  uint64_t result;
  unint64_t v1;

  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_141(result);
    OUTLINED_FUNCTION_208_0();
    return OUTLINED_FUNCTION_203_0();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm_1);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm_1);
}

uint64_t getEnumTagSinglePayload for ModalityXSetAlternateRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm_2);
}

uint64_t storeEnumTagSinglePayload for ModalityXSetAlternateRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm_2);
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionChoice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm_3);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionChoice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm_3);
}

uint64_t type metadata completion function for ModalityXRecognitionChoice()
{
  return type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives();
}

void initializeBufferWithCopyOfBuffer for ModalityXRecognitionPhraseTokens()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_0_0();
  int v1 = *(_DWORD *)(v0 + 80);
  void *v3 = *v2;
  if ((v1 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_172_0();
  }
  else
  {
    OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_2_0();
    int v5 = *(void (**)(uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    uint64_t v6 = OUTLINED_FUNCTION_195_0();
    v5(v6);
  }
  OUTLINED_FUNCTION_37();
}

void initializeWithCopy for ModalityXRecognitionPhraseTokens()
{
  OUTLINED_FUNCTION_38();
  void *v1 = *v0;
  OUTLINED_FUNCTION_215_0();
  OUTLINED_FUNCTION_2_0();
  int v3 = *(void (**)(uint64_t))(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = OUTLINED_FUNCTION_195_0();
  v3(v4);
  OUTLINED_FUNCTION_37();
}

uint64_t assignWithCopy for ModalityXRecognitionPhraseTokens(void *a1, void *a2)
{
  OUTLINED_FUNCTION_73_0(a1, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_187_0();
  v3();
  return v2;
}

void *initializeWithTake for ModalityXRecognitionPhraseTokens(void *a1, void *a2)
{
  *a1 = *a2;
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v3();
  return a1;
}

uint64_t assignWithTake for ModalityXRecognitionPhraseTokens(void *a1, void *a2)
{
  OUTLINED_FUNCTION_72_0(a1, a2);
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0();
  v3();
  return v2;
}

uint64_t getEnumTagSinglePayload for ModalityXRepeatedItnAlignment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_125Tm_4);
}

uint64_t storeEnumTagSinglePayload for ModalityXRepeatedItnAlignment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_126Tm_4);
}

uint64_t type metadata completion function for ModalityXRecognitionPhraseTokens()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_335();
    return OUTLINED_FUNCTION_203_0();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXChoiceAlignment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_143Tm);
}

uint64_t storeEnumTagSinglePayload for ModalityXChoiceAlignment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_144Tm);
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXRecognitionResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    uint64_t v9 = a3[8];
    uint64_t v28 = (char *)a2 + v9;
    uint64_t v29 = (char *)a1 + v9;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v29, v28, v10);
    uint64_t v12 = a3[9];
    uint64_t v13 = (uint64_t *)((char *)v7 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for ModalityXRecognitionSausage(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      uint64_t v17 = *(int *)(v15 + 20);
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      swift_bridgeObjectRetain();
      v11(v18, v19, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v20 = a3[10];
    uint64_t v21 = (uint64_t *)((char *)v7 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v15))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v21 = *v22;
      uint64_t v24 = *(int *)(v15 + 20);
      int v25 = (char *)v21 + v24;
      uint64_t v26 = (char *)v22 + v24;
      swift_bridgeObjectRetain();
      v11(v25, v26, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v15);
    }
  }
  return v7;
}

uint64_t destroy for ModalityXRecognitionResult(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v11(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t result = __swift_getEnumTagSinglePayload(v8, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v5);
  }
  return result;
}

void *initializeWithCopy for ModalityXRecognitionResult(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v27 = (char *)a2 + v8;
  uint64_t v28 = (char *)a1 + v8;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v28, v27, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    uint64_t v16 = *(int *)(v14 + 20);
    uint64_t v17 = (char *)v12 + v16;
    uint64_t v18 = (char *)v13 + v16;
    swift_bridgeObjectRetain();
    v10(v17, v18, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v14))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    uint64_t v23 = *(int *)(v14 + 20);
    uint64_t v24 = (char *)v20 + v23;
    int v25 = (char *)v21 + v23;
    swift_bridgeObjectRetain();
    v10(v24, v25, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v14);
  }
  return a1;
}

void *assignWithCopy for ModalityXRecognitionResult(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v33(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for ModalityXRecognitionSausage(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *uint64_t v12 = *v13;
      uint64_t v17 = *(int *)(v14 + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v32 = (char *)v13 + v17;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      v31(v18, v32, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXRecognitionSausage();
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
LABEL_7:
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v20, 1, v14);
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v33(&v21[*(int *)(v14 + 20)], &v22[*(int *)(v14 + 20)], v9);
      return a1;
    }
    outlined destroy of ModalityXRecognitionSausage();
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v21, v22, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v25 = *(int *)(v14 + 20);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for ModalityXRecognitionResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v15))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    void *v18 = *v19;
    v11((char *)v18 + *(int *)(v15 + 20), (char *)v19 + *(int *)(v15 + 20), v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v15);
  }
  return a1;
}

void *assignWithTake for ModalityXRecognitionResult(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v25(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for ModalityXRecognitionSausage(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXRecognitionSausage();
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  swift_bridgeObjectRelease();
  v25(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  int v21 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v18, 1, v14);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14);
  if (!v21)
  {
    if (!v22)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      swift_bridgeObjectRelease();
      v25(&v19[*(int *)(v14 + 20)], &v20[*(int *)(v14 + 20)], v9);
      return a1;
    }
    outlined destroy of ModalityXRecognitionSausage();
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[*(int *)(v14 + 20)], &v20[*(int *)(v14 + 20)], v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A063BC);
}

uint64_t sub_256A063BC()
{
  OUTLINED_FUNCTION_199_0();
  if (v3) {
    return OUTLINED_FUNCTION_332(*v1);
  }
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == v0)
  {
    uint64_t v7 = v5;
    uint64_t v8 = *(int *)(v2 + 32);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    uint64_t v8 = *(int *)(v2 + 36);
  }

  return __swift_getEnumTagSinglePayload((uint64_t)v1 + v8, v0, v7);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A06464);
}

void sub_256A06464()
{
  OUTLINED_FUNCTION_113_0();
  if (v3)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    int v4 = v2;
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_0_0();
    if (*(_DWORD *)(v5 + 84) != v4) {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    }
    OUTLINED_FUNCTION_159();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
}

void type metadata completion function for ModalityXRecognitionResult()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXRecognitionSausage?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ModalityXLatnnMitigatorResult(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    v14[8] = v15[8];
    *(void *)uint64_t v14 = *(void *)v15;
    int v16 = (char *)a1 + v13;
    uint64_t v17 = (char *)a2 + v13;
    *(void *)int v16 = *(void *)v17;
    v16[8] = v17[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXLatnnMitigatorResult(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  *(unsigned char *)(v15 + 8) = *((unsigned char *)v16 + 8);
  *(void *)uint64_t v15 = v17;
  return a1;
}

uint64_t initializeWithTake for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t assignWithTake for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A06AC0);
}

uint64_t sub_256A06AC0()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_44(v0 + *(int *)(v2 + 24));
  }
  uint64_t v4 = OUTLINED_FUNCTION_198();

  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A06B40);
}

void sub_256A06B40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(a4 + 24));
  }
}

uint64_t type metadata completion function for ModalityXLatnnMitigatorResult()
{
  return type metadata completion function for ModalityXLatnnMitigatorResult();
}

{
  uint64_t result;
  unint64_t v1;

  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return OUTLINED_FUNCTION_203_0();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_211Tm_0);
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_153Tm);
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXItnAlignment(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t destroy for ModalityXItnAlignment(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  return a1;
}

uint64_t assignWithCopy for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = v22;
  return a1;
}

uint64_t initializeWithTake for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  return a1;
}

uint64_t assignWithTake for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXItnAlignment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A07118);
}

uint64_t sub_256A07118()
{
  uint64_t v2 = OUTLINED_FUNCTION_98();

  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ModalityXItnAlignment(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A07168);
}

uint64_t sub_256A07168()
{
  OUTLINED_FUNCTION_98();
  uint64_t v0 = OUTLINED_FUNCTION_144();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t type metadata completion function for ModalityXItnAlignment()
{
  return type metadata completion function for ModalityXLatnnMitigatorResult();
}

void initializeBufferWithCopyOfBuffer for ModalityXRecognitionChoice()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_0_0();
  int v4 = *(_DWORD *)(v3 + 80);
  void *v0 = *v1;
  if ((v4 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    uint64_t v5 = v2;
    uint64_t v6 = v1;
    uint64_t v7 = v0;
    OUTLINED_FUNCTION_214_0();
    OUTLINED_FUNCTION_2_0();
    uint64_t v9 = *(void (**)(uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    uint64_t v10 = OUTLINED_FUNCTION_202_0();
    v9(v10);
    uint64_t v11 = *(int *)(v5 + 24);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v6 + v11;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
  }
  OUTLINED_FUNCTION_16();
}

uint64_t destroy for ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);

  return v7(v4, v5);
}

void initializeWithCopy for ModalityXRecognitionChoice()
{
  OUTLINED_FUNCTION_17();
  void *v1 = *v0;
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = OUTLINED_FUNCTION_202_0();
  v3(v4);
  OUTLINED_FUNCTION_41_0();
  OUTLINED_FUNCTION_16();
}

uint64_t assignWithCopy for ModalityXRecognitionChoice(void *a1, void *a2)
{
  OUTLINED_FUNCTION_73_0(a1, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_211_0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v5, v6);
  uint64_t v8 = *(int *)(v2 + 24);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = v3 + v8;
  char v11 = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(v9 + 4) = v11;
  return v4;
}

uint64_t initializeWithTake for ModalityXRecognitionChoice(void *a1, void *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v2();
  return OUTLINED_FUNCTION_41_0();
}

uint64_t assignWithTake for ModalityXRecognitionChoice(void *a1, void *a2)
{
  OUTLINED_FUNCTION_72_0(a1, a2);
  OUTLINED_FUNCTION_211_0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v2, v3);
  return OUTLINED_FUNCTION_41_0();
}

uint64_t getEnumTagSinglePayload for ModalityXAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A07560);
}

uint64_t __swift_get_extra_inhabitant_index_125Tm()
{
  OUTLINED_FUNCTION_199_0();
  if (v3) {
    return OUTLINED_FUNCTION_332(*v1);
  }
  uint64_t v5 = OUTLINED_FUNCTION_177_0();
  uint64_t v6 = (uint64_t)v1 + *(int *)(v2 + 20);

  return __swift_getEnumTagSinglePayload(v6, v0, v5);
}

uint64_t storeEnumTagSinglePayload for ModalityXAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A075E0);
}

void __swift_store_extra_inhabitant_index_126Tm()
{
  OUTLINED_FUNCTION_113_0();
  if (v2)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_159();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXSpeechRecognitionFeature(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    v13[4] = v14[4];
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechRecognitionFeature(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (int *)(a2 + v10);
  int v13 = *v12;
  *(unsigned char *)(v11 + 4) = *((unsigned char *)v12 + 4);
  *(_DWORD *)uint64_t v11 = v13;
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_217Tm_5);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A07AE4);
}

void __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) == a3)
  {
    uint64_t v7 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(a4 + 20));
  }
}

uint64_t type metadata completion function for ModalityXSpeechRecognitionFeature()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXAudioAnalyticsAcousticFeature(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)uint64_t v11 = *v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = type metadata accessor for ModalityXAcousticFeature(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v20 = &v14[v19];
      uint64_t v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8(v20, v21, v7);
      uint64_t v22 = *(int *)(v16 + 24);
      uint64_t v23 = &v14[v22];
      int v24 = (char *)v15 + v22;
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for ModalityXAcousticFeature(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = type metadata accessor for ModalityXAcousticFeature(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    uint64_t v20 = *(int *)(v15 + 24);
    uint64_t v21 = (char *)v13 + v20;
    uint64_t v22 = (char *)v14 + v20;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ModalityXAcousticFeature(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      *uint64_t v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
      uint64_t v28 = *(int *)(v15 + 24);
      uint64_t v29 = (char *)v13 + v28;
      char v30 = (char *)v14 + v28;
      char v31 = v30[4];
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      v29[4] = v31;
      return a1;
    }
    outlined destroy of ModalityXRecognitionSausage();
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v13, v14, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  *uint64_t v13 = *v14;
  uint64_t v18 = *(int *)(v15 + 20);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)v14 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v6);
  uint64_t v22 = *(int *)(v15 + 24);
  uint64_t v23 = (char *)v13 + v22;
  int v24 = (char *)v14 + v22;
  char v25 = v24[4];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  v23[4] = v25;
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ModalityXAcousticFeature(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v9 = *v10;
    v7((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
    uint64_t v13 = *(int *)(v11 + 24);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for ModalityXAcousticFeature(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!EnumTagSinglePayload)
  {
    if (!v19)
    {
      *uint64_t v15 = *v16;
      swift_bridgeObjectRelease();
      v8((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v6);
      uint64_t v25 = *(int *)(v17 + 24);
      uint64_t v26 = (char *)v15 + v25;
      uint64_t v27 = (char *)v16 + v25;
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      return a1;
    }
    outlined destroy of ModalityXRecognitionSausage();
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *uint64_t v15 = *v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v6);
  uint64_t v20 = *(int *)(v17 + 24);
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)v16 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A08584);
}

uint64_t sub_256A08584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 2147483646) {
      return OUTLINED_FUNCTION_44(v4 + *(int *)(a3 + 20));
    }
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    uint64_t v9 = v4 + *(int *)(a3 + 24);
  }

  return __swift_getEnumTagSinglePayload(v9, v3, v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A08638);
}

void sub_256A08638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v6 + 84) != a3)
  {
    if (a3 == 2147483646)
    {
      OUTLINED_FUNCTION_154(*(int *)(a4 + 20));
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  OUTLINED_FUNCTION_159();

  __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
}

void type metadata completion function for ModalityXAudioAnalyticsAcousticFeature()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXAcousticFeature?, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ModalityXRecognitionSausage?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void initializeBufferWithCopyOfBuffer for ModalityXChoiceAlignment()
{
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_0_0();
  int v3 = *(_DWORD *)(v2 + 80);
  void *v0 = *v1;
  if ((v3 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_172_0();
  }
  else
  {
    v0[1] = v1[1];
    OUTLINED_FUNCTION_162_0();
    OUTLINED_FUNCTION_2_0();
    uint64_t v5 = *(void (**)(uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = OUTLINED_FUNCTION_200_0();
    v5(v6);
  }
  OUTLINED_FUNCTION_37();
}

uint64_t destroy for ModalityXChoiceAlignment(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);

  return v7(v4, v5);
}

void initializeWithCopy for ModalityXChoiceAlignment()
{
  OUTLINED_FUNCTION_38();
  uint64_t v1 = v0[1];
  *uint64_t v2 = *v0;
  v2[1] = v1;
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = OUTLINED_FUNCTION_200_0();
  v4(v5);
  OUTLINED_FUNCTION_37();
}

uint64_t assignWithCopy for ModalityXChoiceAlignment(void *a1, void *a2)
{
  OUTLINED_FUNCTION_73_0(a1, a2);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_187_0();
  v4();
  return v3;
}

_OWORD *initializeWithTake for ModalityXChoiceAlignment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v3();
  return a1;
}

uint64_t assignWithTake for ModalityXChoiceAlignment(void *a1, void *a2)
{
  OUTLINED_FUNCTION_72_0(a1, a2);
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0();
  v4();
  return v3;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioAnalytics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A08B04);
}

uint64_t __swift_get_extra_inhabitant_index_143Tm()
{
  OUTLINED_FUNCTION_199_0();
  if (v3) {
    return OUTLINED_FUNCTION_332(*v1);
  }
  uint64_t v5 = OUTLINED_FUNCTION_177_0();
  uint64_t v6 = (uint64_t)v1 + *(int *)(v2 + 24);

  return __swift_getEnumTagSinglePayload(v6, v0, v5);
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioAnalytics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A08B84);
}

void __swift_store_extra_inhabitant_index_144Tm()
{
  OUTLINED_FUNCTION_113_0();
  if (v2)
  {
    void *v1 = (v0 - 1);
  }
  else
  {
    type metadata accessor for UnknownStorage();
    OUTLINED_FUNCTION_159();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t type metadata completion function for ModalityXChoiceAlignment()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_208_0();
    return OUTLINED_FUNCTION_203_0();
  }
  return result;
}

uint64_t destroy for ModalityXRecognitionCandidate(uint64_t a1)
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v2 + 8))(a1);

  return swift_release();
}

uint64_t assignWithCopy for ModalityXRecognitionCandidate()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_187_0();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_retain();
  swift_release();
  return v2;
}

uint64_t initializeWithTake for ModalityXRecognitionCandidate()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_146_0();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t assignWithTake for ModalityXRecognitionCandidate()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0();
  v3();
  *(void *)(v2 + *(int *)(v0 + 20)) = *(void *)(v1 + *(int *)(v0 + 20));
  swift_release();
  return v2;
}

uint64_t getEnumTagSinglePayload for ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_211Tm_1);
}

uint64_t storeEnumTagSinglePayload for ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A08E48);
}

void __swift_store_extra_inhabitant_index_153Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20)) = (v4 - 1);
  }
}

uint64_t type metadata completion function for ModalityXRecognitionCandidate()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_141(result);
    OUTLINED_FUNCTION_335();
    return OUTLINED_FUNCTION_203_0();
  }
  return result;
}

uint64_t ObjC metadata update function for ModalityXRecognitionCandidate._StorageClass()
{
  return type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
}

void type metadata completion function for ModalityXRecognitionCandidate._StorageClass()
{
  type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t ObjC metadata update function for ModalityXFinalSpeechRecognitionResponse._StorageClass()
{
  return type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
}

void type metadata completion function for ModalityXFinalSpeechRecognitionResponse._StorageClass()
{
  type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ModalityXRecognitionSausage?(319, &lazy cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t outlined destroy of ModalityXRecognitionSausage?(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void OUTLINED_FUNCTION_4_1(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 12) = a1;
  uint64_t v3 = (int *)(v2 + a1);
  if (*((unsigned char *)v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *v3;
  }
  *(_DWORD *)(v1 + 8) = v4;
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t a1)
{
  return MEMORY[0x270F44DF0](v3, 1, v4, a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F44DF0](a1, a2, v6, a4, v5, v4);
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return 0;
}

void OUTLINED_FUNCTION_30_0(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 1;
}

uint64_t OUTLINED_FUNCTION_32_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (unsigned char *)(v1 + a1);
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  uint64_t v3 = *(int *)(v0 + 24);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = v1 + v3;
  *(_DWORD *)uint64_t v4 = *(_DWORD *)v5;
  *(unsigned char *)(v4 + 4) = *(unsigned char *)(v5 + 4);
  return v2;
}

uint64_t OUTLINED_FUNCTION_44_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_45_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_46_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

void OUTLINED_FUNCTION_47_0()
{
  *(unsigned char *)(v1 + v2[5]) = 2;
  uint64_t v3 = (void *)(v1 + v2[6]);
  void *v3 = 0;
  v3[1] = 0;
  uint64_t v4 = v1 + v2[7];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = v0;
  uint64_t v5 = v1 + v2[8];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = v0;
}

uint64_t OUTLINED_FUNCTION_51_0(uint64_t a1)
{
  __swift_getEnumTagSinglePayload(v2, 1, a1);
  return outlined destroy of ModalityXRecognitionSausage?(v2, v1);
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  uint64_t v2 = v0 + *(int *)(v1 + 36);
  uint64_t v3 = type metadata accessor for ModalityXRecognitionSausage(0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  uint64_t v4 = v0 + *(int *)(v1 + 40);
  return __swift_storeEnumTagSinglePayload(v4, 1, 1, v3);
}

BOOL OUTLINED_FUNCTION_53_0@<W0>(uint64_t a1@<X8>)
{
  return (*(unsigned char *)(v1 + a1 + 4) & 1) == 0;
}

double OUTLINED_FUNCTION_54_0@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_55_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F44DF0](a1, a2, v6, a4, v5, v4);
}

uint64_t OUTLINED_FUNCTION_61_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 72) = v2;
  uint64_t result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_66_0(uint64_t result)
{
  void *v1 = result;
  *(void *)(result + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_0(unsigned int *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_72_0(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_73_0(void *a1, void *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_89_0(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

BOOL OUTLINED_FUNCTION_91_0@<W0>(char a1@<W8>)
{
  return (a1 & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return closure #2 in ModalityXChoiceAlignment.decodeMessage<A>(decoder:)();
}

float OUTLINED_FUNCTION_94_0@<S0>(uint64_t a1@<X8>)
{
  return *(float *)(v1 + a1);
}

void OUTLINED_FUNCTION_95_0(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  *(_DWORD *)uint64_t v3 = v1;
  *(unsigned char *)(v3 + 4) = 0;
}

uint64_t OUTLINED_FUNCTION_97_0(void *a1)
{
  *a1 = v1;
  return type metadata accessor for ModalityXRecognitionToken(0);
}

uint64_t OUTLINED_FUNCTION_101_0(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

BOOL OUTLINED_FUNCTION_103_0@<W0>(uint64_t a1@<X8>)
{
  return a1 != 0;
}

uint64_t OUTLINED_FUNCTION_107_0(uint64_t result)
{
  uint64_t v3 = v2 + *(int *)(result + 28);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = v1;
  uint64_t v4 = v2 + *(int *)(result + 32);
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_115_0()
{
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_116_0()
{
  return 0;
}

void OUTLINED_FUNCTION_118_0()
{
  int v2 = *v0;
  if (v2 == 4) {
    LOBYTE(v2) = 0;
  }
  *(unsigned char *)(v1 + 84) = v2;
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  return closure #1 in ModalityXRecognitionToken.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return closure #1 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_121_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  return closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v7, v6, v9, v8, a5, a6);
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return outlined init with copy of ModalityXRecognitionSausage?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_125_0(void *a1)
{
  *a1 = v1;
  return type metadata accessor for ModalityXItnAlignment(0);
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_133_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_134_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return v0;
}

void OUTLINED_FUNCTION_138_0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_139_0(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_148_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 88) = v2;
  uint64_t result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return outlined init with take of ModalityXRecognitionSausage();
}

void *OUTLINED_FUNCTION_152_0()
{
  return malloc(0x38uLL);
}

void *OUTLINED_FUNCTION_154_0(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  return malloc(v1);
}

uint64_t OUTLINED_FUNCTION_155_0()
{
  return type metadata accessor for ModalityXRecognitionResult(0);
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  return type metadata accessor for ModalityXRecognitionResult(0);
}

uint64_t OUTLINED_FUNCTION_159_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_162_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_164_0(uint64_t a1)
{
  *(void *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_165_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_166_0@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ModalityXRecognitionSausage?(v2 + a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_167_0@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of ModalityXRecognitionSausage?(v1 + a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_168_0()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t OUTLINED_FUNCTION_169_0@<X0>(uint64_t a1@<X8>)
{
  void *v1 = a1;
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_172_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_173_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 80) = v2;
  uint64_t result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_174_0(uint64_t a1)
{
  void *v1 = a1;
  *(void *)(a1 + 72) = v2;
  uint64_t result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_175_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return outlined init with copy of ModalityXRecognitionSausage?(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_184_0(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXRecognitionToken(0);
}

double OUTLINED_FUNCTION_185_0(uint64_t a1)
{
  return *(double *)a1;
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  return v0 & 1;
}

void OUTLINED_FUNCTION_188_0()
{
  int v2 = *(_DWORD *)(v0 + 48);
  if (*(unsigned char *)(v0 + 52)) {
    int v2 = 0;
  }
  *(_DWORD *)(v1 + 80) = v2;
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  return outlined assign with take of ModalityXRecognitionResult?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_194_0()
{
  return outlined init with take of ModalityXRecognitionSausage();
}

uint64_t OUTLINED_FUNCTION_195_0()
{
  return v0;
}

void OUTLINED_FUNCTION_196_0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_200_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_201_0()
{
  return outlined init with take of ModalityXRecognitionResult?(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_202_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_203_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_208_0()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_211_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_215_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_217_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_218_0()
{
  return 0;
}

void OUTLINED_FUNCTION_220_0(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = 2;
}

void OUTLINED_FUNCTION_222_0()
{
  closure #3 in ModalityXRecognitionToken.traverse<A>(visitor:)();
}

void OUTLINED_FUNCTION_223_0()
{
  closure #4 in ModalityXRecognitionToken.traverse<A>(visitor:)();
}

void OUTLINED_FUNCTION_224_0()
{
  closure #2 in ModalityXRecognitionToken.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  return closure #3 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_226_0()
{
  return closure #4 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
}

uint64_t OUTLINED_FUNCTION_227_0@<X0>(uint64_t a1@<X8>)
{
  void *v1 = a1;
  v1[1] = a1;
  v1[2] = a1;
  v1[3] = a1;
  return UnknownStorage.init()();
}

double OUTLINED_FUNCTION_230_0()
{
  return *(double *)v0;
}

uint64_t OUTLINED_FUNCTION_232_0()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_240_0()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t OUTLINED_FUNCTION_242_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_244_0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v3 + 40) = a1;
  return outlined init with copy of ModalityXRecognitionSausage?(v1 + a1, v2, v4);
}

uint64_t ModalityXSpeechProfileSourceData.init()@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileSourceData.init()((void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData, a1);
}

uint64_t type metadata accessor for ModalityXSpeechProfileSourceData(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileSourceData);
}

uint64_t ModalityXWordWithPronunciations.orthography.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_50(*(int *)(v0 + 24));
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t type metadata accessor for ModalityXWordWithPronunciations(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXWordWithPronunciations);
}

uint64_t key path setter for ModalityXWordWithPronunciations.orthography : ModalityXWordWithPronunciations(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXWordWithPronunciations.orthography.setter(v1, v2);
}

uint64_t ModalityXWordWithPronunciations.orthography.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t ModalityXWordWithPronunciations.orthography.modify(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = OUTLINED_FUNCTION_50(v3);
  if (v4)
  {
    uint64_t v6 = *v5;
    unint64_t v7 = v4;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXWordWithPronunciations.hasOrthography.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearOrthography()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 24));
  swift_bridgeObjectRelease();
  void *v1 = 0;
  v1[1] = 0;
}

uint64_t (*ModalityXWordWithPronunciations.pronunciations.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXWordWithPronunciations.frequency.getter()
{
  OUTLINED_FUNCTION_11_1();
  if (v0[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v0;
  }
}

uint64_t ModalityXWordWithPronunciations.frequency.setter(int a1)
{
  uint64_t result = OUTLINED_FUNCTION_11_1();
  *(_DWORD *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 4) = 0;
  return result;
}

uint64_t (*ModalityXWordWithPronunciations.frequency.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return ModalityXProcessingError.code.modify;
}

BOOL ModalityXWordWithPronunciations.hasFrequency.getter()
{
  OUTLINED_FUNCTION_11_1();
  return (*(unsigned char *)(v0 + 4) & 1) == 0;
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearFrequency()()
{
  OUTLINED_FUNCTION_11_1();
  *(_DWORD *)uint64_t v0 = 0;
  *(unsigned char *)(v0 + 4) = 1;
}

uint64_t ModalityXWordWithPronunciations.tag.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_50(*(int *)(v0 + 32));
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXWordWithPronunciations.tag : ModalityXWordWithPronunciations(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXWordWithPronunciations.tag.setter(v1, v2);
}

uint64_t ModalityXWordWithPronunciations.tag.setter(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)(v2 + *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t ModalityXWordWithPronunciations.tag.modify(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = OUTLINED_FUNCTION_50(v3);
  if (v4)
  {
    uint64_t v6 = *v5;
    unint64_t v7 = v4;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXWordWithPronunciations.hasTag.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearTag()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 32));
  swift_bridgeObjectRelease();
  void *v1 = 0;
  v1[1] = 0;
}

uint64_t ModalityXWordWithPronunciations.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(void))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t ModalityXWordWithPronunciations.unknownFields.setter()
{
  return ModalityXWordWithPronunciations.unknownFields.setter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t vars8;

  uint64_t v0 = OUTLINED_FUNCTION_167();
  v1(v0);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v2 = OUTLINED_FUNCTION_52();

  return v3(v2);
}

uint64_t (*ModalityXWordWithPronunciations.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXWordWithPronunciations(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXWordWithPronunciations.init()@<X0>(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
  uint64_t v2 = (int *)type metadata accessor for ModalityXWordWithPronunciations(0);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (void *)((char *)a1 + v2[6]);
  void *v4 = 0;
  v4[1] = 0;
  int v5 = (char *)a1 + v2[7];
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  uint64_t v6 = (void *)((char *)a1 + v2[8]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t ModalityXEntityWords.words.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ModalityXEntityWords.words.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*ModalityXEntityWords.words.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntityWords.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(void))type metadata accessor for ModalityXEntityWords);
}

uint64_t ModalityXWordWithPronunciations.unknownFields.getter(void (*a1)(void))
{
  a1(0);
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_67();

  return v2(v1);
}

uint64_t type metadata accessor for ModalityXEntityWords(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXEntityWords);
}

uint64_t ModalityXEntityWords.unknownFields.setter()
{
  return ModalityXWordWithPronunciations.unknownFields.setter();
}

uint64_t (*ModalityXEntityWords.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXEntityWords(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntityWords.init()@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileSourceData.init()((void (*)(void))type metadata accessor for ModalityXEntityWords, a1);
}

uint64_t ModalityXSpeechProfileSourceData.init()@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x263F8EE78];
  a1(0);
  return UnknownStorage.init()();
}

uint64_t (*ModalityXEntities.entities.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntities.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(void))type metadata accessor for ModalityXEntities);
}

uint64_t type metadata accessor for ModalityXEntities(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXEntities);
}

uint64_t ModalityXEntities.unknownFields.setter()
{
  return ModalityXWordWithPronunciations.unknownFields.setter();
}

uint64_t (*ModalityXEntities.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXEntities(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntities.init()@<X0>(void *a1@<X8>)
{
  return ModalityXSpeechProfileSourceData.init()((void (*)(void))type metadata accessor for ModalityXEntities, a1);
}

uint64_t (*ModalityXSpeechProfileSourceData.entitiesByCategory.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfileSourceData.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t ModalityXSpeechProfileSourceData.unknownFields.setter()
{
  return ModalityXWordWithPronunciations.unknownFields.setter();
}

uint64_t (*ModalityXSpeechProfileSourceData.unknownFields.modify())()
{
  uint64_t v0 = OUTLINED_FUNCTION_167();
  type metadata accessor for ModalityXSpeechProfileSourceData(v0);
  OUTLINED_FUNCTION_329();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXCategoryEntities.key.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXCategoryEntities(0);
  OUTLINED_FUNCTION_50(*(int *)(v0 + 20));
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t type metadata accessor for ModalityXCategoryEntities(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXCategoryEntities);
}

uint64_t key path setter for ModalityXCategoryEntities.key : ModalityXCategoryEntities(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXCategoryEntities.key.setter(v1, v2);
}

uint64_t ModalityXCategoryEntities.key.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_31_0();
  uint64_t v6 = (void *)(v2 + v5);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t ModalityXCategoryEntities.key.modify(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  OUTLINED_FUNCTION_31_0();
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = OUTLINED_FUNCTION_50(v3);
  if (v4)
  {
    uint64_t v6 = *v5;
    unint64_t v7 = v4;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXCategoryEntities.hasKey.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXCategoryEntities(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXCategoryEntities.clearKey()()
{
  OUTLINED_FUNCTION_31_0();
  uint64_t v2 = (void *)(v0 + v1);
  swift_bridgeObjectRelease();
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t ModalityXCategoryEntities.value.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_12_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(v1 + *(int *)(v8 + 24), v7);
  uint64_t v9 = type metadata accessor for ModalityXEntities(0);
  if (__swift_getEnumTagSinglePayload(v7, 1, v9) != 1) {
    return outlined init with take of ModalityXEntities(v7, (uint64_t)a1);
  }
  *a1 = MEMORY[0x263F8EE78];
  UnknownStorage.init()();
  return outlined destroy of ModalityXRecognitionSausage?(v7, &demangling cache variable for type metadata for ModalityXEntities?);
}

uint64_t outlined init with copy of ModalityXEntities?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t key path setter for ModalityXCategoryEntities.value : ModalityXCategoryEntities(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModalityXEntities(0);
  MEMORY[0x270FA5388](v2 - 8);
  outlined init with copy of ModalityXEntities(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return ModalityXCategoryEntities.value.setter();
}

uint64_t ModalityXCategoryEntities.value.setter()
{
  uint64_t v1 = OUTLINED_FUNCTION_167();
  uint64_t v2 = v0 + *(int *)(type metadata accessor for ModalityXCategoryEntities(v1) + 24);
  outlined destroy of ModalityXRecognitionSausage?(v2, &demangling cache variable for type metadata for ModalityXEntities?);
  uint64_t v3 = OUTLINED_FUNCTION_67();
  outlined init with take of ModalityXEntities(v3, v4);
  uint64_t v5 = type metadata accessor for ModalityXEntities(0);

  return __swift_storeEnumTagSinglePayload(v2, 0, 1, v5);
}

void (*ModalityXCategoryEntities.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_7_0(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  v3[1] = v6;
  uint64_t v7 = type metadata accessor for ModalityXEntities(0);
  v3[2] = v7;
  OUTLINED_FUNCTION_2_0();
  size_t v9 = *(void *)(v8 + 64);
  v3[3] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[4] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ModalityXCategoryEntities(0) + 24);
  *((_DWORD *)v3 + 10) = v11;
  outlined init with copy of ModalityXEntities?(v1 + v11, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    *uint64_t v10 = MEMORY[0x263F8EE78];
    UnknownStorage.init()();
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXEntities?);
  }
  else
  {
    outlined init with take of ModalityXEntities((uint64_t)v6, (uint64_t)v10);
  }
  return ModalityXCategoryEntities.value.modify;
}

void ModalityXCategoryEntities.value.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 24);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = *(void **)(*(void *)a1 + 8);
  uint64_t v7 = **(void **)a1 + v3;
  if (a2)
  {
    outlined init with copy of ModalityXEntities(*(void *)(*(void *)a1 + 32), (uint64_t)v4);
    outlined destroy of ModalityXRecognitionSausage?(v7, &demangling cache variable for type metadata for ModalityXEntities?);
    outlined init with take of ModalityXEntities((uint64_t)v4, v7);
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXEntities((uint64_t)v5);
  }
  else
  {
    outlined destroy of ModalityXRecognitionSausage?(**(void **)a1 + v3, &demangling cache variable for type metadata for ModalityXEntities?);
    outlined init with take of ModalityXEntities((uint64_t)v5, v7);
    OUTLINED_FUNCTION_4_0();
  }
  free(v5);
  free(v4);
  free(v6);

  free(v2);
}

uint64_t outlined init with copy of ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ModalityXEntities(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL ModalityXCategoryEntities.hasValue.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12_0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(v0 + *(int *)(v6 + 24), v5);
  uint64_t v7 = type metadata accessor for ModalityXEntities(0);
  BOOL v8 = __swift_getEnumTagSinglePayload(v5, 1, v7) != 1;
  outlined destroy of ModalityXRecognitionSausage?(v5, &demangling cache variable for type metadata for ModalityXEntities?);
  return v8;
}

Swift::Void __swiftcall ModalityXCategoryEntities.clearValue()()
{
  uint64_t v1 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined destroy of ModalityXRecognitionSausage?(v0 + *(int *)(v1 + 24), &demangling cache variable for type metadata for ModalityXEntities?);
  type metadata accessor for ModalityXEntities(0);
  uint64_t v2 = OUTLINED_FUNCTION_83_0();

  __swift_storeEnumTagSinglePayload(v2, v3, v4, v5);
}

uint64_t ModalityXCategoryEntities.unknownFields.getter()
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_67();

  return v1(v0);
}

uint64_t ModalityXCategoryEntities.unknownFields.setter()
{
  OUTLINED_FUNCTION_167();
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_52();

  return v1(v0);
}

uint64_t (*ModalityXCategoryEntities.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXCategoryEntities.init()@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  OUTLINED_FUNCTION_31_0();
  uint64_t v3 = (void *)(a1 + v2);
  void *v3 = 0;
  v3[1] = 0;
  type metadata accessor for ModalityXEntities(0);
  uint64_t v4 = OUTLINED_FUNCTION_83_0();

  return __swift_storeEnumTagSinglePayload(v4, v5, v6, v7);
}

unint64_t static ModalityXWordWithPronunciations.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(25);
}

uint64_t static ModalityXWordWithPronunciations._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXWordWithPronunciations._protobuf_nameMap, a1);
}

uint64_t ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
        break;
      case 2:
        dispatch thunk of Decoder.decodeRepeatedBytesField(value:)();
        break;
      case 3:
        OUTLINED_FUNCTION_6_1();
        closure #3 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
        break;
      case 4:
        OUTLINED_FUNCTION_6_1();
        closure #4 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
        break;
      default:
        continue;
    }
  }
}

uint64_t closure #1 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #4 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t ModalityXWordWithPronunciations.traverse<A>(visitor:)()
{
  uint64_t result = closure #1 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v0);
  if (!v1)
  {
    if (*(void *)(*(void *)v0 + 16)) {
      dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)();
    }
    uint64_t v3 = OUTLINED_FUNCTION_19_1();
    closure #2 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_19_1();
    closure #3 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v4);
    type metadata accessor for ModalityXWordWithPronunciations(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 28) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t static ModalityXWordWithPronunciations.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_28();
  if (!v11)
  {
    if (v9) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  if (!v9) {
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_21(v10);
  BOOL v14 = v14 && v12 == v13;
  if (v14 || (char v15 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    if (specialized static Array<A>.== infix(_:_:)(*a1, *a2))
    {
      uint64_t v16 = *(int *)(v8 + 28);
      uint64_t v17 = (_DWORD *)((char *)a1 + v16);
      char v18 = *((unsigned char *)a1 + v16 + 4);
      int v19 = (_DWORD *)((char *)a2 + v16);
      int v20 = *((unsigned __int8 *)a2 + v16 + 4);
      if (v18)
      {
        if (!v20) {
          goto LABEL_26;
        }
      }
      else
      {
        if (*v17 != *v19) {
          LOBYTE(v20) = 1;
        }
        if (v20) {
          goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_28();
      if (v23)
      {
        if (v21)
        {
          OUTLINED_FUNCTION_21(v22);
          if (!v14 || v24 != v25)
          {
            char v15 = 0;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              return v15 & 1;
            }
          }
LABEL_28:
          uint64_t v28 = *(void (**)(void))(v5 + 16);
          OUTLINED_FUNCTION_28_0();
          v28();
          OUTLINED_FUNCTION_28_0();
          v28();
          _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
          char v15 = OUTLINED_FUNCTION_54();
          uint64_t v29 = *(void (**)(void))(v5 + 8);
          OUTLINED_FUNCTION_65();
          v29();
          OUTLINED_FUNCTION_65();
          v29();
          return v15 & 1;
        }
      }
      else if (!v21)
      {
        goto LABEL_28;
      }
    }
LABEL_26:
    char v15 = 0;
  }
  return v15 & 1;
}

Swift::Int ModalityXWordWithPronunciations.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter((void (*)(void))type metadata accessor for ModalityXWordWithPronunciations, &lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXWordWithPronunciations()
{
  return 0xD000000000000019;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  return ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXWordWithPronunciations()
{
  return ModalityXWordWithPronunciations.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXWordWithPronunciations(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXEntityWords.protoMessageName.getter()
{
  return 0x7469746E452E584DLL;
}

uint64_t static ModalityXEntityWords._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXEntityWords._protobuf_nameMap, a1);
}

uint64_t ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(void))type metadata accessor for ModalityXWordWithPronunciations, &lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t ModalityXEntityWords.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXWordWithPronunciations(0),
        v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations), uint64_t result = OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXEntityWords(0);
    return OUTLINED_FUNCTION_6_2();
  }
  return result;
}

uint64_t static ModalityXEntityWords.== infix(_:_:)(void *a1, void *a2)
{
  return static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(void, void))specialized static Array<A>.== infix(_:_:), (void (*)(void))type metadata accessor for ModalityXEntityWords);
}

Swift::Int ModalityXEntityWords.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter((void (*)(void))type metadata accessor for ModalityXEntityWords, &lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXEntityWords()
{
  return 0x7469746E452E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXEntityWords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXEntityWords()
{
  return ModalityXEntityWords.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXEntityWords(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXEntityWords(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXEntityWords(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t static ModalityXEntities.protoMessageName.getter()
{
  return 0x7469746E452E584DLL;
}

uint64_t static ModalityXEntities._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXEntities._protobuf_nameMap, a1);
}

uint64_t ModalityXEntities.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(void))type metadata accessor for ModalityXEntityWords, &lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v11 = v6;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v7 || (v16 & 1) != 0) {
      break;
    }
    if (result == 1) {
      closure #1 in ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, v11, a2, a3, a4, a5, a6);
    }
  }
  return result;
}

uint64_t ModalityXEntities.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXEntityWords(0),
        v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords), uint64_t result = OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXEntities(0);
    return OUTLINED_FUNCTION_6_2();
  }
  return result;
}

uint64_t static ModalityXEntities.== infix(_:_:)(void *a1, void *a2)
{
  return static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(void, void))specialized static Array<A>.== infix(_:_:), (void (*)(void))type metadata accessor for ModalityXEntities);
}

Swift::Int ModalityXEntities.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter((void (*)(void))type metadata accessor for ModalityXEntities, &lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXEntities()
{
  return 0x7469746E452E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntities.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXEntities()
{
  return ModalityXEntities.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXEntities(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXSpeechProfileSourceData.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(26);
}

uint64_t one-time initialization function for _protobuf_nameMap(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  uint64_t v10 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription))
              - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_256A1CFC0;
  unint64_t v13 = v12 + v11 + v10[14];
  *(void *)(v12 + v11) = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *a5;
  type metadata accessor for _NameMap.NameDescription();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(unint64_t, uint64_t))(v15 + 104))(v13, v14);
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t static ModalityXSpeechProfileSourceData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileSourceData._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfileSourceData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, (void (*)(void))type metadata accessor for ModalityXCategoryEntities, &lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

uint64_t closure #1 in ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t ModalityXSpeechProfileSourceData.traverse<A>(visitor:)()
{
  OUTLINED_FUNCTION_11_0();
  if (!v1
    || (type metadata accessor for ModalityXCategoryEntities(0),
        v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities), uint64_t result = OUTLINED_FUNCTION_9_0(v2), !v0))
  {
    type metadata accessor for ModalityXSpeechProfileSourceData(0);
    return OUTLINED_FUNCTION_6_2();
  }
  return result;
}

uint64_t static ModalityXSpeechProfileSourceData.== infix(_:_:)(void *a1, void *a2)
{
  return static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(void, void))specialized static Array<A>.== infix(_:_:), (void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t static ModalityXEntityWords.== infix(_:_:)(void *a1, void *a2, uint64_t (*a3)(void, void), void (*a4)(void))
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v11);
  if (a3(*a1, *a2))
  {
    a4(0);
    uint64_t v12 = *(void (**)(void))(v9 + 16);
    OUTLINED_FUNCTION_28_0();
    v12();
    OUTLINED_FUNCTION_28_0();
    v12();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
    char v13 = OUTLINED_FUNCTION_54();
    uint64_t v14 = *(void (**)(void))(v9 + 8);
    OUTLINED_FUNCTION_65();
    v14();
    OUTLINED_FUNCTION_65();
    v14();
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

Swift::Int ModalityXSpeechProfileSourceData.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter((void (*)(void))type metadata accessor for ModalityXSpeechProfileSourceData, &lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileSourceData()
{
  return 0xD00000000000001ALL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXSpeechProfileSourceData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileSourceData()
{
  return ModalityXSpeechProfileSourceData.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileSourceData(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXCategoryEntities.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_85(19);
}

uint64_t static ModalityXCategoryEntities._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCategoryEntities._protobuf_nameMap, a1);
}

uint64_t ModalityXCategoryEntities.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      OUTLINED_FUNCTION_6_1();
      closure #2 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_6_1();
      closure #1 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #2 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t ModalityXCategoryEntities.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXCategoryEntities.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXCategoryEntities.traverse<A>(visitor:)(v3);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXCategoryEntities.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXCategoryEntities(0);
  if (*(void *)(a1 + *(int *)(result + 20) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXCategoryEntities.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  MEMORY[0x270FA5388](v2 - 8);
  char v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXEntities(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(a1 + *(int *)(v8 + 24), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXEntities?);
  }
  outlined init with take of ModalityXEntities((uint64_t)v4, (uint64_t)v7);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXEntities((uint64_t)v7);
}

uint64_t static ModalityXCategoryEntities.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  char v53 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v50 - v9;
  type metadata accessor for ModalityXEntities(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_0();
  uint64_t v51 = v12 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_12_0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  uint64_t v19 = OUTLINED_FUNCTION_7_0(v18);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v50 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v50 - v26;
  uint64_t v28 = type metadata accessor for ModalityXCategoryEntities(0);
  uint64_t v29 = *(int *)(v28 + 20);
  uint64_t v55 = a1;
  uint64_t v30 = *(void *)(a2 + v29 + 8);
  if (!*(void *)(a1 + v29 + 8))
  {
    uint64_t v50 = v5;
    if (v30) {
      goto LABEL_24;
    }
    goto LABEL_10;
  }
  if (!v30) {
    goto LABEL_24;
  }
  uint64_t v50 = v5;
  OUTLINED_FUNCTION_21(a1 + v29);
  BOOL v33 = v33 && v31 == v32;
  if (v33 || (char v34 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    outlined init with copy of ModalityXEntities?(v55 + *(int *)(v28 + 24), (uint64_t)v27);
    uint64_t v35 = a2;
    outlined init with copy of ModalityXEntities?(a2 + *(int *)(v28 + 24), (uint64_t)v25);
    uint64_t v36 = v17 + *(int *)(v13 + 48);
    outlined init with copy of ModalityXEntities?((uint64_t)v27, v17);
    outlined init with copy of ModalityXEntities?((uint64_t)v25, v36);
    OUTLINED_FUNCTION_30_1(v17);
    if (v33)
    {
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v25, &demangling cache variable for type metadata for ModalityXEntities?);
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v27, &demangling cache variable for type metadata for ModalityXEntities?);
      OUTLINED_FUNCTION_30_1(v36);
      if (v33)
      {
        outlined destroy of ModalityXRecognitionSausage?(v17, &demangling cache variable for type metadata for ModalityXEntities?);
        uint64_t v37 = v54;
LABEL_21:
        uint64_t v44 = v50;
        char v45 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
        uint64_t v46 = v52;
        v45(v52, v55, v37);
        uint64_t v47 = v53;
        v45(v53, v35, v37);
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
        v48(v47, v37);
        v48(v46, v37);
        return v34 & 1;
      }
    }
    else
    {
      outlined init with copy of ModalityXEntities?(v17, (uint64_t)v22);
      OUTLINED_FUNCTION_30_1(v36);
      if (!v38)
      {
        uint64_t v41 = v51;
        outlined init with take of ModalityXEntities(v36, v51);
        specialized static Array<A>.== infix(_:_:)();
        if (v42)
        {
          _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
          uint64_t v37 = v54;
          char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
          outlined destroy of ModalityXEntities(v41);
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v25, &demangling cache variable for type metadata for ModalityXEntities?);
          outlined destroy of ModalityXRecognitionSausage?((uint64_t)v27, &demangling cache variable for type metadata for ModalityXEntities?);
          outlined destroy of ModalityXEntities((uint64_t)v22);
          outlined destroy of ModalityXRecognitionSausage?(v17, &demangling cache variable for type metadata for ModalityXEntities?);
          if (v43) {
            goto LABEL_21;
          }
LABEL_24:
          char v34 = 0;
          return v34 & 1;
        }
        outlined destroy of ModalityXEntities(v41);
        outlined destroy of ModalityXRecognitionSausage?((uint64_t)v25, &demangling cache variable for type metadata for ModalityXEntities?);
        outlined destroy of ModalityXRecognitionSausage?((uint64_t)v27, &demangling cache variable for type metadata for ModalityXEntities?);
        outlined destroy of ModalityXEntities((uint64_t)v22);
        uint64_t v40 = v17;
        uint64_t v39 = &demangling cache variable for type metadata for ModalityXEntities?;
LABEL_23:
        outlined destroy of ModalityXRecognitionSausage?(v40, v39);
        goto LABEL_24;
      }
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v25, &demangling cache variable for type metadata for ModalityXEntities?);
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v27, &demangling cache variable for type metadata for ModalityXEntities?);
      outlined destroy of ModalityXEntities((uint64_t)v22);
    }
    uint64_t v39 = &demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?);
    uint64_t v40 = v17;
    goto LABEL_23;
  }
  return v34 & 1;
}

Swift::Int ModalityXCategoryEntities.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter((void (*)(void))type metadata accessor for ModalityXCategoryEntities, &lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

Swift::Int ModalityXWordWithPronunciations.hashValue.getter(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXCategoryEntities()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  return ModalityXCategoryEntities.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXCategoryEntities()
{
  return ModalityXCategoryEntities.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXCategoryEntities(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Message in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Hashable in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Equatable in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (void (*)(uint64_t))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Message in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Hashable in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Equatable in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (void (*)(uint64_t))type metadata accessor for ModalityXEntityWords);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
}

uint64_t base witness table accessor for Message in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
}

uint64_t base witness table accessor for Hashable in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
}

uint64_t base witness table accessor for Equatable in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (void (*)(uint64_t))type metadata accessor for ModalityXEntities);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Message in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Hashable in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Equatable in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_1(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (void (*)(uint64_t))type metadata accessor for ModalityXCategoryEntities);
}

uint64_t sub_256A0E240()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXWordWithPronunciations.orthography.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A0E26C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXWordWithPronunciations.frequency.getter();
  _DWORD *v0 = result;
  return result;
}

uint64_t sub_256A0E294(int *a1)
{
  return ModalityXWordWithPronunciations.frequency.setter(*a1);
}

uint64_t sub_256A0E2BC()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXWordWithPronunciations.tag.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A0E2E8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXCategoryEntities.key.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A0E314@<X0>(void *a1@<X8>)
{
  return ModalityXCategoryEntities.value.getter(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXWordWithPronunciations(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v7 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v7 + v14;
    uint64_t v19 = (char *)a2 + v14;
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)v7 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ModalityXWordWithPronunciations(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  v16[4] = v17[4];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ModalityXWordWithPronunciations(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  int v16 = *(_DWORD *)v15;
  v14[4] = v15[4];
  *(_DWORD *)uint64_t v14 = v16;
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ModalityXWordWithPronunciations(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  v11[4] = v12[4];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for ModalityXWordWithPronunciations(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  uint64_t v19 = (void *)((char *)a1 + v16);
  uint64_t v20 = (void *)((char *)a2 + v16);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1);
}

uint64_t type metadata completion function for ModalityXWordWithPronunciations()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXEntityWords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0_0);
}

uint64_t storeEnumTagSinglePayload for ModalityXEntityWords(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1_0);
}

uint64_t getEnumTagSinglePayload for ModalityXEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0_1);
}

uint64_t storeEnumTagSinglePayload for ModalityXEntities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1_1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXEntityWords()
{
  OUTLINED_FUNCTION_0_0();
  int v2 = *(_DWORD *)(v1 + 80);
  uint64_t v4 = *v3;
  uint64_t *v0 = *v3;
  if ((v2 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v2 + 16) & ~(unint64_t)v2));
    swift_retain();
  }
  else
  {
    uint64_t v5 = v0;
    OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_2_0();
    uint64_t v7 = *(void (**)(uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = OUTLINED_FUNCTION_195_0();
    v7(v8);
  }
  return v5;
}

void *initializeWithCopy for ModalityXEntityWords(void *a1, void *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_215_0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 16);
  swift_bridgeObjectRetain();
  uint64_t v5 = OUTLINED_FUNCTION_195_0();
  v4(v5);
  return a1;
}

void *assignWithCopy for ModalityXEntityWords(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, void *))(v6 + 24))(a3, a2);
  return a1;
}

void *initializeWithTake for ModalityXEntityWords(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(char *, char *))(v7 + 32))(v5, v6);
  return a1;
}

void *assignWithTake for ModalityXEntityWords(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, void *))(v6 + 40))(a3, a2);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A0EC9C);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A0ED3C);
}

void *__swift_store_extra_inhabitant_indexTm_1(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata completion function for ModalityXEntityWords()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXCategoryEntities(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *(void *)uint64_t v11 = *v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = &a1[v10];
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = type metadata accessor for ModalityXEntities(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v20 = &v14[v19];
      uint64_t v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8(v20, v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for ModalityXEntities(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = type metadata accessor for ModalityXEntities(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ModalityXEntities(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      *uint64_t v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
      return a1;
    }
    outlined destroy of ModalityXEntities((uint64_t)v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v13, v14, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *uint64_t v13 = *v14;
  uint64_t v18 = *(int *)(v15 + 20);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)v14 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for ModalityXCategoryEntities(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for ModalityXEntities(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for ModalityXEntities(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!EnumTagSinglePayload)
  {
    if (!v19)
    {
      *uint64_t v15 = *v16;
      swift_bridgeObjectRelease();
      v8((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v6);
      return a1;
    }
    outlined destroy of ModalityXEntities((uint64_t)v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *uint64_t v15 = *v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A0F6EC);
}

uint64_t sub_256A0F6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 2147483646)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  int v11 = v10 - 1;
  if (v11 < 0) {
    int v11 = -1;
  }
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A0F7C8);
}

void sub_256A0F7C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_0_0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      return;
    }
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void type metadata completion function for ModalityXCategoryEntities()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXEntities?();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ModalityXEntities?()
{
  if (!lazy cache variable for type metadata for ModalityXEntities?)
  {
    type metadata accessor for ModalityXEntities(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ModalityXEntities?);
    }
  }
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return type metadata accessor for ModalityXWordWithPronunciations(0);
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_30_1(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return type metadata accessor for ModalityXCategoryEntities(0);
}

void ModalityXDeviceInfo.init()()
{
  UnknownStorage.init()();
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_86(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_86(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_86(*(int *)(v2 + 28));
  OUTLINED_FUNCTION_86(*(int *)(v3 + 32));
  OUTLINED_FUNCTION_86(*(int *)(v4 + 36));
}

uint64_t type metadata accessor for ModalityXDeviceInfo(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXDeviceInfo);
}

void ModalityXAudioMetadata.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for ModalityXAudioMetadata(0);
  *(unsigned char *)(a1 + v2[5]) = 8;
  *(unsigned char *)(a1 + v2[6]) = 8;
  *(unsigned char *)(a1 + v2[7]) = 2;
  uint64_t v3 = a1 + v2[8];
  uint64_t v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(unsigned char *)(a1 + v2[9]) = 2;
  OUTLINED_FUNCTION_86(v2[10]);
}

uint64_t type metadata accessor for ModalityXAudioMetadata(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioMetadata);
}

uint64_t type metadata accessor for ModalityXVoiceTriggerInfo(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXVoiceTriggerInfo);
}

uint64_t ModalityXDeviceInfo.deviceName.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 20))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXDeviceInfo.deviceName : ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.deviceName.setter();
}

uint64_t ModalityXDeviceInfo.deviceName.setter()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXDeviceInfo.deviceName.modify(uint64_t a1)
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_25_1(a1) + 20);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_50(v2)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXDeviceInfo.hasDeviceName.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearDeviceName()()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t ModalityXDeviceInfo.deviceVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 24))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXDeviceInfo.deviceVersion : ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.deviceVersion.setter();
}

uint64_t ModalityXDeviceInfo.deviceVersion.setter()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXDeviceInfo.deviceVersion.modify(uint64_t a1)
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_25_1(a1) + 24);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_50(v2)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXDeviceInfo.hasDeviceVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearDeviceVersion()()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t ModalityXDeviceInfo.systemName.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 28))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXDeviceInfo.systemName : ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.systemName.setter();
}

uint64_t ModalityXDeviceInfo.systemName.setter()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXDeviceInfo.systemName.modify(uint64_t a1)
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_25_1(a1) + 28);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_50(v2)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXDeviceInfo.hasSystemName.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemName()()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t ModalityXDeviceInfo.systemVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 32))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXDeviceInfo.systemVersion : ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.systemVersion.setter();
}

uint64_t ModalityXDeviceInfo.systemVersion.setter()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXDeviceInfo.systemVersion.modify(uint64_t a1)
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_25_1(a1) + 32);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_50(v2)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXDeviceInfo.hasSystemVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemVersion()()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t ModalityXDeviceInfo.systemBuild.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 36))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXDeviceInfo.systemBuild : ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.systemBuild.setter();
}

uint64_t ModalityXDeviceInfo.systemBuild.setter()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t result = OUTLINED_FUNCTION_319();
  void *v1 = v2;
  v1[1] = v0;
  return result;
}

uint64_t ModalityXDeviceInfo.systemBuild.modify(uint64_t a1)
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_25_1(a1) + 36);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_50(v2)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)uint64_t v1 = v3;
  *(void *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXDeviceInfo.hasSystemBuild.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemBuild()()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t (*ModalityXDeviceInfo.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXAudioMetadata.codec.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_52_1(*(int *)(v0 + 20));
}

uint64_t key path setter for ModalityXAudioMetadata.codec : ModalityXAudioMetadata(char *a1)
{
  char v2 = *a1;
  return ModalityXAudioMetadata.codec.setter(&v2);
}

uint64_t ModalityXAudioMetadata.codec.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*ModalityXAudioMetadata.codec.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_36_1(a1);
  OUTLINED_FUNCTION_40_0(*(int *)(v1 + 20));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXAudioMetadata.hasCodec.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 20)) != 8;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearCodec()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 20)) = 8;
}

void ModalityXAudioMetadata.audioSource.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_52_1(*(int *)(v0 + 24));
}

uint64_t key path setter for ModalityXAudioMetadata.audioSource : ModalityXAudioMetadata(char *a1)
{
  char v2 = *a1;
  return ModalityXAudioMetadata.audioSource.setter(&v2);
}

uint64_t ModalityXAudioMetadata.audioSource.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*ModalityXAudioMetadata.audioSource.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_36_1(a1);
  OUTLINED_FUNCTION_40_0(*(int *)(v1 + 24));
  return ModalityXCancelRequest.reason.modify;
}

BOOL ModalityXAudioMetadata.hasAudioSource.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 24)) != 8;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearAudioSource()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 24)) = 8;
}

uint64_t ModalityXAudioMetadata.isFarField.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) & 1;
}

uint64_t ModalityXAudioMetadata.isFarField.setter(char a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*ModalityXAudioMetadata.isFarField.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_36_1(a1);
  OUTLINED_FUNCTION_108(*(int *)(v1 + 28));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXAudioMetadata.hasIsFarField.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) != 2;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearIsFarField()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) = 2;
}

uint64_t ModalityXAudioMetadata.voiceTriggerInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  uint64_t v4 = OUTLINED_FUNCTION_7_0(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModalityXAudioMetadata(0);
  outlined init with copy of ModalityXVoiceTriggerInfo?(v1 + *(int *)(v7 + 32), (uint64_t)v6);
  OUTLINED_FUNCTION_53_1();
  if (!v8) {
    return outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v6, a1);
  }
  ModalityXVoiceTriggerInfo.init()(a1);
  return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
}

uint64_t outlined init with copy of ModalityXVoiceTriggerInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t key path setter for ModalityXAudioMetadata.voiceTriggerInfo : ModalityXAudioMetadata(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  MEMORY[0x270FA5388](v2 - 8);
  outlined init with copy of ModalityXVoiceTriggerInfo(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return ModalityXAudioMetadata.voiceTriggerInfo.setter();
}

uint64_t ModalityXAudioMetadata.voiceTriggerInfo.setter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  uint64_t v2 = OUTLINED_FUNCTION_67();
  outlined init with take of ModalityXVoiceTriggerInfo(v2, v3);
  uint64_t v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v4);
}

void ModalityXVoiceTriggerInfo.init()(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  OUTLINED_FUNCTION_16_0(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_16_0(*(int *)(v4 + 28));
  OUTLINED_FUNCTION_16_0(*(int *)(v5 + 32));
  OUTLINED_FUNCTION_16_0(*(int *)(v6 + 36));
  OUTLINED_FUNCTION_16_0(*(int *)(v7 + 40));
  OUTLINED_FUNCTION_86(*(int *)(v8 + 44));
  OUTLINED_FUNCTION_16_0(*(int *)(v9 + 48));
  OUTLINED_FUNCTION_16_0(*(int *)(v10 + 52));
  OUTLINED_FUNCTION_16_0(*(int *)(v11 + 56));
}

uint64_t outlined init with take of ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*ModalityXAudioMetadata.voiceTriggerInfo.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  OUTLINED_FUNCTION_7_0(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  v3[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  v3[2] = v7;
  OUTLINED_FUNCTION_2_0();
  size_t v9 = *(void *)(v8 + 64);
  v3[3] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[4] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  *((_DWORD *)v3 + 10) = v11;
  outlined init with copy of ModalityXVoiceTriggerInfo?(v1 + v11, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7) == 1)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_13_0(v7[5]);
    OUTLINED_FUNCTION_13_0(v7[6]);
    OUTLINED_FUNCTION_13_0(v7[7]);
    OUTLINED_FUNCTION_13_0(v7[8]);
    OUTLINED_FUNCTION_13_0(v7[9]);
    OUTLINED_FUNCTION_13_0(v7[10]);
    uint64_t v12 = &v10[v7[11]];
    *(void *)uint64_t v12 = 0;
    *((void *)v12 + 1) = 0;
    OUTLINED_FUNCTION_13_0(v7[12]);
    OUTLINED_FUNCTION_13_0(v7[13]);
    OUTLINED_FUNCTION_13_0(v7[14]);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v6, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  }
  else
  {
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v6, (uint64_t)v10);
  }
  return ModalityXAudioMetadata.voiceTriggerInfo.modify;
}

void ModalityXAudioMetadata.voiceTriggerInfo.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 24);
  uint64_t v5 = *(void **)(*(void *)a1 + 32);
  uint64_t v6 = *(void **)(*(void *)a1 + 8);
  uint64_t v7 = **(void **)a1 + v3;
  if (a2)
  {
    outlined init with copy of ModalityXVoiceTriggerInfo(*(void *)(*(void *)a1 + 32), (uint64_t)v4);
    outlined destroy of ModalityXRecognitionSausage?(v7, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v4, v7);
    OUTLINED_FUNCTION_4_0();
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v5);
  }
  else
  {
    outlined destroy of ModalityXRecognitionSausage?(**(void **)a1 + v3, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v5, v7);
    OUTLINED_FUNCTION_4_0();
  }
  free(v5);
  free(v4);
  free(v6);

  free(v2);
}

uint64_t outlined init with copy of ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ModalityXVoiceTriggerInfo(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ModalityXAudioMetadata.hasVoiceTriggerInfo.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  uint64_t v2 = OUTLINED_FUNCTION_7_0(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXAudioMetadata(0);
  outlined init with copy of ModalityXVoiceTriggerInfo?(v0 + *(int *)(v5 + 32), (uint64_t)v4);
  OUTLINED_FUNCTION_53_1();
  if (v6) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = 1;
  }
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  return v7;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearVoiceTriggerInfo()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  outlined destroy of ModalityXRecognitionSausage?(v1, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  uint64_t v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t ModalityXAudioMetadata.enableServerEndpoint.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) & 1;
}

uint64_t ModalityXAudioMetadata.enableServerEndpoint.setter(char a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*ModalityXAudioMetadata.enableServerEndpoint.modify(void *a1))()
{
  uint64_t v1 = OUTLINED_FUNCTION_36_1(a1);
  OUTLINED_FUNCTION_108(*(int *)(v1 + 36));
  return ModalityXSessionMetadata.dataSharingOptInStatus.modify;
}

BOOL ModalityXAudioMetadata.hasEnableServerEndpoint.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) != 2;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearEnableServerEndpoint()()
{
  *(unsigned char *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) = 2;
}

uint64_t ModalityXAudioMetadata.clientModelVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioMetadata(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 40))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXAudioMetadata.clientModelVersion : ModalityXAudioMetadata(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXAudioMetadata.clientModelVersion.setter(v1, v2);
}

uint64_t ModalityXAudioMetadata.clientModelVersion.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ModalityXAudioMetadata(0);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXAudioMetadata.clientModelVersion.modify(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  if (OUTLINED_FUNCTION_50(v3)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXAudioMetadata.hasClientModelVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXAudioMetadata(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearClientModelVersion()()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

uint64_t (*ModalityXAudioMetadata.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

double ModalityXVoiceTriggerInfo.triggerScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 20));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.triggerScore.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 20));
}

uint64_t (*ModalityXVoiceTriggerInfo.triggerScore.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 20);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerScore()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 20));
}

double ModalityXVoiceTriggerInfo.triggerThreshold.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 24));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.triggerThreshold.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 24));
}

uint64_t (*ModalityXVoiceTriggerInfo.triggerThreshold.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 24);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerThreshold.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerThreshold()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 24));
}

double ModalityXVoiceTriggerInfo.satScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 28));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.satScore.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 28));
}

uint64_t (*ModalityXVoiceTriggerInfo.satScore.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 28);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasSatScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearSatScore()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 28));
}

double ModalityXVoiceTriggerInfo.satThreshold.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 32));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.satThreshold.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 32));
}

uint64_t (*ModalityXVoiceTriggerInfo.satThreshold.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 32);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasSatThreshold.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearSatThreshold()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 32));
}

double ModalityXVoiceTriggerInfo.recognizerScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 36));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.recognizerScore.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 36));
}

uint64_t (*ModalityXVoiceTriggerInfo.recognizerScore.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 36);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasRecognizerScore.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearRecognizerScore()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 36));
}

double ModalityXVoiceTriggerInfo.recognizerThresholdOffset.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 40));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.recognizerThresholdOffset.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 40));
}

uint64_t (*ModalityXVoiceTriggerInfo.recognizerThresholdOffset.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 40);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasRecognizerThresholdOffset.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearRecognizerThresholdOffset()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 40));
}

uint64_t ModalityXVoiceTriggerInfo.configVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (OUTLINED_FUNCTION_50(*(int *)(v0 + 44))) {
    OUTLINED_FUNCTION_336();
  }
  else {
    OUTLINED_FUNCTION_210();
  }
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_67();
}

uint64_t key path setter for ModalityXVoiceTriggerInfo.configVersion : ModalityXVoiceTriggerInfo(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return ModalityXVoiceTriggerInfo.configVersion.setter(v1, v2);
}

uint64_t ModalityXVoiceTriggerInfo.configVersion.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  uint64_t result = OUTLINED_FUNCTION_319();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ModalityXVoiceTriggerInfo.configVersion.modify(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for ModalityXVoiceTriggerInfo(0) + 44);
  *(_DWORD *)(a1 + 24) = v3;
  if (OUTLINED_FUNCTION_50(v3)) {
    OUTLINED_FUNCTION_66();
  }
  else {
    OUTLINED_FUNCTION_42();
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_52();
}

BOOL ModalityXVoiceTriggerInfo.hasConfigVersion.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_139(*(int *)(v0 + 44));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearConfigVersion()()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_298();
  void *v0 = 0;
  v0[1] = 0;
}

double ModalityXVoiceTriggerInfo.hardwareSampleRate.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 48));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.hardwareSampleRate.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 48));
}

uint64_t (*ModalityXVoiceTriggerInfo.hardwareSampleRate.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 48);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasHardwareSampleRate.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 48));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearHardwareSampleRate()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 48));
}

double ModalityXVoiceTriggerInfo.extraSamplesAtStart.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 52));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.extraSamplesAtStart.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 52));
}

uint64_t (*ModalityXVoiceTriggerInfo.extraSamplesAtStart.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 52);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasExtraSamplesAtStart.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 52));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearExtraSamplesAtStart()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 52));
}

double ModalityXVoiceTriggerInfo.triggerEnd.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  double result = OUTLINED_FUNCTION_54_0(*(int *)(v0 + 56));
  if (!v3) {
    return v2;
  }
  return result;
}

void ModalityXVoiceTriggerInfo.triggerEnd.setter()
{
  uint64_t v0 = OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_1(*(int *)(v0 + 56));
}

uint64_t (*ModalityXVoiceTriggerInfo.triggerEnd.modify(uint64_t a1))()
{
  uint64_t v2 = *(int *)(OUTLINED_FUNCTION_14_0(a1) + 56);
  *(_DWORD *)(v1 + 16) = v2;
  double v3 = OUTLINED_FUNCTION_54_0(v2);
  if (!v5) {
    double v3 = v4;
  }
  *(double *)uint64_t v1 = v3;
  return ModalityXLatnnMitigatorResult.threshold.modify;
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerEnd.getter()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_5_1(*(int *)(v0 + 56));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerEnd()()
{
  uint64_t v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_4_2(*(int *)(v0 + 56));
}

uint64_t ModalityXDeviceInfo.unknownFields.getter()
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_2_0();
  uint64_t v0 = OUTLINED_FUNCTION_67();

  return v1(v0);
}

uint64_t (*ModalityXVoiceTriggerInfo.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t static ModalityXDeviceInfo.protoMessageName.getter()
{
  return 0x63697665442E584DLL;
}

uint64_t static ModalityXDeviceInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXDeviceInfo._protobuf_nameMap, a1);
}

uint64_t ModalityXDeviceInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
        break;
      case 2:
        OUTLINED_FUNCTION_6_1();
        closure #2 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
        break;
      case 3:
        OUTLINED_FUNCTION_6_1();
        closure #3 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
        break;
      case 4:
        OUTLINED_FUNCTION_6_1();
        closure #4 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
        break;
      case 5:
        OUTLINED_FUNCTION_6_1();
        closure #5 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #2 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #4 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #5 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t ModalityXDeviceInfo.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXDeviceInfo.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXDeviceInfo.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXDeviceInfo.traverse<A>(visitor:)(v4);
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #4 in ModalityXDeviceInfo.traverse<A>(visitor:)(v5);
    uint64_t v6 = OUTLINED_FUNCTION_25();
    closure #5 in ModalityXDeviceInfo.traverse<A>(visitor:)(v6);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(void *)(a1 + *(int *)(result + 20) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(void *)(a1 + *(int *)(result + 24) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(void *)(a1 + *(int *)(result + 28) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #5 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(void *)(a1 + *(int *)(result + 36) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t static ModalityXDeviceInfo.== infix(_:_:)()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXDeviceInfo(v4);
  OUTLINED_FUNCTION_28();
  if (!v7)
  {
    if (v5) {
      goto LABEL_46;
    }
    goto LABEL_10;
  }
  if (!v5) {
    goto LABEL_46;
  }
  OUTLINED_FUNCTION_21(v6);
  BOOL v10 = v10 && v8 == v9;
  if (v10 || (char v11 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    OUTLINED_FUNCTION_28();
    if (v14)
    {
      if (!v12) {
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_21(v13);
      if (!v10 || v15 != v16)
      {
        char v11 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return v11 & 1;
        }
      }
    }
    else if (v12)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_28();
    if (v20)
    {
      if (!v18) {
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_21(v19);
      if (!v10 || v21 != v22)
      {
        char v11 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return v11 & 1;
        }
      }
    }
    else if (v18)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_28();
    if (v26)
    {
      if (!v24) {
        goto LABEL_46;
      }
      OUTLINED_FUNCTION_21(v25);
      if (!v10 || v27 != v28)
      {
        char v11 = 0;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return v11 & 1;
        }
      }
    }
    else if (v24)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_28();
    if (v32)
    {
      if (v30)
      {
        OUTLINED_FUNCTION_21(v31);
        if (!v10 || v33 != v34)
        {
          char v11 = 0;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return v11 & 1;
          }
        }
LABEL_48:
        uint64_t v37 = *(void (**)(void))(v1 + 16);
        OUTLINED_FUNCTION_46();
        v37();
        OUTLINED_FUNCTION_46();
        v37();
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
        char v11 = OUTLINED_FUNCTION_54();
        char v38 = *(void (**)(void))(v1 + 8);
        OUTLINED_FUNCTION_65();
        v38();
        OUTLINED_FUNCTION_65();
        v38();
        return v11 & 1;
      }
    }
    else if (!v30)
    {
      goto LABEL_48;
    }
LABEL_46:
    char v11 = 0;
  }
  return v11 & 1;
}

Swift::Int ModalityXDeviceInfo.hashValue.getter()
{
  return ModalityXDeviceInfo.hashValue.getter((void (*)(void))type metadata accessor for ModalityXDeviceInfo, &lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXDeviceInfo()
{
  return 0x63697665442E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXDeviceInfo(uint64_t a1, uint64_t a2)
{
  return ModalityXDeviceInfo.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXDeviceInfo()
{
  return ModalityXDeviceInfo.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXDeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXDeviceInfo(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXDeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t static ModalityXAudioMetadata.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t static ModalityXAudioMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioMetadata._protobuf_nameMap, a1);
}

uint64_t ModalityXAudioMetadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      case 2:
        OUTLINED_FUNCTION_6_1();
        closure #2 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      case 3:
        OUTLINED_FUNCTION_6_1();
        closure #3 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      case 4:
        OUTLINED_FUNCTION_6_1();
        closure #4 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      case 5:
        OUTLINED_FUNCTION_6_1();
        closure #5 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      case 6:
        OUTLINED_FUNCTION_6_1();
        closure #6 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t closure #2 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t closure #3 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #4 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #5 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #6 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t ModalityXAudioMetadata.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXAudioMetadata.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXAudioMetadata.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXAudioMetadata.traverse<A>(visitor:)(v4);
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #4 in ModalityXAudioMetadata.traverse<A>(visitor:)(v5);
    uint64_t v6 = OUTLINED_FUNCTION_25();
    closure #5 in ModalityXAudioMetadata.traverse<A>(visitor:)(v6);
    uint64_t v7 = OUTLINED_FUNCTION_25();
    closure #6 in ModalityXAudioMetadata.traverse<A>(visitor:)(v7);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 20)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ModalityXAudioMetadata(0);
  outlined init with copy of ModalityXVoiceTriggerInfo?(a1 + *(int *)(v8 + 32), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1) {
    return outlined destroy of ModalityXRecognitionSausage?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  }
  outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v4, (uint64_t)v7);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v7);
}

uint64_t closure #5 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 36)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #6 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(void *)(a1 + *(int *)(result + 40) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t static ModalityXAudioMetadata.== infix(_:_:)()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v60 = v3;
  uint64_t v61 = v2;
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v59 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v58 = (char *)&v58 - v6;
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXVoiceTriggerInfo?, ModalityXVoiceTriggerInfo?));
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  uint64_t v15 = OUTLINED_FUNCTION_7_0(v14);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v58 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v58 - v22;
  uint64_t v24 = (int *)type metadata accessor for ModalityXAudioMetadata(0);
  uint64_t v25 = v24;
  uint64_t v26 = v24[5];
  int v27 = *(unsigned __int8 *)(v1 + v26);
  int v28 = *(unsigned __int8 *)(v0 + v26);
  if (v27 == 8)
  {
    if (v28 != 8) {
      goto LABEL_31;
    }
  }
  else
  {
    BOOL v29 = v28 != 8 && v27 == v28;
    if (!v29) {
      goto LABEL_31;
    }
  }
  uint64_t v30 = v24[6];
  int v31 = *(unsigned __int8 *)(v1 + v30);
  int v32 = *(unsigned __int8 *)(v0 + v30);
  if (v31 == 8)
  {
    if (v32 != 8) {
      goto LABEL_31;
    }
  }
  else if (v32 == 8 || v31 != v32)
  {
    goto LABEL_31;
  }
  uint64_t v34 = v24[7];
  int v35 = *(unsigned __int8 *)(v1 + v34);
  int v36 = *(unsigned __int8 *)(v0 + v34);
  if (v35 == 2)
  {
    if (v36 != 2) {
      goto LABEL_31;
    }
  }
  else if (v36 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
  {
    goto LABEL_31;
  }
  outlined init with copy of ModalityXVoiceTriggerInfo?(v1 + v24[8], (uint64_t)v23);
  outlined init with copy of ModalityXVoiceTriggerInfo?(v0 + v25[8], (uint64_t)v21);
  uint64_t v37 = (uint64_t)&v13[*(int *)(v10 + 48)];
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v23, (uint64_t)v13);
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v21, v37);
  OUTLINED_FUNCTION_30_1((uint64_t)v13);
  if (v29)
  {
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v23, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    OUTLINED_FUNCTION_30_1(v37);
    if (v29)
    {
      outlined destroy of ModalityXRecognitionSausage?((uint64_t)v13, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
      goto LABEL_34;
    }
LABEL_30:
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v13, &demangling cache variable for type metadata for (ModalityXVoiceTriggerInfo?, ModalityXVoiceTriggerInfo?));
    goto LABEL_31;
  }
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v13, (uint64_t)v18);
  OUTLINED_FUNCTION_30_1(v37);
  if (v38)
  {
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined destroy of ModalityXRecognitionSausage?((uint64_t)v23, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v18);
    goto LABEL_30;
  }
  outlined init with take of ModalityXVoiceTriggerInfo(v37, (uint64_t)v9);
  char v41 = static ModalityXVoiceTriggerInfo.== infix(_:_:)();
  outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v9);
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v23, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v18);
  outlined destroy of ModalityXRecognitionSausage?((uint64_t)v13, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  if ((v41 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_34:
  uint64_t v42 = v25[9];
  int v43 = *(unsigned __int8 *)(v1 + v42);
  int v44 = *(unsigned __int8 *)(v0 + v42);
  if (v43 == 2)
  {
    if (v44 != 2) {
      goto LABEL_31;
    }
  }
  else if (v44 == 2 || ((((v44 & 1) == 0) ^ v43) & 1) == 0)
  {
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_28();
  if (!v47)
  {
    if (!v45)
    {
LABEL_48:
      uint64_t v52 = v60;
      uint64_t v51 = v61;
      char v53 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      uint64_t v54 = v58;
      v53(v58, v1, v61);
      uint64_t v55 = v59;
      uint64_t v56 = OUTLINED_FUNCTION_118();
      ((void (*)(uint64_t))v53)(v56);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v55, v51);
      v57(v54, v51);
      return v39 & 1;
    }
LABEL_31:
    char v39 = 0;
    return v39 & 1;
  }
  if (!v45) {
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_21(v46);
  if (v29 && v48 == v49) {
    goto LABEL_48;
  }
  char v39 = 0;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    goto LABEL_48;
  }
  return v39 & 1;
}

Swift::Int ModalityXAudioMetadata.hashValue.getter()
{
  return ModalityXDeviceInfo.hashValue.getter((void (*)(void))type metadata accessor for ModalityXAudioMetadata, &lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioMetadata()
{
  return 0xD000000000000010;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioMetadata(uint64_t a1, uint64_t a2)
{
  return ModalityXAudioMetadata.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioMetadata()
{
  return ModalityXAudioMetadata.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioMetadata(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

unint64_t static ModalityXVoiceTriggerInfo.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t static ModalityXVoiceTriggerInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXVoiceTriggerInfo._protobuf_nameMap, a1);
}

uint64_t ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        OUTLINED_FUNCTION_6_1();
        closure #1 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 2:
        OUTLINED_FUNCTION_6_1();
        closure #2 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 3:
        OUTLINED_FUNCTION_6_1();
        closure #3 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 4:
        OUTLINED_FUNCTION_6_1();
        closure #4 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 5:
        OUTLINED_FUNCTION_6_1();
        closure #5 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 6:
        OUTLINED_FUNCTION_6_1();
        closure #6 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 7:
        OUTLINED_FUNCTION_6_1();
        closure #7 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 8:
        OUTLINED_FUNCTION_6_1();
        closure #8 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 9:
        OUTLINED_FUNCTION_6_1();
        closure #9 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      case 10:
        OUTLINED_FUNCTION_6_1();
        closure #10 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
        break;
      default:
        break;
    }
    OUTLINED_FUNCTION_118();
  }
}

uint64_t closure #1 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #2 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #3 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #4 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #5 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #6 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #7 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #8 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #9 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #10 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t ModalityXVoiceTriggerInfo.traverse<A>(visitor:)()
{
  uint64_t v1 = OUTLINED_FUNCTION_25();
  uint64_t result = closure #1 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_25();
    closure #2 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v3);
    uint64_t v4 = OUTLINED_FUNCTION_25();
    closure #3 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v4);
    uint64_t v5 = OUTLINED_FUNCTION_25();
    closure #4 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v5);
    uint64_t v6 = OUTLINED_FUNCTION_25();
    closure #5 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v6);
    uint64_t v7 = OUTLINED_FUNCTION_25();
    closure #6 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v7);
    uint64_t v8 = OUTLINED_FUNCTION_25();
    closure #7 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v8);
    uint64_t v9 = OUTLINED_FUNCTION_25();
    closure #8 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v9);
    uint64_t v10 = OUTLINED_FUNCTION_25();
    closure #9 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v10);
    uint64_t v11 = OUTLINED_FUNCTION_25();
    closure #10 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v11);
    return OUTLINED_FUNCTION_82();
  }
  return result;
}

uint64_t closure #1 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 20) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 24) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 28) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #4 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 32) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #5 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #6 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 40) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #7 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (*(void *)(a1 + *(int *)(result + 44) + 8)) {
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #8 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 48) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #9 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 52) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #10 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 56) + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  return result;
}

uint64_t static ModalityXVoiceTriggerInfo.== infix(_:_:)()
{
  OUTLINED_FUNCTION_97();
  OUTLINED_FUNCTION_1_0();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_30();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = OUTLINED_FUNCTION_53();
  type metadata accessor for ModalityXVoiceTriggerInfo(v4);
  OUTLINED_FUNCTION_235_0();
  if (v6)
  {
    if (!v5) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v7) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_235_0();
  if (v9)
  {
    if (!v8) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v10) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_235_0();
  if (v12)
  {
    if (!v11) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v13) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_235_0();
  if (v15)
  {
    if (!v14) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v16) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_235_0();
  if (v18)
  {
    if (!v17) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v19) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_235_0();
  if (v21)
  {
    if (!v20) {
      goto LABEL_44;
    }
  }
  else
  {
    OUTLINED_FUNCTION_230_0();
    if (v22) {
      goto LABEL_44;
    }
  }
  OUTLINED_FUNCTION_28();
  if (!v25)
  {
    if (v23) {
      goto LABEL_44;
    }
LABEL_34:
    OUTLINED_FUNCTION_235_0();
    if (v31)
    {
      if (!v30) {
        goto LABEL_44;
      }
    }
    else
    {
      OUTLINED_FUNCTION_230_0();
      if (v32) {
        goto LABEL_44;
      }
    }
    OUTLINED_FUNCTION_235_0();
    if (v34)
    {
      if (!v33) {
        goto LABEL_44;
      }
LABEL_42:
      OUTLINED_FUNCTION_235_0();
      if (v37)
      {
        if (!v36) {
          goto LABEL_44;
        }
      }
      else
      {
        OUTLINED_FUNCTION_230_0();
        if (v39) {
          goto LABEL_44;
        }
      }
      uint64_t v40 = *(void (**)(void))(v1 + 16);
      OUTLINED_FUNCTION_46();
      v40();
      OUTLINED_FUNCTION_46();
      v40();
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, MEMORY[0x263F50560]);
      char v29 = OUTLINED_FUNCTION_54();
      char v41 = *(void (**)(void))(v1 + 8);
      OUTLINED_FUNCTION_65();
      v41();
      OUTLINED_FUNCTION_65();
      v41();
      return v29 & 1;
    }
    OUTLINED_FUNCTION_230_0();
    if ((v35 & 1) == 0) {
      goto LABEL_42;
    }
LABEL_44:
    char v29 = 0;
    return v29 & 1;
  }
  if (!v23) {
    goto LABEL_44;
  }
  OUTLINED_FUNCTION_21(v24);
  BOOL v28 = v28 && v26 == v27;
  if (v28) {
    goto LABEL_34;
  }
  char v29 = 0;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    goto LABEL_34;
  }
  return v29 & 1;
}

Swift::Int ModalityXVoiceTriggerInfo.hashValue.getter()
{
  return ModalityXDeviceInfo.hashValue.getter((void (*)(void))type metadata accessor for ModalityXVoiceTriggerInfo, &lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
}

Swift::Int ModalityXDeviceInfo.hashValue.getter(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXVoiceTriggerInfo()
{
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  return ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXVoiceTriggerInfo()
{
  return ModalityXVoiceTriggerInfo.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXVoiceTriggerInfo(uint64_t a1)
{
  uint64_t v2 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);

  return MEMORY[0x270F44CC0](a1, v2);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);

  return MEMORY[0x270F44CD8](a1, a2, v4);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Message in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Hashable in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Equatable in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Message in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Hashable in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Equatable in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Message in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Hashable in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Equatable in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_2(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (void (*)(uint64_t))type metadata accessor for ModalityXVoiceTriggerInfo);
}

uint64_t sub_256A14F8C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXDeviceInfo.deviceName.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A14FB8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXDeviceInfo.deviceVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A14FE4()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXDeviceInfo.systemName.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A15010()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXDeviceInfo.systemVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_256A1503C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXDeviceInfo.systemBuild.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A15068()
{
}

void sub_256A15090()
{
}

uint64_t sub_256A150B8()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXAudioMetadata.isFarField.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_256A150E4(char *a1)
{
  return ModalityXAudioMetadata.isFarField.setter(*a1);
}

uint64_t sub_256A1510C@<X0>(uint64_t a1@<X8>)
{
  return ModalityXAudioMetadata.voiceTriggerInfo.getter(a1);
}

uint64_t sub_256A15134()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXAudioMetadata.enableServerEndpoint.getter();
  unsigned char *v0 = result & 1;
  return result;
}

uint64_t sub_256A15160(char *a1)
{
  return ModalityXAudioMetadata.enableServerEndpoint.setter(*a1);
}

uint64_t sub_256A15188()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXAudioMetadata.clientModelVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A151B4()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.triggerScore.getter();
}

void sub_256A151DC(uint64_t a1)
{
}

void sub_256A15200()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.triggerThreshold.getter();
}

void sub_256A15228(uint64_t a1)
{
}

void sub_256A1524C()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.satScore.getter();
}

void sub_256A15274(uint64_t a1)
{
}

void sub_256A15298()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.satThreshold.getter();
}

void sub_256A152C0(uint64_t a1)
{
}

void sub_256A152E4()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.recognizerScore.getter();
}

void sub_256A1530C(uint64_t a1)
{
}

void sub_256A15330()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.recognizerThresholdOffset.getter();
}

void sub_256A15358(uint64_t a1)
{
}

uint64_t sub_256A1537C()
{
  OUTLINED_FUNCTION_18();
  uint64_t result = ModalityXVoiceTriggerInfo.configVersion.getter();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

void sub_256A153A8()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.hardwareSampleRate.getter();
}

void sub_256A153D0(uint64_t a1)
{
}

void sub_256A153F4()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.extraSamplesAtStart.getter();
}

void sub_256A1541C(uint64_t a1)
{
}

void sub_256A15440()
{
  OUTLINED_FUNCTION_18();
  double *v0 = ModalityXVoiceTriggerInfo.triggerEnd.getter();
}

void sub_256A15468(uint64_t a1)
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXDeviceInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (uint64_t *)((char *)a1 + v8);
    int v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    char v13 = (uint64_t *)((char *)a1 + v9);
    int v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    char v18 = (uint64_t *)((char *)a1 + v16);
    char v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    char v21 = (uint64_t *)((char *)a1 + v17);
    char v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *char v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXDeviceInfo(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  char v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  char v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  char v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  char v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  char v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  char v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A15A84);
}

uint64_t sub_256A15A84()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return OUTLINED_FUNCTION_44(v0 + *(int *)(v2 + 20));
  }

  return __swift_getEnumTagSinglePayload(v0, v1, v3);
}

uint64_t storeEnumTagSinglePayload for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A15B08);
}

void sub_256A15B08()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(v0 + 20));
  }
}

uint64_t type metadata completion function for ModalityXDeviceInfo()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXAudioMetadata(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    a1[v9] = a2[v9];
    uint64_t v10 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      uint64_t v16 = v13[5];
      uint64_t v17 = &v11[v16];
      char v18 = &v12[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v13[6];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = &v12[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v13[7];
      uint64_t v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v13[8];
      uint64_t v26 = &v11[v25];
      uint64_t v27 = &v12[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v13[9];
      char v29 = &v11[v28];
      uint64_t v30 = &v12[v28];
      *(void *)char v29 = *(void *)v30;
      v29[8] = v30[8];
      uint64_t v31 = v13[10];
      char v32 = &v11[v31];
      int v33 = &v12[v31];
      *(void *)char v32 = *(void *)v33;
      uint64_t v32[8] = v33[8];
      uint64_t v34 = v13[11];
      char v35 = &v11[v34];
      int v36 = &v12[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)char v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = v13[12];
      char v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      *(void *)char v39 = *(void *)v40;
      v39[8] = v40[8];
      uint64_t v41 = v13[13];
      uint64_t v42 = &v11[v41];
      int v43 = &v12[v41];
      v42[8] = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      uint64_t v44 = v13[14];
      uint64_t v45 = &v11[v44];
      uint64_t v46 = &v12[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
    }
    uint64_t v47 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    uint64_t v14 = v12[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v12[6];
    char v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v12[7];
    uint64_t v21 = &v10[v20];
    uint64_t v22 = &v11[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v12[8];
    uint64_t v24 = &v10[v23];
    uint64_t v25 = &v11[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v12[9];
    uint64_t v27 = &v10[v26];
    uint64_t v28 = &v11[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v12[10];
    uint64_t v30 = &v10[v29];
    uint64_t v31 = &v11[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v12[11];
    int v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)int v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v12[12];
    uint64_t v37 = &v10[v36];
    uint64_t v38 = &v11[v36];
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = v38[8];
    uint64_t v39 = v12[13];
    uint64_t v40 = &v10[v39];
    uint64_t v41 = &v11[v39];
    v40[8] = v41[8];
    *(void *)uint64_t v40 = *(void *)v41;
    uint64_t v42 = v12[14];
    int v43 = &v10[v42];
    uint64_t v44 = &v11[v42];
    *(void *)int v43 = *(void *)v44;
    v43[8] = v44[8];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
  }
  uint64_t v45 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v95 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 24);
  v7(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v58 = v11[5];
      uint64_t v59 = &v9[v58];
      uint64_t v60 = &v10[v58];
      char v61 = v60[8];
      *(void *)uint64_t v59 = *(void *)v60;
      v59[8] = v61;
      uint64_t v62 = v11[6];
      uint64_t v63 = &v9[v62];
      uint64_t v64 = &v10[v62];
      char v65 = v64[8];
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v65;
      uint64_t v66 = v11[7];
      uint64_t v67 = &v9[v66];
      uint64_t v68 = &v10[v66];
      uint64_t v69 = *(void *)v68;
      v67[8] = v68[8];
      *(void *)uint64_t v67 = v69;
      uint64_t v70 = v11[8];
      char v71 = &v9[v70];
      char v72 = &v10[v70];
      uint64_t v73 = *(void *)v72;
      v71[8] = v72[8];
      *(void *)char v71 = v73;
      uint64_t v74 = v11[9];
      uint64_t v75 = &v9[v74];
      char v76 = &v10[v74];
      uint64_t v77 = *(void *)v76;
      v75[8] = v76[8];
      *(void *)uint64_t v75 = v77;
      uint64_t v78 = v11[10];
      uint64_t v79 = &v9[v78];
      uint64_t v80 = &v10[v78];
      LOBYTE(v77) = v80[8];
      *(void *)uint64_t v79 = *(void *)v80;
      v79[8] = v77;
      uint64_t v81 = v11[11];
      char v82 = &v9[v81];
      uint64_t v83 = &v10[v81];
      *(void *)char v82 = *(void *)v83;
      *((void *)v82 + 1) = *((void *)v83 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v84 = v11[12];
      uint64_t v85 = &v9[v84];
      uint64_t v86 = &v10[v84];
      uint64_t v87 = *(void *)v86;
      v85[8] = v86[8];
      *(void *)uint64_t v85 = v87;
      uint64_t v88 = v11[13];
      uint64_t v89 = &v9[v88];
      uint64_t v90 = &v10[v88];
      LOBYTE(v87) = v90[8];
      *(void *)uint64_t v89 = *(void *)v90;
      v89[8] = v87;
      uint64_t v91 = v11[14];
      char v92 = &v9[v91];
      uint64_t v93 = &v10[v91];
      uint64_t v94 = *(void *)v93;
      v92[8] = v93[8];
      *(void *)char v92 = v94;
      goto LABEL_7;
    }
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v9, v10, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v9, v10, v6);
  uint64_t v14 = v11[5];
  uint64_t v15 = &v9[v14];
  uint64_t v16 = &v10[v14];
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  uint64_t v18 = v11[6];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  uint64_t v22 = v11[7];
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  char v25 = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v25;
  uint64_t v26 = v11[8];
  uint64_t v27 = &v9[v26];
  uint64_t v28 = &v10[v26];
  char v29 = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v29;
  uint64_t v30 = v11[9];
  uint64_t v31 = &v9[v30];
  uint64_t v32 = &v10[v30];
  char v33 = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v33;
  uint64_t v34 = v11[10];
  uint64_t v35 = &v9[v34];
  uint64_t v36 = &v10[v34];
  char v37 = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v37;
  uint64_t v38 = v11[11];
  uint64_t v39 = &v9[v38];
  uint64_t v40 = &v10[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  uint64_t v41 = v11[12];
  uint64_t v42 = &v9[v41];
  int v43 = &v10[v41];
  char v44 = v43[8];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v44;
  uint64_t v45 = v11[13];
  uint64_t v46 = &v9[v45];
  uint64_t v47 = &v10[v45];
  char v48 = v47[8];
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v48;
  uint64_t v49 = v11[14];
  uint64_t v50 = &v9[v49];
  uint64_t v51 = &v10[v49];
  char v52 = v51[8];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v52;
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v54 = a3[10];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    uint64_t v14 = v12[5];
    uint64_t v15 = &v10[v14];
    uint64_t v16 = &v11[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v12[6];
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v12[7];
    char v21 = &v10[v20];
    uint64_t v22 = &v11[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v12[8];
    uint64_t v24 = &v10[v23];
    char v25 = &v11[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v12[9];
    uint64_t v27 = &v10[v26];
    uint64_t v28 = &v11[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v12[10];
    uint64_t v30 = &v10[v29];
    uint64_t v31 = &v11[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *(_OWORD *)&v10[v12[11]] = *(_OWORD *)&v11[v12[11]];
    uint64_t v32 = v12[12];
    char v33 = &v10[v32];
    uint64_t v34 = &v11[v32];
    *(void *)char v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v12[13];
    uint64_t v36 = &v10[v35];
    char v37 = &v11[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v12[14];
    uint64_t v39 = &v10[v38];
    uint64_t v40 = &v11[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
  }
  uint64_t v41 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v7((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v49 = v12[5];
      uint64_t v50 = &v10[v49];
      uint64_t v51 = &v11[v49];
      *(void *)uint64_t v50 = *(void *)v51;
      v50[8] = v51[8];
      uint64_t v52 = v12[6];
      uint64_t v53 = &v10[v52];
      uint64_t v54 = &v11[v52];
      *(void *)uint64_t v53 = *(void *)v54;
      v53[8] = v54[8];
      uint64_t v55 = v12[7];
      uint64_t v56 = &v10[v55];
      uint64_t v57 = &v11[v55];
      *(void *)uint64_t v56 = *(void *)v57;
      v56[8] = v57[8];
      uint64_t v58 = v12[8];
      uint64_t v59 = &v10[v58];
      uint64_t v60 = &v11[v58];
      *(void *)uint64_t v59 = *(void *)v60;
      v59[8] = v60[8];
      uint64_t v61 = v12[9];
      uint64_t v62 = &v10[v61];
      uint64_t v63 = &v11[v61];
      *(void *)uint64_t v62 = *(void *)v63;
      v62[8] = v63[8];
      uint64_t v64 = v12[10];
      char v65 = &v10[v64];
      uint64_t v66 = &v11[v64];
      *(void *)char v65 = *(void *)v66;
      v65[8] = v66[8];
      uint64_t v67 = v12[11];
      uint64_t v68 = &v10[v67];
      uint64_t v69 = &v11[v67];
      uint64_t v71 = *(void *)v69;
      uint64_t v70 = *((void *)v69 + 1);
      *(void *)uint64_t v68 = v71;
      *((void *)v68 + 1) = v70;
      swift_bridgeObjectRelease();
      uint64_t v72 = v12[12];
      uint64_t v73 = &v10[v72];
      uint64_t v74 = &v11[v72];
      *(void *)uint64_t v73 = *(void *)v74;
      v73[8] = v74[8];
      uint64_t v75 = v12[13];
      char v76 = &v10[v75];
      uint64_t v77 = &v11[v75];
      v76[8] = v77[8];
      *(void *)char v76 = *(void *)v77;
      uint64_t v78 = v12[14];
      uint64_t v79 = &v10[v78];
      uint64_t v80 = &v11[v78];
      v79[8] = v80[8];
      *(void *)uint64_t v79 = *(void *)v80;
      goto LABEL_7;
    }
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v10, v11, v6);
  uint64_t v15 = v12[5];
  uint64_t v16 = &v10[v15];
  uint64_t v17 = &v11[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  uint64_t v18 = v12[6];
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = v12[7];
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = v12[8];
  char v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  *(void *)char v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v12[9];
  uint64_t v28 = &v10[v27];
  uint64_t v29 = &v11[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = v12[10];
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *(_OWORD *)&v10[v12[11]] = *(_OWORD *)&v11[v12[11]];
  uint64_t v33 = v12[12];
  uint64_t v34 = &v10[v33];
  uint64_t v35 = &v11[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = v12[13];
  char v37 = &v10[v36];
  uint64_t v38 = &v11[v36];
  *(void *)char v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = v12[14];
  uint64_t v40 = &v10[v39];
  uint64_t v41 = &v11[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v41[8];
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  uint64_t v43 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  char v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *char v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A16C80);
}

uint64_t sub_256A16C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for UnknownStorage();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    OUTLINED_FUNCTION_1_1();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return OUTLINED_FUNCTION_44(a1 + *(int *)(a3 + 40));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 32);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A16D40);
}

void sub_256A16D40()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    OUTLINED_FUNCTION_1_1();
    if (*(_DWORD *)(v9 + 84) != v3)
    {
      OUTLINED_FUNCTION_154(*(int *)(v2 + 40));
      return;
    }
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 32);
  }

  __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
}

void type metadata completion function for ModalityXAudioMetadata()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXVoiceTriggerInfo?();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ModalityXVoiceTriggerInfo?()
{
  if (!lazy cache variable for type metadata for ModalityXVoiceTriggerInfo?)
  {
    type metadata accessor for ModalityXVoiceTriggerInfo(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXVoiceTriggerInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    uint64_t v24 = *(void *)v23;
    v22[8] = v23[8];
    *(void *)uint64_t v22 = v24;
    char v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(void *)char v25 = *(void *)v26;
    uint64_t v27 = a3[11];
    uint64_t v28 = a3[12];
    uint64_t v29 = (uint64_t *)((char *)a1 + v27);
    uint64_t v30 = (uint64_t *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (char *)a1 + v28;
    uint64_t v33 = (char *)a2 + v28;
    *(void *)uint64_t v32 = *(void *)v33;
    uint64_t v32[8] = v33[8];
    uint64_t v34 = a3[13];
    uint64_t v35 = a3[14];
    uint64_t v36 = (char *)a1 + v34;
    char v37 = (char *)a2 + v34;
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = (char *)a1 + v35;
    uint64_t v39 = (char *)a2 + v35;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXVoiceTriggerInfo(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(unsigned char *)(v21 + 8) = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (void *)(a2 + v26);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a1 + v27;
  uint64_t v32 = a2 + v27;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a3[13];
  uint64_t v34 = a3[14];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a1 + v34;
  uint64_t v38 = a2 + v34;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  *(unsigned char *)(v16 + 8) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  LOBYTE(v26) = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v26;
  uint64_t v30 = a3[11];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  void *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v36 = *v35;
  *(unsigned char *)(v34 + 8) = *((unsigned char *)v35 + 8);
  *(void *)uint64_t v34 = v36;
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  LOBYTE(v36) = *(unsigned char *)(v39 + 8);
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = v36;
  uint64_t v40 = a3[14];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  return a1;
}

uint64_t initializeWithTake for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(unsigned char *)(v21 + 8) = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  long long v28 = *(_OWORD *)(a2 + v26);
  *(void *)uint64_t v24 = *(void *)v25;
  *(_OWORD *)(a1 + v26) = v28;
  uint64_t v29 = a1 + v27;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(a2 + v27 + 8);
  *(void *)uint64_t v29 = *(void *)(a2 + v27);
  uint64_t v30 = a3[13];
  uint64_t v31 = a3[14];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = a1 + v31;
  uint64_t v35 = a2 + v31;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  return a1;
}

uint64_t assignWithTake for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(unsigned char *)(v21 + 8) = *((unsigned char *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  long long v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[12];
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a3[14];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_256A1774C);
}

uint64_t sub_256A1774C()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return OUTLINED_FUNCTION_44(v0 + *(int *)(v2 + 44));
  }

  return __swift_getEnumTagSinglePayload(v0, v1, v3);
}

uint64_t storeEnumTagSinglePayload for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_256A177D0);
}

void sub_256A177D0()
{
  OUTLINED_FUNCTION_79();
  OUTLINED_FUNCTION_1_1();
  if (*(_DWORD *)(v2 + 84) == v1)
  {
    uint64_t v3 = OUTLINED_FUNCTION_144();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_154(*(int *)(v0 + 44));
  }
}

uint64_t type metadata completion function for ModalityXVoiceTriggerInfo()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_4_2(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + a1;
  *(void *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 8) = 1;
}

BOOL OUTLINED_FUNCTION_5_1@<W0>(uint64_t a1@<X8>)
{
  return (*(unsigned char *)(v1 + a1 + 8) & 1) == 0;
}

void OUTLINED_FUNCTION_12_1(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + a1;
  *(void *)uint64_t v3 = v2;
  *(unsigned char *)(v3 + 8) = 0;
}

void OUTLINED_FUNCTION_13_0(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1)
{
  *(void *)(a1 + 8) = v1;
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

void OUTLINED_FUNCTION_16_0(uint64_t a1@<X8>)
{
  uint64_t v3 = v2 + a1;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXDeviceInfo(0);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return type metadata accessor for ModalityXDeviceInfo(0);
}

uint64_t OUTLINED_FUNCTION_36_1(void *a1)
{
  *a1 = v1;
  return type metadata accessor for ModalityXAudioMetadata(0);
}

void OUTLINED_FUNCTION_40_0(uint64_t a1@<X8>)
{
  *(_DWORD *)(v1 + 8) = a1;
  int v3 = *(unsigned __int8 *)(v2 + a1);
  if (v3 == 8) {
    LOBYTE(v3) = 0;
  }
  *(unsigned char *)(v1 + 12) = v3;
}

void OUTLINED_FUNCTION_52_1(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v2 + a1);
  if (v3 == 8) {
    LOBYTE(v3) = 0;
  }
  unsigned char *v1 = v3;
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  uint64_t v1 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x270EEE638]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x270EEE658]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x270EEE670]();
}

uint64_t static Data.== infix(_:_:)()
{
  return MEMORY[0x270EF0158]();
}

uint64_t UnknownStorage.traverse<A>(visitor:)()
{
  return MEMORY[0x270F44A18]();
}

uint64_t UnknownStorage.init()()
{
  return MEMORY[0x270F44A20]();
}

uint64_t type metadata accessor for UnknownStorage()
{
  return MEMORY[0x270F44A28]();
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()()
{
  return MEMORY[0x270F44B10]();
}

uint64_t dispatch thunk of Decoder.handleConflictingOneOf()()
{
  return MEMORY[0x270F44B20]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)()
{
  return MEMORY[0x270F44B38]();
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)()
{
  return MEMORY[0x270F44B48]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBytesField(value:)()
{
  return MEMORY[0x270F44B58]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)()
{
  return MEMORY[0x270F44B68]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBytesField(value:)()
{
  return MEMORY[0x270F44B78]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)()
{
  return MEMORY[0x270F44B98]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)()
{
  return MEMORY[0x270F44BC0]();
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)()
{
  return MEMORY[0x270F44BD8]();
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)()
{
  return MEMORY[0x270F44C20]();
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)()
{
  return MEMORY[0x270F44C38]();
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)()
{
  return MEMORY[0x270F44D60]();
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)()
{
  return MEMORY[0x270F44D68]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)()
{
  return MEMORY[0x270F44D70]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x270F44D80]();
}

uint64_t dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)()
{
  return MEMORY[0x270F44D88]();
}

uint64_t dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)()
{
  return MEMORY[0x270F44D90]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x270F44D98]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)()
{
  return MEMORY[0x270F44DB0]();
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)()
{
  return MEMORY[0x270F44DC8]();
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x270F44E00]();
}

uint64_t type metadata accessor for _NameMap.NameDescription()
{
  return MEMORY[0x270F44E10]();
}

uint64_t _NameMap.init(dictionaryLiteral:)()
{
  return MEMORY[0x270F44E18]();
}

uint64_t type metadata accessor for _NameMap()
{
  return MEMORY[0x270F44E28]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x270F9D320]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x270F9D598]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x270F9FC48]();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x270F58538]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x270F58540]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x270F58548]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x270F58558]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x270F58560]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x270F58590]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x270F585A0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x270F585D8]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x270F585E0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x270F585E8]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x270F585F8]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x270F58600]();
}

uint64_t PBRepeatedFloatAdd()
{
  return MEMORY[0x270F58648]();
}

uint64_t PBRepeatedFloatClear()
{
  return MEMORY[0x270F58650]();
}

uint64_t PBRepeatedFloatCopy()
{
  return MEMORY[0x270F58658]();
}

uint64_t PBRepeatedFloatHash()
{
  return MEMORY[0x270F58660]();
}

uint64_t PBRepeatedFloatIsEqual()
{
  return MEMORY[0x270F58668]();
}

uint64_t PBRepeatedFloatNSArray()
{
  return MEMORY[0x270F58670]();
}

uint64_t PBRepeatedInt32Add()
{
  return MEMORY[0x270F58680]();
}

uint64_t PBRepeatedInt32Clear()
{
  return MEMORY[0x270F58688]();
}

uint64_t PBRepeatedInt32Copy()
{
  return MEMORY[0x270F58690]();
}

uint64_t PBRepeatedInt32Hash()
{
  return MEMORY[0x270F58698]();
}

uint64_t PBRepeatedInt32IsEqual()
{
  return MEMORY[0x270F586A0]();
}

uint64_t PBRepeatedInt32NSArray()
{
  return MEMORY[0x270F586A8]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

float fmodf(float a1, float a2)
{
  MEMORY[0x270ED99D8](a1, a2);
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}