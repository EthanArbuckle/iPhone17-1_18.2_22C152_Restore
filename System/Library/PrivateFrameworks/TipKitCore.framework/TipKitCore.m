uint64_t sub_25F64F984()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  sub_25F6759E0();
  v1 = *v0;
  sub_25F675A28();
  *v2 = v1;
  sub_25F6759EC();
  return v3();
}

uint64_t sub_25F64FA4C()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25F64FB14()
{
  return swift_release();
}

void sub_25F64FBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = sub_25F651784(a1, a2, a3);
  if (v3)
  {
    id v7 = v3;
    if (qword_26B39CA10 != -1) {
      swift_once();
    }
    if (byte_26B3A2FD8 == 1)
    {
      id v4 = sub_25F6A1B08();
      objc_msgSend(v4, sel_sendEvent_, v7);

      if (qword_26B39D830 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for logger();
      sub_25F67F3A4(v5, (uint64_t)qword_26B39D818);
      sub_25F70EEC0();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F68C2F0(0x646928746E657645, 0xEA0000000000203ALL);

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_26B39C298 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for logger();
      sub_25F67F3A4(v6, (uint64_t)qword_26B39C280);
      sub_25F68C2F0(0xD00000000000008ELL, 0x800000025F718A30);
    }
  }
}

void sub_25F64FDD0(void *a1)
{
  id v2 = a1;
  swift_retain();
  sub_25F65044C(a1);
  swift_release();
}

uint64_t sub_25F64FE30(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_25F64FE7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25F64FEBC()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  if ((byte_26B39E3F0 & 1) == 0)
  {
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70F6D0();
    char v1 = sub_25F70F6C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v1) {
      return 2;
    }
  }
  if (word_26B39E410) {
    return 2;
  }
  sub_25F67A2DC(v0 + 4, v0[7]);
  uint64_t v2 = sub_25F676484();
  v3(v2);
  swift_bridgeObjectRelease();
  if (v9) {
    return 2;
  }
  uint64_t v5 = sub_25F6706C8();
  uint64_t result = 2;
  if ((v6 & 1) == 0 && !v5)
  {
    if (byte_26B39E3F0 != 1) {
      goto LABEL_15;
    }
    if (qword_26B39DFB0 != -1) {
      swift_once();
    }
    if ((byte_26B39DFAC & 1) == 0)
    {
      return sub_25F655388(v0[2], v0[3]);
    }
    else
    {
LABEL_15:
      char v7 = sub_25F6E290C();
      if ((v7 & 1) != 0 || v7 == 2) {
        return 1;
      }
      else {
        return 2;
      }
    }
  }
  return result;
}

uint64_t sub_25F65009C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *char v9 = v2;
  v9[1] = sub_25F657548;
  return sub_25F695508(a1, v7, v8, v4, v5, v6);
}

uint64_t sub_25F650198(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F650290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 48);
  sub_25F70E570();
  uint64_t v10 = v9(a4, a5);
  type metadata accessor for CoreRuleRecord();
  swift_allocObject();
  return CoreRuleRecord.init(id:predicate:)(a1, a2, v10);
}

uint64_t sub_25F650328()
{
  return swift_release();
}

id sub_25F6503C8(id *a1, void *a2)
{
  *a1 = a2;
  return a2;
}

unint64_t sub_25F65040C()
{
  unint64_t result = qword_26B39CA40;
  if (!qword_26B39CA40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B39CA40);
  }
  return result;
}

void sub_25F65044C(void *a1)
{
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  id v3 = (id *)&v2[4];
  uint64_t v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_25F694484(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_25F6504B8()
{
  uint64_t v0 = sub_25F70DF30();
  sub_25F67C9A8();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3, v4);
  unint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  if (byte_26B39E318 != 1) {
    return 2;
  }
  if (qword_26B39D588 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v8 = sub_25F67F3A4(v7, (uint64_t)qword_26B3A3028);
  sub_25F67D70C();
  uint64_t v9 = type metadata accessor for DeviceProfile();
  if (sub_25F67D9DC(v8, 1, v9)) {
    return 2;
  }
  if (*(unsigned char *)(v8 + 2) != 2) {
    return 2;
  }
  uint64_t v10 = sub_25F67E4C8();
  v11(v10);
  int v12 = v18[50];
  swift_bridgeObjectRelease();
  if (v12 != 1) {
    return 2;
  }
  uint64_t v13 = sub_25F67E4C8();
  v14(v13);
  int v15 = v18[51];
  swift_bridgeObjectRelease();
  if (v15 != 1) {
    return 2;
  }
  if (sub_25F670448() == 1)
  {
    v16 = (void *)CoreTip.constellationContent.getter();

    if (v16)
    {
      _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
      sub_25F6DB6EC();
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v6, v0);
    }
  }
  return 1;
}

uint64_t sub_25F6506A4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_25F691BBC;
  return v7(v4);
}

uint64_t sub_25F65077C()
{
  return swift_release();
}

unint64_t sub_25F650830()
{
  unint64_t result = qword_26B39D678;
  if (!qword_26B39D678)
  {
    sub_25F70DE50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D678);
  }
  return result;
}

uint64_t sub_25F650880(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39E248);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25F6508E0()
{
  unint64_t result = qword_26B39C2C8;
  if (!qword_26B39C2C8)
  {
    sub_25F682580(&qword_26B39C2D8);
    sub_25F650A58((uint64_t)&unk_26B39C2F0);
    sub_25F650A58((uint64_t)&qword_26B39CEC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C2C8);
  }
  return result;
}

unint64_t sub_25F65099C()
{
  unint64_t result = qword_26B39CAD8;
  if (!qword_26B39CAD8)
  {
    sub_25F682580(&qword_26B39CAE8);
    sub_25F650A58((uint64_t)&unk_26B39CB08);
    sub_25F650A58((uint64_t)&qword_26B39D2E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CAD8);
  }
  return result;
}

unint64_t sub_25F650A58(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(v3);
    uint64_t v4 = sub_25F67D62C();
    sub_25F682540(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t CoreRuleRecord.id.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F650BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1;
  uint64_t v6 = a2;
  os_unfair_lock_lock((os_unfair_lock_t)v2);
  sub_25F693158((uint64_t *)(v2 + 8), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)v2);
  return v4;
}

uint64_t sub_25F650C2C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CoreDonationRecord();
  sub_25F684AE0(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  uint64_t v2 = sub_25F70E240();
  swift_release();
  if (!v2) {
    sub_25F70E160();
  }
  sub_25F70E220();
  uint64_t v3 = sub_25F70E3C0();
  return sub_25F674004(a1, 0, 1, v3);
}

uint64_t sub_25F650D18()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void sub_25F650E18()
{
  if (!qword_26B39CF10)
  {
    sub_25F70DE50();
    unint64_t v0 = sub_25F70ECF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B39CF10);
    }
  }
}

uint64_t sub_25F650E70()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39CEF0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F682540((uint64_t)&qword_26B39CEE8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t CoreDonationRecord.date.setter()
{
  swift_getKeyPath();
  sub_25F67130C(&qword_26B39DC68, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_25F70DFC0();
  swift_release();
  sub_25F70DF30();
  sub_25F675A58();
  uint64_t v0 = sub_25F678470();
  return v1(v0);
}

uint64_t sub_25F65109C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[10] = a2;
  sub_25F693AA8();
  if (v3)
  {
    swift_getObjectType();
    uint64_t v5 = sub_25F70EA30();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  return MEMORY[0x270FA2498](sub_25F693AF8, v5, v7);
}

uint64_t sub_25F651130(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v6; uint64_t v6 = sub_25F70F100())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x2611FBA70](i - 4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      sub_25F689990();
      if (v9)
      {
        if (CoreTipRecord.status.getter() != 2)
        {
          sub_25F666E94(a2, a3);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_release();
            return swift_release();
          }
          sub_25F688488(0);
          uint64_t v4 = 0;
        }
        swift_release();
      }
      swift_release();
      if (v8 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_17:
    sub_25F70E570();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6512A4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_systemLanguages);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_25F70E910();

  return v3;
}

uint64_t sub_25F651300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  *(_WORD *)(v5 + 40) = a5;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = sub_25F70EA70();
  *(void *)(v5 + 32) = sub_25F70EA60();
  uint64_t v7 = sub_25F70EA30();
  return MEMORY[0x270FA2498](sub_25F658BC8, v7, v6);
}

uint64_t sub_25F6513A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25F70DD60();
  sub_25F67CA24();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5, v6);
  sub_25F6759BC();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v10 - 8, v11);
  sub_25F6759BC();
  uint64_t v14 = v13 - v12;
  static URL.homeDirectoryForCurrentUser.getter(v13 - v12);
  uint64_t v15 = sub_25F70DE50();
  if (sub_25F67D9DC(v14, 1, v15) == 1)
  {
    sub_25F650880(v14);
    uint64_t v16 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v9, *MEMORY[0x263F06E30], v2);
    sub_25F66580C();
    sub_25F70DE20();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = 0;
  }
  return sub_25F674004(a1, v16, 1, v15);
}

void CoreRuleRecord.predicate.setter(void *a1)
{
}

void sub_25F651608()
{
  uint64_t v0 = (void *)sub_25F70E690();
  id v1 = (void *)MGGetStringAnswer();

  if (v1)
  {
    uint64_t v2 = sub_25F70E6C0();
    uint64_t v4 = v3;

    qword_26B3A2FE0 = v2;
    *(void *)algn_26B3A2FE8 = v4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t CoreRule.Predicate.Operator.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_25F70DC90();
  sub_25F67C9A8();
  uint64_t v6 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(a1, v4);
  if (result == *MEMORY[0x263F06BA8])
  {
    char v9 = 2;
  }
  else if (result == *MEMORY[0x263F06B98])
  {
    char v9 = 3;
  }
  else if (result == *MEMORY[0x263F06B90])
  {
    char v9 = 4;
  }
  else if (result == *MEMORY[0x263F06BA0])
  {
    char v9 = 5;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
    char v9 = 12;
  }
  *a2 = v9;
  return result;
}

id sub_25F651784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  if (byte_26B39E318 != 1) {
    return 0;
  }
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  if (byte_26B39DFAC) {
    return 0;
  }
  if (qword_26B39CCE0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26B3A2FF0;
  uint64_t v8 = *(void *)algn_26B3A2FF8;
  if (!a3)
  {
    sub_25F70E570();
LABEL_17:
    unint64_t v14 = 0xF000000000000000;
    goto LABEL_18;
  }
  char v9 = self;
  sub_25F70E570();
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v10 = (void *)sub_25F70E520();
  id v18 = 0;
  id v11 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, 0, &v18);

  id v12 = v18;
  if (!v11)
  {
    uint64_t v15 = v12;
    uint64_t v16 = (void *)sub_25F70DD20();

    swift_willThrow();
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for logger();
    sub_25F67F3A4(v17, (uint64_t)qword_26B39D818);
    id v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    swift_getErrorValue();
    sub_25F70F2F0();
    sub_25F68C2F0((uint64_t)v18, v19);
    swift_bridgeObjectRelease();

    a3 = 0;
    goto LABEL_17;
  }
  a3 = sub_25F70DE80();
  unint64_t v14 = v13;

LABEL_18:
  objc_allocWithZone(MEMORY[0x263F2A0D8]);
  sub_25F70E570();
  return sub_25F65292C(a1, a2, 0, 0, v7, v8, a3, v14);
}

void *initializeBufferWithCopyOfBuffer for ConstellationEvent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F651AB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_25F70F330();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  char v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_25F70F330() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25F651B78()
{
  return swift_release();
}

uint64_t sub_25F651C50()
{
  return swift_release();
}

uint64_t sub_25F651D28(void *a1)
{
  return CoreTip.ConstellationAction.encode(to:)(a1);
}

unint64_t sub_25F651D40()
{
  unint64_t result = qword_26B39CD50;
  if (!qword_26B39CD50)
  {
    sub_25F682580(&qword_26B39CD60);
    sub_25F651DFC((uint64_t)&qword_26B39CD78);
    sub_25F651DFC((uint64_t)&qword_26B39CEC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD50);
  }
  return result;
}

unint64_t sub_25F651DFC(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_25F682580(v3);
    sub_25F682540(v5);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F651E8C()
{
  if (qword_26B39CE78 != -1) {
    swift_once();
  }
  id v1 = (void *)v0[6];
  uint64_t v2 = v0[7];
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_25F67A2DC(v1, v3);
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v6(v3, v5);
  sub_25F673D98();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25F70E3C0();
  int v8 = sub_25F67D9DC(v2, 1, v7);
  sub_25F673A7C(v2);
  if (v8 == 1)
  {
    sub_25F67A2DC((void *)v0[6], v1[3]);
    type metadata accessor for CoreEventRecord();
    sub_25F6583A0();
    swift_release();
  }
  swift_task_dealloc();
  char v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_25F65204C()
{
  sub_25F70E3C0();
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39DB98);
  swift_allocObject();
  uint64_t result = sub_25F694434(v0);
  qword_26B39CE70 = result;
  return result;
}

uint64_t sub_25F6520C0()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  if (qword_26B39CCD8 != -1) {
    swift_once();
  }
  sub_25F70E570();
  sub_25F70E790();
  uint64_t result = swift_bridgeObjectRelease();
  qword_26B3A2FF0 = 0;
  *(void *)algn_26B3A2FF8 = 0xE000000000000000;
  return result;
}

uint64_t sub_25F652258()
{
  sub_25F70E3C0();
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39DB98);
  swift_allocObject();
  uint64_t result = sub_25F694434(v0);
  qword_26B39D690 = result;
  return result;
}

uint64_t sub_25F6522CC()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_25F657480;
  return sub_25F658774();
}

uint64_t sub_25F652378()
{
  sub_25F67A2DC((void *)(v0 + 32), *(void *)(v0 + 56));
  uint64_t v1 = sub_25F676484();
  v2(v1);
  swift_bridgeObjectRelease();
  if (v12 != 1) {
    return 2;
  }
  if (qword_26B39D588 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v4 = sub_25F67F3A4(v3, (uint64_t)qword_26B3A3028);
  sub_25F67D70C();
  uint64_t v5 = type metadata accessor for DeviceProfile();
  if (sub_25F67D9DC(v4, 1, v5)) {
    return 2;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6) {
    return 2;
  }
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v8 = qword_26B39C228;
  sub_25F70E570();
  if (v8 != -1) {
    swift_once();
  }
  if (!qword_26B3A2FD0
    || (v7 == qword_26B3A2FC8 ? (BOOL v9 = v6 == qword_26B3A2FD0) : (BOOL v9 = 0), v9 || (sub_25F70F330() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (qword_26B39D830 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for logger();
  sub_25F67F3A4(v11, (uint64_t)qword_26B39D818);
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F70E790();
  sub_25F70E790();
  sub_25F70E790();
  sub_25F70E790();
  sub_25F68C2F0(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_25F652638()
{
  sub_25F6762E8();
  sub_25F682830(v1, v2);
  uint64_t v3 = sub_25F70E240();
  swift_release();
  if (v3)
  {
    swift_retain();
    swift_setAtReferenceWritableKeyPath();
    swift_release();
    swift_retain();
  }
  else
  {
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v4 = 0xD000000000000036;
    v4[1] = 0x800000025F71AAF0;
    swift_willThrow();
  }
  return v0;
}

uint64_t static URL.homeDirectoryForCurrentUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v2 - 8, v3);
  sub_25F6759BC();
  uint64_t v6 = v5 - v4;
  uid_t v7 = getuid();
  uint64_t v8 = getpwuid(v7);
  if (v8 && v8->pw_dir)
  {
    uint64_t v9 = sub_25F70DE50();
    sub_25F674004(v6, 1, 1, v9);
    sub_25F70DDE0();
    sub_25F650880(v6);
    return sub_25F674004(a1, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_25F70DE50();
    return sub_25F674004(a1, 1, 1, v11);
  }
}

uint64_t AtomicProperty.__deallocating_deinit()
{
  AtomicProperty.deinit();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t AtomicProperty.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_25F652880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.valueType.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6528AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  unint64_t v5 = sub_25F67B208((uint64_t)&qword_26B39DCB0);
  return MEMORY[0x270EFE8F0](v3, v4, v2, v5);
}

id sub_25F65292C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    unint64_t v13 = (void *)sub_25F70E690();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    unint64_t v14 = 0;
    if (a6) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  unint64_t v13 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  unint64_t v14 = (void *)sub_25F70E690();
  swift_bridgeObjectRelease();
  if (a6)
  {
LABEL_4:
    uint64_t v15 = (void *)sub_25F70E690();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v15 = 0;
LABEL_8:
  if (a8 >> 60 == 15)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = (void *)sub_25F70DE70();
    sub_25F67EFAC(a7, a8);
  }
  id v17 = objc_msgSend(v8, sel_initWithContentIdentifier_context_osBuild_userInfo_, v13, v14, v15, v16);

  return v17;
}

id default argument 0 of URL.removeFile(fileManager:)()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  return v0;
}

uint64_t sub_25F652A90()
{
  _s11FileHandlerCMa();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  qword_26B3A3008 = v0;
  return result;
}

uint64_t sub_25F652AD0()
{
  sub_25F6759E0();
  sub_25F676B10();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 48) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v2;
    void *v2 = v0;
    v2[1] = sub_25F6F1A40;
    return sub_25F65C930();
  }
  else
  {
    sub_25F6759EC();
    return v4();
  }
}

uint64_t _s11FileHandlerCMa()
{
  return self;
}

uint64_t type metadata accessor for CoreEvent()
{
  return self;
}

unint64_t sub_25F652BEC()
{
  unint64_t result = qword_26B39D088;
  if (!qword_26B39D088)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B39D088);
  }
  return result;
}

uint64_t sub_25F652C2C(uint64_t a1)
{
  uint64_t v2 = sub_25F70DE50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uid_t v7 = *(void (**)(char *))(a1 + 32);
  sub_25F70DDF0();
  v7(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_25F652D10()
{
  type metadata accessor for CoreDonationRecord();
  if (qword_26B39CE78 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  swift_beginAccess();
  swift_retain();
  sub_25F70E570();
  sub_25F673D98();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F6567DC(v4, v3, v1, v2);
  uint64_t v5 = v0[13];
  swift_release();
  sub_25F673A7C(v5);
  swift_task_dealloc();
  sub_25F6759EC();
  return v6();
}

uint64_t sub_25F652F64(unint64_t *a1, void (*a2)(uint64_t))
{
  sub_25F682878(a1, 255, a2);
  if (sub_25F70E240())
  {
    if ((sub_25F70E300() & 1) == 0) {
      sub_25F70E150();
    }
    return swift_release();
  }
  else
  {
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v3 = 0xD00000000000002DLL;
    v3[1] = 0x800000025F71B850;
    return swift_willThrow();
  }
}

uint64_t sub_25F65305C()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 24) = 0;
  if (sub_25F659104())
  {
    sub_25F652BEC();
    id v2 = sub_25F658324(0x6C7070612E6D6F63, 0xEF64737069742E65, 0);
    *(void *)(v0 + 16) = v2;
    objc_msgSend(v2, sel_synchronize);
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for logger();
    sub_25F67F3A4(v3, (uint64_t)qword_26B39D818);
    sub_25F68C2F0(0xD00000000000001DLL, 0x800000025F71BF00);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

void CoreTipRecord.content.getter()
{
}

uint64_t sub_25F653254(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_25F67AF7C(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  return MEMORY[0x270EFE8F0](v3, v4, v2, v5);
}

void sub_25F6532D4()
{
  sub_25F6784CC();
  sub_25F6806EC(v2, v3, v4, v5);
  sub_25F67ACD8(&qword_26B39CF18);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F68C6B0();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6796D4();
  sub_25F67D82C(v1);
  if (v13)
  {
    sub_25F6FF370(v1, &qword_26B39DF68);
  }
  else
  {
    uint64_t v14 = sub_25F682E04();
    v15(v14);
    type metadata accessor for CoreEventRecord();
    sub_25F682878(&qword_26B39DC30, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
    if (sub_25F6806D0())
    {
      sub_25F67E27C();
      v16();
    }
    else
    {
      sub_25F6809A0();
      MEMORY[0x270FA5388](v17, v18);
      sub_25F6729C4();
      sub_25F682CC0();
      sub_25F692594();
      if (v0)
      {

        uint64_t v19 = sub_25F67D28C();
        v20(v19);
        uint64_t v21 = sub_25F6FF50C();
        v22(v21);
      }
      else
      {
        uint64_t v23 = sub_25F67D28C();
        v24(v23);
        sub_25F67E27C();
        v25();
      }
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F6534E8()
{
  sub_25F67ACD8(&qword_26B39CA20);
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39CA28);
  swift_allocObject();
  uint64_t result = sub_25F694428(v0);
  qword_26B39CAB8 = result;
  return result;
}

uint64_t sub_25F653560()
{
  sub_25F672A80();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F674EB8();
  return v4(v3);
}

void sub_25F65360C()
{
  sub_25F653748(319, &qword_26B39DBB0, MEMORY[0x263F07490]);
  if (v0 <= 0x3F)
  {
    sub_25F653748(319, &qword_26B39DCF0, (void (*)(uint64_t))_s12DisplayEventVMa);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_25F653748(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25F70ECF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25F65379C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F689784(&v3);
  *a1 = v3;
  return result;
}

void sub_25F6537D8()
{
  sub_25F6538E4(319, &qword_26B39E2E8, MEMORY[0x263F8F590]);
  if (v0 <= 0x3F)
  {
    sub_25F6538E4(319, &qword_26B39E2F8, MEMORY[0x263F8F5B8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_25F6538E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_25F682580(&qword_26B39E300);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_25F653948()
{
  unint64_t result = qword_26B39DA40;
  if (!qword_26B39DA40)
  {
    sub_25F682580(&qword_26B39DA50);
    sub_25F65F814((uint64_t)&unk_26B39DAB0);
    sub_25F65F814((uint64_t)&unk_26B39DAA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DA40);
  }
  return result;
}

uint64_t sub_25F653A0C@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F680E94(a1);
}

uint64_t sub_25F653A28()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25F6614EC, 0, 0);
}

uint64_t sub_25F653AF4()
{
  uint64_t v0 = type metadata accessor for logger();
  sub_25F692530(v0, qword_26B39DF90);
  *(unsigned char *)sub_25F679F58() = 1;
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F682CA4();
  if (v1) {
    sub_25F68EF50();
  }
  sub_25F6796C0();
  return sub_25F675CB8();
}

uint64_t sub_25F653BA4(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_25F70DE50();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F664B84, 0, 0);
}

uint64_t sub_25F653C74()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25F653D38()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_25F67ACD8(&qword_26B39D3A8);
  uint64_t v3 = sub_25F70EEA0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_25F70F5C0();
    sub_25F70E570();
    sub_25F70E740();
    uint64_t result = sub_25F70F620();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25F653FE4(uint64_t a1)
{
  uint64_t v3 = sub_25F70DE50();
  sub_25F6768F0(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = v1[3];
  uint64_t v17 = v1[2];
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[6];
  uint64_t v13 = *(void *)((char *)v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (uint64_t)v1 + v8;
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *unint64_t v15 = v2;
  v15[1] = sub_25F657548;
  return sub_25F654E6C(a1, v17, v9, v10, v11, v12, v14, v13);
}

uint64_t sub_25F654138()
{
  swift_getObjCClassMetadata();
  sub_25F654170();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_25F654170()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_25F654178()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25F654234()
{
  swift_isUniquelyReferenced_nonNull_native();
  sub_25F679644();
  sub_25F657CA8();
  void *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6542C8()
{
  sub_25F6759E0();
  uint64_t v1 = *(void *)(sub_25F70DE50() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_25F674E18(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_25F691BBC;
  return sub_25F6936BC(v2);
}

unint64_t sub_25F65438C()
{
  unint64_t result = qword_26B39DAD8;
  if (!qword_26B39DAD8)
  {
    sub_25F70ECC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DAD8);
  }
  return result;
}

uint64_t sub_25F6543DC()
{
  type metadata accessor for DatastoreActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_26B39E190 = v0;
  return result;
}

uint64_t sub_25F654418(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

void sub_25F654454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_25F676450();
  a17 = v18;
  a18 = v22;
  char v24 = v23;
  unint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  if (*(unsigned char *)(v19 + 8))
  {
    v30 = v21;
    sub_25F685E7C(v19, v21);
    sub_25F6E5FDC(v29, v27, v24, v25, (uint64_t)&a9);
    swift_bridgeObjectRelease();
    sub_25F685E7C((uint64_t)&a9, v30);
  }
  else
  {
    sub_25F65BF3C(v19, (uint64_t)&a9, v20);
    sub_25F654234();
    swift_bridgeObjectRelease();
  }
  sub_25F672C34();
}

uint64_t CoreTip.constellationContent.getter()
{
  swift_retain();
  uint64_t v0 = sub_25F65453C();
  swift_release();
  return v0;
}

uint64_t sub_25F65453C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (id *)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F65459C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

id sub_25F65459C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = sub_25F6545C8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id sub_25F6545C8(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  return v1;
}

uint64_t sub_25F6545F8()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_25F6546B4()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F694444(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F654718()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_25F6547E8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25F654820()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25F6548F0()
{
  uint64_t result = sub_25F70DFF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25F6549A8()
{
  sub_25F70E3C0();
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39DB98);
  sub_25F67E12C();
  uint64_t result = sub_25F68DFC8(v0, &qword_26B39DBA0);
  qword_26B39D6A0 = result;
  return result;
}

uint64_t sub_25F654A1C(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25F6588DC;
  return v5();
}

void sub_25F654AE8()
{
  if (!qword_26B39E278)
  {
    sub_25F70E360();
    unint64_t v0 = sub_25F70ECF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B39E278);
    }
  }
}

uint64_t sub_25F654B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_weakInit();
  if (a1)
  {
    swift_weakAssign();
    swift_release();
    uint64_t result = sub_25F6944BC((uint64_t)v5, a2);
  }
  else
  {
    uint64_t result = sub_25F675D8C((uint64_t)v5, &qword_26B39E258);
    *(void *)a2 = 0;
  }
  *(unsigned char *)(a2 + 8) = a1 == 0;
  return result;
}

double sub_25F654BC0()
{
  uint64_t v0 = sub_25F70F6D0();
  uint64_t v2 = v1;
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67E318();
  qword_26B39E3C0 = 0x74696B7069742ELL;
  qword_26B39E3C8 = 0xE700000000000000;
  *(void *)&xmmword_26B39E3D0 = v0;
  *((void *)&xmmword_26B39E3D0 + 1) = v2;
  qword_26B39E3E0 = 0;
  qword_26B39E3E8 = 0;
  byte_26B39E3F0 = 0;
  byte_26B39E3F1 = v3;
  byte_26B39E3F2 = 0;
  off_26B39E3F8 = (_UNKNOWN *)MEMORY[0x263F8EE88];
  byte_26B39E400 = 0;
  off_26B39E408 = (_UNKNOWN *)MEMORY[0x263F8EE88];
  word_26B39E410 = 0;
  double result = 3.54034063e-225;
  *(_OWORD *)&qword_26B39E418 = xmmword_25F710F60;
  byte_26B39E428 = 0;
  return result;
}

uint64_t _s16ContainerMonitorCMa()
{
  return self;
}

uint64_t sub_25F654C9C()
{
  uint64_t v0 = type metadata accessor for logger();
  sub_25F692530(v0, qword_26B39DA80);
  *(unsigned char *)sub_25F67F3A4(v0, (uint64_t)qword_26B39DA80) = 5;
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  return sub_25F70E030();
}

uint64_t sub_25F654D94()
{
  uint64_t v0 = type metadata accessor for logger();
  sub_25F692530(v0, qword_26B39D818);
  *(unsigned char *)sub_25F679F58() = 7;
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  if (byte_26B39DFAB) {
    sub_25F68EF50();
  }
  return sub_25F675CB8();
}

uint64_t sub_25F654E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 2232) = v18;
  *(_OWORD *)(v8 + 2216) = v17;
  *(void *)(v8 + 2168) = a8;
  *(void *)(v8 + 2120) = a7;
  *(void *)(v8 + 2072) = a6;
  *(void *)(v8 + 2024) = a5;
  *(void *)(v8 + 1976) = a4;
  uint64_t v12 = sub_25F70DE50();
  *(void *)(v8 + 2240) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v8 + 2248) = v13;
  *(void *)(v8 + 2256) = *(void *)(v13 + 64);
  *(void *)(v8 + 2264) = swift_task_alloc();
  type metadata accessor for MiniTipsDatastore();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v8 + 2272) = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_25F653A28;
  return sub_25F65D678(a4, a5, a6);
}

uint64_t static DatastoreActor.shared.getter()
{
  if (qword_26B39E100 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_25F655014()
{
  uint64_t result = sub_25F70E040();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

#error "25F655104: call analysis failed (funcsize=29)"

uint64_t sub_25F655120()
{
  uint64_t result = sub_25F70DF30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_25F6551B8()
{
  if (qword_26B39E430 != -1) {
    swift_once();
  }
  if (qword_26B3A3080)
  {
    sub_25F70E570();
    sub_25F67CF3C();
    char v0 = sub_25F664598();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v0 = 0;
  }
  byte_26B39E318 = v0 & 1;
}

uint64_t sub_25F655254()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E248);
  uint64_t v1 = sub_25F672C08(v0);
  MEMORY[0x270FA5388](v1, v2);
  sub_25F6759BC();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D590);
  sub_25F692530(v6, qword_26B3A3028);
  uint64_t v7 = sub_25F67F3A4(v6, (uint64_t)qword_26B3A3028);
  sub_25F6654F4(v5);
  sub_25F6637B8(v5, v7);
  return sub_25F675D8C(v5, &qword_26B39E248);
}

uint64_t sub_25F65530C()
{
  sub_25F69277C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25F710D00;
  *(void *)(v0 + 32) = sub_25F67ACD8(&qword_26B39DDE0);
  *(void *)(v0 + 40) = sub_25F67ACD8(&qword_26B39DDD8);
  *(void *)(v0 + 48) = type metadata accessor for RawDictionaryTransformer();
  return v0;
}

uint64_t sub_25F655388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D3B0);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = _s12DisplayEventVMa();
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B39D588 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v13 = sub_25F67F3A4(v12, (uint64_t)qword_26B3A3028);
  swift_beginAccess();
  uint64_t v14 = type metadata accessor for DeviceProfile();
  if (sub_25F67D9DC(v13, 1, v14))
  {
    sub_25F674004((uint64_t)v7, 1, 1, v8);
LABEL_6:
    sub_25F675D8C((uint64_t)v7, &qword_26B39D3B0);
    return 2;
  }
  sub_25F675D30(v13 + *(int *)(v14 + 40), (uint64_t)v7, &qword_26B39D3B0);
  if (sub_25F67D9DC((uint64_t)v7, 1, v8) == 1) {
    goto LABEL_6;
  }
  sub_25F6E3A4C((uint64_t)v7, (uint64_t)v11);
  BOOL v16 = *v11 == a1 && v11[1] == a2;
  if (v16 || (sub_25F70F330() & 1) != 0)
  {
    sub_25F6DE274((uint64_t)v11);
    return 2;
  }
  sub_25F70DED0();
  long double v18 = -v17;
  uint64_t v19 = Double.seconds.getter(-v17);
  uint64_t v20 = sub_25F6A53F8(v19);
  uint64_t v22 = v21;
  fmod(v18, 1.0);
  uint64_t v23 = sub_25F70F690();
  MEMORY[0x2611FC230](v20, v22, v23, v24);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v25 = sub_25F70F6A0();
  sub_25F6DE274((uint64_t)v11);
  if (v25) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_25F655650()
{
  return static CoreEventRecord.schemaMetadata.getter();
}

void sub_25F655668()
{
}

uint64_t sub_25F655680()
{
  return static CoreRuleRecord.schemaMetadata.getter();
}

unint64_t sub_25F655698()
{
  unint64_t result = qword_26B39CCF0;
  if (!qword_26B39CCF0)
  {
    sub_25F682580(&qword_26B39CD00);
    sub_25F65575C((uint64_t)&unk_26B39CD20);
    sub_25F65575C((uint64_t)&unk_26B39CD10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CCF0);
  }
  return result;
}

unint64_t sub_25F65575C(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(&qword_26B39CD08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F6557BC()
{
  sub_25F672A80();
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = v2[7];
  swift_unownedRetainStrong();
  v0[4] = *(void *)(v3 + 64);
  swift_retain();
  swift_release();
  uint64_t v5 = v2[5];
  uint64_t v4 = v2[6];
  sub_25F67A2DC(v2 + 2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 16))(v5);
  uint64_t v8 = v7;
  uint64_t v9 = (void *)swift_allocObject();
  v0[5] = v9;
  v9[2] = v6;
  v9[3] = v8;
  v9[4] = v1;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A7B16B0 + dword_26A7B16B0);
  sub_25F70E570();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[6] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_25F650D18;
  return v12((uint64_t)v12, (uint64_t)&unk_26A7B16A8, (uint64_t)v9);
}

uint64_t CoreEvent.init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  sub_25F67B010(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  sub_25F67B010(a1, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  sub_25F675D18(v7, v5 + 16);
  swift_unownedRetain();
  sub_25F68E0FC((uint64_t)&unk_26A7B1688, v5);
  swift_release();
  sub_25F67A28C(a1);
  swift_release();
  return v2;
}

uint64_t sub_25F6559D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F70EA90();
  if (sub_25F67D9DC(a1, 1, v6) == 1)
  {
    sub_25F675D8C(a1, &qword_26B39E2B8);
  }
  else
  {
    sub_25F70EA80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25F70EA30();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25F655B44()
{
  uint64_t v0 = self;
  sub_25F66658C();
  uint64_t v1 = (void *)sub_25F70E900();
  swift_bridgeObjectRelease();
  sub_25F70DF40();
  uint64_t v2 = (void *)sub_25F70E900();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_preferredLocalizationsFromArray_forPreferences_, v1, v2);

  uint64_t v4 = sub_25F70E910();
  return v4;
}

uint64_t sub_25F655C04()
{
  sub_25F67ACD8(&qword_26B39D420);
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39D428);
  swift_allocObject();
  uint64_t result = sub_25F69441C(v0);
  qword_26B39D680 = result;
  return result;
}

uint64_t sub_25F655C7C()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39D308);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F682540((uint64_t)&unk_26B39D300);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_25F655DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a7;
  uint64_t v10 = sub_25F67ACD8(qword_26B39E198);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a3;
  v15[4] = a4;
  uint64_t v19 = v18;
  uint64_t v20 = v15;
  swift_retain();
  sub_25F67ACD8(&qword_26B39E2E0);
  sub_25F70EAB0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t static MiniTipsDatastore.shared.getter()
{
  if (qword_26B39E130 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t CoreDonationRecord.init(date:event:donationInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_25F6762E8();
  uint64_t v8 = v7;
  uint64_t v9 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  unint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 48) = sub_25F67ACD8(&qword_26B39CA30);
  uint64_t v16 = sub_25F67130C(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  v19[0] = v8;
  v19[1] = v8;
  v19[2] = v16;
  v19[3] = v16;
  *(void *)(v4 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v4 + 24));
  sub_25F70E230();
  sub_25F70DF20();
  sub_25F665D64((uint64_t)v15, v4 + 24);
  sub_25F665C74(v4 + 24, (unsigned char *)(v4 + 16));
  sub_25F665EC0(v4 + 24, (unsigned char *)(v4 + 17));
  sub_25F70DFE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, a1, v9);
  CoreDonationRecord.date.setter();
  CoreDonationRecord.donationInfo.setter(a3);
  uint64_t v17 = swift_retain();
  CoreDonationRecord.event.setter(v17);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v9);
  return v4;
}

uint64_t sub_25F656174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return a4(a1);
}

uint64_t sub_25F656248@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v20[1] = a1;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DB30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  uint64_t v22 = v4;
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F67ACD8(&qword_26B39CEF0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25F67ACD8(&qword_26B39CB80);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39CEE8, &qword_26B39CEF0);
  sub_25F70DD10();
  uint64_t v23 = type metadata accessor for CoreEventRecord();
  uint64_t v24 = sub_25F682878(&qword_26B39DC30, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_25F70E3C0();
  sub_25F70DD00();
  a2[3] = sub_25F67ACD8(&qword_26B39CB68);
  a2[4] = sub_25F696F00();
  sub_25F677CCC(a2);
  sub_25F681778(&qword_26B39CB78, &qword_26B39CB80);
  sub_25F681778((unint64_t *)&qword_26B39DB28, &qword_26B39DB30);
  sub_25F682878(&qword_26B39DB60, 255, MEMORY[0x263F18140]);
  uint64_t v18 = v21;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_25F656608()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39E2B8);
  uint64_t result = MEMORY[0x270FA5388](v1 - 8, v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 112))
  {
    uint64_t v6 = sub_25F70EA90();
    sub_25F674004((uint64_t)v5, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v7;
    uint64_t v9 = sub_25F65F94C((uint64_t)v5, (uint64_t)&unk_26A7B1B10, (uint64_t)v8);
    sub_25F67EFC0((uint64_t)v5, &qword_26B39E2B8);
    *(void *)(v0 + 112) = v9;
    return swift_release();
  }
  return result;
}

void Mutex<A>.currentValue.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  os_unfair_lock_lock(v3);
  sub_25F656784((uint64_t)v3 + *(int *)(a1 + 28), a2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F656784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_25F6567DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v9 - 8, v10);
  sub_25F6759BC();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_25F70DF30();
  MEMORY[0x270FA5388](v14 - 8, v15);
  sub_25F6768BC();
  sub_25F6532D4();
  if (v16)
  {
    uint64_t v17 = v16;
    _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
    swift_allocObject();
    sub_25F70E570();
    swift_retain();
    uint64_t v5 = CoreDonationRecord.init(date:event:donationInfo:)(v5, v17, a4);
    sub_25F650C2C(v13);
    if (v4)
    {
      swift_release();
      swift_release();
    }
    else
    {
      sub_25F673A7C(v13);
      if (sub_25F70E0B0()) {
        sub_25F70E100();
      }
      sub_25F65040C();
      sub_25F64FBB4(a1, a2, a4);
      unint64_t v20 = sub_25F656FF8();
      type metadata accessor for CoreRuleRecord();
      sub_25F651130(v20, a1, a2);
      swift_bridgeObjectRelease();
      if (sub_25F70E0B0()) {
        sub_25F70E100();
      }
      if (qword_26B39D830 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for logger();
      sub_25F67F3A4(v21, (uint64_t)qword_26B39D818);
      sub_25F70EEC0();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F68C2F0(0x646928746E657645, 0xEA0000000000203ALL);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v18 = 0xD00000000000002ELL;
    v18[1] = 0x800000025F7194F0;
    swift_willThrow();
  }
  return v5;
}

uint64_t static String.bundleIdentifier.getter()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v0 = qword_26B39E3E0;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v0 = qword_26B3A3078;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v1 = sub_25F6A3C40();
      if (v2) {
        uint64_t v0 = v1;
      }
      else {
        uint64_t v0 = 0;
      }
    }
    sub_25F70E570();
  }
  sub_25F70E570();
  return v0;
}

uint64_t sub_25F656C34(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_25F6765EC(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_25F691BBC;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A7B1900 + dword_26A7B1900);
  return v7(a1, v3);
}

uint64_t sub_25F656CE4(uint64_t a1, int *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_25F6765EC(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_25F6588DC;
  return v7(a1);
}

#error "25F656F08: call analysis failed (funcsize=137)"

uint64_t sub_25F656FF8()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39DBB8);
  MEMORY[0x270FA5388](v1 - 8, v2);
  sub_25F672A58();
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v3 = qword_26B39E3E0;
    unint64_t v4 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v3 = qword_26B3A3078;
      unint64_t v4 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v5 = sub_25F6A3C40();
      if (v6)
      {
        uint64_t v3 = v5;
        unint64_t v4 = v6;
      }
      else
      {
        uint64_t v3 = 0;
        unint64_t v4 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v3 == 0xD000000000000010 && v4 == 0x800000025F718D70) {
    goto LABEL_39;
  }
  sub_25F67D62C();
  char v7 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_40;
  }
  if (qword_26B39E3E8)
  {
    uint64_t v8 = qword_26B39E3E0;
    unint64_t v9 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v8 = qword_26B3A3078;
      unint64_t v9 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v10 = sub_25F6A3C40();
      if (v11)
      {
        uint64_t v8 = v10;
        unint64_t v9 = v11;
      }
      else
      {
        uint64_t v8 = 0;
        unint64_t v9 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v8 == 0x6C7070612E6D6F63 && v9 == 0xEF64737069742E65)
  {
LABEL_39:
    sub_25F70E570();
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t v23 = CoreEventRecord.rules.getter();
    if (v23) {
      return v23;
    }
    else {
      return MEMORY[0x263F8EE78];
    }
  }
  sub_25F67D62C();
  char v13 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0 || (sub_25F66A5C4() & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v14 = CoreEventRecord.id.getter();
  unint64_t v16 = v15;
  if (qword_26B39D6C0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25F66A704();
  uint64_t v19 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v19 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v19 && *(void *)(v17 + 16))
  {
    MEMORY[0x270FA5388](v17, v18);
    type metadata accessor for CoreRuleRecord();
    sub_25F70DFA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_25F67ACD8(&qword_26B39D4B0);
    sub_25F674004(v0, 0, 1, v20);
    sub_25F66A2B4();
    uint64_t v22 = v21;
    sub_25F66A8E8(v0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v22;
}

uint64_t sub_25F65745C(void *a1)
{
  return CoreTip.ConstellationContent.encode(to:)(a1);
}

uint64_t sub_25F657480()
{
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_25F657548()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  sub_25F6759EC();
  return v3();
}

uint64_t CoreParameter.getValueData()()
{
  sub_25F6759E0();
  *(void *)(v1 + 40) = v0;
  sub_25F67ACD8(&qword_26B39DF68);
  *(void *)(v1 + 48) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6609D8, 0, 0);
}

uint64_t sub_25F657698()
{
  sub_25F67629C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  char v7 = (void *)sub_25F6765EC(v6);
  *char v7 = v8;
  v7[1] = sub_25F691BBC;
  return sub_25F6920FC(v4, v2, v5);
}

uint64_t sub_25F65773C()
{
  sub_25F6759E0();
  swift_continuation_throwingResume();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F657794()
{
  return sub_25F6577BC();
}

uint64_t sub_25F6577BC()
{
  return swift_release();
}

uint64_t sub_25F657894()
{
  return sub_25F67A8F8(0, &qword_26B39DE08);
}

uint64_t MiniTipsDatastore.configure(url:monitorChanges:cloudKitContainer:)()
{
  sub_25F6759E0();
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v0;
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v4;
  *(unsigned char *)(v1 + 152) = v5;
  *(void *)(v1 + 64) = v6;
  sub_25F6762E8();
  *(void *)(v1 + 104) = v7;
  sub_25F67ACD8(&qword_26B39DB88);
  *(void *)(v1 + 112) = swift_task_alloc();
  *(void *)(v1 + 120) = swift_task_alloc();
  uint64_t v8 = sub_25F70DE50();
  *(void *)(v1 + 128) = v8;
  sub_25F6768F0(v8);
  *(void *)(v1 + 136) = v9;
  *(void *)(v1 + 144) = swift_task_alloc();
  if (qword_26B39E100 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26B39E190;
  return MEMORY[0x270FA2498](sub_25F663204, v10, 0);
}

uint64_t sub_25F6579E0()
{
  sub_25F678610();
  sub_25F70E180();
  swift_retain();
  sub_25F70E570();
  v0[12] = sub_25F666AE0();
  sub_25F67ACD8(&qword_26B39E2F0);
  sub_25F70EAD0();
  uint64_t v1 = sub_25F658188((unint64_t *)&qword_26B39E0D0, 255, (void (*)(uint64_t))type metadata accessor for MiniTipsDatastore.DatastoreQueue);
  v0[13] = v1;
  uint64_t v2 = v0[8];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F661D88;
  uint64_t v4 = v0[9];
  return MEMORY[0x270FA1F68](v0 + 2, v2, v1, v4);
}

uint64_t type metadata accessor for CoreTip.ConstellationContent()
{
  return self;
}

uint64_t sub_25F657B70()
{
  sub_25F6759E0();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25F657548;
  return sub_25F657E3C(v3, v0 + 16);
}

uint64_t Array.asDictionary<A, B>()()
{
  return sub_25F70E540();
}

void sub_25F657CA8()
{
  sub_25F6784CC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_25F67AD88(v7, v5);
  sub_25F6E6974();
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_25F67ACD8(v4);
  if ((sub_25F70F0A0() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_25F67AD88(v8, v6);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    sub_25F70F520();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v0;
  if (v15)
  {
    sub_25F6E680C(v10, *(void *)(v18 + 56) + 8 * v14, v2);
    sub_25F67865C();
  }
  else
  {
    sub_25F692820(v14, v8, v6, v10, v18);
    sub_25F67865C();
    sub_25F70E570();
  }
}

uint64_t sub_25F657DC4()
{
  sub_25F67ACD8(&qword_26B39E258);
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(&qword_26B39E260);
  swift_allocObject();
  uint64_t result = sub_25F694410(v0);
  qword_26B39E2D0 = result;
  return result;
}

uint64_t sub_25F657E3C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  sub_25F67ACD8(&qword_26B39DF68);
  v2[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6735D8, 0, 0);
}

uint64_t sub_25F657ED0()
{
  sub_25F67ACD8(&qword_26B39DD48);
  uint64_t v0 = sub_25F70E530();
  sub_25F67ACD8(qword_26B39DD50);
  sub_25F67E12C();
  uint64_t result = sub_25F68DFC8(v0, &qword_26B39DE20);
  qword_26B39DE80 = result;
  return result;
}

uint64_t sub_25F657F48@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_25F67ACD8(&qword_26B39DB18);
  a1[4] = sub_25F6927CC();
  sub_25F677CCC(a1);
  sub_25F70ECC0();
  sub_25F67ACD8(&qword_26B39DB70);
  sub_25F65438C();
  return sub_25F70F2B0();
}

uint64_t CoreTip.deinit()
{
  swift_bridgeObjectRelease();
  sub_25F67A28C(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC10TipKitCore7CoreTip___observationRegistrar;
  sub_25F70DFF0();
  sub_25F674D1C();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_25F65809C()
{
  sub_25F6759E0();
  *(void *)(v1 + 80) = v0;
  sub_25F658188((unint64_t *)&qword_26B39E0D0, 255, (void (*)(uint64_t))type metadata accessor for MiniTipsDatastore.DatastoreQueue);
  if (v0)
  {
    swift_getObjectType();
    uint64_t v2 = sub_25F70EA30();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
  }
  return MEMORY[0x270FA2498](sub_25F65D490, v2, v4);
}

uint64_t sub_25F65815C()
{
  return DatastoreActor.unownedExecutor.getter();
}

uint64_t DatastoreActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25F658188(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void AtomicProperty.subscript.getter()
{
  sub_25F67E30C();
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = v1[3];
  long long v7[2] = v1[2];
  uint64_t v3 = v1[4];
  v7[3] = *(void *)(v2 + 16);
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  AtomicProperty.getOrCreate<A, B>(key:default:)(v6, (uint64_t)sub_25F67FFF8, (uint64_t)v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  uint64_t v0 = sub_25F70ECF0();
  sub_25F679DB0((void (*)(uint64_t))sub_25F67FE3C, v1, v2, v3, v0, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F6A022C, v1, v2, *(void *)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 16), v3, v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_25F67E30C();
  uint64_t v1 = *(void *)(v0 + 80);
  v5[1] = *(_OWORD *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v2;
  uint64_t v8 = v3;
  AtomicProperty.getOrCreate<A, B>(key:default:)(v4, (uint64_t)sub_25F6A18C0, (uint64_t)v5);
}

void AtomicProperty.getOrCreate<A, B>(key:default:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = *(void **)(*v3 + 80);
  uint64_t v6 = v5[3];
  v8[2] = v5[2];
  uint64_t v7 = v5[4];
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = v7;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F680028, (uint64_t)v8, v4, (uint64_t)v5, v9);
}

{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void v6[3];
  long long v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  uint64_t v4 = v3[2];
  uint64_t v5 = *(void *)(*v3 + 80);
  v6[2] = *(void *)(v5 + 16);
  uint64_t v7 = *(_OWORD *)(v5 + 24);
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F6A1848, (uint64_t)v6, v4, v5, v7);
}

void AtomicProperty.set<A, B>(key:returning:)()
{
  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F68027C, v1, v2, *(void *)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24), v3, v4, v5, v6);
}

id sub_25F658324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_25F70E690();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithStoreIdentifier_type_, v5, a3);

  return v6;
}

void sub_25F6583A0()
{
  sub_25F672A18();
  uint64_t v30 = v1;
  uint64_t v31 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v7 = sub_25F672C08(v6);
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  uint64_t v28 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)v26 - v12;
  uint64_t v14 = sub_25F70E3C0();
  sub_25F67C9A8();
  uint64_t v29 = v15;
  MEMORY[0x270FA5388](v16, v17);
  sub_25F674D94();
  uint64_t v27 = v18;
  if (qword_26B39CE78 != -1) {
    swift_once();
  }
  sub_25F672AB4();
  uint64_t v19 = *(void *)(v3 + 8);
  v26[1] = v3;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
  swift_retain();
  v20(v5, v19);
  v26[0] = v5;
  sub_25F673D98();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_25F67D9DC((uint64_t)v13, 1, v14) == 1)
  {
    sub_25F673A7C((uint64_t)v13);
    v20(v26[0], v19);
    sub_25F65D8A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v29;
    uint64_t v22 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v27, v13, v14);
    uint64_t v23 = (uint64_t)v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v28, v22, v14);
    sub_25F674004(v23, 0, 1, v14);
    sub_25F6E6BBC();
    sub_25F673A7C(v23);
    uint64_t v24 = sub_25F672AA0();
    v25(v24);
  }
  sub_25F675E04();
}

uint64_t sub_25F658668()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39CEF0);
  sub_25F67CA24();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3, v4);
  sub_25F6759BC();
  uint64_t v7 = v6 - v5;
  sub_25F682540((uint64_t)&unk_26B39CEE8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v7, v0);
}

uint64_t sub_25F658774()
{
  sub_25F6759E0();
  v0[13] = v1;
  v0[14] = v2;
  v0[12] = v3;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DF68);
  sub_25F672C08(v4);
  v0[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F66246C, 0, 0);
}

uint64_t sub_25F658804(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 48) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_25F661E68;
  return v7(v4);
}

uint64_t sub_25F6588DC()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  sub_25F676894();
  return v3();
}

uint64_t sub_25F65899C()
{
  return sub_25F6589C4();
}

uint64_t sub_25F6589C4()
{
  return swift_release();
}

uint64_t Mutex<A>.currentValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  os_unfair_lock_lock(v2);
  sub_25F67E9D0();
  sub_25F658B00(v5);
  os_unfair_lock_unlock(v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
}

uint64_t sub_25F658B00(uint64_t a1)
{
  return sub_25F6801C8(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_25F658B20()
{
  sub_25F6759E0();
  sub_25F67D84C();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  sub_25F6759EC();
  return v3();
}

uint64_t sub_25F658BC8()
{
  swift_release();
  sub_25F669178();
  if (qword_26B39D830 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for logger();
  sub_25F67F3A4(v0, (uint64_t)qword_26B39D818);
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  sub_25F675B8C();
  uint64_t v5 = v1;
  unint64_t v6 = v2;
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  CoreTip.Status.description.getter();
  sub_25F70E790();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F68C2F0(v5, v6);
  swift_bridgeObjectRelease();
  sub_25F6759EC();
  return v3();
}

void sub_25F658DA0()
{
  sub_25F672A18();
  sub_25F670BCC(v1, v2, v3, v4);
  uint64_t v5 = sub_25F67ACD8(&qword_26B39DBC0);
  uint64_t v6 = sub_25F672C08(v5);
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6768BC();
  sub_25F67ACD8(&qword_26B39CFF0);
  sub_25F67CA24();
  uint64_t v9 = v8;
  v37[1] = v8;
  MEMORY[0x270FA5388](v10, v11);
  sub_25F67B088();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F670C78();
  MEMORY[0x270FA5388](v14, v15);
  sub_25F670B6C();
  MEMORY[0x270FA5388](v16, v17);
  v37[2] = (uint64_t)v37 - v18;
  sub_25F679DD4();
  uint64_t v21 = MEMORY[0x270FA5388](v19, v20);
  sub_25F670B80(v21, v22, v23, v24, v25, v26, v27, v28, v37[0]);
  sub_25F67ACD8(&qword_26B39CF18);
  sub_25F674D1C();
  sub_25F6764EC();
  v29();
  sub_25F670B40();
  uint64_t v30 = type metadata accessor for CoreEventRecord();
  uint64_t v31 = sub_25F682878(&qword_26B39DC30, 255, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_25F670B94();
  v37[14] = v30;
  v37[15] = v31;
  swift_getKeyPath();
  sub_25F685C34();
  v32 = *(void (**)(void))(v9 + 32);
  sub_25F6767EC();
  v32();
  swift_release();
  v37[12] = v30;
  v37[13] = v31;
  swift_getKeyPath();
  sub_25F670C08();
  sub_25F6767EC();
  v32();
  swift_release();
  v37[10] = v30;
  v37[11] = v31;
  swift_getKeyPath();
  uint64_t v38 = v37[5];
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  sub_25F6767EC();
  v32();
  swift_release();
  v37[8] = v30;
  v37[9] = v31;
  swift_getKeyPath();
  uint64_t v38 = v37[6];
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  sub_25F6767EC();
  v32();
  swift_release();
  unint64_t v33 = sub_25F68C1E8();
  sub_25F679E44();
  v34();
  if (v0) {
    goto LABEL_9;
  }
  if (v33 >> 62)
  {
    sub_25F672CA0();
    if (!sub_25F70F100()) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_25F70E570();
    if (!v35) {
      goto LABEL_7;
    }
  }
  if ((v33 & 0xC000000000000001) != 0) {
    MEMORY[0x2611FBA70](0, v33);
  }
  else {
    swift_retain();
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v36) {
    swift_release();
  }
LABEL_9:
  sub_25F685BEC();
  sub_25F675E04();
}

uint64_t sub_25F659104()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v0 = qword_26B39E3E0;
    unint64_t v1 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v0 = qword_26B3A3078;
      unint64_t v1 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v2 = sub_25F6A3C40();
      if (v3) {
        uint64_t v0 = v2;
      }
      else {
        uint64_t v0 = 0;
      }
      if (v3) {
        unint64_t v1 = v3;
      }
      else {
        unint64_t v1 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v0 == 0x6C7070612E6D6F63 && v1 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v5 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_29:
    char v6 = 1;
    return v6 & 1;
  }
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  if (byte_26B39E318 != 1) {
    goto LABEL_27;
  }
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  if ((byte_26B39DFAC & 1) == 0)
  {
    if (qword_26B39D3A0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_25F67CF3C();
    char v6 = sub_25F651AB0(v8, v9 | 0xEF64737069740000, v10);
  }
  else
  {
LABEL_27:
    char v6 = 0;
  }
  return v6 & 1;
}

void *sub_25F659374()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  if (qword_26B39E3E8)
  {
    uint64_t v0 = qword_26B39E3E0;
    uint64_t v1 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v0 = qword_26B3A3078;
      uint64_t v1 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v2 = sub_25F6A3C40();
      if (v3) {
        uint64_t v0 = v2;
      }
      else {
        uint64_t v0 = 0;
      }
      if (v3) {
        uint64_t v1 = v3;
      }
      else {
        uint64_t v1 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  type metadata accessor for MiniTipsDatastore();
  swift_allocObject();
  sub_25F70E570();
  uint64_t result = MiniTipsDatastore.init(id:bundleID:)(0xD000000000000017, 0x800000025F71BBE0, v0, v1);
  qword_26B39E138 = (uint64_t)result;
  return result;
}

uint64_t sub_25F6594C4()
{
  id v0 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v1 = (void *)sub_25F70E690();
  uint64_t v2 = sub_25F70ECD0();

  return v2;
}

uint64_t sub_25F659548(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25F686110();
  uint64_t v3 = v11;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_25F67AD2C(i, (uint64_t)v10);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F686110();
        uint64_t v3 = v11;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        sub_25F686110();
        uint64_t v3 = v11;
      }
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(void *)(v6 + 40) = v9;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_25F659690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  sub_25F70E570();
  uint64_t v6 = sub_25F67664C();
  return a5(v6);
}

uint64_t CoreParameterRecord.valueType.setter()
{
  return sub_25F6596F0();
}

uint64_t sub_25F6596F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CoreRule.Predicate()
{
  return self;
}

uint64_t CoreEventRecord.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t CoreEventRecord.id.getter()
{
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&unk_26B39DC28);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&unk_26B39DC30);
  sub_25F70E2C0();
  swift_release();
  return v0;
}

uint64_t static URL.defaultDatastore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v83 = a1;
  sub_25F70DD60();
  sub_25F67CA24();
  uint64_t v80 = v2;
  uint64_t v81 = v1;
  MEMORY[0x270FA5388](v1, v3);
  sub_25F6759BC();
  uint64_t v79 = v5 - v4;
  uint64_t v85 = sub_25F70DE50();
  sub_25F67CA24();
  uint64_t v82 = v6;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F67CF74();
  v77 = v9;
  sub_25F679DD4();
  MEMORY[0x270FA5388](v10, v11);
  v73 = (char *)&v73 - v12;
  sub_25F679DD4();
  MEMORY[0x270FA5388](v13, v14);
  v75 = (char *)&v73 - v15;
  uint64_t v84 = sub_25F67ACD8(&qword_26B39D418);
  uint64_t v17 = MEMORY[0x270FA5388](v84, v16);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v20);
  uint64_t v76 = (uint64_t)&v73 - v21;
  uint64_t v22 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v22 - 8, v23);
  sub_25F67CF74();
  uint64_t v78 = v24;
  sub_25F679DD4();
  uint64_t v27 = MEMORY[0x270FA5388](v25, v26);
  uint64_t v29 = (char *)&v73 - v28;
  uint64_t v31 = MEMORY[0x270FA5388](v27, v30);
  unint64_t v33 = (char *)&v73 - v32;
  MEMORY[0x270FA5388](v31, v34);
  uint64_t v74 = (uint64_t)&v73 - v35;
  sub_25F679DD4();
  uint64_t v38 = MEMORY[0x270FA5388](v36, v37);
  v40 = (char *)&v73 - v39;
  MEMORY[0x270FA5388](v38, v41);
  v43 = (char *)&v73 - v42;
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v44 = qword_26B39E3E8;
  uint64_t v45 = qword_26B39DFB0;
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  if (v45 != -1) {
    swift_once();
  }
  if (word_26B39DFA8 == 3)
  {
    if (qword_26B39E320 != -1) {
      swift_once();
    }
    char v46 = byte_26B39E318;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
    {
      sub_25F70DD90();
      sub_25F676874((uint64_t)v43);
      static URL.cachesDirectoryForCurrentUser.getter((uint64_t)v40);
      uint64_t v47 = v76;
      uint64_t v48 = v76 + *(int *)(v84 + 48);
      sub_25F65A184((uint64_t)v43, v76);
      sub_25F65A184((uint64_t)v40, v48);
      sub_25F67CF54(v47);
      if (v59)
      {
        sub_25F67EFC0((uint64_t)v40, &qword_26B39E248);
        sub_25F67EFC0((uint64_t)v43, &qword_26B39E248);
        sub_25F67CF54(v48);
        if (v59)
        {
          sub_25F67EFC0(v47, &qword_26B39E248);
LABEL_32:
          v57 = v73;
          sub_25F70DD90();
          goto LABEL_33;
        }
      }
      else
      {
        sub_25F65A184(v47, v74);
        sub_25F67CF54(v48);
        if (!v59)
        {
          uint64_t v62 = v82;
          sub_25F6759CC();
          v63();
          sub_25F650830();
          char v64 = sub_25F70E680();
          v65 = *(void (**)(void))(v62 + 8);
          sub_25F67E67C();
          v65();
          sub_25F67EFC0((uint64_t)v40, &qword_26B39E248);
          sub_25F67EFC0((uint64_t)v43, &qword_26B39E248);
          sub_25F67E67C();
          v65();
          sub_25F67EFC0(v47, &qword_26B39E248);
          if (v64) {
            goto LABEL_32;
          }
          return sub_25F70DD90();
        }
        sub_25F67EFC0((uint64_t)v40, &qword_26B39E248);
        sub_25F67EFC0((uint64_t)v43, &qword_26B39E248);
        uint64_t v60 = sub_25F67DF78();
        v61(v60);
      }
      sub_25F67EFC0(v47, &qword_26B39D418);
      return sub_25F70DD90();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25F70DDD0();
  sub_25F676874((uint64_t)v33);
  static URL.applicationSupportDirectoryForCurrentUser.getter((uint64_t)v29);
  uint64_t v49 = (uint64_t)&v19[*(int *)(v84 + 48)];
  sub_25F65A184((uint64_t)v33, (uint64_t)v19);
  sub_25F65A184((uint64_t)v29, v49);
  sub_25F67CF54((uint64_t)v19);
  if (!v59)
  {
    sub_25F65A184((uint64_t)v19, v78);
    sub_25F67CF54(v49);
    if (!v50)
    {
      uint64_t v53 = v82;
      sub_25F6759CC();
      v54();
      sub_25F650830();
      char v55 = sub_25F70E680();
      v56 = *(void (**)(void))(v53 + 8);
      sub_25F67E67C();
      v56();
      sub_25F67EFC0((uint64_t)v29, &qword_26B39E248);
      sub_25F67EFC0((uint64_t)v33, &qword_26B39E248);
      sub_25F67E67C();
      v56();
      sub_25F67EFC0((uint64_t)v19, &qword_26B39E248);
      if (v55) {
        goto LABEL_25;
      }
      return sub_25F70DDD0();
    }
    sub_25F67EFC0((uint64_t)v29, &qword_26B39E248);
    sub_25F67EFC0((uint64_t)v33, &qword_26B39E248);
    uint64_t v51 = sub_25F67DF78();
    v52(v51);
LABEL_23:
    sub_25F67EFC0((uint64_t)v19, &qword_26B39D418);
    return sub_25F70DDD0();
  }
  sub_25F67EFC0((uint64_t)v29, &qword_26B39E248);
  sub_25F67EFC0((uint64_t)v33, &qword_26B39E248);
  sub_25F67CF54(v49);
  if (!v59) {
    goto LABEL_23;
  }
  sub_25F67EFC0((uint64_t)v19, &qword_26B39E248);
LABEL_25:
  v57 = v77;
  sub_25F70DDD0();
LABEL_33:
  if (qword_26B39E3E8)
  {
    uint64_t v66 = qword_26B39E3E0;
    unint64_t v67 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v66 = qword_26B3A3078;
      unint64_t v67 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v68 = sub_25F6A3C40();
      if (v69)
      {
        uint64_t v66 = v68;
        unint64_t v67 = v69;
      }
      else
      {
        uint64_t v66 = 0;
        unint64_t v67 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  uint64_t v86 = v66;
  unint64_t v87 = v67;
  uint64_t v71 = v79;
  uint64_t v70 = v80;
  uint64_t v72 = v81;
  (*(void (**)(uint64_t, void, uint64_t))(v80 + 104))(v79, *MEMORY[0x263F06E30], v81);
  sub_25F66580C();
  sub_25F70E570();
  sub_25F70DE40();
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v72);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v57, v44);
}

uint64_t sub_25F65A184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39E248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DatastoreActor()
{
  return self;
}

uint64_t sub_25F65A210()
{
  return sub_25F65A230();
}

uint64_t sub_25F65A230()
{
  return swift_release();
}

uint64_t (*static Configuration.shared.modify())()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_25F65A3A0(uint64_t a1, uint64_t a2)
{
  v2[14] = a1;
  v2[15] = a2;
  sub_25F67ACD8(&qword_26B39D898);
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F664854, 0, 0);
}

uint64_t sub_25F65A4B8()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F674DF8();
  swift_beginAccess();
  if (HIBYTE(word_26B39E410) == 1)
  {
    uint64_t v1 = v0[12];
    sub_25F70E180();
    swift_retain();
    sub_25F70E570();
    if (sub_25F7028CC(v1))
    {
      type metadata accessor for CoreTipRecord();
      uint64_t v2 = sub_25F67ACD8(&qword_26B39D800);
      sub_25F67E9B0(v2);
      sub_25F6F95A8(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
      sub_25F70E140();
      sub_25F675D8C(v0[21], &qword_26B39DBD8);
      type metadata accessor for CoreRuleRecord();
      uint64_t v3 = sub_25F67ACD8(&qword_26B39D4B0);
      sub_25F67E9B0(v3);
      sub_25F6F95A8((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
      sub_25F67E254();
      sub_25F675D8C(v0[20], &qword_26B39DBB8);
      type metadata accessor for CoreParameterRecord();
      uint64_t v4 = sub_25F67ACD8(&qword_26B39D330);
      sub_25F67E9B0(v4);
      sub_25F6F95A8(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
      sub_25F67E254();
      sub_25F675D8C(v0[19], &qword_26B39DBD0);
      type metadata accessor for CoreEventRecord();
      uint64_t v5 = sub_25F67ACD8(&qword_26B39CF18);
      sub_25F67E9B0(v5);
      sub_25F6F95A8(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
      sub_25F67E254();
      sub_25F675D8C(v0[18], &qword_26B39DBC0);
      type metadata accessor for CoreDonationRecord();
      uint64_t v20 = sub_25F67ACD8(&qword_26B39CF20);
      sub_25F67E9B0(v20);
      sub_25F6F95A8(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
      sub_25F67E254();
      sub_25F675D8C(v0[17], &qword_26B39DBC8);
      if (byte_26B39E3F0 == 1)
      {
        if (qword_26B39DFB0 != -1) {
          swift_once();
        }
        if ((byte_26B39DFAC & 1) == 0)
        {
          if (qword_26B39D588 != -1) {
            swift_once();
          }
          uint64_t v6 = v0[15];
          uint64_t v7 = sub_25F67ACD8(&qword_26B39D590);
          uint64_t v8 = sub_25F67F3A4(v7, (uint64_t)qword_26B3A3028);
          swift_beginAccess();
          if (!sub_25F67D9DC(v8, 1, v6) && byte_26B39E3F0 == 1 && (byte_26B39DFAC & 1) == 0)
          {
            sub_25F675D8C(v8 + *(int *)(v0[15] + 40), &qword_26B39D3B0);
            uint64_t v9 = _s12DisplayEventVMa();
            sub_25F67E9B0(v9);
            if (qword_26B39D830 != -1) {
              swift_once();
            }
            uint64_t v10 = type metadata accessor for logger();
            sub_25F67F3A4(v10, (uint64_t)qword_26B39D818);
            sub_25F68C2F0(0xD00000000000002CLL, 0x800000025F71B6A0);
          }
          uint64_t v11 = v0[15];
          swift_endAccess();
          if (!sub_25F67D9DC(v8, 1, v11))
          {
            uint64_t v12 = v0[16];
            sub_25F694524(v8, v12);
            sub_25F6ED7A4();
            sub_25F6E0FA0(v12);
          }
        }
      }
      uint64_t v13 = qword_26B39DFB0;
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      if (v13 != -1) {
        swift_once();
      }
      if (word_26B39DFA8 == 3)
      {
        if (qword_26B39E320 != -1) {
          swift_once();
        }
        char v14 = byte_26B39E318;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          id v15 = objc_msgSend(self, sel_standardUserDefaults);
          sub_25F672B5C();
          uint64_t v16 = (void *)sub_25F70E690();
          objc_msgSend(v15, sel_removeObjectForKey_, v16);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (qword_26B39DF60 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for logger();
      sub_25F67F3A4(v17, (uint64_t)qword_26B39DF90);
      sub_25F68C2F0(0xD000000000000032, 0x800000025F71B660);
      swift_release();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F6759EC();
  return v18();
}

uint64_t sub_25F65AC84()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_25F6668A0, 0, 0);
}

uint64_t sub_25F65AD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v49 = a1;
  uint64_t v72 = a5;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DA50);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  uint64_t v71 = v7;
  MEMORY[0x270FA5388](v6, v8);
  v63 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_25F67ACD8(&qword_26B39C300);
  uint64_t v62 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v10);
  v56 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25F67ACD8(&qword_26B39C2D8);
  uint64_t v67 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64, v12);
  v57 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39C2B0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v68 = v14;
  uint64_t v69 = v15;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v60 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25F67ACD8(&qword_26B39D4A0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25F67ACD8(&qword_26B39D478);
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52, v23);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_25F67ACD8(&qword_26B39CD00);
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v26);
  uint64_t v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_25F67ACD8(&qword_26B39CBB8);
  uint64_t v61 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58, v29);
  char v55 = (char *)&v47 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a2;
  sub_25F67ACD8(&qword_26B39CD08);
  sub_25F70DD00();
  sub_25F682540((uint64_t)&qword_26B39D498);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v47 = v19 + 8;
  uint64_t v48 = v31;
  v31(v22, v18);
  uint64_t v54 = MEMORY[0x263F06C70];
  sub_25F682540((uint64_t)&unk_26B39CCF8);
  sub_25F682540((uint64_t)&qword_26B39D470);
  sub_25F682540((uint64_t)&unk_26B39CD18);
  uint64_t v32 = v50;
  uint64_t v33 = v52;
  sub_25F70DC30();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v33);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v32);
  sub_25F70DD10();
  swift_getKeyPath();
  uint64_t v34 = v56;
  sub_25F70DBF0();
  swift_release();
  v48(v22, v18);
  sub_25F67ACD8(&qword_26B39CED8);
  sub_25F682540((uint64_t)&unk_26B39C2F8);
  sub_25F682540((uint64_t)&unk_26B39CED0);
  uint64_t v35 = v57;
  uint64_t v36 = v59;
  sub_25F70DC00();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v36);
  uint64_t v73 = v65;
  uint64_t v74 = v66;
  sub_25F67ACD8(&qword_26B39DA98);
  uint64_t v37 = v63;
  sub_25F70DD00();
  sub_25F682540((uint64_t)&unk_26B39C2D0);
  sub_25F682540((uint64_t)&unk_26B39DA48);
  sub_25F65F874((uint64_t)&unk_26B39DAA8);
  uint64_t v38 = v60;
  uint64_t v39 = v64;
  uint64_t v40 = v70;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v40);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v39);
  uint64_t v41 = sub_25F67ACD8(&qword_26B39C2C0);
  uint64_t v42 = v72;
  v72[3] = v41;
  v42[4] = sub_25F69716C();
  sub_25F677CCC(v42);
  sub_25F682540((uint64_t)&unk_26B39CBB0);
  sub_25F682540((uint64_t)&unk_26B39C2E8);
  v43 = v55;
  uint64_t v44 = v58;
  uint64_t v45 = v68;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v43, v44);
}

uint64_t sub_25F65B694()
{
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[61];
  sub_25F6654F4(v1);
  if (sub_25F67D9DC(v1, 1, v2) == 1)
  {
    sub_25F67EFC0(v0[60], &qword_26B39E248);
    sub_25F67D7A4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25F6759EC();
    return v3();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[62] + 32))(v0[64], v0[60], v0[61]);
    sub_25F67A8F8(0, &qword_26B39D090);
    id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultCenter);
    if (qword_26B39CEA8 != -1) {
      swift_once();
    }
    sub_25F70ECD0();

    sub_25F70ECA0();
    v0[65] = sub_25F65B8F0(&qword_26B39CE80, v6, (void (*)(uint64_t))_s11FileHandlerCMa);
    sub_25F65B8F0(&qword_26B39D348, 255, MEMORY[0x263F07C88]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[66] = (uint64_t)v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25F6F1B1C;
    uint64_t v8 = sub_25F6796A0();
    return MEMORY[0x270FA1E80](v8);
  }
}

uint64_t sub_25F65B8F0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F65B938(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(v3);
    sub_25F682540((uint64_t)&unk_26B39D970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F65B9C0()
{
  uint64_t v1 = v0[15];
  sub_25F70E180();
  v0[16] = *(void *)(v1 + 112);
  v0[17] = *(void *)(v1 + 120);
  swift_retain();
  sub_25F70E570();
  v0[18] = sub_25F666AE0();
  sub_25F657F48(v0 + 7);
  uint64_t v2 = v0[10];
  uint64_t v3 = sub_25F67A2DC(v0 + 7, v2);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 16))(v5, v3, v2);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  sub_25F677CCC(v0 + 2);
  sub_25F70EB10();
  swift_task_dealloc();
  sub_25F67A28C((uint64_t)(v0 + 7));
  v0[19] = sub_25F682878(&qword_26B39DB50, v6, (void (*)(uint64_t))_s16ContainerMonitorCMa);
  sub_25F68D918((uint64_t)(v0 + 2), v0[5]);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25F65DF80;
  sub_25F6FF63C();
  return MEMORY[0x270FA1E88](v8, v9, v10);
}

uint64_t sub_25F65BC30()
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39E2D8);
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  uint64_t v21 = sub_25F67ACD8(&qword_26B39E2E0);
  sub_25F67CA24();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39E2F0);
  sub_25F67CA24();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17, v18);
  sub_25F6768BC();
  swift_defaultActor_initialize();
  sub_25F67ACD8(&qword_26B39E300);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, *MEMORY[0x263F8F580], v3);
  sub_25F70EAA0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v0 + OBJC_IVAR____TtCC10TipKitCore17MiniTipsDatastore14DatastoreQueue_continuations, v13, v21);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v0 + OBJC_IVAR____TtCC10TipKitCore17MiniTipsDatastore14DatastoreQueue_stream, v2, v14);
  return v0;
}

uint64_t AtomicProperty.wrappedValue.setter()
{
  sub_25F67CF04();
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = v1;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F6801AC, (uint64_t)&v6, v2, v7, MEMORY[0x263F8EE60] + 8);
  sub_25F675994();
  uint64_t v3 = sub_25F676860();
  return v4(v3);
}

uint64_t CoreTipRecord.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F674D1C();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25F65BF3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67ACD8(a3);
  sub_25F674D1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t CoreTip.Options.init(cloudSyncEnabled:hasRandomIdentifier:ignoresDisplayFrequency:maxDisplayCount:maxDisplayDuration:usesConstellation:usesCoreAnalytics:usesTipRecord:)@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v17 = qword_26B39E3E0;
    unint64_t v18 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v17 = qword_26B3A3078;
      unint64_t v18 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v19 = sub_25F6A3C40();
      if (v20)
      {
        uint64_t v17 = v19;
        unint64_t v18 = v20;
      }
      else
      {
        uint64_t v17 = 0;
        unint64_t v18 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (a10 == 2) {
    char v21 = byte_26B39E3F1;
  }
  else {
    char v21 = a10;
  }
  uint64_t v22 = 0x7FFFFFFFFFFFFFFFLL;
  if ((a5 & 1) == 0) {
    uint64_t v22 = a4;
  }
  *(void *)a9 = v17;
  *(void *)(a9 + 8) = v18;
  *(unsigned char *)(a9 + 16) = (a1 == 2) | a1 & 1;
  *(unsigned char *)(a9 + 17) = a2 & 1;
  *(unsigned char *)(a9 + 18) = a3 & 1;
  *(void *)(a9 + 24) = v22;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = a7 & 1;
  *(unsigned char *)(a9 + 41) = 0;
  *(unsigned char *)(a9 + 42) = a8 & 1;
  *(unsigned char *)(a9 + 43) = v21 & 1;
  *(unsigned char *)(a9 + 44) = (a11 == 2) | a11 & 1;
  return sub_25F70E570();
}

uint64_t _s20ConstellationContentC10AttributesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CoreParameter()
{
  return self;
}

void sub_25F65C200()
{
}

uint64_t sub_25F65C218()
{
  return sub_25F65C234();
}

uint64_t sub_25F65C234()
{
  return swift_release();
}

void sub_25F65C2CC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  v29[1] = *(id *)MEMORY[0x263EF8340];
  v29[0] = 0;
  long long v28 = xmmword_25F713AD0;
  uint64_t v10 = (void *)sub_25F70DDA0();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = &v28;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = v29;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_25F6928A0;
  *(void *)(v12 + 24) = v11;
  uint64_t v26 = sub_25F696824;
  uint64_t v27 = v12;
  id v22 = (id)MEMORY[0x263EF8330];
  unint64_t v23 = 1107296256;
  uint64_t v24 = sub_25F652C2C;
  uint64_t v25 = &unk_270BB6088;
  uint64_t v13 = _Block_copy(&v22);
  swift_retain();
  swift_release();
  id v22 = 0;
  objc_msgSend(v5, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v10, a1, &v22, v13);
  _Block_release(v13);

  id v14 = v22;
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v5) {
    __break(1u);
  }
  if (v14)
  {
    id v15 = v14;
    swift_willThrow();
    sub_25F67EFAC(v28, *((unint64_t *)&v28 + 1));

    swift_release();
  }
  else if (v29[0])
  {
    id v16 = v29[0];
    swift_willThrow();
    sub_25F67EFAC(v28, *((unint64_t *)&v28 + 1));

    swift_release();
  }
  else
  {
    uint64_t v17 = *((void *)&v28 + 1);
    if (*((void *)&v28 + 1) >> 60 == 15)
    {
      id v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70DD80();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      id v18 = v22;
      unint64_t v19 = v23;
      sub_25F6931C0();
      swift_allocError();
      *unint64_t v20 = v18;
      v20[1] = v19;
      swift_willThrow();
      sub_25F67EFAC(v28, *((unint64_t *)&v28 + 1));

      swift_release();
    }
    else
    {
      uint64_t v21 = v28;
      swift_release();
      *a4 = v21;
      a4[1] = v17;
    }
  }
}

uint64_t sub_25F65C5E4@<X0>(uint64_t *a1@<X8>)
{
  sub_25F67ACD8(&qword_26B39D7C0);
  sub_25F67C9A8();
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v3, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CEF0);
  sub_25F67C9A8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_25F67ACD8(&qword_26B39CED8);
  sub_25F67C9A8();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20, v21);
  sub_25F675A6C();
  sub_25F681778(&qword_26B39CEE8, &qword_26B39CEF0);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v9);
  sub_25F70DD00();
  a1[3] = sub_25F67ACD8(&qword_26B39CEC0);
  a1[4] = sub_25F696E84();
  sub_25F677CCC(a1);
  sub_25F681778(&qword_26B39CED0, &qword_26B39CED8);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  sub_25F70DBE0();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v1, v17);
}

uint64_t CoreDonationRecord.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25F65C930()
{
  v1[50] = v0;
  v1[51] = type metadata accessor for DeviceProfile();
  v1[52] = swift_task_alloc();
  uint64_t v2 = sub_25F70DA90();
  v1[53] = v2;
  v1[54] = *(void *)(v2 - 8);
  v1[55] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39D2C0);
  v1[56] = swift_task_alloc();
  uint64_t v3 = sub_25F70ECB0();
  v1[57] = v3;
  v1[58] = *(void *)(v3 - 8);
  v1[59] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39E248);
  v1[60] = swift_task_alloc();
  uint64_t v4 = sub_25F70DE50();
  v1[61] = v4;
  v1[62] = *(void *)(v4 - 8);
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F65B694, v0, 0);
}

uint64_t sub_25F65CB48()
{
  return sub_25F65CB64();
}

uint64_t sub_25F65CB64()
{
  return swift_release();
}

uint64_t sub_25F65CC04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25F67ACD8(&qword_26B39E2B8);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v45 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F70DE50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v9, v12);
  uint64_t v14 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = *(void *)((char *)v0 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer);
  if (v18)
  {
    swift_retain();
    sub_25F660200((uint64_t)v8);
    if (sub_25F67D9DC((uint64_t)v8, 1, v9) != 1)
    {
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v43 = v10 + 32;
      uint64_t v44 = v21;
      v21(v17, v8, v9);
      uint64_t v22 = sub_25F70EA90();
      sub_25F674004(v45, 1, 1, v22);
      uint64_t v23 = v0[2];
      uint64_t v40 = v0[3];
      uint64_t v41 = v23;
      uint64_t v24 = v0[7];
      uint64_t v36 = v0[6];
      uint64_t v37 = v24;
      uint64_t v25 = v0[8];
      uint64_t v38 = v0[9];
      uint64_t v39 = v25;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v17, v9);
      unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v27 = (v11 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v42 = v10;
      uint64_t v29 = (char *)swift_allocObject();
      *((void *)v29 + 2) = 0;
      *((void *)v29 + 3) = 0;
      uint64_t v30 = v36;
      *((void *)v29 + 4) = v18;
      *((void *)v29 + 5) = v30;
      *((void *)v29 + 6) = v37;
      v44(&v29[v26], v14, v9);
      uint64_t v31 = v38;
      *(void *)&v29[v27] = v39;
      *(void *)&v29[v28] = v31;
      uint64_t v32 = &v29[(v28 + 15) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v33 = v40;
      *(void *)uint64_t v32 = v41;
      *((void *)v32 + 1) = v33;
      swift_retain();
      sub_25F70E570();
      sub_25F70E570();
      swift_retain();
      uint64_t v34 = v45;
      uint64_t v35 = sub_25F65F94C(v45, (uint64_t)&unk_26A7B1C20, (uint64_t)v29);
      sub_25F675D8C(v34, &qword_26B39E2B8);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v9);
      *(void *)((char *)v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask) = v35;
      return swift_release();
    }
    swift_release();
    sub_25F675D8C((uint64_t)v8, &qword_26B39E248);
  }
  if (qword_26B39C298 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for logger();
  sub_25F67F3A4(v19, (uint64_t)qword_26B39C280);
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  uint64_t v46 = 0xD000000000000016;
  unint64_t v47 = 0x800000025F71B4A0;
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F68C2F0(v46, v47);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F65D034@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v20[1] = a1;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DB30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  uint64_t v22 = v4;
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F67ACD8(&qword_26B39D7D8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25F67ACD8(&qword_26B39D400);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39D7D0, &qword_26B39D7D8);
  sub_25F70DD10();
  uint64_t v23 = type metadata accessor for CoreTipRecord();
  uint64_t v24 = sub_25F682878(&qword_26B39DD08, 255, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_25F70E3C0();
  sub_25F70DD00();
  a2[3] = sub_25F67ACD8(&qword_26B39D3E8);
  a2[4] = sub_25F65D3F4();
  sub_25F677CCC(a2);
  sub_25F681778(&qword_26B39D3F8, &qword_26B39D400);
  sub_25F681778((unint64_t *)&qword_26B39DB28, &qword_26B39DB30);
  sub_25F682878(&qword_26B39DB60, 255, MEMORY[0x263F18140]);
  uint64_t v18 = v21;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

unint64_t sub_25F65D3F4()
{
  unint64_t result = qword_26B39D3E0;
  if (!qword_26B39D3E0)
  {
    sub_25F682580(&qword_26B39D3E8);
    sub_25F68F0DC((unint64_t *)&qword_26B39D3F0, &qword_26B39D400, &qword_26B39D7C8, &qword_26B39D7D8);
    sub_25F68F170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D3E0);
  }
  return result;
}

uint64_t sub_25F65D490()
{
  sub_25F6759E0();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_25F658B20;
  uint64_t v1 = swift_continuation_init();
  sub_25F65D524(v1);
  return MEMORY[0x270FA23F0](v0 + 16);
}

uint64_t sub_25F65D524(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(qword_26B39E198);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2, v4);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  v9[0] = &unk_26A7B1D38;
  v9[1] = v7;
  sub_25F67ACD8(&qword_26B39E2E0);
  sub_25F70EAB0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_25F65D678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  v3[15] = type metadata accessor for DeviceProfile();
  v3[16] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBC8);
  v3[17] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBC0);
  v3[18] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBD0);
  v3[19] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBB8);
  v3[20] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBD8);
  v3[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F65A4B8, 0, 0);
}

uint64_t _s20ConstellationContentC10AttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

void sub_25F65D8A0()
{
  sub_25F672A18();
  uint64_t v3 = v0;
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v13 = sub_25F672C08(v12);
  MEMORY[0x270FA5388](v13, v14);
  sub_25F674D94();
  uint64_t v33 = v15;
  sub_25F67ACD8(&qword_26B39CF18);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F675A6C();
  sub_25F67ACD8(&qword_26B39CEB0);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v18, v19);
  sub_25F6759BC();
  uint64_t v22 = v21 - v20;
  swift_getKeyPath();
  sub_25F684B6C((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  sub_25F70DFA0();
  sub_25F70E570();
  sub_25F69305C(v7, 0, MEMORY[0x263F8EE78], v22, v2, v3, v11, v9);
  if (v1)
  {

    uint64_t v23 = sub_25F67B278();
    v24(v23);
    uint64_t v25 = sub_25F682D50();
    v26(v25);
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t))(*(void *)(v34 + 8) + 16))(v35);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F6931C0();
    swift_allocError();
    *unint64_t v27 = 0xD000000000000026;
    v27[1] = 0x800000025F7194C0;
    swift_willThrow();
  }
  else
  {
    uint64_t v28 = sub_25F67B278();
    v29(v28);
    uint64_t v30 = sub_25F682D50();
    v31(v30);
    if (sub_25F70E0B0()) {
      sub_25F70E100();
    }
    if (qword_26B39CE78 != -1) {
      swift_once();
    }
    sub_25F672AB4();
    sub_25F684B6C(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
    swift_retain();
    sub_25F70E220();
    uint64_t v32 = sub_25F70E3C0();
    sub_25F674004(v33, 0, 1, v32);
    sub_25F684C44();
    swift_release();
    sub_25F673A7C(v33);
  }
  sub_25F675E04();
}

uint64_t AtomicProperty.subscript.setter(uint64_t a1)
{
  sub_25F67CF04();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v12 = *(void *)(v3 + 16);
  long long v13 = *(_OWORD *)(v3 + 24);
  uint64_t v14 = v5;
  uint64_t v15 = v4;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F680308, (uint64_t)v11, v6, v3, MEMORY[0x263F8EE60] + 8);
  sub_25F675994();
  uint64_t v7 = sub_25F676860();
  v8(v7);
  sub_25F70ECF0();
  sub_25F675994();
  return (*(uint64_t (**)(uint64_t))(v9 + 8))(a1);
}

uint64_t sub_25F65DD84()
{
  return sub_25F65DDAC();
}

uint64_t sub_25F65DDAC()
{
  return swift_release();
}

void sub_25F65DE50()
{
}

void sub_25F65DE88()
{
}

void sub_25F65DEC0()
{
}

uint64_t sub_25F65DF80()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *v1;
  sub_25F675A28();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25F68CB40, v3, 0);
}

uint64_t static PredicateCoder.encode<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_25F70DD50();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = a2;
  sub_25F70DF90();
  swift_getWitnessTable();
  uint64_t v8 = sub_25F67BE7C();
  if (!v2) {
    return v8;
  }

  static PredicateCodableConfiguration.standardConfigurationWithKeyPaths<A>(for:)((uint64_t)v7);
  swift_getWitnessTable();
  uint64_t v9 = sub_25F6F587C();
  uint64_t v10 = sub_25F67D2E8();
  v11(v10);
  return v9;
}

id CoreRule.Predicate.__allocating_init(id:predicateData:)()
{
  id v0 = objc_allocWithZone((Class)sub_25F675AE8());
  return CoreRule.Predicate.init(id:predicateData:)();
}

id CoreRule.Predicate.init(id:predicateData:)()
{
  sub_25F675AE8();
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v1[OBJC_IVAR___Predicate_id];
  *uint64_t v6 = v4;
  v6[1] = v3;
  uint64_t v7 = &v1[OBJC_IVAR___Predicate_argument];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 2;
  v1[OBJC_IVAR___Predicate_operation] = 11;
  uint64_t v8 = &v1[OBJC_IVAR___Predicate_rawdata];
  *uint64_t v8 = v2;
  v8[1] = v0;
  uint64_t v9 = &v1[OBJC_IVAR___Predicate_value];
  *uint64_t v9 = 0u;
  v9[1] = 0u;
  *(void *)&v1[OBJC_IVAR___Predicate_queries] = 0;
  *(void *)&v1[OBJC_IVAR___Predicate_subpredicates] = 0;
  v11.receiver = v1;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t sub_25F65E368()
{
  sub_25F682830(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  uint64_t result = sub_25F70E300();
  if ((result & 1) == 0)
  {
    uint64_t v2 = sub_25F689AEC();
    swift_release();
    if (v2) {
      sub_25F696688();
    }
    if (qword_26B39D6C0 != -1) {
      goto LABEL_27;
    }
    while (1)
    {
      CoreRuleRecord.id.getter();
      char v5 = sub_25F650BC8(v3, v4);
      swift_bridgeObjectRelease();
      if (v5)
      {
        CoreRuleRecord.id.getter();
        sub_25F6EC0AC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_25F65E654();
      if (v6)
      {
        sub_25F692A04(v6);
        uint64_t v8 = v7;
        swift_bridgeObjectRelease();
        if (*(void *)(v8 + 16)) {
          sub_25F6EC110();
        }
        swift_bridgeObjectRelease();
      }
      sub_25F65E654();
      if (!v9) {
        return sub_25F69300C();
      }
      unint64_t v10 = v9;
      if (v9 >> 62)
      {
        sub_25F70E570();
        uint64_t v11 = sub_25F70F100();
        if (!v11)
        {
LABEL_22:
          swift_bridgeObjectRelease_n();
          return sub_25F69300C();
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        sub_25F70E570();
        if (!v11) {
          goto LABEL_22;
        }
      }
      uint64_t v12 = 4;
      while (1)
      {
        if ((v10 & 0xC000000000000001) != 0) {
          MEMORY[0x2611FBA70](v12 - 4, v10);
        }
        else {
          swift_retain();
        }
        uint64_t v13 = v12 - 3;
        if (__OFADD__(v12 - 4, 1)) {
          break;
        }
        type metadata accessor for CoreRuleRecord();
        sub_25F682830((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
        if ((sub_25F70E300() & 1) == 0)
        {
          sub_25F69300C();
          if (v0)
          {
            swift_bridgeObjectRelease_n();
            return swift_release();
          }
        }
        swift_release();
        ++v12;
        if (v13 == v11) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_27:
      swift_once();
    }
  }
  return result;
}

void sub_25F65E654()
{
}

unint64_t sub_25F65E75C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v45[1] = a7;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  int v48 = a2;
  uint64_t v47 = a1;
  uint64_t v10 = sub_25F67ACD8(&qword_26B39DBC0);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39CFF0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14, v16);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  uint64_t v23 = (char *)v45 - v22;
  uint64_t v25 = MEMORY[0x270FA5388](v21, v24);
  unint64_t v27 = (char *)v45 - v26;
  uint64_t v29 = MEMORY[0x270FA5388](v25, v28);
  uint64_t v46 = (char *)v45 - v30;
  MEMORY[0x270FA5388](v29, v31);
  uint64_t v64 = (char *)v45 - v32;
  uint64_t v33 = sub_25F67ACD8(&qword_26B39CF18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v13, a5, v33);
  sub_25F674004((uint64_t)v13, 0, 1, v33);
  uint64_t v34 = type metadata accessor for CoreEventRecord();
  uint64_t v35 = sub_25F682908(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  uint64_t v53 = a8;
  sub_25F70E570();
  sub_25F70E200();
  uint64_t v60 = v34;
  uint64_t v61 = v35;
  swift_getKeyPath();
  uint64_t v62 = 1;
  char v63 = 0;
  swift_setAtWritableKeyPath();
  uint64_t v51 = v15;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v36(v23, v19, v14);
  uint64_t v37 = v47;
  swift_release();
  uint64_t v58 = v34;
  uint64_t v59 = v35;
  swift_getKeyPath();
  LOBYTE(v62) = v48;
  swift_setAtWritableKeyPath();
  v36(v27, v23, v14);
  swift_release();
  uint64_t v56 = v34;
  uint64_t v57 = v35;
  swift_getKeyPath();
  uint64_t v62 = v49;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  uint64_t v38 = v46;
  v36(v46, v27, v14);
  swift_release();
  uint64_t v54 = v34;
  uint64_t v55 = v35;
  swift_getKeyPath();
  uint64_t v62 = v50;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  uint64_t v39 = v64;
  v36(v64, v38, v14);
  swift_release();
  uint64_t v40 = v52;
  unint64_t result = sub_25F70E110();
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v14);
    swift_bridgeObjectRelease_n();
    return v37;
  }
  unint64_t v42 = result;
  uint64_t v43 = v51;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    swift_allocObject();
    sub_25F70E570();
    uint64_t v37 = CoreEventRecord.init(id:)();
    sub_25F70E160();
    goto LABEL_11;
  }
  sub_25F70E570();
  uint64_t v44 = sub_25F70F100();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v44) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v42 & 0xC000000000000001) != 0)
  {
    uint64_t v37 = MEMORY[0x2611FBA70](0, v42);
    goto LABEL_8;
  }
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v37 = *(void *)(v42 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v64, v14);
    swift_bridgeObjectRelease_n();
    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_25F65EC88()
{
  sub_25F67629C();
  uint64_t v1 = (int *)v0[2];
  v0[15] = v1;
  if (v1)
  {
    uint64_t v2 = v0[12];
    v0[16] = v0[3];
    v0[4] = v2;
    unint64_t v9 = (uint64_t (*)(void))((char *)v1 + *v1);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[17] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_25F66313C;
    return v9();
  }
  else
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[10];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    swift_task_dealloc();
    sub_25F6759EC();
    return v8();
  }
}

uint64_t sub_25F65EDD4()
{
  sub_25F6759E0();
  uint64_t v1 = *(void *)(v0 + 64);
  sub_25F70E120();
  return MEMORY[0x270FA2498](sub_25F660BD8, v1, 0);
}

uint64_t sub_25F65EE3C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25F65EE84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  type metadata accessor for CoreParameterRecord();
  return sub_25F65EEEC(v9, a2, a3, a4, a5);
}

uint64_t sub_25F65EEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v49 = a1;
  uint64_t v72 = a5;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DA50);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  uint64_t v71 = v7;
  MEMORY[0x270FA5388](v6, v8);
  char v63 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_25F67ACD8(&qword_26B39CAC0);
  uint64_t v62 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v10);
  uint64_t v56 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_25F67ACD8(&qword_26B39CAE8);
  uint64_t v67 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64, v12);
  uint64_t v57 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39CB00);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v68 = v14;
  uint64_t v69 = v15;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v60 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25F67ACD8(&qword_26B39D4A0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_25F67ACD8(&qword_26B39D478);
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52, v23);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_25F67ACD8(&qword_26B39CD00);
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50, v26);
  uint64_t v28 = (char *)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_25F67ACD8(&qword_26B39CBB8);
  uint64_t v61 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58, v29);
  uint64_t v55 = (char *)&v47 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = a2;
  sub_25F67ACD8(&qword_26B39CD08);
  sub_25F70DD00();
  sub_25F682540((uint64_t)&unk_26B39D498);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v47 = v19 + 8;
  int v48 = v31;
  v31(v22, v18);
  uint64_t v54 = MEMORY[0x263F06C70];
  sub_25F682540((uint64_t)&unk_26B39CCF8);
  sub_25F682540((uint64_t)&unk_26B39D470);
  sub_25F682540((uint64_t)&unk_26B39CD18);
  uint64_t v32 = v50;
  uint64_t v33 = v52;
  sub_25F70DC30();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v33);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v32);
  sub_25F70DD10();
  swift_getKeyPath();
  uint64_t v34 = v56;
  sub_25F70DBF0();
  swift_release();
  v48(v22, v18);
  sub_25F67ACD8(&qword_26B39D2F0);
  sub_25F682540((uint64_t)&unk_26B39CB10);
  sub_25F682540((uint64_t)&unk_26B39D2E8);
  uint64_t v35 = v57;
  uint64_t v36 = v59;
  sub_25F70DC00();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v36);
  uint64_t v73 = v65;
  uint64_t v74 = v66;
  sub_25F67ACD8(&qword_26B39DA98);
  uint64_t v37 = v63;
  sub_25F70DD00();
  sub_25F682540((uint64_t)&unk_26B39CAE0);
  sub_25F682540((uint64_t)&unk_26B39DA48);
  sub_25F65F874((uint64_t)&unk_26B39DAA8);
  uint64_t v38 = v60;
  uint64_t v39 = v64;
  uint64_t v40 = v70;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v40);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v39);
  uint64_t v41 = sub_25F67ACD8(&qword_26B39CAD0);
  unint64_t v42 = v72;
  v72[3] = v41;
  v42[4] = sub_25F65F8D0();
  sub_25F677CCC(v42);
  sub_25F682540((uint64_t)&unk_26B39CBB0);
  sub_25F682540((uint64_t)&unk_26B39CAF8);
  uint64_t v43 = v55;
  uint64_t v44 = v58;
  uint64_t v45 = v68;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v43, v44);
}

unint64_t sub_25F65F814(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(&qword_26B39DA98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25F65F874(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25F65F8D0()
{
  unint64_t result = qword_26B39CAC8;
  if (!qword_26B39CAC8)
  {
    sub_25F682580(&qword_26B39CAD0);
    sub_25F697094();
    sub_25F696F9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CAC8);
  }
  return result;
}

uint64_t sub_25F65F94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F65FA5C(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25F70EA30();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25F65FA5C(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = sub_25F67ACD8(&qword_26B39E2B8);
  MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F65FBCC(a1, (uint64_t)v17, &qword_26B39E2B8);
  uint64_t v18 = sub_25F70EA90();
  if (sub_25F67D9DC((uint64_t)v17, 1, v18) == 1)
  {
    sub_25F675D8C((uint64_t)v17, &qword_26B39E2B8);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v20 = sub_25F70EA80();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t sub_25F65FBCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67ACD8(a3);
  sub_25F674D1C();
  uint64_t v4 = sub_25F674DF8();
  v5(v4);
  return a2;
}

unint64_t sub_25F65FC24(uint64_t a1, uint64_t a2)
{
  sub_25F70DE50();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6759BC();
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DB88);
  MEMORY[0x270FA5388](v6 - 8, v7);
  sub_25F6759BC();
  unint64_t v10 = v9 - v8;
  uint64_t v11 = sub_25F70E360();
  sub_25F67CA24();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14, v15);
  sub_25F6759BC();
  uint64_t v18 = v17 - v16;
  sub_25F692D54(a2, v10);
  if (sub_25F67D9DC(v10, 1, v11) == 1)
  {
    sub_25F701910(v10);
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v19 = 0xD00000000000001FLL;
    v19[1] = 0x800000025F71BAB0;
    swift_willThrow();
  }
  else
  {
    uint64_t v20 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v13 + 32))(v18, v10, v11);
    MEMORY[0x2611FAED0](v20);
    uint64_t v21 = sub_25F70DD70();
    unint64_t v10 = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v23)
    {
      if (qword_26B39DF60 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for logger();
      sub_25F67F3A4(v24, (uint64_t)qword_26B39DF90);
      sub_25F68C2F0(0xD00000000000002ELL, 0x800000025F71BAD0);
      sub_25F70E1D0();
      sub_25F67ACD8(&qword_26B39DE38);
      unint64_t v25 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      unint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_25F710D20;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16))(v10 + v25, v18, v11);
      swift_retain();
      uint64_t v26 = sub_25F70E1C0();
      if (!v2)
      {
        unint64_t v10 = v26;
        uint64_t v35 = sub_25F67D2A4();
        v36(v35);
        uint64_t v37 = sub_25F67E28C();
        v38(v37);
        return v10;
      }
      uint64_t v27 = sub_25F67D2A4();
      v28(v27);
    }
    else
    {
      uint64_t v29 = sub_25F67D2A4();
      v30(v29);
      sub_25F6931C0();
      swift_allocError();
      *uint64_t v31 = 0xD00000000000001ELL;
      v31[1] = 0x800000025F71BB00;
      swift_willThrow();
    }
    uint64_t v32 = sub_25F67E28C();
    v33(v32);
  }
  return v10;
}

void sub_25F65FF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  CoreTip.ConstellationText.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void *MiniTipsDatastore.init(id:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = 0;
  uint64_t v9 = sub_25F70E360();
  sub_25F67E9B0(v9);
  *(void *)((char *)v4 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_datastoreTask) = 0;
  v4[2] = a1;
  v4[3] = a2;
  BOOL v10 = a1 == a3 && a2 == a4;
  if (v10 || (sub_25F682DF8(), (sub_25F70F330() & 1) != 0))
  {
    sub_25F70E570();
    sub_25F70E570();
    uint64_t v11 = a3;
    uint64_t v12 = a4;
  }
  else
  {
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E790();
    sub_25F682DF8();
    sub_25F70E790();
    uint64_t v11 = a3;
    uint64_t v12 = a4;
  }
  v4[6] = v11;
  v4[7] = v12;
  type metadata accessor for MiniTipsDatastore.DatastoreQueue();
  swift_allocObject();
  v4[8] = sub_25F65BC30();
  v4[4] = a3;
  v4[5] = a4;
  if (qword_26B39E250 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  swift_retain();
  sub_25F682DF8();
  sub_25F6546B4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t CoreParameterRecord.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CoreParameterRecord.init(backingData:)(a1);
  return v2;
}

uint64_t sub_25F660200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25F70DE50();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F675B10();
  uint64_t v6 = sub_25F70E360();
  sub_25F67CA24();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelConfiguration;
  swift_beginAccess();
  uint64_t v14 = 1;
  if (!sub_25F67D9DC(v13, 1, v6))
  {
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, v13, v6);
    MEMORY[0x2611FAED0](v15);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
    sub_25F70DDC0();
    uint64_t v16 = sub_25F682DF8();
    v17(v16);
    uint64_t v14 = 0;
  }
  return sub_25F674004(a1, v14, 1, v3);
}

uint64_t sub_25F66038C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_25F67CB10();
  return swift_retain();
}

uint64_t sub_25F6603DC(void *a1)
{
  return CoreRule.Predicate.Argument.encode(to:)(a1);
}

uint64_t sub_25F6603F4()
{
  return sub_25F70E8B0();
}

unint64_t sub_25F660444()
{
  unint64_t result = qword_26B39D550;
  if (!qword_26B39D550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D550);
  }
  return result;
}

uint64_t sub_25F660490(void *a1)
{
  return CoreRule.Predicate.encode(to:)(a1);
}

uint64_t sub_25F6604B4()
{
  sub_25F67629C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F674EB8();
  return sub_25F658804(v3, v4, v5);
}

uint64_t sub_25F66054C@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F66057C(a1);
}

uint64_t sub_25F66057C@<X0>(uint64_t *a1@<X8>)
{
  sub_25F67ACD8(&qword_26B39DA50);
  sub_25F67CA24();
  uint64_t v29 = v3;
  uint64_t v30 = v4;
  MEMORY[0x270FA5388](v3, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CF08);
  sub_25F67CA24();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  sub_25F675A6C();
  uint64_t v14 = sub_25F67ACD8(&qword_26B39CD88);
  sub_25F67CA24();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17, v18);
  sub_25F6759BC();
  uint64_t v21 = v20 - v19;
  uint64_t v26 = sub_25F67ACD8(&qword_26B39CD60);
  sub_25F67CA24();
  uint64_t v27 = v22;
  MEMORY[0x270FA5388](v23, v24);
  sub_25F677E8C();
  sub_25F682540((uint64_t)&unk_26B39CF00);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
  sub_25F67ACD8(&qword_26B39CED8);
  type metadata accessor for CoreEventRecord();
  sub_25F682540((uint64_t)&unk_26B39CD80);
  sub_25F682540((uint64_t)&unk_26B39CED0);
  sub_25F70DC00();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v21, v14);
  sub_25F67ACD8(&qword_26B39DA98);
  sub_25F70DD00();
  a1[3] = sub_25F67ACD8(&qword_26B39CD70);
  a1[4] = sub_25F66095C();
  sub_25F677CCC(a1);
  sub_25F682540((uint64_t)&unk_26B39CD58);
  sub_25F682540((uint64_t)&unk_26B39DA48);
  sub_25F65F814((uint64_t)&unk_26B39DAA8);
  sub_25F70DBE0();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v8, v29);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v2, v26);
}

unint64_t sub_25F66095C()
{
  unint64_t result = qword_26B39CD68;
  if (!qword_26B39CD68)
  {
    sub_25F682580(&qword_26B39CD70);
    sub_25F651D40();
    sub_25F653948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD68);
  }
  return result;
}

uint64_t sub_25F6609D8()
{
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[5];
  uint64_t v1 = v0[6];
  swift_beginAccess();
  uint64_t v3 = v2 + 2;
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  sub_25F67A2DC(v3, v4);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v7(v4, v6);
  sub_25F673D98();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_25F70E3C0();
  int v9 = sub_25F67D9DC(v1, 1, v8);
  sub_25F673A7C(v1);
  if (v9 == 1)
  {
    uint64_t v10 = *(void *)(v0[5] + 56);
    swift_unownedRetainStrong();
    v0[7] = *(void *)(v10 + 64);
    swift_retain();
    swift_release();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[8] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25F65AC84;
    return sub_25F65809C();
  }
  else
  {
    sub_25F666914();
    swift_task_dealloc();
    uint64_t v13 = sub_25F67D638();
    return v14(v13);
  }
}

uint64_t sub_25F660BD8()
{
  sub_25F67629C();
  sub_25F660C98(v0[15]);
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[8];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F661D88;
  uint64_t v4 = v0[9];
  return MEMORY[0x270FA1F68](v0 + 2, v2, v1, v4);
}

uint64_t sub_25F660C98(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25F660CA8(uint64_t a1)
{
  return sub_25F660CC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_25F660CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1, a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5, v8);
  (*(void (**)(char *))(v10 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = swift_dynamicCast();
  if (v11) {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  }
  return v11;
}

uint64_t CoreRuleRecord.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CoreRuleRecord.init(backingData:)(a1);
  return v2;
}

uint64_t sub_25F660E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F6611B0(0xD000000000000022, 0x800000025F71B010, &qword_26B39D5E8, 0x263EFF8C0, &qword_26B39DE00);
  if (v4)
  {
    uint64_t v5 = (void *)sub_25F659548(v4);
    swift_bridgeObjectRelease();
    if (v5)
    {
      char v6 = sub_25F651AB0(a1, a2, v5);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v7 = sub_25F6611B0(0xD00000000000001ELL, 0x800000025F71B040, &qword_26B39D5E8, 0x263EFF8C0, &qword_26B39DE00);
  if (v7)
  {
    uint64_t v8 = (void *)sub_25F659548(v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
      char v9 = sub_25F651AB0(a1, a2, v8);
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v10 = sub_25F693F44(a1, a2);
  if (!v11) {
    goto LABEL_18;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  BOOL v14 = v10 == 0x6972772D64616572 && v11 == 0xEA00000000006574;
  if (v14
    || (sub_25F70F330() & 1) != 0
    || (v12 == 0x6E6F2D6574697277 ? (BOOL v15 = v13 == 0xEA0000000000796CLL) : (BOOL v15 = 0), v15))
  {
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  char v16 = sub_25F70F330();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_18:
    if (qword_26B39E328 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (qword_26B39E3E8)
    {
      uint64_t v17 = qword_26B39E3E0;
      unint64_t v18 = qword_26B39E3E8;
    }
    else
    {
      if (qword_26B39E430 != -1) {
        swift_once();
      }
      if (qword_26B3A3080)
      {
        uint64_t v17 = qword_26B3A3078;
        unint64_t v18 = qword_26B3A3080;
      }
      else
      {
        type metadata accessor for CFBundle(0);
        uint64_t v19 = sub_25F6A3C40();
        if (v20)
        {
          uint64_t v17 = v19;
          unint64_t v18 = v20;
        }
        else
        {
          uint64_t v17 = 0;
          unint64_t v18 = 0xE000000000000000;
        }
      }
      sub_25F70E570();
    }
    if (v17 != 0xD000000000000010 || v18 != 0x800000025F718D70)
    {
      char v21 = sub_25F70F330();
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return v21 & 1;
    }
    sub_25F70E570();
    goto LABEL_34;
  }
LABEL_35:
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_25F6611B0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  id v7 = objc_msgSend(self, sel_bundleRecordForCurrentProcess);
  if (!v7
    || (v8 = v7, id v9 = objc_msgSend(v7, sel_entitlements), v8, !v9))
  {
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_6:
    sub_25F67EFC0((uint64_t)&v14, &qword_26B39E0A8);
    return 0;
  }
  uint64_t v10 = (void *)sub_25F70E690();
  sub_25F67A8F8(0, a3);
  id v11 = objc_msgSend(v9, sel_objectForKey_ofClass_, v10, swift_getObjCClassFromMetadata());

  if (v11)
  {
    sub_25F70EDC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v13, 0, sizeof(v13));
  }
  sub_25F661324((uint64_t)v13, (uint64_t)&v14);
  if (!*((void *)&v15 + 1)) {
    goto LABEL_6;
  }
  sub_25F67ACD8(a5);
  if (swift_dynamicCast()) {
    return *(void *)&v13[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_25F661324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39E0A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F66138C()
{
  uint64_t v0 = self;
  sub_25F66147C(objc_msgSend(v0, sel_mainBundle));
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_10;
  }
  uint64_t v3 = sub_25F66147C(objc_msgSend(v0, sel_mainBundle));
  if (v4)
  {
    if (v3) {
      BOOL v5 = 0;
    }
    else {
      BOOL v5 = v4 == 0xE000000000000000;
    }
    if (v5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v6 = sub_25F70F330();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        goto LABEL_8;
      }
    }
LABEL_10:
    type metadata accessor for CFBundle(0);
    uint64_t result = sub_25F6A3C40();
    goto LABEL_11;
  }
LABEL_8:
  uint64_t result = sub_25F66147C(objc_msgSend(v0, sel_mainBundle));
LABEL_11:
  qword_26B3A3078 = result;
  qword_26B3A3080 = v8;
  return result;
}

uint64_t sub_25F66147C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_25F70E6C0();

  return v3;
}

uint64_t sub_25F6614EC()
{
  uint64_t v1 = v0[283];
  uint64_t v2 = v0[281];
  uint64_t v3 = v0[280];
  uint64_t v20 = v0[277];
  uint64_t v4 = v0[271];
  uint64_t v5 = v0[259];
  uint64_t v19 = v0[253];
  uint64_t v6 = v0[247];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[265], v3);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  v0[285] = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v3);
  uint64_t v9 = swift_task_alloc();
  v0[286] = v9;
  *(void *)(v9 + 16) = &unk_26A7B1C38;
  *(void *)(v9 + 24) = v8;
  swift_asyncLet_begin();
  uint64_t v10 = (void *)swift_allocObject();
  v0[287] = v10;
  v10[2] = v4;
  v10[3] = v6;
  v10[4] = v19;
  v10[5] = v5;
  uint64_t v11 = swift_task_alloc();
  v0[288] = v11;
  *(void *)(v11 + 16) = &unk_26A7B1C58;
  *(void *)(v11 + 24) = v10;
  swift_retain();
  swift_retain();
  sub_25F70E570();
  swift_asyncLet_begin();
  uint64_t v12 = (void *)swift_allocObject();
  v0[289] = v12;
  v12[2] = v20;
  v12[3] = v6;
  v12[4] = v4;
  uint64_t v13 = swift_task_alloc();
  v0[290] = v13;
  *(void *)(v13 + 16) = &unk_26A7B1C70;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25F682580(&qword_26B39DE60);
  swift_asyncLet_begin();
  if (qword_26B39DF60 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for logger();
  sub_25F67F3A4(v14, (uint64_t)qword_26B39DF90);
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  sub_25F682CB4();
  uint64_t v21 = v15;
  unint64_t v22 = v16;
  sub_25F70E790();
  sub_25F70E790();
  sub_25F70DE00();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F68C2F0(v21, v22);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA23E0](v0 + 2, v17, sub_25F693A44, v0 + 248);
}

uint64_t sub_25F661884()
{
  return sub_25F70E8B0();
}

uint64_t sub_25F6618D4()
{
  return sub_25F70E8D0();
}

unint64_t sub_25F661934()
{
  unint64_t result = qword_26B39CF58;
  if (!qword_26B39CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF58);
  }
  return result;
}

uint64_t static CoreParameterProtocol.valuesNotEqual(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_25F67A890(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_25F67EFC0((uint64_t)v9, &qword_26B39E0A8);
    sub_25F67E72C();
    goto LABEL_7;
  }
  sub_25F67ACD8(&qword_26B39D2B8);
  if ((sub_25F67CB5C() & 1) == 0)
  {
    sub_25F67D010();
LABEL_7:
    sub_25F67EFC0((uint64_t)&v11, &qword_26A7B1600);
    sub_25F67A890(a2, (uint64_t)v9);
    if (v10)
    {
      sub_25F67ACD8(&qword_26B39D2B8);
      if (sub_25F67CB5C())
      {
        if (v12)
        {
          sub_25F675D18(&v11, (uint64_t)v13);
          sub_25F67A2DC(v13, v14);
          char v4 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)() & 1;
          uint64_t v5 = a1;
          goto LABEL_11;
        }
      }
      else
      {
        sub_25F67D010();
      }
    }
    else
    {
      sub_25F67EFC0((uint64_t)v9, &qword_26B39E0A8);
      sub_25F67E72C();
    }
    sub_25F67EFC0((uint64_t)&v11, &qword_26A7B1600);
    uint64_t v7 = *(void *)(a1 + 24);
    sub_25F67A890(a2, (uint64_t)v13);
    char v6 = (v7 | v14) != 0;
    sub_25F67EFC0((uint64_t)v13, &qword_26B39E0A8);
    return v6 & 1;
  }
  if (!v12) {
    goto LABEL_7;
  }
  sub_25F675D18(&v11, (uint64_t)v13);
  sub_25F67A2DC(v13, v14);
  char v4 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)() & 1;
  uint64_t v5 = a2;
LABEL_11:
  char v6 = Equatable.isNotEqual(_:checkReverse:)(v5, v4);
  sub_25F67A28C((uint64_t)v13);
  return v6 & 1;
}

uint64_t Equatable.isNotEqual(_:checkReverse:)(uint64_t a1, char a2)
{
  sub_25F70ECF0();
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675C9C();
  sub_25F67A890(a1, v9);
  sub_25F67ACD8(&qword_26B39E0A8);
  if (sub_25F67D7EC())
  {
    uint64_t v10 = sub_25F67D218();
    v11(v10);
    sub_25F6764F8();
    sub_25F70E680();
    uint64_t v12 = sub_25F67E5D4();
    v13(v12);
    char v14 = v2 ^ 1;
  }
  else
  {
    char v14 = 1;
    uint64_t v15 = sub_25F67E1DC();
    v16(v15);
    if (a2)
    {
      sub_25F67A890(a1, (uint64_t)v20);
      if (v21)
      {
        sub_25F67ACD8(&qword_26B39D2B8);
        if (sub_25F6767B0())
        {
          if (*((void *)&v23 + 1))
          {
            sub_25F67E920();
            sub_25F676B3C();
            v17();
            uint64_t v18 = sub_25F67D504();
            char v14 = Equatable.isNotEqual(_:checkReverse:)(v18);
            sub_25F67EFC0((uint64_t)&v22, &qword_26B39E0A8);
            sub_25F67A28C((uint64_t)v25);
            return v14 & 1;
          }
        }
        else
        {
          uint64_t v24 = 0;
          long long v22 = 0u;
          long long v23 = 0u;
        }
      }
      else
      {
        sub_25F67EFC0((uint64_t)v20, &qword_26B39E0A8);
        long long v22 = 0u;
        long long v23 = 0u;
        uint64_t v24 = 0;
      }
      sub_25F67EFC0((uint64_t)&v22, &qword_26A7B1600);
    }
  }
  return v14 & 1;
}

uint64_t static CoreTip.tips.getter()
{
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  return swift_retain();
}

uint64_t sub_25F661D88()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *v0;
  sub_25F675A28();
  *char v4 = v3;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25F65EC88, v2, 0);
}

uint64_t sub_25F661E68()
{
  sub_25F6759E0();
  sub_25F67CA40();
  sub_25F679DE0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25F675A28();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_25F6765E0();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    sub_25F6759EC();
    return v10();
  }
}

uint64_t sub_25F661F60()
{
  return sub_25F662008(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)"@D\n\v", &qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
}

uint64_t sub_25F661FB4()
{
  return sub_25F662008(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_25F714E90, &qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_25F662008(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  return swift_release();
}

uint64_t CoreTip.ConstellationText.ContentType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25F70F160();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 4;
  if (v2 < 4) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_25F662128@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F662144(a1);
}

uint64_t sub_25F662144@<X0>(uint64_t *a1@<X8>)
{
  sub_25F67ACD8(&qword_26B39D7C0);
  sub_25F67CA24();
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v3, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D7D8);
  sub_25F67CA24();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_25F67ACD8(&qword_26B39D488);
  sub_25F67CA24();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20, v21);
  sub_25F675A6C();
  sub_25F681778(&qword_26B39D7D0, &qword_26B39D7D8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v9);
  sub_25F70DD00();
  a1[3] = sub_25F67ACD8(&qword_26B39D460);
  a1[4] = sub_25F6623F0();
  sub_25F677CCC(a1);
  sub_25F681778(&qword_26B39D480, &qword_26B39D488);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  sub_25F70DBE0();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v1, v17);
}

unint64_t sub_25F6623F0()
{
  unint64_t result = qword_26B39D458;
  if (!qword_26B39D458)
  {
    sub_25F682580(&qword_26B39D460);
    sub_25F696AB0();
    sub_25F696D84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D458);
  }
  return result;
}

uint64_t sub_25F66246C()
{
  uint64_t v17 = v0;
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  unint64_t v2 = (void *)v0[13];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_25F67A2DC(v2, v3);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 32);
  swift_retain();
  v5(v3, v4);
  sub_25F673D98();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = sub_25F70E3C0();
  int v7 = sub_25F67D9DC(v1, 1, v6);
  sub_25F675D8C(v1, &qword_26B39DF68);
  if (v7 == 1
    && (uint64_t v9 = v2[3],
        uint64_t v8 = v2[4],
        sub_25F67A2DC((void *)v0[13], v9),
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 72))(&v15, v9, v8),
        int v10 = v16,
        swift_bridgeObjectRelease(),
        v10 == 1))
  {
    sub_25F67D70C();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v0[16] = sub_25F70EA70();
    v0[17] = sub_25F70EA60();
    uint64_t v12 = sub_25F70EA30();
    return MEMORY[0x270FA2498](sub_25F669058, v12, v11);
  }
  else
  {
    sub_25F6769EC();
    if (swift_weakLoadStrong())
    {
      sub_25F66EC88(v0[12]);
      swift_release();
    }
    swift_task_dealloc();
    sub_25F676894();
    return v13();
  }
}

uint64_t DeviceProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25F67ACD8(&qword_26B39D3B0);
  uint64_t v6 = sub_25F672C08(v5);
  MEMORY[0x270FA5388](v6, v7);
  sub_25F674D94();
  uint64_t v35 = v8;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v10 = sub_25F672C08(v9);
  MEMORY[0x270FA5388](v10, v11);
  sub_25F674D94();
  uint64_t v33 = v12;
  uint64_t v36 = sub_25F67ACD8(&qword_26B39D0B0);
  sub_25F67CA24();
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v14, v15);
  sub_25F6764C4();
  uint64_t v16 = type metadata accessor for DeviceProfile();
  uint64_t v17 = (int *)(v16 - 8);
  MEMORY[0x270FA5388](v16, v18);
  sub_25F672A58();
  *(_WORD *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 2) = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  uint64_t v31 = v2 + v17[10];
  uint64_t v32 = sub_25F70DF30();
  sub_25F674004(v31, 1, 1, v32);
  uint64_t v19 = v17[11];
  *(void *)(v2 + v19) = sub_25F70E530();
  uint64_t v20 = v2 + v17[12];
  _s12DisplayEventVMa();
  uint64_t v21 = sub_25F67D96C();
  sub_25F674004(v21, v22, v23, v24);
  uint64_t v25 = v17[13];
  *(void *)(v2 + v25) = 0;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F694A84();
  sub_25F70F640();
  if (v37)
  {
    uint64_t v28 = (uint64_t)a1;
    uint64_t v29 = v2;
  }
  else
  {
    *(unsigned char *)uint64_t v2 = sub_25F70F1E0() & 1;
    sub_25F694770();
    sub_25F67D788();
    sub_25F70F1C0();
    *(unsigned char *)(v2 + 1) = 0;
    sub_25F694868();
    sub_25F67D788();
    sub_25F70F200();
    *(unsigned char *)(v2 + 2) = 0;
    *(void *)(v2 + 8) = sub_25F70F190();
    *(void *)(v2 + 16) = v27;
    LOBYTE(v38) = 4;
    sub_25F662D34(&qword_26B39D3C0, MEMORY[0x263F07490]);
    sub_25F70F1C0();
    sub_25F662CEC(v33, v31, &qword_26B39DBA8);
    sub_25F67ACD8(&qword_26B39D010);
    sub_25F662C6C(&qword_26B39D018, &qword_26B39D010, (void (*)(void))sub_25F6950DC);
    sub_25F70F200();
    swift_bridgeObjectRelease();
    *(void *)(v2 + v19) = v38;
    uint64_t v29 = v2;
    LOBYTE(v38) = 6;
    sub_25F662D34(&qword_26B39CF38, (void (*)(uint64_t))_s12DisplayEventVMa);
    sub_25F70F1C0();
    sub_25F662CEC(v35, v20, &qword_26B39D3B0);
    sub_25F67ACD8(&qword_26B39D020);
    sub_25F662C6C((unint64_t *)&qword_26B39D028, &qword_26B39D020, (void (*)(void))sub_25F67EB40);
    sub_25F70F1C0();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v3, v36);
    swift_bridgeObjectRelease();
    *(void *)(v2 + v25) = v38;
    sub_25F694524(v2, a2);
    uint64_t v28 = (uint64_t)a1;
  }
  sub_25F67A28C(v28);
  return sub_25F6954B0(v29, (void (*)(void))type metadata accessor for DeviceProfile);
}

uint64_t sub_25F662C6C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F662CEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67B2C0(a1, a2, a3);
  sub_25F674D1C();
  uint64_t v4 = sub_25F674E58();
  v5(v4);
  return v3;
}

uint64_t sub_25F662D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F662D7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D7C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D4A0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39D478);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39D498, &qword_26B39D4A0);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_25F70DD00();
  a3[3] = sub_25F67ACD8(&qword_26B39D450);
  a3[4] = sub_25F6630C0();
  sub_25F677CCC(a3);
  sub_25F681778(&qword_26B39D470, &qword_26B39D478);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  uint64_t v19 = v23;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

unint64_t sub_25F6630C0()
{
  unint64_t result = qword_26B39D448;
  if (!qword_26B39D448)
  {
    sub_25F682580(&qword_26B39D450);
    sub_25F696C78();
    sub_25F696D84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D448);
  }
  return result;
}

uint64_t sub_25F66313C()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25F663204()
{
  if (MiniTipsDatastore.hasConfigured.getter())
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for logger();
    sub_25F67F3A4(v1, (uint64_t)qword_26B39D818);
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    sub_25F682CB4();
    uint64_t v30 = v2;
    unint64_t v31 = v3;
    sub_25F6F95A8(&qword_26B39C230, MEMORY[0x263F06EA8]);
    sub_25F70F2C0();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F68C2F0(v30, v31);
    swift_bridgeObjectRelease();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_25F676894();
    goto LABEL_13;
  }
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D990();
  swift_beginAccess();
  sub_25F70E570();
  sub_25F70DDB0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_defaultManager);
  Swift::Bool v6 = URL.createDirectory(using:)((NSFileManager)v5);

  if (v6)
  {
    uint64_t v7 = sub_25F6636E8();
    sub_25F66DF40(*(void *)(v0 + 144), v7, *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 120));
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v15 = *(void *)(v0 + 96);
    swift_release();
    uint64_t v16 = sub_25F70E360();
    sub_25F674004(v14, 0, 1, v16);
    uint64_t v17 = v15 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelConfiguration;
    swift_beginAccess();
    sub_25F692CEC(v14, v17);
    swift_endAccess();
    sub_25F6636E8();
    sub_25F65FBCC(v17, *(void *)(v0 + 112), &qword_26B39DB88);
    uint64_t v18 = sub_25F67D990();
    unint64_t v20 = sub_25F65FC24(v18, v19);
    uint64_t v21 = *(void *)(v0 + 96);
    int v22 = *(unsigned __int8 *)(v0 + 152);
    sub_25F675D8C(*(void *)(v0 + 112), &qword_26B39DB88);
    swift_release();
    *(void *)(v21 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer) = v20;
    swift_release();
    if (v22 == 1)
    {
      uint64_t v23 = *(void **)(v0 + 96);
      uint64_t v25 = v23[6];
      uint64_t v24 = v23[7];
      _s16ContainerMonitorCMa();
      uint64_t v26 = swift_allocObject();
      sub_25F70E570();
      swift_defaultActor_initialize();
      *(void *)(v26 + 112) = v25;
      *(void *)(v26 + 120) = v24;
      v23[9] = v26;
      swift_release();
    }
    uint64_t v28 = *(void *)(v0 + 136);
    uint64_t v27 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 128);
    sub_25F65CC04();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    goto LABEL_7;
  }
  uint64_t v8 = sub_25F675078();
  v9(v8);
  sub_25F6931C0();
  swift_allocError();
  sub_25F682CB4();
  *uint64_t v10 = v11;
  v10[1] = v12;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F6759EC();
LABEL_13:
  return v4();
}

uint64_t sub_25F6636E8()
{
  uint64_t v0 = sub_25F70E490();
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_25F68264C();
  sub_25F70E4A0();
  sub_25F70E4F0();
  swift_allocObject();
  return sub_25F70E500();
}

uint64_t sub_25F6637A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreRule.Predicate.Argument.init(from:)(a1, a2);
}

uint64_t sub_25F6637B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for DeviceProfile();
  MEMORY[0x270FA5388](v3, v4);
  Swift::Bool v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v12);
  uint64_t v63 = (uint64_t)&v59 - v13;
  uint64_t v14 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v14 - 8, v15);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25F70DE50();
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  int v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v23);
  uint64_t v26 = (char *)&v59 - v25;
  if (qword_26B39E320 != -1)
  {
    uint64_t v58 = v24;
    swift_once();
    uint64_t v24 = v58;
  }
  if (byte_26B39E318 != 1) {
    return sub_25F674004(v64, 1, 1, v3);
  }
  uint64_t v62 = v24;
  sub_25F696794(a1, (uint64_t)v17, &qword_26B39E248);
  if (sub_25F67D9DC((uint64_t)v17, 1, v18) == 1)
  {
    sub_25F675D8C((uint64_t)v17, &qword_26B39E248);
    return sub_25F674004(v64, 1, 1, v3);
  }
  uint64_t v60 = (int *)v3;
  uint64_t v28 = v62;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v26, v17, v18);
  id v29 = objc_msgSend(self, sel_defaultManager);
  unsigned __int8 v30 = sub_25F665228();

  uint64_t v61 = v18;
  if (v30)
  {
    unint64_t v31 = *(uint64_t (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v59 = v26;
    uint64_t v32 = v31(v22, v26, v18);
    MEMORY[0x270FA5388](v32, v33);
    *(&v59 - 2) = 0;
    id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
    sub_25F65C2CC(0, (uint64_t)sub_25F6967DC, (uint64_t)(&v59 - 4), v67);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v18);
    uint64_t v43 = v67[0];
    unint64_t v44 = v67[1];
    sub_25F70DB70();
    swift_allocObject();
    sub_25F70DB60();
    sub_25F694588();
    sub_25F70DB50();
    swift_release();
    sub_25F67A838(v43, v44);
    uint64_t v49 = v59;
  }
  else
  {
    if (qword_26B39D1C8 != -1) {
      swift_once();
    }
    *(_WORD *)Swift::Bool v6 = 0;
    v6[2] = 0;
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = 0;
    uint64_t v35 = v60;
    uint64_t v36 = (uint64_t)&v6[v60[8]];
    uint64_t v37 = sub_25F70DF30();
    sub_25F674004(v36, 1, 1, v37);
    uint64_t v38 = v35[9];
    *(void *)&v6[v38] = sub_25F70E530();
    uint64_t v39 = (uint64_t)&v6[v35[10]];
    uint64_t v40 = _s12DisplayEventVMa();
    sub_25F674004(v39, 1, 1, v40);
    *(void *)&v6[v35[11]] = 0;
    uint64_t v49 = v26;
    if (byte_26B39E318 == 1)
    {
      sub_25F6F0C9C((uint64_t)v6, (uint64_t)v26, (uint64_t)v11);
      sub_25F6954B0((uint64_t)v6, (void (*)(void))type metadata accessor for DeviceProfile);
      uint64_t v41 = (uint64_t)v11;
      uint64_t v42 = 0;
    }
    else
    {
      sub_25F6954B0((uint64_t)v6, (void (*)(void))type metadata accessor for DeviceProfile);
      uint64_t v41 = (uint64_t)v11;
      uint64_t v42 = 1;
    }
    sub_25F674004(v41, v42, 1, (uint64_t)v35);
  }
  sub_25F664230((uint64_t)v11, v63, &qword_26B39D590);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v45 = qword_26B39E3E0;
    unint64_t v46 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v45 = qword_26B3A3078;
      unint64_t v46 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v47 = sub_25F6A3C40();
      if (v48)
      {
        uint64_t v45 = v47;
        unint64_t v46 = v48;
      }
      else
      {
        uint64_t v45 = 0;
        unint64_t v46 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v45 == 0x6C7070612E6D6F63 && v46 == 0xEF64737069742E65)
  {
LABEL_45:
    sub_25F70E570();
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  char v51 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
    if (qword_26B39E3E8)
    {
      uint64_t v52 = qword_26B39E3E0;
      unint64_t v53 = qword_26B39E3E8;
    }
    else
    {
      if (qword_26B39E430 != -1) {
        swift_once();
      }
      if (qword_26B3A3080)
      {
        uint64_t v52 = qword_26B3A3078;
        unint64_t v53 = qword_26B3A3080;
      }
      else
      {
        type metadata accessor for CFBundle(0);
        uint64_t v54 = sub_25F6A3C40();
        if (v55)
        {
          uint64_t v52 = v54;
          unint64_t v53 = v55;
        }
        else
        {
          uint64_t v52 = 0;
          unint64_t v53 = 0xE000000000000000;
        }
      }
      sub_25F70E570();
    }
    if (v52 != 0xD000000000000010 || v53 != 0x800000025F718D70)
    {
      char v56 = sub_25F70F330();
      sub_25F70E570();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0 && sub_25F67D9DC(v63, 1, (uint64_t)v60) != 1)
      {
        if (qword_26B39D830 != -1) {
          swift_once();
        }
        uint64_t v57 = type metadata accessor for logger();
        sub_25F67F3A4(v57, (uint64_t)qword_26B39D818);
        uint64_t v65 = 0;
        unint64_t v66 = 0xE000000000000000;
        sub_25F70EEC0();
        swift_bridgeObjectRelease();
        uint64_t v65 = 0xD000000000000028;
        unint64_t v66 = 0x800000025F71ACA0;
        sub_25F70DE00();
        sub_25F70E790();
        swift_bridgeObjectRelease();
        sub_25F68C2F0(v65, v66);
        swift_bridgeObjectRelease();
        if (qword_26B39D1C8 != -1) {
          swift_once();
        }
        sub_25F656608();
      }
      goto LABEL_46;
    }
    goto LABEL_45;
  }
LABEL_46:
  (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v61);
  return sub_25F664230(v63, v64, &qword_26B39D590);
}

uint64_t sub_25F664230(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67B2C0(a1, a2, a3);
  sub_25F674D1C();
  uint64_t v4 = sub_25F674E58();
  v5(v4);
  return v3;
}

uint64_t sub_25F664278@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return CoreRule.Predicate.Operator.init(from:)(a1, a2);
}

uint64_t sub_25F664290(void *a1)
{
  return CoreTip.ConstellationContent.Attributes.encode(to:)(a1);
}

uint64_t CoreTip.ConstellationContent.Attributes.encode(to:)(void *a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39CA88);
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66AECC();
  sub_25F70F660();
  sub_25F70F230();
  if (!v9)
  {
    sub_25F67D440();
    sub_25F67D440();
    sub_25F70F250();
    sub_25F70F250();
    sub_25F67D440();
    sub_25F67D440();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t sub_25F6644DC()
{
  return sub_25F6644F8();
}

uint64_t sub_25F6644F8()
{
  return swift_release();
}

uint64_t sub_25F664598()
{
  sub_25F70E570();
  sub_25F70E570();
  uint64_t v0 = sub_25F70E7A0();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    while (1)
    {
      uint64_t v4 = sub_25F70E7A0();
      if (!v5) {
        break;
      }
      if (v2 == v4 && v3 == v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v7 = sub_25F70F330();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_25F70E7A0();
      uint64_t v3 = v8;
      if (!v8) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_25F70E7A0();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 0;
    swift_bridgeObjectRelease();
  }
  return v11;
}

double sub_25F6646F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_25F664748(a1), (v6 & 1) != 0))
  {
    sub_25F67AD2C(*(void *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

unint64_t sub_25F664748(uint64_t a1)
{
  uint64_t v2 = sub_25F70EE30();
  return sub_25F66478C(a1, v2);
}

unint64_t sub_25F66478C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_25F664A80(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2611FB9C0](v9, a1);
      sub_25F664A2C((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_25F664854()
{
  uint64_t v1 = sub_25F70DA80();
  if (!v1)
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  strcpy((char *)(v0 + 88), "HistoryTokens");
  *(_WORD *)(v0 + 102) = -4864;
  sub_25F70EE70();
  sub_25F6646F8(v0 + 16, v2, (_OWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  sub_25F664A2C(v0 + 16);
  if (!*(void *)(v0 + 80))
  {
LABEL_7:
    char v7 = &qword_26B39E0A8;
    uint64_t v8 = v0 + 56;
    goto LABEL_8;
  }
  sub_25F67ACD8(&qword_26B39D8A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    **(void **)(v0 + 112) = 0;
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(v0 + 128);
  sub_25F664ADC(*(void *)(v0 + 104), v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_25F70E390();
  int v5 = sub_25F67D9DC(v3, 1, v4);
  uint64_t v6 = *(void *)(v0 + 128);
  if (v5 == 1)
  {
    char v7 = (uint64_t *)&unk_26B39D898;
    uint64_t v8 = *(void *)(v0 + 128);
LABEL_8:
    sub_25F67EFC0(v8, v7);
    goto LABEL_9;
  }
  BOOL v11 = *(uint64_t **)(v0 + 112);
  *BOOL v11 = sub_25F70E380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v6, v4);
LABEL_10:
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_25F664A2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F664A80(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F664ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_25F70E390();
  uint64_t v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  return sub_25F674004(a2, v7, 1, v6);
}

uint64_t sub_25F664B84()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25F672B5C();
  sub_25F70DDB0();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_defaultManager);
  sub_25F664F94();

  uint64_t v4 = *(void (**)(void))(v1 + 8);
  sub_25F676B70();
  v4();
  sub_25F70DDB0();
  id v5 = objc_msgSend(v2, sel_defaultManager);
  sub_25F664F94();

  sub_25F676B70();
  v4();
  sub_25F70DDC0();
  sub_25F70DDB0();
  sub_25F676B70();
  v4();
  id v6 = objc_msgSend(v2, sel_defaultManager);
  sub_25F664DB4();

  sub_25F676B70();
  v4();
  sub_25F70DDC0();
  sub_25F70DDB0();
  sub_25F676B70();
  v4();
  id v7 = objc_msgSend(v2, sel_defaultManager);
  sub_25F664DB4();

  sub_25F676B70();
  v4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F6759EC();
  return v8();
}

void sub_25F664DB4()
{
  uint64_t v1 = v0;
  v9[3] = *(id *)MEMORY[0x263EF8340];
  if (sub_25F665184())
  {
    uint64_t v2 = (void *)sub_25F70DDA0();
    v9[0] = 0;
    unsigned int v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v9);

    id v4 = v9[0];
    if (v3)
    {
      id v5 = v4;
    }
    else
    {
      id v6 = v9[0];
      id v7 = (void *)sub_25F70DD20();

      swift_willThrow();
      if (qword_26B39C298 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for logger();
      sub_25F67F3A4(v8, (uint64_t)qword_26B39C280);
      sub_25F67CE34();
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70DE00();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      swift_getErrorValue();
      sub_25F70F2F0();
      sub_25F68C2F0((uint64_t)v9[0], (unint64_t)v9[1]);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_25F664F94()
{
  uint64_t v1 = v0;
  v9[3] = *(id *)MEMORY[0x263EF8340];
  if (sub_25F665228())
  {
    uint64_t v2 = (void *)sub_25F70DDA0();
    v9[0] = 0;
    unsigned int v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v9);

    id v4 = v9[0];
    if (v3)
    {
      id v5 = v4;
    }
    else
    {
      id v6 = v9[0];
      id v7 = (void *)sub_25F70DD20();

      swift_willThrow();
      if (qword_26B39C298 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for logger();
      sub_25F67F3A4(v8, (uint64_t)qword_26B39C280);
      sub_25F67CE34();
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70DE00();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      swift_getErrorValue();
      sub_25F70F2F0();
      sub_25F70E790();
      sub_25F68C2F0((uint64_t)v9[0], (unint64_t)v9[1]);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_25F665184()
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  char v4 = 0;
  sub_25F70DE00();
  uint64_t v1 = (void *)sub_25F70E690();
  swift_bridgeObjectRelease();
  unsigned __int8 v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v4);

  return (v2 & v4);
}

id sub_25F665228()
{
  sub_25F70DE00();
  uint64_t v1 = (void *)sub_25F70E690();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t _s17ConstellationTextVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static CoreRuleProtocol.makeIdentifier(prefix:predicate:subject:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_25F70E570();
  sub_25F6768D4();
  uint64_t v5 = a4[3];
  uint64_t v6 = a4[4];
  sub_25F67A2DC(a4, v5);
  sub_25F6654A8(v5, v6);
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F6768D4();
  uint64_t v7 = a4[3];
  uint64_t v8 = a4[4];
  sub_25F67A2DC(a4, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F6768D4();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
}

uint64_t sub_25F6654A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void static CoreParameterProtocol.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static CoreEventProtocol.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25F6654F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_25F70DD60();
  sub_25F67CA24();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5, v6);
  sub_25F6759BC();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_25F70DE50();
  sub_25F67CA24();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13, v14);
  sub_25F6759BC();
  uint64_t v17 = v16 - v15;
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  if (byte_26B39E318 == 1)
  {
    id v18 = objc_msgSend(self, sel_defaultManager);
    URL.init(groupIdentifier:fileManager:)(v18, v17);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v9, *MEMORY[0x263F06E38], v2);
    sub_25F66580C();
    sub_25F70DE30();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v10);
    return sub_25F674004(a1, 0, 1, v10);
  }
  else
  {
    return sub_25F674004(a1, 1, 1, v10);
  }
}

unint64_t sub_25F66580C()
{
  unint64_t result = qword_26B39DB90;
  if (!qword_26B39DB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DB90);
  }
  return result;
}

void URL.init(groupIdentifier:fileManager:)(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_25F70DE50();
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6759BC();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v11 - 8, v12);
  sub_25F6759BC();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = (void *)sub_25F70E690();
  uint64_t v21 = a1;
  id v17 = objc_msgSend(a1, sel_containerURLForSecurityApplicationGroupIdentifier_, v16);

  if (v17)
  {
    sub_25F70DDF0();

    id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v18(v15, v10, v3);
    sub_25F674004(v15, 0, 1, v3);
    if (sub_25F67D9DC(v15, 1, v3) != 1)
    {

      swift_bridgeObjectRelease();
      v18(a2, v15, v3);
      return;
    }
  }
  else
  {
    sub_25F674004(v15, 1, 1, v3);
  }
  sub_25F650880(v15);
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F6931C0();
  swift_allocError();
  *uint64_t v19 = 0xD000000000000021;
  v19[1] = 0x800000025F71BF20;
  swift_willThrow();
}

uint64_t CoreDonationRecord.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CoreDonationRecord.init(backingData:)(a1);
  return v2;
}

uint64_t CoreDonationRecord.init(backingData:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_25F6762E8();
  uint64_t v6 = v5;
  uint64_t v7 = sub_25F70DF30();
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_25F672A58();
  *(void *)(v3 + 48) = sub_25F67ACD8(&qword_26B39CA30);
  *(void *)&long long v10 = v6;
  *((void *)&v10 + 1) = v6;
  uint64_t v11 = sub_25F67130C(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  uint64_t v12 = v11;
  *(void *)(v3 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v3 + 24));
  sub_25F70E230();
  sub_25F70DF20();
  sub_25F665D64(v2, v3 + 24);
  sub_25F665C74(v3 + 24, (unsigned char *)(v3 + 16));
  sub_25F665EC0(v3 + 24, (unsigned char *)(v3 + 17));
  sub_25F70DFE0();
  *(_WORD *)(v3 + 16) = 0;
  sub_25F67B010(a1, (uint64_t)&v10);
  sub_25F674D7C();
  sub_25F67A28C(v3 + 24);
  sub_25F675D18(&v10, v3 + 24);
  swift_endAccess();
  sub_25F67A28C(a1);
  return v3;
}

uint64_t sub_25F665C74@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  sub_25F67B010(a1, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  type metadata accessor for CoreEventRecord();
  sub_25F67130C(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_25F70E080();
  swift_release();
  swift_release();
  uint64_t result = sub_25F67A28C((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t sub_25F665D64(uint64_t a1, uint64_t a2)
{
  sub_25F67B010(a2, (uint64_t)v5);
  sub_25F67A2DC(v5, v5[3]);
  swift_getKeyPath();
  uint64_t v3 = sub_25F70DF30();
  sub_25F67130C(&qword_26B39DB00, MEMORY[0x263F07490]);
  sub_25F70E070();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return sub_25F67A28C((uint64_t)v5);
}

uint64_t CoreDonationRecord.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  sub_25F674D7C();
  sub_25F67A28C(v3);
  sub_25F675D18(a1, v3);
  return swift_endAccess();
}

uint64_t sub_25F665EC0@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  sub_25F67B010(a1, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39CA38);
  sub_25F70E050();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25F67A28C((uint64_t)v4);
  *a2 = 0;
  return result;
}

Swift::Void __swiftcall Configuration.setup(userDefaults:)(NSUserDefaults userDefaults)
{
  sub_25F67CF24();
  sub_25F6759B0();
  if (v3) {
    char v4 = *(unsigned char *)(v1 + 50);
  }
  else {
    char v4 = v2 & 1;
  }
  *(unsigned char *)(v1 + 50) = v4;
  uint64_t v5 = sub_25F67DF58();
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = sub_25F70E570();
  }
  swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v6;
  sub_25F67CF24();
  sub_25F6759B0();
  if (v3) {
    char v8 = *(unsigned char *)(v1 + 64);
  }
  else {
    char v8 = v7 & 1;
  }
  *(unsigned char *)(v1 + 64) = v8;
  uint64_t v9 = sub_25F67DF58();
  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = sub_25F70E570();
  }
  swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v10;
  sub_25F67CF24();
  sub_25F6759B0();
  if (v3) {
    char v12 = *(unsigned char *)(v1 + 80);
  }
  else {
    char v12 = v11 & 1;
  }
  *(unsigned char *)(v1 + 80) = v12;
  char v13 = sub_25F67CF24();
  if (v13 == 2) {
    char v14 = *(unsigned char *)(v1 + 81);
  }
  else {
    char v14 = v13;
  }
  *(unsigned char *)(v1 + 81) = v14 & 1;
  uint64_t v15 = sub_25F692940();
  if (v17)
  {
    uint64_t v15 = *(void *)(v1 + 88);
    uint64_t v16 = *(void *)(v1 + 96);
  }
  *(void *)(v1 + 88) = v15;
  *(void *)(v1 + 96) = v16;
  sub_25F67CF24();
  sub_25F6759B0();
  if (v3) {
    char v19 = *(unsigned char *)(v1 + 104);
  }
  else {
    char v19 = v18 & 1;
  }
  *(unsigned char *)(v1 + 104) = v19;
}

uint64_t sub_25F6660F4()
{
  if (!sub_25F666160()) {
    return 2;
  }
  uint64_t v1 = (void *)sub_25F70E690();
  id v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return (uint64_t)v2;
}

BOOL sub_25F666160()
{
  uint64_t v1 = (void *)sub_25F70E690();
  id v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_25F70EDC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_25F67A320((uint64_t)v4);
  return v2 != 0;
}

uint64_t sub_25F6661F0()
{
  uint64_t result = sub_25F666210();
  if (result) {
    return sub_25F690418(result);
  }
  return result;
}

uint64_t sub_25F666210()
{
  uint64_t v1 = (void *)sub_25F70E690();
  id v2 = objc_msgSend(v0, sel_arrayForKey_, v1);

  if (v2)
  {
    uint64_t v3 = sub_25F70E910();

    uint64_t v4 = sub_25F659548(v3);
    swift_bridgeObjectRelease();
    if (v4) {
      return v4;
    }
  }
  uint64_t v5 = (void *)sub_25F70E690();
  id v6 = objc_msgSend(v0, sel_stringForKey_, v5);

  if (!v6) {
    return 0;
  }
  sub_25F70E6C0();

  sub_25F66580C();
  uint64_t v7 = sub_25F70ED50();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_18:
    swift_bridgeObjectRelease();
    sub_25F6A4E9C(1, v11);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      uint64_t v26 = (uint64_t *)(v24 + 40);
      uint64_t v27 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v28 = *(v26 - 1);
        uint64_t v29 = *v26;
        BOOL v30 = v28 == 44 && v29 == 0xE100000000000000;
        if (!v30 && (sub_25F70F330() & 1) == 0)
        {
          sub_25F70E570();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_25F686110();
          }
          unint64_t v31 = *(void *)(v27 + 16);
          if (v31 >= *(void *)(v27 + 24) >> 1) {
            sub_25F686110();
          }
          *(void *)(v27 + 16) = v31 + 1;
          uint64_t v32 = v27 + 16 * v31;
          *(void *)(v32 + 32) = v28;
          *(void *)(v32 + 40) = v29;
        }
        v26 += 2;
        --v25;
      }
      while (v25);
    }
    else
    {
      uint64_t v27 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_25F70C374(v27);
    swift_release();
    return v4;
  }
  uint64_t result = sub_25F70E570();
  uint64_t v10 = (uint64_t *)(v7 + 40);
  uint64_t v11 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v12 = *(void *)(v11 + 16);
    if (__OFADD__(v12, 2)) {
      break;
    }
    uint64_t v14 = *(v10 - 1);
    uint64_t v13 = *v10;
    sub_25F70E570();
    if (!swift_isUniquelyReferenced_nonNull_native() || v12 + 2 > *(void *)(v11 + 24) >> 1)
    {
      sub_25F6666F8();
      uint64_t v11 = v15;
    }
    unint64_t v16 = *(void *)(v11 + 16);
    unint64_t v17 = *(void *)(v11 + 24) >> 1;
    unint64_t v18 = v16 + 1;
    sub_25F70E570();
    if (v17 <= v16)
    {
      sub_25F6666F8();
      uint64_t v11 = v21;
      unint64_t v17 = *(void *)(v21 + 24) >> 1;
    }
    *(void *)(v11 + 16) = v18;
    uint64_t v19 = v11 + 16 * v16;
    *(void *)(v19 + 32) = v14;
    *(void *)(v19 + 40) = v13;
    if ((uint64_t)v17 < (uint64_t)(v16 + 2))
    {
      sub_25F6666F8();
      uint64_t v11 = v22;
    }
    v10 += 2;
    *(void *)(v11 + 16) = v16 + 2;
    uint64_t v20 = v11 + 16 * v18;
    *(void *)(v20 + 32) = 44;
    *(void *)(v20 + 40) = 0xE100000000000000;
    uint64_t result = swift_bridgeObjectRelease();
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25F66658C()
{
  uint64_t v0 = self;
  uint64_t result = sub_25F6512A4(v0);
  if (result)
  {
    uint64_t v2 = *(void *)(result + 16);
    if (v2)
    {
      uint64_t v3 = MEMORY[0x263F8EE78];
      uint64_t v4 = result + 32;
      do
      {
        sub_25F67AD2C(v4, (uint64_t)v14);
        sub_25F67AD2C((uint64_t)v14, (uint64_t)&v11);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v12 = 0;
          uint64_t v13 = 0;
        }
        sub_25F67A28C((uint64_t)v14);
        uint64_t v5 = v13;
        if (v13)
        {
          uint64_t v6 = v12;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25F6666F8();
            uint64_t v3 = v9;
          }
          unint64_t v7 = *(void *)(v3 + 16);
          if (v7 >= *(void *)(v3 + 24) >> 1)
          {
            sub_25F6666F8();
            uint64_t v3 = v10;
          }
          *(void *)(v3 + 16) = v7 + 1;
          uint64_t v8 = v3 + 16 * v7;
          *(void *)(v8 + 32) = v6;
          *(void *)(v8 + 40) = v5;
        }
        v4 += 32;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25F6666F8()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26B39D868);
    uint64_t v5 = (const void *)swift_allocObject();
    sub_25F68C608(v5);
    sub_25F677E80(v6 / 16);
  }
  if (v0)
  {
    unint64_t v7 = (char *)sub_25F674D70();
    sub_25F6667A8(v7, v8, v9);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v10 = sub_25F676908();
    sub_25F650198(v10, v11, v12, v13);
  }
}

char *sub_25F6667A8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

BOOL CoreParameter.hasLoaded.getter()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v0 - 8, v1);
  char v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F666C54();
  uint64_t v4 = sub_25F70E3C0();
  BOOL v5 = sub_25F67D9DC((uint64_t)v3, 1, v4) != 1;
  sub_25F673A7C((uint64_t)v3);
  return v5;
}

uint64_t sub_25F6668A0()
{
  sub_25F666914();
  swift_task_dealloc();
  uint64_t v0 = sub_25F67D638();
  return v1(v0);
}

uint64_t sub_25F666914()
{
  swift_unownedRetainStrong();
  sub_25F666980((uint64_t)sub_25F666B54, v0, &v2);
  swift_release();
  return v2;
}

uint64_t sub_25F666980@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(v3 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    BOOL v5 = (void (*)(void))result;
    swift_retain();
    if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
    {
      uint64_t v6 = sub_25F70EA70();
      MEMORY[0x270FA5388](v6, v7);
      sub_25F679334();
      *(void *)(v8 - 16) = a2;
      sub_25F679F28();
      sub_25F6E3540(v9, v10);
      return swift_release();
    }
    else
    {
      sub_25F70E180();
      swift_retain();
      sub_25F70E570();
      sub_25F666AE0();
      v5();
      sub_25F70E120();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    *a3 = xmmword_25F713AD0;
  }
  return result;
}

uint64_t sub_25F666AE0()
{
  swift_retain();
  uint64_t v0 = sub_25F70E190();
  swift_retain();
  sub_25F70E0E0();
  sub_25F70E130();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_25F666B54@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F666B70(a1);
}

uint64_t sub_25F666B70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v2 - 8, v3);
  BOOL v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F666C54();
  sub_25F68049C();
  uint64_t v7 = v6;
  uint64_t result = sub_25F673A7C((uint64_t)v5);
  if (v7)
  {
    uint64_t v9 = CoreParameterRecord.valueData.getter();
    unint64_t v11 = v10;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xF000000000000000;
  }
  *a1 = v9;
  a1[1] = v11;
  return result;
}

uint64_t sub_25F666C54()
{
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_25F67A2DC(v0 + 2, v1);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 16);
  swift_retain();
  v4(v1, v3);
  sub_25F673D98();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t _s17ConstellationTextVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  sub_25F70E570();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    uint64_t v8 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v8;
    uint64_t v9 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v9;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_25F70E570();
  return a1;
}

id CoreRule.Predicate.__allocating_init(argument:operation:value:queries:subpredicates:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(a1, a2, a3, a4, a5);
}

uint64_t sub_25F666E94(uint64_t a1, uint64_t a2)
{
  CoreRuleRecord.predicate.getter();
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v6 = v5;
  sub_25F6682B8();
  uint64_t v7 = sub_25F70E240();
  if (!v7)
  {

    goto LABEL_10;
  }
  uint64_t v8 = v7;
  if (!a2
    || (uint64_t v9 = (uint64_t *)&v6[OBJC_IVAR___Predicate_argument],
        unsigned int v10 = v6[OBJC_IVAR___Predicate_argument + 16],
        v10 >= 2))
  {

    swift_release();
LABEL_10:
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    CoreRuleRecord.id.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v13 = 0xD000000000000026;
    v13[1] = 0x800000025F719CA0;
    return swift_willThrow();
  }
  uint64_t v11 = *v9;
  uint64_t v12 = v9[1];
  type metadata accessor for CoreDonationRecord();
  uint64_t v20 = v12;
  sub_25F667180(v11, v12, v10);
  sub_25F667B28(a1, a2, (uint64_t)v6, v8, &v19);
  if (v2)
  {
    sub_25F67F01C(v11, v20, v10);
  }
  else
  {
    sub_25F67ACD8(&qword_26B39CDD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25F710D20;
    uint64_t v15 = v20;
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 40) = v15;
    sub_25F67AD2C((uint64_t)&v19, inited + 48);
    sub_25F70E530();
    char v17 = sub_25F667198();
    swift_bridgeObjectRelease();
    if (v17) {
      uint64_t v18 = 2;
    }
    else {
      uint64_t v18 = 1;
    }
    sub_25F689F80(v18);
    sub_25F67A28C((uint64_t)&v19);
  }

  return swift_release();
}

uint64_t _s8ArgumentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25F667180(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_25F667180(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return sub_25F70E570();
  }
  return result;
}

uint64_t sub_25F667198()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR___Predicate_argument];
  unsigned int v2 = v0[OBJC_IVAR___Predicate_argument + 16];
  if (v2 > 1)
  {
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v6 = 0xD00000000000002DLL;
    v6[1] = 0x800000025F719940;
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = *v1;
    uint64_t v3 = v1[1];
    *(void *)&v13[0] = 36;
    *((void *)&v13[0] + 1) = 0xE100000000000000;
    sub_25F667180(v4, v3, v2);
    sub_25F70E790();
    sub_25F67F01C(v4, v3, v2);
    sub_25F70E790();
    LOBYTE(v12[0]) = v0[OBJC_IVAR___Predicate_operation];
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F67ACD8(&qword_26B39D660);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_25F710D20;
    sub_25F66796C((uint64_t)&v0[OBJC_IVAR___Predicate_value], (uint64_t)v12, &qword_26B39D810);
    if (v12[3])
    {
      sub_25F67AD2C((uint64_t)v12, (uint64_t)v13);
      sub_25F6674D8((uint64_t)v12);
      sub_25F67AD1C(v13, (_OWORD *)(v5 + 32));
    }
    else
    {
      sub_25F67EFC0((uint64_t)v12, &qword_26B39D810);
      id v7 = objc_allocWithZone(MEMORY[0x263EFF9D0]);
      id v8 = objc_msgSend(v7, sel_init, v12[0]);
      *(void *)(v5 + 56) = sub_25F67A8F8(0, &qword_26B39D370);
      *(void *)(v5 + 32) = v8;
    }
    sub_25F67A8F8(0, &qword_26B39D3D0);
    uint64_t v0 = sub_25F66743C(36, 0xE100000000000000, v5);
    uint64_t v9 = (void *)sub_25F70E520();
    id v10 = objc_msgSend(v0, sel_predicateWithSubstitutionVariables_, v9);

    LOBYTE(v0) = objc_msgSend(v10, sel_evaluateWithObject_, 0);
  }
  return v0 & 1;
}

id sub_25F66743C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)sub_25F70E690();
  swift_bridgeObjectRelease();
  if (a3)
  {
    uint64_t v5 = (void *)sub_25F70E900();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_predicateWithFormat_argumentArray_, v4, v5);

  return v6;
}

uint64_t sub_25F6674D8(uint64_t a1)
{
  return a1;
}

id CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = a1[1];
  int v14 = *((unsigned __int8 *)a1 + 16);
  char v15 = *a2;
  BOOL v30 = (objc_class *)ObjectType;
  uint64_t v32 = *a1;
  if (*((unsigned char *)a1 + 16))
  {
    if (v14 != 1)
    {
      uint64_t v21 = v6;
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      goto LABEL_7;
    }
    uint64_t v16 = 0x286C617665;
    unint64_t v17 = 0xE500000000000000;
  }
  else
  {
    uint64_t v16 = 0x28746E756F63;
    unint64_t v17 = 0xE600000000000000;
  }
  *(void *)&v35[0] = v16;
  *((void *)&v35[0] + 1) = v17;
  uint64_t v18 = v6;
  sub_25F70E790();
  sub_25F67D680();
  unint64_t v20 = *((void *)&v35[0] + 1);
  uint64_t v19 = *(void *)&v35[0];
LABEL_7:
  v33[0] = v19;
  v33[1] = v20;
  sub_25F70E790();
  LOBYTE(v35[0]) = v15;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F66796C(a3, (uint64_t)v35, &qword_26B39E0A8);
  sub_25F67ACD8(&qword_26B39E0A8);
  sub_25F70E6E0();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  char v31 = v15;
  uint64_t v22 = v13;
  if (a4 && *(void *)(a4 + 16))
  {
    *(void *)&v35[0] = 0x736569726575712ELL;
    *((void *)&v35[0] + 1) = 0xE900000000000028;
    sub_25F6CDAB0(a4);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F67D680();
  }
  sub_25F6679D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a5 && *(void *)(a5 + 16))
  {
    *(void *)&v35[0] = 0;
    *((void *)&v35[0] + 1) = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    *(void *)&v35[0] = 0x646572706275732ELL;
    *((void *)&v35[0] + 1) = 0xEF28736574616369;
    sub_25F6CFE08(a5);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F67D680();
  }
  uint64_t v23 = sub_25F6679D0();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)&v6[OBJC_IVAR___Predicate_id];
  *uint64_t v26 = v23;
  v26[1] = v25;
  uint64_t v27 = &v6[OBJC_IVAR___Predicate_argument];
  *(void *)uint64_t v27 = v32;
  *((void *)v27 + 1) = v22;
  v27[16] = v14;
  *(_OWORD *)&v6[OBJC_IVAR___Predicate_rawdata] = xmmword_25F713AD0;
  v6[OBJC_IVAR___Predicate_operation] = v31;
  if (*(void *)(a3 + 24))
  {
    sub_25F66796C(a3, (uint64_t)v33, &qword_26B39E0A8);
    sub_25F667A50((uint64_t)v33, v35);
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_25F67EAD8((uint64_t)v35, (uint64_t)&v6[OBJC_IVAR___Predicate_value]);
  *(void *)&v6[OBJC_IVAR___Predicate_queries] = a4;
  *(void *)&v6[OBJC_IVAR___Predicate_subpredicates] = a5;

  v34.receiver = v6;
  v34.super_class = v30;
  id v28 = objc_msgSendSuper2(&v34, sel_init);
  sub_25F67EFC0(a3, &qword_26B39E0A8);
  return v28;
}

uint64_t sub_25F667874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Predicate.Operator.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CoreRule.Predicate.Operator.rawValue.getter()
{
  uint64_t result = 15677;
  switch(*v0)
  {
    case 1:
      uint64_t result = 15649;
      break;
    case 2:
      uint64_t result = 60;
      break;
    case 3:
      uint64_t result = 15676;
      break;
    case 4:
      uint64_t result = 62;
      break;
    case 5:
      uint64_t result = 15678;
      break;
    case 6:
      uint64_t result = 28265;
      break;
    case 7:
      uint64_t result = 6581857;
      break;
    case 8:
      uint64_t result = 29295;
      break;
    case 9:
      uint64_t result = 7889261;
      break;
    case 0xA:
      uint64_t result = 7235949;
      break;
    case 0xB:
      uint64_t result = 0x7461636964657270;
      break;
    case 0xC:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F66796C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_25F67ACD8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25F6679D0()
{
  sub_25F70E570();
  uint64_t v1 = sub_25F70E800();
  sub_25F70E780();
  return v1;
}

_OWORD *sub_25F667A50@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_25F66796C(a1, (uint64_t)&v9, &qword_26B39E0A8);
  if (v10)
  {
    sub_25F67AD1C(&v9, &v7);
    v6[3] = MEMORY[0x263F8EE58] + 8;
    v6[0] = swift_allocObject();
    sub_25F67AD1C(&v7, (_OWORD *)(v6[0] + 16));
    sub_25F67EFC0(a1, &qword_26B39E0A8);
    uint64_t v4 = (long long *)v6;
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8D310];
    *(void *)&long long v7 = 0x3E6C6C756E3CLL;
    *((void *)&v7 + 1) = 0xE600000000000000;
    sub_25F67EFC0(a1, &qword_26B39E0A8);
    uint64_t v4 = &v7;
  }
  return sub_25F67AD1C(v4, a2);
}

uint64_t sub_25F667B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  if (*(unsigned char *)(a3 + OBJC_IVAR___Predicate_argument + 16))
  {
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70F070();
    sub_25F70E790();
    sub_25F6931C0();
    swift_allocError();
    *long long v7 = 0;
    v7[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_25F667C58(a1, a2, a3, a4);
    if (!v5)
    {
      a5[3] = MEMORY[0x263F8D6C8];
      *a5 = result;
    }
  }
  return result;
}

uint64_t sub_25F667C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v26[0] = a4;
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DBC8);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_25F67ACD8(&qword_26B39CF20);
  uint64_t v11 = *(void *)(v27 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v27, v12);
  char v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v16);
  uint64_t v18 = (char *)v26 - v17;
  uint64_t v19 = *(void *)(a3 + OBJC_IVAR___Predicate_queries);
  if (v19 && *(void *)(v19 + 16))
  {
    sub_25F668204(a1, a2);
    uint64_t v20 = v27;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v10, v18, v27);
    sub_25F674004((uint64_t)v10, 0, 1, v20);
    uint64_t v21 = v26[1];
    sub_25F6E829C();
    unint64_t v23 = v22;
    sub_25F675D8C((uint64_t)v10, &qword_26B39DBC8);
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v20);
    }
    else
    {
      unint64_t v25 = sub_25F6C1D6C(v19, v23);
      swift_bridgeObjectRelease();
      if (v25 >> 62)
      {
        sub_25F70E570();
        uint64_t v19 = sub_25F70F100();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v20);
    }
  }
  else
  {
    sub_25F668204(a1, a2);
    uint64_t v19 = sub_25F667F40(v26[0], 0, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v27);
  }
  return v19;
}

uint64_t sub_25F667F40(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = sub_25F67ACD8(&qword_26B39DBC8);
  MEMORY[0x270FA5388](v5 - 8, v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CFF8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12, v15);
  uint64_t v17 = (char *)v23 - v16;
  uint64_t v18 = sub_25F67ACD8(&qword_26B39CF20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v8, a3, v18);
  sub_25F674004((uint64_t)v8, 0, 1, v18);
  uint64_t v19 = type metadata accessor for CoreDonationRecord();
  unint64_t v20 = sub_25F6681C0((uint64_t)&unk_26B39DC70);
  sub_25F70E200();
  v23[2] = v19;
  v23[3] = v20;
  swift_getKeyPath();
  char v24 = a2;
  swift_setAtWritableKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v14, v9);
  swift_release();
  uint64_t v21 = sub_25F70E0A0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  return v21;
}

unint64_t sub_25F6681C0(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F668204(uint64_t a1, uint64_t a2)
{
  return sub_25F70DFA0();
}

unint64_t sub_25F6682B8()
{
  unint64_t result = qword_26B39DBF0;
  if (!qword_26B39DBF0)
  {
    type metadata accessor for CoreRuleRecord();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DBF0);
  }
  return result;
}

uint64_t sub_25F668308(void *a1)
{
  return sub_25F668320(a1);
}

uint64_t sub_25F668320(void *a1)
{
  uint64_t v34 = sub_25F70DE50();
  uint64_t v32 = *(void *)(v34 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v34, v3);
  char v31 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = sub_25F70DF30();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9, v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v14);
  uint64_t v16 = (char *)&v31 - v15;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F70F650();
  sub_25F67AD2C(v1, (uint64_t)v38);
  sub_25F67A8F8(0, &qword_26B39D370);
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast()) {
      goto LABEL_4;
    }
    sub_25F67ACD8(&qword_26B39D368);
    if (swift_dynamicCast())
    {
      sub_25F675D18(&v37, (uint64_t)v35);
      sub_25F67A2DC(v35, v35[3]);
      sub_25F70E620();
      sub_25F67A28C((uint64_t)v35);
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F3E0();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F410();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F440();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F450();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F460();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F470();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F420();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F480();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F490();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F4A0();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F4B0();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F400();
    }
    else if (swift_dynamicCast())
    {
      sub_25F68D918((uint64_t)v39, v40);
      sub_25F70F3F0();
    }
    else
    {
      if (swift_dynamicCast())
      {
        sub_25F68D918((uint64_t)v39, v40);
        sub_25F70F3D0();
      }
      else
      {
        if (swift_dynamicCast())
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v13, v16, v9);
          sub_25F68D918((uint64_t)v39, v40);
          sub_25F66BDE0(&qword_26B39DB00, MEMORY[0x263F07490]);
          sub_25F70F430();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v9);
          goto LABEL_33;
        }
        if (swift_dynamicCast())
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v8, v34);
          sub_25F68D918((uint64_t)v39, v40);
          sub_25F66BDE0(&qword_26B39D310, MEMORY[0x263F06EA8]);
          sub_25F70F430();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v34);
          goto LABEL_33;
        }
        sub_25F67A8F8(0, (unint64_t *)&qword_26B39CDA8);
        if (swift_dynamicCast())
        {
          uint64_t v18 = (void *)v37;
          sub_25F698B54((void *)v37, v39);

          goto LABEL_33;
        }
        sub_25F67ACD8(&qword_26A7B11C0);
        if (swift_dynamicCast())
        {
          sub_25F69917C(v37);
          uint64_t v20 = sub_25F6990CC(v19, &qword_26A7B1200, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25F69C2D8);
          swift_bridgeObjectRelease();
          v35[0] = v20;
          sub_25F68D918((uint64_t)v39, v40);
          sub_25F67ACD8(&qword_26A7B11F0);
          sub_25F69CE44();
        }
        else
        {
          sub_25F67ACD8(&qword_26A7B11C8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v28 = sub_25F70EF40();
            swift_allocError();
            uint64_t v30 = v29;
            sub_25F67ACD8(&qword_26A7B11D0);
            sub_25F67AD2C(v1, v30);
            sub_25F67A2DC(v39, v40);
            sub_25F70F3C0();
            sub_25F70EF10();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCE0], v28);
            swift_willThrow();
            goto LABEL_33;
          }
          uint64_t v34 = v35[0];
          uint64_t v21 = *(void *)(v35[0] + 16);
          if (v21)
          {
            uint64_t v36 = MEMORY[0x263F8EE78];
            sub_25F6D27BC();
            uint64_t v22 = v36;
            uint64_t v23 = v34 + 32;
            do
            {
              uint64_t v24 = sub_25F67ACD8(&qword_26B39E0A8);
              uint64_t v25 = swift_allocObject();
              sub_25F675D30(v23, v25 + 16, &qword_26B39E0A8);
              uint64_t v36 = v22;
              unint64_t v26 = *(void *)(v22 + 16);
              if (v26 >= *(void *)(v22 + 24) >> 1)
              {
                sub_25F6D27BC();
                uint64_t v22 = v36;
              }
              *(void *)(v22 + 16) = v26 + 1;
              uint64_t v27 = v22 + 32 * v26;
              *(void *)(v27 + 32) = v25;
              *(_OWORD *)(v27 + 40) = v37;
              *(void *)(v27 + 56) = v24;
              v23 += 32;
              --v21;
            }
            while (v21);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v22 = MEMORY[0x263F8EE78];
          }
          *(void *)&long long v37 = v22;
          sub_25F68D918((uint64_t)v39, v40);
          sub_25F67ACD8(&qword_26A7B11D8);
          sub_25F69D8C4(&qword_26A7B11E0, &qword_26A7B11D8, (void (*)(void))sub_25F69CDF8);
        }
        sub_25F70F430();
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_25F67A28C((uint64_t)v38);
    return sub_25F67A28C((uint64_t)v39);
  }

LABEL_4:
  sub_25F67A28C((uint64_t)v38);
  sub_25F68D918((uint64_t)v39, v40);
  sub_25F70F4C0();
  return sub_25F67A28C((uint64_t)v39);
}

id sub_25F668FE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = CoreRule.Predicate.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id CoreRule.Predicate.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CoreRule.Predicate.init(from:)(a1);
}

uint64_t sub_25F669058()
{
  swift_release();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_25F67D70C();
  if (swift_weakLoadStrong())
  {
    sub_25F669178();
    swift_release();
  }
  swift_release();
  swift_weakDestroy();
  return MEMORY[0x270FA2498](sub_25F66E878, 0, 0);
}

uint64_t sub_25F669178()
{
  return swift_release();
}

uint64_t sub_25F6691E8()
{
  return sub_25F70DFC0();
}

uint64_t sub_25F6692A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int16 *))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    CoreTip.status.getter(&v5);
    swift_release();
    return a3(&v5);
  }
  return result;
}

uint64_t CoreTip.onStatusChange(_:)(uint64_t (*a1)(__int16 *), uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  __int16 v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_25F70DFB0();
  swift_release();
  swift_release();
  CoreTip.status.getter(&v8);
  __int16 v7 = v8;
  return a1(&v7);
}

uint64_t sub_25F669428()
{
  return CoreTip.status.getter(&v1);
}

uint64_t CoreTip.status.getter@<X0>(_WORD *a1@<X8>)
{
  swift_getKeyPath();
  sub_25F669500(&qword_26B39DB38, (void (*)(uint64_t))type metadata accessor for CoreTip);
  sub_25F70DFD0();
  uint64_t result = swift_release();
  *a1 = *(_WORD *)(v1 + 88);
  return result;
}

uint64_t sub_25F669500(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F669548()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v6 = v0[6];
  __int16 v5 = (void *)v0[7];
  uint64_t v7 = v5[3];
  uint64_t v8 = v5[4];
  uint64_t v9 = sub_25F67A2DC(v5, v7);
  type metadata accessor for CoreParameterRecord();
  sub_25F669760((uint64_t)v9, v4, v6, v3, v7, v1, v2, v8);
  sub_25F6759EC();
  return v10();
}

uint64_t sub_25F669760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v28 = a2;
  uint64_t v36 = a1;
  uint64_t v10 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F70E3C0();
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = *(void *)(a8 + 16);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 16);
  swift_retain();
  unint64_t v26 = v19;
  v19(a5, v18);
  uint64_t v33 = a5;
  sub_25F673D98();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_25F67D9DC((uint64_t)v13, 1, v14) == 1)
  {
    sub_25F673A7C((uint64_t)v13);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    v26(v33, v18);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v20 = v34;
    unint64_t v21 = v35;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v22 = v20;
    v22[1] = v21;
    return swift_willThrow();
  }
  else
  {
    uint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v17, v13, v14);
    sub_25F669A6C((uint64_t)v17, v36, v28, v29, v30, v33, v31, v32, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v14);
  }
}

uint64_t sub_25F669A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v36 = a5;
  uint64_t v37 = a8;
  uint64_t v13 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v13 - 8, v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_25F70E3C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a1, v17);
  sub_25F674004((uint64_t)v16, 0, 1, v17);
  uint64_t v32 = a4;
  sub_25F680724();
  uint64_t v19 = v18;
  sub_25F673A7C((uint64_t)v16);
  if (v19)
  {
    uint64_t v33 = a9;
    uint64_t v34 = a2;
    uint64_t v35 = a6;
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for logger();
    sub_25F67F3A4(v20, (uint64_t)qword_26B39D818);
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    (*(void (**)(uint64_t))(*(void *)(v33 + 16) + 16))(v35);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F70F2F0();
    sub_25F68C2F0(v38, v39);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v22 = v40;
    uint64_t v23 = sub_25F67BE7C();
    if (v22)
    {
      swift_release();
    }
    else
    {
      uint64_t v29 = v23;
      unint64_t v30 = v24;
      sub_25F686544(KeyPath, v23, v24);
      swift_release();
      swift_release();
      sub_25F67A838(v29, v30);
      unint64_t v31 = sub_25F669E50();
      type metadata accessor for CoreRuleRecord();
      sub_25F66A7BC(v31, v34, v35, v33);
      swift_bridgeObjectRelease();
      if (sub_25F70E0B0()) {
        sub_25F70E100();
      }
    }
    return swift_release();
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    uint64_t v38 = 0xD00000000000002FLL;
    unint64_t v39 = 0x800000025F719860;
    (*(void (**)(uint64_t))(*(void *)(a9 + 16) + 16))(a6);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v25 = v38;
    unint64_t v26 = v39;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v27 = v25;
    v27[1] = v26;
    return swift_willThrow();
  }
}

uint64_t sub_25F669E50()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39DBB8);
  MEMORY[0x270FA5388](v1 - 8, v2);
  sub_25F672A58();
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v3 = qword_26B39E3E0;
    unint64_t v4 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v3 = qword_26B3A3078;
      unint64_t v4 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v5 = sub_25F6A3C40();
      if (v6)
      {
        uint64_t v3 = v5;
        unint64_t v4 = v6;
      }
      else
      {
        uint64_t v3 = 0;
        unint64_t v4 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v3 == 0xD000000000000010 && v4 == 0x800000025F718D70) {
    goto LABEL_39;
  }
  sub_25F67D62C();
  char v7 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_40;
  }
  if (qword_26B39E3E8)
  {
    uint64_t v8 = qword_26B39E3E0;
    unint64_t v9 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v8 = qword_26B3A3078;
      unint64_t v9 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v10 = sub_25F6A3C40();
      if (v11)
      {
        uint64_t v8 = v10;
        unint64_t v9 = v11;
      }
      else
      {
        uint64_t v8 = 0;
        unint64_t v9 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v8 == 0x6C7070612E6D6F63 && v9 == 0xEF64737069742E65)
  {
LABEL_39:
    sub_25F70E570();
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t v23 = CoreParameterRecord.rules.getter();
    if (v23) {
      return v23;
    }
    else {
      return MEMORY[0x263F8EE78];
    }
  }
  sub_25F67D62C();
  char v13 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0 || (sub_25F66A5C4() & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v14 = CoreParameterRecord.id.getter();
  unint64_t v16 = v15;
  if (qword_26B39D6C0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_25F66A704();
  uint64_t v19 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v19 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v19 && *(void *)(v17 + 16))
  {
    MEMORY[0x270FA5388](v17, v18);
    type metadata accessor for CoreRuleRecord();
    sub_25F70DFA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_25F67ACD8(&qword_26B39D4B0);
    sub_25F674004(v0, 0, 1, v20);
    sub_25F66A2B4();
    uint64_t v22 = v21;
    sub_25F66A8E8(v0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v22;
}

void sub_25F66A2B4()
{
  sub_25F672A18();
  sub_25F67D178(v0, v1, v2, v3, v4, v5, v6, v7);
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DBB8);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F678458();
  uint64_t v11 = sub_25F67ACD8(&qword_26B39D5A0);
  uint64_t v12 = sub_25F67CD4C(v11);
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v12, v15);
  sub_25F676344();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F675EF0();
  MEMORY[0x270FA5388](v18, v19);
  sub_25F674E44();
  MEMORY[0x270FA5388](v20, v21);
  sub_25F67D4AC();
  MEMORY[0x270FA5388](v22, v23);
  sub_25F67D4AC();
  MEMORY[0x270FA5388](v24, v25);
  sub_25F67D4AC();
  uint64_t v28 = MEMORY[0x270FA5388](v26, v27);
  sub_25F67D74C(v28, v29, v30, v31, v32, v33, v34, v35, v39);
  type metadata accessor for CoreRuleRecord();
  sub_25F6827E8((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F677F8C();
  swift_getKeyPath();
  sub_25F676A94();
  uint64_t v36 = *(void (**)(void))(v14 + 32);
  sub_25F675C74();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F67E8E4();
  sub_25F675C74();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F67674C();
  sub_25F67E174();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F67D950();
  sub_25F6784E4();
  sub_25F67E174();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F679348();
  sub_25F6785D8();
  sub_25F67E174();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F682D9C();
  sub_25F682C88();
  sub_25F67E174();
  v36();
  swift_release();
  sub_25F679660();
  uint64_t v37 = sub_25F67E520();
  v38(v37);
  sub_25F672A70();
  sub_25F675E04();
}

uint64_t sub_25F66A5C4()
{
  if (qword_26B39E130 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)(qword_26B39E138 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer);
  swift_retain();
  sub_25F70E170();
  if (v0)
  {
    sub_25F70E1D0();
    sub_25F66A6B4();
    swift_retain();
    char v1 = sub_25F70E680();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    char v1 = 0;
  }
  return v1 & 1;
}

unint64_t sub_25F66A6B4()
{
  unint64_t result = qword_26B39CE88;
  if (!qword_26B39CE88)
  {
    sub_25F70E1D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CE88);
  }
  return result;
}

uint64_t sub_25F66A704()
{
  os_unfair_lock_lock(v0);
  sub_25F66A75C(&v2);
  os_unfair_lock_unlock(v0);
  return v2;
}

uint64_t sub_25F66A75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F66A794();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_25F66A794()
{
  return sub_25F70E570();
}

uint64_t CoreParameterRecord.id.getter()
{
  return sub_25F6851F0();
}

uint64_t sub_25F66A7BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v8; uint64_t v8 = sub_25F70F100())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x2611FBA70](i - 4, a1);
      }
      else
      {
        uint64_t v10 = *(void *)(a1 + 8 * i);
        swift_retain();
      }
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v14 = v10;
      sub_25F6D4D2C((uint64_t)&v14, a2, a3, a4);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      if (v11 == v8) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    sub_25F70E570();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F66A8E8(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DBB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F66A948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F66A970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F66A970(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x697461756C617665 && a2 == 0xEA00000000006E6FLL;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701736302 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_25F70F330();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25F66AAB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreTip.ConstellationContent.Attributes.init(from:)(a1, a2);
}

uint64_t CoreTip.ConstellationContent.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_25F67ACD8(&qword_26B39CB30);
  sub_25F67CA24();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66AECC();
  sub_25F70F640();
  if (v2) {
    return sub_25F67A28C((uint64_t)a1);
  }
  char v50 = 0;
  uint64_t v13 = sub_25F67E0D0();
  uint64_t v15 = v14;
  char v49 = 1;
  sub_25F70E570();
  uint64_t v40 = sub_25F67E0D0();
  uint64_t v41 = v13;
  char v48 = 2;
  uint64_t v17 = v16;
  sub_25F70E570();
  uint64_t v18 = sub_25F67E0D0();
  uint64_t v43 = v17;
  uint64_t v39 = v18;
  char v47 = 3;
  uint64_t v20 = v19;
  sub_25F70E570();
  uint64_t v21 = sub_25F70F1B0();
  uint64_t v42 = v20;
  int v37 = v22;
  uint64_t v38 = v21;
  char v46 = 4;
  uint64_t v23 = sub_25F70F1B0();
  int v36 = v24;
  char v45 = 5;
  uint64_t v34 = sub_25F67E0D0();
  uint64_t v35 = v23;
  char v44 = 6;
  uint64_t v26 = v25;
  sub_25F70E570();
  uint64_t v27 = sub_25F67E0D0();
  uint64_t v29 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v33 = v27;
  v30(v11, v5);
  sub_25F70E570();
  uint64_t v31 = v42;
  *(void *)a2 = v41;
  *(void *)(a2 + 8) = v15;
  uint64_t v32 = v43;
  *(void *)(a2 + 16) = v40;
  *(void *)(a2 + 24) = v32;
  *(void *)(a2 + 32) = v39;
  *(void *)(a2 + 40) = v31;
  *(void *)(a2 + 48) = v38;
  *(unsigned char *)(a2 + 56) = v37 & 1;
  *(void *)(a2 + 64) = v35;
  *(unsigned char *)(a2 + 72) = v36 & 1;
  *(void *)(a2 + 80) = v34;
  *(void *)(a2 + 88) = v26;
  *(void *)(a2 + 96) = v33;
  *(void *)(a2 + 104) = v29;
  sub_25F67A28C((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_25F66AECC()
{
  unint64_t result = qword_26B39CB18;
  if (!qword_26B39CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CB18);
  }
  return result;
}

uint64_t CoreEventRecord.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CoreEventRecord.init(backingData:)(a1);
  return v2;
}

uint64_t CoreEventRecord.init(backingData:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_25F6762E8();
  uint64_t v6 = v5;
  uint64_t v7 = sub_25F70DF30();
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_25F672A58();
  *(void *)(v3 + 48) = sub_25F67ACD8(&qword_26B39D000);
  *(void *)&long long v13 = v6;
  *((void *)&v13 + 1) = v6;
  unint64_t v14 = sub_25F6740CC((uint64_t)&qword_26B39DC30);
  unint64_t v15 = v14;
  *(void *)(v3 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v3 + 24));
  sub_25F70E230();
  sub_25F66B408(0, 0xE000000000000000, v3 + 24);
  sub_25F70DF20();
  sub_25F66B4B4(v2, v3 + 24, v9);
  sub_25F66B1A8(v3 + 24, &qword_26B39DAC8, (uint64_t (*)(void))type metadata accessor for CoreRuleRecord, (void (*)(uint64_t))sub_25F678764, (unsigned char *)(v3 + 16));
  sub_25F66B1A8(v3 + 24, &qword_26B39D048, (uint64_t (*)(void))type metadata accessor for CoreDonationRecord, (void (*)(uint64_t))sub_25F66B29C, (unsigned char *)(v3 + 17));
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v10 = sub_25F70E530();
  sub_25F66B36C(v10, v3 + 24, v11);
  sub_25F70DFE0();
  *(_WORD *)(v3 + 16) = 0;
  sub_25F67B010(a1, (uint64_t)&v13);
  sub_25F674D7C();
  sub_25F67A28C(v3 + 24);
  sub_25F675D18(&v13, v3 + 24);
  swift_endAccess();
  sub_25F67A28C(a1);
  return v3;
}

uint64_t sub_25F66B1A8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X4>, uint64_t (*a3)(void)@<X5>, void (*a4)(uint64_t)@<X6>, unsigned char *a5@<X8>)
{
  sub_25F67B010(a1, (uint64_t)v11);
  sub_25F67A2DC(v11, v11[3]);
  swift_getKeyPath();
  sub_25F67ACD8(a2);
  uint64_t v9 = a3(0);
  a4(v9);
  sub_25F70E060();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25F67A28C((uint64_t)v11);
  *a5 = 0;
  return result;
}

unint64_t sub_25F66B29C()
{
  unint64_t result = qword_26B39D050;
  if (!qword_26B39D050)
  {
    sub_25F682580(&qword_26B39D048);
    sub_25F682540((uint64_t)&qword_26B39D040);
    sub_25F6740CC((uint64_t)&qword_26B39DC70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D050);
  }
  return result;
}

uint64_t sub_25F66B36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F672CC0(a1, a2, a3);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D888);
  sub_25F70E050();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

uint64_t sub_25F66B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F67B010(a3, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F70E070();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

uint64_t sub_25F66B4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F672CC0(a1, a2, a3);
  sub_25F67A2DC(v6, v6[3]);
  swift_getKeyPath();
  uint64_t v4 = sub_25F70DF30();
  sub_25F6740CC((uint64_t)&qword_26B39DB00);
  sub_25F70E070();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return sub_25F67A28C((uint64_t)v6);
}

uint64_t *sub_25F66B5AC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_25F66B7DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreTip.ConstellationAction.init(from:)(a1, a2);
}

uint64_t CoreTip.ConstellationAction.encode(to:)(void *a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39C2A0);
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6759BC();
  uint64_t v10 = v9 - v8;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66BD94();
  sub_25F70F660();
  sub_25F67E0B0();
  if (!v1)
  {
    sub_25F67E0B0();
    sub_25F67E0B0();
    sub_25F677588();
    sub_25F70F260();
    type metadata accessor for CoreTip.ConstellationAction();
    sub_25F70DE50();
    sub_25F66BE28(&qword_26B39D310);
    sub_25F70F260();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t CoreTip.ConstellationAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v3 - 8, v4);
  sub_25F6759BC();
  uint64_t v7 = v6 - v5;
  sub_25F67ACD8(&qword_26B39CAA8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v8, v9);
  sub_25F6759BC();
  uint64_t v10 = type metadata accessor for CoreTip.ConstellationAction();
  MEMORY[0x270FA5388](v10, v11);
  sub_25F6759BC();
  uint64_t v14 = v13 - v12;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66BD94();
  sub_25F70F640();
  if (v22) {
    return sub_25F67A28C((uint64_t)a1);
  }
  *(void *)uint64_t v14 = sub_25F70F1D0();
  *(void *)(v14 + 8) = v15;
  *(void *)(v14 + 16) = sub_25F70F1D0();
  *(void *)(v14 + 24) = v16;
  LOBYTE(v23) = 2;
  *(void *)(v14 + 32) = sub_25F70F1D0();
  *(void *)(v14 + 40) = v17;
  sub_25F677298();
  sub_25F70F1C0();
  *(_OWORD *)(v14 + 48) = v23;
  *(_OWORD *)(v14 + 64) = v24;
  *(_OWORD *)(v14 + 80) = v25;
  *(_OWORD *)(v14 + 96) = v26;
  *(_OWORD *)(v14 + 112) = v27;
  *(_OWORD *)(v14 + 128) = v28;
  *(_OWORD *)(v14 + 144) = v29;
  sub_25F70DE50();
  sub_25F66BE28(&qword_26B39D3B8);
  sub_25F70F1C0();
  uint64_t v18 = sub_25F67CC60();
  v19(v18);
  sub_25F66C1F4(v7, v14 + *(int *)(v10 + 32));
  sub_25F66BFEC(v14, a2);
  sub_25F67A28C((uint64_t)a1);
  return sub_25F66BE6C(v14);
}

unint64_t sub_25F66BD94()
{
  unint64_t result = qword_26B39CA90;
  if (!qword_26B39CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CA90);
  }
  return result;
}

uint64_t sub_25F66BDE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F66BE28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F70DE50();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F66BE6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CoreTip.ConstellationAction()
{
  uint64_t result = qword_26B39CF88;
  if (!qword_26B39CF88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s19ConstellationActionVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_25F70DE50();
  uint64_t result = sub_25F67D9DC(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_25F66BFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s19ConstellationActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  if (v9 == 1)
  {
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
  }
  else
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v10;
    uint64_t v11 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    uint64_t v13 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v13;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_25F70DE50();
  if (sub_25F67D9DC((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_25F67ACD8(&qword_26B39E248);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    sub_25F674004((uint64_t)v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_25F66C1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39E248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F66C25C()
{
  return static CoreParameterRecord.schemaMetadata.getter();
}

uint64_t static CoreParameterRecord.schemaMetadata.getter()
{
  uint64_t v34 = sub_25F70E470();
  uint64_t v0 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v1);
  sub_25F674D94();
  uint64_t v29 = v2;
  uint64_t v28 = sub_25F70E420();
  sub_25F67CA24();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674D94();
  uint64_t v27 = v7;
  sub_25F67ACD8(&qword_26B39DE40);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v33 = v0;
  unint64_t v9 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25F712E90;
  unint64_t v30 = v9;
  uint64_t v31 = v10;
  swift_getKeyPath();
  *(void *)&long long v35 = 0;
  *((void *)&v35 + 1) = 0xE000000000000000;
  sub_25F70E4D0();
  swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25F67E73C();
  sub_25F67B208((uint64_t)&qword_26B39DDF0);
  sub_25F677ECC();
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v36 + 1) = sub_25F70DF30();
  sub_25F677CCC((uint64_t *)&v35);
  sub_25F70DF20();
  sub_25F676930();
  sub_25F67E73C();
  sub_25F677ECC();
  sub_25F70E460();
  swift_getKeyPath();
  long long v35 = 0u;
  long long v36 = 0u;
  sub_25F676930();
  sub_25F67E73C();
  sub_25F67D64C();
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v36 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v35 = 0;
  *((void *)&v35 + 1) = 0xE000000000000000;
  sub_25F676930();
  sub_25F67E73C();
  sub_25F67D64C();
  sub_25F70E460();
  uint64_t v32 = v8;
  swift_getKeyPath();
  *((void *)&v36 + 1) = sub_25F67ACD8(&qword_26B39DE00);
  *(void *)&long long v35 = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v27, *MEMORY[0x263F18188], v28);
  sub_25F70E430();
  swift_allocObject();
  sub_25F70E440();
  sub_25F67B208((uint64_t)&qword_26B39DDE8);
  sub_25F677ECC();
  sub_25F70E460();
  swift_getKeyPath();
  long long v35 = 0u;
  long long v36 = 0u;
  sub_25F67ACD8(&qword_26B39DF50);
  sub_25F67ACD8(&qword_26B39DED0);
  sub_25F67CA24();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_25F710D00;
  uint64_t v18 = (uint64_t *)(v17 + v16);
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25F711040;
  *(void *)(v19 + 32) = swift_getKeyPath();
  sub_25F70E930();
  *uint64_t v18 = v19;
  uint64_t v20 = *(void (**)(void))(v13 + 104);
  sub_25F67E3B0();
  v20();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_25F711040;
  *(void *)(v21 + 32) = swift_getKeyPath();
  sub_25F70E930();
  *(uint64_t *)((char *)v18 + v15) = v21;
  sub_25F67E3B0();
  v20();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_25F712EA0;
  *(void *)(v22 + 32) = swift_getKeyPath();
  *(void *)(v22 + 40) = swift_getKeyPath();
  sub_25F70E930();
  *(uint64_t *)((char *)v18 + 2 * v15) = v22;
  sub_25F67E3B0();
  v20();
  sub_25F67ACD8(&qword_26B39DF18);
  swift_allocObject();
  sub_25F70E480();
  sub_25F682540((uint64_t)&unk_26B39DF10);
  sub_25F677ECC();
  sub_25F70E460();
  uint64_t v23 = sub_25F67356C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v25 = *(void *)(v23 + 16);
  unint64_t v24 = *(void *)(v23 + 24);
  if (v25 >= v24 >> 1) {
    uint64_t v23 = sub_25F67356C(v24 > 1, v25 + 1, 1, v23);
  }
  *(void *)(v23 + 16) = v25 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v33 + 32))(v23 + v30 + v25 * v32, v29, v34);
  sub_25F6790F4();
  return v31;
}

objc_class *sub_25F66C958@<X0>(void *a1@<X0>, objc_class **a2@<X8>)
{
  uint64_t result = CoreTip.ConstellationContent.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

objc_class *CoreTip.ConstellationContent.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CoreTip.ConstellationContent.init(from:)(a1);
}

uint64_t CoreTip.ConstellationContent.encode(to:)(void *a1)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CE68);
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675B10();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66D0A8();
  sub_25F70F660();
  sub_25F67ACD8(&qword_26B39D068);
  sub_25F66D038(&qword_26B39CE50, (void (*)(void))sub_25F6952C4);
  sub_25F675BA4();
  if (!v1)
  {
    sub_25F675BA4();
    sub_25F67ACD8(&qword_26B39D078);
    sub_25F66CFB8(&qword_26B39CE58, &qword_26B39CE40);
    sub_25F70F260();
    sub_25F66D140();
    sub_25F70F260();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

objc_class *CoreTip.ConstellationContent.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v20 = sub_25F67ACD8(&qword_26B39D0A8);
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  unint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F66D0A8();
  uint64_t v10 = v1;
  sub_25F70F640();
  if (v2)
  {
    uint64_t v18 = ObjectType;
    sub_25F67A28C((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v5;
    sub_25F67ACD8(&qword_26B39D068);
    char v25 = 0;
    sub_25F66D038(&qword_26B39D070, (void (*)(void))sub_25F695278);
    uint64_t v12 = v20;
    sub_25F6766DC();
    v19[1] = OBJC_IVAR___ConstellationContent_title;
    *(void *)&v10[OBJC_IVAR___ConstellationContent_title] = v23;
    char v25 = 1;
    sub_25F6766DC();
    *(void *)&v10[OBJC_IVAR___ConstellationContent_message] = v23;
    sub_25F67ACD8(&qword_26B39D078);
    char v25 = 2;
    sub_25F66CFB8(&qword_26B39D080, &qword_26B39CF80);
    sub_25F70F1C0();
    *(void *)&v10[OBJC_IVAR___ConstellationContent_actions] = v23;
    char v25 = 3;
    sub_25F66D0F4();
    sub_25F70F1C0();
    uint64_t v14 = v24;
    uint64_t v15 = &v10[OBJC_IVAR___ConstellationContent_asset];
    *(_OWORD *)uint64_t v15 = v23;
    *((void *)v15 + 2) = v14;

    v22.receiver = v10;
    v22.super_class = ObjectType;
    unint64_t v16 = (objc_class *)objc_msgSendSuper2(&v22, sel_init);
    uint64_t v17 = v11;
    uint64_t v18 = v16;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v12);
    sub_25F67A28C((uint64_t)a1);
  }
  return v18;
}

uint64_t sub_25F66CFB8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(&qword_26B39D078);
    sub_25F66D18C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F66D038(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(&qword_26B39D068);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F66D0A8()
{
  unint64_t result = qword_26B39CFA8;
  if (!qword_26B39CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFA8);
  }
  return result;
}

unint64_t sub_25F66D0F4()
{
  unint64_t result = qword_26B39CF78;
  if (!qword_26B39CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF78);
  }
  return result;
}

unint64_t sub_25F66D140()
{
  unint64_t result = qword_26B39CE38;
  if (!qword_26B39CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CE38);
  }
  return result;
}

uint64_t sub_25F66D18C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CoreTip.ConstellationAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F66D1D0@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_25F66D1E8(a1, a2);
}

uint64_t sub_25F66D1E8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  sub_25F67A2DC(a1, a1[3]);
  sub_25F70F630();
  if (!v2)
  {
    unint64_t v5 = v13;
    sub_25F67A2DC(v11, v12);
    if (sub_25F70F3B0())
    {
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
      if (v6)
      {
        unint64_t v7 = (unint64_t)v6;
        uint64_t v8 = sub_25F67A8F8(0, &qword_26B39D370);
        unint64_t v9 = v7 & 0xFFFFFFFFFFFFFF00;
      }
      else
      {
        unint64_t v9 = 0x3E6C6C756E00;
        unint64_t v5 = 0xE600000000000000;
        uint64_t v8 = MEMORY[0x263F8D310];
        LOBYTE(v7) = 60;
      }
    }
    else
    {
      unint64_t v5 = v13;
      sub_25F67A2DC(v11, v12);
      unint64_t v9 = 0;
      LOBYTE(v7) = sub_25F70F360() & 1;
      uint64_t v8 = MEMORY[0x263F8D4F8];
    }
    sub_25F67A28C((uint64_t)v11);
    *a2 = v9 | v7;
    a2[1] = v5;
    a2[3] = v8;
  }
  return sub_25F67A28C((uint64_t)a1);
}

uint64_t CoreTipRecord.__allocating_init(backingData:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CoreTipRecord.init(backingData:)(a1);
  return v2;
}

uint64_t CoreTipRecord.init(backingData:)(uint64_t a1)
{
  uint64_t v4 = v1;
  sub_25F6762E8();
  uint64_t v7 = v6;
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F676730();
  uint64_t v11 = sub_25F70DF30();
  sub_25F674D1C();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6768BC();
  *(void *)(v4 + 48) = sub_25F67ACD8(&qword_26B39D840);
  *(void *)&long long v20 = v7;
  *((void *)&v20 + 1) = v7;
  uint64_t v21 = sub_25F67AF7C(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  uint64_t v22 = v21;
  *(void *)(v4 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v4 + 24));
  sub_25F70E230();
  sub_25F66DC20(0, 0xE000000000000000, v4 + 24);
  sub_25F70DF20();
  sub_25F66DDBC(v3, v4 + 24, v14);
  sub_25F66DAAC(0, v4 + 24, (unsigned char *)(v4 + 16));
  sub_25F674004(v2, 1, 1, v11);
  sub_25F66DCCC(v2, v4 + 24, v15);
  sub_25F66DB5C(MEMORY[0x263F8EE78], v4 + 24, v16);
  sub_25F6E5030(0, v4 + 24);
  sub_25F6E5030(1, v4 + 24);
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v17 = sub_25F70E530();
  sub_25F66DA10(v17, v4 + 24, v18);
  sub_25F70DFE0();
  *(_WORD *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 18) = 0;
  sub_25F67B010(a1, (uint64_t)&v20);
  sub_25F674D7C();
  sub_25F67A28C(v4 + 24);
  sub_25F675D18(&v20, v4 + 24);
  swift_endAccess();
  sub_25F67A28C(a1);
  return v4;
}

uint64_t sub_25F66D980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_25F6BC144(v10, (uint64_t)&a9 - v9);
}

uint64_t CoreTipRecord.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  sub_25F674D7C();
  sub_25F67A28C(v3);
  sub_25F675D18(a1, v3);
  return swift_endAccess();
}

uint64_t sub_25F66DA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F672CC0(a1, a2, a3);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D888);
  sub_25F70E050();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

uint64_t sub_25F66DAAC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  sub_25F67B010(a2, (uint64_t)v6);
  sub_25F67A2DC(v6, v6[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D808);
  sub_25F70E050();
  swift_release();

  uint64_t result = sub_25F67A28C((uint64_t)v6);
  *a3 = 0;
  return result;
}

uint64_t sub_25F66DB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F679604(a1, a2, a3);
  sub_25F67A2DC(v5, v5[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39DAC8);
  type metadata accessor for CoreRuleRecord();
  sub_25F678764();
  sub_25F70E060();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25F67A28C((uint64_t)v5);
  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_25F66DC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F67B010(a3, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F70E070();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

uint64_t sub_25F66DCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F679604(a1, a2, a3);
  sub_25F67A2DC(v6, v6[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39DBA8);
  sub_25F66DEB4();
  sub_25F70E070();
  swift_release();
  sub_25F685E7C(v4, &qword_26B39DBA8);
  uint64_t result = sub_25F67A28C((uint64_t)v6);
  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_25F66DDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F672CC0(a1, a2, a3);
  sub_25F67A2DC(v6, v6[3]);
  swift_getKeyPath();
  uint64_t v4 = sub_25F70DF30();
  sub_25F67AF7C(&qword_26B39DB00, MEMORY[0x263F07490]);
  sub_25F70E070();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return sub_25F67A28C((uint64_t)v6);
}

void sub_25F66DEB4()
{
  sub_25F676450();
  uint64_t v2 = v1;
  if (!*v1)
  {
    uint64_t v3 = v0;
    sub_25F682580(&qword_26B39DBA8);
    sub_25F67AF7C(v3, MEMORY[0x263F07490]);
    atomic_store(swift_getWitnessTable(), v2);
  }
  sub_25F672C34();
}

uint64_t sub_25F66DF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v44 = a1;
  uint64_t v45 = a3;
  uint64_t v42 = a2;
  uint64_t v40 = a6;
  uint64_t v43 = sub_25F70E340();
  sub_25F67CA24();
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F67CF74();
  uint64_t v39 = v9;
  MEMORY[0x270FA5388](v10, v11);
  char v51 = (char *)&v38 - v12;
  uint64_t v13 = sub_25F70DD60();
  sub_25F67CA24();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_25F70DE50();
  sub_25F67CA24();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22, v23);
  sub_25F67CF74();
  uint64_t v38 = v24;
  MEMORY[0x270FA5388](v25, v26);
  uint64_t v28 = (char *)&v38 - v27;
  uint64_t v29 = sub_25F65530C();
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v31 = v29 + 32;
    do
    {
      v31 += 8;
      sub_25F66E270();
      --v30;
    }
    while (v30);
  }
  swift_bridgeObjectRelease();
  strcpy((char *)v50, "tips-store.db");
  v50[7] = -4864;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x263F06E50], v13);
  sub_25F66580C();
  sub_25F70DE30();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v13);
  swift_bridgeObjectRelease();
  uint64_t v32 = v51;
  uint64_t v33 = v49;
  sub_25F692DBC(v45, v46, v47);
  if (v33) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v28, v48);
  }
  uint64_t v35 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v38, v28, v48);
  uint64_t v36 = v41;
  uint64_t v37 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v39, v32, v43);
  swift_retain();
  sub_25F70E370();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v28, v35);
}

void sub_25F66E270()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_valueTransformerNames);
  type metadata accessor for NSValueTransformerName(0);
  uint64_t v2 = sub_25F70E910();

  uint64_t v3 = (void *)sub_25F66E378();
  char v4 = sub_25F66E6F4((uint64_t)v3, v2);
  swift_bridgeObjectRelease();

  if ((v4 & 1) == 0)
  {
    id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    id v6 = (id)sub_25F66E378();
    objc_msgSend(v0, sel_setValueTransformer_forName_, v5, v6);
  }
}

uint64_t sub_25F66E378()
{
  sub_25F67ACD8(&qword_26B39DE10);
  sub_25F70E6E0();
  uint64_t v0 = sub_25F70E690();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AtomicProperty.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  AtomicProperty.init(wrappedValue:)(a1);
  return v2;
}

uint64_t _s10TipKitCore14AtomicPropertyC12wrappedValueACyxGx_tcfc_0(uint64_t a1)
{
  sub_25F67E30C();
  uint64_t v4 = *(void *)(v3 + 80);
  sub_25F67C9A8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v13 - v9, a1, v4);
  uint64_t v11 = sub_25F66E4E8((uint64_t)v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  *(void *)(v1 + 16) = v11;
  return v1;
}

uint64_t sub_25F66E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  uint64_t v7 = sub_25F66E5D0((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t sub_25F66E5D0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_25F70EF60();
  uint64_t v4 = sub_25F70EF50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

void sub_25F66E680(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for NSValueTransformerName(uint64_t a1)
{
}

uint64_t sub_25F66E6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_25F70E6C0();
  uint64_t v5 = v4;
  if (v3 == sub_25F70E6C0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_25F67CC38();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_25F70E6C0();
    uint64_t v14 = v13;
    if (v12 == sub_25F70E6C0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_25F67CC38();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

id sub_25F66E81C()
{
  return sub_25F66E840();
}

id sub_25F66E840()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_25F66E878()
{
  sub_25F67A2DC(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24));
  type metadata accessor for CoreTipRecord();
  sub_25F66E960();
  swift_release();
  sub_25F6769EC();
  if (swift_weakLoadStrong())
  {
    sub_25F66EC88(*(void *)(v0 + 96));
    swift_release();
  }
  swift_task_dealloc();
  sub_25F676894();
  return v1();
}

void sub_25F66E960()
{
  sub_25F672A18();
  uint64_t v33 = v0;
  uint64_t v34 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v32 = v6;
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v31 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = sub_25F70E3C0();
  sub_25F67CA24();
  uint64_t v30 = v15;
  MEMORY[0x270FA5388](v16, v17);
  sub_25F674D94();
  uint64_t v29 = v18;
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v3 + 32);
  swift_retain();
  v19(v5, v3);
  uint64_t v28 = v3;
  sub_25F673D98();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_25F67D9DC((uint64_t)v13, 1, v14) == 1)
  {
    sub_25F673A7C((uint64_t)v13);
    v19(v5, v28);
    sub_25F683AFC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v14;
    uint64_t v22 = v29;
    uint64_t v21 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v29, v13, v20);
    uint64_t v23 = (uint64_t)v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v31, v22, v20);
    sub_25F674004(v23, 0, 1, v20);
    sub_25F67ACD8(&qword_26B39DE58);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_25F711040;
    *(void *)(v24 + 32) = swift_getKeyPath();
    sub_25F70E930();
    sub_25F680070();
    swift_bridgeObjectRelease();
    sub_25F673A7C(v23);
    uint64_t v25 = sub_25F67649C();
    v26(v25);
  }
  sub_25F675E04();
}

uint64_t sub_25F66EC88(uint64_t a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v4 = sub_25F672C08(v3);
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = sub_25F70E3C0();
  sub_25F67C9A8();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15, v16);
  sub_25F675A6C();
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  if (qword_26B39E3E8)
  {
    uint64_t v17 = qword_26B39E3E0;
    unint64_t v18 = qword_26B39E3E8;
  }
  else
  {
    uint64_t v29 = v14;
    uint64_t v30 = a1;
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v17 = qword_26B3A3078;
      unint64_t v18 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v19 = sub_25F6A3C40();
      if (v20) {
        uint64_t v17 = v19;
      }
      else {
        uint64_t v17 = 0;
      }
      if (v20) {
        unint64_t v18 = v20;
      }
      else {
        unint64_t v18 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
    uint64_t v14 = v29;
  }
  sub_25F675B68();
  if (v17 == v22 && v18 == v21)
  {
    sub_25F70E570();
    return sub_25F672B04();
  }
  else
  {
    char v24 = sub_25F67E844();
    sub_25F70E570();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      sub_25F66F190();
      if (sub_25F67D9DC((uint64_t)v11, 1, v12) == 1)
      {
        return sub_25F675D8C((uint64_t)v11, &qword_26B39DF68);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v1, v11, v12);
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v8, v1, v12);
        sub_25F674004((uint64_t)v8, 0, 1, v12);
        sub_25F66EF7C();
        uint64_t v27 = v26;
        sub_25F675D8C((uint64_t)v8, &qword_26B39DF68);
        if (v27)
        {
          sub_25F66F23C();
          swift_release();
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v1, v12);
      }
    }
  }
  return result;
}

void sub_25F66EF7C()
{
  sub_25F6784CC();
  sub_25F6806EC(v2, v3, v4, v5);
  sub_25F67ACD8(&qword_26B39D800);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F68C6B0();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6796D4();
  sub_25F67D82C(v1);
  if (v13)
  {
    sub_25F6FF370(v1, &qword_26B39DF68);
  }
  else
  {
    uint64_t v14 = sub_25F682E04();
    v15(v14);
    type metadata accessor for CoreTipRecord();
    sub_25F682878(&qword_26B39DD08, 255, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
    if (sub_25F6806D0())
    {
      sub_25F67E27C();
      v16();
    }
    else
    {
      sub_25F6809A0();
      MEMORY[0x270FA5388](v17, v18);
      sub_25F6729C4();
      sub_25F682CC0();
      sub_25F6707BC();
      if (v0)
      {

        uint64_t v19 = sub_25F67D28C();
        v20(v19);
        uint64_t v21 = sub_25F6FF50C();
        v22(v21);
      }
      else
      {
        uint64_t v23 = sub_25F67D28C();
        v24(v23);
        sub_25F67E27C();
        v25();
      }
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F66F190()
{
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F673D98();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_25F66F23C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39E2B8);
  uint64_t v4 = sub_25F672C08(v3);
  MEMORY[0x270FA5388](v4, v5);
  sub_25F674D94();
  uint64_t v71 = v6;
  uint64_t v7 = sub_25F70DF30();
  sub_25F67C9A8();
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v9, v10);
  sub_25F674D94();
  uint64_t v67 = v11;
  uint64_t v12 = sub_25F67ACD8(&qword_26B39D4A8);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v13, v14);
  sub_25F675A6C();
  uint64_t v15 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v16 = sub_25F672C08(v15);
  uint64_t v18 = MEMORY[0x270FA5388](v16, v17);
  uint64_t v69 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18, v20);
  uint64_t v23 = (char *)&v65 - v22;
  uint64_t v25 = MEMORY[0x270FA5388](v21, v24);
  uint64_t v27 = (char *)&v65 - v26;
  MEMORY[0x270FA5388](v25, v28);
  uint64_t v30 = (char *)&v65 - v29;
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  uint64_t v70 = v23;
  if (qword_26B39E3E8)
  {
    uint64_t v31 = qword_26B39E3E0;
    unint64_t v32 = qword_26B39E3E8;
  }
  else
  {
    uint64_t v66 = v7;
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v31 = qword_26B3A3078;
      unint64_t v32 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v33 = sub_25F6A3C40();
      if (v34)
      {
        uint64_t v31 = v33;
        unint64_t v32 = v34;
      }
      else
      {
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
    uint64_t v7 = v66;
  }
  sub_25F675B68();
  BOOL v37 = v31 == v36 && v32 == v35;
  if (v37)
  {
    sub_25F70E570();
    return sub_25F672B04();
  }
  char v38 = sub_25F67E844();
  sub_25F70E570();
  uint64_t result = swift_bridgeObjectRelease();
  if (v38) {
    return result;
  }
  sub_25F67031C((uint64_t)v30);
  sub_25F685CF8();
  uint64_t v40 = v1 + *(int *)(v12 + 48);
  sub_25F675D30((uint64_t)v30, v1, &qword_26B39DBA8);
  sub_25F675D30((uint64_t)v27, v40, &qword_26B39DBA8);
  sub_25F675E8C(v1);
  if (v37)
  {
    sub_25F675D8C((uint64_t)v27, &qword_26B39DBA8);
    sub_25F675D8C((uint64_t)v30, &qword_26B39DBA8);
    sub_25F675E8C(v40);
    if (v37)
    {
      sub_25F675D8C(v1, &qword_26B39DBA8);
      goto LABEL_30;
    }
LABEL_27:
    sub_25F675D8C(v1, &qword_26B39D4A8);
LABEL_29:
    uint64_t v46 = (uint64_t)v69;
    sub_25F685CF8();
    sub_25F6D5610(v46);
    goto LABEL_30;
  }
  uint64_t v41 = (uint64_t)v70;
  sub_25F675D30(v1, (uint64_t)v70, &qword_26B39DBA8);
  sub_25F675E8C(v40);
  if (v42)
  {
    sub_25F675D8C((uint64_t)v27, &qword_26B39DBA8);
    sub_25F675D8C((uint64_t)v30, &qword_26B39DBA8);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v41, v7);
    goto LABEL_27;
  }
  uint64_t v43 = v67;
  uint64_t v44 = v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v40, v7);
  sub_25F669500(&qword_26B39D2B0, MEMORY[0x263F07490]);
  LODWORD(v66) = sub_25F70E680();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v45(v43, v7);
  sub_25F675D8C((uint64_t)v27, &qword_26B39DBA8);
  sub_25F675D8C((uint64_t)v30, &qword_26B39DBA8);
  v45((uint64_t)v70, v7);
  sub_25F675D8C(v1, &qword_26B39DBA8);
  if ((v66 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v47 = sub_25F6706C8();
  char v49 = v48;
  uint64_t v50 = sub_25F685EC8();
  if ((v49 & 1) != 0 || v47 != v50)
  {
    sub_25F685EC8();
    sub_25F6705B4();
  }
  double v51 = CoreTip.displayDuration.getter();
  if (v51 < sub_25F66F8D0())
  {
    sub_25F66F8D0();
    sub_25F6D5808();
  }
  sub_25F66F960((char *)&v72);
  int v52 = v72;
  int v53 = HIBYTE(v72);
  uint64_t result = CoreTip.status.getter(&v72);
  if (v52 == v72)
  {
    if (v53 == 10)
    {
      if (HIBYTE(v72) == 10) {
        return result;
      }
    }
    else if (HIBYTE(v72) != 10 && v53 == HIBYTE(v72))
    {
      return result;
    }
  }
  if (v52 == 1)
  {
    sub_25F67A2DC((void *)(v2 + 32), *(void *)(v2 + 56));
    uint64_t v55 = sub_25F674DEC();
    v56(v55);
    int v57 = v73;
    swift_bridgeObjectRelease();
    if (v57 == 1)
    {
      uint64_t v58 = (void *)CoreTip.constellationContent.getter();

      if (!v58)
      {
        CoreTipRecord.content.getter();
        sub_25F64FDD0(v59);
      }
    }
  }
  uint64_t v60 = sub_25F70EA90();
  uint64_t v61 = v71;
  sub_25F674004(v71, 1, 1, v60);
  sub_25F70EA70();
  swift_retain();
  uint64_t v62 = sub_25F70EA60();
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = MEMORY[0x263F8F500];
  *(void *)(v63 + 16) = v62;
  *(void *)(v63 + 24) = v64;
  *(void *)(v63 + 32) = v2;
  *(unsigned char *)(v63 + 40) = v52;
  *(unsigned char *)(v63 + 41) = v53;
  sub_25F6559D4(v61, (uint64_t)&unk_26A7B18F8, v63);
  return swift_release();
}

double sub_25F66F8D0()
{
  sub_25F678370();
  uint64_t v1 = sub_25F68580C();
  sub_25F685FA4(v1, 0xEF6E6F6974617275, v0);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    double v2 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F674E24();
    return 0.0;
  }
  return v2;
}

uint64_t sub_25F66F960@<X0>(char *a1@<X8>)
{
  char v2 = sub_25F670448();
  if (v2 == 4)
  {
    uint64_t result = 10;
    char v4 = 3;
    goto LABEL_20;
  }
  char v5 = v2;
  sub_25F66FEB4(&v11);
  if (v11 == 2)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for logger();
    sub_25F67F3A4(v6, (uint64_t)qword_26B39D818);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    uint64_t v11 = 0x203A646928706954;
    unint64_t v12 = 0xE800000000000000;
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  char v7 = sub_25F670048();
  if (v7 != 4)
  {
    char v4 = v7;
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for logger();
    sub_25F67F3A4(v8, (uint64_t)qword_26B39D818);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F70F070();
    sub_25F68C2F0(v11, v12);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v5 != 1) {
    goto LABEL_13;
  }
  if (sub_25F64FEBC() != 2)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    goto LABEL_26;
  }
  if (sub_25F652378() != 2)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
LABEL_26:
    uint64_t v9 = type metadata accessor for logger();
    sub_25F67F3A4(v9, (uint64_t)qword_26B39D818);
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
LABEL_7:
    sub_25F70E790();
    sub_25F68C2F0(v11, v12);
    swift_bridgeObjectRelease();
    char v4 = 0;
LABEL_19:
    uint64_t result = 10;
    goto LABEL_20;
  }
  if (sub_25F6504B8() == 2)
  {
LABEL_13:
    uint64_t result = sub_25F6701A0();
    if (result == 10) {
      char v4 = v5;
    }
    else {
      char v4 = 2;
    }
    goto LABEL_20;
  }
  if (qword_26B39D830 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for logger();
  sub_25F67F3A4(v10, (uint64_t)qword_26B39D818);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F68C2F0(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t result = 8;
  char v4 = 2;
LABEL_20:
  *a1 = v4;
  a1[1] = result;
  return result;
}

uint64_t sub_25F66FEB4@<X0>(unsigned char *a1@<X8>)
{
  if (qword_26B39D408 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F66FF6C();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  char v3 = v4;
  if (v4 == 3) {
    char v3 = 0;
  }
  *a1 = v3;
  return result;
}

void sub_25F66FF6C()
{
  sub_25F67CB2C();
  unint64_t v1 = sub_25F67DFFC();
  sub_25F66FFAC(v1, v2);
  os_unfair_lock_unlock(v0);
}

unint64_t sub_25F66FFAC@<X0>(unint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_25F66FFC8(a1, *(uint64_t **)(v2 + 16), a2);
}

unint64_t sub_25F66FFC8@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return sub_25F66FFE8(a1, *a2, a2[1], a3);
}

unint64_t sub_25F66FFE8@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_25F67AD88(a2, a3), (v6 & 1) != 0)) {
    char v7 = *(unsigned char *)(*(void *)(v5 + 56) + result);
  }
  else {
    char v7 = 3;
  }
  *a4 = v7;
  return result;
}

uint64_t sub_25F670048()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  uint64_t v5 = sub_25F687758(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25F6701A0()
{
  if (qword_26B39DB08 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F67D900();
  swift_bridgeObjectRelease();
  swift_release();
  if (v1 == 4) {
    return 10;
  }
  else {
    return HIBYTE(v1);
  }
}

double CoreTip.displayDuration.getter()
{
  swift_retain();
  double v0 = sub_25F670288();
  swift_release();
  return v0;
}

double sub_25F670288()
{
  unsigned __int16 v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F6702E8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_25F6702E8(uint64_t a1@<X0>, double *a2@<X8>)
{
  double v4 = sub_25F670314(a1);
  if (!v2) {
    *a2 = v4;
  }
}

double sub_25F670314(uint64_t a1)
{
  return *(double *)a1;
}

uint64_t sub_25F67031C@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_25F670364(a1);
  return swift_release();
}

void sub_25F670364(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  double v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_25F670414(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_25F670414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F675D30(a1, a2, &qword_26B39DBA8);
}

uint64_t sub_25F670448()
{
  if (qword_26B39DB08 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F67D900();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

void sub_25F6704D8()
{
  sub_25F67CB2C();
  unint64_t v1 = sub_25F67DFFC();
  sub_25F670518(v1, v2);
  os_unfair_lock_unlock(v0);
}

unint64_t sub_25F670518@<X0>(unint64_t a1@<X0>, __int16 *a2@<X8>)
{
  return sub_25F670534(a1, *(uint64_t **)(v2 + 16), a2);
}

unint64_t sub_25F670534@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, __int16 *a3@<X8>)
{
  return sub_25F670554(a1, *a2, a2[1], a3);
}

unint64_t sub_25F670554@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_25F67AD88(a2, a3), (v6 & 1) != 0)) {
    __int16 v7 = *(_WORD *)(*(void *)(v5 + 56) + 2 * result);
  }
  else {
    __int16 v7 = 4;
  }
  *a4 = v7;
  return result;
}

uint64_t sub_25F6705B4()
{
  swift_retain();
  sub_25F67060C();
  return swift_release();
}

void sub_25F67060C()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_25F670678(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F670678(uint64_t a1)
{
  return sub_25F670694(a1, *(void *)(v1 + 16));
}

uint64_t sub_25F670694(uint64_t a1, uint64_t a2)
{
  return sub_25F6706B8(a1, *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_25F6706B8(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t result = a2;
  *(unsigned char *)(result + 8) = a3 & 1;
  return result;
}

uint64_t sub_25F6706C8()
{
  swift_retain();
  uint64_t v0 = sub_25F670714();
  swift_release();
  return v0;
}

uint64_t sub_25F670714()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 7;
  os_unfair_lock_lock(v1 + 7);
  sub_25F670778(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25F670778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25F6707AC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_25F6707AC(uint64_t a1)
{
  return *(void *)a1;
}

void sub_25F6707BC()
{
  sub_25F6707DC();
}

void sub_25F6707DC()
{
  sub_25F672A18();
  sub_25F670BCC(v1, v2, v3, v4);
  uint64_t v5 = sub_25F67ACD8(&qword_26B39DBD8);
  uint64_t v6 = sub_25F672C08(v5);
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6768BC();
  sub_25F67ACD8(&qword_26B39D838);
  sub_25F67CA24();
  uint64_t v9 = v8;
  v37[1] = v8;
  MEMORY[0x270FA5388](v10, v11);
  sub_25F67B088();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F670C78();
  MEMORY[0x270FA5388](v14, v15);
  sub_25F670B6C();
  MEMORY[0x270FA5388](v16, v17);
  v37[2] = (uint64_t)v37 - v18;
  sub_25F679DD4();
  uint64_t v21 = MEMORY[0x270FA5388](v19, v20);
  sub_25F670B80(v21, v22, v23, v24, v25, v26, v27, v28, v37[0]);
  sub_25F67ACD8(&qword_26B39D800);
  sub_25F674D1C();
  sub_25F6764EC();
  v29();
  sub_25F670B40();
  uint64_t v30 = type metadata accessor for CoreTipRecord();
  uint64_t v31 = sub_25F682878(&qword_26B39DD08, 255, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_25F670B94();
  v37[14] = v30;
  v37[15] = v31;
  swift_getKeyPath();
  sub_25F685C34();
  unint64_t v32 = *(void (**)(void))(v9 + 32);
  sub_25F6767EC();
  v32();
  swift_release();
  v37[12] = v30;
  v37[13] = v31;
  swift_getKeyPath();
  sub_25F670C08();
  sub_25F6767EC();
  v32();
  swift_release();
  v37[10] = v30;
  v37[11] = v31;
  swift_getKeyPath();
  uint64_t v38 = v37[5];
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  sub_25F6767EC();
  v32();
  swift_release();
  v37[8] = v30;
  v37[9] = v31;
  swift_getKeyPath();
  uint64_t v38 = v37[6];
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  sub_25F6767EC();
  v32();
  swift_release();
  unint64_t v33 = sub_25F68C1E8();
  sub_25F679E44();
  v34();
  if (v0) {
    goto LABEL_9;
  }
  if (v33 >> 62)
  {
    sub_25F672CA0();
    if (!sub_25F70F100()) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_25F70E570();
    if (!v35) {
      goto LABEL_7;
    }
  }
  if ((v33 & 0xC000000000000001) != 0) {
    MEMORY[0x2611FBA70](0, v33);
  }
  else {
    swift_retain();
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v36) {
    swift_release();
  }
LABEL_9:
  sub_25F685BEC();
  sub_25F675E04();
}

uint64_t sub_25F670B40()
{
  sub_25F674004(v1, 0, 1, v0);
  return 0;
}

void sub_25F670B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
}

uint64_t sub_25F670B94()
{
  return sub_25F70E200();
}

void sub_25F670BB4()
{
  sub_25F678370();
}

uint64_t sub_25F670BCC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 - 72) = v4;
  *(void *)(v5 - 184) = a3;
  *(void *)(v5 - 176) = a4;
  *(_DWORD *)(v5 - 196) = a2;
  *(void *)(v5 - 168) = result;
  return result;
}

void sub_25F670BE4()
{
  sub_25F678370();
}

uint64_t sub_25F670C08()
{
  *(unsigned char *)(v0 - 96) = *(_DWORD *)(v0 - 196);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F670C40()
{
  return v0;
}

uint64_t sub_25F670C88()
{
  return static CoreDonationRecord.schemaMetadata.getter();
}

uint64_t static CoreDonationRecord.schemaMetadata.getter()
{
  uint64_t v38 = sub_25F70E470();
  uint64_t v1 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38, v2);
  unint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_25F70E420();
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F672A58();
  sub_25F67ACD8(&qword_26B39DE40);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v37 = v1;
  unint64_t v10 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_25F710D00;
  unint64_t v35 = v10;
  uint64_t v36 = v11;
  swift_getKeyPath();
  *((void *)&v43 + 1) = sub_25F70DF30();
  sub_25F677CCC((uint64_t *)&v42);
  sub_25F70DF20();
  uint64_t v12 = sub_25F70E4D0();
  swift_allocObject();
  sub_25F676324();
  uint64_t v40 = v12;
  uint64_t v13 = sub_25F67130C(&qword_26B39DDF0, MEMORY[0x263F181D0]);
  sub_25F678480(v13);
  sub_25F70E460();
  swift_getKeyPath();
  long long v42 = 0u;
  long long v43 = 0u;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v0, *MEMORY[0x263F18190], v4);
  uint64_t v14 = sub_25F70E430();
  swift_allocObject();
  sub_25F70E440();
  uint64_t v40 = v14;
  uint64_t v15 = sub_25F67130C(&qword_26B39DDE8, MEMORY[0x263F181A0]);
  sub_25F678480(v15);
  sub_25F70E460();
  swift_getKeyPath();
  long long v42 = 0u;
  long long v43 = 0u;
  sub_25F67ACD8(&qword_26B39DE48);
  uint64_t v16 = sub_25F70E4C0();
  sub_25F6768F0(v16);
  uint64_t v17 = sub_25F682C3C();
  long long v33 = xmmword_25F710D20;
  *(_OWORD *)(v17 + 16) = xmmword_25F710D20;
  type metadata accessor for RawDictionaryTransformer();
  sub_25F70E4B0();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = sub_25F676324();
  uint64_t v40 = v12;
  unint64_t v41 = v13;
  uint64_t v39 = v19;
  sub_25F70E460();
  swift_getKeyPath();
  long long v42 = 0u;
  long long v43 = 0u;
  sub_25F67ACD8(&qword_26B39DF48);
  uint64_t v20 = sub_25F67ACD8(&qword_26B39DEC8);
  sub_25F67CA24();
  uint64_t v22 = v21;
  uint64_t v23 = sub_25F682C3C();
  *(_OWORD *)(v23 + 16) = v33;
  uint64_t v24 = (uint64_t *)(v23 + v18);
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_25F711040;
  *(void *)(v25 + 32) = swift_getKeyPath();
  uint64_t v39 = v25;
  sub_25F70E930();
  *uint64_t v24 = v39;
  (*(void (**)(uint64_t *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F181B8], v20);
  uint64_t v26 = sub_25F67ACD8(&qword_26B39DF08);
  swift_allocObject();
  uint64_t v27 = sub_25F70E480();
  uint64_t v40 = v26;
  uint64_t v28 = v34;
  unint64_t v41 = sub_25F67139C();
  uint64_t v39 = v27;
  sub_25F70E460();
  uint64_t v29 = sub_25F678090(0, 1, 1, MEMORY[0x263F8EE78], &qword_26B39DE40, MEMORY[0x263F181B0], MEMORY[0x263F181B0], MEMORY[0x263F181B0]);
  unint64_t v31 = *(void *)(v29 + 16);
  unint64_t v30 = *(void *)(v29 + 24);
  if (v31 >= v30 >> 1) {
    uint64_t v29 = sub_25F678090(v30 > 1, v31 + 1, 1, v29, &qword_26B39DE40, MEMORY[0x263F181B0], MEMORY[0x263F181B0], MEMORY[0x263F181B0]);
  }
  *(void *)(v29 + 16) = v31 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v29 + v35 + v31 * v9, v28, v38);
  uint64_t v39 = v36;
  sub_25F6790F4();
  return v39;
}

uint64_t CoreDonationRecord.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25F67B010(v1 + 24, a1);
}

uint64_t sub_25F67130C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CoreDonationRecord()
{
  uint64_t result = qword_26B39DC90;
  if (!qword_26B39DC90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25F67139C()
{
  unint64_t result = qword_26B39DF00;
  if (!qword_26B39DF00)
  {
    sub_25F682580(&qword_26B39DF08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DF00);
  }
  return result;
}

uint64_t static CoreRuleRecord.schemaMetadata.getter()
{
  uint64_t v51 = sub_25F70E470();
  uint64_t v0 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51, v1);
  sub_25F6759BC();
  uint64_t v47 = v3 - v2;
  uint64_t v55 = sub_25F70E420();
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6759BC();
  uint64_t v10 = v9 - v8;
  sub_25F67ACD8(&qword_26B39DE40);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v50 = v0;
  unint64_t v12 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v13 = v11;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_25F714DE0;
  uint64_t v48 = v14;
  unint64_t v49 = v12;
  unint64_t v15 = v14 + v12;
  swift_getKeyPath();
  *(void *)&long long v57 = 0;
  *((void *)&v57 + 1) = 0xE000000000000000;
  sub_25F70E4D0();
  swift_allocObject();
  sub_25F676324();
  sub_25F67B1C0(&qword_26B39DDF0, MEMORY[0x263F181D0]);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v58 + 1) = sub_25F70DF30();
  sub_25F677CCC((uint64_t *)&v57);
  sub_25F70DF20();
  sub_25F679EAC();
  uint64_t v16 = sub_25F676324();
  sub_25F672A8C(v16);
  sub_25F70E460();
  swift_getKeyPath();
  long long v57 = 0u;
  long long v58 = 0u;
  sub_25F67ACD8(&qword_26B39DE48);
  uint64_t v17 = sub_25F70E4C0();
  sub_25F6768F0(v17);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F710D20;
  sub_25F67ACD8(&qword_26B39DDD8);
  sub_25F70E4B0();
  sub_25F679EAC();
  uint64_t v18 = sub_25F677F0C();
  sub_25F672A8C(v18);
  sub_25F70E460();
  uint64_t v54 = v13;
  sub_25F685CBC(v15 + 3 * v13);
  swift_getKeyPath();
  long long v57 = 0u;
  long long v58 = 0u;
  uint64_t v19 = *MEMORY[0x263F18190];
  int v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104);
  v52(v10, v19, v55);
  sub_25F70E430();
  swift_allocObject();
  sub_25F6792CC();
  sub_25F67B1C0(&qword_26B39DDE8, MEMORY[0x263F181A0]);
  sub_25F685E14();
  sub_25F70E460();
  sub_25F685CBC(v15 + 4 * v54);
  swift_getKeyPath();
  uint64_t v20 = sub_25F671F94();
  v52(v20, v19, v55);
  sub_25F674FCC();
  sub_25F6792CC();
  sub_25F6784B4();
  sub_25F70E460();
  sub_25F685CBC(v15 + 5 * v54);
  swift_getKeyPath();
  uint64_t v21 = sub_25F671F94();
  v52(v21, v19, v55);
  swift_getKeyPath();
  sub_25F674FCC();
  sub_25F674DD8();
  sub_25F67E7EC();
  sub_25F6784B4();
  sub_25F70E460();
  sub_25F685CBC(v15 + 6 * v54);
  swift_getKeyPath();
  uint64_t v22 = sub_25F671F94();
  v52(v22, v19, v55);
  swift_getKeyPath();
  sub_25F674FCC();
  sub_25F674DD8();
  sub_25F67E7EC();
  sub_25F685E14();
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v58 + 1) = sub_25F67ACD8(&qword_26B39DE00);
  *(void *)&long long v57 = MEMORY[0x263F8EE78];
  v52(v10, *MEMORY[0x263F18188], v55);
  swift_getKeyPath();
  sub_25F674FCC();
  sub_25F674DD8();
  uint64_t v56 = sub_25F67E7EC();
  sub_25F70E460();
  swift_getKeyPath();
  uint64_t v23 = sub_25F70E530();
  *((void *)&v58 + 1) = sub_25F67ACD8(&qword_26B39DDF8);
  *(void *)&long long v57 = v23;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F710D20;
  type metadata accessor for RawDictionaryTransformer();
  sub_25F70E4B0();
  sub_25F679EAC();
  uint64_t v24 = sub_25F677F0C();
  sub_25F672A8C(v24);
  sub_25F70E460();
  swift_getKeyPath();
  uint64_t v25 = MEMORY[0x263F8D6C8];
  *((void *)&v58 + 1) = MEMORY[0x263F8D6C8];
  *(void *)&long long v57 = 0;
  sub_25F679EAC();
  uint64_t v26 = sub_25F676324();
  sub_25F672A8C(v26);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v58 + 1) = v25;
  *(void *)&long long v57 = 0;
  sub_25F679EAC();
  uint64_t v27 = sub_25F676324();
  sub_25F672A8C(v27);
  sub_25F70E460();
  swift_getKeyPath();
  long long v57 = 0u;
  long long v58 = 0u;
  sub_25F67ACD8(&qword_26B39DF38);
  sub_25F67ACD8(&qword_26B39DEB8);
  sub_25F67CA24();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 72);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_25F712E90;
  long long v33 = (uint64_t *)(v53 + v32);
  sub_25F67ACD8(&qword_26B39DE58);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F711040;
  uint64_t KeyPath = swift_getKeyPath();
  sub_25F672AE8(KeyPath);
  *long long v33 = v56;
  unint64_t v35 = *(void (**)(void))(v29 + 104);
  sub_25F67E09C();
  v35();
  uint64_t v36 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v36);
  uint64_t v37 = swift_getKeyPath();
  sub_25F672AE8(v37);
  *(uint64_t *)((char *)v33 + v31) = v56;
  sub_25F67E09C();
  v35();
  uint64_t v38 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v38);
  uint64_t v39 = swift_getKeyPath();
  sub_25F672AE8(v39);
  *(uint64_t *)((char *)v33 + 2 * v31) = v56;
  sub_25F67E09C();
  v35();
  uint64_t v40 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v40);
  uint64_t v41 = swift_getKeyPath();
  sub_25F672AE8(v41);
  *(uint64_t *)((char *)v33 + 3 * v31) = v56;
  sub_25F67E09C();
  v35();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_25F712EA0;
  *(void *)(v42 + 32) = swift_getKeyPath();
  *(void *)(v42 + 40) = swift_getKeyPath();
  sub_25F70E930();
  *(uint64_t *)((char *)v33 + 4 * v31) = v42;
  sub_25F67E09C();
  v35();
  sub_25F67ACD8(&qword_26B39DEE8);
  swift_allocObject();
  sub_25F70E480();
  sub_25F681778(&qword_26B39DEE0, &qword_26B39DEE8);
  sub_25F70E460();
  uint64_t v43 = sub_25F67356C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v45 = *(void *)(v43 + 16);
  unint64_t v44 = *(void *)(v43 + 24);
  if (v45 >= v44 >> 1) {
    uint64_t v43 = sub_25F67356C(v44 > 1, v45 + 1, 1, v43);
  }
  *(void *)(v43 + 16) = v45 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v50 + 32))(v43 + v49 + v45 * v54, v47, v51);
  sub_25F6790F4();
  return v48;
}

uint64_t sub_25F671F80()
{
  return v0 - 96;
}

uint64_t sub_25F671F94()
{
  *(_OWORD *)(v1 - 128) = 0u;
  *(_OWORD *)(v1 - 112) = 0u;
  return v0;
}

uint64_t sub_25F671FA4()
{
  return sub_25F70E570();
}

void sub_25F671FE0()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_25F671FF8()
{
  return v0;
}

void static CoreTipRecord.schemaMetadata.getter()
{
  sub_25F6784CC();
  uint64_t v46 = sub_25F70E470();
  uint64_t v0 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46, v1);
  sub_25F674D94();
  uint64_t v42 = v2;
  uint64_t v44 = sub_25F70E420();
  sub_25F67CA24();
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v4, v5);
  sub_25F674D94();
  uint64_t v41 = v6;
  sub_25F67ACD8(&qword_26B39DE40);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v45 = v0;
  unint64_t v8 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F716AF0;
  unint64_t v43 = v8;
  swift_getKeyPath();
  *(void *)&long long v48 = 0;
  *((void *)&v48 + 1) = 0xE000000000000000;
  sub_25F70E4D0();
  swift_allocObject();
  sub_25F676324();
  sub_25F67AF7C(&qword_26B39DDF0, MEMORY[0x263F181D0]);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v49 + 1) = sub_25F70DF30();
  sub_25F677CCC((uint64_t *)&v48);
  sub_25F70DF20();
  sub_25F679EAC();
  uint64_t v9 = sub_25F676324();
  sub_25F67D93C(v9);
  sub_25F70E460();
  swift_getKeyPath();
  long long v48 = 0u;
  long long v49 = 0u;
  sub_25F67ACD8(&qword_26B39DE48);
  uint64_t v10 = sub_25F70E4C0();
  sub_25F6768F0(v10);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F710D20;
  sub_25F67ACD8(&qword_26B39DDE0);
  sub_25F70E4B0();
  sub_25F679EAC();
  uint64_t v11 = sub_25F677F0C();
  sub_25F67D93C(v11);
  sub_25F70E460();
  swift_getKeyPath();
  long long v48 = 0u;
  long long v49 = 0u;
  sub_25F679EAC();
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v13 = sub_25F676324();
  sub_25F672A8C(v13);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v49 + 1) = sub_25F67ACD8(&qword_26B39DE00);
  *(void *)&long long v48 = v12;
  (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v41, *MEMORY[0x263F18188], v44);
  swift_getKeyPath();
  sub_25F70E430();
  swift_allocObject();
  sub_25F70E440();
  sub_25F67AF7C(&qword_26B39DDE8, MEMORY[0x263F181A0]);
  sub_25F70E460();
  swift_getKeyPath();
  uint64_t v14 = MEMORY[0x263F8E4F0];
  *((void *)&v49 + 1) = MEMORY[0x263F8E4F0];
  LOWORD(v48) = 0;
  sub_25F679EAC();
  uint64_t v15 = sub_25F676324();
  sub_25F672A8C(v15);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v49 + 1) = v14;
  LOWORD(v48) = 1;
  sub_25F679EAC();
  uint64_t v47 = sub_25F676324();
  sub_25F6E6914();
  sub_25F70E460();
  swift_getKeyPath();
  uint64_t v16 = sub_25F70E530();
  *((void *)&v49 + 1) = sub_25F67ACD8(&qword_26B39DDF8);
  *(void *)&long long v48 = v16;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F710D20;
  type metadata accessor for RawDictionaryTransformer();
  sub_25F70E4B0();
  sub_25F679EAC();
  uint64_t v17 = sub_25F677F0C();
  sub_25F672A8C(v17);
  sub_25F70E460();
  swift_getKeyPath();
  long long v48 = 0u;
  long long v49 = 0u;
  sub_25F67ACD8(&qword_26B39DF58);
  uint64_t v18 = sub_25F67ACD8(&qword_26B39DED8);
  sub_25F67CA24();
  uint64_t v20 = v19;
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_25F712E90;
  uint64_t v23 = (uint64_t *)(v22 + v21);
  sub_25F67ACD8(&qword_26B39DE58);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F711040;
  uint64_t KeyPath = swift_getKeyPath();
  sub_25F672AE8(KeyPath);
  *uint64_t v23 = v47;
  uint64_t v25 = *(void (**)(void))(v20 + 104);
  ((void (*)(uint64_t *, void, uint64_t))v25)(v23, *MEMORY[0x263F181B8], v18);
  uint64_t v26 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v26);
  uint64_t v27 = swift_getKeyPath();
  sub_25F672AE8(v27);
  uint64_t v28 = sub_25F67D120();
  v25(v28);
  uint64_t v29 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v29);
  uint64_t v30 = swift_getKeyPath();
  sub_25F672AE8(v30);
  uint64_t v31 = sub_25F67D120();
  v25(v31);
  unint64_t v32 = (__n128 *)sub_25F6857DC();
  sub_25F672978(v32);
  uint64_t v33 = swift_getKeyPath();
  sub_25F672AE8(v33);
  unint64_t v34 = sub_25F67D120();
  v25(v34);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_25F712EA0;
  *(void *)(v35 + 32) = swift_getKeyPath();
  *(void *)(v35 + 40) = swift_getKeyPath();
  sub_25F70E930();
  uint64_t v36 = sub_25F67D120();
  v25(v36);
  sub_25F67ACD8(&qword_26B39DF28);
  swift_allocObject();
  sub_25F70E480();
  sub_25F681778(&qword_26B39DF20, &qword_26B39DF28);
  sub_25F6E6914();
  sub_25F70E460();
  uint64_t v37 = sub_25F67356C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v39 = *(void *)(v37 + 16);
  unint64_t v38 = *(void *)(v37 + 24);
  if (v39 >= v38 >> 1) {
    uint64_t v37 = sub_25F67356C(v38 > 1, v39 + 1, 1, v37);
  }
  *(void *)(v37 + 16) = v39 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 32))(v37 + v43 + v39 * v7, v42, v46);
  sub_25F6790F4();
  sub_25F67865C();
}

uint64_t sub_25F672958()
{
  return sub_25F70F1D0();
}

__n128 sub_25F672978(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 192);
  a1[1] = result;
  return result;
}

uint64_t sub_25F672988()
{
  return swift_dynamicCast();
}

__n128 *sub_25F6729B0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  *(void *)(v2 - 128) = 0;
  *(void *)(v2 - 120) = 0xE000000000000000;
  return result;
}

void sub_25F6729C4()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_25F672A30()
{
  return sub_25F70F200();
}

uint64_t sub_25F672A70()
{
  return v0;
}

uint64_t sub_25F672A8C(uint64_t result)
{
  *(void *)(v1 - 168) = result;
  return result;
}

uint64_t sub_25F672AA0()
{
  return v0;
}

uint64_t sub_25F672AB4()
{
  return swift_beginAccess();
}

uint64_t sub_25F672AE8(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  *(void *)(v2 - 168) = v1;
  return sub_25F70E930();
}

uint64_t sub_25F672B04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F672B24()
{
  return v0 + v1;
}

uint64_t sub_25F672B3C()
{
  return sub_25F70F070();
}

uint64_t sub_25F672B68()
{
  return v0 - 80;
}

uint64_t sub_25F672B7C()
{
  return swift_task_alloc();
}

uint64_t sub_25F672B9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = result;
  void v6[4] = a2;
  return result;
}

uint64_t sub_25F672BB0()
{
  return swift_dynamicCast();
}

uint64_t sub_25F672BD0()
{
  *(unsigned char *)(v0 - 96) = 1;
  return sub_25F70E570();
}

uint64_t sub_25F672C08(uint64_t a1)
{
  return a1 - 8;
}

__n128 sub_25F672C14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_25F672C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 176) = (char *)&a9 - v9;
}

uint64_t sub_25F672C48()
{
  return sub_25F70EA30();
}

uint64_t sub_25F672C60@<X0>(uint64_t a1@<X8>)
{
  return sub_25F685FA4(0xD000000000000011, (a1 - 32) | 0x8000000000000000, v1);
}

uint64_t sub_25F672C88(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  unint64_t v7 = a5 & 0xFFFF0000FFFFLL | 0xAC000000205D0000;
  return sub_25F6F73E4(a1, a2, a3, a4, v7, a6);
}

uint64_t sub_25F672CA0()
{
  return sub_25F70E570();
}

uint64_t sub_25F672CC0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_25F67B010(a2, (uint64_t)va);
}

uint64_t sub_25F672CE0()
{
  return sub_25F70E090();
}

uint64_t static CoreEventRecord.schemaMetadata.getter()
{
  uint64_t v42 = sub_25F70E470();
  uint64_t v0 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42, v1);
  sub_25F674D94();
  uint64_t v36 = v2;
  uint64_t v39 = sub_25F70E420();
  sub_25F67CA24();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674D94();
  uint64_t v35 = v7;
  sub_25F67ACD8(&qword_26B39DE40);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v41 = v0;
  unint64_t v9 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25F712E90;
  unint64_t v37 = v9;
  uint64_t v38 = v10;
  swift_getKeyPath();
  *(void *)&long long v43 = 0;
  *((void *)&v43 + 1) = 0xE000000000000000;
  sub_25F70E4D0();
  swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25F676324();
  sub_25F6740CC((uint64_t)&unk_26B39DDF0);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v44 + 1) = sub_25F70DF30();
  sub_25F677CCC((uint64_t *)&v43);
  sub_25F70DF20();
  swift_allocObject();
  uint64_t v12 = v11;
  uint64_t v13 = sub_25F676324();
  sub_25F672A8C(v13);
  sub_25F70E460();
  swift_getKeyPath();
  uint64_t v14 = sub_25F67ACD8(&qword_26B39DE00);
  *((void *)&v44 + 1) = v14;
  *(void *)&long long v43 = v12;
  uint64_t v15 = *MEMORY[0x263F18188];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  v16(v35, v15, v39);
  sub_25F70E430();
  swift_allocObject();
  sub_25F67DFCC();
  sub_25F70E440();
  sub_25F6740CC((uint64_t)&unk_26B39DDE8);
  sub_25F70E460();
  swift_getKeyPath();
  *((void *)&v44 + 1) = v14;
  *(void *)&long long v43 = MEMORY[0x263F8EE78];
  v16(v35, v15, v39);
  swift_getKeyPath();
  swift_allocObject();
  sub_25F67DFCC();
  sub_25F70E440();
  sub_25F70E460();
  uint64_t v40 = v8;
  swift_getKeyPath();
  uint64_t v17 = sub_25F70E530();
  *((void *)&v44 + 1) = sub_25F67ACD8(&qword_26B39DDF8);
  *(void *)&long long v43 = v17;
  sub_25F67ACD8(&qword_26B39DE48);
  uint64_t v18 = sub_25F70E4C0();
  sub_25F6768F0(v18);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_25F710D20;
  type metadata accessor for RawDictionaryTransformer();
  sub_25F70E4B0();
  swift_allocObject();
  uint64_t v19 = sub_25F70E4E0();
  sub_25F672A8C(v19);
  sub_25F70E460();
  swift_getKeyPath();
  long long v43 = 0u;
  long long v44 = 0u;
  sub_25F67ACD8(&qword_26B39DF40);
  sub_25F67ACD8(&qword_26B39DEC0);
  sub_25F67CA24();
  uint64_t v21 = v20;
  uint64_t v23 = *(void *)(v22 + 72);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_25F710D00;
  uint64_t v26 = (uint64_t *)(v25 + v24);
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25F711040;
  *(void *)(v27 + 32) = swift_getKeyPath();
  sub_25F70E930();
  *uint64_t v26 = v27;
  uint64_t v28 = *(void (**)(void))(v21 + 104);
  sub_25F67E348();
  v28();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_25F711040;
  *(void *)(v29 + 32) = swift_getKeyPath();
  sub_25F70E930();
  *(uint64_t *)((char *)v26 + v23) = v29;
  sub_25F67E348();
  v28();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_25F712EA0;
  *(void *)(v30 + 32) = swift_getKeyPath();
  *(void *)(v30 + 40) = swift_getKeyPath();
  sub_25F70E930();
  *(uint64_t *)((char *)v26 + 2 * v23) = v30;
  sub_25F67E348();
  v28();
  sub_25F67ACD8(&qword_26B39DEF8);
  swift_allocObject();
  sub_25F70E480();
  sub_25F682540((uint64_t)&unk_26B39DEF0);
  sub_25F70E460();
  uint64_t v31 = sub_25F67356C(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v33 = *(void *)(v31 + 16);
  unint64_t v32 = *(void *)(v31 + 24);
  if (v33 >= v32 >> 1) {
    uint64_t v31 = sub_25F67356C(v32 > 1, v33 + 1, 1, v31);
  }
  *(void *)(v31 + 16) = v33 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 32))(v31 + v37 + v33 * v40, v36, v42);
  sub_25F6790F4();
  return v38;
}

uint64_t sub_25F67356C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25F678090(a1, a2, a3, a4, &qword_26B39DE40, MEMORY[0x263F181B0], MEMORY[0x263F181B0], MEMORY[0x263F181B0]);
}

uint64_t type metadata accessor for RawDictionaryTransformer()
{
  return self;
}

uint64_t sub_25F6735D8()
{
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[7];
  swift_beginAccess();
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_25F67A2DC(v1, v3);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v6(v3, v5);
  sub_25F673D98();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25F70E3C0();
  int v8 = sub_25F67D9DC(v2, 1, v7);
  sub_25F673A7C(v2);
  if (v8 == 1)
  {
    uint64_t v9 = v0[5];
    uint64_t v11 = (char *)v1[3];
    uint64_t v10 = v1[4];
    uint64_t v12 = sub_25F67A2DC((void *)v0[6], (uint64_t)v11);
    type metadata accessor for CoreParameterRecord();
    sub_25F673790((uint64_t)v12, v9, v11, v10);
    swift_release();
  }
  swift_task_dealloc();
  sub_25F6759EC();
  return v13();
}

char *sub_25F673790(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v39 = a2;
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8, v8);
  unint64_t v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = sub_25F70E3C0();
  sub_25F67CA24();
  uint64_t v38 = v15;
  MEMORY[0x270FA5388](v16, v17);
  sub_25F6759BC();
  uint64_t v36 = v19 - v18;
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v35 = a4;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 16);
  swift_retain();
  v21(a3, v20);
  unint64_t v34 = a3;
  sub_25F673D98();
  swift_bridgeObjectRelease();
  swift_release();
  if (sub_25F67D9DC((uint64_t)v13, 1, v14) == 1)
  {
    sub_25F673A7C((uint64_t)v13);
    uint64_t v13 = v34;
    uint64_t v22 = ((uint64_t (*)(char *, uint64_t))v21)(v34, v20);
    uint64_t v23 = v40;
    uint64_t v25 = sub_25F684160(v22, v24, a1, v39, (uint64_t)v13, v35);
    if (!v23) {
      uint64_t v13 = (char *)v25;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = v38;
    uint64_t v27 = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v36, v13, v14);
    uint64_t v28 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v37, v27, v14);
    sub_25F674004(v28, 0, 1, v14);
    uint64_t v29 = v40;
    sub_25F680044();
    if (!v29) {
      uint64_t v13 = v30;
    }
    sub_25F673A7C(v28);
    uint64_t v31 = sub_25F672AA0();
    v32(v31);
  }
  return v13;
}

uint64_t sub_25F673A7C(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DF68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void Dictionary.subscript.getter()
{
  sub_25F6784CC();
  uint64_t v41 = v1;
  uint64_t v42 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v39 = v8;
  uint64_t v43 = v9;
  sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v37 = v11;
  uint64_t v38 = v10;
  sub_25F67869C();
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v40 = v5;
  sub_25F70ECF0();
  sub_25F675994();
  sub_25F67869C();
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v18 = sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v20 = v19;
  sub_25F67869C();
  MEMORY[0x270FA5388](v21, v22);
  uint64_t v24 = (char *)&v36 - v23;
  sub_25F67C9A8();
  uint64_t v26 = v25;
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v30 = (char *)&v36 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F676B30();
  v31();
  if (sub_25F67D9DC((uint64_t)v24, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v18);
    uint64_t v32 = 1;
LABEL_6:
    uint64_t v35 = v43;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v24, v7);
  MEMORY[0x2611FB180](v30, v39, v7, v40, v41);
  sub_25F67B2DC();
  sub_25F6796B4();
  v33();
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v32 = 1;
    sub_25F674E68((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
    goto LABEL_6;
  }
  sub_25F674004((uint64_t)v15, 0, 1, v3);
  sub_25F675994();
  uint64_t v35 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v43, v15, v3);
  uint64_t v32 = 0;
LABEL_7:
  sub_25F674004(v35, v32, 1, v3);
  sub_25F67865C();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  void v21[2];

  sub_25F6784CC();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_25F70ECF0();
  sub_25F67C9A8();
  sub_25F67869C();
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)v21 - v12;
  sub_25F70ECF0();
  sub_25F675994();
  sub_25F67869C();
  MEMORY[0x270FA5388](v14, v15);
  if (v7)
  {
    v21[0] = AnyKeyPath.stringValue.getter();
    v21[1] = v16;
    MEMORY[0x2611FB180](v21, v5, MEMORY[0x263F8D310], v3, MEMORY[0x263F8D320]);
    swift_bridgeObjectRelease();
    if (swift_dynamicCast())
    {
      sub_25F674004((uint64_t)v13, 0, 1, v1);
      sub_25F675994();
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v9, v13, v1);
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = 1;
      sub_25F674E68((uint64_t)v13);
      uint64_t v19 = sub_25F67B2DC();
      v20(v19);
    }
  }
  else
  {
    uint64_t v18 = 1;
  }
  sub_25F674004(v9, v18, 1, v1);
  sub_25F67865C();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void);
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_25F6784CC();
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v29 = v10;
  uint64_t v30 = v9;
  sub_25F67869C();
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v17 = v16;
  sub_25F67869C();
  MEMORY[0x270FA5388](v18, v19);
  uint64_t v21 = (char *)&v29 - v20;
  sub_25F67C9A8();
  uint64_t v23 = v22;
  MEMORY[0x270FA5388](v24, v25);
  sub_25F677E8C();
  sub_25F676B30();
  v26();
  if (sub_25F67D9DC((uint64_t)v21, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v15);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v0, v21, v6);
    MEMORY[0x2611FB180](v0, v31, v6, v4, v32);
    if (sub_25F67D9DC((uint64_t)v14, 1, v4) != 1)
    {
      *(void *)(v8 + 24) = v4;
      sub_25F677CCC((uint64_t *)v8);
      sub_25F675994();
      (*(void (**)(void))(v28 + 32))();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v6);
      goto LABEL_7;
    }
    sub_25F6796B4();
    v27();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
  }
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
LABEL_7:
  sub_25F67865C();
}

void sub_25F673D98()
{
  sub_25F67CB2C();
  uint64_t v1 = (uint64_t *)sub_25F67DFFC();
  sub_25F673DD8(v1, v2);
  os_unfair_lock_unlock(v0);
}

uint64_t sub_25F673DD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F673DF4(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_25F673DF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25F673E14(a1, *a2, a2[1], a3);
}

uint64_t sub_25F673E14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v6 = sub_25F67AD88(a2, a3), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = sub_25F70E3C0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * v8, v10);
    uint64_t v11 = a4;
    uint64_t v12 = 0;
    uint64_t v13 = v10;
  }
  else
  {
    uint64_t v13 = sub_25F70E3C0();
    uint64_t v11 = a4;
    uint64_t v12 = 1;
  }
  return sub_25F674004(v11, v12, 1, v13);
}

uint64_t Array.first<A>(of:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25F70ECF0();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F70E9F0();
  swift_getWitnessTable();
  sub_25F70E860();
  int v6 = swift_dynamicCast();
  return sub_25F674004(a2, v6 ^ 1u, 1, a1);
}

uint64_t sub_25F674004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t CoreEventRecord.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  sub_25F674D7C();
  sub_25F67A28C(v3);
  sub_25F675D18(a1, v3);
  return swift_endAccess();
}

uint64_t CoreEventRecord.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25F67B010(v1 + 24, a1);
}

unint64_t sub_25F6740CC(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F674110@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_25F6749B8(a1, (uint64_t)&v72);
  if (!v73)
  {
    sub_25F674958(a1);
    uint64_t result = sub_25F674958((uint64_t)&v72);
    goto LABEL_33;
  }
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  sub_25F675D18(&v72, (uint64_t)v74);
  uint64_t v4 = v75;
  uint64_t v5 = v76;
  int v6 = sub_25F67A2DC(v74, v75);
  uint64_t v67 = &v59;
  char v7 = *(void **)(v4 - 8);
  uint64_t v8 = v7[8];
  MEMORY[0x270FA5388](v6, v6);
  uint64_t v9 = (char *)((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))v7[2];
  ((void (*)(int64_t))v10)((char *)&v59 - v9);
  uint64_t v11 = sub_25F67E760();
  char v12 = v11;
  uint64_t v66 = &v59;
  MEMORY[0x270FA5388](v11, v13);
  sub_25F67CB80();
  v10();
  uint64_t v70 = v7;
  if ((v12 & 1) == 0)
  {
    uint64_t v23 = sub_25F67665C();
    ((void (*)(uint64_t))v9)(v23);
    goto LABEL_21;
  }
  uint64_t v14 = sub_25F67694C();
  uint64_t v15 = sub_25F67665C();
  uint64_t v16 = ((uint64_t (*)(uint64_t))v9)(v15);
  if (v14 <= 64) {
    goto LABEL_21;
  }
  uint64_t v65 = v7;
  MEMORY[0x270FA5388](v16, v17);
  sub_25F67CB80();
  v10();
  *(void *)&long long v72 = 0x8000000000000000;
  if (sub_25F67E760())
  {
    uint64_t v18 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = sub_25F67694C();
    if (v19 >= 64)
    {
      uint64_t v64 = &v59;
      MEMORY[0x270FA5388](v19, v20);
      sub_25F675AD8();
      uint64_t v63 = &v59;
      sub_25F6CA904();
      sub_25F67E3C4();
      sub_25F70E660();
      uint64_t v21 = sub_25F67D664();
      ((void (*)(uint64_t))v9)(v21);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      goto LABEL_12;
    }
LABEL_15:
    uint64_t v28 = sub_25F676398();
    sub_25F67D020();
    uint64_t result = ((uint64_t (*)(void))v9)();
    if (v28 < (uint64_t)v72) {
      goto LABEL_37;
    }
    goto LABEL_21;
  }
  uint64_t v18 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v24 = sub_25F67E760();
  uint64_t v64 = (uint64_t *)v18;
  uint64_t v25 = sub_25F67694C();
  if ((v24 & 1) == 0)
  {
    if (v25 >= 64)
    {
      ((void (*)(uint64_t *, uint64_t))v9)(v64, v4);
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v63 = &v59;
  if (v25 > 64)
  {
    uint64_t v62 = &v59;
    MEMORY[0x270FA5388](v25, v26);
    sub_25F6CA904();
    sub_25F67E3C4();
    sub_25F67D398();
    uint64_t v27 = sub_25F67D664();
    ((void (*)(uint64_t))v9)(v27);
    uint64_t result = ((uint64_t (*)(uint64_t *, uint64_t))v9)(&v59, v4);
LABEL_12:
    if (v18) {
      goto LABEL_37;
    }
LABEL_21:
    uint64_t v40 = sub_25F67694C();
    uint64_t v65 = &v59;
    MEMORY[0x270FA5388](v40, v41);
    sub_25F675AD8();
    sub_25F67CB80();
    v10();
    if (v40 < 65)
    {
      uint64_t v44 = sub_25F67694C();
      sub_25F675ACC();
      ((void (*)(void))v9)();
      if (v44 != 64) {
        goto LABEL_32;
      }
      uint64_t v42 = sub_25F67E760();
      if (v42) {
        goto LABEL_32;
      }
    }
    else
    {
      sub_25F675ACC();
      uint64_t v42 = ((uint64_t (*)(void))v9)();
    }
    MEMORY[0x270FA5388](v42, v43);
    uint64_t v45 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_25F67CB80();
    v10();
    *(void *)&long long v72 = 0x7FFFFFFFFFFFFFFFLL;
    char v46 = sub_25F67E760();
    uint64_t v47 = sub_25F67694C();
    if (v46)
    {
      if (v47 > 64)
      {
        MEMORY[0x270FA5388](v47, v48);
        sub_25F675AD8();
        uint64_t v51 = v49 - v50;
        sub_25F6CA904();
        sub_25F67E3C4();
        char v52 = sub_25F70E660();
        ((void (*)(uint64_t, uint64_t))v9)(v51, v4);
        ((void (*)(char *, uint64_t))v9)(v45, v4);
        if (v52) {
          goto LABEL_35;
        }
        goto LABEL_32;
      }
    }
    else if (v47 > 63)
    {
      uint64_t v64 = &v59;
      uint64_t v71 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x270FA5388](v47, v48);
      uint64_t v53 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v54 = ((uint64_t (*)(char *, char *, uint64_t))v70[4])(v53, v53, v4);
      MEMORY[0x270FA5388](v54, v55);
      sub_25F6CA904();
      sub_25F67E3C4();
      char v56 = sub_25F70E660();
      ((void (*)(char *, uint64_t))v9)(v53, v4);
      ((void (*)(char *, uint64_t))v9)(v53, v4);
      if (v56)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
LABEL_32:
      unint64_t v57 = sub_25F676398();
      sub_25F675ACC();
      ((void (*)(void))v9)();
      sub_25F674958(v68);
      CoreRule.Category.init(rawValue:)(v57, (char *)&v72);
      int v58 = v72;
      uint64_t result = sub_25F67A28C((uint64_t)v74);
      a2 = v69;
      if (v58 != 6)
      {
LABEL_34:
        *a2 = v58;
        return result;
      }
LABEL_33:
      LOBYTE(v58) = 6;
      goto LABEL_34;
    }
    sub_25F676398();
    sub_25F675ACC();
    ((void (*)(void))v9)();
    goto LABEL_32;
  }
  uint64_t v61 = *(void *)(*(void *)(v5 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = &v59;
  MEMORY[0x270FA5388](AssociatedTypeWitness, v30);
  uint64_t v32 = (char *)&v59 - v31;
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = sub_25F70F4F0();
  uint64_t v59 = (uint64_t)&v59;
  MEMORY[0x270FA5388](v33, v34);
  sub_25F675AD8();
  uint64_t v60 = v35;
  sub_25F70F310();
  LODWORD(v61) = sub_25F67D398();
  sub_25F67D020();
  uint64_t v36 = ((uint64_t (*)(void))v9)();
  uint64_t v62 = &v59;
  MEMORY[0x270FA5388](v36, v37);
  ((void (*)(char *, char *, uint64_t))v70[4])((char *)&v59 - v60, v32, v4);
  if ((v61 & 1) == 0)
  {
    uint64_t v38 = v72;
    uint64_t v39 = sub_25F676398();
    sub_25F67D020();
    uint64_t result = ((uint64_t (*)(void))v9)();
    if (v39 < v38) {
      goto LABEL_37;
    }
    goto LABEL_21;
  }
LABEL_36:
  sub_25F67D020();
  uint64_t result = ((uint64_t (*)(void))v9)();
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25F674958(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39D5F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F6749B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CoreTip.ConstellationText.encode(to:)()
{
  sub_25F672A18();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CE60);
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675B10();
  sub_25F67CC78();
  sub_25F67A2DC(v3, v3[3]);
  sub_25F67724C();
  sub_25F70F660();
  sub_25F6775D4();
  sub_25F70F2A0();
  if (!v0)
  {
    sub_25F70F230();
    sub_25F679EDC();
    sub_25F674E04();
    sub_25F675EAC();
    sub_25F677588();
    sub_25F67E45C();
    sub_25F67ACD8(&qword_26B39D058);
    sub_25F6771DC(&qword_26B39CE48, (void (*)(void))sub_25F695368);
    sub_25F70F260();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25F675E04();
}

void sub_25F674C6C()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26B39DF88);
    uint64_t v5 = (const void *)swift_allocObject();
    sub_25F68C608(v5);
    sub_25F677E80(v6 / 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_25F674D70();
    sub_25F677718(v7, v8, v9);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v10 = sub_25F676908();
    sub_25F677620(v10, v11, v12, v13);
  }
}

uint64_t _sSQ10TipKitCoreE10isNotEqual_12checkReverseSbypSg_SbtFfA0__0()
{
  return 1;
}

uint64_t sub_25F674D34()
{
  return sub_25F70E570();
}

uint64_t sub_25F674D70()
{
  return v0 + 32;
}

uint64_t sub_25F674D7C()
{
  return swift_beginAccess();
}

uint64_t sub_25F674DA8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(v5 - 160) = result;
  *(void *)(v5 - 152) = v4;
  *(void *)(v5 - 168) = a3;
  *(_DWORD *)(v5 - 180) = a2;
  *(void *)(v5 - 208) = a4;
  return result;
}

uint64_t sub_25F674DEC()
{
  return v0;
}

uint64_t sub_25F674DF8()
{
  return v0;
}

uint64_t sub_25F674E18(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_25F674E24()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F674E58()
{
  return v0;
}

uint64_t sub_25F674E68(uint64_t a1)
{
  return sub_25F674004(a1, 1, 1, v1);
}

uint64_t sub_25F674E84(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return sub_25F6F7E50(a1, a2, 20, 0x69726320A280E220, 0xAF205D6C61636974, a6);
}

uint64_t sub_25F674EB8()
{
  return v0;
}

uint64_t sub_25F674ED0()
{
  return sub_25F70DF90();
}

uint64_t sub_25F674EEC()
{
  return v0;
}

uint64_t sub_25F674F00()
{
  return v0;
}

uint64_t sub_25F674F30()
{
  return sub_25F70F200();
}

uint64_t sub_25F674F60()
{
  return swift_allocObject();
}

uint64_t sub_25F674F8C()
{
  return v0;
}

uint64_t sub_25F674FA4()
{
  return sub_25F70ED90();
}

uint64_t sub_25F674FCC()
{
  return swift_allocObject();
}

void _s10TipKitCore0cA0C17ConstellationTextV4typeAE11ContentTypeOvg_0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_25F674FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return sub_25F68C2F0(a9, a10);
}

uint64_t sub_25F675010()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F67502C()
{
  return v0 - 80;
}

uint64_t sub_25F675044(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return sub_25F6F73E4(a1, a2, 18, 0x746F6E20A280E220, 0xAD0000205D656369, a6);
}

uint64_t sub_25F675078()
{
  return *(void *)(v0 + 144);
}

uint64_t sub_25F675090()
{
  return v0;
}

uint64_t sub_25F6750C0()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_25F6750CC(uint64_t a1)
{
  sub_25F675D30(a1, (uint64_t)&v92, &qword_26B39D5F0);
  if (!v93)
  {
    sub_25F675D8C(a1, &qword_26B39D5F0);
    sub_25F675D8C((uint64_t)&v92, &qword_26B39D5F0);
    return 4;
  }
  unint64_t v87 = (uint64_t *)a1;
  sub_25F675D18(&v92, (uint64_t)v94);
  uint64_t v2 = v95;
  uint64_t v3 = v96;
  sub_25F67A2DC(v94, v95);
  uint64_t v86 = &v79;
  sub_25F67C9A8();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v8, v9);
  unint64_t v10 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = *(void (**)(void))(v5 + 16);
  sub_25F674FBC();
  v11();
  uint64_t v12 = sub_25F67D07C();
  char v13 = v12;
  uint64_t v85 = &v79;
  MEMORY[0x270FA5388](v12, v14);
  v88 = (uint64_t *)((char *)&v79 - v10);
  v89 = (uint64_t *)v11;
  sub_25F674FBC();
  v11();
  uint64_t v90 = v5;
  if ((v13 & 1) == 0)
  {
    uint64_t v16 = *(uint64_t (**)(void))(v5 + 8);
    ((void (*)(char *, uint64_t))v16)((char *)&v79 - v10, v2);
    goto LABEL_10;
  }
  uint64_t v15 = sub_25F675B28();
  uint64_t v16 = *(uint64_t (**)(void))(v5 + 8);
  sub_25F6769DC();
  uint64_t v17 = v16();
  if (v15 <= 64)
  {
LABEL_10:
    uint64_t v29 = (uint64_t)v87;
    goto LABEL_25;
  }
  uint64_t v19 = MEMORY[0x270FA5388](v17, v18);
  sub_25F6795E8(v19, v20, v21, v22, v23, v24, v25, v26, v79);
  sub_25F674FBC();
  v27();
  *(void *)&long long v92 = 0x8000000000000000;
  char v28 = sub_25F67D07C();
  uint64_t v29 = (uint64_t)v87;
  if (v28)
  {
    uint64_t v30 = sub_25F675B28();
    if (v30 >= 64)
    {
      uint64_t v84 = &v79;
      MEMORY[0x270FA5388](v30, v31);
      sub_25F676440();
      uint64_t v82 = &v79;
      sub_25F6CA904();
      sub_25F67D424();
      char v41 = sub_25F6792B4();
      sub_25F6769DC();
      v16();
      sub_25F6769DC();
      uint64_t result = v16();
      if (v41) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v32 = sub_25F674FA4();
      sub_25F6769DC();
      uint64_t result = v16();
      if (v32 < (uint64_t)v92) {
        goto LABEL_40;
      }
    }
LABEL_25:
    uint64_t v53 = sub_25F675B28();
    v88 = &v79;
    MEMORY[0x270FA5388](v53, v54);
    sub_25F676440();
    sub_25F674DC0();
    v55();
    if (v53 < 65)
    {
      uint64_t v53 = sub_25F675B28();
      sub_25F675ACC();
      v16();
      if (v53 != 64) {
        goto LABEL_36;
      }
      uint64_t v56 = sub_25F67D07C();
      if (v56) {
        goto LABEL_36;
      }
    }
    else
    {
      sub_25F675ACC();
      uint64_t v56 = v16();
    }
    uint64_t v58 = MEMORY[0x270FA5388](v56, v57);
    sub_25F6795E8(v58, v59, v60, v61, v62, v63, v64, v65, v79);
    sub_25F674DC0();
    v66();
    *(void *)&long long v92 = 0x7FFFFFFFFFFFFFFFLL;
    char v67 = sub_25F67D07C();
    uint64_t v68 = sub_25F675B28();
    if (v67)
    {
      if (v68 > 64)
      {
        v89 = &v79;
        MEMORY[0x270FA5388](v68, v69);
        sub_25F676440();
        uint64_t v72 = v70 - v71;
        sub_25F6CA904();
        sub_25F67D424();
        char v73 = sub_25F6792B4();
        ((void (*)(uint64_t, uint64_t))v16)(v72, v2);
        ((void (*)(uint64_t, uint64_t))v16)(v53, v2);
        if (v73) {
          goto LABEL_38;
        }
        goto LABEL_36;
      }
    }
    else if (v68 > 63)
    {
      unint64_t v87 = &v79;
      uint64_t v91 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x270FA5388](v68, v69);
      uint64_t v74 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      v89 = &v79;
      uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 32))(v74, v53, v2);
      MEMORY[0x270FA5388](v75, v76);
      sub_25F6CA904();
      sub_25F67D424();
      char v77 = sub_25F70E660();
      ((void (*)(char *, uint64_t))v16)(v74, v2);
      ((void (*)(char *, uint64_t))v16)(v74, v2);
      if (v77)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      goto LABEL_36;
    }
    sub_25F674FA4();
    sub_25F675ACC();
    v16();
LABEL_36:
    unint64_t v78 = sub_25F674FA4();
    sub_25F675ACC();
    v16();
    sub_25F675D8C(v29, &qword_26B39D5F0);
    unint64_t v34 = CoreTip.RecordStatus.init(rawValue:)(v78);
    sub_25F67A28C((uint64_t)v94);
    return v34;
  }
  uint64_t v84 = (uint64_t *)(v5 + 8);
  uint64_t v35 = v15;
  char v36 = sub_25F67D07C();
  uint64_t v83 = v35;
  uint64_t v37 = sub_25F675B28();
  if ((v36 & 1) == 0)
  {
    if (v37 >= 64)
    {
      ((void (*)(uint64_t, uint64_t))v16)(v83, v2);
    }
    else
    {
      uint64_t v42 = sub_25F674FA4();
      sub_25F67CC04();
      uint64_t result = v16();
      if (v42 < (uint64_t)v92) {
        goto LABEL_40;
      }
    }
    goto LABEL_25;
  }
  uint64_t v82 = &v79;
  if (v37 > 64)
  {
    uint64_t v81 = &v79;
    MEMORY[0x270FA5388](v37, v38);
    sub_25F6CA904();
    sub_25F67D424();
    uint64_t v39 = v83;
    char v40 = sub_25F6792B4();
    ((void (*)(char *, uint64_t))v16)((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v16)(v39, v2);
    uint64_t v29 = (uint64_t)v87;
    if (v40) {
      goto LABEL_40;
    }
    goto LABEL_25;
  }
  uint64_t v80 = *(void *)(*(void *)(v3 + 24) + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v81 = &v79;
  sub_25F674D1C();
  MEMORY[0x270FA5388](v43, v44);
  swift_getAssociatedConformanceWitness();
  uint64_t v45 = sub_25F70F4F0();
  uint64_t v79 = (uint64_t)&v79;
  MEMORY[0x270FA5388](v45, v46);
  sub_25F70F310();
  uint64_t v47 = v83;
  LODWORD(v80) = sub_25F6792B4();
  sub_25F67CC04();
  uint64_t v48 = v16();
  uint64_t v81 = &v79;
  MEMORY[0x270FA5388](v48, v49);
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v2);
  if ((v80 & 1) == 0)
  {
    uint64_t v50 = v92;
    uint64_t v51 = sub_25F674FA4();
    sub_25F67CC04();
    uint64_t result = v16();
    BOOL v52 = v51 < v50;
    uint64_t v29 = (uint64_t)v87;
    if (v52) {
      goto LABEL_40;
    }
    goto LABEL_25;
  }
LABEL_39:
  sub_25F67CC04();
  uint64_t result = v16();
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_25F675974()
{
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_25F68D918(v0, v2);
}

uint64_t sub_25F6759EC()
{
  return v0 + 8;
}

uint64_t sub_25F6759F8()
{
  return v0;
}

uint64_t sub_25F675A10()
{
  return v0;
}

uint64_t sub_25F675A84()
{
  return v0;
}

char *sub_25F675AAC(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return (char *)a1 + v2;
}

uint64_t sub_25F675AE8()
{
  return v0;
}

double sub_25F675B00()
{
  *(void *)(v0 - 128) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t sub_25F675B28()
{
  return sub_25F70EDA0();
}

uint64_t sub_25F675B40()
{
  return sub_25F70E080();
}

uint64_t sub_25F675BA4()
{
  return sub_25F70F260();
}

uint64_t sub_25F675BD0()
{
  return sub_25F70F1C0();
}

uint64_t sub_25F675BF8()
{
  return v0;
}

uint64_t sub_25F675C0C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_25F675C20()
{
  return v0;
}

uint64_t sub_25F675C34()
{
  return swift_dynamicCast();
}

uint64_t sub_25F675C58()
{
  return sub_25F68B080();
}

uint64_t sub_25F675CB8()
{
  return sub_25F70E030();
}

uint64_t sub_25F675CD8()
{
  return sub_25F67D9DC(v0, 1, v1);
}

uint64_t sub_25F675CFC()
{
  return sub_25F70EDB0();
}

uint64_t sub_25F675D18(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25F675D30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67ACD8(a3);
  sub_25F674D1C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_25F675D8C(uint64_t a1, uint64_t *a2)
{
  sub_25F67ACD8(a2);
  sub_25F674D1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_25F675DF8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_25F675E1C()
{
  return v0;
}

uint64_t sub_25F675E8C(uint64_t a1)
{
  return sub_25F67D9DC(a1, 1, v1);
}

uint64_t sub_25F675EC0()
{
  return v0;
}

uint64_t sub_25F675ED8()
{
  return swift_dynamicCast();
}

__n128 sub_25F675F2C(__n128 *a1)
{
  *(void *)(v2 + 56) = a1;
  __n128 result = *(__n128 *)(v2 + 24);
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u64[1] = v1;
  a1[2] = result;
  return result;
}

uint64_t sub_25F675F44()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F675F60()
{
  return *(void *)(v0 + 88);
}

uint64_t CoreRule.Predicate.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_25F67ACD8(&qword_26B39D628);
  sub_25F67CA24();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F67EA8C();
  sub_25F70F660();
  LOBYTE(v16) = 0;
  sub_25F70F270();
  if (!v2)
  {
    char v12 = *(unsigned char *)(v3 + OBJC_IVAR___Predicate_argument + 16);
    long long v16 = *(_OWORD *)(v3 + OBJC_IVAR___Predicate_argument);
    char v17 = v12;
    char v15 = 1;
    sub_25F676C50();
    sub_25F676964();
    LOBYTE(v16) = *(unsigned char *)(v3 + OBJC_IVAR___Predicate_operation);
    char v15 = 2;
    sub_25F676C04();
    sub_25F676964();
    long long v16 = *(_OWORD *)(v3 + OBJC_IVAR___Predicate_rawdata);
    char v15 = 3;
    sub_25F676C9C();
    sub_25F6763B0();
    LOBYTE(v16) = 4;
    sub_25F676BB8();
    sub_25F6763B0();
    *(void *)&long long v16 = *(void *)(v3 + OBJC_IVAR___Predicate_queries);
    char v15 = 5;
    sub_25F67ACD8(&qword_26B39D5C8);
    sub_25F67EA20(&qword_26B39D5D0, &qword_26B39D5C8, (void (*)(void))sub_25F695CB8);
    sub_25F676674();
    sub_25F6763B0();
    *(void *)&long long v16 = *(void *)(v3 + OBJC_IVAR___Predicate_subpredicates);
    char v15 = 6;
    sub_25F67ACD8(&qword_26B39D5B0);
    sub_25F67EA20(&qword_26B39D5B8, &qword_26B39D5B0, (void (*)(void))sub_25F695D60);
    sub_25F676674();
    sub_25F6763B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_25F676270()
{
  uint64_t v2 = *(void *)(v0 - 104);
  return sub_25F68D918(v0 - 128, v2);
}

uint64_t sub_25F6762A8()
{
  return sub_25F70EEC0();
}

uint64_t sub_25F6762CC()
{
  return v0;
}

size_t sub_25F6762FC(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_25F676324()
{
  return sub_25F70E4E0();
}

void sub_25F676360()
{
  *(void *)(v1 - 104) = v0;
}

uint64_t sub_25F676374()
{
  return sub_25F70DFC0();
}

uint64_t sub_25F676398()
{
  return sub_25F70ED90();
}

uint64_t sub_25F6763B0()
{
  return sub_25F70F260();
}

uint64_t sub_25F6763C8()
{
  sub_25F67EFAC(v1, v0);
  return v2;
}

uint64_t sub_25F6763F8(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_25F6CDDAC(0, (char *)(v2 - 33), (uint64_t)va, v1);
}

uint64_t sub_25F676464()
{
  return v0;
}

uint64_t sub_25F676484()
{
  return v0;
}

uint64_t sub_25F67649C()
{
  return v0;
}

uint64_t sub_25F6764C4()
{
  return 0;
}

uint64_t sub_25F6764E0()
{
  return v0;
}

uint64_t sub_25F6764F8()
{
  return v0;
}

uint64_t sub_25F676528()
{
  return sub_25F680930(v1, v2, v0);
}

uint64_t sub_25F676558()
{
  return v0;
}

uint64_t sub_25F676578()
{
  *(void *)(v1 - 96) = v0;
  *(unsigned char *)(v1 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F6765A0()
{
  return sub_25F70ED20();
}

__n128 sub_25F6765CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_25F6765EC(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void *sub_25F6765FC(void *a1, uint64_t a2)
{
  return sub_25F67A2DC(a1, a2);
}

uint64_t sub_25F676624()
{
  *(void *)(v1 - 96) = v0;
  *(unsigned char *)(v1 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F67664C()
{
  return v0;
}

uint64_t sub_25F67665C()
{
  return v0;
}

uint64_t sub_25F676674()
{
  return v0 - 96;
}

uint64_t sub_25F676688()
{
  return sub_25F70F220();
}

uint64_t sub_25F6766B4()
{
  return v0;
}

void sub_25F6766CC(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_25F6766DC()
{
  return sub_25F70F1C0();
}

uint64_t sub_25F676700()
{
  return sub_25F70E570();
}

uint64_t sub_25F676730()
{
  return 0;
}

uint64_t sub_25F67674C()
{
  *(unsigned char *)(v0 - 104) = *(_DWORD *)(v0 - 252);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F676774()
{
  return *(void *)(v0 + 440);
}

void sub_25F676788()
{
  JUMPOUT(0x2611FB180);
}

uint64_t sub_25F6767B0()
{
  return swift_dynamicCast();
}

uint64_t sub_25F6767D0()
{
  return v0;
}

uint64_t sub_25F6767FC(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, v1, 0);
}

uint64_t sub_25F676808()
{
  return v0;
}

uint64_t sub_25F676824(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  return v1;
}

uint64_t sub_25F676848()
{
  return v0;
}

uint64_t sub_25F676860()
{
  return v0;
}

uint64_t sub_25F676874(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 128);
  return sub_25F674004(a1, 0, 1, v3);
}

uint64_t sub_25F676894()
{
  return v0 + 8;
}

uint64_t sub_25F6768A4()
{
  return v0;
}

uint64_t sub_25F6768D4()
{
  return sub_25F70E790();
}

uint64_t sub_25F6768F0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_25F676908()
{
  return 0;
}

uint64_t sub_25F676918()
{
  return v0;
}

uint64_t sub_25F676930()
{
  return swift_allocObject();
}

uint64_t sub_25F67694C()
{
  return sub_25F70EDA0();
}

uint64_t sub_25F676964()
{
  return sub_25F70F2A0();
}

uint64_t sub_25F676988()
{
  return v0;
}

uint64_t sub_25F67699C()
{
  return swift_dynamicCast();
}

uint64_t sub_25F6769B4()
{
  return sub_25F70F200();
}

uint64_t sub_25F6769EC()
{
  return swift_beginAccess();
}

uint64_t sub_25F676A14()
{
  return v0;
}

uint64_t sub_25F676A2C()
{
  return v0;
}

unint64_t sub_25F676A44(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_25F676A74()
{
  return swift_retain();
}

uint64_t sub_25F676A94()
{
  *(void *)(v2 - 104) = v1;
  *(unsigned char *)(v2 - 96) = v0 & 1;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F676AC0()
{
  return v0;
}

uint64_t sub_25F676AD8()
{
  return v0;
}

uint64_t sub_25F676AE4()
{
  return sub_25F70F260();
}

uint64_t sub_25F676B10()
{
  return swift_beginAccess();
}

uint64_t sub_25F676B54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F676B8C()
{
  return swift_task_alloc();
}

double sub_25F676BA4(double a1)
{
  return a1 * 60.0 * 60.0;
}

unint64_t sub_25F676BB8()
{
  unint64_t result = qword_26B39D568;
  if (!qword_26B39D568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D568);
  }
  return result;
}

unint64_t sub_25F676C04()
{
  unint64_t result = qword_26B39D548;
  if (!qword_26B39D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D548);
  }
  return result;
}

unint64_t sub_25F676C50()
{
  unint64_t result = qword_26B39D538;
  if (!qword_26B39D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D538);
  }
  return result;
}

unint64_t sub_25F676C9C()
{
  unint64_t result = qword_26B39D7E0;
  if (!qword_26B39D7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D7E0);
  }
  return result;
}

unint64_t CoreTip.RecordStatus.init(rawValue:)(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

void CoreTip.ConstellationText.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25F672A18();
  char v12 = v11;
  uint64_t v14 = v13;
  sub_25F67ACD8(&qword_26B39D0A0);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v15, v16);
  sub_25F67A2DC(v12, v12[3]);
  sub_25F67724C();
  sub_25F70F640();
  if (v10)
  {
    sub_25F67A28C((uint64_t)v12);
  }
  else
  {
    char v17 = v14;
    sub_25F67753C();
    sub_25F70F200();
    char v18 = v43;
    LOBYTE(v43) = 1;
    uint64_t v30 = sub_25F70F190();
    char v31 = v18;
    LOBYTE(v42[0]) = 2;
    uint64_t v20 = v19;
    sub_25F677298();
    sub_25F70E570();
    sub_25F70F1C0();
    uint64_t v25 = v20;
    uint64_t v26 = v43;
    uint64_t v39 = v44;
    uint64_t v40 = v45;
    uint64_t v41 = v46;
    uint64_t v32 = v48;
    uint64_t v28 = v49;
    uint64_t v29 = v47;
    uint64_t v27 = v50;
    uint64_t v38 = v52;
    uint64_t v36 = v51;
    uint64_t v37 = v53;
    sub_25F67ACD8(&qword_26B39D058);
    char v61 = 3;
    uint64_t v33 = v56;
    uint64_t v21 = v43;
    uint64_t v34 = v55;
    uint64_t v22 = v51;
    uint64_t v35 = v54;
    sub_25F6774C8(v43, v44);
    sub_25F6771DC(&qword_26B39D060, (void (*)(void))sub_25F69531C);
    sub_25F70F1C0();
    uint64_t v23 = sub_25F676A14();
    v24(v23);
    LOBYTE(v42[0]) = v31;
    v42[1] = v30;
    v42[2] = v25;
    v42[3] = v21;
    v42[4] = v39;
    v42[5] = v40;
    v42[6] = v41;
    v42[7] = v29;
    v42[8] = v32;
    v42[9] = v28;
    v42[10] = v27;
    v42[11] = v22;
    v42[12] = v38;
    v42[13] = v37;
    v42[14] = v35;
    v42[15] = v34;
    v42[16] = v33;
    v42[17] = a10;
    sub_25F677410((uint64_t)v42);
    sub_25F67739C(v26, v39);
    swift_bridgeObjectRelease();
    memcpy(v17, v42, 0x90uLL);
    sub_25F67A28C((uint64_t)v12);
    LOBYTE(v43) = v31;
    uint64_t v44 = v30;
    uint64_t v45 = v25;
    uint64_t v46 = v26;
    uint64_t v47 = v39;
    uint64_t v48 = v40;
    uint64_t v49 = v41;
    uint64_t v50 = v29;
    uint64_t v51 = v32;
    uint64_t v52 = v28;
    uint64_t v53 = v27;
    uint64_t v54 = v36;
    uint64_t v55 = v38;
    uint64_t v56 = v37;
    uint64_t v57 = v35;
    uint64_t v58 = v34;
    uint64_t v59 = v33;
    uint64_t v60 = a10;
    sub_25F6772E4((uint64_t)&v43);
  }
  sub_25F675E04();
}

uint64_t sub_25F6771DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(&qword_26B39D058);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F67724C()
{
  unint64_t result = qword_26B39CF40;
  if (!qword_26B39CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF40);
  }
  return result;
}

unint64_t sub_25F677298()
{
  unint64_t result = qword_26B39CFA0;
  if (!qword_26B39CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFA0);
  }
  return result;
}

uint64_t sub_25F6772E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_25F67739C(v4, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25F67739C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F677410(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 24);
  sub_25F70E570();
  sub_25F6774C8(v4, v3);
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6774C8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    return sub_25F70E570();
  }
  return result;
}

unint64_t sub_25F67753C()
{
  unint64_t result = qword_26B39CF60;
  if (!qword_26B39CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF60);
  }
  return result;
}

unint64_t sub_25F677588()
{
  unint64_t result = qword_26B39CD48;
  if (!qword_26B39CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD48);
  }
  return result;
}

unint64_t sub_25F6775D4()
{
  unint64_t result = qword_26B39CE20;
  if (!qword_26B39CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CE20);
  }
  return result;
}

uint64_t sub_25F677620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

char *sub_25F677718(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

uint64_t CoreParameterRecord.init(backingData:)(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_25F6762E8();
  uint64_t v6 = v5;
  uint64_t v7 = sub_25F70DF30();
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_25F672A58();
  *(void *)(v3 + 48) = sub_25F67ACD8(&qword_26B39D340);
  *(void *)&long long v10 = v6;
  *((void *)&v10 + 1) = v6;
  unint64_t v11 = sub_25F67B208((uint64_t)&qword_26B39DCB0);
  unint64_t v12 = v11;
  *(void *)(v3 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v3 + 24));
  sub_25F70E230();
  sub_25F67797C(0, 0xE000000000000000, v3 + 24);
  sub_25F70DF20();
  sub_25F67F1D8(v2, v3 + 24);
  sub_25F67EE0C(0, 0xF000000000000000, v3 + 24, (unsigned char *)(v3 + 16));
  sub_25F67797C(0, 0xE000000000000000, v3 + 24);
  sub_25F67F0B8(v3 + 24, (unsigned char *)(v3 + 17));
  sub_25F70DFE0();
  *(_WORD *)(v3 + 16) = 0;
  sub_25F67B010(a1, (uint64_t)&v10);
  sub_25F674D7C();
  sub_25F67A28C(v3 + 24);
  sub_25F675D18(&v10, v3 + 24);
  swift_endAccess();
  sub_25F67A28C(a1);
  return v3;
}

uint64_t sub_25F67797C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F67B010(a3, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F70E070();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

uint64_t CoreParameterRecord.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  sub_25F674D7C();
  sub_25F67A28C(v3);
  sub_25F675D18(a1, v3);
  return swift_endAccess();
}

uint64_t CoreRuleRecord.init(backingData:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_25F6762E8();
  uint64_t v5 = v4;
  uint64_t v6 = sub_25F70DF30();
  MEMORY[0x270FA5388](v6 - 8, v7);
  sub_25F6759BC();
  *(void *)(v2 + 48) = sub_25F67ACD8(&qword_26B39D5A8);
  *(void *)&long long v112 = v5;
  *((void *)&v112 + 1) = v5;
  uint64_t v113 = sub_25F67B1C0((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  uint64_t v114 = v113;
  *(void *)(v2 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v2 + 24));
  sub_25F70E230();
  sub_25F679EC8();
  uint64_t v9 = v8;
  sub_25F678D0C(0, 0xE000000000000000, v2 + 24);
  sub_25F70DF20();
  uint64_t v10 = sub_25F6883B0();
  sub_25F678DB8(v10, v11, v12, v13, v14, v15, v16, v17, v82, v92, v102, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121);
  uint64_t v18 = sub_25F68C650();
  sub_25F678834(v18, v19, v20, v21, v22, v23, v24, v25, v83, v93, v103, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121);
  *(unsigned char *)(v2 + 17) = 0;
  uint64_t v26 = sub_25F68C650();
  sub_25F678C14(v26, v27, v28, v29, v30, v31, v32, v33, v84, v94, v104, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    vars0,
    vars8);
  uint64_t v34 = sub_25F68C650();
  sub_25F678A60(v34, v35, v9, v36, v37, v38, v39, v40, v85, v95, v105, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    vars0,
    vars8);
  uint64_t v41 = sub_25F68C650();
  sub_25F6788D8(v41, v42, v43, v44, v45, v46, v47, v48, v86, v96, v106, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    vars0,
    vars8);
  uint64_t v49 = sub_25F68C650();
  sub_25F678B1C(v49, v50, v51, v52, v53, v54, v55, v56, v87, v97, v107, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    vars0,
    vars8);
  uint64_t v57 = sub_25F6883B0();
  sub_25F6786C0(v57, v58, v9, v59, v60, v61, v62, v63, v88, v98, v108, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121,
    vars0,
    vars8);
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v64 = sub_25F70E530();
  sub_25F6789D0(v64, v2 + 24, v65, v66, v67, v68, v69, v70, v89, v99, v109, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121);
  sub_25F677D30(0, v2 + 24, v71, (uint64_t)&unk_25F714FD0, v72, v73, v74, v75, v90, v100, v110, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121);
  sub_25F677D30(0, v2 + 24, v76, (uint64_t)&unk_25F714E68, v77, v78, v79, v80, v91, v101, v111, v112, *((uint64_t *)&v112 + 1), v113, v114, v115, v116, v117, v118,
    v119,
    v120,
    v121);
  sub_25F70DFE0();
  *(unsigned char *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 18) = 0;
  *(unsigned char *)(v2 + 22) = 0;
  sub_25F67B010(a1, (uint64_t)&v112);
  sub_25F674D7C();
  sub_25F67A28C(v2 + 24);
  sub_25F675D18(&v112, v2 + 24);
  swift_endAccess();
  sub_25F67A28C(a1);
  return v2;
}

uint64_t *sub_25F677CCC(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_25F677D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_25F685B5C();
  a21 = v22;
  a22 = v23;
  sub_25F67B010(v24, (uint64_t)&a10);
  sub_25F67A2DC(&a10, a13);
  swift_getKeyPath();
  sub_25F70E070();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  sub_25F670C54();
}

uint64_t CoreRuleRecord.persistentBackingData.setter(long long *a1)
{
  uint64_t v3 = v1 + 24;
  sub_25F674D7C();
  sub_25F67A28C(v3);
  sub_25F675D18(a1, v3);
  return swift_endAccess();
}

uint64_t sub_25F677E24()
{
  return swift_dynamicCast();
}

void sub_25F677E44()
{
  *(void *)(v0 + 152) = *(void *)(*(void *)(v0 + 88) + 64);
}

void sub_25F677E54()
{
  uint64_t v2 = *(void *)(v1 + 88);
  *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 96);
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = *(void *)(v1 + 104);
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 112);
  *(void *)(v0 + 104) = v3;
  *(void *)(v0 + 120) = *(void *)(v1 + 120);
}

void sub_25F677E80(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t sub_25F677EA4()
{
  *(unsigned char *)(v0 - 96) = *(_DWORD *)(v0 - 180);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F677ED8()
{
  return sub_25F70F170();
}

uint64_t sub_25F677EF8()
{
  return v0;
}

uint64_t sub_25F677F0C()
{
  return sub_25F70E4E0();
}

uint64_t sub_25F677F38()
{
  return v0;
}

uint64_t sub_25F677F4C()
{
  return sub_25F6E7070(v2, v1, v0, v3);
}

uint64_t sub_25F677F74()
{
  return v0;
}

uint64_t sub_25F677F8C()
{
  return sub_25F70E200();
}

uint64_t sub_25F677FAC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return sub_25F6F7E50(a1, a2, 19, 0x72617720A280E220, 0xAE00205D676E696ELL, a6);
}

uint64_t sub_25F677FE0()
{
  return v0;
}

uint64_t sub_25F677FFC()
{
  *(unsigned char *)(v0 - 96) = *(_DWORD *)(v0 - 196);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F678024()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_25F678038()
{
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  uint64_t result = *(void *)(v1 + 32);
  *(void *)(v0 + 32) = result;
  return result;
}

uint64_t sub_25F67804C(uint64_t a1, uint64_t a2)
{
  return sub_25F67F3A4(a1, a2);
}

void sub_25F678064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(v4 - 104) = a4;
  *(_DWORD *)(v4 - 108) = a3;
}

uint64_t sub_25F67807C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 192) = a3;
  *(void *)(v4 - 184) = a4;
  *(_DWORD *)(v4 - 196) = a2;
  *(void *)(v4 - 168) = result;
  return result;
}

uint64_t sub_25F678090(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_25F675A48();
    if (v14 != v15)
    {
      sub_25F67955C();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_25F675A38();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v23 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25F67ACD8(a5);
  uint64_t v18 = a6(0);
  sub_25F6768F0(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    sub_25F67C9C0();
    uint64_t result = sub_25F70F0D0();
    __break(1u);
    return result;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v28 = (unint64_t)v23 + v27;
  if (a1)
  {
    sub_25F678FF0(a4 + v27, v16, v28, a8);
    sub_25F679E0C();
  }
  else
  {
    sub_25F678EA4(0, v16, v28, a4, a7);
  }
  return (uint64_t)v23;
}

void sub_25F678288()
{
}

void sub_25F678370()
{
}

uint64_t sub_25F678470()
{
  return v0;
}

uint64_t sub_25F678480(uint64_t result)
{
  *(void *)(v2 - 120) = result;
  *(void *)(v2 - 152) = v1;
  return result;
}

uint64_t sub_25F678494()
{
  return sub_25F70E200();
}

uint64_t sub_25F6784B4()
{
  return 24944;
}

uint64_t sub_25F6784E4()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F678500()
{
  return sub_25F70F5B0();
}

uint64_t sub_25F678520()
{
  return sub_25F70E3C0();
}

uint64_t sub_25F67855C()
{
  return sub_25F70F640();
}

uint64_t sub_25F678580()
{
  return v0;
}

uint64_t sub_25F678594()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F6785C0()
{
  return v0;
}

uint64_t sub_25F6785D8()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F6785F4()
{
  return v0;
}

void sub_25F67861C()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_25F678634()
{
  return v0;
}

void sub_25F678680()
{
  void *v0 = 0x8000000000000000;
}

uint64_t sub_25F6786A8()
{
  return v0;
}

void sub_25F6786C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25F675E74();
  a23 = v25;
  a24 = v26;
  sub_25F682C60(v27, v28, v29);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39DAC8);
  sub_25F678764();
  sub_25F70E060();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F67A28C((uint64_t)&a10);
  *size_t v24 = 0;
  sub_25F67D8E8();
}

unint64_t sub_25F678764()
{
  unint64_t result = qword_26B39DAD0;
  if (!qword_26B39DAD0)
  {
    sub_25F682580(&qword_26B39DAC8);
    sub_25F682540((uint64_t)&unk_26B39DAC0);
    sub_25F6740CC((uint64_t)&qword_26B39DBF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DAD0);
  }
  return result;
}

void sub_25F678834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_25F685B5C();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_25F67B010(v28, (uint64_t)&a10);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D560);
  sub_25F70E050();
  swift_release();

  sub_25F67A28C((uint64_t)&a10);
  *uint64_t v27 = 0;
  sub_25F670C54();
}

void sub_25F6788D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25F675E74();
  a23 = v25;
  a24 = v26;
  sub_25F679604(v27, v28, v26);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  type metadata accessor for CoreParameterRecord();
  sub_25F67B1C0(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_25F675B40();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  *size_t v24 = 0;
  sub_25F67D8E8();
}

uint64_t type metadata accessor for CoreParameterRecord()
{
  uint64_t result = qword_26B39DCD0;
  if (!qword_26B39DCD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25F6789D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_25F685B5C();
  a21 = v22;
  a22 = v23;
  sub_25F672CC0(v24, v25, v23);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D888);
  sub_25F70E050();
  swift_bridgeObjectRelease();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  sub_25F670C54();
}

void sub_25F678A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25F675E74();
  a23 = v25;
  a24 = v26;
  sub_25F682C60(v27, v28, v29);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  sub_25F67B1C0((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F70E080();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  *uint64_t v24 = 0;
  sub_25F67D8E8();
}

void sub_25F678B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25F675E74();
  a23 = v25;
  a24 = v26;
  sub_25F679604(v27, v28, v26);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  type metadata accessor for CoreEventRecord();
  sub_25F67B1C0(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_25F675B40();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  *uint64_t v24 = 0;
  sub_25F67D8E8();
}

uint64_t type metadata accessor for CoreEventRecord()
{
  uint64_t result = qword_26B39DC50;
  if (!qword_26B39DC50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25F678C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_25F675E74();
  a23 = v25;
  a24 = v26;
  sub_25F679604(v27, v28, v26);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  type metadata accessor for CoreTipRecord();
  sub_25F67B1C0(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_25F675B40();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)&a10);
  *uint64_t v24 = 0;
  sub_25F67D8E8();
}

uint64_t type metadata accessor for CoreTipRecord()
{
  uint64_t result = qword_26B39DD28;
  if (!qword_26B39DD28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25F678D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F67B010(a3, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F70E070();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_25F67A28C((uint64_t)v4);
}

void sub_25F678DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_25F685B5C();
  a21 = v23;
  a22 = v24;
  sub_25F672CC0(v25, v26, v24);
  sub_25F6765FC(&a10, a13);
  swift_getKeyPath();
  uint64_t v27 = sub_25F70DF30();
  sub_25F67B1C0(&qword_26B39DB00, MEMORY[0x263F07490]);
  sub_25F70E070();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v22, v27);
  sub_25F67A28C((uint64_t)&a10);
  sub_25F670C54();
}

uint64_t sub_25F678EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  sub_25F67C9C0();
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F678FF0(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t v9 = sub_25F67E698();
    __break(1u);
    return MEMORY[0x270FA01D0](v9);
  }
  if (a3 < a1
    || (uint64_t result = ((uint64_t (*)(void))a4)(0), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    uint64_t v10 = sub_25F678580();
    return MEMORY[0x270FA01D8](v10);
  }
  else if (a3 != a1)
  {
    uint64_t v9 = sub_25F678580();
    return MEMORY[0x270FA01D0](v9);
  }
  return result;
}

void sub_25F6790F4()
{
  sub_25F682D3C();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v5;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v4 > *(void *)(v1 + 24) >> 1)
  {
    if (v3 <= v4) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = v3;
    }
    uint64_t v1 = sub_25F678090(isUniquelyReferenced_nonNull_native, v9, 1, v1, &qword_26B39DE40, MEMORY[0x263F181B0], MEMORY[0x263F181B0], MEMORY[0x263F181B0]);
  }
  if (!*(void *)(v7 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = (*(void *)(v1 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(sub_25F70E470() - 8);
  if (v11 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  sub_25F6793E8(v7 + v13, v2, v1 + v13 + *(void *)(v12 + 72) * v10);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t *v0 = v1;
    return;
  }
  uint64_t v14 = *(void *)(v1 + 16);
  BOOL v6 = __OFADD__(v14, v2);
  uint64_t v15 = v14 + v2;
  if (!v6)
  {
    *(void *)(v1 + 16) = v15;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_25F679244()
{
  return v0;
}

uint64_t sub_25F67925C()
{
  return type metadata accessor for logger();
}

uint64_t sub_25F67927C()
{
  return sub_25F70F640();
}

void sub_25F67929C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 72) = (char *)&a9 - v9;
}

uint64_t sub_25F6792B4()
{
  return sub_25F70E660();
}

uint64_t sub_25F6792CC()
{
  return sub_25F70E440();
}

void sub_25F6792F8(uint64_t a1@<X8>)
{
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + ((v1 + 3) & 0x1FFFFFFFCLL)));
}

uint64_t sub_25F679318()
{
  return swift_beginAccess();
}

uint64_t sub_25F679348()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 232);
  return sub_25F70E570();
}

uint64_t sub_25F679364()
{
  return v0;
}

uint64_t sub_25F679370()
{
  return sub_25F70E6D0();
}

uint64_t sub_25F67938C()
{
  return v0;
}

uint64_t sub_25F6793A4()
{
  return sub_25F70E110();
}

uint64_t sub_25F6793C8()
{
  return sub_25F70E820();
}

uint64_t sub_25F6793E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_25F679400(a1, a2, a3, MEMORY[0x263F181B0]);
}

uint64_t sub_25F679400(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    sub_25F67E7DC();
LABEL_11:
    uint64_t result = sub_25F67D40C();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(*(void *)(a4(0) - 8) + 72) * a2;
  unint64_t v7 = a3 + v6;
  unint64_t v8 = a1 + v6;
  if (v7 > a1 && v8 > a3)
  {
    sub_25F67C9C0();
    sub_25F67D06C();
    goto LABEL_11;
  }
  sub_25F6795D4();
  return swift_arrayInitWithCopy();
}

uint64_t sub_25F6794E0(void *a1)
{
  sub_25F67A2DC(a1, v1);
  return v1;
}

uint64_t sub_25F679510()
{
  return sub_25F70E790();
}

uint64_t sub_25F67953C()
{
  return sub_25F70F200();
}

uint64_t sub_25F679568()
{
  return sub_25F70E200();
}

uint64_t sub_25F679588()
{
  return 16;
}

id sub_25F679594(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_25F6795C0()
{
  return v0;
}

uint64_t sub_25F6795D4()
{
  return v0;
}

char *sub_25F6795E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_25F679604(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_25F67B010(a2, (uint64_t)va);
}

uint64_t sub_25F679628()
{
  return v0;
}

void sub_25F679644()
{
  void *v0 = 0x8000000000000000;
}

uint64_t sub_25F679660()
{
  return sub_25F70E110();
}

uint64_t sub_25F679684()
{
  return v0;
}

uint64_t sub_25F679698(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA0238](a1, a2, 7);
}

uint64_t sub_25F6796A0()
{
  return *(void *)(v0 + 448);
}

uint64_t sub_25F6796D4()
{
  return sub_25F680930(v0, v1, v2);
}

uint64_t sub_25F679720()
{
  sub_25F674004(v1, 0, 1, v0);
  return 0;
}

uint64_t sub_25F679768(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0)
  {
    sub_25F67C9C0();
    goto LABEL_40;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v42 = v10 + 16;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_25F69F010(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    sub_25F70E570();
    swift_release();
LABEL_36:
    swift_release();
    return v13;
  }
  uint64_t v41 = a1;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_25F70E7E0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_25F70E760();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_25F70E810();
      uint64_t v43 = v23;
      uint64_t v44 = v22;
      uint64_t v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F674C6C();
        uint64_t v13 = v28;
      }
      unint64_t v25 = *(void *)(v13 + 16);
      if (v25 >= *(void *)(v13 + 24) >> 1)
      {
        sub_25F674C6C();
        uint64_t v13 = v29;
      }
      *(void *)(v13 + 16) = v25 + 1;
      uint64_t v26 = (void *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(void *)uint64_t v42 = v13;
    }
    uint64_t v27 = sub_25F70E760();
    unint64_t v14 = v27;
    *(void *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(void *)(v13 + 16) == v41) {
      break;
    }
    unint64_t v15 = v27;
    unint64_t v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v27;
  unint64_t v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    sub_25F70E570();
    swift_release();
    goto LABEL_36;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_25F70E810();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    sub_25F67EDF4();
    uint64_t v38 = *(void *)(*(void *)v42 + 16);
    sub_25F67ED80(v38);
    uint64_t v13 = *(void *)v42;
    *(void *)(v13 + 16) = v38 + 1;
    uint64_t v39 = (void *)(v13 + 32 * v38);
    v39[4] = v31;
    v39[5] = v33;
    v39[6] = v35;
    v39[7] = v37;
    *(void *)uint64_t v42 = v13;
    goto LABEL_35;
  }
LABEL_38:
  sub_25F67C9C0();
LABEL_40:
  uint64_t result = sub_25F70F0D0();
  __break(1u);
  return result;
}

uint64_t sub_25F679BA0(uint64_t *a1)
{
  return sub_25F679BC0(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_25F679BC0(uint64_t *a1, uint64_t *a2)
{
  return sub_25F679BEC(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_25F679BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25F70F330() & 1;
  }
}

uint64_t CoreRule.Predicate.Operator.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  sub_25F67A2DC(a1, a1[3]);
  sub_25F679E78();
  sub_25F70F630();
  if (!v2)
  {
    sub_25F67A2DC(v8, v8[3]);
    sub_25F679E78();
    sub_25F70F350();
    sub_25F70E6F0();
    CoreRule.Predicate.Operator.init(rawValue:)(&v7);
    char v5 = v7;
    if (v7 == 13)
    {
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70EF20();
      swift_allocError();
      sub_25F70EF00();
      swift_bridgeObjectRelease();
      swift_willThrow();
      sub_25F67A28C((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_25F67A28C((uint64_t)v8);
      *a2 = v5;
    }
  }
  return sub_25F67A28C((uint64_t)a1);
}

uint64_t sub_25F679D98()
{
  return sub_25F68D918(v1 - 128, v0);
}

void sub_25F679DB0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25F67F8A4(a1, (uint64_t)&a9, v10, v9, a5);
}

uint64_t sub_25F679DEC()
{
  return sub_25F70F640();
}

uint64_t sub_25F679E0C()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F679E24()
{
  return sub_25F70E0A0();
}

uint64_t sub_25F679E50()
{
  return swift_allocObject();
}

uint64_t sub_25F679E78()
{
  return v0;
}

uint64_t sub_25F679E8C()
{
  return sub_25F70F220();
}

uint64_t sub_25F679EAC()
{
  return swift_allocObject();
}

uint64_t sub_25F679EF0()
{
  return v0;
}

uint64_t sub_25F679F0C()
{
  return sub_25F70ED90();
}

uint64_t sub_25F679F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25F67D9DC(a1, a2, a3);
}

uint64_t sub_25F679F58()
{
  return sub_25F67F3A4(v0, v1);
}

id sub_25F679F8C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, _OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_25F70EDC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    id v7 = a1;
  }
  a4(v16, v15);

  sub_25F67A320((uint64_t)v15);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = sub_25F67A2DC(v16, v17);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v9, v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_25F70F320();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_25F67A28C((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = 0;
  }
  return v13;
}

id sub_25F67A10C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, _OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_25F70EDC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    id v7 = a1;
  }
  a4(v16, v15);

  sub_25F67A320((uint64_t)v15);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = sub_25F67A2DC(v16, v17);
    uint64_t v10 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v9, v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_25F70F320();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_25F67A28C((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = 0;
  }
  return v13;
}

uint64_t sub_25F67A28C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *sub_25F67A2DC(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_25F67A320(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39E0A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F67A380@<X0>(uint64_t a1@<X8>)
{
  sub_25F67CE20();
  uint64_t v3 = v2;
  sub_25F67A890(v4, (uint64_t)v10);
  if (!v10[3])
  {
    uint64_t result = sub_25F67A320((uint64_t)v10);
    goto LABEL_7;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_7:
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  id v6 = objc_msgSend(self, sel_allowedTopLevelClasses);
  sub_25F67ACD8(&qword_26B39D880);
  sub_25F70E910();

  uint64_t v7 = sub_25F67B580();
  swift_bridgeObjectRelease();
  if (!v7)
  {
    sub_25F67ACD8(&qword_26B39D878);
    uint64_t v7 = sub_25F70E530();
  }
  *(void *)(a1 + 24) = *(void *)(v3 + 80);
  static DictionaryCoder.decode<A>(from:class:)(v7);
  sub_25F67A838(v8, v9);
  return swift_bridgeObjectRelease();
}

double sub_25F67A608@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67A890(a1, (uint64_t)&v7);
  if (!v8) {
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  sub_25F67A8F8(0, &qword_26B39D848);
  id v3 = objc_msgSend(self, sel_allowedTopLevelClasses);
  sub_25F67ACD8(&qword_26B39D880);
  sub_25F70E910();

  sub_25F70EC90();
  swift_bridgeObjectRelease();
  if (!v8)
  {
    sub_25F67CECC();
LABEL_7:
    sub_25F67A320((uint64_t)&v7);
    goto LABEL_8;
  }
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D888);
  if (swift_dynamicCast())
  {
    *(void *)(a2 + 24) = v4;
    sub_25F67CECC();
    *(void *)a2 = v6;
    return result;
  }
  sub_25F67CECC();
LABEL_8:
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_25F67A838(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25F67A890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39E0A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F67A8F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_25F67A934(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_25F67ACD8(&qword_26B39D860);
    uint64_t v2 = (void *)sub_25F70F130();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v35 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v34 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v47;
  uint64_t v7 = v45;
  uint64_t v8 = &v41;
  unint64_t v9 = &v43;
  unint64_t result = sub_25F70E570();
  int64_t v36 = 0;
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v37 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v36 << 6);
      }
      else
      {
        int64_t v12 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_34;
        }
        if (v12 >= v34)
        {
LABEL_31:
          sub_25F67B324();
          return (unint64_t)v2;
        }
        unint64_t v13 = *(void *)(v35 + 8 * v12);
        int64_t v14 = v36 + 1;
        if (!v13)
        {
          int64_t v14 = v36 + 2;
          if (v36 + 2 >= v34) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v35 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v36 + 3;
            if (v36 + 3 >= v34) {
              goto LABEL_31;
            }
            unint64_t v13 = *(void *)(v35 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v36 + 4;
              if (v36 + 4 >= v34) {
                goto LABEL_31;
              }
              unint64_t v13 = *(void *)(v35 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v36 + 5;
                if (v36 + 5 >= v34) {
                  goto LABEL_31;
                }
                unint64_t v13 = *(void *)(v35 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_35;
                    }
                    if (v14 >= v34) {
                      goto LABEL_31;
                    }
                    unint64_t v13 = *(void *)(v35 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v14 = v36 + 5;
              }
            }
          }
        }
LABEL_25:
        int64_t v36 = v14;
        uint64_t v37 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      unint64_t v16 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_25F67AD2C(*(void *)(v1 + 56) + 32 * v11, (uint64_t)v6);
      *(void *)&long long v46 = v18;
      *((void *)&v46 + 1) = v17;
      v44[2] = v46;
      v45[0] = v47[0];
      v45[1] = v47[1];
      uint64_t v39 = v18;
      uint64_t v40 = v17;
      sub_25F67AD1C(v7, &v38);
      sub_25F70E570();
      sub_25F67ACD8(&qword_26B39D878);
      swift_dynamicCast();
      uint64_t v20 = v39;
      uint64_t v19 = v40;
      sub_25F67AD1C(v8, v9);
      sub_25F67AD1C(v9, v44);
      sub_25F67AD1C(v44, &v42);
      unint64_t result = sub_25F67AD88(v20, v19);
      unint64_t v21 = result;
      if ((v22 & 1) == 0) {
        break;
      }
      uint64_t v23 = v9;
      uint64_t v24 = v8;
      uint64_t v25 = v1;
      uint64_t v26 = v7;
      uint64_t v27 = v6;
      uint64_t v28 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v28 = v20;
      v28[1] = v19;
      uint64_t v6 = v27;
      uint64_t v7 = v26;
      uint64_t v1 = v25;
      uint64_t v8 = v24;
      unint64_t v9 = v23;
      uint64_t v29 = (_OWORD *)(v2[7] + 32 * v21);
      sub_25F67A28C((uint64_t)v29);
      unint64_t result = (unint64_t)sub_25F67AD1C(&v42, v29);
      unint64_t v5 = v37;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v30 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v30 = v20;
    v30[1] = v19;
    unint64_t result = (unint64_t)sub_25F67AD1C(&v42, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v31 = v2[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_33;
    }
    v2[2] = v33;
    unint64_t v5 = v37;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_25F67ACD8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

_OWORD *sub_25F67AD1C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25F67AD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_25F67AD88(uint64_t a1, uint64_t a2)
{
  sub_25F70F5C0();
  sub_25F70E740();
  uint64_t v4 = sub_25F70F620();
  return sub_25F67AE00(a1, a2, v4);
}

unint64_t sub_25F67AE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25F70F330() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25F70F330() & 1) == 0);
    }
  }
  return v6;
}

uint64_t CoreParameterRecord.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25F67B010(v1 + 24, a1);
}

uint64_t CoreTipRecord.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25F67B010(v1 + 24, a1);
}

uint64_t sub_25F67AF7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CoreRuleRecord.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_25F67B010(v1 + 24, a1);
}

uint64_t sub_25F67B010(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25F67B074()
{
  return v0 - 96;
}

uint64_t sub_25F67B0A4()
{
  return sub_25F70E790();
}

unint64_t sub_25F67B0BC()
{
  *(void *)(v1 - 128) = 91;
  *(void *)(v1 - 120) = 0xE100000000000000;
  char v3 = *v0;
  return sub_25F6F615C(v3);
}

uint64_t sub_25F67B0DC()
{
  return swift_allocObject();
}

uint64_t sub_25F67B0FC()
{
  return v0;
}

uint64_t sub_25F67B124()
{
  return sub_25F70E0F0();
}

uint64_t sub_25F67B144()
{
  return 0;
}

uint64_t sub_25F67B150()
{
  return v0;
}

uint64_t sub_25F67B164()
{
  return sub_25F68ED44();
}

uint64_t sub_25F67B17C(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return sub_25F70ED30();
}

void sub_25F67B1A4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_25F67B1C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F67B208(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F67B24C()
{
  return 0;
}

uint64_t sub_25F67B258()
{
  return sub_25F70F1B0();
}

uint64_t sub_25F67B278()
{
  return v0;
}

uint64_t sub_25F67B290()
{
  return swift_getErrorValue();
}

uint64_t sub_25F67B2C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_25F67ACD8(a3);
}

uint64_t sub_25F67B2DC()
{
  return v0;
}

uint64_t sub_25F67B2E8()
{
  return sub_25F70E570();
}

uint64_t sub_25F67B304()
{
  return v0;
}

uint64_t sub_25F67B324()
{
  return swift_release();
}

uint64_t static DictionaryCoder.decode<A>(from:class:)(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t static DictionaryDecoder.decode<A>(from:class:)()
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = self;
  uint64_t v1 = (void *)sub_25F70E520();
  v9[0] = 0;
  id v2 = objc_msgSend(v0, sel_dataWithJSONObject_options_error_, v1, 0, v9);

  id v3 = v9[0];
  if (v2)
  {
    uint64_t v4 = sub_25F70DE80();
    unint64_t v6 = v5;

    sub_25F67B4EC();
    return sub_25F67A838(v4, v6);
  }
  else
  {
    uint64_t v8 = v3;
    sub_25F70DD20();

    return swift_willThrow();
  }
}

uint64_t sub_25F67B4EC()
{
  return swift_release();
}

uint64_t sub_25F67B580()
{
  sub_25F67A8F8(0, &qword_26B39D848);
  sub_25F70EC90();
  sub_25F67ACD8(&qword_26B39E0A8);
  sub_25F67ACD8(&qword_26B39D888);
  if (swift_dynamicCast()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t CoreRule.Predicate.Operator.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25F70F160();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 13;
  if (v2 < 0xD) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

double sub_25F67B758@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_25F67A890(a1, (uint64_t)&v14);
  if (v15)
  {
    sub_25F67AD1C(&v14, v16);
    sub_25F67AD2C((uint64_t)v16, (uint64_t)&v14);
    sub_25F67ACD8(&qword_26B39D888);
    if (!swift_dynamicCast())
    {
      sub_25F67ACD8(&qword_26B39D878);
      sub_25F70E530();
    }
    id v3 = self;
    sub_25F67ACD8(&qword_26B39D878);
    char v4 = (void *)sub_25F70E520();
    swift_bridgeObjectRelease();
    *(void *)&long long v14 = 0;
    id v5 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v4, 1, &v14);

    id v6 = (id)v14;
    if (v5)
    {
      uint64_t v7 = sub_25F70DE80();
      uint64_t v9 = v8;

      *(void *)(a2 + 24) = MEMORY[0x263F06F78];
      *(void *)a2 = v7;
      *(void *)(a2 + 8) = v9;
      sub_25F67A28C((uint64_t)v16);
      return result;
    }
    BOOL v11 = v6;
    uint64_t v12 = (void *)sub_25F70DD20();

    swift_willThrow();
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for logger();
    sub_25F67F3A4(v13, (uint64_t)qword_26B39D818);
    *(void *)&long long v14 = 0;
    *((void *)&v14 + 1) = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    swift_getErrorValue();
    sub_25F70F2F0();
    sub_25F68C2F0(v14, *((unint64_t *)&v14 + 1));
    swift_bridgeObjectRelease();
    sub_25F67A28C((uint64_t)v16);
  }
  else
  {
    sub_25F67A320((uint64_t)&v14);
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_25F67B9F0@<X0>(uint64_t a1@<X8>)
{
  sub_25F67CE20();
  sub_25F67A890(v2, (uint64_t)&v8);
  if (v9)
  {
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v4 = static DictionaryCoder.encode<A>(_:)();
      sub_25F67A8F8(0, &qword_26B39D850);
      uint64_t v9 = sub_25F67ACD8(&qword_26B39D888);
      uint64_t v8 = v4;
      uint64_t v5 = sub_25F67BEF4(&v8, 1);
      unint64_t v7 = v6;
      sub_25F67A28C((uint64_t)&v8);
      if (v7 >> 60 != 15)
      {
        *(void *)(a1 + 24) = MEMORY[0x263F06F78];
        uint64_t result = swift_unknownObjectRelease();
        *(void *)a1 = v5;
        *(void *)(a1 + 8) = v7;
        return result;
      }
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t result = sub_25F67A320((uint64_t)&v8);
  }
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t static DictionaryCoder.encode<A>(_:)()
{
  return static DictionaryEncoder.encode<A>(_:)();
}

uint64_t static DictionaryEncoder.encode<A>(_:)()
{
  void v12[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = sub_25F67BE7C();
  unint64_t v2 = v1;
  id v3 = self;
  uint64_t v4 = (void *)sub_25F70DE70();
  v12[0] = 0;
  id v5 = objc_msgSend(v3, sel_JSONObjectWithData_options_error_, v4, 0, v12);

  if (!v5)
  {
    id v8 = v12[0];
    uint64_t v9 = (void *)sub_25F70DD20();

    swift_willThrow();
    goto LABEL_5;
  }
  id v6 = v12[0];
  sub_25F70EDC0();
  swift_unknownObjectRelease();
  sub_25F67ACD8(&qword_26B39D888);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    sub_25F67ACD8(&qword_26B39D878);
    uint64_t v7 = sub_25F70E530();
    sub_25F67A838(v0, v2);
    return v7;
  }
  sub_25F67A838(v0, v2);
  return v11;
}

uint64_t sub_25F67BE7C()
{
  sub_25F70DA70();
  sub_25F67D258();
  sub_25F70DA60();
  sub_25F70DA50();
  sub_25F67CE48();
  return v0;
}

uint64_t sub_25F67BEF4(void *a1, char a2)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v4 = self;
  sub_25F67A2DC(a1, a1[3]);
  id v12 = 0;
  id v5 = objc_msgSend(v4, sel_archivedDataWithRootObject_requiringSecureCoding_error_, sub_25F70F320(), a2 & 1, &v12);
  swift_unknownObjectRelease();
  id v6 = v12;
  if (v5)
  {
    uint64_t v7 = sub_25F70DE80();
  }
  else
  {
    id v8 = v6;
    uint64_t v9 = (void *)sub_25F70DD20();

    swift_willThrow();
    if (qword_26A7B1128 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for logger();
    sub_25F67F3A4(v10, (uint64_t)qword_26A7B1BC8);
    id v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F67A2DC(a1, a1[3]);
    sub_25F70F2F0();
    sub_25F70E790();
    swift_getErrorValue();
    sub_25F70F2F0();
    sub_25F68C2F0((uint64_t)v12, v13);
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

uint64_t CoreRule.Predicate.Argument.encode(to:)(void *a1)
{
  sub_25F67ACD8(&qword_26B39D638);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F674D94();
  sub_25F67ACD8(&qword_26B39D648);
  sub_25F67CA24();
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6, v8);
  sub_25F6759BC();
  uint64_t v11 = v10 - v9;
  sub_25F67ACD8(&qword_26B39D640);
  sub_25F67CA24();
  uint64_t v25 = v13;
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v12, v14);
  sub_25F6759BC();
  uint64_t v17 = v16 - v15;
  uint64_t v29 = sub_25F67ACD8(&qword_26B39D630);
  sub_25F67CA24();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20, v21);
  sub_25F672A58();
  uint64_t v22 = *(unsigned __int8 *)(v1 + 16);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F67DA04();
  sub_25F70F660();
  if (!v22)
  {
    sub_25F67ECEC();
    sub_25F676688();
    sub_25F70F270();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v26);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v2, v22);
  }
  if (v22 == 1)
  {
    sub_25F6CBD04();
    sub_25F676688();
    sub_25F70F270();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v11, v28);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v2, v22);
  }
  sub_25F67DA50();
  sub_25F70F220();
  sub_25F679E44();
  v24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v2, v29);
}

uint64_t CoreRule.Predicate.Argument.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67ACD8(&qword_26B39D610);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F674D94();
  sub_25F67ACD8(&qword_26B39D620);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F672A58();
  sub_25F67ACD8(&qword_26B39D618);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v7, v8);
  sub_25F6759BC();
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D608);
  sub_25F67CA24();
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6759BC();
  uint64_t v15 = v14 - v13;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F67DA04();
  sub_25F70F640();
  if (v44) {
    goto LABEL_10;
  }
  uint64_t v45 = a1;
  uint64_t v16 = v15;
  uint64_t v17 = sub_25F70F210();
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    uint64_t v25 = v43;
LABEL_9:
    uint64_t v26 = sub_25F70EF20();
    swift_allocError();
    uint64_t v28 = v27;
    sub_25F67ACD8(&qword_26A7B17B8);
    void *v28 = &type metadata for CoreRule.Predicate.Argument;
    sub_25F70F180();
    sub_25F70EF10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v9);
    a1 = v45;
LABEL_10:
    uint64_t v29 = (uint64_t)a1;
    return sub_25F67A28C(v29);
  }
  uint64_t v19 = v9;
  int v20 = *(unsigned __int8 *)(v17 + 32);
  sub_25F67EC70(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
  uint64_t v22 = v21;
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 != v24 >> 1)
  {
    uint64_t v25 = v43;
    uint64_t v9 = v19;
    goto LABEL_9;
  }
  if (v20)
  {
    if (v20 == 1)
    {
      sub_25F6CBD04();
      sub_25F70F170();
      uint64_t v33 = sub_25F70F1D0();
      uint64_t v35 = v34;
      sub_25F679E44();
      v36();
      swift_unknownObjectRelease();
      sub_25F679E44();
      v37();
    }
    else
    {
      sub_25F67DA50();
      sub_25F67D69C();
      sub_25F679E44();
      v31();
      swift_unknownObjectRelease();
      sub_25F67D3D8();
      sub_25F679E44();
      v32();
      uint64_t v33 = 0;
      uint64_t v35 = 0;
    }
  }
  else
  {
    sub_25F67ECEC();
    sub_25F67D69C();
    uint64_t v33 = sub_25F70F1D0();
    uint64_t v35 = v38;
    sub_25F679E44();
    v39();
    swift_unknownObjectRelease();
    uint64_t v40 = sub_25F676988();
    v41(v40);
  }
  *(void *)a2 = v33;
  *(void *)(a2 + 8) = v35;
  *(unsigned char *)(a2 + 16) = v20;
  uint64_t v29 = (uint64_t)v45;
  return sub_25F67A28C(v29);
}

uint64_t sub_25F67C988()
{
  return swift_dynamicCast();
}

void sub_25F67C9D4()
{
  *(void *)(v0 + 88) = 0x6E69487070416E69;
  *(void *)(v0 + 96) = 0xE900000000000074;
}

unint64_t sub_25F67CA10()
{
  return 0xD000000000000010;
}

uint64_t sub_25F67CA58()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_25F67CA70()
{
  return v0;
}

uint64_t sub_25F67CAA0()
{
  return v0;
}

uint64_t sub_25F67CABC()
{
  return 0x7461636964657270;
}

void sub_25F67CAEC()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v2 + 6);
}

uint64_t sub_25F67CB10()
{
  return swift_beginAccess();
}

void sub_25F67CB2C()
{
  uint64_t v2 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v2 + 6);
}

uint64_t sub_25F67CB5C()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67CBB4()
{
  return v0;
}

uint64_t sub_25F67CBCC()
{
  sub_25F675D18((long long *)(v0 - 160), v0 - 120);
  uint64_t v1 = *(void *)(v0 - 96);
  sub_25F67A2DC((void *)(v0 - 120), v1);
  return v1;
}

uint64_t sub_25F67CC18()
{
  return v0;
}

uint64_t sub_25F67CC38()
{
  return sub_25F70F330();
}

uint64_t sub_25F67CC60()
{
  return v0;
}

void sub_25F67CC78()
{
  uint64_t v2 = v0[1];
  *(void *)(v1 - 216) = v0[2];
  *(void *)(v1 - 208) = v2;
  uint64_t v3 = v0[3];
  *(void *)(v1 - 232) = v0[4];
  *(void *)(v1 - 224) = v3;
  uint64_t v4 = v0[5];
  *(void *)(v1 - 248) = v0[6];
  *(void *)(v1 - 240) = v4;
  *(void *)(v1 - 256) = v0[7];
  *(void *)(v1 - 264) = v0[8];
  *(void *)(v1 - 272) = v0[9];
  *(void *)(v1 - 280) = v0[10];
  *(void *)(v1 - 288) = v0[11];
  *(void *)(v1 - 296) = v0[12];
  *(void *)(v1 - 304) = v0[13];
  *(void *)(v1 - 312) = v0[14];
}

uint64_t sub_25F67CCFC()
{
  return sub_25F70E740();
}

uint64_t sub_25F67CD20()
{
  return sub_25F70F1E0();
}

uint64_t sub_25F67CD3C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25F67CD4C(uint64_t result)
{
  *(void *)(v1 - 312) = result;
  return result;
}

uint64_t sub_25F67CD70()
{
  return sub_25F67B324();
}

uint64_t sub_25F67CD9C()
{
  return sub_25F70F330();
}

double sub_25F67CDD8()
{
  return fmod(v1, 1.0);
}

uint64_t sub_25F67CDF8()
{
  return sub_25F70F330();
}

uint64_t sub_25F67CE48()
{
  return swift_release();
}

uint64_t sub_25F67CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_25F694334(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

void sub_25F67CEA4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, long long a11, uint64_t a12)
{
  os_unfair_lock_lock(v12);
}

uint64_t sub_25F67CECC()
{
  return sub_25F67A838(v1, v0);
}

uint64_t sub_25F67CEE4()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67CF10@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 40) = result;
  *(unsigned char *)(v3 + 80) = 8;
  return result;
}

uint64_t sub_25F67CF24()
{
  return sub_25F6660F4();
}

uint64_t sub_25F67CF3C()
{
  return 0x6C7070612E6D6F63;
}

uint64_t sub_25F67CF54(uint64_t a1)
{
  return sub_25F67D9DC(a1, 1, v1);
}

uint64_t sub_25F67CF88()
{
  return 0;
}

uint64_t sub_25F67CF98()
{
  return v0;
}

uint64_t sub_25F67CFAC()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_25F67CFC4()
{
  return v0;
}

uint64_t sub_25F67CFE0()
{
  return v0;
}

uint64_t sub_25F67CFF0()
{
  return swift_beginAccess();
}

double sub_25F67D010()
{
  return 0.0;
}

uint64_t sub_25F67D034()
{
  return v0;
}

uint64_t sub_25F67D04C()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67D07C()
{
  return sub_25F70EDB0();
}

uint64_t sub_25F67D098()
{
  return v0;
}

uint64_t sub_25F67D0C4()
{
  return v0;
}

uint64_t sub_25F67D0D8()
{
  return sub_25F70E740();
}

uint64_t sub_25F67D0FC()
{
  return sub_25F70E790();
}

void *sub_25F67D120()
{
  void *v0 = *(void *)(v1 - 168);
  return v0;
}

uint64_t sub_25F67D140()
{
  return v0;
}

void sub_25F67D15C()
{
  *(void *)(v0 - 120) = 0x203A646928706954;
  *(void *)(v0 - 112) = 0xE800000000000000;
}

uint64_t sub_25F67D178(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 - 72) = v8;
  *(void *)(v9 - 240) = a7;
  *(void *)(v9 - 232) = a8;
  *(_DWORD *)(v9 - 252) = a6;
  *(_DWORD *)(v9 - 276) = a5;
  *(void *)(v9 - 288) = a4;
  *(void *)(v9 - 224) = *(void *)(v9 + 16);
  *(void *)(v9 - 216) = result;
  return result;
}

void sub_25F67D1A8(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_25F67D1C8()
{
  return v0;
}

uint64_t sub_25F67D1E4()
{
  return v0;
}

uint64_t sub_25F67D1F8()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67D218()
{
  sub_25F674004(v1, 0, 1, v0);
  return v2;
}

uint64_t sub_25F67D258()
{
  return swift_allocObject();
}

uint64_t sub_25F67D28C()
{
  return v0;
}

uint64_t sub_25F67D2A4()
{
  return v0;
}

uint64_t sub_25F67D2CC()
{
  return v0;
}

uint64_t sub_25F67D2E8()
{
  return v0;
}

char *sub_25F67D300@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_25F67D330(uint64_t a1)
{
  sub_25F687824(v2, v1, a1);
}

uint64_t _s10TipKitCore14AtomicPropertyC9removeAll15keepingCapacityySb_tSDyqd__qd_0_GRszSHRd__s8SendableRd__sAGRd_0_r0_lFfA__0()
{
  return 0;
}

uint64_t sub_25F67D368()
{
  *(unsigned char *)(v1 - 65) = v0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F67D38C(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, 0, 0);
}

uint64_t sub_25F67D398()
{
  return sub_25F70E660();
}

uint64_t sub_25F67D3C0()
{
  return v0;
}

uint64_t sub_25F67D3D8()
{
  return v0;
}

uint64_t sub_25F67D3F8()
{
  return v0;
}

uint64_t sub_25F67D40C()
{
  return sub_25F70F140();
}

uint64_t sub_25F67D424()
{
  return sub_25F70ED60();
}

uint64_t sub_25F67D440()
{
  return sub_25F70F230();
}

uint64_t sub_25F67D46C()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67D490()
{
  return v0;
}

void sub_25F67D4AC()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_25F67D4CC()
{
  return sub_25F70E570();
}

uint64_t sub_25F67D4E4()
{
  return sub_25F70E790();
}

uint64_t sub_25F67D504()
{
  return v0 - 160;
}

uint64_t sub_25F67D51C()
{
  return sub_25F70E570();
}

uint64_t sub_25F67D538()
{
  *(void *)(v2 - 176) = v1;
  return v0;
}

uint64_t sub_25F67D55C()
{
  return v0;
}

uint64_t sub_25F67D570()
{
  return sub_25F70EDA0();
}

uint64_t sub_25F67D58C()
{
  return v0;
}

uint64_t sub_25F67D5A8()
{
  return v0;
}

void *sub_25F67D5E0()
{
  return sub_25F67A2DC(v0, v0[3]);
}

uint64_t sub_25F67D604()
{
  sub_25F674004(v0, 0, 1, v1);
  return 0;
}

uint64_t sub_25F67D62C()
{
  return v0;
}

uint64_t sub_25F67D638()
{
  return v0;
}

uint64_t sub_25F67D64C()
{
  return 1970037110;
}

uint64_t sub_25F67D664()
{
  return v0;
}

uint64_t sub_25F67D680()
{
  return sub_25F70E790();
}

uint64_t sub_25F67D69C()
{
  return sub_25F70F170();
}

uint64_t sub_25F67D6BC()
{
  return v0;
}

uint64_t sub_25F67D6D8()
{
  return sub_25F70F170();
}

uint64_t sub_25F67D6FC()
{
  return v0 + 32;
}

uint64_t sub_25F67D70C()
{
  return swift_beginAccess();
}

uint64_t sub_25F67D734()
{
  return v0;
}

uint64_t sub_25F67D74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v13 - 248) = (char *)&a9 - v9;
  return sub_25F66796C(v10, v11, v12);
}

void sub_25F67D778()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

uint64_t sub_25F67D7A4()
{
  return swift_task_dealloc();
}

char *sub_25F67D7C4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_25F67D7EC()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67D810()
{
  return sub_25F70E6D0();
}

uint64_t sub_25F67D82C(uint64_t a1)
{
  return sub_25F67D9DC(a1, 1, v1);
}

uint64_t sub_25F67D860()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_25F67D87C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_25F67D89C@<X0>(uint64_t a1@<X8>)
{
  return sub_25F69C2BC(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_25F67D8BC()
{
  return v0;
}

uint64_t sub_25F67D8D0()
{
  return v0;
}

void sub_25F67D900()
{
  sub_25F6704D8();
}

uint64_t sub_25F67D920()
{
  return sub_25F70E790();
}

uint64_t sub_25F67D93C(uint64_t result)
{
  *(void *)(v3 - 144) = v1;
  *(void *)(v3 - 136) = v2;
  *(void *)(v3 - 168) = result;
  return result;
}

uint64_t sub_25F67D950()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 240);
  return sub_25F70E570();
}

uint64_t sub_25F67D96C()
{
  return v0;
}

uint64_t sub_25F67D990()
{
  return v0;
}

void sub_25F67D9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 208) = (char *)&a9 - v9;
}

uint64_t sub_25F67D9C8()
{
  return v0;
}

uint64_t sub_25F67D9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

unint64_t sub_25F67DA04()
{
  unint64_t result = qword_26B39D4F0;
  if (!qword_26B39D4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4F0);
  }
  return result;
}

unint64_t sub_25F67DA50()
{
  unint64_t result = qword_26B39CF30;
  if (!qword_26B39CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF30);
  }
  return result;
}

id CoreRule.Predicate.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_25F67ACD8(&qword_26B39D600);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  uint64_t v16 = (uint64_t)a1;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F67EA8C();
  uint64_t v6 = v1;
  sub_25F70F640();
  if (v2)
  {
    id v7 = 0;
    sub_25F67A28C(v16);

    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v19) = 0;
    uint64_t v8 = sub_25F70F1D0();
    uint64_t v9 = (uint64_t *)&v6[OBJC_IVAR___Predicate_id];
    *uint64_t v9 = v8;
    v9[1] = v10;
    char v21 = 1;
    sub_25F67EBD8();
    sub_25F67E02C();
    char v11 = v20;
    uint64_t v12 = &v6[OBJC_IVAR___Predicate_argument];
    *(_OWORD *)uint64_t v12 = v19;
    v12[16] = v11;
    char v21 = 2;
    sub_25F67EB8C();
    sub_25F67E02C();
    v6[OBJC_IVAR___Predicate_operation] = v19;
    char v21 = 3;
    sub_25F67EC24();
    sub_25F67E3E0();
    *(_OWORD *)&v6[OBJC_IVAR___Predicate_rawdata] = v19;
    char v21 = 4;
    sub_25F67EB40();
    sub_25F67E3E0();
    sub_25F67EAD8((uint64_t)&v19, (uint64_t)&v6[OBJC_IVAR___Predicate_value]);
    sub_25F67ACD8(&qword_26B39D5C8);
    char v21 = 5;
    sub_25F67EA20(&qword_26B39D5D8, &qword_26B39D5C8, (void (*)(void))sub_25F695C6C);
    sub_25F67E77C();
    *(void *)&v6[OBJC_IVAR___Predicate_queries] = v19;
    sub_25F67ACD8(&qword_26B39D5B0);
    char v21 = 6;
    sub_25F67EA20(&qword_26B39D5C0, &qword_26B39D5B0, (void (*)(void))sub_25F695D14);
    sub_25F67E77C();
    *(void *)&v6[OBJC_IVAR___Predicate_subpredicates] = v19;

    v18.receiver = v6;
    v18.super_class = ObjectType;
    id v7 = objc_msgSendSuper2(&v18, sel_init);
    uint64_t v14 = sub_25F67CBB4();
    v15(v14);
    sub_25F67A28C(v16);
  }
  return v7;
}

void sub_25F67DF40(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_25F67F8A4(a1, (uint64_t)&a9, a3, a4, a5);
}

uint64_t sub_25F67DF58()
{
  return sub_25F6661F0();
}

uint64_t sub_25F67DF78()
{
  return v0;
}

void *sub_25F67DF90@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_25F67DFAC()
{
  return v0;
}

uint64_t sub_25F67DFFC()
{
  return v0;
}

uint64_t sub_25F67E02C()
{
  return sub_25F70F200();
}

uint64_t sub_25F67E068()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67E0B0()
{
  return sub_25F70F270();
}

uint64_t sub_25F67E0D0()
{
  return sub_25F70F190();
}

uint64_t sub_25F67E12C()
{
  return swift_allocObject();
}

uint64_t sub_25F67E144()
{
  return sub_25F70F280();
}

uint64_t sub_25F67E15C()
{
  return v0;
}

uint64_t sub_25F67E184()
{
  return sub_25F70E570();
}

uint64_t sub_25F67E1C0(char a1)
{
  return sub_25F6E9D58(a1);
}

uint64_t sub_25F67E1DC()
{
  sub_25F674004(v1, 1, 1, v0);
  return v1;
}

uint64_t sub_25F67E254()
{
  return sub_25F70E140();
}

uint64_t sub_25F67E28C()
{
  return v0;
}

uint64_t sub_25F67E2A0()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return sub_25F70EEC0();
}

uint64_t sub_25F67E2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9D030](v7 - 56, v6, a3, v3, v4, v5);
}

uint64_t sub_25F67E2F8()
{
  return v0;
}

uint64_t sub_25F67E324()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25F67E35C()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_25F67E37C()
{
  return v0;
}

uint64_t sub_25F67E39C()
{
  return v0;
}

uint64_t sub_25F67E3C4()
{
  return sub_25F70ED60();
}

uint64_t sub_25F67E3E0()
{
  return sub_25F70F1C0();
}

uint64_t sub_25F67E408()
{
  return sub_25F70F330();
}

uint64_t sub_25F67E42C()
{
  return sub_25F70F330();
}

uint64_t sub_25F67E45C()
{
  return sub_25F70F260();
}

uint64_t sub_25F67E480()
{
  return sub_25F70F5C0();
}

uint64_t sub_25F67E4C8()
{
  uint64_t v2 = *(void *)(v0 + 56);
  sub_25F67A2DC(v1, v2);
  return v2;
}

uint64_t sub_25F67E508()
{
  return *(void *)(v0 - 144);
}

uint64_t sub_25F67E520()
{
  return v0;
}

uint64_t sub_25F67E564()
{
  return v0;
}

uint64_t sub_25F67E580()
{
  return sub_25F70F070();
}

uint64_t sub_25F67E5A4()
{
  return v0;
}

uint64_t sub_25F67E5BC()
{
  return v0 - 96;
}

uint64_t sub_25F67E5D4()
{
  return v0;
}

uint64_t sub_25F67E5FC()
{
  return v0;
}

uint64_t sub_25F67E63C()
{
  return sub_25F70ED90();
}

uint64_t sub_25F67E65C()
{
  return sub_25F70F330();
}

BOOL sub_25F67E68C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_25F67E698()
{
  return sub_25F70F140();
}

uint64_t sub_25F67E6BC()
{
  return v0;
}

uint64_t sub_25F67E708()
{
  return v0;
}

double sub_25F67E72C()
{
  return 0.0;
}

uint64_t sub_25F67E73C()
{
  return sub_25F70E4E0();
}

uint64_t sub_25F67E760()
{
  return sub_25F70EDB0();
}

uint64_t sub_25F67E77C()
{
  return sub_25F70F1C0();
}

uint64_t sub_25F67E7AC()
{
  return *(void *)(v0 - 176);
}

uint64_t sub_25F67E7C4()
{
  return swift_dynamicCast();
}

uint64_t sub_25F67E7EC()
{
  return sub_25F70E440();
}

uint64_t sub_25F67E81C()
{
  return v0;
}

uint64_t sub_25F67E844()
{
  return sub_25F70F330();
}

uint64_t sub_25F67E878()
{
  return sub_25F70E570();
}

uint64_t sub_25F67E880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = v9;
  a9[9] = v10;
  a9[10] = v11;
  a9[11] = v12;
  a9[12] = v13;
  a9[13] = v14;
  return sub_25F6774C8(a1, a2);
}

uint64_t sub_25F67E8B8()
{
  return sub_25F70F5C0();
}

void sub_25F67E8D4()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
}

uint64_t sub_25F67E8E4()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 288);
  *(unsigned char *)(v0 - 96) = *(_DWORD *)(v0 - 276) & 1;
  return swift_setAtWritableKeyPath();
}

uint64_t *sub_25F67E920()
{
  sub_25F675D18((long long *)(v1 - 160), v1 - 120);
  sub_25F67A2DC((void *)(v1 - 120), *(void *)(v1 - 96));
  *(void *)(v1 - 136) = v0;
  return sub_25F677CCC((uint64_t *)(v1 - 160));
}

char *sub_25F67E968@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t sub_25F67E9B0(uint64_t a1)
{
  return sub_25F674004(v1, 1, 1, a1);
}

uint64_t sub_25F67E9DC()
{
  return v0;
}

uint64_t sub_25F67E9F4()
{
  return v0;
}

uint64_t sub_25F67EA20(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F67EA8C()
{
  unint64_t result = qword_26B39D4B8;
  if (!qword_26B39D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4B8);
  }
  return result;
}

uint64_t sub_25F67EAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25F67EB40()
{
  unint64_t result = qword_26B39D570;
  if (!qword_26B39D570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D570);
  }
  return result;
}

unint64_t sub_25F67EB8C()
{
  unint64_t result = qword_26B39D558;
  if (!qword_26B39D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D558);
  }
  return result;
}

unint64_t sub_25F67EBD8()
{
  unint64_t result = qword_26B39D540;
  if (!qword_26B39D540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D540);
  }
  return result;
}

unint64_t sub_25F67EC24()
{
  unint64_t result = qword_26B39D7E8;
  if (!qword_26B39D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D7E8);
  }
  return result;
}

uint64_t sub_25F67EC70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_25F67ECEC()
{
  unint64_t result = qword_26B39CDC8;
  if (!qword_26B39CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CDC8);
  }
  return result;
}

uint64_t sub_25F67ED38(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    unint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_25F67ED80(uint64_t a1)
{
  return sub_25F67ED38(a1, (uint64_t (*)(BOOL))sub_25F674C6C);
}

uint64_t sub_25F67ED98(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_25F67EDF4()
{
  return sub_25F67ED98((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25F674C6C);
}

uint64_t sub_25F67EE0C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  sub_25F67B010(a3, (uint64_t)v8);
  sub_25F67A2DC(v8, v8[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D318);
  sub_25F67F034((uint64_t)&unk_26B39D320);
  sub_25F70E070();
  swift_release();
  sub_25F67EFAC(a1, a2);
  uint64_t result = sub_25F67A28C((uint64_t)v8);
  *a4 = 0;
  return result;
}

uint64_t sub_25F67EFAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25F67A838(a1, a2);
  }
  return a1;
}

uint64_t sub_25F67EFC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_25F67ACD8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25F67F01C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25F67F034(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25F682580(&qword_26B39D318);
    v4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t destroy for AnyCodable(uint64_t a1)
{
  return sub_25F67A28C(a1);
}

uint64_t sub_25F67F0B8@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  sub_25F67B010(a1, (uint64_t)v4);
  sub_25F67A2DC(v4, v4[3]);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39DAC8);
  type metadata accessor for CoreRuleRecord();
  sub_25F678764();
  sub_25F70E060();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_25F67A28C((uint64_t)v4);
  *a2 = 0;
  return result;
}

uint64_t type metadata accessor for CoreRuleRecord()
{
  uint64_t result = qword_26B39DC10;
  if (!qword_26B39DC10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25F67F1D8(uint64_t a1, uint64_t a2)
{
  sub_25F67B010(a2, (uint64_t)v5);
  sub_25F67A2DC(v5, v5[3]);
  swift_getKeyPath();
  uint64_t v3 = sub_25F70DF30();
  sub_25F67B208((uint64_t)&qword_26B39DB00);
  sub_25F70E070();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return sub_25F67A28C((uint64_t)v5);
}

unint64_t CoreRule.Category.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 6;
  if (result < 6) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t static Bool.isRandomizedID(_:)()
{
  if (qword_26B39D9A8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E0B0);
  sub_25F67F3A4(v0, (uint64_t)qword_26B39D9B8);
  sub_25F67F3DC();
  sub_25F67F428();
  return sub_25F70E640() & 1;
}

uint64_t sub_25F67F3A4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_25F67F3DC()
{
  unint64_t result = qword_26B39D9D0;
  if (!qword_26B39D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D9D0);
  }
  return result;
}

unint64_t sub_25F67F428()
{
  unint64_t result = qword_26B39E0B8;
  if (!qword_26B39E0B8)
  {
    sub_25F682580(&qword_26B39E0B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39E0B8);
  }
  return result;
}

uint64_t sub_25F67F47C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  v12[2] = a4;
  v12[3] = a5;
  void v12[4] = a6;
  id v12[5] = a2;
  v12[6] = a3;
  type metadata accessor for WeakReference();
  uint64_t v10 = sub_25F70E5F0();
  uint64_t result = Dictionary.getOrCreate<A>(key:default:)(a1, (uint64_t)sub_25F67FFD0, (uint64_t)v12, v10);
  if (!v7) {
    *a7 = result;
  }
  return result;
}

uint64_t Dictionary.getOrCreate<A>(key:default:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  sub_25F67C9A8();
  uint64_t v10 = MEMORY[0x270FA5388](v8, v9);
  uint64_t v12 = *(void *)(v11 + 24);
  MEMORY[0x2611FB180](&v32, v10, *v4, v7, v12, *(void *)(v11 + 32));
  uint64_t v13 = (uint64_t (*)(uint64_t))a2;
  if (v33)
  {
    sub_25F70ECF0();
    sub_25F675994();
    uint64_t v15 = (*(uint64_t (**)(uint64_t *))(v14 + 8))(&v32);
  }
  else
  {
    sub_25F67C9A8();
    uint64_t v17 = v16;
    sub_25F6764EC();
    v22(v18, v19, v20, v21);
    sub_25F70ECF0();
    sub_25F675994();
    (*(void (**)(uint64_t *))(v23 + 8))(&v32);
    a2 = MEMORY[0x2611FCBA0](v34);
    uint64_t v15 = (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v34, v12);
    if (a2) {
      return a2;
    }
  }
  uint64_t v24 = v13(v15);
  if (!v5)
  {
    a2 = v24;
    sub_25F6764EC();
    v29(v25, v26, v27, v28);
    uint64_t v30 = swift_unknownObjectRetain();
    WeakReference.init(_:)(v30, (uint64_t)&v32);
    sub_25F70E610();
  }
  return a2;
}

uint64_t AtomicProperty.set<A, B>(key:returning:)()
{
  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F67FE74, v1, v2, *(void *)(v0 + 80), *(void *)(*(void *)(*(void *)(v0 + 80) + 24) + 16), v3, v4, v5, v7);
  return v8;
}

void AtomicProperty.wrappedValue.getter()
{
  sub_25F67CF04();
  sub_25F67F8A4((void (*)(uint64_t))sub_25F67F9D8, (uint64_t)&v2, v1, *(void *)(v0 + 80), *(void *)(v0 + 80));
}

uint64_t AtomicProperty.get<A, B>(_:)(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = *(void **)(*v1 + 80);
  uint64_t v4 = v3[3];
  v8[2] = v3[2];
  uint64_t v5 = v3[4];
  void v8[3] = *(void *)(v4 + 16);
  void v8[4] = v5;
  v8[5] = a1;
  uint64_t v6 = sub_25F70ECF0();
  sub_25F67F8A4((void (*)(uint64_t))sub_25F67F9B8, (uint64_t)v8, v2, (uint64_t)v3, v6);
  return v8[7];
}

void sub_25F67F8A4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25F67F930(a3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_25F67F930(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7) {
    *a7 = v7;
  }
}

void sub_25F67F9B8(void *a1@<X8>)
{
}

uint64_t sub_25F67F9D8()
{
  sub_25F675994();
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t WeakReference.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_unknownObjectWeakInit();
  if (a1)
  {
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    uint64_t v4 = type metadata accessor for WeakReference();
    uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v4 - 8) + 32))(a2, v7, v4);
  }
  else
  {
    uint64_t v6 = type metadata accessor for WeakReference();
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v6 - 8) + 8))(v7, v6);
    *(void *)a2 = 0;
  }
  *(unsigned char *)(a2 + 8) = a1 == 0;
  return result;
}

void sub_25F67FB1C(void *a1@<X8>)
{
  type metadata accessor for WeakReference();
  sub_25F70E5F0();
  Dictionary.get<A>(_:)();
  *a1 = v2;
}

uint64_t sub_25F67FB98()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for WeakReference()
{
  return sub_25F67FB98();
}

void Dictionary.get<A>(_:)()
{
  sub_25F6784CC();
  uint64_t v1 = v0;
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v2, v3);
  sub_25F674D58();
  uint64_t v4 = *(void *)(v1 + 24);
  MEMORY[0x2611FB180](&v25);
  char v5 = v26;
  uint64_t v6 = sub_25F70ECF0();
  sub_25F675994();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(&v25, v6);
  if (v5) {
    goto LABEL_7;
  }
  sub_25F676788();
  if (v26)
  {
    uint64_t v8 = sub_25F67E5BC();
    v9(v8);
  }
  else
  {
    sub_25F67C9A8();
    uint64_t v11 = v10;
    sub_25F6764EC();
    v12();
    uint64_t v13 = sub_25F67E5BC();
    v14(v13);
    uint64_t v15 = MEMORY[0x2611FCBA0](&v24);
    (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(&v24, v4);
    if (v15)
    {
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
  }
  sub_25F6764EC();
  v16();
  uint64_t v25 = 0;
  char v26 = 1;
  sub_25F70E610();
LABEL_7:
  sub_25F676788();
  if (v26)
  {
    uint64_t v17 = sub_25F67E5BC();
    v18(v17);
  }
  else
  {
    sub_25F67C9A8();
    uint64_t v20 = v19;
    sub_25F6764EC();
    v21();
    uint64_t v22 = sub_25F67E5BC();
    v23(v22);
    MEMORY[0x2611FCBA0](&v24);
    (*(void (**)(uint64_t *, uint64_t))(v20 + 8))(&v24, v4);
  }
  sub_25F67865C();
}

uint64_t sub_25F67FE14(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t sub_25F67FE3C(void *a1)
{
  return MEMORY[0x2611FB180](v1[5], *a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25F67FE74()
{
  sub_25F6759A0();
  return sub_25F67FE90(v0);
}

uint64_t sub_25F67FE90@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WeakReference();
  sub_25F70E5F0();
  uint64_t result = Dictionary.set<A>(key:returning:)();
  *a1 = result;
  return result;
}

uint64_t Dictionary.set<A>(key:returning:)()
{
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v0, v1);
  char v3 = sub_25F67D7C4(v2, v7);
  v4(v3);
  uint64_t v5 = swift_unknownObjectRetain();
  WeakReference.init(_:)(v5, (uint64_t)&v7);
  sub_25F70E610();
  return swift_unknownObjectRetain();
}

uint64_t sub_25F67FFD0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_25F67FFF8()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_25F680028()
{
  sub_25F67628C();
  return sub_25F67F47C(v0, v1, v2, v3, v4, v5, v6);
}

void sub_25F680044()
{
}

void sub_25F680070()
{
  sub_25F672A18();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v11, v12);
  sub_25F675A6C();
  if (!v2(v10, v8, v6, v4))
  {
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    sub_25F685188(v10, v0);
    sub_25F70E6E0();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v13 = 0xD000000000000026;
    v13[1] = 0x800000025F71A810;
    swift_willThrow();
  }
  sub_25F675E04();
}

uint64_t sub_25F6801AC(uint64_t a1)
{
  return sub_25F6801C8(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_25F6801C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, a3);
}

uint64_t sub_25F68027C()
{
  return sub_25F680298();
}

#error "25F6802EC: call analysis failed (funcsize=28)"

uint64_t sub_25F680308()
{
  return sub_25F680320();
}

uint64_t sub_25F680320()
{
  sub_25F6759A0();
  return sub_25F68033C(v0, v1, v2, v3);
}

uint64_t sub_25F68033C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[1] = a1;
  uint64_t v7 = sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10, v11);
  uint64_t v13 = (char *)v19 - v12;
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v14, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, a3, v7);
  sub_25F70E5F0();
  return sub_25F70E610();
}

void sub_25F68049C()
{
  sub_25F6784CC();
  sub_25F6806EC(v2, v3, v4, v5);
  sub_25F67ACD8(&qword_26B39D330);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F68C6B0();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6796D4();
  sub_25F67D82C(v1);
  if (v13)
  {
    sub_25F6FF370(v1, &qword_26B39DF68);
  }
  else
  {
    uint64_t v14 = sub_25F682E04();
    v15(v14);
    type metadata accessor for CoreParameterRecord();
    sub_25F682878(&qword_26B39DCB0, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
    if (sub_25F6806D0())
    {
      sub_25F67E27C();
      v16();
    }
    else
    {
      sub_25F6809A0();
      MEMORY[0x270FA5388](v17, v18);
      sub_25F6729C4();
      uint64_t v19 = sub_25F682CC0();
      sub_25F6809CC(v19, v0 & 1, v20, MEMORY[0x263F8EE78]);
      if (v0)
      {

        uint64_t v21 = sub_25F67D28C();
        v22(v21);
        uint64_t v23 = sub_25F6FF50C();
        v24(v23);
      }
      else
      {
        uint64_t v25 = sub_25F67D28C();
        v26(v25);
        sub_25F67E27C();
        v27();
      }
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F6806B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6806D0()
{
  return sub_25F70E090();
}

void sub_25F6806EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 104) = a4;
}

uint64_t sub_25F680700()
{
  return sub_25F70E200();
}

void sub_25F680724()
{
  sub_25F6784CC();
  sub_25F678064(v1, v2, v3, v4);
  sub_25F67ACD8(&qword_26B39D330);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F675B10();
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v8 = sub_25F672C08(v7);
  MEMORY[0x270FA5388](v8, v9);
  sub_25F678520();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v10, v11);
  sub_25F676528();
  sub_25F67D82C(v0);
  if (v12)
  {
    sub_25F6FF370(v0, &qword_26B39DF68);
  }
  else
  {
    uint64_t v13 = sub_25F67B304();
    v14(v13);
    sub_25F682878(&qword_26B39DCB0, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
    if (sub_25F672CE0())
    {
      sub_25F67E27C();
      v15();
    }
    else
    {
      sub_25F6809A0();
      MEMORY[0x270FA5388](v16, v17);
      sub_25F671FE0();
      uint64_t v18 = sub_25F682CC0();
      sub_25F6809CC(v18, v27 & 1, v19, MEMORY[0x263F8EE78]);
      if (&qword_26B39DF68)
      {

        uint64_t v20 = sub_25F67D28C();
        v21(v20);
        uint64_t v22 = sub_25F685B94();
        v23(v22);
      }
      else
      {
        uint64_t v24 = sub_25F67D28C();
        v25(v24);
        sub_25F67E27C();
        v26();
      }
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F680930(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67ACD8(a3);
  sub_25F674D1C();
  sub_25F6764EC();
  v4();
  return a2;
}

uint64_t sub_25F680988()
{
  return v0;
}

uint64_t sub_25F6809AC()
{
  return KeyPathAccessible.with<A>(_:_:)();
}

uint64_t sub_25F6809CC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v6 - 104);
  return sub_25F6809EC(v4, a2, v8, a4, v5);
}

uint64_t sub_25F6809EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  int v42 = a2;
  uint64_t v46 = a1;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DBD0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25F67ACD8(&qword_26B39D338);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v11 = v40;
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v25 = MEMORY[0x270FA5388](v21, v24);
  uint64_t v41 = (char *)&v39 - v26;
  MEMORY[0x270FA5388](v25, v27);
  uint64_t v43 = (char *)&v39 - v28;
  uint64_t v29 = sub_25F67ACD8(&qword_26B39D330);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v9, a5, v29);
  sub_25F674004((uint64_t)v9, 0, 1, v29);
  uint64_t v30 = type metadata accessor for CoreParameterRecord();
  uint64_t v31 = sub_25F682878(&qword_26B39DCB0, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_25F70E200();
  uint64_t v53 = v30;
  uint64_t v54 = v31;
  swift_getKeyPath();
  uint64_t v55 = 1;
  char v56 = 0;
  swift_setAtWritableKeyPath();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v32(v19, v15, v10);
  swift_release();
  uint64_t v51 = v30;
  uint64_t v52 = v31;
  swift_getKeyPath();
  LOBYTE(v55) = v42;
  swift_setAtWritableKeyPath();
  v32(v23, v19, v10);
  swift_release();
  uint64_t v49 = v30;
  uint64_t v50 = v31;
  swift_getKeyPath();
  uint64_t v55 = v44;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  char v33 = v41;
  v32(v41, v23, v10);
  swift_release();
  uint64_t v47 = v30;
  uint64_t v48 = v31;
  swift_getKeyPath();
  uint64_t v55 = v45;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  uint64_t v34 = v43;
  v32(v43, v33, v10);
  swift_release();
  uint64_t v35 = v57;
  unint64_t v36 = sub_25F70E110();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v10);
  if (v35) {
    return v30;
  }
  if (v36 >> 62)
  {
    sub_25F70E570();
    if (!sub_25F70F100()) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_25F70E570();
    if (!v37) {
      goto LABEL_7;
    }
  }
  if ((v36 & 0xC000000000000001) != 0) {
    MEMORY[0x2611FBA70](0, v36);
  }
  else {
    swift_retain();
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v30) {
    swift_release();
  }
  return v30;
}

uint64_t sub_25F680E94@<X0>(uint64_t *a1@<X8>)
{
  sub_25F67ACD8(&qword_26B39D7C0);
  sub_25F67CA24();
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  MEMORY[0x270FA5388](v3, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D308);
  sub_25F67CA24();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_25F67ACD8(&qword_26B39D2F0);
  sub_25F67CA24();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20, v21);
  sub_25F675A6C();
  sub_25F681778(&qword_26B39D300, &qword_26B39D308);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v9);
  sub_25F70DD00();
  a1[3] = sub_25F67ACD8(&qword_26B39D2D8);
  a1[4] = sub_25F682950();
  sub_25F677CCC(a1);
  sub_25F681778(&qword_26B39D2E8, &qword_26B39D2F0);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  sub_25F70DBE0();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v8, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v1, v17);
}

uint64_t sub_25F681140@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v20[1] = a1;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DB30);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  uint64_t v22 = v4;
  MEMORY[0x270FA5388](v3, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F67ACD8(&qword_26B39D308);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_25F67ACD8(&qword_26B39D1C0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39D300, &qword_26B39D308);
  sub_25F70DD10();
  uint64_t v23 = type metadata accessor for CoreParameterRecord();
  uint64_t v24 = sub_25F682878(&qword_26B39DCB0, 255, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  sub_25F70E3C0();
  sub_25F70DD00();
  a2[3] = sub_25F67ACD8(&qword_26B39D1A8);
  a2[4] = sub_25F681958();
  sub_25F677CCC(a2);
  sub_25F681778(&qword_26B39D1B8, &qword_26B39D1C0);
  sub_25F681778((unint64_t *)&qword_26B39DB28, &qword_26B39DB30);
  sub_25F682878(&qword_26B39DB60, 255, MEMORY[0x263F18140]);
  uint64_t v18 = v21;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t String.init<A>(type:)()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E0B0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_25F70F720();
  unint64_t v7 = v6;
  uint64_t v22 = 46;
  unint64_t v23 = 0xE100000000000000;
  uint64_t v17 = &v22;
  sub_25F70E570();
  uint64_t v8 = sub_25F679768(0x7FFFFFFFFFFFFFFFLL, 1u, sub_25F679BA0, (uint64_t)v16, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_25F6817BC(1, v8);
  unint64_t v23 = v9;
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  sub_25F67ACD8(&qword_26B39DF80);
  sub_25F681778(&qword_26B39DF78, &qword_26B39DF80);
  sub_25F681874();
  uint64_t v12 = sub_25F70E880();
  uint64_t v14 = v13;
  swift_unknownObjectRelease();
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  sub_25F70E000();
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_25F6818C0();
  sub_25F68190C();
  sub_25F681778((unint64_t *)&qword_26B39E0B8, &qword_26B39E0B0);
  sub_25F70EC30();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_25F681778(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F6817BC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_25F681828(0, result, v3);
  if (v4) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result;
  }
  if (v3 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25F681828(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

unint64_t sub_25F681874()
{
  unint64_t result = qword_26B39DF70;
  if (!qword_26B39DF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DF70);
  }
  return result;
}

unint64_t sub_25F6818C0()
{
  unint64_t result = qword_26B39E0C8;
  if (!qword_26B39E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39E0C8);
  }
  return result;
}

unint64_t sub_25F68190C()
{
  unint64_t result = qword_26B39E0C0;
  if (!qword_26B39E0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39E0C0);
  }
  return result;
}

unint64_t sub_25F681958()
{
  unint64_t result = qword_26B39D1A0;
  if (!qword_26B39D1A0)
  {
    sub_25F682580(&qword_26B39D1A8);
    sub_25F68F0DC(&qword_26B39D1B0, &qword_26B39D1C0, &qword_26B39D2F8, &qword_26B39D308);
    sub_25F68F170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D1A0);
  }
  return result;
}

uint64_t sub_25F6819F4@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v79 = a3;
  uint64_t v80 = a4;
  unint64_t v67 = a2;
  uint64_t v87 = a5;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D8B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  uint64_t v86 = v7;
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v84 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25F67ACD8(&qword_26B39D890);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v88 = v10;
  uint64_t v89 = v11;
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v83 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_25F67ACD8(&qword_26B39DA50);
  uint64_t v78 = *(void (***)(char *, uint64_t))(v75 - 8);
  MEMORY[0x270FA5388](v75, v14);
  uint64_t v73 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_25F67ACD8(&qword_26B39D928);
  uint64_t v93 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74, v16);
  uint64_t v69 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_25F67ACD8(&qword_26B39D968);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v76 = v18;
  uint64_t v77 = v19;
  MEMORY[0x270FA5388](v18, v20);
  uint64_t v72 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_25F67ACD8(&qword_26B39D910);
  uint64_t v68 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66, v22);
  uint64_t v24 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25F67ACD8(&qword_26B39D980);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v27);
  uint64_t v29 = (char *)v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_25F67ACD8(&qword_26B39D940);
  uint64_t v65 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30, v31);
  char v33 = (char *)v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_25F67ACD8(&qword_26B39D8F8);
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70, v34);
  uint64_t v91 = (char *)v62 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_25F67ACD8(&qword_26B39D8D0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v81 = v36;
  uint64_t v82 = v37;
  MEMORY[0x270FA5388](v36, v38);
  uint64_t v92 = (char *)v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = *a1;
  unint64_t v40 = sub_25F682540((uint64_t)&unk_26B39D978);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v26 + 8);
  v41(v29, v25);
  uint64_t v63 = v41;
  uint64_t v64 = v26 + 8;
  unint64_t v94 = v67;
  sub_25F70DD00();
  unint64_t v67 = MEMORY[0x263F06CB0];
  sub_25F682540((uint64_t)&unk_26B39D938);
  v62[0] = MEMORY[0x263F06C70];
  sub_25F682540((uint64_t)&unk_26B39D908);
  uint64_t v42 = v30;
  uint64_t v43 = v66;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v24, v43);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v42);
  v62[1] = v40;
  sub_25F70DD10();
  swift_getKeyPath();
  uint64_t v44 = v69;
  sub_25F70DBF0();
  swift_release();
  v41(v29, v25);
  unint64_t v94 = v79;
  uint64_t v95 = v80;
  sub_25F67ACD8(&qword_26B39DA98);
  uint64_t v45 = v73;
  sub_25F70DD00();
  sub_25F682540((uint64_t)&unk_26B39D920);
  sub_25F682540((uint64_t)&unk_26B39DA48);
  unint64_t v79 = sub_25F65F814((uint64_t)&unk_26B39DAA8);
  uint64_t v46 = v72;
  uint64_t v47 = v74;
  uint64_t v48 = v75;
  sub_25F70DC20();
  v78[1](v45, v48);
  uint64_t v49 = *(void (***)(char *, uint64_t))(v93 + 8);
  v93 += 8;
  uint64_t v78 = v49;
  ((void (*)(char *, uint64_t))v49)(v44, v47);
  sub_25F682540((uint64_t)&unk_26B39D8F0);
  uint64_t v80 = MEMORY[0x263F06CE0];
  sub_25F682540((uint64_t)&unk_26B39D960);
  uint64_t v50 = v91;
  uint64_t v51 = v70;
  uint64_t v52 = v76;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v46, v52);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v51);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  v63(v29, v25);
  uint64_t v53 = v84;
  sub_25F70DC60();
  sub_25F682540((uint64_t)&unk_26B39D8B0);
  uint64_t v54 = v83;
  uint64_t v55 = v85;
  sub_25F70DC20();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v55);
  ((void (*)(char *, uint64_t))v78)(v44, v47);
  uint64_t v56 = sub_25F67ACD8(&qword_26B39D8E0);
  uint64_t v57 = v87;
  v87[3] = v56;
  v57[4] = sub_25F6825C8((uint64_t)&unk_26B39D8D8);
  sub_25F677CCC(v57);
  sub_25F682540((uint64_t)&unk_26B39D8C8);
  sub_25F682540((uint64_t)&unk_26B39D950);
  uint64_t v58 = v92;
  uint64_t v59 = v81;
  uint64_t v60 = v88;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v54, v60);
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v58, v59);
}

unint64_t sub_25F682540(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    sub_25F682580(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F682580(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25F6825C8(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_25F682580(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F68264C()
{
  sub_25F67ACD8(&qword_26B39DE30);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25F712E90;
  uint64_t v1 = type metadata accessor for CoreTipRecord();
  uint64_t v2 = sub_25F6828C0(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = type metadata accessor for CoreRuleRecord();
  uint64_t v4 = sub_25F6828C0((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = type metadata accessor for CoreParameterRecord();
  uint64_t v6 = sub_25F6828C0(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = type metadata accessor for CoreEventRecord();
  uint64_t v8 = sub_25F6828C0(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = v8;
  uint64_t v9 = type metadata accessor for CoreDonationRecord();
  uint64_t v10 = sub_25F6828C0(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v10;
  return v0;
}

uint64_t sub_25F6827E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F682830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F682878(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F6828C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F682908(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F682950()
{
  unint64_t result = qword_26B39D2D0;
  if (!qword_26B39D2D0)
  {
    sub_25F682580(&qword_26B39D2D8);
    sub_25F696B48();
    sub_25F696D84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D2D0);
  }
  return result;
}

void Dictionary.set(key:returning:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_25F6784CC();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = *(void *)(v25 + 24);
  sub_25F70ECF0();
  sub_25F67869C();
  MEMORY[0x270FA5388](v27, v28);
  uint64_t v30 = (char *)&a9 - v29;
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v31, v32);
  sub_25F677E8C();
  (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v20, v24);
  sub_25F675994();
  uint64_t v35 = *(void (**)(void))(v34 + 16);
  sub_25F682DC8();
  v35();
  sub_25F674004((uint64_t)v30, 0, 1, v26);
  sub_25F70E610();
  sub_25F682DC8();
  v35();
  sub_25F67865C();
}

uint64_t CoreParameterRecord.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t CoreRuleRecord.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_25F682C20()
{
  return sub_25F70F1D0();
}

uint64_t sub_25F682C3C()
{
  return swift_allocObject();
}

uint64_t sub_25F682C60(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_25F67B010(a2, (uint64_t)va);
}

uint64_t sub_25F682C88()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F682CC0()
{
  return sub_25F70DFA0();
}

uint64_t sub_25F682CF0()
{
  return v0;
}

uint64_t sub_25F682D1C@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_25F682D50()
{
  return v0;
}

uint64_t sub_25F682D68()
{
  return sub_25F70DFD0();
}

uint64_t sub_25F682D84()
{
  return v0;
}

uint64_t sub_25F682D9C()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 224);
  return sub_25F70E570();
}

uint64_t sub_25F682DDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F682DF8()
{
  return v0;
}

uint64_t sub_25F682E04()
{
  return v0;
}

uint64_t sub_25F682E24()
{
  return v0;
}

uint64_t sub_25F682E3C()
{
  return v0;
}

uint64_t destroy for DeviceProfile(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_25F70DF30();
  if (!sub_25F67D9DC(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = _s12DisplayEventVMa();
  if (!sub_25F67D9DC(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6 + *(int *)(v7 + 20), v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceProfile(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_25F70DF30();
  sub_25F70E570();
  if (sub_25F67D9DC((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_25F67ACD8(&qword_26B39DBA8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    sub_25F674004((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = _s12DisplayEventVMa();
  sub_25F70E570();
  if (sub_25F67D9DC((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_25F67ACD8(&qword_26B39D3B0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v17;
    uint64_t v18 = *(int *)(v15 + 20);
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    sub_25F70E570();
    v21(v19, v20, v10);
    sub_25F674004((uint64_t)v13, 0, 1, v15);
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F683158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25F6DE0BC);
}

uint64_t _s12DisplayEventVMa()
{
  uint64_t result = qword_26B39DCE0;
  if (!qword_26B39DCE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25F6831B4()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39D590);
  MEMORY[0x270FA5388](v0, v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  CoreTipRecord.status.getter();
  sub_25F6759B0();
  if (!v4)
  {
    if (qword_26B39D588 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_25F67F3A4(v0, (uint64_t)qword_26B3A3028);
    swift_beginAccess();
    sub_25F683A4C(v5, (uint64_t)v3);
    uint64_t v6 = type metadata accessor for DeviceProfile();
    int v7 = sub_25F67D9DC((uint64_t)v3, 1, v6);
    sub_25F67EFC0((uint64_t)v3, &qword_26B39D590);
    if (v7 != 1)
    {
      swift_beginAccess();
      if (sub_25F67D9DC(v5, 1, v6))
      {
        swift_endAccess();
      }
      else
      {
        CoreTipRecord.id.getter();
        uint64_t v9 = v8;
        uint64_t v11 = v10;
        if (qword_26B39E328 != -1) {
          swift_once();
        }
        swift_beginAccess();
        if (HIBYTE(word_26B39E410) == 1)
        {
          if (*(void *)(*(void *)(v5 + *(int *)(v6 + 36)) + 16))
          {
            sub_25F70E570();
            sub_25F67AD88(v9, v11);
            char v13 = v12;
            swift_bridgeObjectRelease();
            if (v13) {
              sub_25F6ED944(v9, v11);
            }
          }
        }
        if (*(void *)(*(void *)(v5 + *(int *)(v6 + 36)) + 16))
        {
          sub_25F70E570();
          sub_25F67AD88(v9, v11);
          char v15 = v14;
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15)
          {
            if (qword_26B39D830 != -1) {
              swift_once();
            }
            uint64_t v16 = type metadata accessor for logger();
            sub_25F67F3A4(v16, (uint64_t)qword_26B39D818);
            uint64_t v20 = 0;
            unint64_t v21 = 0xE000000000000000;
            sub_25F70EEC0();
            swift_bridgeObjectRelease();
            sub_25F675B8C();
            uint64_t v20 = v17;
            unint64_t v21 = v18;
            CoreTipRecord.id.getter();
            sub_25F70E790();
            swift_bridgeObjectRelease();
            sub_25F672B5C();
            sub_25F70E790();
            sub_25F68C2F0(v20, v21);
            swift_bridgeObjectRelease();
            sub_25F67E1C0(6);
          }
        }
        else
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for DeviceProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25F6F0280);
}

uint64_t sub_25F68350C()
{
  sub_25F6835B0();
  sub_25F685FA4(0xD000000000000010, 0x800000025F7198B0, v0);
  sub_25F67ACD8(&qword_26B39D670);
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

void sub_25F6835B0()
{
}

uint64_t sub_25F683684(char a1)
{
  sub_25F6835B0();
  uint64_t v5 = v2;
  v4[39] = a1;
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  swift_dynamicCast();
  sub_25F683728((uint64_t)v4, 0xD000000000000010, 0x800000025F7198B0);
  return sub_25F68398C();
}

uint64_t sub_25F683728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_25F67AD1C((_OWORD *)a1, v6);
    sub_25F6837BC(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F685E7C(a1, &qword_26B39D670);
    sub_25F6E6114(a2, a3, v6);
    swift_bridgeObjectRelease();
    return sub_25F685E7C((uint64_t)v6, &qword_26B39D670);
  }
}

uint64_t sub_25F6837BC(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_25F68384C(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

_OWORD *sub_25F68384C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  char v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25F67AD88(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25F67ACD8(&qword_26B39D5F8);
  if ((sub_25F70F0A0() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25F67AD88(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)sub_25F70F520();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  char v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v11);
    sub_25F67A28C((uint64_t)v16);
    return sub_25F67AD1C(a1, v16);
  }
  else
  {
    sub_25F68C284(v11, a2, a3, a1, v15);
    return (_OWORD *)sub_25F70E570();
  }
}

uint64_t sub_25F68398C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F683A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DeviceProfile()
{
  uint64_t result = qword_26B39DD38;
  if (!qword_26B39DD38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_25F683AFC()
{
  sub_25F672A18();
  uint64_t v3 = v0;
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  uint64_t v7 = v6;
  uint64_t v49 = v8;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v13 - 8, v14);
  sub_25F674D94();
  uint64_t v46 = v15;
  sub_25F67ACD8(&qword_26B39D800);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F6759BC();
  uint64_t v20 = v19 - v18;
  sub_25F67ACD8(&qword_26B39D440);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v21, v22);
  sub_25F6768BC();
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_25F711040;
  *(void *)(v23 + 32) = swift_getKeyPath();
  v52[0] = v23;
  sub_25F70E930();
  swift_getKeyPath();
  sub_25F684BFC((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  sub_25F70DFA0();
  sub_25F70E570();
  uint64_t v48 = sub_25F68709C(v7, 0, v23, v2, v20, v3, v12, v10);
  if (v1)
  {
    swift_bridgeObjectRelease();

    uint64_t v24 = sub_25F67D490();
    v25(v24);
    uint64_t v26 = sub_25F67D734();
    v27(v26);
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    v52[0] = 0xD000000000000024;
    v52[1] = 0x800000025F71A840;
    (*(void (**)(uint64_t))(v51 + 32))(v50);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F6931C0();
    swift_allocError();
    void *v28 = 0xD000000000000024;
    v28[1] = 0x800000025F71A840;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_25F67D490();
    v30(v29);
    uint64_t v31 = sub_25F67D734();
    v32(v31);
    sub_25F68E3B8(v49, v7, v50, v51);
    uint64_t v33 = v7;
    uint64_t v47 = *(uint64_t (**)(uint64_t))(v51 + 64);
    uint64_t v34 = v47(v50);
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v36 = (void *)(v34 + 32);
      type metadata accessor for CoreRuleRecord();
      do
      {
        uint64_t v37 = v36[3];
        uint64_t v38 = v36[4];
        uint64_t v39 = sub_25F67A2DC(v36, v37);
        sub_25F68F518((unint64_t)v39, v48, 0, v33, v37, v38);
        swift_release();
        v36 += 5;
        --v35;
      }
      while (v35);
    }
    swift_bridgeObjectRelease();
    uint64_t v40 = ((uint64_t (*)(uint64_t, uint64_t))v47)(v50, v51);
    uint64_t v41 = sub_25F685FCC(v40);
    uint64_t v42 = sub_25F690418(v41);
    swift_bridgeObjectRelease();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v51 + 72))(v52, v50, v51);
    char v43 = v53;
    swift_bridgeObjectRelease();
    sub_25F6862D4(v42, v43, v33);
    swift_bridgeObjectRelease();
    sub_25F67D140();
    sub_25F6831B4();
    sub_25F67D140();
    sub_25F687C0C();
    sub_25F67D140();
    sub_25F687938();
    char v44 = _s10TipKitCore14AtomicPropertyC9removeAll15keepingCapacityySb_tSDyqd__qd_0_GRszSHRd__s8SendableRd__sAGRd_0_r0_lFfA__0();
    sub_25F687FD8(v44 & 1, v49, v33, v50, v51);
    sub_25F68ACD0();
    if (sub_25F70E0B0()) {
      sub_25F70E100();
    }
    if (qword_26B39D6A8 != -1) {
      swift_once();
    }
    sub_25F684BFC(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
    swift_retain();
    sub_25F70E220();
    uint64_t v45 = sub_25F70E3C0();
    sub_25F674004(v46, 0, 1, v45);
    sub_25F684C44();
    swift_release();
    sub_25F673A7C(v46);
    type metadata accessor for CoreTip();
    CoreTipRecord.status.getter();
    CoreTipRecord.invalidationReason.getter();
    sub_25F68BBB0();
  }
  sub_25F675E04();
}

uint64_t sub_25F684160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v81 = a4;
  uint64_t v82 = a6;
  uint64_t v83 = a3;
  uint64_t v9 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v9 - 8, v10);
  uint64_t v69 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness, v12);
  uint64_t v75 = (char *)v67 - v14;
  uint64_t v73 = *(void *)(a5 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v13, v15);
  uint64_t v74 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v72 = (char *)v67 - v19;
  uint64_t v77 = sub_25F67ACD8(&qword_26B39D330);
  uint64_t v20 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77, v21);
  uint64_t v23 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_25F67ACD8(&qword_26B39D2C8);
  uint64_t v24 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76, v25);
  uint64_t v27 = (char *)v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_25F684BB4((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  uint64_t v90 = a1;
  uint64_t v91 = a2;
  uint64_t v28 = a2;
  uint64_t v94 = v80;
  sub_25F70DFA0();
  uint64_t v78 = a5;
  uint64_t v85 = a5;
  uint64_t v86 = v82;
  uint64_t v87 = a1;
  uint64_t v88 = a2;
  uint64_t v89 = v83;
  uint64_t v29 = (void *)v79;
  uint64_t v79 = sub_25F6852EC(v81, 0, MEMORY[0x263F8EE78], (uint64_t)v27, (uint64_t)v23, (uint64_t)sub_25F6CA498, (uint64_t)v84);
  if (v29)
  {

    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v77);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v76);
    unint64_t v92 = 0;
    unint64_t v93 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    unint64_t v92 = 0xD00000000000002ALL;
    unint64_t v93 = 0x800000025F719800;
    (*(void (**)(uint64_t))(*(void *)(v82 + 16) + 16))(v78);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    unint64_t v31 = v92;
    unint64_t v32 = v93;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v33 = v31;
    v33[1] = v32;
    swift_willThrow();
    return v79;
  }
  char v35 = v30;
  uint64_t v68 = 0;
  v67[0] = a1;
  v67[1] = v28;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v77);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v76);
  uint64_t v36 = v73;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  uint64_t v38 = v72;
  uint64_t v39 = v78;
  v37(v72, v83, v78);
  if (v35)
  {
    char v40 = 1;
    uint64_t v41 = v82;
  }
  else
  {
    uint64_t v41 = v82;
    char v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 48))(v39, v82);
  }
  uint64_t v42 = v75;
  char v43 = *(void (**)(char *, uint64_t))(v36 + 8);
  v43(v38, v39);
  char v44 = v74;
  v37(v74, v83, v39);
  if (v40)
  {
    v43(v44, v39);
    uint64_t v34 = v79;
LABEL_8:
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v46 = v42;
    (*(void (**)(uint64_t, uint64_t))(v41 + 56))(v39, v41);
    uint64_t v47 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    uint64_t v48 = v68;
    uint64_t v49 = sub_25F67BE7C();
    uint64_t v68 = v48;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v47);
      swift_release();
      swift_release();
      return v34;
    }
    uint64_t v60 = v49;
    unint64_t v61 = v50;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v47);
    sub_25F686544(KeyPath, v60, v61);
    swift_release();
    sub_25F67A838(v60, v61);
    swift_getKeyPath();
    CoreParameterProtocol.valueType.getter();
    sub_25F68703C();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  uint64_t v51 = CoreParameterProtocol.valueType.getter();
  uint64_t v53 = v52;
  uint64_t v34 = v79;
  if (v51 == CoreParameterRecord.valueType.getter() && v53 == v54)
  {
    swift_bridgeObjectRelease_n();
    v43(v44, v39);
  }
  else
  {
    char v56 = sub_25F70F330();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43(v44, v39);
    uint64_t v42 = v75;
    if ((v56 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v57 = CoreParameterRecord.valueData.getter();
  unint64_t v59 = v58;
  (*(void (**)(void))(v41 + 64))();
  sub_25F67EFAC(v57, v59);
LABEL_19:
  char v62 = sub_25F70E0B0();
  uint64_t v63 = v68;
  if (v62)
  {
    sub_25F70E100();
    uint64_t v64 = (uint64_t)v69;
    if (v63)
    {
      swift_release();
      return v34;
    }
  }
  else
  {
    uint64_t v64 = (uint64_t)v69;
  }
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_25F684BB4(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  swift_retain();
  sub_25F70E220();
  uint64_t v65 = sub_25F70E3C0();
  sub_25F674004(v64, 0, 1, v65);
  sub_25F684C44();
  swift_release();
  sub_25F673A7C(v64);
  return v34;
}

uint64_t sub_25F684AE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F684B28(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_25F684B6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F684BB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F684BFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25F684C44()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F684CA8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F684CA8(uint64_t a1)
{
  return sub_25F684CC4(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25F684CC4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_25F684CE8(a1, *a2, a2[1], a3);
}

uint64_t sub_25F684CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F685188(a4, (uint64_t)v10);
  sub_25F70E570();
  return sub_25F684DA0((uint64_t)v10, a2, a3);
}

uint64_t sub_25F684DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DF68);
  uint64_t v9 = sub_25F672C08(v8);
  MEMORY[0x270FA5388](v9, v10);
  sub_25F676730();
  uint64_t v11 = sub_25F70E3C0();
  sub_25F67CA24();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14, v15);
  sub_25F6768BC();
  if (sub_25F67D9DC(a1, 1, v11) == 1)
  {
    sub_25F685E7C(a1, &qword_26B39DF68);
    sub_25F6E6250(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_25F685E7C(v3, &qword_26B39DF68);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v4, a1, v11);
    sub_25F684EDC(v4, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25F684EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_25F684F6C(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F684F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25F67AD88(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25F67ACD8(&qword_26B39D858);
  if ((sub_25F70F0A0() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25F67AD88(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_25F70F520();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_25F70E3C0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v11;
    return v19(v21, a1, v20);
  }
  else
  {
    sub_25F6850D8(v11, a2, a3, a1, v15);
    return sub_25F70E570();
  }
}

uint64_t sub_25F6850D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_25F70E3C0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_25F685188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6851F0()
{
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&unk_26B39DCA8);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&unk_26B39DCB0);
  sub_25F70E2C0();
  swift_release();
  return v0;
}

uint64_t sub_25F6852EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_25F685334(a1, a2, a3, a4, a5, a6, a7, &qword_26B39D360, &qword_26B39D2C8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25F68586C);
}

uint64_t sub_25F685334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_25F67ACD8(a8);
  uint64_t v15 = sub_25F67ACD8(a9);
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_25F710D20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 16))(v18 + v17, a4, v15);
  uint64_t v19 = a10(a1, a2, a3, v18, a5, v22, a6, a7);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t CoreParameterProtocol.valueType.getter()
{
  return sub_25F70E6E0();
}

uint64_t CoreParameterRecord.valueType.getter()
{
  return sub_25F6851F0();
}

void sub_25F6854E4()
{
  sub_25F672A18();
  sub_25F67807C(v5, v6, v7, v8);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39DBB8);
  uint64_t v10 = sub_25F672C08(v9);
  MEMORY[0x270FA5388](v10, v11);
  sub_25F674D58();
  sub_25F67ACD8(&qword_26B39D5A0);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F675E58();
  MEMORY[0x270FA5388](v14, v15);
  sub_25F672AD4();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F679F78();
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  sub_25F67D9B0(v20, v21, v22, v23, v24, v25, v26, v27, v39);
  MEMORY[0x270FA5388](v28, v29);
  sub_25F674F7C();
  sub_25F67ACD8(&qword_26B39D4B0);
  sub_25F674D1C();
  uint64_t v30 = sub_25F682E24();
  v31(v30);
  sub_25F679720();
  type metadata accessor for CoreRuleRecord();
  sub_25F682908((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F68584C();
  swift_getKeyPath();
  sub_25F676578();
  uint64_t v32 = sub_25F67D538();
  ((void (*)(uint64_t))v0)(v32);
  sub_25F685BF8();
  swift_getKeyPath();
  sub_25F677FFC();
  sub_25F67E618();
  v0();
  swift_release();
  swift_getKeyPath();
  sub_25F685CDC();
  sub_25F685E60();
  sub_25F67E618();
  v0();
  swift_release();
  swift_getKeyPath();
  sub_25F685BA8();
  sub_25F675F44();
  sub_25F67E618();
  v0();
  sub_25F685C90();
  sub_25F6793A4();
  if (v2)
  {
    uint64_t v33 = sub_25F676808();
    v34(v33);
LABEL_12:
    sub_25F68C6D8();
    sub_25F675E04();
    return;
  }
  sub_25F67861C();
  if (!v35)
  {
    sub_25F685BE0();
    if (v3) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_25F66D9B0();
    v4();
    sub_25F68EF5C();
    goto LABEL_11;
  }
  sub_25F672CA0();
  sub_25F70F100();
  sub_25F707330();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v1 & 0xC000000000000001) != 0)
  {
    sub_25F68EE1C();
    goto LABEL_8;
  }
  sub_25F685C5C();
  if (v36)
  {
    sub_25F685DF0();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v37 = sub_25F67D860();
    v38(v37);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_25F6857B4()
{
  *(void *)(v0 + 40) = *(void *)(v1 + 40);
  uint64_t result = *(void *)(v1 + 48);
  *(void *)(v0 + 48) = result;
  return result;
}

uint64_t sub_25F6857C8(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t sub_25F6857DC()
{
  return swift_allocObject();
}

uint64_t sub_25F68580C()
{
  return 0x4479616C70736964;
}

uint64_t sub_25F68584C()
{
  return sub_25F70E200();
}

void sub_25F68586C()
{
  sub_25F672A18();
  sub_25F67807C(v5, v6, v7, v8);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39DBD0);
  uint64_t v10 = sub_25F672C08(v9);
  MEMORY[0x270FA5388](v10, v11);
  sub_25F674D58();
  sub_25F67ACD8(&qword_26B39D338);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F675E58();
  MEMORY[0x270FA5388](v14, v15);
  sub_25F672AD4();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F679F78();
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  sub_25F67D9B0(v20, v21, v22, v23, v24, v25, v26, v27, v39);
  MEMORY[0x270FA5388](v28, v29);
  sub_25F674F7C();
  sub_25F67ACD8(&qword_26B39D330);
  sub_25F674D1C();
  uint64_t v30 = sub_25F682E24();
  v31(v30);
  sub_25F679720();
  type metadata accessor for CoreParameterRecord();
  sub_25F682908(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_25F68584C();
  swift_getKeyPath();
  sub_25F676578();
  uint64_t v32 = sub_25F67D538();
  ((void (*)(uint64_t))v0)(v32);
  sub_25F685BF8();
  swift_getKeyPath();
  sub_25F677FFC();
  sub_25F67E618();
  v0();
  swift_release();
  swift_getKeyPath();
  sub_25F685CDC();
  sub_25F685E60();
  sub_25F67E618();
  v0();
  swift_release();
  swift_getKeyPath();
  sub_25F685BA8();
  sub_25F675F44();
  sub_25F67E618();
  v0();
  sub_25F685C90();
  sub_25F6793A4();
  if (v2)
  {
    uint64_t v33 = sub_25F676808();
    v34(v33);
LABEL_12:
    sub_25F68C6D8();
    sub_25F675E04();
    return;
  }
  sub_25F67861C();
  if (!v35)
  {
    sub_25F685BE0();
    if (v3) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_25F66D9B0();
    v4();
    sub_25F68EF5C();
    goto LABEL_11;
  }
  sub_25F672CA0();
  sub_25F70F100();
  sub_25F707330();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v1 & 0xC000000000000001) != 0)
  {
    sub_25F68EE1C();
    goto LABEL_8;
  }
  sub_25F685C5C();
  if (v36)
  {
    sub_25F685DF0();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t v37 = sub_25F67D860();
    v38(v37);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_25F685B3C()
{
  return sub_25F70F640();
}

uint64_t sub_25F685B70()
{
  return swift_dynamicCast();
}

uint64_t sub_25F685B94()
{
  return v0;
}

uint64_t sub_25F685BA8()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 184);
  return sub_25F70E570();
}

uint64_t sub_25F685BF8()
{
  return swift_release();
}

uint64_t sub_25F685C10()
{
  return sub_25F70E570();
}

uint64_t sub_25F685C34()
{
  *(void *)(v1 - 96) = v0;
  *(unsigned char *)(v1 - 88) = 0;
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F685C74()
{
  return sub_25F6FF370(v0, v1);
}

uint64_t sub_25F685C90()
{
  return swift_release();
}

uint64_t sub_25F685CA8()
{
  return v0;
}

void sub_25F685CBC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 336) = a1;
}

uint64_t sub_25F685CC8()
{
  return v0;
}

uint64_t sub_25F685CDC()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 192);
  return sub_25F70E570();
}

uint64_t sub_25F685CF8()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v2 = sub_25F672C08(v1);
  MEMORY[0x270FA5388](v2, v3);
  sub_25F670BE4();
  sub_25F685FA4(0x696C457473726966, 0xED0000656C626967, v4);
  sub_25F67ACD8(&qword_26B39D670);
  sub_25F70DF30();
  if (sub_25F672988())
  {
    sub_25F6E68E4();
    uint64_t v5 = sub_25F680988();
    v6(v5);
  }
  else
  {
    sub_25F685FA8();
    sub_25F685E7C(v0, &qword_26B39DBA8);
  }
  return sub_25F6E693C();
}

uint64_t sub_25F685DF0()
{
  return swift_retain();
}

void *sub_25F685E08(void *result, int a2)
{
  *uint64_t result = (a2 - 1);
  return result;
}

uint64_t sub_25F685E28()
{
  return swift_bridgeObjectRelease();
}

void sub_25F685E40(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_25F685E60()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_25F685E7C(uint64_t a1, uint64_t *a2)
{
  sub_25F67ACD8(a2);
  sub_25F674D1C();
  uint64_t v3 = sub_25F678470();
  v4(v3);
  return a1;
}

uint64_t sub_25F685EC8()
{
  sub_25F678370();
  sub_25F685FA4(0x4379616C70736964, 0xEC000000746E756FLL, v1);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F68F020();
  }
  else
  {
    sub_25F674E24();
    return 0;
  }
  return v0;
}

double sub_25F685F54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_25F67AD88(a1, a2), (v7 & 1) != 0))
  {
    sub_25F67AD2C(*(void *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_25F685FA8()
{
  return sub_25F674004(v0, 1, 1, v1);
}

uint64_t sub_25F685FCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_25F686110();
  if (v2)
  {
    uint64_t v3 = (void *)(a1 + 32);
    sub_25F70E570();
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      sub_25F67A2DC(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_25F686110();
      }
      unint64_t v9 = *(void *)(v12 + 16);
      if (v9 >= *(void *)(v12 + 24) >> 1) {
        sub_25F686110();
      }
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v8;
      v3 += 5;
      --v2;
    }
    while (v2);
  }
  else
  {
    sub_25F70E570();
  }
  swift_bridgeObjectRelease();
  return v12;
}

void sub_25F686110()
{
  sub_25F686160();
  void *v0 = v1;
}

void sub_25F686160()
{
  sub_25F67E088();
  if (v5)
  {
    sub_25F675A48();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676430();
  if (v4)
  {
    sub_25F67ACD8(v9);
    uint64_t v10 = (const void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_25F6766CC(v11 - 32);
  }
  uint64_t v12 = sub_25F67D6FC();
  if (v3)
  {
    v2(v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12);
  }
  swift_release();
}

uint64_t sub_25F686224(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    sub_25F67E7DC();
LABEL_11:
    uint64_t result = sub_25F67D40C();
    __break(1u);
    return result;
  }
  if (a3 + 16 * a2 > a1 && a1 + 16 * a2 > a3)
  {
    sub_25F67C9C0();
    sub_25F67D06C();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_25F6862D4(uint64_t a1, char a2, uint64_t a3)
{
  CoreTipRecord.rules.getter();
  if (!v8) {
    goto LABEL_3;
  }
  unint64_t v10 = v8;
  uint64_t v11 = MEMORY[0x270FA5388](v8, v9);
  _OWORD v15[2] = a1;
  char v16 = a2 & 1;
  MEMORY[0x270FA5388](v11, v15);
  v14[2] = v3;
  v14[3] = a3;
  sub_25F686828((uint64_t (*)(uint64_t *))sub_25F686970, v12, (void (*)(uint64_t *))sub_25F694CBC, (uint64_t)v14, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_3:
    uint64_t result = sub_25F70E0B0();
    if (result) {
      return sub_25F70E100();
    }
  }
  return result;
}

uint64_t sub_25F6863E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.valueData.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t CoreParameterRecord.valueData.getter()
{
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&unk_26B39DCA8);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&qword_26B39DCB0);
  sub_25F67F034((uint64_t)&unk_26B39D328);
  sub_25F67D62C();
  sub_25F70E2C0();
  swift_release();
  return v0;
}

uint64_t sub_25F686544(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return swift_retain();
}

uint64_t sub_25F6865A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_25F6865EC(*a1, v2);
  return CoreParameterRecord.valueData.setter(v1, v2);
}

uint64_t sub_25F6865EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25F68A7EC(a1, a2);
  }
  return a1;
}

uint64_t CoreParameterRecord.valueData.setter(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t sub_25F6866E8(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v6; uint64_t v6 = sub_25F70F100())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x2611FBA70](i - 4, a3);
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * i);
        swift_retain();
      }
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v11 = v8;
      a1(&v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      if (v9 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    sub_25F70E570();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F686804(uint64_t *a1)
{
  return sub_25F686AB0(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_25F686828(uint64_t (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, unint64_t a5)
{
  if (a5 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v8; uint64_t v8 = sub_25F70F100())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a5 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x2611FBA70](i - 4, a5);
      }
      else
      {
        uint64_t v10 = *(void *)(a5 + 8 * i);
        swift_retain();
      }
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v15 = v10;
      char v12 = a1(&v15);
      if (v5)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v12) {
        a3(&v15);
      }
      swift_release();
      if (v11 == v8) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_15:
    sub_25F70E570();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F686970(uint64_t a1)
{
  return sub_25F686994(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24)) & 1;
}

uint64_t sub_25F686994(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for CoreRuleRecord();
  sub_25F682830((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  if (sub_25F70E300()) {
    goto LABEL_4;
  }
  CoreRuleRecord.id.getter();
  sub_25F687824(v5, v6, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_4;
  }
  sub_25F68F07C();
  CoreRuleRecord.id.getter();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_release();
  sub_25F687824(v10, v12, a2);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14) {
LABEL_4:
  }
    char v15 = 0;
  else {
    char v15 = sub_25F68350C() ^ a3 ^ 1;
  }
  return v15 & 1;
}

uint64_t sub_25F686AB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 64);
  uint64_t v36 = a5;
  uint64_t v9 = v8(a5, a6);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v9 + 32;
    sub_25F70E570();
    while (1)
    {
      sub_25F67B010(v11, (uint64_t)&v26);
      uint64_t v12 = v27;
      uint64_t v13 = v28;
      sub_25F67A2DC(&v26, v27);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
      uint64_t v16 = v15;
      CoreRuleRecord.id.getter();
      if (v14 == v18 && v16 == v17) {
        break;
      }
      char v20 = sub_25F70F330();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_12;
      }
      sub_25F67A28C((uint64_t)&v26);
      v11 += 40;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    sub_25F675D18(&v26, (uint64_t)&v29);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    uint64_t v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = *((void *)&v30 + 1);
  if (*((void *)&v30 + 1))
  {
    uint64_t v22 = v31;
    sub_25F67A2DC(&v29, *((uint64_t *)&v30 + 1));
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 40))(&v32, v21, v22);
    sub_25F67A28C((uint64_t)&v29);
    if (*((void *)&v33 + 1))
    {
      sub_25F675D18(&v32, (uint64_t)v35);
      sub_25F686DF8(v7, v35, a2, a4, v36, a6);
      return sub_25F67A28C((uint64_t)v35);
    }
  }
  else
  {
    sub_25F67EFC0((uint64_t)&v29, &qword_26B39C2A8);
    long long v32 = 0u;
    long long v33 = 0u;
    uint64_t v34 = 0;
  }
  return sub_25F67EFC0((uint64_t)&v32, &qword_26B39D580);
}

void CoreRuleRecord.id.getter()
{
}

uint64_t sub_25F686DF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_25F67B010((uint64_t)a2, (uint64_t)v18);
  sub_25F67ACD8(&qword_26B39D578);
  if (swift_dynamicCast())
  {
    uint64_t v19 = v16;
    sub_25F689784(v18);
    if (v18[0] == 1)
    {
      sub_25F6EC590(a1, v17, a3, a4, a5, a6);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v15 = sub_25F67A2DC(a2, v13);
  type metadata accessor for CoreRuleRecord();
  return sub_25F686F44(a1, (uint64_t)v15, a4, v13, v14);
}

uint64_t sub_25F686F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v9[3] = a4;
  id v9[4] = a5;
  uint64_t v7 = sub_25F677CCC(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v7, a2, a4);
  sub_25F688B00((uint64_t)v9);
  return sub_25F686FDC((uint64_t)v9);
}

uint64_t sub_25F686FDC(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39D580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F68703C()
{
  return swift_retain();
}

uint64_t sub_25F68709C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_25F6870E8(a1, a2, a3, a4, a5, a6, a7, a8, &qword_26B39D658, &qword_26B39D440, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25F68722C);
}

uint64_t sub_25F6870E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_25F67ACD8(a9);
  uint64_t v16 = sub_25F67ACD8(a10);
  sub_25F67C9A8();
  uint64_t v18 = v17;
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_25F710D20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v19, a4, v16);
  sub_25F70E570();
  uint64_t v21 = a11(a1, a2, a3, v20, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_25F68722C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v46[1] = a7;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  int v49 = a2;
  uint64_t v48 = a1;
  uint64_t v10 = sub_25F67ACD8(&qword_26B39DBD8);
  MEMORY[0x270FA5388](v10 - 8, v11);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39D838);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14, v16);
  unint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  uint64_t v23 = (char *)v46 - v22;
  uint64_t v25 = MEMORY[0x270FA5388](v21, v24);
  uint64_t v27 = (char *)v46 - v26;
  uint64_t v29 = MEMORY[0x270FA5388](v25, v28);
  uint64_t v47 = (char *)v46 - v30;
  MEMORY[0x270FA5388](v29, v31);
  uint64_t v65 = (char *)v46 - v32;
  uint64_t v33 = sub_25F67ACD8(&qword_26B39D800);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v13, a5, v33);
  sub_25F674004((uint64_t)v13, 0, 1, v33);
  uint64_t v34 = type metadata accessor for CoreTipRecord();
  uint64_t v35 = sub_25F682908(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  uint64_t v54 = a8;
  sub_25F70E570();
  sub_25F70E200();
  uint64_t v61 = v34;
  uint64_t v62 = v35;
  swift_getKeyPath();
  uint64_t v63 = 1;
  char v64 = 0;
  swift_setAtWritableKeyPath();
  uint64_t v52 = v15;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v36(v23, v19, v14);
  uint64_t v37 = v48;
  swift_release();
  uint64_t v59 = v34;
  uint64_t v60 = v35;
  swift_getKeyPath();
  LOBYTE(v63) = v49;
  swift_setAtWritableKeyPath();
  v36(v27, v23, v14);
  swift_release();
  uint64_t v57 = v34;
  uint64_t v58 = v35;
  swift_getKeyPath();
  uint64_t v63 = v50;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  uint64_t v38 = v47;
  v36(v47, v27, v14);
  swift_release();
  uint64_t v55 = v34;
  uint64_t v56 = v35;
  swift_getKeyPath();
  uint64_t v63 = v51;
  sub_25F70E570();
  swift_setAtWritableKeyPath();
  uint64_t v39 = v65;
  v36(v65, v38, v14);
  swift_release();
  uint64_t v40 = v53;
  unint64_t result = sub_25F70E110();
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v14);
    swift_bridgeObjectRelease_n();
    return v37;
  }
  unint64_t v42 = result;
  uint64_t v43 = v52;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    swift_allocObject();
    sub_25F70E570();
    CoreTipRecord.init(id:)();
    uint64_t v37 = v45;
    sub_25F70E160();
    goto LABEL_11;
  }
  sub_25F70E570();
  uint64_t v44 = sub_25F70F100();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v44) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v42 & 0xC000000000000001) != 0)
  {
    uint64_t v37 = MEMORY[0x2611FBA70](0, v42);
    goto LABEL_8;
  }
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v37 = *(void *)(v42 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_11:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v65, v14);
    swift_bridgeObjectRelease_n();
    return v37;
  }
  __break(1u);
  return result;
}

uint64_t sub_25F687758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = *(unsigned __int8 *)(v4 + 50);
  uint64_t v10 = *(void *)(v4 + 56);
  int v11 = *(unsigned __int8 *)(v4 + 64);
  uint64_t v12 = *(void *)(v4 + 72);
  sub_25F687824(a1, a2, v12);
  if (v13) {
    return 1;
  }
  sub_25F687824(a3, a4, v12);
  if (v14) {
    return 1;
  }
  sub_25F687824(a1, a2, v10);
  if (v16) {
    return 0;
  }
  sub_25F687824(a3, a4, v10);
  if (v9) {
    unsigned int v18 = 0;
  }
  else {
    unsigned int v18 = 4;
  }
  if (v11) {
    unsigned int v18 = 1;
  }
  if (v17) {
    return 0;
  }
  else {
    return v18;
  }
}

void sub_25F687824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_25F70F5C0();
    sub_25F70E740();
    uint64_t v6 = sub_25F70F620();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    sub_25F6764B0();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      int v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_25F70F330() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_25F6764B0();
        if (v15)
        {
          do
          {
            char v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_25F70F330()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_25F6764B0();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

void sub_25F687938()
{
  CoreTipRecord.status.getter();
  sub_25F6759B0();
  if (!v0)
  {
    if (qword_26B39E328 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v1 = qword_26B39DFB0;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    if (v1 != -1) {
      swift_once();
    }
    if (word_26B39DFA8 == 3)
    {
      if (qword_26B39E320 != -1) {
        swift_once();
      }
      char v2 = byte_26B39E318;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0)
      {
        id v3 = objc_msgSend(self, sel_standardUserDefaults);
        sub_25F672B5C();
        uint64_t v4 = sub_25F6661F0();

        if (v4)
        {
          CoreTipRecord.id.getter();
          sub_25F687824(v5, v6, v4);
          char v8 = v7;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v8)
          {
            if (qword_26B39D830 != -1) {
              swift_once();
            }
            uint64_t v9 = type metadata accessor for logger();
            sub_25F67F3A4(v9, (uint64_t)qword_26B39D818);
            sub_25F70EEC0();
            swift_bridgeObjectRelease();
            sub_25F675B8C();
            uint64_t v12 = v10;
            unint64_t v13 = v11;
            CoreTipRecord.id.getter();
            sub_25F70E790();
            swift_bridgeObjectRelease();
            sub_25F672B5C();
            sub_25F70E790();
            sub_25F68C2F0(v12, v13);
            swift_bridgeObjectRelease();
            sub_25F67E1C0(7);
          }
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_25F687C0C()
{
  CoreTipRecord.status.getter();
  sub_25F6759B0();
  if (!v0 && !sub_25F685EC8() && (sub_25F688310() & 1) != 0)
  {
    if (qword_26B39D598 != -1) {
      swift_once();
    }
    if (qword_26B3A3018)
    {
      CoreTipRecord.id.getter();
      char v3 = sub_25F687DA0(v1, v2);
      swift_bridgeObjectRelease();
      if (v3)
      {
        if (qword_26B39D830 != -1) {
          swift_once();
        }
        uint64_t v4 = type metadata accessor for logger();
        sub_25F67F3A4(v4, (uint64_t)qword_26B39D818);
        sub_25F70EEC0();
        swift_bridgeObjectRelease();
        sub_25F675B8C();
        uint64_t v7 = v5;
        unint64_t v8 = v6;
        CoreTipRecord.id.getter();
        sub_25F70E790();
        swift_bridgeObjectRelease();
        sub_25F70E790();
        sub_25F68C2F0(v7, v8);
        swift_bridgeObjectRelease();
        sub_25F67E1C0(5);
      }
    }
  }
}

uint64_t sub_25F687DA0(uint64_t a1, uint64_t a2)
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (HIBYTE(word_26B39E410) == 1)
  {
    uint64_t v4 = sub_25F687E80();
    sub_25F67D330(v4);
    char v6 = v5;
    swift_bridgeObjectRelease();
    if (v6) {
      sub_25F70C2D8();
    }
  }
  uint64_t v7 = sub_25F687E80();
  sub_25F687824(a1, a2, v7);
  char v9 = v8;
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_25F687E80()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 16);
    if (!v2
      || (char v3 = (void *)sub_25F70E690(),
          id v4 = objc_msgSend(v2, sel_arrayForKey_, v3),
          v3,
          !v4)
      || (uint64_t v5 = sub_25F70E910(), v4, v6 = sub_25F659548(v5), swift_bridgeObjectRelease(), !v6))
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = MEMORY[0x263F8EE78];
    }
    uint64_t v1 = sub_25F690418(v6);
    *(void *)(v0 + 24) = v1;
    sub_25F70E570();
    swift_bridgeObjectRelease();
  }
  sub_25F70E570();
  return v1;
}

uint64_t CoreTipRecord.invalidationReason.getter()
{
  sub_25F687FCC();
  __int16 v1 = v0;
  uint64_t v4 = MEMORY[0x263F8E4F0];
  unint64_t v5 = sub_25F68992C();
  v3[0] = v1;
  LODWORD(result) = sub_25F68B2E8((uint64_t)v3);
  if (result == 10) {
    return 0;
  }
  else {
    return result;
  }
}

void sub_25F687FCC()
{
}

void sub_25F687FD8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  CoreTipRecord.status.getter();
  sub_25F6759B0();
  if (!v13)
  {
    CoreTipRecord.rules.getter();
    if (!v14) {
      goto LABEL_4;
    }
    unint64_t v16 = v14;
    MEMORY[0x270FA5388](v14, v15);
    v22[2] = a4;
    v22[3] = a5;
    v22[4] = a2;
    v22[5] = v7;
    v22[6] = a3;
    sub_25F6866E8((void (*)(uint64_t *))sub_25F686804, (uint64_t)v22, v16);
    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_4:
      int v23 = a1;
      type metadata accessor for CoreTip();
      CoreTipRecord.id.getter();
      uint64_t v17 = sub_25F68B080();
      swift_bridgeObjectRelease();
      if (v17 && (sub_25F66FEB4(v24), swift_release(), LOBYTE(v24[0]) == 1)
        || (uint64_t v18 = sub_25F685EC8(), v18 < sub_25F6883F8()))
      {
        char v19 = v23;
      }
      else
      {
        sub_25F6E9D58(4);
        char v19 = v23;
        if (v6) {
          return;
        }
      }
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 72))(v24, a4, a5);
      double v20 = *(double *)&v24[4];
      char v21 = v25;
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0 || v20 >= sub_25F66F8D0() || (sub_25F6E9D58(9), !v6)) {
        sub_25F688488(v19 & 1);
      }
    }
  }
}

uint64_t type metadata accessor for CoreTip()
{
  uint64_t result = qword_26B39DE68;
  if (!qword_26B39DE68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void CoreTipRecord.id.getter()
{
}

uint64_t sub_25F688310()
{
  sub_25F678370();
  uint64_t v2 = v1;
  sub_25F670C68();
  sub_25F685FA4(0xD000000000000010, v3, v2);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F685E28();
    char v4 = (v0 == 2) | v0;
  }
  else
  {
    sub_25F675010();
    char v4 = 1;
  }
  return v4 & 1;
}

void sub_25F68839C()
{
  *(void *)(v0 + 88) = *(void *)(v1 + 88);
  *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 96);
}

uint64_t sub_25F6883B0()
{
  return v0;
}

uint64_t sub_25F6883DC()
{
  return v0;
}

uint64_t sub_25F6883F8()
{
  sub_25F678370();
  sub_25F685FA4(0x6C7073694478616DLL, 0xEF746E756F437961, v1);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F68F020();
  }
  else
  {
    sub_25F674E24();
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  return v0;
}

void sub_25F688488(char a1)
{
  uint64_t v3 = v1;
  sub_25F6762E8();
  char v5 = CoreTipRecord.status.getter();
  sub_25F68877C();
  if (v2)
  {
  }
  else
  {
    char v7 = v6;
    if (v5 != v6 || (a1 & 1) != 0)
    {
      swift_getKeyPath();
      sub_25F652638();
      swift_release();
      swift_release();
      sub_25F682830(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
      if (sub_25F70E240())
      {
        if (sub_25F70E0B0()) {
          sub_25F70E100();
        }
        swift_release();
      }
      if (qword_26B39D830 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for logger();
      sub_25F67F3A4(v8, (uint64_t)qword_26B39D818);
      sub_25F70EEC0();
      sub_25F67D0FC();
      CoreTipRecord.id.getter();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F672B5C();
      sub_25F70E790();
      sub_25F67E580();
      sub_25F67D4E4();
      sub_25F67E580();
      sub_25F68C2F0(0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      type metadata accessor for CoreTip();
      CoreTipRecord.id.getter();
      CoreTipRecord.invalidationReason.getter();
      sub_25F68BBB0();
      swift_bridgeObjectRelease();
      CoreTipRecord.id.getter();
      uint64_t v9 = sub_25F68B080();
      swift_bridgeObjectRelease();
      if (v9)
      {
        sub_25F66F23C();
        swift_release();
      }
      sub_25F6E69E4(v3, v5, v7);
    }
  }
}

void sub_25F68877C()
{
  if (CoreTipRecord.status.getter() == 2) {
    return;
  }
  if (sub_25F68AC48()) {
    return;
  }
  CoreTipRecord.rules.getter();
  if (!v0) {
    return;
  }
  unint64_t v1 = v0;
  uint64_t v10 = MEMORY[0x263F8EE78];
  if (v0 >> 62)
  {
    uint64_t v2 = sub_25F70F100();
    if (v2) {
      goto LABEL_6;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_33;
    }
LABEL_20:
    if ((v4 & 0x4000000000000000) == 0)
    {
      uint64_t v5 = *(void *)(v4 + 16);
      swift_retain();
      if (v5) {
        goto LABEL_22;
      }
LABEL_31:
      swift_release_n();
      return;
    }
LABEL_33:
    while (1)
    {
      swift_retain();
      uint64_t v5 = sub_25F70F100();
      if (!v5) {
        goto LABEL_31;
      }
LABEL_22:
      uint64_t v6 = 4;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          MEMORY[0x2611FBA70](v6 - 4, v4);
        }
        else {
          swift_retain();
        }
        uint64_t v7 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        if (CoreRuleRecord.status.getter() == 2)
        {
          swift_release();
        }
        else
        {
          sub_25F68AB60();
          uint64_t v9 = v8;
          swift_release();
          swift_release();
          if (!v9) {
            goto LABEL_31;
          }
        }
        ++v6;
        if (v7 == v5) {
          goto LABEL_31;
        }
      }
      __break(1u);
    }
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    goto LABEL_19;
  }
LABEL_6:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        MEMORY[0x2611FBA70](i, v1);
      }
      else {
        swift_retain();
      }
      type metadata accessor for CoreRuleRecord();
      sub_25F682830((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
      if (sub_25F70E300())
      {
        swift_release();
      }
      else
      {
        sub_25F70EFA0();
        sub_25F70EFE0();
        sub_25F70EFF0();
        sub_25F70EFB0();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v10;
    if (v10 < 0) {
      goto LABEL_33;
    }
    goto LABEL_20;
  }
  __break(1u);
}

void CoreTipRecord.rules.getter()
{
}

void sub_25F688B00(uint64_t a1)
{
  sub_25F689990();
  if (!v2) {
    return;
  }
  if (CoreTipRecord.status.getter() == 2)
  {
LABEL_27:
    swift_release();
    return;
  }
  sub_25F689784(&v19);
  switch(v19)
  {
    case 1:
      unsigned __int8 v18 = CoreRuleRecord.status.getter();
      sub_25F65E654();
      uint64_t v5 = MEMORY[0x263F8EE78];
      if (v4) {
        unint64_t v6 = v4;
      }
      else {
        unint64_t v6 = MEMORY[0x263F8EE78];
      }
      if (v6 >> 62)
      {
        sub_25F70E570();
        uint64_t v7 = sub_25F70F100();
        swift_bridgeObjectRelease();
        if (v7) {
          goto LABEL_10;
        }
LABEL_25:
        swift_bridgeObjectRelease();
        uint64_t v9 = MEMORY[0x263F8EE78];
LABEL_26:
        sub_25F6D4EA4(v18, v9);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v7) {
        goto LABEL_25;
      }
LABEL_10:
      sub_25F6D28F0(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        uint64_t v8 = 0;
        uint64_t v9 = v5;
        unint64_t v10 = v6 & 0xC000000000000001;
        unint64_t v11 = v6;
        do
        {
          if (v10) {
            MEMORY[0x2611FBA70](v8, v6);
          }
          else {
            swift_retain();
          }
          char v12 = CoreRuleRecord.status.getter();
          swift_release();
          unint64_t v14 = *(void *)(v5 + 16);
          unint64_t v13 = *(void *)(v5 + 24);
          if (v14 >= v13 >> 1) {
            sub_25F6D28F0((char *)(v13 > 1), v14 + 1, 1);
          }
          ++v8;
          *(void *)(v5 + 16) = v14 + 1;
          *(unsigned char *)(v5 + v14 + 32) = v12;
          unint64_t v6 = v11;
        }
        while (v7 != v8);
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
      __break(1u);
      return;
    case 2:
      if (sub_25F69664C())
      {
        uint64_t v15 = CoreEventRecord.id.getter();
        uint64_t v17 = v16;
        swift_release();
      }
      else
      {
        uint64_t v15 = 0;
        uint64_t v17 = 0;
      }
      sub_25F666E94(v15, v17);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 4:
      sub_25F689B28(a1);
      goto LABEL_27;
    default:
      sub_25F70EEC0();
      sub_25F70E790();
      CoreRuleRecord.id.getter();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      sub_25F689784(&v19);
      sub_25F6D32E0();
      sub_25F70E790();
      sub_25F6931C0();
      swift_allocError();
      *uint64_t v3 = 0;
      v3[1] = 0xE000000000000000;
      swift_willThrow();
      goto LABEL_27;
  }
}

uint64_t CoreRuleRecord.status.getter()
{
  CoreRuleRecord.statusValue.getter();
  __int16 v1 = v0;
  uint64_t v4 = MEMORY[0x263F8E4F0];
  unint64_t v5 = sub_25F68992C();
  v3[0] = v1;
  LODWORD(result) = sub_25F688EC0((uint64_t)v3);
  if (result == 3) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_25F688EC0(uint64_t a1)
{
  sub_25F6749B8(a1, (uint64_t)&v88);
  if (!v89)
  {
    sub_25F674958(a1);
    sub_25F674958((uint64_t)&v88);
    return 3;
  }
  uint64_t v83 = (uint64_t *)a1;
  sub_25F675D18(&v88, (uint64_t)v90);
  uint64_t v2 = v91;
  uint64_t v3 = v92;
  uint64_t v4 = sub_25F67A2DC(v90, v91);
  uint64_t v82 = &v75;
  unint64_t v5 = *(void **)(v2 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x270FA5388](v4, v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (void (*)(void))v5[2];
  sub_25F674FBC();
  v8();
  uint64_t v9 = sub_25F67D07C();
  char v10 = v9;
  uint64_t v81 = &v75;
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v84 = (uint64_t *)((char *)&v75 - v7);
  uint64_t v85 = (uint64_t *)v8;
  sub_25F674FBC();
  v8();
  uint64_t v86 = v5;
  if ((v10 & 1) == 0)
  {
    unint64_t v13 = (uint64_t (*)(void))v5[1];
    ((void (*)(char *, uint64_t))v13)((char *)&v75 - v7, v2);
    goto LABEL_10;
  }
  uint64_t v12 = sub_25F675B28();
  unint64_t v13 = (uint64_t (*)(void))v5[1];
  sub_25F6769DC();
  uint64_t v14 = v13();
  if (v12 <= 64)
  {
LABEL_10:
    uint64_t v26 = (uint64_t)v83;
    goto LABEL_25;
  }
  uint64_t v16 = MEMORY[0x270FA5388](v14, v15);
  sub_25F6795E8(v16, v17, v18, v19, v20, v21, v22, v23, v75);
  sub_25F674FBC();
  v24();
  *(void *)&long long v88 = 0x8000000000000000;
  char v25 = sub_25F67D07C();
  uint64_t v26 = (uint64_t)v83;
  if (v25)
  {
    uint64_t v27 = sub_25F675B28();
    if (v27 >= 64)
    {
      uint64_t v80 = &v75;
      MEMORY[0x270FA5388](v27, v28);
      sub_25F676440();
      uint64_t v78 = &v75;
      sub_25F6CA904();
      sub_25F67D424();
      char v37 = sub_25F6792B4();
      sub_25F6769DC();
      v13();
      sub_25F6769DC();
      uint64_t result = v13();
      if (v37) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v29 = sub_25F674FA4();
      sub_25F6769DC();
      uint64_t result = v13();
      if (v29 < (uint64_t)v88) {
        goto LABEL_43;
      }
    }
LABEL_25:
    uint64_t v49 = sub_25F675B28();
    uint64_t v84 = &v75;
    MEMORY[0x270FA5388](v49, v50);
    sub_25F676440();
    sub_25F674DC0();
    v51();
    if (v49 < 65)
    {
      uint64_t v49 = sub_25F675B28();
      sub_25F675ACC();
      v13();
      if (v49 != 64) {
        goto LABEL_36;
      }
      uint64_t v52 = sub_25F67D07C();
      if (v52) {
        goto LABEL_36;
      }
    }
    else
    {
      sub_25F675ACC();
      uint64_t v52 = v13();
    }
    uint64_t v54 = MEMORY[0x270FA5388](v52, v53);
    sub_25F6795E8(v54, v55, v56, v57, v58, v59, v60, v61, v75);
    sub_25F674DC0();
    v62();
    *(void *)&long long v88 = 0x7FFFFFFFFFFFFFFFLL;
    char v63 = sub_25F67D07C();
    uint64_t v64 = sub_25F675B28();
    if (v63)
    {
      if (v64 > 64)
      {
        uint64_t v85 = &v75;
        MEMORY[0x270FA5388](v64, v65);
        sub_25F676440();
        uint64_t v68 = v66 - v67;
        sub_25F6CA904();
        sub_25F67D424();
        char v69 = sub_25F6792B4();
        ((void (*)(uint64_t, uint64_t))v13)(v68, v2);
        ((void (*)(uint64_t, uint64_t))v13)(v49, v2);
        if (v69) {
          goto LABEL_41;
        }
        goto LABEL_36;
      }
    }
    else if (v64 > 63)
    {
      uint64_t v83 = &v75;
      uint64_t v87 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x270FA5388](v64, v65);
      uint64_t v70 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v85 = &v75;
      uint64_t v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v86[4])(v70, v49, v2);
      MEMORY[0x270FA5388](v71, v72);
      sub_25F6CA904();
      sub_25F67D424();
      char v73 = sub_25F70E660();
      ((void (*)(char *, uint64_t))v13)(v70, v2);
      ((void (*)(char *, uint64_t))v13)(v70, v2);
      if (v73)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      goto LABEL_36;
    }
    sub_25F674FA4();
    sub_25F675ACC();
    v13();
LABEL_36:
    unint64_t v74 = sub_25F674FA4();
    sub_25F675ACC();
    v13();
    sub_25F674958(v26);
    if (v74 < 3)
    {
      sub_25F67A28C((uint64_t)v90);
      return v74;
    }
    sub_25F67A28C((uint64_t)v90);
    return 3;
  }
  uint64_t v80 = v5 + 1;
  uint64_t v31 = v12;
  char v32 = sub_25F67D07C();
  uint64_t v79 = v31;
  uint64_t v33 = sub_25F675B28();
  if ((v32 & 1) == 0)
  {
    if (v33 >= 64)
    {
      ((void (*)(uint64_t, uint64_t))v13)(v79, v2);
    }
    else
    {
      uint64_t v38 = sub_25F674FA4();
      sub_25F67CC04();
      uint64_t result = v13();
      if (v38 < (uint64_t)v88) {
        goto LABEL_43;
      }
    }
    goto LABEL_25;
  }
  uint64_t v78 = &v75;
  if (v33 > 64)
  {
    uint64_t v77 = &v75;
    MEMORY[0x270FA5388](v33, v34);
    sub_25F6CA904();
    sub_25F67D424();
    uint64_t v35 = v79;
    char v36 = sub_25F6792B4();
    ((void (*)(char *, uint64_t))v13)((char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v13)(v35, v2);
    uint64_t v26 = (uint64_t)v83;
    if (v36) {
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  uint64_t v76 = *(void *)(*(void *)(v3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = &v75;
  MEMORY[0x270FA5388](AssociatedTypeWitness, v40);
  swift_getAssociatedConformanceWitness();
  uint64_t v41 = sub_25F70F4F0();
  uint64_t v75 = (uint64_t)&v75;
  MEMORY[0x270FA5388](v41, v42);
  sub_25F70F310();
  uint64_t v43 = v79;
  LODWORD(v76) = sub_25F6792B4();
  sub_25F67CC04();
  uint64_t v44 = v13();
  uint64_t v77 = &v75;
  MEMORY[0x270FA5388](v44, v45);
  ((void (*)(char *, uint64_t, uint64_t))v86[4])((char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v43, v2);
  if ((v76 & 1) == 0)
  {
    uint64_t v46 = v88;
    uint64_t v47 = sub_25F674FA4();
    sub_25F67CC04();
    uint64_t result = v13();
    BOOL v48 = v47 < v46;
    uint64_t v26 = (uint64_t)v83;
    if (v48) {
      goto LABEL_43;
    }
    goto LABEL_25;
  }
LABEL_42:
  sub_25F67CC04();
  uint64_t result = v13();
LABEL_43:
  __break(1u);
  return result;
}

void CoreRuleRecord.statusValue.getter()
{
}

uint64_t sub_25F689784@<X0>(unsigned char *a1@<X8>)
{
  sub_25F689984();
  __int16 v3 = v2;
  uint64_t v7 = MEMORY[0x263F8E4F0];
  unint64_t v8 = sub_25F68992C();
  v6[0] = v3;
  uint64_t result = sub_25F674110((uint64_t)v6, &v9);
  char v5 = v9;
  if (v9 == 6) {
    char v5 = 0;
  }
  *a1 = v5;
  return result;
}

void sub_25F6897E8()
{
}

uint64_t CoreTipRecord.status.getter()
{
  sub_25F689978();
  __int16 v1 = v0;
  uint64_t v4 = MEMORY[0x263F8E4F0];
  unint64_t v5 = sub_25F68992C();
  v3[0] = v1;
  LODWORD(result) = sub_25F6750CC((uint64_t)v3);
  if (result == 4) {
    return 3;
  }
  else {
    return result;
  }
}

unint64_t sub_25F68992C()
{
  unint64_t result = qword_26B39D668;
  if (!qword_26B39D668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D668);
  }
  return result;
}

void sub_25F689978()
{
}

void sub_25F689984()
{
}

void sub_25F689990()
{
  if (!sub_25F689AEC())
  {
    sub_25F68AB60();
    if (v0)
    {
      sub_25F689990();
      swift_release();
    }
  }
}

uint64_t sub_25F6899D4()
{
  sub_25F6785B4();
  swift_getKeyPath();
  sub_25F67B1C0(&qword_26B39DBE8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F67B1C0((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  uint64_t v0 = (unint64_t *)sub_25F6883B0();
  sub_25F67B1C0(v0, v1);
  uint64_t v2 = sub_25F70E2A0();
  swift_release();
  return v2;
}

uint64_t sub_25F689AEC()
{
  return sub_25F6899D4();
}

uint64_t sub_25F689B28(uint64_t a1)
{
  sub_25F689CBC(a1, (uint64_t)v8);
  if (v9)
  {
    sub_25F67ACD8(&qword_26B39D578);
    sub_25F67ACD8(&qword_26B39CF28);
    if (swift_dynamicCast())
    {
      if (*((void *)&v11 + 1))
      {
        sub_25F675D18(&v10, (uint64_t)&v13);
        uint64_t v1 = v15;
        uint64_t v2 = v16;
        __int16 v3 = sub_25F67A2DC(&v13, v15);
        sub_25F689D24((uint64_t)v3, v1, v2);
        return sub_25F67A28C((uint64_t)&v13);
      }
    }
    else
    {
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
    }
  }
  else
  {
    sub_25F67EFC0((uint64_t)v8, &qword_26B39D580);
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t v12 = 0;
  }
  sub_25F67EFC0((uint64_t)&v10, &qword_26B39CCC0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_25F70EEC0();
  sub_25F70E790();
  CoreRuleRecord.id.getter();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t v5 = v13;
  unint64_t v6 = v14;
  sub_25F6931C0();
  swift_allocError();
  *uint64_t v7 = v5;
  v7[1] = v6;
  return swift_willThrow();
}

uint64_t sub_25F689CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_25F689D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v9);
  long long v11 = (char *)&v17 - v10;
  uint64_t v18 = v3;
  CoreRuleRecord.predicate.getter();
  if (v12)
  {
    uint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
    char v14 = sub_25F68A14C((uint64_t)v11, AssociatedTypeWitness);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
    }
    else
    {
      char v15 = v14;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      if (v15) {
        unsigned __int8 v16 = 2;
      }
      else {
        unsigned __int8 v16 = 1;
      }
      sub_25F689F80(v16);
    }
  }
}

void CoreRuleRecord.predicate.getter()
{
}

void sub_25F689F80(unsigned __int8 a1)
{
  if (CoreRuleRecord.status.getter() != a1)
  {
    swift_getKeyPath();
    sub_25F692FC4();
    if (v1)
    {
LABEL_7:
      swift_release();
      return;
    }
    swift_release();
    swift_release();
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for logger();
    sub_25F67F3A4(v3, (uint64_t)qword_26B39D818);
    sub_25F70EEC0();
    sub_25F70E790();
    CoreRuleRecord.id.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    unsigned __int8 v7 = a1;
    sub_25F70F070();
    sub_25F68C2F0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    sub_25F68AB60();
    if (v4)
    {
      uint64_t v6 = 0;
      memset(v5, 0, sizeof(v5));
      sub_25F688B00((uint64_t)v5);
      sub_25F686FDC((uint64_t)v5);
      goto LABEL_7;
    }
  }
}

uint64_t sub_25F68A14C(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___Predicate_operation);
  if (v6 >= 0xB)
  {
    if (v6 == 11)
    {
      uint64_t v9 = *(void *)(v2 + OBJC_IVAR___Predicate_rawdata);
      unint64_t v10 = *(void *)(v2 + OBJC_IVAR___Predicate_rawdata + 8);
      unsigned __int8 v7 = v14;
      char v11 = CoreRule.Predicate.Operator.evaluate<A>(value:predicateData:)(a1, v9, v10, a2);
      if (!v3) {
        LOBYTE(v7) = v11;
      }
    }
    else
    {
      *(void *)&v14[0] = 0;
      *((void *)&v14[0] + 1) = 0xE000000000000000;
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70F720();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      LOBYTE(v7) = 0;
      sub_25F6931C0();
      swift_allocError();
      *uint64_t v12 = v14[0];
      swift_willThrow();
    }
  }
  else
  {
    char v15 = *(unsigned char *)(v2 + OBJC_IVAR___Predicate_operation);
    sub_25F66796C(v2 + OBJC_IVAR___Predicate_value, (uint64_t)v13, &qword_26B39D810);
    if (v13[3])
    {
      sub_25F67AD2C((uint64_t)v13, (uint64_t)v14);
      sub_25F6674D8((uint64_t)v13);
    }
    else
    {
      sub_25F67EFC0((uint64_t)v13, &qword_26B39D810);
      memset(v14, 0, sizeof(v14));
    }
    LOBYTE(v7) = CoreRule.Predicate.Operator.evaluate<A>(lhs:rhs:)(a1, (uint64_t)v14, a2);
    sub_25F67EFC0((uint64_t)v14, &qword_26B39E0A8);
  }
  return v7 & 1;
}

unint64_t CoreRule.Predicate.Operator.evaluate<A>(value:predicateData:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_25F67C9A8();
  unint64_t v10 = v9;
  MEMORY[0x270FA5388](v11, v12);
  char v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v15;
  sub_25F70DF90();
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v16, v17);
  uint64_t v20 = (char *)v28 - v19;
  if (a3 >> 60 == 15)
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70F720();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v21 = v29;
    unint64_t v10 = v30;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v22 = v21;
    v22[1] = (char *)v10;
    swift_willThrow();
  }
  else
  {
    v28[1] = v18;
    sub_25F68A7EC(a2, a3);
    static PredicateCoder.decode<A>(_:from:)(a4, (uint64_t)v20);
    if (v4)
    {
      sub_25F67EFAC(a2, a3);
    }
    else
    {
      v28[0] = v10;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a1, a4);
      uint64_t v29 = v14;
      LOBYTE(v10) = sub_25F70DF80();
      uint64_t v24 = sub_25F67D6BC();
      v25(v24);
      uint64_t v26 = sub_25F6763C8();
      v27(v26);
    }
  }
  return v10 & 1;
}

uint64_t CoreParameterProtocol.value(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (a2 >> 60 == 15)
  {
    sub_25F67E39C();
    sub_25F67E010();
    return sub_25F674004(v7, v8, v9, v10);
  }
  else
  {
    sub_25F68A7EC(a1, a2);
    swift_getAssociatedConformanceWitness();
    sub_25F67B4EC();
    sub_25F674004(a3, 0, 1, AssociatedTypeWitness);
    sub_25F67E010();
    return sub_25F67EFAC(v13, v14);
  }
}

uint64_t sub_25F68A7EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t static PredicateCoder.decode<A>(_:from:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_25F70DD50();
  sub_25F67CA24();
  uint64_t v25 = v5;
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v29 = a1;
  uint64_t v9 = sub_25F70DF90();
  uint64_t v28 = sub_25F70ECF0();
  sub_25F67CA24();
  uint64_t v11 = v10;
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v19 = (char *)&v23 - v18;
  swift_getWitnessTable();
  sub_25F67B4EC();
  if (v2)
  {

    sub_25F674004((uint64_t)v19, 1, 1, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v28);
    static PredicateCodableConfiguration.standardConfigurationWithKeyPaths<A>(for:)((uint64_t)v8);
    swift_getWitnessTable();
    sub_25F6F58FC();
    uint64_t v20 = sub_25F67E9DC();
    v21(v20);
  }
  else
  {
    uint64_t v16 = v19;
  }
  sub_25F674004((uint64_t)v16, 0, 1, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v24, v16, v9);
}

void sub_25F68AB60()
{
}

uint64_t sub_25F68AC48()
{
  sub_25F678370();
  sub_25F685FA4(0x7669686372417369, 0xEA00000000006465, v1);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F685E28();
    return v0 & 1;
  }
  else
  {
    sub_25F675010();
    return 0;
  }
}

uint64_t sub_25F68ACD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v4, v7);
  uint64_t v10 = (char *)&v30 - v9;
  MEMORY[0x270FA5388](v8, v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = sub_25F70DF30();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_25F68AFBC();
  if (result)
  {
    sub_25F685CF8();
    if (sub_25F67D9DC((uint64_t)v13, 1, v14) == 1)
    {
      return sub_25F68C224((uint64_t)v13);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
      sub_25F6E55BC();
      int v20 = sub_25F67D9DC((uint64_t)v10, 1, v14);
      sub_25F68C224((uint64_t)v10);
      if (v20 == 1)
      {
        sub_25F70DED0();
        long double v22 = -v21;
        uint64_t v23 = Double.seconds.getter(-v21);
        uint64_t v24 = sub_25F6A53F8(v23);
        uint64_t v26 = v25;
        fmod(v22, 1.0);
        uint64_t v27 = sub_25F70F690();
        MEMORY[0x2611FC230](v24, v26, v27, v28);
        if (qword_26B39E328 != -1) {
          swift_once();
        }
        swift_beginAccess();
        if ((sub_25F70F6A0() & 1) == 0)
        {
          uint64_t v29 = sub_25F6E53B8();
          sub_25F6A2944(v1, (uint64_t)v18, v29);
          _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
          sub_25F674004((uint64_t)v6, 0, 1, v14);
          sub_25F6E56AC((uint64_t)v6);
        }
      }
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
  }
  return result;
}

uint64_t sub_25F68AFBC()
{
  sub_25F678370();
  sub_25F672C60((uint64_t)"usesCoreAnalytics");
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F685E28();
    if (v0 != 2) {
      return v0 & 1;
    }
  }
  else
  {
    sub_25F675010();
  }
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return byte_26B39E3F1;
}

uint64_t sub_25F68B080()
{
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  swift_retain();
  sub_25F70E570();
  sub_25F68B194();
  swift_bridgeObjectRelease();
  swift_release();
  if (v3[8])
  {
    sub_25F675D8C((uint64_t)v3, &qword_26B39D7A8);
    return 0;
  }
  else
  {
    sub_25F675D30((uint64_t)v3, (uint64_t)&v2, &qword_26B39DD48);
    sub_25F675D8C((uint64_t)v3, &qword_26B39D7A8);
    uint64_t Strong = swift_weakLoadStrong();
    sub_25F675D8C((uint64_t)&v2, &qword_26B39DD48);
  }
  return Strong;
}

void sub_25F68B194()
{
  sub_25F67CB2C();
  unint64_t v1 = sub_25F67DFFC();
  sub_25F68B1D4(v1, v2);
  os_unfair_lock_unlock(v0);
}

unint64_t sub_25F68B1D4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F68B1F0(a1, *(uint64_t **)(v2 + 16), a2);
}

unint64_t sub_25F68B1F0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25F68B210(a1, *a2, a2[1], a3);
}

unint64_t sub_25F68B210@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_25F67AD88(a2, a3), (v6 & 1) != 0))
  {
    uint64_t result = sub_25F68B280(*(void *)(v5 + 56) + 8 * result, a4);
    char v7 = 0;
  }
  else
  {
    *(void *)a4 = 0;
    char v7 = 1;
  }
  *(unsigned char *)(a4 + 8) = v7;
  return result;
}

uint64_t sub_25F68B280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DD48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F68B2E8(uint64_t a1)
{
  sub_25F6749B8(a1, (uint64_t)&v89);
  if (!v90)
  {
    sub_25F674958(a1);
    sub_25F674958((uint64_t)&v89);
    return 10;
  }
  uint64_t v84 = (uint64_t *)a1;
  sub_25F675D18(&v89, (uint64_t)v91);
  uint64_t v2 = v92;
  uint64_t v3 = v93;
  uint64_t v4 = sub_25F67A2DC(v91, v92);
  uint64_t v83 = &v76;
  uint64_t v5 = *(void **)(v2 - 8);
  uint64_t v6 = v5[8];
  MEMORY[0x270FA5388](v4, v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (void (*)(void))v5[2];
  sub_25F674FBC();
  v8();
  uint64_t v9 = sub_25F67D07C();
  char v10 = v9;
  uint64_t v82 = &v76;
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v85 = (uint64_t *)((char *)&v76 - v7);
  uint64_t v86 = (uint64_t *)v8;
  sub_25F674FBC();
  v8();
  uint64_t v87 = v5;
  if ((v10 & 1) == 0)
  {
    uint64_t v13 = (uint64_t (*)(void))v5[1];
    ((void (*)(char *, uint64_t))v13)((char *)&v76 - v7, v2);
    goto LABEL_10;
  }
  uint64_t v12 = sub_25F675B28();
  uint64_t v13 = (uint64_t (*)(void))v5[1];
  sub_25F6769DC();
  uint64_t v14 = v13();
  if (v12 <= 64)
  {
LABEL_10:
    uint64_t v26 = (uint64_t)v84;
    goto LABEL_25;
  }
  uint64_t v16 = MEMORY[0x270FA5388](v14, v15);
  sub_25F6795E8(v16, v17, v18, v19, v20, v21, v22, v23, v76);
  sub_25F674FBC();
  v24();
  *(void *)&long long v89 = 0x8000000000000000;
  char v25 = sub_25F67D07C();
  uint64_t v26 = (uint64_t)v84;
  if (v25)
  {
    uint64_t v27 = sub_25F675B28();
    if (v27 >= 64)
    {
      uint64_t v81 = &v76;
      MEMORY[0x270FA5388](v27, v28);
      sub_25F676440();
      uint64_t v79 = &v76;
      sub_25F6CA904();
      sub_25F67D424();
      char v38 = sub_25F6792B4();
      sub_25F6769DC();
      v13();
      sub_25F6769DC();
      uint64_t result = v13();
      if (v38) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v29 = sub_25F679F0C();
      sub_25F6769DC();
      uint64_t result = v13();
      if (v29 < (uint64_t)v89) {
        goto LABEL_40;
      }
    }
LABEL_25:
    uint64_t v50 = sub_25F675B28();
    uint64_t v85 = &v76;
    MEMORY[0x270FA5388](v50, v51);
    sub_25F676440();
    sub_25F674DC0();
    v52();
    if (v50 < 65)
    {
      uint64_t v50 = sub_25F675B28();
      sub_25F675ACC();
      v13();
      if (v50 != 64) {
        goto LABEL_36;
      }
      uint64_t v53 = sub_25F67D07C();
      if (v53) {
        goto LABEL_36;
      }
    }
    else
    {
      sub_25F675ACC();
      uint64_t v53 = v13();
    }
    uint64_t v55 = MEMORY[0x270FA5388](v53, v54);
    sub_25F6795E8(v55, v56, v57, v58, v59, v60, v61, v62, v76);
    sub_25F674DC0();
    v63();
    *(void *)&long long v89 = 0x7FFFFFFFFFFFFFFFLL;
    char v64 = sub_25F67D07C();
    uint64_t v65 = sub_25F675B28();
    if (v64)
    {
      if (v65 > 64)
      {
        uint64_t v86 = &v76;
        MEMORY[0x270FA5388](v65, v66);
        sub_25F676440();
        uint64_t v69 = v67 - v68;
        sub_25F6CA904();
        sub_25F67D424();
        char v70 = sub_25F6792B4();
        ((void (*)(uint64_t, uint64_t))v13)(v69, v2);
        ((void (*)(uint64_t, uint64_t))v13)(v50, v2);
        if (v70) {
          goto LABEL_38;
        }
        goto LABEL_36;
      }
    }
    else if (v65 > 63)
    {
      uint64_t v84 = &v76;
      uint64_t v88 = 0x7FFFFFFFFFFFFFFFLL;
      MEMORY[0x270FA5388](v65, v66);
      uint64_t v71 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v86 = &v76;
      uint64_t v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v87[4])(v71, v50, v2);
      MEMORY[0x270FA5388](v72, v73);
      sub_25F6CA904();
      sub_25F67D424();
      char v74 = sub_25F70E660();
      ((void (*)(char *, uint64_t))v13)(v71, v2);
      ((void (*)(char *, uint64_t))v13)(v71, v2);
      if (v74)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      goto LABEL_36;
    }
    sub_25F679F0C();
    sub_25F675ACC();
    v13();
LABEL_36:
    unint64_t v75 = sub_25F70ED90();
    sub_25F675ACC();
    v13();
    sub_25F674958(v26);
    unint64_t v31 = CoreTip.InvalidationReason.init(rawValue:)(v75);
    sub_25F67A28C((uint64_t)v91);
    return v31;
  }
  uint64_t v81 = v5 + 1;
  uint64_t v32 = v12;
  char v33 = sub_25F67D07C();
  uint64_t v80 = v32;
  uint64_t v34 = sub_25F675B28();
  if ((v33 & 1) == 0)
  {
    if (v34 >= 64)
    {
      ((void (*)(uint64_t, uint64_t))v13)(v80, v2);
    }
    else
    {
      uint64_t v39 = sub_25F679F0C();
      sub_25F67CC04();
      uint64_t result = v13();
      if (v39 < (uint64_t)v89) {
        goto LABEL_40;
      }
    }
    goto LABEL_25;
  }
  uint64_t v79 = &v76;
  if (v34 > 64)
  {
    uint64_t v78 = &v76;
    MEMORY[0x270FA5388](v34, v35);
    sub_25F6CA904();
    sub_25F67D424();
    uint64_t v36 = v80;
    char v37 = sub_25F6792B4();
    ((void (*)(char *, uint64_t))v13)((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v13)(v36, v2);
    uint64_t v26 = (uint64_t)v84;
    if (v37) {
      goto LABEL_40;
    }
    goto LABEL_25;
  }
  uint64_t v77 = *(void *)(*(void *)(v3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = &v76;
  MEMORY[0x270FA5388](AssociatedTypeWitness, v41);
  swift_getAssociatedConformanceWitness();
  uint64_t v42 = sub_25F70F4F0();
  uint64_t v76 = (uint64_t)&v76;
  MEMORY[0x270FA5388](v42, v43);
  sub_25F70F310();
  uint64_t v44 = v80;
  LODWORD(v77) = sub_25F6792B4();
  sub_25F67CC04();
  uint64_t v45 = v13();
  uint64_t v78 = &v76;
  MEMORY[0x270FA5388](v45, v46);
  ((void (*)(char *, uint64_t, uint64_t))v87[4])((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v44, v2);
  if ((v77 & 1) == 0)
  {
    uint64_t v47 = v89;
    uint64_t v48 = sub_25F70ED90();
    sub_25F67CC04();
    uint64_t result = v13();
    BOOL v49 = v48 < v47;
    uint64_t v26 = (uint64_t)v84;
    if (v49) {
      goto LABEL_40;
    }
    goto LABEL_25;
  }
LABEL_39:
  sub_25F67CC04();
  uint64_t result = v13();
LABEL_40:
  __break(1u);
  return result;
}

unint64_t CoreTip.InvalidationReason.init(rawValue:)(unint64_t result)
{
  if (result >= 0xA) {
    return 10;
  }
  return result;
}

uint64_t sub_25F68BBB0()
{
  if (qword_26B39DB08 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F68BCD8();
  swift_release();
  if (qword_26B39D9B0 != -1) {
    swift_once();
  }
  sub_25F70E570();
  swift_retain();
  sub_25F68BFF8();
  return swift_release();
}

uint64_t sub_25F68BCD8()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F68BD4C(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68BD4C(uint64_t a1)
{
  return sub_25F68BD68(a1, *(uint64_t **)(v1 + 16), *(unsigned __int16 **)(v1 + 24));
}

uint64_t sub_25F68BD68(uint64_t a1, uint64_t *a2, unsigned __int16 *a3)
{
  return sub_25F68BD90(a1, *a2, a2[1], *a3);
}

uint64_t sub_25F68BD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == 4)
  {
    sub_25F70E570();
    sub_25F6E63C8();
  }
  else
  {
    sub_25F70E570();
    sub_25F68BE1C(a4, a2, a3, v7, v8, v9, v10, v11, v13, v14);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68BE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25F676450();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  __int16 v16 = v15;
  swift_isUniquelyReferenced_nonNull_native();
  sub_25F679644();
  sub_25F68BE90(v16, v14, v12);
  *uint64_t v10 = a10;
  sub_25F672C34();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68BE90(__int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25F67AD88(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25F67ACD8(&qword_26B39D6B0);
  uint64_t result = sub_25F70F0A0();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_25F67AD88(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_25F70F520();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
LABEL_5:
  __int16 v15 = *v4;
  if (v12)
  {
    *(_WORD *)(v15[7] + 2 * v11) = a1;
  }
  else
  {
    sub_25F68BFB0(v11, a2, a3, a1, v15);
    return sub_25F70E570();
  }
  return result;
}

unint64_t sub_25F68BFB0(unint64_t result, uint64_t a2, uint64_t a3, __int16 a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(_WORD *)(a5[7] + 2 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_25F68BFF8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F68C06C(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68C06C(uint64_t a1)
{
  return sub_25F68C088(a1, *(uint64_t **)(v1 + 16), *(unsigned __int8 **)(v1 + 24));
}

uint64_t sub_25F68C088(uint64_t a1, uint64_t *a2, unsigned __int8 *a3)
{
  return sub_25F68C0B0(a1, *a2, a2[1], *a3);
}

uint64_t sub_25F68C0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = a4;
  sub_25F70E570();
  if (v7 == 10) {
    sub_25F68C130();
  }
  else {
    sub_25F6E65F8(a4, a2, a3, v8, v9, v10, v11, v12, v14, v15);
  }
  return swift_bridgeObjectRelease();
}

void sub_25F68C130()
{
  sub_25F676450();
  sub_25F685C10();
  sub_25F67AD88(v2, v1);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_25F678680();
    sub_25F67ACD8(&qword_26B39D358);
    sub_25F68EE34();
    sub_25F6806B0();
    sub_25F70F0C0();
    void *v0 = v3;
    swift_bridgeObjectRelease();
  }
  sub_25F672C34();
}

uint64_t sub_25F68C1E8()
{
  return sub_25F70E110();
}

uint64_t sub_25F68C20C(uint64_t a1, uint64_t a2)
{
  return sub_25F674004(a1, a2, 1, v2);
}

uint64_t sub_25F68C224(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DBA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_25F68C284(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25F67AD1C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25F68C2F0(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_25F70E040();
  sub_25F67CA24();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9, v10);
  sub_25F675E40();
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F672AB4();
  if (byte_26B39E428 == 1)
  {
    if (qword_26B39DFB0 != -1) {
      swift_once();
    }
    sub_25F67D980();
    if (v11)
    {
      sub_25F685828();
      if (v11)
      {
        sub_25F67ACD8(&qword_26B39D660);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_25F710D20;
        v19[0] = 91;
        v19[1] = 0xE100000000000000;
        sub_25F6F615C(*v2);
        sub_25F70E790();
        swift_bridgeObjectRelease();
        sub_25F70E790();
        sub_25F70E790();
        *(void *)(v12 + 56) = MEMORY[0x263F8D310];
        *(void *)(v12 + 32) = 91;
        *(void *)(v12 + 40) = 0xE100000000000000;
        sub_25F678500();
        swift_bridgeObjectRelease();
      }
    }
  }
  type metadata accessor for logger();
  uint64_t v13 = sub_25F6786A8();
  v14(v13);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_25F70E020();
  os_log_type_t v16 = _s10TipKitCore3logyyAA6loggerV_So03os_D7_type_tanSSyXKtFfA0__0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    sub_25F70E570();
    void v19[2] = sub_25F68C734(a1, a2, v19);
    sub_25F70ED30();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_25F64E000, v15, v16, "%s", v17, 0xCu);
    swift_arrayDestroy();
    sub_25F68C698();
    sub_25F68C698();

    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  }
}

uint64_t sub_25F68C5E8()
{
  return v0;
}

size_t sub_25F68C608(const void *a1)
{
  return j__malloc_size(a1);
}

uint64_t sub_25F68C624()
{
  sub_25F674004(v0, 0, 1, v1);
  return 0;
}

uint64_t sub_25F68C650()
{
  return 0;
}

uint64_t sub_25F68C65C()
{
  return sub_25F674004(v1, 0, 1, v0);
}

void sub_25F68C67C()
{
  void *v0 = 0x8000000000000000;
}

void sub_25F68C698()
{
  JUMPOUT(0x2611FCA80);
}

uint64_t sub_25F68C6B0()
{
  return sub_25F70E3C0();
}

uint64_t sub_25F68C6D8()
{
  return v0;
}

uint64_t type metadata accessor for logger()
{
  uint64_t result = qword_26B39E3B0;
  if (!qword_26B39E3B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25F68C734(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25F68C808(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25F67AD2C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25F67AD2C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_25F70E570();
  }
  sub_25F67A28C((uint64_t)v12);
  return v7;
}

uint64_t sub_25F68C808(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_25F6F8590((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_25F70ED40();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_25F6F8668(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_25F70EF70();
    if (!v8)
    {
      uint64_t result = sub_25F70F0D0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t CoreParameter.setValue<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25F67C9A8();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v13, v14);
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_25F67B010(v4 + 16, (uint64_t)v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  os_log_type_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  sub_25F675D18(v19, (uint64_t)(v16 + 40));
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[v15], (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_25F68EF7C((uint64_t)&unk_26A7B1730, (uint64_t)v16);
  swift_release();
  return swift_release();
}

uint64_t sub_25F68CACC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v8 = sub_25F70E530();
  sub_25F67ACD8(a3);
  sub_25F67E12C();
  uint64_t result = sub_25F68DFC8(v8, a4);
  *a5 = result;
  return result;
}

uint64_t sub_25F68CB40()
{
  if (!v0[12])
  {
    swift_release();
    sub_25F67A28C((uint64_t)(v0 + 2));
    sub_25F6759EC();
    goto LABEL_5;
  }
  uint64_t v1 = v0[21];
  uint64_t v2 = sub_25F68CDD4(v0[12], v0[16], v0[17]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_25F70E120();
    swift_release();
    sub_25F67A28C((uint64_t)(v0 + 2));
    uint64_t v3 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v3();
  }
  if (v2)
  {
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = swift_allocObject();
    v0[22] = v6;
    *(void *)(v6 + 16) = v2;
    *(void *)(v6 + 24) = v5;
    uint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_26A7B16D8 + dword_26A7B16D8);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[23] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25F6FAA70;
    return v11();
  }
  else
  {
    sub_25F70E120();
    uint64_t v8 = v0[19];
    uint64_t v9 = v0[15];
    sub_25F68D918((uint64_t)(v0 + 2), v0[5]);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[20] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_25F65DF80;
    return MEMORY[0x270FA1E88](v0 + 12, v9, v8);
  }
}

uint64_t sub_25F68CDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_25F70E570();
  uint64_t v7 = sub_25F70E570();
  sub_25F68CE88(v7, v3, a2, a3);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!v4 && sub_25F68D59C(v9) == *(void *)(v9 + 16) && (v10 & 0x100) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

void sub_25F68CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_25F68D0E8();
    uint64_t v5 = a1;
    uint64_t v6 = v21;
    uint64_t v7 = sub_25F68D2FC(a1);
    if ((v7 & 0x8000000000000000) == 0)
    {
      unint64_t v9 = v7;
      if (v7 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v10 = v8;
        uint64_t v20 = a1 + 64;
        while ((*(void *)(v20 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
        {
          if (v10 != *(_DWORD *)(v5 + 36)) {
            goto LABEL_22;
          }
          uint64_t v11 = sub_25F68D37C(*(void *)(*(void *)(v5 + 56) + 8 * v9), a3, a4);
          if (v19)
          {
            swift_release();
            swift_release();
            goto LABEL_20;
          }
          uint64_t v19 = 0;
          uint64_t v12 = sub_25F68D688(v11);
          swift_bridgeObjectRelease();
          unint64_t v13 = *(void *)(v6 + 16);
          uint64_t v14 = v6;
          if (v13 >= *(void *)(v6 + 24) >> 1)
          {
            sub_25F68D0E8();
            uint64_t v14 = v6;
          }
          *(void *)(v14 + 16) = v13 + 1;
          *(void *)(v14 + 8 * v13 + 32) = v12;
          uint64_t v5 = a1;
          if ((uint64_t)v9 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_23;
          }
          if ((*(void *)(v20 + 8 * (v9 >> 6)) & (1 << v9)) == 0) {
            goto LABEL_24;
          }
          if (v10 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_25;
          }
          uint64_t v6 = v14;
          uint64_t v15 = sub_25F70EE10();
          if (!--v4) {
            goto LABEL_19;
          }
          unint64_t v9 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            int v10 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_26;
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
      }
    }
LABEL_26:
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_release();
LABEL_20:
    swift_bridgeObjectRelease();
  }
}

void sub_25F68D0E8()
{
  sub_25F68D138();
  void *v0 = v1;
}

void sub_25F68D138()
{
  sub_25F67E088();
  if (v5)
  {
    sub_25F675A48();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676430();
  if (v4)
  {
    sub_25F67ACD8(v9);
    int v10 = (const void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_25F6766CC(v11 - 32);
  }
  uint64_t v12 = sub_25F67D6FC();
  if (v3)
  {
    v2(v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12);
  }
  swift_release();
}

uint64_t sub_25F68D1FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    sub_25F67ACD8(qword_26B39D6C8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25F68D2FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_25F68D37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D990);
  MEMORY[0x270FA5388](v6 - 8, v7);
  unint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_25F67ACD8(&qword_26B39D998);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10, v12);
  uint64_t v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = sub_25F70E410();
  sub_25F70DFA0();
  uint64_t v15 = sub_25F67ACD8(&qword_26B39D988);
  sub_25F674004((uint64_t)v9, 0, 1, v15);
  sub_25F68D54C();
  sub_25F70E310();
  uint64_t v16 = sub_25F70E0C0();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v10);
  return v16;
}

unint64_t sub_25F68D54C()
{
  unint64_t result = qword_26B39D9A0;
  if (!qword_26B39D9A0)
  {
    sub_25F70E410();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D9A0);
  }
  return result;
}

uint64_t sub_25F68D59C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 0;
  uint64_t v3 = a1 + 32;
  while (1)
  {
    uint64_t v4 = *(void **)(v3 + 8 * v2);
    uint64_t v5 = v4[2];
    if (v5)
    {
      if (*(void *)(v4[4] + 16)) {
        goto LABEL_13;
      }
      if (v5 != 1)
      {
        if (*(void *)(v4[5] + 16)) {
          goto LABEL_13;
        }
        uint64_t v6 = v5 - 2;
        if (v6) {
          break;
        }
      }
    }
LABEL_11:
    if (++v2 == v1) {
      return v1;
    }
  }
  uint64_t v7 = v4 + 6;
  while (!*(void *)(*v7 + 16))
  {
    ++v7;
    if (!--v6) {
      goto LABEL_11;
    }
  }
LABEL_13:
  sub_25F6FF428((uint64_t)v4);
  return v2;
}

uint64_t sub_25F68D688(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_25F6D2960();
    uint64_t v5 = *(void *)(sub_25F70E410() - 8);
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    while (1)
    {
      uint64_t v8 = sub_25F70E400();
      MEMORY[0x270FA5388](v8, v9);
      sub_25F6C0B5C();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      uint64_t v3 = v14;
      if (v1) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F6D2960();
        uint64_t v3 = v14;
      }
      unint64_t v12 = *(void *)(v3 + 16);
      if (v12 >= *(void *)(v3 + 24) >> 1)
      {
        sub_25F6D2960();
        uint64_t v3 = v14;
      }
      *(void *)(v3 + 16) = v12 + 1;
      *(void *)(v3 + 8 * v12 + 32) = v11;
      v6 += v7;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
  }
  return v3;
}

uint64_t sub_25F68D858(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  sub_25F68D918(a1, v6);
  sub_25F67C9A8();
  MEMORY[0x270FA5388](v8, v9);
  sub_25F675A6C();
  (*(void (**)(uint64_t))(v10 + 16))(v3);
  uint64_t v11 = a2(v3, v2, v6, v7);
  sub_25F67A28C(a1);
  return v11;
}

uint64_t sub_25F68D918(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_25F68D968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  uint64_t v11 = sub_25F68DB8C((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

uint64_t CoreParameter.__allocating_init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CoreParameter.init(_:datastore:)(a1, a2);
  return v4;
}

uint64_t CoreParameter.init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  sub_25F67B010(a1, v2 + 16);
  *(void *)(v2 + 56) = a2;
  sub_25F67B010(a1, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  sub_25F675D18(v7, v5 + 16);
  swift_unownedRetain();
  sub_25F68E0FC((uint64_t)&unk_26A7B1718, v5);
  swift_release();
  sub_25F67A28C(a1);
  swift_release();
  return v2;
}

uint64_t sub_25F68DB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8, v9);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13);
  uint64_t v15 = (char *)&v29 - v14;
  v32[3] = a3;
  v32[4] = a4;
  uint64_t v16 = sub_25F677CCC(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v16, a1, a3);
  sub_25F67ACD8(&qword_26B39DA78);
  swift_allocObject();
  *(void *)(a2 + 96) = sub_25F68E228(0, 1);
  uint64_t v17 = sub_25F70DF30();
  sub_25F674004((uint64_t)v15, 1, 1, v17);
  sub_25F675D30((uint64_t)v15, (uint64_t)v12, &qword_26B39DBA8);
  sub_25F67ACD8(&qword_26B39DA58);
  swift_allocObject();
  uint64_t v18 = sub_25F68E2CC((uint64_t)v12);
  sub_25F675D8C((uint64_t)v15, &qword_26B39DBA8);
  *(void *)(a2 + 104) = v18;
  sub_25F67ACD8(&qword_26B39DB40);
  swift_allocObject();
  *(void *)(a2 + 120) = sub_25F68DFC8(0, &qword_26B39DB78);
  sub_25F70DFE0();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  *(void *)(a2 + 16) = v19(a3, a4);
  *(void *)(a2 + 24) = v20;
  sub_25F67ACD8(&qword_26B39DA70);
  swift_allocObject();
  *(void *)(a2 + 112) = sub_25F68DFC8(0, &qword_26B39DE28);
  *(void *)(a2 + 136) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  swift_unownedRetain();
  swift_release();
  sub_25F67ACD8(&qword_26B39DA68);
  swift_allocObject();
  *(void *)(a2 + 128) = sub_25F68E284(0.0);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 72))(v30, a3, a4);
  LODWORD(v18) = v31;
  swift_bridgeObjectRelease();
  if (v18 == 1)
  {
    if (qword_26B39D9B0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v21 = v19(a3, a4);
    char v23 = sub_25F68E11C(v21, v22);
    swift_release();
    swift_bridgeObjectRelease();
    if (v23 == 10) {
      char v24 = 3;
    }
    else {
      char v24 = 2;
    }
  }
  else
  {
    char v24 = 0;
    char v23 = 10;
  }
  *(unsigned char *)(a2 + 88) = v24;
  *(unsigned char *)(a2 + 89) = v23;
  sub_25F67B010((uint64_t)v32, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  *(void *)(a2 + 72) = String.init<A>(type:)();
  *(void *)(a2 + 80) = v25;
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  sub_25F67B010((uint64_t)v32, (uint64_t)v30);
  uint64_t v27 = swift_allocObject();
  sub_25F675D18(v30, v27 + 16);
  *(void *)(v27 + 56) = v26;
  swift_retain();
  sub_25F68E0FC((uint64_t)&unk_26A7B15B0, v27);
  swift_release();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)v32);
  return a2;
}

uint64_t sub_25F68DFC8(uint64_t a1, uint64_t *a2)
{
  sub_25F67ACD8(a2);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)(v2 + 16) = v4;
  return v2;
}

uint64_t sub_25F68E00C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_25F67ACD8(qword_26B39E198);
  sub_25F67CA24();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8, v9);
  sub_25F6768BC();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  sub_25F67ACD8(&qword_26B39E2E0);
  sub_25F70EAB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
}

uint64_t sub_25F68E0FC(uint64_t a1, uint64_t a2)
{
  return sub_25F68E00C(a1, a2);
}

uint64_t sub_25F68E11C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25F68E188(v4, &v7);
  os_unfair_lock_unlock(v5);
  return v7;
}

uint64_t sub_25F68E188@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25F68E1A4(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_25F68E1A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F68E1D8(a1, *a2, a2[1]);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_25F68E1D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v4 = sub_25F67AD88(a2, a3), (v5 & 1) != 0)) {
    return *(unsigned __int8 *)(*(void *)(v3 + 56) + v4);
  }
  else {
    return 10;
  }
}

uint64_t sub_25F68E228(uint64_t a1, char a2)
{
  sub_25F67ACD8(&qword_26B39DAF8);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 28) = 0;
  *(void *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 24) = a2 & 1;
  *(void *)(v2 + 16) = v5;
  return v2;
}

uint64_t sub_25F68E284(double a1)
{
  sub_25F67ACD8(&qword_26B39DAF0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(double *)(v3 + 16) = a1;
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_25F68E2CC(uint64_t a1)
{
  sub_25F67ACD8(&qword_26B39DAE0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_25F675D30(a1, v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16), &qword_26B39DBA8);
  sub_25F675D8C(a1, &qword_26B39DBA8);
  *(void *)(v1 + 16) = v3;
  return v1;
}

void sub_25F68E3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  int v29;
  uint64_t v30[2];
  unsigned __int8 v31;

  unsigned __int8 v7 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 72);
  v7(v30, a3, a4);
  sub_25F68E97C(v30[0], v30[1]);
  uint64_t v8 = sub_25F67D1C8();
  ((void (*)(uint64_t))v7)(v8);
  swift_bridgeObjectRelease();
  sub_25F676AD8();
  sub_25F68ECD4();
  sub_25F68EC58();
  uint64_t v9 = sub_25F67D1C8();
  ((void (*)(uint64_t))v7)(v9);
  swift_bridgeObjectRelease();
  sub_25F676AD8();
  sub_25F68EA4C();
  if (CoreTipRecord.status.getter() != 2) {
    CoreTipRecord.invalidationReason.setter();
  }
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v10 = qword_26B39E3E0;
    uint64_t v11 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    char v4 = qword_26B3A3080;
    if (qword_26B3A3080)
    {
      uint64_t v10 = qword_26B3A3078;
      uint64_t v11 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      unint64_t v12 = sub_25F6A3C40();
      if (v13) {
        uint64_t v10 = v12;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v13) {
        uint64_t v11 = v13;
      }
      else {
        uint64_t v11 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  uint64_t v14 = v10 == 0x6C7070612E6D6F63 && v11 == 0xEF64737069742E65;
  if (v14)
  {
    sub_25F70E570();
    sub_25F672B04();
    goto LABEL_25;
  }
  sub_25F67CD9C();
  sub_25F67D4CC();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_25:
    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
    CoreTipRecord.content.setter(v15);
  }
  if (qword_26B39E3E8)
  {
    uint64_t v16 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    char v4 = qword_26B3A3080;
    if (qword_26B3A3080)
    {
      uint64_t v16 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      sub_25F6A3C40();
      if (v17) {
        uint64_t v16 = v17;
      }
      else {
        uint64_t v16 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  sub_25F67E1A8();
  if (v14 && v16 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    sub_25F672B04();
LABEL_44:
    uint64_t v19 = sub_25F67D1C8();
    ((void (*)(uint64_t))v7)(v19);
    swift_bridgeObjectRelease();
    sub_25F68EF9C();
    goto LABEL_45;
  }
  sub_25F67CD9C();
  sub_25F67D4CC();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0 || (sub_25F68EAB0() & 1) == 0) {
    goto LABEL_44;
  }
LABEL_45:
  if (qword_26B39E3E8)
  {
    uint64_t v20 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    char v4 = qword_26B3A3080;
    if (qword_26B3A3080)
    {
      uint64_t v20 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      sub_25F6A3C40();
      if (v21) {
        uint64_t v20 = v21;
      }
      else {
        uint64_t v20 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  sub_25F67E1A8();
  if (v14 && v20 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    sub_25F672B04();
  }
  else
  {
    sub_25F67CD9C();
    sub_25F67D4CC();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      char v23 = sub_25F67D1C8();
      ((void (*)(uint64_t))v7)(v23);
      swift_bridgeObjectRelease();
      sub_25F676AD8();
      sub_25F68EB20();
      char v24 = sub_25F67D1C8();
      ((void (*)(uint64_t))v7)(v24);
      swift_bridgeObjectRelease();
      sub_25F676AD8();
      sub_25F68EE84();
    }
  }
  if (qword_26B39E3E8)
  {
    uint64_t v25 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    char v4 = qword_26B3A3080;
    if (qword_26B3A3080)
    {
      uint64_t v25 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      sub_25F6A3C40();
      if (v26) {
        uint64_t v25 = v26;
      }
      else {
        uint64_t v25 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  sub_25F67E1A8();
  if (v14 && v25 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    sub_25F672B04();
  }
  else
  {
    sub_25F67CD9C();
    sub_25F67D4CC();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      uint64_t v28 = sub_25F67D1C8();
      ((void (*)(uint64_t))v7)(v28);
      uint64_t v29 = v31;
      swift_bridgeObjectRelease();
      if (v29 == 1 && CoreTipRecord.status.getter() == 2) {
        sub_25F6EA60C();
      }
    }
  }
}

uint64_t _s7OptionsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F68E97C(uint64_t a1, uint64_t a2)
{
  sub_25F678370();
  uint64_t v9 = v4;
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  sub_25F70E570();
  sub_25F67ACD8(&qword_26B39DA98);
  sub_25F67ACD8(&qword_26B39D878);
  sub_25F67D46C();
  sub_25F683728((uint64_t)v6, 0x4449656C646E7562, 0xE800000000000000);
  swift_bridgeObjectRelease();
  return sub_25F6E6898();
}

uint64_t CoreTipRecord.invalidationReason.setter()
{
  return sub_25F68EB90();
}

uint64_t sub_25F68EA4C()
{
  sub_25F670BB4();
  sub_25F685C68();
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  sub_25F675C34();
  sub_25F68EF28((uint64_t)"usesConstellation", v1);
  return sub_25F67B164();
}

uint64_t sub_25F68EAB0()
{
  sub_25F678370();
  sub_25F672C60((uint64_t)"usesConstellation");
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F685E28();
    return v0 & 1;
  }
  else
  {
    sub_25F675010();
    return 0;
  }
}

uint64_t sub_25F68EB20()
{
  sub_25F670BB4();
  sub_25F685C68();
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v0 = sub_25F675C34();
  uint64_t v8 = sub_25F6E6928(v0, v1, v2, v3, v4, v5, v6, v7, v11);
  sub_25F683728((uint64_t)v8, 0xD000000000000010, v9);
  return sub_25F67B164();
}

uint64_t sub_25F68EB90()
{
  return swift_release();
}

uint64_t sub_25F68EC58()
{
  sub_25F670BB4();
  sub_25F685C68();
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  sub_25F675C34();
  sub_25F683728((uint64_t)&v1, 0x7669686372417369, 0xEA00000000006465);
  return sub_25F67B164();
}

uint64_t sub_25F68ECD4()
{
  sub_25F670BB4();
  sub_25F685C68();
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v0 = sub_25F675C34();
  uint64_t v8 = sub_25F6E6928(v0, v1, v2, v3, v4, v5, v6, v7, v11);
  sub_25F683728((uint64_t)v8, 0xD000000000000017, v9);
  return sub_25F67B164();
}

uint64_t sub_25F68ED44()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68EDFC()
{
  return swift_bridgeObjectRelease();
}

void sub_25F68EE1C()
{
  JUMPOUT(0x2611FBA70);
}

uint64_t sub_25F68EE34()
{
  return sub_25F70F0A0();
}

void sub_25F68EE54()
{
  *(void *)(v0 - 120) = 0;
  *(void *)(v0 - 112) = 0xE000000000000000;
}

uint64_t sub_25F68EE64@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  return swift_willThrow();
}

uint64_t sub_25F68EE84()
{
  sub_25F670BB4();
  sub_25F685C68();
  sub_25F67ACD8(&qword_26B39D5E0);
  sub_25F67ACD8(&qword_26B39D878);
  sub_25F675C34();
  sub_25F68EF28((uint64_t)"usesCoreAnalytics", v1);
  return sub_25F67B164();
}

uint64_t sub_25F68EEE8(unsigned int a1)
{
  return a1 | 0x736E6F00000000;
}

void sub_25F68EF08()
{
  sub_25F673D98();
}

uint64_t sub_25F68EF28@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_25F683728((uint64_t)&a2, 0xD000000000000011, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_25F68EF5C()
{
  return sub_25F70E160();
}

uint64_t sub_25F68EF7C(uint64_t a1, uint64_t a2)
{
  return sub_25F68E00C(a1, a2);
}

uint64_t sub_25F68EF9C()
{
  sub_25F670BB4();
  sub_25F6E68C8(v0);
  sub_25F67ACD8(&qword_26B39D2A8);
  sub_25F67ACD8(&qword_26B39D878);
  sub_25F67D46C();
  sub_25F683728((uint64_t)v2, 0x6C7073694478616DLL, 0xEF746E756F437961);
  return sub_25F6E6898();
}

uint64_t sub_25F68F020()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F68F03C()
{
  return sub_25F70E790();
}

uint64_t sub_25F68F07C()
{
  sub_25F68AB60();
  if (v0)
  {
    uint64_t v1 = sub_25F68F07C();
    swift_release();
    return v1;
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_25F68F0DC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    sub_25F681778(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F68F170()
{
  unint64_t result = qword_26B39DB20;
  if (!qword_26B39DB20)
  {
    sub_25F682580(&qword_26B39DB30);
    uint64_t v1 = (void (*)(uint64_t))MEMORY[0x263F18140];
    sub_25F682878(&qword_26B39DB68, 255, MEMORY[0x263F18140]);
    sub_25F682878(&qword_26B39DB58, 255, v1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DB20);
  }
  return result;
}

unint64_t sub_25F68F250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = sub_25F68FC48(a1, a2, a3, a7, a8, a9);
  if (!v13) {
    goto LABEL_7;
  }
  unint64_t v14 = v13;
  sub_25F67B010(a4, (uint64_t)v21);
  sub_25F67ACD8(&qword_26B39D578);
  sub_25F67ACD8(&qword_26B39CDC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    swift_release();
    sub_25F67EFC0((uint64_t)v19, &qword_26B39CA08);
LABEL_7:
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD00000000000002BLL;
    unint64_t v23 = 0x800000025F719C00;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    unint64_t v14 = v22;
    unint64_t v16 = v23;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v17 = v14;
    v17[1] = v16;
    swift_willThrow();
    return v14;
  }
  sub_25F675D18(v19, (uint64_t)&v22);
  CoreRuleRecord.update(tip:parent:)(a5, a6);
  swift_getKeyPath();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 32))(v21, a8, a9);
  sub_25F68FA04();
  swift_release();
  swift_getKeyPath();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 56))(v21, a8, a9);
  sub_25F68FA04();
  swift_release();
  swift_release();
  swift_release();
  sub_25F67A2DC(&v22, v24);
  type metadata accessor for CoreEventRecord();
  uint64_t v15 = v25;
  sub_25F6583A0();
  if (v15) {
    swift_release();
  }
  else {
    sub_25F696618();
  }
  sub_25F67A28C((uint64_t)&v22);
  return v14;
}

unint64_t sub_25F68F518(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v9)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  void (*v12)(uint64_t);
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  uint64_t v9 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 32);
  v9(&v54, a5, a6);
  switch((char)v54)
  {
    case 1:
      unint64_t v14 = sub_25F67CC18();
      v15(v14);
      unint64_t v16 = sub_25F67E81C();
      v17(v16);
      uint64_t v18 = sub_25F67D098();
      uint64_t v26 = sub_25F6D490C(v18, v19, v20, v21, v22, v23, v24, v25, v52);
      goto LABEL_6;
    case 2:
      uint64_t v27 = sub_25F67CC18();
      v28(v27);
      uint64_t v29 = sub_25F67E81C();
      v30(v29);
      unsigned __int8 v31 = sub_25F67D098();
      uint64_t v26 = sub_25F68F250(v31, v32, v33, v34, v35, v36, v37, v38, v52);
      goto LABEL_6;
    case 4:
      uint64_t v39 = sub_25F67CC18();
      v40(v39);
      uint64_t v41 = sub_25F67E81C();
      v42(v41);
      uint64_t v43 = sub_25F67D098();
      uint64_t v26 = sub_25F68F730(v43, v44, v45, v46, v47, v48, v49, v50, v52);
LABEL_6:
      if (!v6) {
        a1 = v26;
      }
      sub_25F67A28C((uint64_t)&v53);
      swift_bridgeObjectRelease();
      break;
    default:
      sub_25F70EEC0();
      sub_25F70E790();
      uint64_t v11 = sub_25F67CC18();
      v12(v11);
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      v9(&v54, a5, a6);
      sub_25F6D32E0();
      sub_25F70E790();
      a1 = 0;
      sub_25F6931C0();
      swift_allocError();
      *uint64_t v13 = 0;
      v13[1] = 0xE000000000000000;
      swift_willThrow();
      break;
  }
  return a1;
}

unint64_t sub_25F68F730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = sub_25F68FC48(a1, a2, a3, a7, a8, a9);
  if (!v14) {
    goto LABEL_7;
  }
  unint64_t v15 = v14;
  sub_25F67B010(a4, (uint64_t)v25);
  sub_25F67ACD8(&qword_26B39D578);
  sub_25F67ACD8(&qword_26B39CF28);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v24 = 0;
    memset(v23, 0, sizeof(v23));
    swift_release();
    sub_25F67EFC0((uint64_t)v23, &qword_26B39CCC0);
LABEL_7:
    unint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD00000000000002FLL;
    unint64_t v27 = 0x800000025F719C30;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    unint64_t v15 = v26;
    unint64_t v20 = v27;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v21 = v15;
    v21[1] = v20;
    swift_willThrow();
    return v15;
  }
  sub_25F675D18(v23, (uint64_t)&v26);
  CoreRuleRecord.update(tip:parent:)(a5, a6);
  swift_getKeyPath();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 32))(v25, a8, a9);
  sub_25F68FA04();
  swift_release();
  swift_getKeyPath();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a9 + 56))(v25, a8, a9);
  sub_25F68FA04();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v16 = v28;
  uint64_t v17 = v29;
  uint64_t v18 = sub_25F67A2DC(&v26, (uint64_t)v28);
  type metadata accessor for CoreParameterRecord();
  uint64_t v19 = v30;
  sub_25F673790((uint64_t)v18, a7, v16, v17);
  if (v19) {
    swift_release();
  }
  else {
    sub_25F68FA4C();
  }
  sub_25F67A28C((uint64_t)&v26);
  return v15;
}

unsigned char *_s3KeyOwCP(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_25F68FA04()
{
  return swift_retain();
}

void sub_25F68FA4C()
{
}

void CoreRuleRecord.update(tip:parent:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_retain();
    sub_25F68FB7C();
    sub_25F68FB7C();
  }
  if (a2)
  {
    swift_retain();
    sub_25F68FB7C();
    sub_25F68FB7C();
  }
}

void sub_25F68FB7C()
{
  sub_25F685B5C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  swift_getKeyPath();
  sub_25F67B1C0(&qword_26B39DBE8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F70DFC0();
  swift_release();
  v1(v3);
  sub_25F670C54();
}

uint64_t sub_25F68FC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v37 = a6;
  uint64_t v36 = a5;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = sub_25F67ACD8(&qword_26B39D4B0);
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39D438);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25F715260;
  *(void *)(v19 + 32) = swift_getKeyPath();
  *(void *)(v19 + 40) = swift_getKeyPath();
  *(void *)(v19 + 48) = swift_getKeyPath();
  *(void *)(v19 + 56) = swift_getKeyPath();
  *(void *)(v19 + 64) = swift_getKeyPath();
  uint64_t v49 = v19;
  sub_25F70E930();
  uint64_t v20 = v49;
  swift_getKeyPath();
  sub_25F6903C8();
  sub_25F70DB40();
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v50 = v7;
  sub_25F70DFA0();
  uint64_t v42 = v36;
  uint64_t v43 = v37;
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v46 = v38;
  uint64_t v21 = sub_25F685334(v39, 0, v20, (uint64_t)v18, (uint64_t)v13, (uint64_t)sub_25F696724, (uint64_t)v41, &qword_26B39D650, &qword_26B39D438, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25F6854E4);
  swift_bridgeObjectRelease();
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v40);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v22 = v21;
  if (qword_26B39E3E8)
  {
    uint64_t v23 = qword_26B39E3E0;
    unint64_t v24 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v23 = qword_26B3A3078;
      unint64_t v24 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v25 = sub_25F6A3C40();
      if (v26)
      {
        uint64_t v23 = v25;
        unint64_t v24 = v26;
      }
      else
      {
        uint64_t v23 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v23 == 0xD000000000000010 && v24 == 0x800000025F718D70) {
    goto LABEL_32;
  }
  char v27 = sub_25F70F330();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t result = v22;
  if (v27) {
    return result;
  }
  if (qword_26B39E3E8)
  {
    uint64_t v29 = qword_26B39E3E0;
    unint64_t v30 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v29 = qword_26B3A3078;
      unint64_t v30 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v31 = sub_25F6A3C40();
      if (v32)
      {
        uint64_t v29 = v31;
        unint64_t v30 = v32;
      }
      else
      {
        uint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v29 == 0x6C7070612E6D6F63 && v30 == 0xEF64737069742E65)
  {
LABEL_32:
    sub_25F70E570();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v34 = sub_25F70F330();
    sub_25F70E570();
    swift_bridgeObjectRelease();
    uint64_t result = v22;
    if (v34) {
      return result;
    }
    type metadata accessor for CoreRule();
    sub_25F690234(v38, v39);
  }
  return v22;
}

uint64_t type metadata accessor for CoreRule()
{
  return self;
}

uint64_t sub_25F690234(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (qword_26B39D6C0 != -1) {
    a1 = swift_once();
  }
  uint64_t v6 = v3;
  uint64_t v7 = a2;
  MEMORY[0x270FA5388](a1, a2);
  os_unfair_lock_lock((os_unfair_lock_t)&dword_26B3A3040);
  sub_25F6902FC((uint64_t)&qword_26B3A3048, (uint64_t)v5);
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_26B3A3040);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6902FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F69031C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_25F69031C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_25F690364(a1, *a2, a2[1]);
  if (!v3)
  {
    *(unsigned char *)a3 = result & 1;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + 16) = v7;
  }
  return result;
}

uint64_t sub_25F690364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F70E570();
  return sub_25F6904CC(&v6, a2, a3) & 1;
}

unint64_t sub_25F6903C8()
{
  unint64_t result = qword_26B39D7F0;
  if (!qword_26B39D7F0)
  {
    sub_25F70DF30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D7F0);
  }
  return result;
}

uint64_t sub_25F690418(uint64_t a1)
{
  uint64_t v2 = sub_25F70EB40();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      sub_25F70E570();
      sub_25F6904CC(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_25F6904CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_25F70F5C0();
  sub_25F70E570();
  sub_25F70E740();
  uint64_t v8 = sub_25F70F620();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  sub_25F6764B0();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    uint64_t v13 = (void *)(v12 + 16 * v10);
    BOOL v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (sub_25F70F330() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      sub_25F70E570();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      sub_25F6764B0();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v12 + 16 * v10);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_25F70F330() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_25F70E570();
  sub_25F690664(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_25F690664(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_25F690800();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_25F6EAF00();
      goto LABEL_22;
    }
    sub_25F653D38();
  }
  uint64_t v11 = *v4;
  sub_25F70F5C0();
  sub_25F70E740();
  unint64_t result = sub_25F70F620();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_25F70F330(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_25F70F510();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_25F70F330();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *BOOL v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_25F690800()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_25F67ACD8(&qword_26B39D3A8);
  uint64_t v3 = sub_25F70EEA0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_25F70F5C0();
      sub_25F70E740();
      uint64_t result = sub_25F70F620();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_25F69C2BC(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_25F690AE4()
{
  return sub_25F690AEC(*v0);
}

uint64_t sub_25F690AEC(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x746E656D75677261;
      break;
    case 2:
      uint64_t result = 0x6F6974617265706FLL;
      break;
    case 3:
      uint64_t result = 0x61746164776172;
      break;
    case 4:
      uint64_t result = 0x65756C6176;
      break;
    case 5:
      uint64_t result = 0x73656972657571;
      break;
    case 6:
      uint64_t result = 0x6964657270627573;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *_s9PredicateC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConstellationDeliveryInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_25F690D14()
{
  return sub_25F690D1C(*v0);
}

uint64_t sub_25F690D1C(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 1954047348;
      break;
    case 2:
      uint64_t result = 0x7372747461;
      break;
    case 3:
      uint64_t result = 0x736B72616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ConstellationDocument.Action.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5QueryV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_25F690EEC()
{
  return sub_25F690EF4(*v0);
}

uint64_t sub_25F690EF4(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x736E6F69746361;
      break;
    case 3:
      uint64_t result = 0x7465737361;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *_s8ArgumentO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25F691038()
{
  return sub_25F691040(*v0);
}

uint64_t sub_25F691040(char a1)
{
  if (!a1) {
    return 0x746E756F63;
  }
  if (a1 == 1) {
    return 0x697461756C617665;
  }
  return 1701736302;
}

void *_s17ConstellationTextVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

unsigned char *_s17ConstellationTextV11ContentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.Options()
{
  return &type metadata for CoreTip.Options;
}

unint64_t sub_25F691180()
{
  return sub_25F691188(*v0);
}

unint64_t sub_25F691188(char a1)
{
  unint64_t result = 0x6870796C67;
  switch(a1)
  {
    case 1:
      unint64_t result = 7629921;
      break;
    case 2:
      unint64_t result = 0x6449676E69727473;
      break;
    case 3:
      unint64_t result = 0x72656469766F7270;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 1717924456;
      break;
    case 6:
      unint64_t result = 0x726F6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

id sub_25F691240(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25F679F8C(a1, a2, a3, (void (*)(void *__return_ptr, _OWORD *))sub_25F67A380);
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

__n128 initializeWithTake for AnyCodable(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6912A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s20ConstellationContentC10AttributesVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for CoreRule.Category()
{
  return &type metadata for CoreRule.Category;
}

id sub_25F691348(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25F679F8C(a1, a2, a3, (void (*)(void *__return_ptr, _OWORD *))sub_25F67B9F0);
}

unsigned char *_s20ConstellationContentC10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t _s20ConstellationContentC10AttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

unint64_t sub_25F69149C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CoreTip.ConstellationText.ContentType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t CoreTip.ConstellationText.ContentType.rawValue.getter()
{
  unint64_t result = 112;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6C6F626D7973;
      break;
    case 3:
      unint64_t result = 1954047348;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F691534()
{
  return sub_25F69153C(*v0);
}

uint64_t sub_25F69153C(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1954047348;
      break;
    case 3:
      uint64_t result = 0x7372747461;
      break;
    case 4:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6915B0@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationText.ContentType.init(rawValue:)(a1);
}

uint64_t type metadata accessor for AtomicProperty()
{
  return sub_25F67FB98();
}

uint64_t sub_25F6915D8()
{
  return sub_25F6915F4();
}

uint64_t sub_25F6915F4()
{
  return v0;
}

uint64_t sub_25F691604()
{
  return 1701667182;
}

ValueMetadata *type metadata accessor for CoreTip.Status()
{
  return &type metadata for CoreTip.Status;
}

uint64_t _s18ConstellationAssetVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

unsigned char *_s8ArgumentO15CountCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t destroy for ConstellationEvent()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_25F691714()
{
  return sub_25F69171C(*v0);
}

unint64_t sub_25F69171C(char a1)
{
  unint64_t result = 3487349;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6570795472657375;
      break;
    case 2:
      unint64_t result = 0x656D697265707865;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0x626967696C656E69;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F691824@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F691840(a1, a2);
}

uint64_t sub_25F691840@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2);
}

uint64_t type metadata accessor for MiniTipsDatastore()
{
  uint64_t result = qword_26B39E308;
  if (!qword_26B39E308) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25F69191C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.RecordStatus.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t CoreTip.RecordStatus.rawValue.getter(uint64_t result)
{
  return result;
}

unsigned char *_s19ConstellationActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t CoreParameter.parameter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25F67B010(v1 + 16, a1);
}

unsigned char *_s20ConstellationContentC10AttributesV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t static Bool.isAppleBundle.getter()
{
  return sub_25F654418(&qword_26B39E320, (unsigned __int8 *)&byte_26B39E318);
}

unsigned char *sub_25F691B1C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t _s18ConstellationAssetVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_25F691BC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F681140(*(void *)(v1 + 16), a1);
}

uint64_t static CoreParameter.parameters.getter()
{
  return sub_25F66038C(&qword_26B39D688);
}

BOOL CoreTip.Status.isUnknown.getter()
{
  return *v0 == 3;
}

uint64_t CoreTip.Status.recordStatus.getter()
{
  return *v0;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Operator()
{
  return &type metadata for CoreRule.Predicate.Operator;
}

unint64_t sub_25F691C20@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_25F691C4C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_25F691C4C(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

_WORD *_s6StatusVwCP(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_25F691C6C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6819F4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t getEnumTagSinglePayload for ConstellationEventInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

BOOL sub_25F691D00(char *a1, char *a2)
{
  return sub_25F691D0C(*a1, *a2);
}

BOOL sub_25F691D0C(char a1, char a2)
{
  return a1 == a2;
}

unsigned char *storeEnumTagSinglePayload for DeviceProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Argument()
{
  return &type metadata for CoreRule.Predicate.Argument;
}

uint64_t CoreRule.Options.init(updatesFromTipsd:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstellationDocument.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_25F691E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t CoreTip.__allocating_init(_:)(uint64_t a1)
{
  return sub_25F68D858(a1, sub_25F68D968);
}

void *_s20ConstellationContentC10AttributesVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t type metadata accessor for DictionaryTransformer()
{
  return sub_25F67FB98();
}

uint64_t sub_25F691EC8()
{
  return 1;
}

ValueMetadata *type metadata accessor for CoreTip.InvalidationReason()
{
  return &type metadata for CoreTip.InvalidationReason;
}

ValueMetadata *type metadata accessor for CoreTip.DisplayState()
{
  return &type metadata for CoreTip.DisplayState;
}

ValueMetadata *_s8ArgumentO20EvaluationCodingKeysOMa()
{
  return &_s8ArgumentO20EvaluationCodingKeysON;
}

ValueMetadata *_s8ArgumentO15CountCodingKeysOMa()
{
  return &_s8ArgumentO15CountCodingKeysON;
}

ValueMetadata *_s8ArgumentO14NoneCodingKeysOMa()
{
  return &_s8ArgumentO14NoneCodingKeysON;
}

ValueMetadata *_s8ArgumentO10CodingKeysOMa()
{
  return &_s8ArgumentO10CodingKeysON;
}

ValueMetadata *_s9PredicateC10CodingKeysOMa()
{
  return &_s9PredicateC10CodingKeysON;
}

ValueMetadata *type metadata accessor for CoreRule.Options()
{
  return &type metadata for CoreRule.Options;
}

__n128 _s7OptionsVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 29) = *(_OWORD *)(a2 + 29);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AnyCodable()
{
  return &type metadata for AnyCodable;
}

uint64_t sub_25F691F80()
{
  return sub_25F669428();
}

uint64_t _s8ArgumentOwxx(uint64_t a1)
{
  return sub_25F67F01C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_25F691F98@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F662D7C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_25F691FA0()
{
  *(_WORD *)(*(void *)(v0 + 16) + 88) = *(_WORD *)(v0 + 24);
}

uint64_t sub_25F691FB0(uint64_t a1)
{
  return sub_25F6692A4(a1, *(void *)(v1 + 16), *(uint64_t (**)(__int16 *))(v1 + 24));
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Argument.CommonKeyPathKind()
{
  return &type metadata for CoreRule.Predicate.Argument.CommonKeyPathKind;
}

__n128 initializeWithTake for ConstellationEvent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_25F691FE0(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t storeEnumTagSinglePayload for DeviceProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25F6F0338);
}

ValueMetadata *_s20ConstellationContentC10CodingKeysOMa()
{
  return &_s20ConstellationContentC10CodingKeysON;
}

ValueMetadata *_s17ConstellationTextV10CodingKeysOMa()
{
  return &_s17ConstellationTextV10CodingKeysON;
}

uint64_t _s8ArgumentO17CommonKeyPathKindOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t _s8ArgumentO17CommonKeyPathKindOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_25F6920D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25F659690(a1, a2, a3, a4, (uint64_t (*)(uint64_t))CoreParameterRecord.valueType.setter);
}

uint64_t sub_25F6920F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F65D034(*(void *)(v1 + 16), a1);
}

uint64_t sub_25F6920FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  return MEMORY[0x270FA2498](sub_25F65773C, 0, 0);
}

ValueMetadata *_s20ConstellationContentC10AttributesV10CodingKeysOMa()
{
  return &_s20ConstellationContentC10AttributesV10CodingKeysON;
}

ValueMetadata *_s19ConstellationActionV10CodingKeysOMa()
{
  return &_s19ConstellationActionV10CodingKeysON;
}

unsigned char *_s8OperatorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

uint64_t _s8OperatorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t *CoreRule.Predicate.Argument.init(commonKeyPathKind:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = result[1];
  if (v3 >= 4)
  {
    uint64_t v7 = *result;
    uint64_t v8 = qword_26B39C298;
    sub_25F70E570();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for logger();
    sub_25F67F3A4(v9, (uint64_t)qword_26B39C280);
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70E790();
    sub_25F68C2F0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    sub_25F6CBCF0(v7, v3);
    __n128 result = (uint64_t *)sub_25F6CBCF0(v7, v3);
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    LOBYTE(v6) = 2;
  }
  else
  {
    uint64_t v4 = *(void *)&aLast[8 * v3];
    uint64_t v5 = qword_25F7141C0[v3];
    unsigned int v6 = 0x1010001u >> (8 * v3);
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

unint64_t _s8ArgumentO17CommonKeyPathKindOwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_25F6923FC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t _s8ArgumentO17CommonKeyPathKindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    sub_25F70E570();
  }
  return a1;
}

uint64_t sub_25F69246C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F65EE84(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_25F69247C(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));
  swift_release();
  return MEMORY[0x270FA0238](v2, a2, 7);
}

uint64_t sub_25F6924D0(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25F692500()
{
  return swift_release();
}

uint64_t sub_25F692508()
{
  return swift_release();
}

uint64_t sub_25F692510(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_25F692520(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t *sub_25F692530(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_25F692594()
{
  sub_25F658DA0();
}

uint64_t sub_25F6925B4()
{
  return sub_25F70F0A0();
}

uint64_t sub_25F6925D4()
{
  return v0;
}

uint64_t sub_25F6925EC()
{
  return 0;
}

uint64_t sub_25F692600()
{
  sub_25F67629C();
  sub_25F678604();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F674E18(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F67E5FC();
  return v4(v3);
}

uint64_t sub_25F692698(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_25F6F9020;
  return v5();
}

unint64_t static Duration.systemDisplayFrequency.getter()
{
  return 0xC0DDD92E56000000;
}

uint64_t sub_25F69277C()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39DE10);
  if (sub_25F6924D0(v0)) {
    uint64_t v1 = &qword_26B39DE58;
  }
  else {
    uint64_t v1 = (uint64_t *)&unk_26B39DE50;
  }
  return sub_25F67ACD8(v1);
}

unint64_t sub_25F6927CC()
{
  unint64_t result = qword_26B39DB10;
  if (!qword_26B39DB10)
  {
    sub_25F682580(&qword_26B39DB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39DB10);
  }
  return result;
}

uint64_t sub_25F692820(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6 = sub_25F676A44(a1, a2, a3, a4, a5);
  uint64_t result = sub_25F65BF3C(v8, v7 + 8 * v6, v9);
  uint64_t v11 = *(void *)(a5 + 16);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    *(void *)(a5 + 16) = v13;
  }
  return result;
}

uint64_t sub_25F692868()
{
  uint64_t result = sub_25F70E690();
  qword_26B3A3000 = result;
  return result;
}

uint64_t sub_25F6928A0(uint64_t a1)
{
  return sub_25F6928AC(a1, *(uint64_t **)(v1 + 16), *(void (**)(long long *__return_ptr))(v1 + 24));
}

uint64_t sub_25F6928AC(uint64_t a1, uint64_t *a2, void (*a3)(long long *__return_ptr))
{
  a3(&v7);
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  *(_OWORD *)a2 = v7;
  return sub_25F67EFAC(v4, v5);
}

uint64_t sub_25F692940()
{
  if (!sub_25F666160()) {
    return 0;
  }
  uint64_t v1 = (void *)sub_25F70E690();
  objc_msgSend(v0, sel_doubleForKey_, v1);
  long double v3 = v2;

  uint64_t v4 = Double.seconds.getter(v3);
  uint64_t v5 = sub_25F6A53F8(v4);
  uint64_t v7 = v6;
  fmod(v3, 1.0);
  uint64_t v8 = sub_25F70F690();
  return MEMORY[0x2611FC230](v5, v7, v8, v9);
}

void sub_25F692A04(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_25F686110();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    unint64_t v11 = v1 & 0xC000000000000001;
    unint64_t v4 = v1;
    while (v2 != v3)
    {
      if (v11) {
        MEMORY[0x2611FBA70](v3, v1);
      }
      else {
        swift_retain();
      }
      CoreRuleRecord.id.getter();
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      swift_release();
      unint64_t v9 = *(void *)(v12 + 16);
      if (v9 >= *(void *)(v12 + 24) >> 1) {
        sub_25F686110();
      }
      ++v3;
      *(void *)(v12 + 16) = v9 + 1;
      uint64_t v10 = v12 + 16 * v9;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v8;
      unint64_t v1 = v4;
      if (v2 == v3) {
        return;
      }
    }
    __break(1u);
LABEL_15:
    sub_25F70E570();
    uint64_t v2 = sub_25F70F100();
    swift_bridgeObjectRelease();
  }
}

uint64_t static String.empty.getter()
{
  return 0;
}

unint64_t static String.tipsNextGroupIdentifier.getter()
{
  return 0xD000000000000018;
}

void sub_25F692BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
}

uint64_t sub_25F692BBC()
{
  sub_25F67629C();
  sub_25F678604();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_25F674E18(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_25F657548;
  uint64_t v3 = sub_25F67E5FC();
  return v4(v3);
}

uint64_t sub_25F692C54()
{
  sub_25F67629C();
  sub_25F678604();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_25F674E18(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F67E5FC();
  return v4(v3);
}

uint64_t sub_25F692CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F692D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F692DBC(char a1, uint64_t a2, uint64_t a3)
{
  if (a3 == 1) {
    return sub_25F70E320();
  }
  if (a3)
  {
    if (qword_26A7B1120 != -1) {
      swift_once();
    }
    if (sub_25F651AB0(a2, a3, (void *)qword_26A7BB350)) {
      return MEMORY[0x2611FAEB0](a2, a3);
    }
    if ((a1 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else if ((a1 & 1) == 0)
  {
    return sub_25F70E320();
  }
  if (qword_26A7B1120 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26A7BB350;
  uint64_t v8 = *(void *)(qword_26A7BB350 + 16);
  if (!v8)
  {
LABEL_19:
    sub_25F6931C0();
    swift_allocError();
    *int64_t v14 = 0xD000000000000027;
    v14[1] = 0x800000025F71BC00;
    return swift_willThrow();
  }
  swift_bridgeObjectRetain_n();
  unint64_t v9 = (uint64_t *)(v7 + 40);
  do
  {
    uint64_t v11 = *(v9 - 1);
    uint64_t v10 = *v9;
    sub_25F70E570();
    if (sub_25F70E7D0())
    {
      swift_bridgeObjectRelease_n();
      MEMORY[0x2611FAEB0](v11, v10);
      return swift_bridgeObjectRelease();
    }
    v9 += 2;
    swift_bridgeObjectRelease();
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease_n();
  if (!*(void *)(qword_26A7BB350 + 16)) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(qword_26A7BB350 + 32);
  uint64_t v13 = *(void *)(qword_26A7BB350 + 40);
  sub_25F70E570();
  MEMORY[0x2611FAEB0](v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F692FC4()
{
  return sub_25F652638();
}

uint64_t sub_25F69300C()
{
  return sub_25F652F64((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

uint64_t sub_25F693054@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F656248(*(void *)(v1 + 16), a1);
}

uint64_t sub_25F69305C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_25F6870E8(a1, a2, a3, a4, a5, a6, a7, a8, &qword_26B39D0B8, &qword_26B39CEB0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_25F65E75C);
}

uint64_t sub_25F6930A8()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E0B0);
  sub_25F692530(v0, qword_26B39D9B8);
  sub_25F67F3A4(v0, (uint64_t)qword_26B39D9B8);
  return sub_25F70E000();
}

uint64_t sub_25F69311C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_25F687824(a2, a3, *a1);
  return v3 & 1;
}

uint64_t sub_25F693158@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25F693178(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_25F693178@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F69311C(a1, *a2, a2[1]);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

unint64_t sub_25F6931C0()
{
  unint64_t result = qword_26B39C308[0];
  if (!qword_26B39C308[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B39C308);
  }
  return result;
}

uint64_t TipsError.description.getter()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t sub_25F69323C()
{
  uint64_t result = os_variant_allows_internal_security_policies();
  word_26B39DFA8 = 0;
  byte_26B39DFAA = 0;
  byte_26B39DFAB = result;
  byte_26B39DFAC = 0;
  return result;
}

uint64_t sub_25F693270()
{
  uint64_t v0 = type metadata accessor for logger();
  sub_25F692530(v0, qword_26B39C280);
  *(unsigned char *)sub_25F679F58() = 4;
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F682CA4();
  if (v1) {
    sub_25F68EF50();
  }
  sub_25F6796C0();
  return sub_25F675CB8();
}

uint64_t sub_25F693320()
{
  sub_25F67CE90();
  uint64_t v2 = v1();
  v0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t static logger.log(_:_:)()
{
  return sub_25F693320();
}

uint64_t (*static logger.tipKit.read())()
{
  if (qword_26B39D9D8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for logger();
  sub_25F67804C(v0, (uint64_t)qword_26B39DA80);
  return nullsub_1;
}

uint64_t type metadata accessor for TipsdUbiquitousStore()
{
  return self;
}

uint64_t sub_25F69344C()
{
  type metadata accessor for TipsdUbiquitousStore();
  swift_allocObject();
  uint64_t result = sub_25F65305C();
  qword_26B3A3018 = result;
  return result;
}

void sub_25F693488()
{
  sub_25F654AE8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_25F693544(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 48) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 56) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_25F6FA844;
  return sub_25F6935EC(a1, a2);
}

uint64_t sub_25F6935EC(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  return MEMORY[0x270FA2498](sub_25F65B9C0, v2, 0);
}

BOOL MiniTipsDatastore.hasConfigured.getter()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v0 - 8, v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F660200((uint64_t)v3);
  uint64_t v4 = sub_25F70DE50();
  BOOL v5 = sub_25F67D9DC((uint64_t)v3, 1, v4) != 1;
  sub_25F675D8C((uint64_t)v3, &qword_26B39E248);
  return v5;
}

uint64_t sub_25F6936BC(uint64_t a1)
{
  type metadata accessor for MiniTipsDatastore();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25F691BBC;
  return sub_25F653BA4(a1);
}

uint64_t sub_25F693760()
{
  sub_25F67629C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F674E18(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  return sub_25F693804();
}

uint64_t sub_25F693804()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25F691BBC;
  return sub_25F693E60();
}

uint64_t sub_25F6938B8()
{
  sub_25F67629C();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_25F674E18(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_25F6F94DC;
  return sub_25F693958(v1, v2, v3);
}

uint64_t sub_25F693958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  if (a1)
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v3[3] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_25F6F8F18;
    return sub_25F693544(a2, a3);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))v3[1];
    return v8(1);
  }
}

uint64_t sub_25F693A44(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA23E0](v2 + 656, a2, sub_25F6F8D2C, v2 + 1936);
}

uint64_t type metadata accessor for MiniTipsDatastore.DatastoreQueue()
{
  uint64_t result = qword_26B39E268;
  if (!qword_26B39E268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_25F693AA8()
{
  unint64_t result = qword_26B39E0D0;
  if (!qword_26B39E0D0)
  {
    type metadata accessor for MiniTipsDatastore.DatastoreQueue();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39E0D0);
  }
  return result;
}

uint64_t sub_25F693AF8()
{
  sub_25F67629C();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  v0[2] = v0;
  v0[3] = sub_25F64F984;
  uint64_t v4 = swift_continuation_init();
  sub_25F655DB8(v4, v1, v3, v2, 65, (uint64_t)&unk_270BB6390, (uint64_t)&unk_26A7B1700);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25F693BC0()
{
  sub_25F6759E0();
  swift_continuation_resume();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F693C18(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a3;
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_25F64FA4C;
  return v7();
}

uint64_t sub_25F693CF4()
{
  sub_25F672A80();
  sub_25F675A98();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F67CFC4();
  return v4(v3);
}

uint64_t sub_25F693D98(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v8 = *a2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_25F691BBC;
  return sub_25F693C18(a1, v8, a3, a4);
}

uint64_t sub_25F693E60()
{
  sub_25F6759E0();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  uint64_t v5 = sub_25F67ACD8(&qword_26B39DF30);
  v1[9] = v5;
  v1[10] = *(void *)(v5 - 8);
  v1[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6579E0, v0, 0);
}

uint64_t sub_25F693F24(uint64_t a1)
{
  return sub_25F67CE88(a1, 57, 0x800000025F71AF70, &qword_26B3A3010);
}

uint64_t sub_25F693F44(uint64_t a1, uint64_t a2)
{
  if (!sub_25F69405C())
  {
    long long v6 = 0u;
    long long v7 = 0u;
    goto LABEL_8;
  }
  sub_25F70E570();
  sub_25F685FA4(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1))
  {
LABEL_8:
    sub_25F67EFC0((uint64_t)&v6, &qword_26B39E0A8);
    return 0;
  }
  sub_25F67ACD8(&qword_26B39D030);
  if (swift_dynamicCast())
  {
    sub_25F685FA4(1701080941, 0xE400000000000000);
    swift_bridgeObjectRelease();
    if (swift_dynamicCast()) {
      return v5;
    }
  }
  return 0;
}

uint64_t sub_25F69405C()
{
  uint64_t result = sub_25F6611B0(0xD000000000000030, 0x800000025F71B060, &qword_26B39DE08, 0x263EFF930, &qword_26B39D030);
  if (!result) {
    return result;
  }
  sub_25F6F5B40();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
    return sub_25F69908C(v5);
  }
  sub_25F70E570();
  uint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  long long v6 = &qword_26B39D030;
  uint64_t v34 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    uint64_t v7 = *(void *)(v2 + 8 * v4 + 32);
    if (!*(void *)(v7 + 16)) {
      goto LABEL_24;
    }
    sub_25F70E570();
    unint64_t v8 = sub_25F67AD88(0x736D6165727453, 0xE700000000000000);
    if ((v9 & 1) == 0
      || (sub_25F67AD2C(*(void *)(v7 + 56) + 32 * v8, (uint64_t)v36), sub_25F67ACD8(v6), (swift_dynamicCast() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    uint64_t v17 = v6;
    sub_25F6EACB4(v35, v10, v11, v12, v13, v14, v15, v16, v31, v32, v33, v34, v35, v36[0], v36[1], v36[2], v36[3], v36[4], v36[5],
      v36[6],
      v36[7],
      v36[8],
      v36[9],
      v36[10],
      v36[11],
      v36[12]);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_25F6F5DDC(v19);
    swift_release();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = *(void *)(v5 + 16);
    if (__OFADD__(v22, v21)) {
      break;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(void *)(v5 + 24) >> 1)
    {
      sub_25F6BE2D0();
      uint64_t v5 = v23;
    }
    if (*(void *)(v20 + 16))
    {
      uint64_t v24 = *(void *)(v5 + 16);
      if ((*(void *)(v5 + 24) >> 1) - v24 < v21) {
        goto LABEL_31;
      }
      uint64_t v25 = v5;
      unint64_t v26 = v5 + 48 * v24 + 32;
      if (v20 + 32 < v26 + 48 * v21 && v26 < v20 + 32 + 48 * v21) {
        goto LABEL_33;
      }
      sub_25F67ACD8(&qword_26A7B1258);
      swift_arrayInitWithCopy();
      uint64_t v5 = v25;
      if (v21)
      {
        uint64_t v28 = *(void *)(v25 + 16);
        BOOL v29 = __OFADD__(v28, v21);
        uint64_t v30 = v28 + v21;
        if (v29) {
          goto LABEL_32;
        }
        *(void *)(v25 + 16) = v30;
      }
    }
    else if (v21)
    {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v6 = v17;
LABEL_24:
    if (v3 == ++v4)
    {
      swift_bridgeObjectRelease_n();
      return sub_25F69908C(v5);
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F694334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_25F6611B0(a2, a3, &qword_26B39D5E8, 0x263EFF8C0, &qword_26B39DE00);
  if (v5 && (uint64_t v6 = sub_25F659548(v5), result = swift_bridgeObjectRelease(), v6))
  {
    *a4 = v6;
  }
  else
  {
    *a4 = MEMORY[0x263F8EE78];
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F6943D4()
{
  uint64_t result = sub_25F660E78(0xD000000000000017, 0x800000025F71AFF0);
  byte_26B3A2FD8 = result & 1;
  return result;
}

uint64_t sub_25F694410(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39E280);
}

uint64_t sub_25F69441C(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39D430);
}

uint64_t sub_25F694428(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39CA48);
}

uint64_t sub_25F694434(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39DBA0);
}

uint64_t sub_25F694444(uint64_t a1)
{
  return sub_25F694460(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25F694460(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_25F6550AC(a1, *a2, a2[1], a3);
}

id sub_25F694484(id *a1)
{
  return sub_25F6944A0(a1, *(void ***)(v1 + 16));
}

id sub_25F6944A0(id *a1, void **a2)
{
  return sub_25F6503C8(a1, *a2);
}

uint64_t sub_25F6944BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39E258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F694524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeviceProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_25F694588()
{
  unint64_t result = qword_26B39D1E0;
  if (!qword_26B39D1E0)
  {
    sub_25F682580(&qword_26B39D590);
    sub_25F662D34(&qword_26B39CFE8, (void (*)(uint64_t))type metadata accessor for DeviceProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D1E0);
  }
  return result;
}

uint64_t sub_25F69462C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceProfile.init(from:)(a1, a2);
}

unsigned char *_s8UserTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_25F694710()
{
  return sub_25F70E8E0();
}

unint64_t sub_25F694770()
{
  unint64_t result = qword_26B39D1D8;
  if (!qword_26B39D1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D1D8);
  }
  return result;
}

unint64_t sub_25F6947BC()
{
  unint64_t result = qword_26B39D1D0;
  if (!qword_26B39D1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D1D0);
  }
  return result;
}

uint64_t sub_25F694808()
{
  return sub_25F70E8E0();
}

unint64_t sub_25F694868()
{
  unint64_t result = qword_26B39CFE0;
  if (!qword_26B39CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFE0);
  }
  return result;
}

unint64_t sub_25F6948B4()
{
  unint64_t result = qword_26B39CFD8;
  if (!qword_26B39CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFD8);
  }
  return result;
}

uint64_t sub_25F694900(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_25F657548;
  return sub_25F6949B4(a1, v4, v5, v6);
}

uint64_t sub_25F6949B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x270FA2498](sub_25F652AD0, 0, 0);
}

ValueMetadata *type metadata accessor for DeviceProfile.CodingKeys()
{
  return &type metadata for DeviceProfile.CodingKeys;
}

unint64_t sub_25F6949EC()
{
  unint64_t result = qword_26B39CFD0;
  if (!qword_26B39CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFD0);
  }
  return result;
}

unint64_t sub_25F694A38()
{
  unint64_t result = qword_26B39CFC8;
  if (!qword_26B39CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFC8);
  }
  return result;
}

unint64_t sub_25F694A84()
{
  unint64_t result = qword_26B39CFC0;
  if (!qword_26B39CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFC0);
  }
  return result;
}

void Configuration.usesAppleDisplayFrequency.setter(char a1)
{
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67C9F4();
  if (v3) {
    *(unsigned char *)(v1 + 48) = a1 & 1;
  }
}

uint64_t Configuration.displayFrequencyDuration.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a2;
  return result;
}

void Configuration.usesCoreAnalytics.setter(char a1)
{
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67C9F4();
  if (v3) {
    *(unsigned char *)(v1 + 49) = a1 & 1;
  }
}

uint64_t sub_25F694B9C()
{
  return sub_25F67AF7C(&qword_26B39DD18, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_25F694BE4()
{
  return sub_25F67AF7C(&qword_26B39DD20, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_25F694C2C()
{
  return sub_25F67AF7C(&qword_26B39DD10, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_25F694C74()
{
  return sub_25F67AF7C(&qword_26B39DD00, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
}

uint64_t sub_25F694CBC()
{
  return sub_25F65E368();
}

uint64_t CoreTip.__deallocating_deinit()
{
  CoreTip.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t CoreTip.options.getter()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  sub_25F67A2DC(v0 + 4, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
}

uint64_t CoreTip.Options.usesConstellation.getter()
{
  return *(unsigned __int8 *)(v0 + 42);
}

uint64_t CoreTip.Status.description.getter()
{
  if (*v0 == 2)
  {
    sub_25F70EEC0();
    sub_25F672B3C();
    sub_25F70E790();
    sub_25F672B3C();
    sub_25F70E790();
  }
  else
  {
    sub_25F70F070();
  }
  return 0;
}

uint64_t CoreTip.ConstellationContent.title.getter()
{
  return sub_25F67E878();
}

unint64_t sub_25F694EB4()
{
  unint64_t result = qword_26B39CFB8;
  if (!qword_26B39CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFB8);
  }
  return result;
}

unint64_t sub_25F694F00()
{
  unint64_t result = qword_26B39CFB0;
  if (!qword_26B39CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CFB0);
  }
  return result;
}

unint64_t sub_25F694F54()
{
  unint64_t result = qword_26B39CB28;
  if (!qword_26B39CB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CB28);
  }
  return result;
}

unint64_t sub_25F694FA0()
{
  unint64_t result = qword_26B39CB20;
  if (!qword_26B39CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CB20);
  }
  return result;
}

uint64_t sub_25F694FEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  __int16 v6 = *(_WORD *)(v1 + 40);
  uint64_t v7 = swift_task_alloc();
  unint64_t v8 = (void *)sub_25F6765EC(v7);
  *unint64_t v8 = v9;
  v8[1] = sub_25F657548;
  return sub_25F651300(a1, v3, v4, v5, v6);
}

uint64_t sub_25F6950A8(uint64_t a1)
{
  return sub_25F68CACC(a1, (uint64_t)&type metadata for CoreTip.InvalidationReason, &qword_26B39DA60, &qword_26B39DAE8, &qword_26B3A3050);
}

ValueMetadata *_s19IneligibilityReasonOMa()
{
  return &_s19IneligibilityReasonON;
}

unint64_t sub_25F6950DC()
{
  unint64_t result = qword_26B39CF98;
  if (!qword_26B39CF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF98);
  }
  return result;
}

void sub_25F695128()
{
  sub_25F650E18();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_25F6951D4()
{
  unint64_t result = qword_26B39CAA0;
  if (!qword_26B39CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CAA0);
  }
  return result;
}

unint64_t sub_25F695220()
{
  unint64_t result = qword_26B39CA98;
  if (!qword_26B39CA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CA98);
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText()
{
}

unint64_t sub_25F695278()
{
  unint64_t result = qword_26B39CF70;
  if (!qword_26B39CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF70);
  }
  return result;
}

unint64_t sub_25F6952C4()
{
  unint64_t result = qword_26B39CE30;
  if (!qword_26B39CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CE30);
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.Mark()
{
}

unint64_t sub_25F69531C()
{
  unint64_t result = qword_26B39CF68;
  if (!qword_26B39CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF68);
  }
  return result;
}

unint64_t sub_25F695368()
{
  unint64_t result = qword_26B39CE28;
  if (!qword_26B39CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CE28);
  }
  return result;
}

unint64_t sub_25F6953BC()
{
  unint64_t result = qword_26B39CF50;
  if (!qword_26B39CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF50);
  }
  return result;
}

unint64_t sub_25F695408()
{
  unint64_t result = qword_26B39CF48;
  if (!qword_26B39CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CF48);
  }
  return result;
}

uint64_t sub_25F695454(uint64_t a1)
{
  return sub_25F68CACC(a1, (uint64_t)&type metadata for CoreTip.Status, &qword_26B39DB48, &qword_26B39DB80, &qword_26B3A3058);
}

uint64_t sub_25F695478(uint64_t a1)
{
  return sub_25F68CACC(a1, (uint64_t)&type metadata for CoreTip.DisplayState, &qword_26B39D3C8, &qword_26B39D3D8, &qword_26B3A3020);
}

uint64_t sub_25F69549C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25F6DE144);
}

uint64_t sub_25F6954B0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_25F674D1C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_25F695508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  return MEMORY[0x270FA2498](sub_25F669548, 0, 0);
}

uint64_t CoreEvent.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 16);
  swift_unownedRelease();
  return MEMORY[0x270FA0228](v0, 64, 7);
}

uint64_t sub_25F695570()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_25F695664(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25F695570;
  return sub_25F695700(a1, v1 + 16);
}

uint64_t sub_25F695700(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  sub_25F67ACD8(&qword_26B39DF68);
  v2[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F651E8C, 0, 0);
}

uint64_t CoreEvent.__allocating_init(_:datastore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CoreEvent.init(_:datastore:)(a1, a2);
  return v4;
}

uint64_t static CoreEvent.events.getter()
{
  return sub_25F66038C(&qword_26B39CAB0);
}

uint64_t CoreEvent.donate()()
{
  sub_25F6759E0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25F691BBC;
  return CoreEvent.donate(donationInfo:)(0);
}

uint64_t sub_25F695894()
{
  sub_25F672A80();
  sub_25F675A98();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F657548;
  uint64_t v3 = sub_25F67CFC4();
  return sub_25F69592C(v3, v4, v5, v6, v7);
}

uint64_t sub_25F69592C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  sub_25F67ACD8(&qword_26B39DF68);
  v5[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F652D10, 0, 0);
}

uint64_t sub_25F6959C4()
{
  sub_25F6759EC();
  return v0();
}

unint64_t sub_25F6959E4()
{
  unint64_t result = qword_26B39D530;
  if (!qword_26B39D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D530);
  }
  return result;
}

unint64_t sub_25F695A30()
{
  unint64_t result = qword_26B39D528;
  if (!qword_26B39D528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D528);
  }
  return result;
}

unint64_t sub_25F695A84()
{
  unint64_t result = qword_26B39D520;
  if (!qword_26B39D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D520);
  }
  return result;
}

unint64_t sub_25F695AD0()
{
  unint64_t result = qword_26B39D518;
  if (!qword_26B39D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D518);
  }
  return result;
}

unint64_t sub_25F695B24()
{
  unint64_t result = qword_26B39D510;
  if (!qword_26B39D510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D510);
  }
  return result;
}

unint64_t sub_25F695B70()
{
  unint64_t result = qword_26B39D508;
  if (!qword_26B39D508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D508);
  }
  return result;
}

unint64_t sub_25F695BC4()
{
  unint64_t result = qword_26B39D500;
  if (!qword_26B39D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D500);
  }
  return result;
}

unint64_t sub_25F695C10()
{
  unint64_t result = qword_26B39D4F8;
  if (!qword_26B39D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Query()
{
  return &type metadata for CoreRule.Predicate.Query;
}

unint64_t sub_25F695C6C()
{
  unint64_t result = qword_26B39D4E8;
  if (!qword_26B39D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4E8);
  }
  return result;
}

unint64_t sub_25F695CB8()
{
  unint64_t result = qword_26B39D4E0;
  if (!qword_26B39D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Predicate.Subpredicate()
{
  return &type metadata for CoreRule.Predicate.Subpredicate;
}

unint64_t sub_25F695D14()
{
  unint64_t result = qword_26B39D4D8;
  if (!qword_26B39D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4D8);
  }
  return result;
}

unint64_t sub_25F695D60()
{
  unint64_t result = qword_26B39D4D0;
  if (!qword_26B39D4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4D0);
  }
  return result;
}

unint64_t sub_25F695DB4()
{
  unint64_t result = qword_26B39D4C8;
  if (!qword_26B39D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4C8);
  }
  return result;
}

unint64_t sub_25F695E00()
{
  unint64_t result = qword_26B39D4C0;
  if (!qword_26B39D4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D4C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Status()
{
  return &type metadata for CoreRule.Status;
}

void sub_25F695E5C()
{
  dword_26B3A3040 = 0;
  qword_26B3A3048 = MEMORY[0x263F8EE88];
}

unint64_t sub_25F695E78()
{
  return sub_25F67B208((uint64_t)&unk_26B39DCC0);
}

unint64_t sub_25F695EC0()
{
  return sub_25F67B208((uint64_t)&unk_26B39DCC8);
}

unint64_t sub_25F695F08()
{
  return sub_25F67B208((uint64_t)&unk_26B39DCB8);
}

unint64_t sub_25F695F50()
{
  return sub_25F67B208((uint64_t)&unk_26B39DCA8);
}

uint64_t sub_25F695F98()
{
  return sub_25F67130C(&qword_26B39DC80, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
}

uint64_t (*sub_25F695FE4(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6961A4;
}

uint64_t sub_25F696060()
{
  return sub_25F67130C(&qword_26B39DC88, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
}

uint64_t sub_25F6960A8()
{
  return sub_25F67130C(&qword_26B39DC78, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
}

uint64_t sub_25F6960F0()
{
  return sub_25F67130C(&qword_26B39DC68, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
}

uint64_t sub_25F696138()
{
  return sub_25F651B78();
}

uint64_t CoreDonationRecord.event.setter(uint64_t a1)
{
  return sub_25F656174(a1, (uint64_t)&unk_25F7129B8, (uint64_t)sub_25F696138, MEMORY[0x263F8EED8]);
}

uint64_t sub_25F696188()
{
  return sub_25F651C50();
}

uint64_t sub_25F6961A8()
{
  return sub_25F650328();
}

uint64_t CoreDonationRecord.donationInfo.setter(uint64_t a1)
{
  return sub_25F656174(a1, (uint64_t)&unk_25F7129E0, (uint64_t)sub_25F6961A8, MEMORY[0x263F8EEA0]);
}

uint64_t sub_25F6961F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  unint64_t v5 = sub_25F6740CC((uint64_t)&qword_26B39DC30);
  return MEMORY[0x270EFE8F0](v3, v4, v2, v5);
}

unint64_t sub_25F696278()
{
  return sub_25F6740CC((uint64_t)&unk_26B39DC40);
}

unint64_t sub_25F6962C0()
{
  return sub_25F6740CC((uint64_t)&unk_26B39DC48);
}

unint64_t sub_25F696308()
{
  return sub_25F6740CC((uint64_t)&unk_26B39DC38);
}

unint64_t sub_25F696350()
{
  return sub_25F6740CC((uint64_t)&unk_26B39DC28);
}

uint64_t sub_25F69639C@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F65C5E4(a1);
}

uint64_t sub_25F6963B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6963C4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_25F6963C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9 = *a1;
  type metadata accessor for CoreEventRecord();
  return sub_25F65AD6C(v9, a2, a3, a4, a5);
}

uint64_t sub_25F69642C()
{
  return sub_25F67B1C0(&qword_26B39DC00, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

uint64_t sub_25F696474()
{
  return sub_25F64FB14();
}

uint64_t sub_25F696490()
{
  return sub_25F67B1C0(&qword_26B39DC08, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

uint64_t sub_25F6964D8()
{
  return sub_25F67B1C0(&qword_26B39DBF8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

uint64_t sub_25F696520()
{
  return sub_25F67B1C0(&qword_26B39DBE8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
}

void CoreRuleRecord.status.setter()
{
}

void sub_25F696570()
{
}

uint64_t sub_25F696598@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CoreRuleRecord.status.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6965C4()
{
  return sub_25F662008(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_25F714F30, &qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
}

void sub_25F696618()
{
}

uint64_t sub_25F69664C()
{
  return sub_25F6899D4();
}

void sub_25F696688()
{
}

uint64_t sub_25F6966BC()
{
  return sub_25F65077C();
}

uint64_t sub_25F6966DC()
{
  return sub_25F65DDAC();
}

void CoreRuleRecord.statusValue.setter()
{
}

uint64_t sub_25F696724()
{
  return sub_25F650290(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_25F696734()
{
  uint64_t v0 = sub_25F655B44();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = sub_25F70E570();
  }
  else
  {
    uint64_t v1 = 0;
    uint64_t v2 = 0;
  }
  qword_26B3A2FC8 = v1;
  qword_26B3A2FD0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F696794(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67B2C0(a1, a2, a3);
  sub_25F674D1C();
  uint64_t v4 = sub_25F674E58();
  v5(v4);
  return v3;
}

uint64_t sub_25F6967DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6967F8(a1);
}

uint64_t sub_25F6967F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F70DE60();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_25F696824(uint64_t a1)
{
  return sub_25F696854(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_25F69682C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25F696854(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t static URL.applicationSupportDirectoryForCurrentUser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25F6513A0(a1);
}

Swift::Bool __swiftcall URL.createDirectory(using:)(NSFileManager using)
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  if (sub_25F665184()) {
    return 1;
  }
  uint64_t v2 = (void *)sub_25F70DDA0();
  v8[0] = 0;
  unsigned int v3 = [(objc_class *)using.super.isa createDirectoryAtURL:v2 withIntermediateDirectories:1 attributes:0 error:v8];

  if (v3)
  {
    id v4 = v8[0];
    return 1;
  }
  id v6 = v8[0];
  uint64_t v7 = (void *)sub_25F70DD20();

  swift_willThrow();
  return 0;
}

unint64_t sub_25F696974()
{
  unint64_t result = qword_26B39D958;
  if (!qword_26B39D958)
  {
    sub_25F682580(&qword_26B39D968);
    sub_25F65B938((uint64_t)&unk_26B39D918);
    sub_25F653948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D958);
  }
  return result;
}

unint64_t sub_25F696A00()
{
  unint64_t result = qword_26B39D948;
  if (!qword_26B39D948)
  {
    sub_25F682580(&qword_26B39D890);
    sub_25F65B938((uint64_t)&unk_26B39D918);
    sub_25F682540((uint64_t)&unk_26B39D8A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D948);
  }
  return result;
}

unint64_t sub_25F696AB0()
{
  unint64_t result = qword_26B39D410;
  if (!qword_26B39D410)
  {
    sub_25F682580(&qword_26B39D488);
    sub_25F682540((uint64_t)&qword_26B39D7C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D410);
  }
  return result;
}

unint64_t sub_25F696B48()
{
  unint64_t result = qword_26B39D2E0;
  if (!qword_26B39D2E0)
  {
    sub_25F682580(&qword_26B39D2F0);
    sub_25F681778(&qword_26B39D2F8, &qword_26B39D308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D2E0);
  }
  return result;
}

unint64_t sub_25F696BE0()
{
  unint64_t result = qword_26B39CEC8;
  if (!qword_26B39CEC8)
  {
    sub_25F682580(&qword_26B39CED8);
    sub_25F681778(&qword_26B39CEE0, &qword_26B39CEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CEC8);
  }
  return result;
}

unint64_t sub_25F696C78()
{
  unint64_t result = qword_26B39D468;
  if (!qword_26B39D468)
  {
    sub_25F682580(&qword_26B39D478);
    sub_25F681778(&qword_26B39D490, &qword_26B39D4A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D468);
  }
  return result;
}

unint64_t sub_25F696D10()
{
  unint64_t result = qword_26B39D900;
  if (!qword_26B39D900)
  {
    sub_25F682580(&qword_26B39D910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D900);
  }
  return result;
}

unint64_t sub_25F696D84()
{
  unint64_t result = qword_26B39D7B0;
  if (!qword_26B39D7B0)
  {
    sub_25F682580(&qword_26B39D7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D7B0);
  }
  return result;
}

unint64_t sub_25F696DF8()
{
  unint64_t result = qword_26B39D8E8;
  if (!qword_26B39D8E8)
  {
    sub_25F682580(&qword_26B39D8F8);
    sub_25F65B938((uint64_t)&unk_26B39D930);
    sub_25F696D10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D8E8);
  }
  return result;
}

unint64_t sub_25F696E84()
{
  unint64_t result = qword_26B39CEB8;
  if (!qword_26B39CEB8)
  {
    sub_25F682580(&qword_26B39CEC0);
    sub_25F696BE0();
    sub_25F696D84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CEB8);
  }
  return result;
}

unint64_t sub_25F696F00()
{
  unint64_t result = qword_26B39CB60;
  if (!qword_26B39CB60)
  {
    sub_25F682580(&qword_26B39CB68);
    sub_25F68F0DC((unint64_t *)&qword_26B39CB70, &qword_26B39CB80, &qword_26B39CEE0, &qword_26B39CEF0);
    sub_25F68F170();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CB60);
  }
  return result;
}

unint64_t sub_25F696F9C()
{
  unint64_t result = qword_26B39CAF0;
  if (!qword_26B39CAF0)
  {
    sub_25F682580(&qword_26B39CB00);
    sub_25F65099C();
    sub_25F653948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CAF0);
  }
  return result;
}

unint64_t sub_25F697018()
{
  unint64_t result = qword_26B39C2E0;
  if (!qword_26B39C2E0)
  {
    sub_25F682580(&qword_26B39C2B0);
    sub_25F6508E0();
    sub_25F653948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C2E0);
  }
  return result;
}

unint64_t sub_25F697094()
{
  unint64_t result = qword_26B39CBA8;
  if (!qword_26B39CBA8)
  {
    sub_25F682580(&qword_26B39CBB8);
    sub_25F655698();
    sub_25F650A58((uint64_t)&qword_26B39D468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CBA8);
  }
  return result;
}

unint64_t sub_25F697130()
{
  return sub_25F6825C8((uint64_t)&unk_26B39D8C0);
}

unint64_t sub_25F69716C()
{
  unint64_t result = qword_26B39C2B8;
  if (!qword_26B39C2B8)
  {
    sub_25F682580(&qword_26B39C2C0);
    sub_25F697094();
    sub_25F697018();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C2B8);
  }
  return result;
}

_OWORD *sub_25F6971E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_25F67C9A8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15, v16);
  uint64_t v18 = (char *)&v22 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - v17, a1, v12);
  if (sub_25F67D9DC((uint64_t)v18, 1, a2) == 1)
  {
    uint64_t v23 = MEMORY[0x263F8D310];
    *(void *)&long long v22 = 0x3E6C6C756E3CLL;
    *((void *)&v22 + 1) = 0xE600000000000000;
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v11, v18, a2);
    uint64_t v23 = a2;
    uint64_t v20 = sub_25F677CCC((uint64_t *)&v22);
    v19((char *)v20, v11, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v12);
  return sub_25F67AD1C(&v22, a3);
}

uint64_t sub_25F69738C()
{
  sub_25F67AD2C((uint64_t)v0, (uint64_t)v10);
  if (swift_dynamicCast())
  {
    memset(v9, 0, 32);
    sub_25F67ACD8(&qword_26B39E0A8);
    uint64_t v1 = sub_25F70E6E0();
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B1250);
    if (swift_dynamicCast())
    {
      sub_25F675D18(v9, (uint64_t)v8);
      sub_25F67A2DC(v8, v8[3]);
      uint64_t v1 = sub_25F70F2C0();
      sub_25F67A28C((uint64_t)v8);
    }
    else
    {
      sub_25F67A2DC(v0, v0[3]);
      sub_25F67C9A8();
      MEMORY[0x270FA5388](v2, v3);
      (*(void (**)(char *))(v5 + 16))((char *)&v8[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v1 = sub_25F70E6E0();
    }
  }
  sub_25F67A28C((uint64_t)v10);
  return v1;
}

uint64_t sub_25F697524()
{
  sub_25F67AD2C(v0, (uint64_t)v4);
  sub_25F67ACD8(&qword_26A7B1230);
  if (swift_dynamicCast())
  {
    sub_25F675D18(&v3, (uint64_t)v2);
    sub_25F67A2DC(v2, v2[3]);
    sub_25F70F340();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    *(void *)&long long v3 = 0x6261646F43796E41;
    *((void *)&v3 + 1) = 0xEB0000000028656CLL;
    sub_25F69738C();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
  }
  sub_25F67A28C((uint64_t)v4);
  return 0x6261646F43796E41;
}

uint64_t sub_25F69764C()
{
  sub_25F70F5C0();
  sub_25F6985F8((uint64_t)v1, &qword_26B39D020, (void (*)(uint64_t))sub_25F69D58C, &qword_26A7B0E78, (void (*)(uint64_t))sub_25F69D070);
  return sub_25F70F620();
}

uint64_t sub_25F6976C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67A2DC(a1, a1[3]);
  sub_25F68C5E8();
  sub_25F70F630();
  if (!v2)
  {
    uint64_t v5 = v12;
    sub_25F67A2DC(v10, v11);
    if (sub_25F70F3B0())
    {
      unint64_t v6 = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9D0]), sel_init);
      uint64_t v7 = sub_25F67ACD8(&qword_26A7B1288);
      unint64_t v8 = v6 & 0xFFFFFFFFFFFFFF00;
    }
    else
    {
      uint64_t v5 = v12;
      sub_25F67A2DC(v10, v11);
      sub_25F68C5E8();
      LOBYTE(v6) = sub_25F70F360() & 1;
      uint64_t v7 = sub_25F67ACD8(&qword_26B39D5E0);
      unint64_t v8 = 0;
    }
    sub_25F67A28C((uint64_t)v10);
    *(void *)a2 = v8 | v6;
    *(unsigned char *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 15) = BYTE6(v5);
    *(_WORD *)(a2 + 13) = WORD2(v5);
    *(_DWORD *)(a2 + 9) = v5;
    *(void *)(a2 + 24) = v7;
  }
  return sub_25F67A28C((uint64_t)a1);
}

uint64_t sub_25F697B50(void *a1)
{
  uint64_t v38 = sub_25F70DE50();
  sub_25F67C9A8();
  uint64_t v36 = v3;
  uint64_t v6 = MEMORY[0x270FA5388](v4, v5);
  uint64_t v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = sub_25F70DF30();
  sub_25F67C9A8();
  uint64_t v37 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15, v18);
  uint64_t v20 = (char *)&v35 - v19;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F70F650();
  sub_25F67AD2C(v1, (uint64_t)v42);
  sub_25F67A8F8(0, &qword_26B39D370);
  if (!sub_25F677E24())
  {
    if (swift_dynamicCast()) {
      goto LABEL_4;
    }
    sub_25F67ACD8(&qword_26B39D368);
    if (sub_25F677E24())
    {
      sub_25F675D18(&v41, (uint64_t)v39);
      sub_25F67A2DC(v39, v39[3]);
      sub_25F676848();
      sub_25F70E620();
      sub_25F67A28C((uint64_t)v39);
    }
    else if (sub_25F677E24())
    {
      sub_25F676270();
      sub_25F6765BC();
      sub_25F70F3E0();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F676848();
      sub_25F70F410();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F67D58C();
      sub_25F70F440();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F67D58C();
      sub_25F70F450();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F6765BC();
      sub_25F70F460();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F676848();
      sub_25F70F470();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F676848();
      sub_25F70F420();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F67D58C();
      sub_25F70F480();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F67D58C();
      sub_25F70F490();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F6765BC();
      sub_25F70F4A0();
    }
    else if (sub_25F67C988())
    {
      sub_25F676270();
      sub_25F676848();
      sub_25F70F4B0();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F674F00();
      sub_25F70F400();
    }
    else if (sub_25F67C988())
    {
      sub_25F679D98();
      sub_25F674F00();
      sub_25F70F3F0();
    }
    else
    {
      if (sub_25F67C988())
      {
        sub_25F68D918((uint64_t)v43, v44);
        sub_25F70F3D0();
      }
      else
      {
        if (swift_dynamicCast())
        {
          (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v17, v20, v11);
          sub_25F679D98();
          sub_25F66BDE0(&qword_26B39DB00, MEMORY[0x263F07490]);
          sub_25F70F430();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v11);
          goto LABEL_33;
        }
        if (swift_dynamicCast())
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v10, v38);
          sub_25F679D98();
          sub_25F66BDE0(&qword_26B39D310, MEMORY[0x263F06EA8]);
          sub_25F70F430();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v38);
          goto LABEL_33;
        }
        sub_25F67A8F8(0, (unint64_t *)&qword_26B39CDA8);
        if (sub_25F67C988())
        {
          long long v22 = (void *)v41;
          sub_25F698B54((void *)v41, v43);

          goto LABEL_33;
        }
        sub_25F67ACD8(&qword_26A7B11C0);
        if (sub_25F67C988())
        {
          sub_25F69917C(v41);
          uint64_t v24 = sub_25F6990CC(v23, &qword_26A7B1200, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25F69C2D8);
          swift_bridgeObjectRelease();
          v39[0] = v24;
          sub_25F679D98();
          sub_25F67ACD8(&qword_26A7B11F0);
          sub_25F69CE44();
        }
        else
        {
          sub_25F67ACD8(&qword_26A7B11C8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v32 = sub_25F70EF40();
            swift_allocError();
            uint64_t v34 = v33;
            sub_25F67ACD8(&qword_26A7B11D0);
            sub_25F67AD2C(v1, v34);
            sub_25F67A2DC(v43, v44);
            sub_25F70F3C0();
            sub_25F70EF10();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCE0], v32);
            swift_willThrow();
            goto LABEL_33;
          }
          uint64_t v38 = v39[0];
          uint64_t v25 = *(void *)(v39[0] + 16);
          if (v25)
          {
            uint64_t v40 = MEMORY[0x263F8EE78];
            sub_25F6D27BC();
            uint64_t v26 = v40;
            uint64_t v27 = v38 + 32;
            do
            {
              uint64_t v28 = sub_25F67ACD8(&qword_26B39E0A8);
              uint64_t v29 = swift_allocObject();
              sub_25F675D30(v27, v29 + 16, &qword_26B39E0A8);
              uint64_t v40 = v26;
              unint64_t v30 = *(void *)(v26 + 16);
              if (v30 >= *(void *)(v26 + 24) >> 1)
              {
                sub_25F6D27BC();
                uint64_t v26 = v40;
              }
              *(void *)(v26 + 16) = v30 + 1;
              uint64_t v31 = v26 + 32 * v30;
              *(void *)(v31 + 32) = v29;
              *(_OWORD *)(v31 + 40) = v41;
              *(void *)(v31 + 56) = v28;
              v27 += 32;
              --v25;
            }
            while (v25);
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = MEMORY[0x263F8EE78];
          }
          *(void *)&long long v41 = v26;
          sub_25F679D98();
          sub_25F67ACD8(&qword_26A7B11D8);
          sub_25F69D8C4(&qword_26A7B11E0, &qword_26A7B11D8, (void (*)(void))sub_25F69CDF8);
        }
        sub_25F70F430();
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_25F67A28C((uint64_t)v42);
    return sub_25F67A28C((uint64_t)v43);
  }

LABEL_4:
  sub_25F67A28C((uint64_t)v42);
  sub_25F679D98();
  sub_25F674F00();
  sub_25F70F4C0();
  return sub_25F67A28C((uint64_t)v43);
}

uint64_t sub_25F698530(uint64_t a1)
{
  return sub_25F6985F8(a1, &qword_26B39D020, (void (*)(uint64_t))sub_25F69D58C, &qword_26A7B0E78, (void (*)(uint64_t))sub_25F69D070);
}

uint64_t sub_25F698580(uint64_t a1)
{
  return sub_25F6985F8(a1, &qword_26A7B11F0, (void (*)(uint64_t))sub_25F69D0AC, &qword_26A7B11D8, (void (*)(uint64_t))sub_25F69CF70);
}

uint64_t sub_25F6985BC(uint64_t a1)
{
  return sub_25F6985F8(a1, &qword_26A7B0E48, (void (*)(uint64_t))sub_25F69D31C, &qword_26A7B1050, (void (*)(uint64_t))sub_25F69CFAC);
}

uint64_t sub_25F6985F8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v10 = v5;
  sub_25F67AD2C(v10, (uint64_t)v13);
  if (sub_25F67CEE4()) {
    goto LABEL_5;
  }
  if (sub_25F67CEE4())
  {
LABEL_3:
    sub_25F70F5D0();
    return sub_25F67A28C((uint64_t)v13);
  }
  if (sub_25F67CEE4())
  {
LABEL_5:
    sub_25F70F5E0();
    return sub_25F67A28C((uint64_t)v13);
  }
  if (sub_25F67CEE4())
  {
LABEL_8:
    sub_25F70F5F0();
    return sub_25F67A28C((uint64_t)v13);
  }
  if (sub_25F67CEE4())
  {
LABEL_10:
    sub_25F70F600();
    return sub_25F67A28C((uint64_t)v13);
  }
  if (sub_25F67CEE4()) {
    goto LABEL_12;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_3;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_5;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_8;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_10;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_12;
  }
  if (sub_25F67CEE4()) {
    goto LABEL_10;
  }
  if (sub_25F67CEE4())
  {
LABEL_12:
    sub_25F70F610();
    return sub_25F67A28C((uint64_t)v13);
  }
  if (sub_25F67CEE4())
  {
    sub_25F70E740();
  }
  else
  {
    sub_25F67ACD8(a2);
    if (sub_25F672BB0())
    {
      a3(a1);
    }
    else
    {
      sub_25F67ACD8(a4);
      if (!sub_25F672BB0()) {
        return sub_25F67A28C((uint64_t)v13);
      }
      a5(a1);
    }
  }
  swift_bridgeObjectRelease();
  return sub_25F67A28C((uint64_t)v13);
}

uint64_t sub_25F698838()
{
  sub_25F70F5C0();
  sub_25F6985F8((uint64_t)v1, &qword_26B39D020, (void (*)(uint64_t))sub_25F69D58C, &qword_26A7B0E78, (void (*)(uint64_t))sub_25F69D070);
  return sub_25F70F620();
}

uint64_t sub_25F6988B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_25F67ACD8(&qword_26B39DE00);
  a2[3] = result;
  *a2 = a1;
  return result;
}

uint64_t sub_25F6988E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_25F67ACD8(&qword_26A7B1278);
  a2[3] = result;
  *a2 = a1;
  return result;
}

uint64_t sub_25F698920@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F698928(*a1, a2);
}

uint64_t sub_25F698928@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 24) = MEMORY[0x263F8D4F8];
  *(unsigned char *)a2 = result;
  return result;
}

uint64_t sub_25F69893C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25F67ACD8(&qword_26B39D5E0);
  *(void *)(a2 + 24) = result;
  *(unsigned char *)a2 = a1;
  return result;
}

uint64_t sub_25F698978@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_25F6994B4(a1);
  uint64_t result = sub_25F67ACD8(&qword_26B39DDF8);
  a2[3] = result;
  *a2 = v3;
  return result;
}

uint64_t sub_25F6989C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_25F6994B4(a1);
  uint64_t result = sub_25F67ACD8(&qword_26A7B12B0);
  a2[3] = result;
  *a2 = v3;
  return result;
}

void sub_25F698A18(double *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_25F698A20(uint64_t a1@<X8>, double a2@<D0>)
{
  *(void *)(a1 + 24) = MEMORY[0x263F8D538];
  *(double *)a1 = a2;
}

uint64_t sub_25F698A34@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t result = sub_25F67ACD8(&qword_26B39C200);
  *(void *)(a1 + 24) = result;
  *(double *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_25F698A78@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25F698A80(*a1, a2);
}

uint64_t sub_25F698A80@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  a2[3] = MEMORY[0x263F8D6C8];
  *a2 = result;
  return result;
}

uint64_t sub_25F698A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25F67ACD8(&qword_26B39D2A8);
  *(void *)(a2 + 24) = result;
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_25F698AD0(void *a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9FA58](*a1, a1[1], a2, a3);
}

uint64_t sub_25F698AEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_25F698AFC(*a1, a1[1], a2);
}

uint64_t sub_25F698AFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = MEMORY[0x263F8D310];
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_25F698B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_25F67ACD8(&qword_26B39DA98);
  a3[3] = result;
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_25F698B54(void *a1, void *a2)
{
  id v3 = a1;
  int v4 = *(char *)objc_msgSend(v3, sel_objCType);
  if (v4 < 0)
  {
    uint64_t result = sub_25F70F0D0();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v4;
    uint64_t v5 = MEMORY[0x2611FB2B0](&v28, 1);
    BOOL v7 = v5 == 66 && v6 == 0xE100000000000000;
    if (v7 || (v8 = v5, uint64_t v9 = v6, (sub_25F67E65C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_BOOLValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F3E0();
    }
    BOOL v11 = v8 == 99 && v9 == 0xE100000000000000;
    if (v11 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_charValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F440();
    }
    BOOL v12 = v8 == 115 && v9 == 0xE100000000000000;
    if (v12 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_shortValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F450();
    }
    BOOL v13 = v8 == 105 && v9 == 0xE100000000000000;
    if (v13
      || (sub_25F67E65C() & 1) != 0
      || (v8 == 108 ? (BOOL v14 = v9 == 0xE100000000000000) : (BOOL v14 = 0), v14 || (sub_25F67E65C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_intValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F460();
    }
    BOOL v15 = v8 == 113 && v9 == 0xE100000000000000;
    if (v15 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_longLongValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F470();
    }
    BOOL v16 = v8 == 67 && v9 == 0xE100000000000000;
    if (v16 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_unsignedCharValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F480();
    }
    BOOL v17 = v8 == 83 && v9 == 0xE100000000000000;
    if (v17 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_unsignedShortValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F490();
    }
    BOOL v18 = v8 == 73 && v9 == 0xE100000000000000;
    if (v18
      || (sub_25F67E65C() & 1) != 0
      || (v8 == 76 ? (BOOL v19 = v9 == 0xE100000000000000) : (BOOL v19 = 0), v19 || (sub_25F67E65C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_unsignedIntValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F4A0();
    }
    BOOL v20 = v8 == 81 && v9 == 0xE100000000000000;
    if (v20 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_unsignedLongLongValue);
      sub_25F675974();
      sub_25F679244();
      return sub_25F70F4B0();
    }
    BOOL v21 = v8 == 102 && v9 == 0xE100000000000000;
    if (v21 || (sub_25F67E65C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_floatValue);
      sub_25F68D918((uint64_t)a2, a2[3]);
      sub_25F67B0FC();
      return sub_25F70F400();
    }
    if (v8 == 100 && v9 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_25F67E65C();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        uint64_t v24 = sub_25F70EF40();
        swift_allocError();
        uint64_t v26 = v25;
        sub_25F67ACD8(&qword_26A7B11D0);
        v26[3] = sub_25F67A8F8(0, (unint64_t *)&qword_26B39CDA8);
        *uint64_t v26 = v3;
        sub_25F67A2DC(a2, a2[3]);
        id v27 = v3;
        sub_25F70F3C0();
        sub_25F70EF10();
        (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x263F8DCE0], v24);
        return swift_willThrow();
      }
    }
    objc_msgSend(v3, sel_doubleValue);
    sub_25F68D918((uint64_t)a2, a2[3]);
    sub_25F67B0FC();
    return sub_25F70F3F0();
  }
  return result;
}

uint64_t sub_25F69908C(uint64_t a1)
{
  return sub_25F6990CC(a1, &qword_26B39D860, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25F69C7F0);
}

uint64_t sub_25F6990AC(uint64_t a1)
{
  return sub_25F6990CC(a1, &qword_26B39CE10, (void (*)(uint64_t, uint64_t, uint64_t *))sub_25F69CAE4);
}

uint64_t sub_25F6990CC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  if (*(void *)(a1 + 16))
  {
    sub_25F67ACD8(a2);
    uint64_t v4 = sub_25F70F130();
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE80];
  }
  uint64_t v7 = v4;
  uint64_t v5 = sub_25F70E570();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

void sub_25F69917C(uint64_t a1)
{
  sub_25F69DA1C(a1, v31);
  uint64_t v1 = v31[0];
  int64_t v2 = v31[3];
  unint64_t v3 = v31[4];
  uint64_t v19 = v31[1];
  int64_t v20 = (unint64_t)(v31[2] + 64) >> 6;
  uint64_t v32 = &__src[40];
  sub_25F70E570();
  uint64_t v4 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v3)
    {
      unint64_t v5 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v6 = v5 | (v2 << 6);
      goto LABEL_20;
    }
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v7 >= v20) {
      goto LABEL_29;
    }
    unint64_t v8 = *(void *)(v19 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v20) {
        goto LABEL_29;
      }
      unint64_t v8 = *(void *)(v19 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v20) {
          goto LABEL_29;
        }
        unint64_t v8 = *(void *)(v19 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 4;
          if (v2 + 4 >= v20) {
            goto LABEL_29;
          }
          unint64_t v8 = *(void *)(v19 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 5;
            if (v2 + 5 >= v20) {
              goto LABEL_29;
            }
            unint64_t v8 = *(void *)(v19 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v2 + 6;
              while (v10 < v20)
              {
                unint64_t v8 = *(void *)(v19 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_19;
                }
              }
LABEL_29:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v3 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v2 = v9;
LABEL_20:
    sub_25F664A80(*(void *)(v1 + 48) + 40 * v6, (uint64_t)__src);
    sub_25F675D30(*(void *)(v1 + 56) + 32 * v6, (uint64_t)v32, &qword_26B39E0A8);
    memcpy(__dst, __src, sizeof(__dst));
    sub_25F70EE50();
    if (!swift_dynamicCast())
    {
      uint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_25F70EE50();
      sub_25F67A2DC(&v21, *((uint64_t *)&v22 + 1));
      sub_25F70F2F0();
      sub_25F67A28C((uint64_t)&v21);
    }
    uint64_t v11 = v24;
    unint64_t v12 = v25;
    *((void *)&v28 + 1) = sub_25F67ACD8(&qword_26B39E0A8);
    *(void *)&long long v27 = swift_allocObject();
    sub_25F675D30((uint64_t)&__dst[40], v27 + 16, &qword_26B39E0A8);
    *(void *)&long long v26 = v11;
    *((void *)&v26 + 1) = v12;
    sub_25F675D8C((uint64_t)__dst, &qword_26A7B1218);
    if (*((void *)&v26 + 1))
    {
      long long v21 = v26;
      long long v22 = v27;
      long long v23 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F6BE1EC();
        uint64_t v4 = v17;
      }
      unint64_t v13 = *(void *)(v4 + 16);
      if (v13 >= *(void *)(v4 + 24) >> 1)
      {
        sub_25F6BE1EC();
        uint64_t v4 = v18;
      }
      *(void *)(v4 + 16) = v13 + 1;
      BOOL v14 = (_OWORD *)(v4 + 48 * v13);
      long long v15 = v21;
      long long v16 = v23;
      v14[3] = v22;
      void v14[4] = v16;
      _OWORD v14[2] = v15;
    }
    else
    {
      sub_25F675D8C((uint64_t)&v26, &qword_26A7B1220);
    }
  }
  __break(1u);
}

uint64_t sub_25F6994B4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_25F67ACD8(&qword_26B39CA00);
    uint64_t v3 = sub_25F70F130();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE80];
  }
  uint64_t v6 = v3;
  sub_25F69C5CC(a1, 1, &v6);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

id default argument 0 of Configuration.setup(userDefaults:)()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  return v0;
}

uint64_t default argument 5 of static PersistentModel.compactMap<A>(in:batchSize:fetchLimit:fetchOffset:includePendingChanges:relationshipPaths:propertiesToFetch:sortBy:resetsContext:_:_:)()
{
  return sub_25F699864();
}

uint64_t default argument 2 of static PersistentModel.getOrCreate(in:includePendingChanges:relationshipPaths:sortBy:_:_:)()
{
  sub_25F67B24C();
  sub_25F70EF80();
  sub_25F67B24C();
  return sub_25F70E980();
}

uint64_t _ss17FixedWidthIntegerP10TipKitCoreE9increment2byyx_tFfA__0()
{
  swift_getAssociatedTypeWitness();
  sub_25F674D1C();
  MEMORY[0x270FA5388](v0, v1);
  swift_getAssociatedConformanceWitness();
  sub_25F70F4F0();
  return sub_25F70F310();
}

uint64_t default argument 1 of MiniTipsDatastore.init(id:bundleID:)()
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v0 = qword_26B39E3E0;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v0 = qword_26B3A3078;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v1 = sub_25F6A3C40();
      if (v2) {
        uint64_t v0 = v1;
      }
      else {
        uint64_t v0 = 0;
      }
    }
    sub_25F70E570();
  }
  sub_25F70E570();
  return v0;
}

uint64_t default argument 6 of static PersistentModel.compactMap<A>(in:batchSize:fetchLimit:fetchOffset:includePendingChanges:relationshipPaths:propertiesToFetch:sortBy:resetsContext:_:_:)()
{
  return sub_25F699864();
}

uint64_t default argument 7 of static PersistentModel.compactMap<A>(in:batchSize:fetchLimit:fetchOffset:includePendingChanges:relationshipPaths:propertiesToFetch:sortBy:resetsContext:_:_:)()
{
  return sub_25F699864();
}

uint64_t sub_25F699864()
{
  uint64_t v0 = sub_25F67B24C();
  v1(v0);
  sub_25F67B24C();
  return sub_25F70E980();
}

uint64_t default argument 3 of static PersistentModel.get(in:includePendingChanges:relationshipPaths:sortBy:_:)()
{
  sub_25F67B24C();
  sub_25F70DB30();
  sub_25F67B24C();
  return sub_25F70E980();
}

uint64_t sub_25F6998D0(uint64_t a1, id *a2)
{
  uint64_t result = sub_25F70E6A0();
  *a2 = 0;
  return result;
}

uint64_t sub_25F699948(uint64_t a1, id *a2)
{
  char v3 = sub_25F70E6B0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25F6999C8()
{
  sub_25F70E6C0();
  uint64_t v0 = sub_25F70E690();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25F699A00()
{
  return sub_25F699B9C(*v0, MEMORY[0x263F07B58]);
}

uint64_t sub_25F699A38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6999C8();
  *a1 = result;
  return result;
}

uint64_t sub_25F699A60()
{
  return sub_25F6CC108();
}

uint64_t sub_25F699A6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25F70E690();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25F699AB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6D517C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25F699AE0(uint64_t a1)
{
  uint64_t v2 = sub_25F66BDE0(&qword_26A7B1290, type metadata accessor for NSValueTransformerName);
  uint64_t v3 = sub_25F66BDE0(&qword_26A7B1298, type metadata accessor for NSValueTransformerName);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_25F699B9C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_25F70E6C0();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25F699BDC()
{
  sub_25F70E6C0();
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F699C30()
{
  sub_25F70E6C0();
  sub_25F70F5C0();
  sub_25F70E740();
  uint64_t v0 = sub_25F70F620();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25F699CA4()
{
  return sub_25F699B9C(*v0, MEMORY[0x263F8D308]);
}

uint64_t sub_25F699CD4()
{
  return sub_25F699BDC();
}

uint64_t sub_25F699CDC()
{
  return sub_25F699C30();
}

unint64_t sub_25F699CE4(char a1)
{
  sub_25F70F5C0();
  sub_25F6A31E0(a1);
  sub_25F70E740();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25F70F620();
  return sub_25F699DD8(a1, v2);
}

unint64_t sub_25F699D6C(uint64_t a1)
{
  sub_25F70F5C0();
  sub_25F69DA54();
  uint64_t v2 = sub_25F70F620();
  return sub_25F69A4DC(a1, v2);
}

unint64_t sub_25F699DD8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xE900000000000044;
      unint64_t v8 = 0x495F656C646E7562;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x697463656C6C6F63;
          uint64_t v9 = 0x44495F6E6FLL;
          goto LABEL_36;
        case 2:
          int64_t v10 = "bundle_ID";
          goto LABEL_16;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x747865746E6F63;
          break;
        case 4:
          int64_t v10 = "collections_viewed";
          goto LABEL_16;
        case 5:
          unint64_t v8 = 0xD000000000000015;
          uint64_t v11 = "tip_correlation_ID";
          goto LABEL_29;
        case 6:
          unint64_t v8 = 0x5F7373696D736964;
          goto LABEL_12;
        case 7:
          unint64_t v7 = 0xED0000746E756F63;
          unint64_t v8 = 0x5F79616C70736964;
          break;
        case 8:
          unint64_t v8 = 0x5F79616C70736964;
LABEL_12:
          unint64_t v7 = 0xEC00000065707974;
          break;
        case 9:
          unint64_t v7 = 0xE500000000000000;
          unint64_t v8 = 0x726F727265;
          break;
        case 0xA:
          unint64_t v7 = 0xEA0000000000746ELL;
          goto LABEL_18;
        case 0xB:
          int64_t v10 = "";
LABEL_16:
          unint64_t v7 = (unint64_t)v10 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 0xC:
          unint64_t v7 = 0xED000044495F746ELL;
LABEL_18:
          unint64_t v8 = 0x656D697265707865;
          break;
        case 0xD:
          unint64_t v8 = 0xD000000000000010;
          uint64_t v11 = "ID";
          goto LABEL_29;
        case 0xE:
          unint64_t v8 = 0xD000000000000015;
          uint64_t v11 = "first_shown_date";
          goto LABEL_29;
        case 0xF:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x6C72755F6B6E696CLL;
          break;
        case 0x10:
          unint64_t v8 = 0xD000000000000010;
          uint64_t v11 = "ml_notification_model";
          goto LABEL_29;
        case 0x11:
          unint64_t v8 = 0xD000000000000019;
          uint64_t v11 = "override_holdout";
          goto LABEL_29;
        case 0x12:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x6E6F73616572;
          break;
        case 0x13:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x44495F656C7572;
          break;
        case 0x14:
          unint64_t v8 = 0x5F65636976726573;
          uint64_t v9 = 0x726F727265;
          goto LABEL_36;
        case 0x15:
          unint64_t v8 = 0xD000000000000017;
          uint64_t v11 = "";
          goto LABEL_29;
        case 0x16:
          unint64_t v8 = 0xD000000000000011;
          uint64_t v11 = "time_to_desired_outcome";
LABEL_29:
          unint64_t v7 = (unint64_t)v11 | 0x8000000000000000;
          break;
        case 0x17:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x44495F706974;
          break;
        case 0x18:
          unint64_t v8 = 0x6569765F73706974;
          uint64_t v12 = 6579575;
          goto LABEL_34;
        case 0x19:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x67616C665F353675;
          break;
        case 0x1A:
          unint64_t v8 = 0x6C665F6567617375;
          uint64_t v12 = 7563105;
LABEL_34:
          unint64_t v7 = v12 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0x1B:
          unint64_t v8 = 0x65765F73656C7572;
          uint64_t v9 = 0x6E6F697372;
LABEL_36:
          unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        default:
          break;
      }
      unint64_t v13 = 0x495F656C646E7562;
      unint64_t v14 = 0xE900000000000044;
      switch(a1)
      {
        case 1:
          unint64_t v13 = 0x697463656C6C6F63;
          uint64_t v15 = 0x44495F6E6FLL;
          goto LABEL_70;
        case 2:
          long long v16 = "bundle_ID";
          goto LABEL_50;
        case 3:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v13 = 0x747865746E6F63;
          break;
        case 4:
          long long v16 = "collections_viewed";
          goto LABEL_50;
        case 5:
          unint64_t v13 = 0xD000000000000015;
          uint64_t v17 = "tip_correlation_ID";
          goto LABEL_63;
        case 6:
          unint64_t v13 = 0x5F7373696D736964;
          goto LABEL_46;
        case 7:
          unint64_t v14 = 0xED0000746E756F63;
          unint64_t v13 = 0x5F79616C70736964;
          break;
        case 8:
          unint64_t v13 = 0x5F79616C70736964;
LABEL_46:
          unint64_t v14 = 0xEC00000065707974;
          break;
        case 9:
          unint64_t v14 = 0xE500000000000000;
          unint64_t v13 = 0x726F727265;
          break;
        case 10:
          unint64_t v14 = 0xEA0000000000746ELL;
          goto LABEL_52;
        case 11:
          long long v16 = "";
LABEL_50:
          unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
          unint64_t v13 = 0xD000000000000012;
          break;
        case 12:
          unint64_t v14 = 0xED000044495F746ELL;
LABEL_52:
          unint64_t v13 = 0x656D697265707865;
          break;
        case 13:
          unint64_t v13 = 0xD000000000000010;
          uint64_t v17 = "ID";
          goto LABEL_63;
        case 14:
          unint64_t v13 = 0xD000000000000015;
          uint64_t v17 = "first_shown_date";
          goto LABEL_63;
        case 15:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v13 = 0x6C72755F6B6E696CLL;
          break;
        case 16:
          unint64_t v13 = 0xD000000000000010;
          uint64_t v17 = "ml_notification_model";
          goto LABEL_63;
        case 17:
          unint64_t v13 = 0xD000000000000019;
          uint64_t v17 = "override_holdout";
          goto LABEL_63;
        case 18:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v13 = 0x6E6F73616572;
          break;
        case 19:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v13 = 0x44495F656C7572;
          break;
        case 20:
          unint64_t v13 = 0x5F65636976726573;
          uint64_t v15 = 0x726F727265;
          goto LABEL_70;
        case 21:
          unint64_t v13 = 0xD000000000000017;
          uint64_t v17 = "";
          goto LABEL_63;
        case 22:
          unint64_t v13 = 0xD000000000000011;
          uint64_t v17 = "time_to_desired_outcome";
LABEL_63:
          unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
          break;
        case 23:
          unint64_t v14 = 0xE600000000000000;
          unint64_t v13 = 0x44495F706974;
          break;
        case 24:
          unint64_t v13 = 0x6569765F73706974;
          uint64_t v18 = 6579575;
          goto LABEL_68;
        case 25:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v13 = 0x67616C665F353675;
          break;
        case 26:
          unint64_t v13 = 0x6C665F6567617375;
          uint64_t v18 = 7563105;
LABEL_68:
          unint64_t v14 = v18 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 27:
          unint64_t v13 = 0x65765F73656C7572;
          uint64_t v15 = 0x6E6F697372;
LABEL_70:
          unint64_t v14 = v15 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          break;
        default:
          break;
      }
      if (v8 == v13 && v7 == v14) {
        break;
      }
      char v20 = sub_25F70F330();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_25F69A4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_25F675D30(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v17, &qword_26B39CD28);
      sub_25F675D30((uint64_t)v17, (uint64_t)v12, &qword_26B39CD28);
      sub_25F675D30(a1, (uint64_t)&v14, &qword_26B39CD28);
      if (v13)
      {
        sub_25F675D30((uint64_t)v12, (uint64_t)v11, &qword_26B39CD28);
        if (*((void *)&v15 + 1))
        {
          v9[0] = v14;
          v9[1] = v15;
          uint64_t v10 = v16;
          char v7 = MEMORY[0x2611FB9C0](v11, v9);
          sub_25F664A2C((uint64_t)v9);
          sub_25F664A2C((uint64_t)v11);
          sub_25F675D8C((uint64_t)v12, &qword_26B39CD28);
          sub_25F675D8C((uint64_t)v17, &qword_26B39CD28);
          if (v7) {
            return v4;
          }
          goto LABEL_11;
        }
        sub_25F664A2C((uint64_t)v11);
      }
      else if (!*((void *)&v15 + 1))
      {
        sub_25F675D8C((uint64_t)v12, &qword_26B39CD28);
        sub_25F675D8C((uint64_t)v17, &qword_26B39CD28);
        return v4;
      }
      sub_25F675D8C((uint64_t)v12, &qword_26A7B1248);
      sub_25F675D8C((uint64_t)v17, &qword_26B39CD28);
LABEL_11:
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

void type metadata accessor for CFBundle(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for AnyCodable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t *assignWithCopy for AnyCodable(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *sub_25F69A6F8(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *assignWithTake for AnyCodable(_OWORD *a1, _OWORD *a2)
{
  sub_25F67A28C((uint64_t)a1);
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t sub_25F69A954()
{
  return MEMORY[0x263F8D390];
}

unint64_t sub_25F69A964()
{
  unint64_t result = qword_26A7B1158;
  if (!qword_26A7B1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1158);
  }
  return result;
}

uint64_t sub_25F69A9B0()
{
  return MEMORY[0x263F8D398];
}

unint64_t sub_25F69A9C0()
{
  unint64_t result = qword_26A7B1160;
  if (!qword_26A7B1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1160);
  }
  return result;
}

uint64_t sub_25F69AA0C()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_25F69AA1C()
{
  unint64_t result = qword_26A7B1168;
  if (!qword_26A7B1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1168);
  }
  return result;
}

uint64_t sub_25F69AA68()
{
  return MEMORY[0x263F8E240];
}

uint64_t sub_25F69AA74()
{
  return MEMORY[0x263F8D748];
}

uint64_t sub_25F69AA80()
{
  return MEMORY[0x263F8D5B0];
}

uint64_t sub_25F69AA8C()
{
  return MEMORY[0x263F8D528];
}

unint64_t sub_25F69AA9C()
{
  unint64_t result = qword_26A7B1170;
  if (!qword_26A7B1170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1170);
  }
  return result;
}

uint64_t sub_25F69AAE8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25F69ABB0(a1, a2, a3, (uint64_t (*)(void))sub_25F67EB40);
}

unint64_t sub_25F69AB00()
{
  unint64_t result = qword_26A7B1178;
  if (!qword_26A7B1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1178);
  }
  return result;
}

unint64_t sub_25F69AB4C()
{
  unint64_t result = qword_26A7B1180;
  if (!qword_26A7B1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1180);
  }
  return result;
}

uint64_t sub_25F69AB98(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_25F69ABB0(a1, a2, a3, (uint64_t (*)(void))sub_25F676BB8);
}

uint64_t sub_25F69ABB0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  a1[1] = sub_25F69AB00();
  a1[2] = sub_25F69AB4C();
  uint64_t result = a4();
  a1[3] = result;
  return result;
}

unint64_t sub_25F69ABF0(void *a1)
{
  a1[1] = sub_25F69AC40();
  a1[2] = sub_25F69AC8C();
  a1[3] = sub_25F69ACD8();
  a1[4] = sub_25F69AD24();
  a1[5] = sub_25F69AD70();
  unint64_t result = sub_25F69ADBC();
  a1[6] = result;
  return result;
}

unint64_t sub_25F69AC40()
{
  unint64_t result = qword_26A7B1188;
  if (!qword_26A7B1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1188);
  }
  return result;
}

unint64_t sub_25F69AC8C()
{
  unint64_t result = qword_26A7B1190;
  if (!qword_26A7B1190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1190);
  }
  return result;
}

unint64_t sub_25F69ACD8()
{
  unint64_t result = qword_26A7B1198;
  if (!qword_26A7B1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1198);
  }
  return result;
}

unint64_t sub_25F69AD24()
{
  unint64_t result = qword_26A7B11A0;
  if (!qword_26A7B11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11A0);
  }
  return result;
}

unint64_t sub_25F69AD70()
{
  unint64_t result = qword_26A7B11A8;
  if (!qword_26A7B11A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11A8);
  }
  return result;
}

unint64_t sub_25F69ADBC()
{
  unint64_t result = qword_26A7B11B0;
  if (!qword_26A7B11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11B0);
  }
  return result;
}

unint64_t sub_25F69AE08(uint64_t a1)
{
  unint64_t result = sub_25F69AE30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F69AE30()
{
  unint64_t result = qword_26A7B11B8;
  if (!qword_26A7B11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11B8);
  }
  return result;
}

unint64_t sub_25F69AE7C(uint64_t a1)
{
  unint64_t result = sub_25F69AA9C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F69AEA4(uint64_t a1)
{
  sub_25F67ACD8(&qword_26B39D860);
  uint64_t result = sub_25F70F110();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_25F69D930(*(void *)(a1 + 56) + 32 * i, (uint64_t)v24);
    sub_25F67AD2C((uint64_t)v24, (uint64_t)v23);
    sub_25F70E570();
    sub_25F69D98C((uint64_t)v24);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v18;
    v19[1] = v17;
    uint64_t result = (uint64_t)sub_25F67AD1C(v23, (_OWORD *)(v3[7] + 32 * i));
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_25F69B0A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25F67ACD8(&qword_26A7B1200);
  uint64_t v6 = sub_25F70F120();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = (long long *)(*(void *)(v5 + 56) + 32 * i);
      if (a2)
      {
        long long v23 = v22[1];
        long long v38 = *v22;
        long long v39 = v23;
      }
      else
      {
        sub_25F69CF14((uint64_t)v22, (uint64_t)&v38);
        sub_25F70E570();
      }
      sub_25F70F5C0();
      sub_25F70E740();
      uint64_t result = sub_25F70F620();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = (void *)(*(void *)(v7 + 48) + 16 * v27);
      *uint64_t v32 = v21;
      v32[1] = v20;
      uint64_t v33 = (_OWORD *)(*(void *)(v7 + 56) + 32 * v27);
      long long v34 = v39;
      *uint64_t v33 = v38;
      v33[1] = v34;
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v36) {
        goto LABEL_33;
      }
      unint64_t v17 = v37[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v36) {
          goto LABEL_33;
        }
        unint64_t v17 = v37[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v36)
          {
LABEL_33:
            swift_release();
            uint64_t v3 = v2;
            if (a2)
            {
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                sub_25F69C2BC(0, (unint64_t)(v35 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v35;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v37[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_41;
              }
              if (v13 >= v36) {
                goto LABEL_33;
              }
              unint64_t v17 = v37[v13];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_18:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25F69B3A0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25F67ACD8(&qword_26B39CA00);
  uint64_t v6 = sub_25F70F120();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = v5 + 64;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      uint64_t v21 = *(void *)(v5 + 48) + 40 * i;
      if (a2)
      {
        long long v22 = *(_OWORD *)v21;
        long long v23 = *(_OWORD *)(v21 + 16);
        uint64_t v40 = *(void *)(v21 + 32);
        long long v38 = v22;
        long long v39 = v23;
        sub_25F67AD1C((_OWORD *)(*(void *)(v5 + 56) + 32 * i), v37);
      }
      else
      {
        sub_25F664A80(v21, (uint64_t)&v38);
        sub_25F67AD2C(*(void *)(v5 + 56) + 32 * i, (uint64_t)v37);
      }
      uint64_t result = sub_25F70EE30();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          BOOL v30 = v26 == v29;
          if (v26 == v29) {
            unint64_t v26 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v26);
          if (v31 != -1)
          {
            unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      uint64_t v32 = *(void *)(v7 + 48) + 40 * v27;
      long long v33 = v38;
      long long v34 = v39;
      *(void *)(v32 + 32) = v40;
      *(_OWORD *)uint64_t v32 = v33;
      *(_OWORD *)(v32 + 16) = v34;
      uint64_t result = (uint64_t)sub_25F67AD1C(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v27));
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_42;
      }
      if (v17 >= v11) {
        break;
      }
      int64_t v18 = (void *)(v5 + 64);
      unint64_t v19 = *(void *)(v36 + 8 * v17);
      ++v14;
      if (!v19)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v36 + 8 * v14);
        if (!v19)
        {
          int64_t v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_33:
            swift_release();
            if ((a2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }
          unint64_t v19 = *(void *)(v36 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v14 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_43;
              }
              if (v14 >= v11) {
                goto LABEL_33;
              }
              unint64_t v19 = *(void *)(v36 + 8 * v14);
              ++v20;
              if (v19) {
                goto LABEL_18;
              }
            }
          }
          int64_t v14 = v20;
        }
      }
LABEL_18:
      unint64_t v10 = (v19 - 1) & v19;
    }
    swift_release();
    int64_t v18 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    if (v35 >= 64) {
      sub_25F69C2BC(0, (unint64_t)(v35 + 63) >> 6, v18);
    }
    else {
      *int64_t v18 = -1 << v35;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25F69B6B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25F67ACD8(&qword_26B39D860);
  uint64_t v6 = sub_25F70F120();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      long long v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * i);
      if (a2)
      {
        sub_25F67AD1C(v22, v35);
      }
      else
      {
        sub_25F67AD2C((uint64_t)v22, (uint64_t)v35);
        sub_25F70E570();
      }
      sub_25F70F5C0();
      sub_25F70E740();
      uint64_t result = sub_25F70F620();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          BOOL v29 = v25 == v28;
          if (v25 == v28) {
            unint64_t v25 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      uint64_t v31 = (void *)(*(void *)(v7 + 48) + 16 * v26);
      *uint64_t v31 = v21;
      v31[1] = v20;
      uint64_t result = (uint64_t)sub_25F67AD1C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v26));
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v16 >= v33) {
        goto LABEL_33;
      }
      unint64_t v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v17 = v34[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            uint64_t v3 = v2;
            if (a2)
            {
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                sub_25F69C2BC(0, (unint64_t)(v32 + 63) >> 6, v34);
              }
              else {
                *long long v34 = -1 << v32;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_41;
              }
              if (v13 >= v33) {
                goto LABEL_33;
              }
              unint64_t v17 = v34[v13];
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_18:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_25F69B9B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_25F67ACD8(&qword_26B39CE10);
  char v38 = a2;
  uint64_t v6 = sub_25F70F120();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * i);
    if ((v38 & 1) == 0)
    {
      sub_25F70E570();
      id v24 = v23;
    }
    sub_25F70F5C0();
    sub_25F70E740();
    uint64_t result = sub_25F70F620();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    int64_t v33 = (void *)(*(void *)(v7 + 48) + 16 * v28);
    *int64_t v33 = v22;
    v33[1] = v21;
    *(void *)(*(void *)(v7 + 56) + 8 * v28) = v23;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v36)
    {
      swift_release();
      uint64_t v3 = v35;
      unint64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v37 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v37 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v36)
  {
    unint64_t v18 = *(void *)(v37 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v36) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v37 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v35;
LABEL_34:
  if (v38)
  {
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    if (v34 >= 64) {
      sub_25F69C2BC(0, (unint64_t)(v34 + 63) >> 6, v17);
    }
    else {
      *unint64_t v17 = -1 << v34;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_25F69BCB0(uint64_t a1, char a2)
{
  int64_t v4 = v2;
  sub_25F678444();
  sub_25F67ACD8(&qword_26B39CE08);
  uint64_t v6 = sub_25F70F120();
  if (v3[2])
  {
    sub_25F682D04();
    uint64_t v34 = v9;
    if (v7 < 64) {
      uint64_t v10 = ~(-1 << v7);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v8;
    uint64_t v32 = v2;
    int64_t v33 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    swift_retain();
    int64_t v13 = 0;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
    {
      char v20 = *(unsigned char *)(v3[6] + i);
      uint64_t v21 = (long long *)(v3[7] + 40 * i);
      if (a2) {
        sub_25F675D18(v21, (uint64_t)v35);
      }
      else {
        sub_25F67B010((uint64_t)v21, (uint64_t)v35);
      }
      sub_25F70F5C0();
      sub_25F6A31E0(v20);
      sub_25F70E740();
      swift_bridgeObjectRelease();
      unint64_t v22 = sub_25F70F620() & ~(-1 << *(unsigned char *)(v6 + 32));
      if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
      {
        sub_25F6729F0();
        while (++v25 != v26 || (v24 & 1) == 0)
        {
          BOOL v27 = v25 == v26;
          if (v25 == v26) {
            uint64_t v25 = 0;
          }
          v24 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v25);
          if (v28 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v28)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(unsigned char *)(*(void *)(v6 + 48) + v23) = v20;
      sub_25F675D18(v35, *(void *)(v6 + 56) + 40 * v23);
      ++*(void *)(v6 + 16);
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_42;
      }
      if (v16 >= v33) {
        break;
      }
      unint64_t v17 = v34;
      unint64_t v18 = v34[v16];
      ++v13;
      if (!v18)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          int64_t v19 = v16 + 2;
          if (v19 >= v33)
          {
LABEL_33:
            swift_release();
            int64_t v4 = v32;
            if ((a2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }
          unint64_t v18 = v34[v19];
          if (!v18)
          {
            while (1)
            {
              int64_t v13 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_43;
              }
              if (v13 >= v33) {
                goto LABEL_33;
              }
              unint64_t v18 = v34[v13];
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          int64_t v13 = v19;
        }
      }
LABEL_18:
      unint64_t v11 = (v18 - 1) & v18;
    }
    swift_release();
    int64_t v4 = v32;
    unint64_t v17 = v34;
    if ((a2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    sub_25F678548();
    if (v30 != v31) {
      *unint64_t v17 = -1 << v29;
    }
    else {
      sub_25F67D89C(v29);
    }
    v3[2] = 0;
  }
LABEL_40:
  swift_release();
  *int64_t v4 = v6;
}

void sub_25F69BF84(uint64_t a1, char a2)
{
  int64_t v4 = v2;
  sub_25F678444();
  sub_25F67ACD8(&qword_26A7B1240);
  char v35 = a2;
  uint64_t v6 = sub_25F70F120();
  if (!v3[2]) {
    goto LABEL_43;
  }
  sub_25F682D04();
  uint64_t v34 = v9;
  if (v7 < 64) {
    uint64_t v10 = ~(-1 << v7);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v8;
  uint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = v3[6] + 40 * i;
    if (v35)
    {
      sub_25F65BF3C(v20, (uint64_t)v41, &qword_26B39CD28);
      uint64_t v21 = *(void *)(v3[7] + 8 * i);
    }
    else
    {
      sub_25F675D30(v20, (uint64_t)v41, &qword_26B39CD28);
      uint64_t v21 = *(void *)(v3[7] + 8 * i);
      sub_25F70E570();
    }
    sub_25F70F5C0();
    sub_25F675D30((uint64_t)v41, (uint64_t)&v38, &qword_26B39CD28);
    if (*((void *)&v39 + 1))
    {
      v36[0] = v38;
      v36[1] = v39;
      uint64_t v37 = v40;
      sub_25F70F5E0();
      sub_25F70EE60();
      sub_25F664A2C((uint64_t)v36);
    }
    else
    {
      sub_25F70F5E0();
    }
    unint64_t v22 = sub_25F70F620() & ~(-1 << *(unsigned char *)(v6 + 32));
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) == 0)
    {
      sub_25F6729F0();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        BOOL v27 = v25 == v26;
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        v24 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v25);
        if (v28 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v28)) + (v25 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    sub_25F65BF3C((uint64_t)v41, *(void *)(v6 + 48) + 40 * v23, &qword_26B39CD28);
    *(void *)(*(void *)(v6 + 56) + 8 * v23) = v21;
    ++*(void *)(v6 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_45;
    }
    if (v16 >= v33)
    {
      swift_release();
      int64_t v4 = v32;
      unint64_t v17 = v34;
      goto LABEL_38;
    }
    unint64_t v17 = v34;
    unint64_t v18 = v34[v16];
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v33) {
        goto LABEL_36;
      }
      unint64_t v18 = v34[v13];
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v11 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v33)
  {
    unint64_t v18 = v34[v19];
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_46;
        }
        if (v13 >= v33) {
          goto LABEL_36;
        }
        unint64_t v18 = v34[v13];
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_36:
  swift_release();
  int64_t v4 = v32;
LABEL_38:
  if (v35)
  {
    sub_25F678548();
    if (v30 != v31) {
      *unint64_t v17 = -1 << v29;
    }
    else {
      sub_25F67D89C(v29);
    }
    v3[2] = 0;
  }
LABEL_43:
  swift_release();
  *int64_t v4 = v6;
}

uint64_t sub_25F69C2BC(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_25F69C2D8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = a1 + 32;
  sub_25F70E570();
  while (1)
  {
    sub_25F675D30(v6, (uint64_t)&v31, &qword_26A7B1208);
    uint64_t v7 = v31;
    uint64_t v8 = v32;
    uint64_t v29 = v31;
    uint64_t v30 = v32;
    long long v27 = v33;
    long long v28 = v34;
    uint64_t v9 = (void *)*a3;
    unint64_t v11 = sub_25F67AD88(v31, v32);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_25F70F520();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_25F67ACD8(&qword_26A7B1210);
      sub_25F70F0B0();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    unint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    int64_t v19 = (uint64_t *)(v18[6] + 16 * v11);
    *int64_t v19 = v7;
    v19[1] = v8;
    uint64_t v20 = (_OWORD *)(v18[7] + 32 * v11);
    long long v21 = v28;
    *uint64_t v20 = v27;
    v20[1] = v21;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_18;
    }
    v18[2] = v24;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_25F69B0A0(v14, a2 & 1);
  unint64_t v16 = sub_25F67AD88(v7, v8);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v25 = (void *)swift_allocError();
  swift_willThrow();
  id v35 = v25;
  id v26 = v25;
  sub_25F67ACD8(&qword_26B39D870);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_25F69CEC0((uint64_t)&v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70F070();
  sub_25F70E790();
  sub_25F70F0E0();
  __break(1u);
}

uint64_t sub_25F69C5CC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = a1 + 32;
  sub_25F70E570();
  while (1)
  {
    sub_25F675D30(v6, (uint64_t)v31, &qword_26B39C9F8);
    long long v28 = v31[0];
    long long v29 = v31[1];
    uint64_t v30 = v32;
    sub_25F67AD1C(v33, v27);
    uint64_t v7 = *a3;
    unint64_t v9 = sub_25F664748((uint64_t)&v28);
    uint64_t v10 = *(void *)(v7 + 16);
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v13 = v8;
    if (*(void *)(v7 + 24) >= v12)
    {
      if (a2)
      {
        if (v8) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_25F67ACD8(&qword_26A7B1228);
        sub_25F70F0B0();
        if (v13) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      sub_25F69B3A0(v12, a2 & 1);
      unint64_t v14 = sub_25F664748((uint64_t)&v28);
      if ((v13 & 1) != (v15 & 1)) {
        goto LABEL_20;
      }
      unint64_t v9 = v14;
      if (v13)
      {
LABEL_10:
        sub_25F67AD2C(*(void *)(*a3 + 56) + 32 * v9, (uint64_t)v25);
        sub_25F67AD2C((uint64_t)v25, (uint64_t)v26);
        sub_25F67A28C((uint64_t)v25);
        sub_25F67A28C((uint64_t)v27);
        sub_25F664A2C((uint64_t)&v28);
        unint64_t v16 = (_OWORD *)(*(void *)(*a3 + 56) + 32 * v9);
        sub_25F67A28C((uint64_t)v16);
        sub_25F67AD1C(v26, v16);
        goto LABEL_14;
      }
    }
    char v17 = (void *)*a3;
    *(void *)(*a3 + 8 * (v9 >> 6) + 64) |= 1 << v9;
    uint64_t v18 = v17[6] + 40 * v9;
    long long v19 = v28;
    long long v20 = v29;
    *(void *)(v18 + 32) = v30;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_25F67AD1C(v27, (_OWORD *)(v17[7] + 32 * v9));
    uint64_t v21 = v17[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_19;
    }
    v17[2] = v23;
LABEL_14:
    v6 += 72;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_25F70F520();
  __break(1u);
  return result;
}

void sub_25F69C7F0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = a1 + 32;
  sub_25F70E570();
  while (1)
  {
    sub_25F675D30(v6, (uint64_t)&v28, &qword_26A7B1258);
    uint64_t v8 = v28;
    uint64_t v7 = v29;
    uint64_t v26 = v28;
    uint64_t v27 = v29;
    sub_25F67AD1C(&v30, v25);
    unint64_t v9 = (void *)*a3;
    unint64_t v11 = sub_25F67AD88(v8, v7);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_25F70F520();
      __break(1u);
      goto LABEL_20;
    }
    char v15 = v10;
    if (v9[3] < v14) {
      break;
    }
    if (a2)
    {
      if (v10) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_25F67ACD8(&qword_26B39CDB0);
      sub_25F70F0B0();
      if (v15) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v18 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    long long v19 = (uint64_t *)(v18[6] + 16 * v11);
    *long long v19 = v8;
    v19[1] = v7;
    sub_25F67AD1C(v25, (_OWORD *)(v18[7] + 32 * v11));
    uint64_t v20 = v18[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_18;
    }
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_25F69B6B4(v14, a2 & 1);
  unint64_t v16 = sub_25F67AD88(v8, v7);
  if ((v15 & 1) != (v17 & 1)) {
    goto LABEL_19;
  }
  unint64_t v11 = v16;
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v23 = (void *)swift_allocError();
  swift_willThrow();
  id v31 = v23;
  id v24 = v23;
  sub_25F67ACD8(&qword_26B39D870);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_25F67A28C((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70F070();
  sub_25F70E790();
  sub_25F70F0E0();
  __break(1u);
}

void sub_25F69CAE4(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (unint64_t i = (void **)(sub_25F70E570() + 48); ; i += 3)
  {
    uint64_t v7 = (uint64_t)*(i - 2);
    uint64_t v6 = (uint64_t)*(i - 1);
    uint64_t v8 = *i;
    unint64_t v9 = (void *)*a3;
    sub_25F70E570();
    id v10 = v8;
    unint64_t v12 = sub_25F67AD88(v7, v6);
    uint64_t v13 = v9[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_25F70F520();
      __break(1u);
      goto LABEL_20;
    }
    char v16 = v11;
    if (v9[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_25F67ACD8(&qword_26A7B1238);
      sub_25F70F0B0();
      if (v16) {
        goto LABEL_14;
      }
    }
LABEL_10:
    long long v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v12);
    *uint64_t v20 = v7;
    v20[1] = v6;
    *(void *)(v19[7] + 8 * v12) = v10;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_18;
    }
    long long v19[2] = v23;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_25F69B9B0(v15, a2 & 1);
  unint64_t v17 = sub_25F67AD88(v7, v6);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_19;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  id v24 = (void *)swift_allocError();
  swift_willThrow();
  id v25 = v24;
  sub_25F67ACD8(&qword_26B39D870);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70F070();
  sub_25F70E790();
  sub_25F70F0E0();
  __break(1u);
}

uint64_t sub_25F69CDB8()
{
  if (*(void *)(v0 + 40)) {
    sub_25F67A28C(v0 + 16);
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_25F69CDF8()
{
  unint64_t result = qword_26A7B11E8;
  if (!qword_26A7B11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11E8);
  }
  return result;
}

unint64_t sub_25F69CE44()
{
  unint64_t result = qword_26A7B11F8;
  if (!qword_26A7B11F8)
  {
    sub_25F682580(&qword_26A7B11F0);
    sub_25F69CDF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B11F8);
  }
  return result;
}

uint64_t sub_25F69CEC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F69CF14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F69CF70(uint64_t a1, uint64_t a2)
{
  return sub_25F69CFE8(a1, a2, &qword_26A7B11F0, (void (*)(uint64_t))sub_25F69D0AC, &qword_26A7B11D8, (void (*)(uint64_t))sub_25F69CF70);
}

uint64_t sub_25F69CFAC(uint64_t a1, uint64_t a2)
{
  return sub_25F69CFE8(a1, a2, &qword_26A7B0E48, (void (*)(uint64_t))sub_25F69D31C, &qword_26A7B1050, (void (*)(uint64_t))sub_25F69CFAC);
}

uint64_t sub_25F69CFE8(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t result = sub_25F70F5D0();
  if (v12)
  {
    uint64_t v14 = a2 + 32;
    do
    {
      uint64_t result = sub_25F6985F8(a1, a3, a4, a5, a6);
      v14 += 32;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_25F69D070(uint64_t a1, uint64_t a2)
{
  return sub_25F69CFE8(a1, a2, &qword_26B39D020, (void (*)(uint64_t))sub_25F69D58C, &qword_26A7B0E78, (void (*)(uint64_t))sub_25F69D070);
}

uint64_t sub_25F69D0AC(long long *a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = sub_25F70E570();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v12 = v11 | (v10 << 6);
LABEL_5:
  uint64_t v13 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v12);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  sub_25F69CF14(*(void *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(void *)&long long v24 = v15;
  *((void *)&v24 + 1) = v14;
  sub_25F70E570();
  while (1)
  {
    sub_25F65BF3C((uint64_t)&v24, (uint64_t)v30, &qword_26A7B12A8);
    if (!v30[1])
    {
      swift_release();
      return sub_25F70F5D0();
    }
    v29[0] = v31;
    v29[1] = v32;
    uint64_t v20 = *((void *)a1 + 8);
    long long v21 = a1[1];
    long long v24 = *a1;
    long long v25 = v21;
    long long v22 = a1[3];
    long long v26 = a1[2];
    long long v27 = v22;
    uint64_t v28 = v20;
    sub_25F70E740();
    swift_bridgeObjectRelease();
    sub_25F6985F8((uint64_t)&v24, &qword_26A7B11F0, (void (*)(uint64_t))sub_25F69D0AC, &qword_26A7B11D8, (void (*)(uint64_t))sub_25F69CF70);
    sub_25F69CEC0((uint64_t)v29);
    uint64_t result = sub_25F70F620();
    v9 ^= result;
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      unint64_t v17 = *(void *)(v23 + 8 * v16);
      if (v17) {
        goto LABEL_9;
      }
      int64_t v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        unint64_t v17 = *(void *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          unint64_t v6 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v16 << 6);
          int64_t v10 = v16;
          goto LABEL_5;
        }
        int64_t v19 = v16 + 2;
        int64_t v10 = v16 + 1;
        if (v16 + 2 < v7) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v24 = 0u;
  }
  unint64_t v17 = *(void *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v16 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v16 >= v7)
    {
      int64_t v10 = v7 - 1;
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v19;
    if (v17) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25F69D31C(long long *a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = sub_25F70E570();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v12 = v11 | (v10 << 6);
LABEL_5:
  uint64_t v13 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v12);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  sub_25F69D930(*(void *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(void *)&long long v24 = v15;
  *((void *)&v24 + 1) = v14;
  sub_25F70E570();
  while (1)
  {
    sub_25F65BF3C((uint64_t)&v24, (uint64_t)v30, &qword_26A7B12A0);
    if (!v30[1])
    {
      swift_release();
      return sub_25F70F5D0();
    }
    v29[0] = v31;
    v29[1] = v32;
    uint64_t v20 = *((void *)a1 + 8);
    long long v21 = a1[1];
    long long v24 = *a1;
    long long v25 = v21;
    long long v22 = a1[3];
    long long v26 = a1[2];
    long long v27 = v22;
    uint64_t v28 = v20;
    sub_25F70E740();
    swift_bridgeObjectRelease();
    sub_25F6985F8((uint64_t)&v24, &qword_26A7B0E48, (void (*)(uint64_t))sub_25F69D31C, &qword_26A7B1050, (void (*)(uint64_t))sub_25F69CFAC);
    sub_25F69D98C((uint64_t)v29);
    uint64_t result = sub_25F70F620();
    v9 ^= result;
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      unint64_t v17 = *(void *)(v23 + 8 * v16);
      if (v17) {
        goto LABEL_9;
      }
      int64_t v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        unint64_t v17 = *(void *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          unint64_t v6 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v16 << 6);
          int64_t v10 = v16;
          goto LABEL_5;
        }
        int64_t v19 = v16 + 2;
        int64_t v10 = v16 + 1;
        if (v16 + 2 < v7) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v24 = 0u;
  }
  unint64_t v17 = *(void *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v16 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v16 >= v7)
    {
      int64_t v10 = v7 - 1;
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v19;
    if (v17) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_25F69D58C(long long *a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = sub_25F70E570();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v12 = v11 | (v10 << 6);
LABEL_5:
  uint64_t v13 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v12);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  sub_25F69D9E0(*(void *)(a2 + 56) + 32 * v12, (uint64_t)&v25);
  *(void *)&long long v24 = v15;
  *((void *)&v24 + 1) = v14;
  sub_25F70E570();
  while (1)
  {
    sub_25F65BF3C((uint64_t)&v24, (uint64_t)v30, &qword_26B39CB38);
    if (!v30[1])
    {
      swift_release();
      return sub_25F70F5D0();
    }
    v29[0] = v31;
    v29[1] = v32;
    uint64_t v20 = *((void *)a1 + 8);
    long long v21 = a1[1];
    long long v24 = *a1;
    long long v25 = v21;
    long long v22 = a1[3];
    long long v26 = a1[2];
    long long v27 = v22;
    uint64_t v28 = v20;
    sub_25F70E740();
    swift_bridgeObjectRelease();
    sub_25F6985F8((uint64_t)&v24, &qword_26B39D020, (void (*)(uint64_t))sub_25F69D58C, &qword_26A7B0E78, (void (*)(uint64_t))sub_25F69D070);
    sub_25F6674D8((uint64_t)v29);
    uint64_t result = sub_25F70F620();
    v9 ^= result;
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 < v7)
    {
      unint64_t v17 = *(void *)(v23 + 8 * v16);
      if (v17) {
        goto LABEL_9;
      }
      int64_t v18 = v10 + 2;
      ++v10;
      if (v16 + 1 < v7)
      {
        unint64_t v17 = *(void *)(v23 + 8 * v18);
        if (v17)
        {
          ++v16;
LABEL_9:
          unint64_t v6 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v16 << 6);
          int64_t v10 = v16;
          goto LABEL_5;
        }
        int64_t v19 = v16 + 2;
        int64_t v10 = v16 + 1;
        if (v16 + 2 < v7) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v24 = 0u;
  }
  unint64_t v17 = *(void *)(v23 + 8 * v19);
  if (v17)
  {
    v16 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v16 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v16 >= v7)
    {
      int64_t v10 = v7 - 1;
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v19;
    if (v17) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_25F69D7FC()
{
  unint64_t result = qword_26A7B0E50;
  if (!qword_26A7B0E50)
  {
    sub_25F682580(&qword_26A7B0E48);
    sub_25F69D878();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0E50);
  }
  return result;
}

unint64_t sub_25F69D878()
{
  unint64_t result = qword_26A7B0B10;
  if (!qword_26A7B0B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B10);
  }
  return result;
}

uint64_t sub_25F69D8C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F69D930(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F69D98C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F69D9E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F69DA1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_25F69DA54()
{
  sub_25F675D30(v0, (uint64_t)&v4, &qword_26B39CD28);
  if (!*((void *)&v5 + 1)) {
    return sub_25F70F5E0();
  }
  v2[0] = v4;
  v2[1] = v5;
  uint64_t v3 = v6;
  sub_25F70F5E0();
  sub_25F70EE60();
  return sub_25F664A2C((uint64_t)v2);
}

uint64_t sub_25F69DADC()
{
  return sub_25F66BDE0(&qword_26A7B1260, type metadata accessor for NSValueTransformerName);
}

uint64_t sub_25F69DB24()
{
  return sub_25F66BDE0(&qword_26A7B1268, type metadata accessor for NSValueTransformerName);
}

uint64_t sub_25F69DB6C()
{
  return sub_25F66BDE0(&qword_26A7B1270, type metadata accessor for NSValueTransformerName);
}

ValueMetadata *type metadata accessor for AnyDecodable()
{
  return &type metadata for AnyDecodable;
}

unint64_t sub_25F69DC14()
{
  unint64_t result = qword_26A7B12B8;
  if (!qword_26A7B12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12B8);
  }
  return result;
}

uint64_t sub_25F69DC60()
{
  sub_25F67AD2C((uint64_t)v0, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    memset(v8, 0, 32);
    sub_25F67ACD8(&qword_26B39E0A8);
    uint64_t v1 = sub_25F70E6E0();
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B1250);
    if (swift_dynamicCast())
    {
      sub_25F675D18(v8, (uint64_t)v7);
      sub_25F67A2DC(v7, v7[3]);
      uint64_t v1 = sub_25F70F2C0();
      sub_25F67A28C((uint64_t)v7);
    }
    else
    {
      uint64_t v2 = sub_25F67A2DC(v0, v0[3]);
      MEMORY[0x270FA5388](v2, v2);
      (*(void (**)(char *))(v4 + 16))((char *)&v7[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v1 = sub_25F70E6E0();
    }
  }
  sub_25F67A28C((uint64_t)v9);
  return v1;
}

uint64_t sub_25F69DE1C()
{
  sub_25F67AD2C(v0, (uint64_t)v6);
  sub_25F67ACD8(&qword_26A7B1230);
  if (swift_dynamicCast())
  {
    sub_25F675D18(v5, (uint64_t)v4);
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, "AnyDecodable(");
    HIWORD(v3[1]) = -4864;
    sub_25F67A2DC(v4, v4[3]);
    sub_25F70F340();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v1 = v3[0];
    sub_25F67A28C((uint64_t)v4);
  }
  else
  {
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    strcpy((char *)v5, "AnyDecodable(");
    HIWORD(v5[0]) = -4864;
    sub_25F69DC60();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v1 = *(void *)&v5[0];
  }
  sub_25F67A28C((uint64_t)v6);
  return v1;
}

uint64_t sub_25F69DF88()
{
  sub_25F70F5C0();
  sub_25F6985BC((uint64_t)v1);
  return sub_25F70F620();
}

uint64_t sub_25F69DFC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F6976C4(a1, a2);
}

uint64_t sub_25F69DFF4()
{
  sub_25F70F5C0();
  sub_25F6985BC((uint64_t)v1);
  return sub_25F70F620();
}

unint64_t sub_25F69E030(uint64_t a1)
{
  unint64_t result = sub_25F69E058();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F69E058()
{
  unint64_t result = qword_26A7B12C0;
  if (!qword_26A7B12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12C0);
  }
  return result;
}

unint64_t sub_25F69E0A4(uint64_t a1)
{
  unint64_t result = sub_25F69DC14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F69E0CC(void *a1)
{
  a1[1] = sub_25F69E104();
  a1[2] = sub_25F69E150();
  unint64_t result = sub_25F69D878();
  a1[3] = result;
  return result;
}

unint64_t sub_25F69E104()
{
  unint64_t result = qword_26A7B12C8;
  if (!qword_26A7B12C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12C8);
  }
  return result;
}

unint64_t sub_25F69E150()
{
  unint64_t result = qword_26A7B12D0;
  if (!qword_26A7B12D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyEncodable()
{
  return &type metadata for AnyEncodable;
}

uint64_t sub_25F69E1AC()
{
  sub_25F67AD2C((uint64_t)v0, (uint64_t)v9);
  if (swift_dynamicCast())
  {
    memset(v8, 0, 32);
    sub_25F67ACD8(&qword_26B39E0A8);
    uint64_t v1 = sub_25F70E6E0();
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B1250);
    if (swift_dynamicCast())
    {
      sub_25F675D18(v8, (uint64_t)v7);
      sub_25F67A2DC(v7, v7[3]);
      uint64_t v1 = sub_25F70F2C0();
      sub_25F67A28C((uint64_t)v7);
    }
    else
    {
      uint64_t v2 = sub_25F67A2DC(v0, v0[3]);
      MEMORY[0x270FA5388](v2, v2);
      (*(void (**)(char *))(v4 + 16))((char *)&v7[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v1 = sub_25F70E6E0();
    }
  }
  sub_25F67A28C((uint64_t)v9);
  return v1;
}

uint64_t sub_25F69E368()
{
  sub_25F67AD2C(v0, (uint64_t)v6);
  sub_25F67ACD8(&qword_26A7B1230);
  if (swift_dynamicCast())
  {
    sub_25F675D18(v5, (uint64_t)v4);
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, "AnyEncodable(");
    HIWORD(v3[1]) = -4864;
    sub_25F67A2DC(v4, v4[3]);
    sub_25F70F340();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v1 = v3[0];
    sub_25F67A28C((uint64_t)v4);
  }
  else
  {
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    strcpy((char *)v5, "AnyEncodable(");
    HIWORD(v5[0]) = -4864;
    sub_25F69E1AC();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t v1 = *(void *)&v5[0];
  }
  sub_25F67A28C((uint64_t)v6);
  return v1;
}

uint64_t sub_25F69E4D4()
{
  sub_25F70F5C0();
  sub_25F698580((uint64_t)v1);
  return sub_25F70F620();
}

uint64_t sub_25F69E514(void *a1)
{
  return sub_25F697B50(a1);
}

uint64_t sub_25F69E540()
{
  sub_25F70F5C0();
  sub_25F698580((uint64_t)v1);
  return sub_25F70F620();
}

uint64_t sub_25F69E580@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F69893C(*a1, a2);
}

uint64_t sub_25F69E58C@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F698A34(a2, *a1);
}

uint64_t sub_25F69E594@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F698A94(*a1, a2);
}

uint64_t sub_25F69E59C(void *a1)
{
  return sub_25F698AF8(*a1, a1[1]);
}

unint64_t sub_25F69E5AC()
{
  unint64_t result = qword_26A7B12D8;
  if (!qword_26A7B12D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12D8);
  }
  return result;
}

unint64_t sub_25F69E5FC()
{
  unint64_t result = qword_26A7B12E0;
  if (!qword_26A7B12E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12E0);
  }
  return result;
}

unint64_t sub_25F69E64C()
{
  unint64_t result = qword_26A7B12E8;
  if (!qword_26A7B12E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12E8);
  }
  return result;
}

unint64_t sub_25F69E69C()
{
  unint64_t result = qword_26A7B12F0;
  if (!qword_26A7B12F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12F0);
  }
  return result;
}

unint64_t sub_25F69E6E8(void *a1)
{
  a1[1] = sub_25F69E738();
  a1[2] = sub_25F69E784();
  a1[3] = sub_25F69E7D0();
  a1[4] = sub_25F69E81C();
  a1[5] = sub_25F69E868();
  unint64_t result = sub_25F69E8B4();
  a1[6] = result;
  return result;
}

unint64_t sub_25F69E738()
{
  unint64_t result = qword_26A7B12F8;
  if (!qword_26A7B12F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B12F8);
  }
  return result;
}

unint64_t sub_25F69E784()
{
  unint64_t result = qword_26A7B1300;
  if (!qword_26A7B1300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1300);
  }
  return result;
}

unint64_t sub_25F69E7D0()
{
  unint64_t result = qword_26A7B1308;
  if (!qword_26A7B1308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1308);
  }
  return result;
}

unint64_t sub_25F69E81C()
{
  unint64_t result = qword_26A7B1310;
  if (!qword_26A7B1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1310);
  }
  return result;
}

unint64_t sub_25F69E868()
{
  unint64_t result = qword_26A7B1318;
  if (!qword_26A7B1318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1318);
  }
  return result;
}

unint64_t sub_25F69E8B4()
{
  unint64_t result = qword_26A7B1320;
  if (!qword_26A7B1320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1320);
  }
  return result;
}

unint64_t sub_25F69E900(uint64_t a1)
{
  unint64_t result = sub_25F69E928();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F69E928()
{
  unint64_t result = qword_26A7B1328;
  if (!qword_26A7B1328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1328);
  }
  return result;
}

unint64_t sub_25F69E974(uint64_t a1)
{
  unint64_t result = sub_25F69E69C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F69E99C(void *a1)
{
  a1[1] = sub_25F69E9D4();
  a1[2] = sub_25F69EA20();
  unint64_t result = sub_25F69CDF8();
  a1[3] = result;
  return result;
}

unint64_t sub_25F69E9D4()
{
  unint64_t result = qword_26A7B1330;
  if (!qword_26A7B1330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1330);
  }
  return result;
}

unint64_t sub_25F69EA20()
{
  unint64_t result = qword_26A7B1338[0];
  if (!qword_26A7B1338[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A7B1338);
  }
  return result;
}

uint64_t AnyKeyPath.stringValue.getter()
{
  uint64_t result = AnyKeyPath.toString()()._countAndFlagsBits;
  if (v1)
  {
    if (qword_26B39C298 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for logger();
    sub_25F67F3A4(v2, (uint64_t)qword_26B39C280);
    sub_25F70EEC0();
    sub_25F70E790();
    swift_getErrorValue();
    sub_25F70F2F0();
    sub_25F68C2F0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();

    return 0;
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyKeyPath.toString()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25F70EDD0();
  if (!v3)
  {
    uint64_t v4 = sub_25F70EDE0();
    swift_retain();
    uint64_t v6 = sub_25F70E6E0();
    unint64_t v8 = v7;
    uint64_t v24 = 46;
    unint64_t v25 = 0xE100000000000000;
    MEMORY[0x270FA5388](v6, v7);
    _OWORD v23[2] = &v24;
    sub_25F70E570();
    uint64_t v9 = sub_25F679768(1, 1u, sub_25F679BA0, (uint64_t)v23, v6, v8);
    swift_bridgeObjectRelease();
    unint64_t v5 = sub_25F69EE20(v9);
    unint64_t v11 = v10;
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    if (v15)
    {
      if ((v5 ^ v11) >= 0x4000)
      {
        if (!sub_25F69EE84(0x657475706D6F633CLL, 0xE900000000000064, v5, v11))
        {
          uint64_t v4 = MEMORY[0x2611FB2A0](v5, v11, v13, v15);
          unint64_t v5 = v21;
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
        swift_bridgeObjectRelease();
        uint64_t v24 = 0;
        unint64_t v25 = 0xE000000000000000;
        sub_25F70EEC0();
        sub_25F70E790();
        v23[5] = v1;
        sub_25F70F070();
        uint64_t v20 = v24;
        unint64_t v17 = v25;
        sub_25F6931C0();
        swift_allocError();
        uint64_t *v16 = v20;
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
    }
    sub_25F6931C0();
    swift_allocError();
    uint64_t *v16 = 0xD000000000000019;
    unint64_t v17 = 0x800000025F718920;
LABEL_7:
    v16[1] = v17;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
LABEL_8:
  uint64_t v18 = v4;
  int64_t v19 = (void *)v5;
  result._object = v19;
  result._countAndFlagsBits = v18;
  return result;
}

uint64_t AnyKeyPath.unsafeSendableAnyKeyPath.getter()
{
  uint64_t result = v0;
  if (v0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25F69EE20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 32 * v1);
  sub_25F70E570();
  return v2;
}

BOOL sub_25F69EE84(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 14;
  sub_25F70E570();
  if (v5 == a3 >> 14)
  {
LABEL_13:
    sub_25F70E7A0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    BOOL v16 = v15 == 0;
  }
  else
  {
    sub_25F70E570();
    while (1)
    {
      uint64_t v6 = sub_25F70ED10();
      uint64_t v8 = v7;
      unint64_t v9 = sub_25F70ED00();
      uint64_t v10 = sub_25F70E7A0();
      if (!v11) {
        break;
      }
      if (v6 == v10 && v11 == v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = sub_25F70F330();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          BOOL v16 = 0;
          goto LABEL_15;
        }
      }
      if (v5 == v9 >> 14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v16 = 1;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_25F69F010(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_25F70E810();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_25F67EDF4();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_25F67ED80(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    BOOL v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_25F70F0D0();
  __break(1u);
  return result;
}

uint64_t sub_25F69F118()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25F69F150()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t AppleInternal.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*AppleInternal.value.modify())()
{
  return nullsub_1;
}

uint64_t _s10TipKitCore13AppleInternalV5valuexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_25F69F1F4()
{
  uint64_t v0 = type metadata accessor for AppleInternal();
  return AppleInternal.wrappedValue.getter(v0);
}

uint64_t sub_25F69F230(uint64_t a1)
{
  MEMORY[0x270FA5388](a1, a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for AppleInternal();
  return AppleInternal.wrappedValue.setter((uint64_t)v2, v4);
}

uint64_t AppleInternal.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_25F69F36C(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

uint64_t sub_25F69F36C(uint64_t result, uint64_t a2)
{
  uint64_t v4 = result;
  if (qword_26B39E320 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_26B39E318 == 1)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 24);
    return v5(v2, v4);
  }
  return result;
}

void (*AppleInternal.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  int v5 = malloc(0x30uLL);
  *a1 = v5;
  *int v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  long long v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  void v5[4] = malloc(v8);
  v5[5] = malloc(v8);
  AppleInternal.wrappedValue.getter(a2);
  return sub_25F69F4FC;
}

void sub_25F69F4FC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    AppleInternal.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    AppleInternal.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AppleInternal.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_25F69F5FC()
{
  return 8;
}

void *sub_25F69F608(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_25F69F614()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25F69F6A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_25F69F75C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_25F69F788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25F69F7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25F69F828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25F69F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25F69F8C8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return sub_25F67D9DC((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_25F69FA14(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x25F69FC18);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        sub_25F674004((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for AppleInternal()
{
  return sub_25F67FB98();
}

uint64_t AtomicProperty.projectedValue.getter()
{
  return swift_retain();
}

uint64_t sub_25F69FC60(uint64_t a1)
{
  MEMORY[0x270FA5388](a1, a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - v1);
  return AtomicProperty.wrappedValue.setter();
}

void (*AtomicProperty.wrappedValue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  sub_25F67E30C();
  *(void *)(v5 + 8) = *(void *)(v4 + 80);
  sub_25F67C9A8();
  *(void *)(v6 + 16) = v7;
  size_t v9 = *(void *)(v8 + 64);
  v3[3] = malloc(v9);
  v3[4] = malloc(v9);
  AtomicProperty.wrappedValue.getter();
  return sub_25F69FDCC;
}

void sub_25F69FDCC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    uint64_t v7 = sub_25F67D5A8();
    v8(v7);
    AtomicProperty.wrappedValue.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    AtomicProperty.wrappedValue.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void AtomicProperty.updateWithLock(_:)()
{
  sub_25F67CF04();
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F69FED0, (uint64_t)&v4, v3, v5, MEMORY[0x263F8EE60] + 8);
}

uint64_t sub_25F69FED0()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void AtomicProperty.append<A>(_:)()
{
  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F6A0030, v1, v2, *(void *)(v0 + 80), MEMORY[0x263F8EE60] + 8, v3, v4, v5, v6);
}

uint64_t sub_25F69FF5C(uint64_t a1, uint64_t a2)
{
  MEMORY[0x270FA5388](a1, a2);
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25F70E9F0();
  return sub_25F70E9C0();
}

uint64_t sub_25F6A0030(uint64_t a1)
{
  return sub_25F69FF5C(a1, *(void *)(v1 + 24));
}

void sub_25F6A00A4()
{
}

uint64_t sub_25F6A00CC(uint64_t a1)
{
  MEMORY[0x270FA5388](a1, a1);
  (*(void (**)(char *))(v1 + 16))((char *)&v4 - v2);
  return AtomicProperty.subscript.setter();
}

uint64_t AtomicProperty.subscript.setter()
{
  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F6A033C, v1, v2, *(void *)(v0 + 80), MEMORY[0x263F8EE60] + 8, v3, v4, v5, v9);
  sub_25F675994();
  uint64_t v6 = sub_25F676860();
  return v7(v6);
}

uint64_t sub_25F6A022C()
{
  return sub_25F70EA10();
}

uint64_t sub_25F6A0260(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25F70E9F0();
  sub_25F70E970();
  uint64_t v9 = *a1;
  sub_25F6A1A98(a2, *a1);
  char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
  if ((isClassOrObjCExistentialType & 1) == 0) {
    uint64_t v11 = v9;
  }
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 24))(v11+ ((*(unsigned __int8 *)(*(void *)(a4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a4 - 8) + 80))+ *(void *)(*(void *)(a4 - 8) + 72) * a2, a3, a4);
  return nullsub_1(v8);
}

uint64_t sub_25F6A033C(uint64_t *a1)
{
  return sub_25F6A0260(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

void (*AtomicProperty.subscript.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  sub_25F67E30C();
  *(void *)(v7 + 16) = *(void *)(*(void *)(v6 + 80) + 16);
  sub_25F67C9A8();
  *(void *)(v8 + 24) = v9;
  size_t v11 = *(void *)(v10 + 64);
  void v5[4] = malloc(v11);
  v5[5] = malloc(v11);
  AtomicProperty.subscript.getter();
  return sub_25F6A041C;
}

void sub_25F6A041C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    uint64_t v5 = v2[2];
    uint64_t v6 = v2[3];
    uint64_t v7 = sub_25F67D5A8();
    v8(v7);
    AtomicProperty.subscript.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    AtomicProperty.subscript.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AtomicProperty.compactMap<A, B, C>(_:)()
{
  uint64_t v1 = *v0;
  AtomicProperty.wrappedValue.getter();
  uint64_t v2 = MEMORY[0x2611FB130](v6[3], *(void *)(*(void *)(v1 + 80) + 16), *(void *)(*(void *)(v1 + 80) + 24), *(void *)(*(void *)(v1 + 80) + 32));
  if (v2)
  {
    swift_bridgeObjectRelease();
    return sub_25F70E980();
  }
  else
  {
    v6[1] = v6;
    MEMORY[0x270FA5388](v2, v3);
    swift_getWitnessTable();
    uint64_t v4 = sub_25F70E840();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_25F6A0624(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_25F6A06A0(uint64_t a1)
{
  return sub_25F6A0624(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 48));
}

uint64_t sub_25F6A0734@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  v11[2] = a4;
  void v11[3] = a5;
  void v11[4] = a6;
  v11[5] = a2;
  v11[6] = a3;
  uint64_t v9 = sub_25F70E5F0();
  return Dictionary.getOrCreate(key:default:)(a1, (uint64_t (*)(uint64_t))sub_25F6A1A70, (uint64_t)v11, v9, a7);
}

uint64_t AtomicProperty.remove<A, B>(where:)()
{
  AtomicProperty.wrappedValue.getter();
  sub_25F67D358();
  if ((MEMORY[0x2611FB130]() & 1) == 0)
  {
    uint64_t result = sub_25F70E590();
    if (v0) {
      return result;
    }
    sub_25F67D358();
    sub_25F70E570();
    swift_bridgeObjectRelease();
    sub_25F67D358();
    if ((MEMORY[0x2611FB0D0]() & 1) == 0)
    {
      sub_25F67D358();
      sub_25F70E560();
      swift_getWitnessTable();
      sub_25F70E870();
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_25F6A090C(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[2];
  uint64_t v3 = *(void *)(*a2 + 80);
  v4[1] = *(_OWORD *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v6 = a1;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F6A1A50, (uint64_t)v4, v2, v3, MEMORY[0x263F8EE60] + 8);
}

uint64_t sub_25F6A0978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_25F70ECF0();
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8, v8);
  size_t v11 = (char *)&v16 - v10;
  MEMORY[0x270FA5388](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  sub_25F674004((uint64_t)v11, 1, 1, a4);
  sub_25F70E5F0();
  return sub_25F70E610();
}

void AtomicProperty.removeAll<A, B>(keepingCapacity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25F67DF40((void (*)(uint64_t))sub_25F6A1880, a2, v8[2], *(void *)(*v8 + 80), MEMORY[0x263F8EE60] + 8, a6, a7, a8, v9);
}

uint64_t sub_25F6A0B44()
{
  return sub_25F70E5E0();
}

void AtomicProperty.set<A, B>(key:value:)()
{
  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F680308, v1, v2, *(void *)(v0 + 80), MEMORY[0x263F8EE60] + 8, v3, v4, v5, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_25F67CF04();
  sub_25F67DF40((void (*)(uint64_t))sub_25F6A18F0, v1, v2, *(void *)(v0 + 80), MEMORY[0x263F8EE60] + 8, v3, v4, v5, v6);
}

void AtomicProperty.setInitialValue<A, B>(key:value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[2];
  uint64_t v5 = *(void *)(*v3 + 80);
  v6[1] = *(_OWORD *)(v5 + 16);
  uint64_t v7 = *(void *)(v5 + 32);
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v10 = a3;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F6A18A4, (uint64_t)v6, v4, v5, MEMORY[0x263F8EE60] + 8);
}

uint64_t sub_25F6A0C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v10[2] = a5;
  void v10[3] = a6;
  void v10[4] = a7;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t v8 = sub_25F70E5F0();
  return Dictionary.setInitialValue(key:value:)(a2, (void (*)(uint64_t))sub_25F6A1AF0, (uint64_t)v10, v8);
}

uint64_t sub_25F6A0D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = sub_25F70ECF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7, v9);
  uint64_t v12 = (char *)&v17 - v11;
  MEMORY[0x270FA5388](v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v17 - v14, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a1, v7);
  return AtomicProperty.subscript.setter((uint64_t)v12);
}

void (*AtomicProperty.subscript.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  sub_25F67E30C();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = sub_25F70ECF0();
  v3[1] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v3[2] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[3] = malloc(v8);
  v3[4] = malloc(v8);
  v3[5] = *(void *)(v5 + 16);
  sub_25F67C9A8();
  uint64_t v10 = v9;
  v3[6] = v9;
  size_t v12 = *(void *)(v11 + 64);
  v3[7] = malloc(v12);
  v3[8] = malloc(v12);
  (*(void (**)(void))(v10 + 16))();
  AtomicProperty.subscript.getter();
  return sub_25F6A0FC4;
}

void sub_25F6A0FC4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  if (a2)
  {
    uint64_t v5 = v2[5];
    uint64_t v6 = v2[6];
    size_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    uint64_t v9 = v2[1];
    uint64_t v10 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    AtomicProperty.subscript.setter((uint64_t)v8);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    size_t v8 = (void *)v2[3];
    uint64_t v7 = (void *)v2[4];
    AtomicProperty.subscript.setter((uint64_t)v7);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t sub_25F6A11A4()
{
  return Dictionary.set<A>(key:value:)();
}

uint64_t sub_25F6A1220(uint64_t a1, uint64_t a2)
{
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v3 = (char *)&v8 - v2;
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v8 - v2, v5);
  uint64_t v6 = swift_unknownObjectRetain();
  return AtomicProperty.subscript.setter(v6, (uint64_t)v3);
}

uint64_t AtomicProperty.subscript.setter(uint64_t a1, uint64_t a2)
{
  AtomicProperty.set<A, B>(key:value:)();
  swift_unknownObjectRelease();
  sub_25F675994();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v4(a2);
}

void (*AtomicProperty.subscript.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[1] = v2;
  sub_25F67E30C();
  *(void *)(v7 + 16) = *(void *)(*(void *)(v6 + 80) + 16);
  sub_25F67C9A8();
  uint64_t v9 = v8;
  *(void *)(v10 + 24) = v8;
  size_t v12 = *(void *)(v11 + 64);
  void v5[4] = malloc(v12);
  v5[5] = malloc(v12);
  (*(void (**)(void))(v9 + 16))();
  *uint64_t v5 = AtomicProperty.get<A, B>(_:)(a2);
  return sub_25F6A1464;
}

void sub_25F6A1464(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v2[3] + 32))((*a1)[4], v4, v2[2]);
    uint64_t v5 = swift_unknownObjectRetain();
    AtomicProperty.subscript.setter(v5, (uint64_t)v3);
    swift_unknownObjectRelease();
  }
  else
  {
    AtomicProperty.subscript.setter(**a1, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t AtomicProperty.insert<A>(_:)(uint64_t a1, uint64_t a2)
{
  sub_25F67E30C();
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25F675994();
  MEMORY[0x270FA5388](v9, v10);
  size_t v12 = &v18[-v11];
  uint64_t v13 = *(void *)(v2 + 16);
  uint64_t v14 = *(void *)(v6 + 24);
  uint64_t v19 = v7;
  uint64_t v20 = v14;
  uint64_t v21 = a2;
  sub_25F67F8A4((void (*)(uint64_t))sub_25F6A190C, (uint64_t)v18, v13, v6, TupleTypeMetadata2);
  uint64_t v15 = *v12;
  sub_25F675994();
  (*(void (**)(uint64_t))(v16 + 32))(a1);
  return v15;
}

uint64_t sub_25F6A163C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a3);
  sub_25F70EB90();
  uint64_t result = sub_25F70EB50();
  *a4 = result & 1;
  return result;
}

void AtomicProperty.remove<A>(_:)()
{
  uint64_t v0 = sub_25F70ECF0();
  sub_25F679DB0((void (*)(uint64_t))sub_25F6A192C, v1, v2, v3, v0, v4, v5, v6, v7);
}

uint64_t sub_25F6A17EC()
{
  return sub_25F70EB60();
}

uint64_t sub_25F6A1848()
{
  sub_25F67628C();
  return sub_25F6A0734(v0, v1, v2, v3, v4, v5, v6);
}

void sub_25F6A1864(uint64_t a1)
{
  sub_25F6A090C(a1, v1);
}

uint64_t sub_25F6A1880()
{
  return sub_25F6A0B44();
}

uint64_t sub_25F6A18A4()
{
  sub_25F67628C();
  return sub_25F6A0C80(v0, v1, v2, v3, v4, v5, v6);
}

uint64_t sub_25F6A18C0()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_25F6A18F0()
{
  return sub_25F6A11A4();
}

uint64_t sub_25F6A190C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25F6A163C(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

uint64_t sub_25F6A192C()
{
  return sub_25F6A17EC();
}

void sub_25F6A194C()
{
}

void sub_25F6A1974()
{
}

void *sub_25F6A197C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_25F6A1990()
{
}

void sub_25F6A1998()
{
}

void sub_25F6A19C4()
{
}

uint64_t sub_25F6A19D0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = AtomicProperty.subscript.getter(a1);
  *a2 = result;
  return result;
}

void sub_25F6A1A04()
{
}

uint64_t method lookup function for AtomicProperty(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AtomicProperty);
}

uint64_t dispatch thunk of AtomicProperty.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AtomicProperty.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_25F6A1A50(uint64_t a1)
{
  return sub_25F6A0978(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_25F6A1A70()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_25F6A1A98(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_25F6A1AF0()
{
  return sub_25F6A1A70();
}

id sub_25F6A1B08()
{
  id v0 = objc_msgSend((id)BiomeLibrary(), sel_Discoverability);
  swift_unknownObjectRelease();
  id v1 = objc_msgSend(v0, sel_Signals);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_source);

  return v2;
}

void sub_25F6A1B9C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, _OWORD *, char *))
{
  void (*v27)(uint64_t *__return_ptr, _OWORD *, char *);

  long long v27 = a2;
  sub_25F69DA18(v26);
  uint64_t v3 = v26[0];
  int64_t v4 = v26[3];
  unint64_t v5 = v26[4];
  uint64_t v19 = v26[1];
  int64_t v20 = (unint64_t)(v26[2] + 64) >> 6;
  sub_25F70E570();
  uint64_t v6 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v4 << 6);
      goto LABEL_15;
    }
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v20) {
      goto LABEL_29;
    }
    unint64_t v10 = *(void *)(v19 + 8 * v9);
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v20) {
        goto LABEL_29;
      }
      unint64_t v10 = *(void *)(v19 + 8 * v11);
      if (v10) {
        goto LABEL_13;
      }
      int64_t v11 = v4 + 3;
      if (v4 + 3 >= v20) {
        goto LABEL_29;
      }
      unint64_t v10 = *(void *)(v19 + 8 * v11);
      if (v10) {
        goto LABEL_13;
      }
      int64_t v11 = v4 + 4;
      if (v4 + 4 >= v20) {
        goto LABEL_29;
      }
      unint64_t v10 = *(void *)(v19 + 8 * v11);
      if (v10)
      {
LABEL_13:
        int64_t v9 = v11;
      }
      else
      {
        int64_t v9 = v4 + 5;
        if (v4 + 5 >= v20) {
          goto LABEL_29;
        }
        unint64_t v10 = *(void *)(v19 + 8 * v9);
        if (!v10)
        {
          int64_t v16 = v4 + 6;
          while (v16 < v20)
          {
            unint64_t v10 = *(void *)(v19 + 8 * v16++);
            if (v10)
            {
              int64_t v9 = v16 - 1;
              goto LABEL_14;
            }
          }
          goto LABEL_29;
        }
      }
    }
LABEL_14:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    int64_t v4 = v9;
LABEL_15:
    char v12 = *(unsigned char *)(*(void *)(v3 + 48) + v8);
    sub_25F67B010(*(void *)(v3 + 56) + 40 * v8, (uint64_t)v25 + 8);
    LOBYTE(v25[0]) = v12;
    v24[0] = v25[0];
    v24[1] = v25[1];
    v24[2] = v25[2];
    v27(&v22, v24, (char *)v24 + 8);
    if (v2)
    {
      sub_25F67EFC0((uint64_t)v24, &qword_26B39CDF0);
      swift_bridgeObjectRelease();
LABEL_29:
      swift_release();
      return;
    }
    uint64_t v13 = v22;
    long long v21 = v23;
    sub_25F67EFC0((uint64_t)v24, &qword_26B39CDF0);
    if ((void)v21)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F6BE3DC();
        uint64_t v6 = v17;
      }
      unint64_t v14 = *(void *)(v6 + 16);
      if (v14 >= *(void *)(v6 + 24) >> 1)
      {
        sub_25F6BE3DC();
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 24 * v14;
      *(void *)(v15 + 32) = v13;
      *(_OWORD *)(v15 + 40) = v21;
    }
  }
  __break(1u);
}

void sub_25F6A1E40(char a1, uint64_t a2, uint64_t a3)
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_26B39E3F1 == 1)
  {
    if (qword_26B39DFB0 != -1) {
      swift_once();
    }
    if (byte_26B39DFAC & 1) == 0 && (sub_25F68AFBC())
    {
      sub_25F67ACD8(&qword_26B39CE98);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25F710CF0;
      *(unsigned char *)(inited + 32) = 0;
      uint64_t v6 = sub_25F6E3C10();
      uint64_t v7 = MEMORY[0x263F8D310];
      *(void *)(inited + 64) = MEMORY[0x263F8D310];
      *(void *)(inited + 72) = &off_26BCDE520;
      *(void *)(inited + 40) = v6;
      *(void *)(inited + 48) = v8;
      *(unsigned char *)(inited + 80) = 3;
      CoreTipRecord.id.getter();
      *(void *)(inited + 112) = v7;
      *(void *)(inited + 120) = &off_26BCDE520;
      *(void *)(inited + 88) = v9;
      *(void *)(inited + 96) = v10;
      *(unsigned char *)(inited + 128) = 4;
      CoreTipRecord.id.getter();
      *(void *)(inited + 160) = v7;
      *(void *)(inited + 168) = &off_26BCDE520;
      *(void *)(inited + 136) = v11;
      *(void *)(inited + 144) = v12;
      *(unsigned char *)(inited + 176) = 11;
      if (qword_26B39D588 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_25F67ACD8(&qword_26B39D590);
      unint64_t v14 = (char *)sub_25F67F3A4(v13, (uint64_t)qword_26B3A3028);
      swift_beginAccess();
      uint64_t v15 = type metadata accessor for DeviceProfile();
      if (sub_25F67D9DC((uint64_t)v14, 1, v15))
      {
        *(void *)(inited + 208) = v7;
        *(void *)(inited + 216) = &off_26BCDE520;
        *(void *)(inited + 184) = 0x6669636570736E75;
        unint64_t v16 = 0xEB00000000646569;
      }
      else
      {
        uint64_t v17 = v14[2];
        uint64_t v18 = *(void *)&aUnspecifallcon[8 * v17];
        unint64_t v16 = *(void *)&aIed[8 * v17];
        *(void *)(inited + 208) = v7;
        *(void *)(inited + 216) = &off_26BCDE520;
        *(void *)(inited + 184) = v18;
      }
      *(void *)(inited + 192) = v16;
      *(unsigned char *)(inited + 224) = 23;
      uint64_t v30 = sub_25F6E3C10();
      uint64_t v31 = v19;
      sub_25F70E790();
      CoreTipRecord.id.getter();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      *(void *)(inited + 256) = v7;
      *(void *)(inited + 264) = &off_26BCDE520;
      *(void *)(inited + 232) = v30;
      *(void *)(inited + 240) = v31;
      *(unsigned char *)(inited + 272) = 25;
      if (sub_25F67D9DC((uint64_t)v14, 1, v15)) {
        char v20 = 0;
      }
      else {
        char v20 = *v14;
      }
      *(void *)(inited + 304) = MEMORY[0x263F8D4F8];
      *(void *)(inited + 312) = &off_26BCDE560;
      *(unsigned char *)(inited + 280) = v20;
      *(unsigned char *)(inited + 320) = 27;
      *(void *)(inited + 352) = v7;
      *(void *)(inited + 360) = &off_26BCDE520;
      *(void *)(inited + 328) = 12918;
      *(void *)(inited + 336) = 0xE200000000000000;
      sub_25F67ACD8(&qword_26B39D190);
      sub_25F6A25EC();
      uint64_t v21 = sub_25F70E530();
      sub_25F70E570();
      uint64_t v22 = sub_25F6A2B40(v21, a3);
      uint64_t v24 = MEMORY[0x270FA5388](v22, v23);
      sub_25F6A1B9C(v24, (void (*)(uint64_t *__return_ptr, _OWORD *, char *))sub_25F6A2EFC);
      sub_25F6990AC(v25);
      swift_bridgeObjectRelease();
      if (qword_26B39CD38 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for logger();
      sub_25F67F3A4(v26, (uint64_t)qword_26B39CDD8);
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F6A380C(a1);
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      sub_25F6A2F18();
      uint64_t v29 = (void *)sub_25F70E520();
      sub_25F70F070();

      sub_25F68C2F0(0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      sub_25F6A380C(a1);
      sub_25F70E790();
      swift_bridgeObjectRelease();
      long long v27 = (void *)sub_25F70E690();
      swift_bridgeObjectRelease();
      uint64_t v28 = (void *)sub_25F70E520();
      swift_bridgeObjectRelease();
      AnalyticsSendEvent();
    }
  }
}

id sub_25F6A239C(unint64_t *a1, void *a2, char *a3, void *a4)
{
  *a1 = sub_25F6A31E0(*a3);
  a1[1] = v7;
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  sub_25F67A2DC(a4, v8);
  id result = sub_25F6A3980(v8, v9);
  *a2 = result;
  return result;
}

uint64_t sub_25F6A240C(uint64_t a1)
{
  return sub_25F6A2514(a1, 6);
}

uint64_t sub_25F6A2414(uint64_t a1, char a2)
{
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D00;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v5 = sub_25F685EC8();
  sub_25F67CF10(v5, MEMORY[0x263F8D6C8]);
  uint64_t v6 = MEMORY[0x263F8D310];
  *(void *)(inited + 112) = MEMORY[0x263F8D310];
  *(void *)(inited + 120) = &off_26BCDE520;
  sub_25F67C9D4();
  *(unsigned char *)(inited + 128) = 18;
  unint64_t v7 = sub_25F6D9BDC(a2);
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 168) = &off_26BCDE520;
  *(void *)(inited + 136) = v7;
  *(void *)(inited + 144) = v8;
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v9 = sub_25F70E530();
  sub_25F6A1E40(0, a1, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A250C(uint64_t a1)
{
  return sub_25F6A2514(a1, 1);
}

uint64_t sub_25F6A2514(uint64_t a1, char a2)
{
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D10;
  *(unsigned char *)(inited + 32) = 7;
  uint64_t v5 = sub_25F685EC8();
  sub_25F67CF10(v5, MEMORY[0x263F8D6C8]);
  *(void *)(inited + 112) = MEMORY[0x263F8D310];
  *(void *)(inited + 120) = &off_26BCDE520;
  sub_25F67C9D4();
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v6 = sub_25F70E530();
  sub_25F6A1E40(a2, a1, v6);
  return swift_bridgeObjectRelease();
}

unint64_t sub_25F6A25EC()
{
  unint64_t result = qword_26B39D198;
  if (!qword_26B39D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D198);
  }
  return result;
}

uint64_t sub_25F6A2638(uint64_t a1, char a2)
{
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D10;
  *(unsigned char *)(inited + 32) = 6;
  unint64_t v5 = sub_25F6DE6B8(a2);
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = &off_26BCDE520;
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v6;
  *(unsigned char *)(inited + 80) = 7;
  uint64_t v7 = sub_25F685EC8();
  *(void *)(inited + 112) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 120) = &off_26BCDE5C0;
  *(void *)(inited + 88) = v7;
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v8 = sub_25F70E530();
  sub_25F6A1E40(7, a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A2724(uint64_t a1)
{
  return sub_25F6A2A70(a1, 27, 12918, 0xE200000000000000, 2);
}

uint64_t sub_25F6A2738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25F67ACD8(&qword_26B39E248);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D10;
  *(unsigned char *)(inited + 32) = 8;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = &off_26BCDE520;
  *(void *)(inited + 40) = 0x6E69487070416E69;
  *(void *)(inited + 48) = 0xE900000000000074;
  *(unsigned char *)(inited + 80) = 15;
  sub_25F65A184(a4, (uint64_t)v11);
  uint64_t v14 = sub_25F70DE50();
  if (sub_25F67D9DC((uint64_t)v11, 1, v14) == 1)
  {
    sub_25F67EFC0((uint64_t)v11, &qword_26B39E248);
    *(void *)(inited + 112) = v13;
    *(void *)(inited + 120) = &off_26BCDE520;
LABEL_5:
    *(void *)(inited + 88) = a2;
    *(void *)(inited + 96) = a3;
    sub_25F70E570();
    goto LABEL_6;
  }
  uint64_t v15 = sub_25F70DD80();
  uint64_t v17 = v16;
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
  *(void *)(inited + 112) = v13;
  *(void *)(inited + 120) = &off_26BCDE520;
  if (!v17) {
    goto LABEL_5;
  }
  *(void *)(inited + 88) = v15;
  *(void *)(inited + 96) = v17;
LABEL_6:
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v18 = sub_25F70E530();
  sub_25F6A1E40(3, a1, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A2920(uint64_t a1)
{
  return sub_25F6A2A70(a1, 8, 0x6E69487070416E69, 0xE900000000000074, 10);
}

uint64_t sub_25F6A2944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D00;
  uint64_t v6 = MEMORY[0x263F8D6C8];
  *(unsigned char *)(inited + 32) = 5;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = &off_26BCDE5C0;
  *(void *)(inited + 40) = a3;
  *(unsigned char *)(inited + 80) = 13;
  sub_25F70DEF0();
  *(void *)(inited + 112) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = &off_26BCDE580;
  *(void *)(inited + 88) = v7;
  *(unsigned char *)(inited + 128) = 17;
  *(void *)(inited + 160) = v6;
  *(void *)(inited + 168) = &off_26BCDE5C0;
  *(void *)(inited + 136) = a3 != 0;
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v8 = sub_25F70E530();
  sub_25F6A1E40(4, a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A2A4C(uint64_t a1)
{
  return sub_25F6A2A70(a1, 8, 0x6E69487070416E69, 0xE900000000000074, 9);
}

uint64_t sub_25F6A2A70(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_25F67ACD8(&qword_26B39CE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25F710D20;
  *(unsigned char *)(inited + 32) = a2;
  *(void *)(inited + 64) = MEMORY[0x263F8D310];
  *(void *)(inited + 72) = &off_26BCDE520;
  *(void *)(inited + 40) = a3;
  *(void *)(inited + 48) = a4;
  sub_25F67ACD8(&qword_26B39D190);
  sub_25F6A25EC();
  uint64_t v11 = sub_25F70E530();
  sub_25F6A1E40(a5, a1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A2B40(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_25F6A2C58(a1, (uint64_t)sub_25F6A2E94, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_25F6A2BCC(char a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t *, char *, uint64_t))
{
  char v7 = a1;
  uint64_t result = a3(v6, &v5, &v7, a2);
  if (!v3)
  {
    if (v6[1])
    {
      if (v5)
      {
        return v6[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25F6A2C58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  sub_25F6A2F58(a1, a2, a3, &v27);
  sub_25F70E570();
  swift_retain();
  sub_25F6A2F94(v25);
  if (!v26)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25F67B324();
    return swift_release();
  }
  while (1)
  {
    char v7 = v25[0];
    sub_25F675D18((long long *)((char *)v25 + 8), (uint64_t)v24);
    uint64_t v8 = *a5;
    unint64_t v10 = sub_25F699CE4(v7);
    uint64_t v11 = *(void *)(v8 + 16);
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (*(void *)(v8 + 24) >= v13)
    {
      if (a4)
      {
        if (v9) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_25F67ACD8(&qword_26B39CCE8);
        sub_25F70F0B0();
        if (v14) {
          goto LABEL_9;
        }
      }
    }
    else
    {
      sub_25F69BCB0(v13, a4 & 1);
      unint64_t v15 = sub_25F699CE4(v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_17;
      }
      unint64_t v10 = v15;
      if (v14)
      {
LABEL_9:
        sub_25F67B010((uint64_t)v24, (uint64_t)v23);
        sub_25F67A28C((uint64_t)v24);
        uint64_t v17 = *(void *)(*a5 + 56) + 40 * v10;
        sub_25F67A28C(v17);
        sub_25F675D18(v23, v17);
        goto LABEL_13;
      }
    }
    uint64_t v18 = (void *)*a5;
    *(void *)(*a5 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(unsigned char *)(v18[6] + v10) = v7;
    sub_25F675D18(v24, v18[7] + 40 * v10);
    uint64_t v19 = v18[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_16;
    }
    v18[2] = v21;
LABEL_13:
    sub_25F6A2F94(v25);
    a4 = 1;
    if (!v26) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = sub_25F70F520();
  __break(1u);
  return result;
}

uint64_t sub_25F6A2E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2;
}

uint64_t sub_25F6A2E94@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25F6A2E64((uint64_t)(a2 + 8), *a1, (uint64_t)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_25F6A2EC8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void *, uint64_t *, char *, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_25F6A2BCC(*a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_25F6A2EFC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_25F6A2EC8(a1, a2, *(uint64_t (**)(void *, uint64_t *, char *, uint64_t))(v3 + 16), a3);
}

unint64_t sub_25F6A2F18()
{
  unint64_t result = qword_26B39D350;
  if (!qword_26B39D350)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B39D350);
  }
  return result;
}

uint64_t sub_25F6A2F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_25F6A2F94@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    char v11 = *(unsigned char *)(*(void *)(v3 + 48) + v10);
    sub_25F67B010(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v22 + 8);
    LOBYTE(v22[0]) = v11;
    goto LABEL_23;
  }
  int64_t v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      uint64_t v9 = (v14 - 1) & v14;
      unint64_t v10 = __clz(__rbit64(v14)) + (v12 << 6);
      int64_t v7 = v12;
      goto LABEL_3;
    }
    int64_t v15 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      unint64_t v14 = *(void *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        int64_t v12 = v15;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        unint64_t v14 = *(void *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          int64_t v12 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v15 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          unint64_t v14 = *(void *)(v4 + 8 * v15);
          if (v14) {
            goto LABEL_10;
          }
          int64_t v12 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            unint64_t v14 = *(void *)(v4 + 8 * v12);
            if (v14) {
              goto LABEL_7;
            }
            int64_t v7 = v13 - 1;
            int64_t v16 = v5 + 6;
            while (v16 < v13)
            {
              unint64_t v14 = *(void *)(v4 + 8 * v16++);
              if (v14)
              {
                int64_t v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v22, 0, sizeof(v22));
LABEL_23:
  *id v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v17 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_25F6A3168((uint64_t)v22, (uint64_t)v20);
  if ((void)v21)
  {
    v19[0] = v20[0];
    v19[1] = v20[1];
    long long v19[2] = v21;
    v17(v19);
    return sub_25F67EFC0((uint64_t)v19, &qword_26B39CDF0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_25F6A3168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CDF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CAEvent()
{
  return &type metadata for CAEvent;
}

unint64_t sub_25F6A31E0(char a1)
{
  unint64_t result = 0x495F656C646E7562;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x697463656C6C6F63;
      break;
    case 2:
    case 4:
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x747865746E6F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x5F7373696D736964;
      break;
    case 7:
      unint64_t result = 0x5F79616C70736964;
      break;
    case 8:
      unint64_t result = 0x5F79616C70736964;
      break;
    case 9:
      unint64_t result = 0x726F727265;
      break;
    case 10:
      unint64_t result = 0x656D697265707865;
      break;
    case 12:
      unint64_t result = 0x656D697265707865;
      break;
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 14:
      unint64_t result = 0xD000000000000015;
      break;
    case 15:
      unint64_t result = 0x6C72755F6B6E696CLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 17:
      unint64_t result = 0xD000000000000019;
      break;
    case 18:
      unint64_t result = 0x6E6F73616572;
      break;
    case 19:
      unint64_t result = 0x44495F656C7572;
      break;
    case 20:
      unint64_t result = 0x5F65636976726573;
      break;
    case 21:
      unint64_t result = 0xD000000000000017;
      break;
    case 22:
      unint64_t result = 0xD000000000000011;
      break;
    case 23:
      unint64_t result = 0x44495F706974;
      break;
    case 24:
      unint64_t result = 0x6569765F73706974;
      break;
    case 25:
      unint64_t result = 0x67616C665F353675;
      break;
    case 26:
      unint64_t result = 0x6C665F6567617375;
      break;
    case 27:
      unint64_t result = 0x65765F73656C7572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6A355C()
{
  unint64_t v0 = sub_25F70F4D0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C) {
    return 28;
  }
  else {
    return v0;
  }
}

unint64_t sub_25F6A35B0(char *a1, char *a2)
{
  return sub_25F6CC180(*a1, *a2);
}

uint64_t sub_25F6A35BC()
{
  return sub_25F6D9EE0();
}

uint64_t sub_25F6A35C4(uint64_t a1)
{
  return sub_25F6DA058(a1, *v1);
}

uint64_t sub_25F6A35CC()
{
  return sub_25F6DA8A0();
}

uint64_t sub_25F6A35D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6A355C();
  *a1 = result;
  return result;
}

unint64_t sub_25F6A3604@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_25F6A31E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s3KeyOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 27) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v5 = v6 - 28;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s3KeyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6A3784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_25F6A37C0()
{
  unint64_t result = qword_26B39CEA0;
  if (!qword_26B39CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CEA0);
  }
  return result;
}

unint64_t sub_25F6A380C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0x6573755F6B6E696CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x616D5F73656C7572;
      break;
    case 6:
      unint64_t result = 0x707369645F706974;
      break;
    case 7:
      unint64_t result = 0x6D7369645F706974;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x707061745F706974;
      break;
    default:
      return result;
  }
  return result;
}

id sub_25F6A3980(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    id v3 = objc_allocWithZone(MEMORY[0x263EFF9D0]);
    return objc_msgSend(v3, sel_init);
  }
  return result;
}

id sub_25F6A3A08()
{
  return v0;
}

uint64_t sub_25F6A3A10()
{
  uint64_t v1 = *v0;
  sub_25F6A3A08();
  return v1;
}

uint64_t sub_25F6A3A38(uint64_t a1)
{
  uint64_t result = sub_25F6A3AF0(&qword_26B39D098, (void (*)(uint64_t))sub_25F6A2F18);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F6A3A98(uint64_t a1)
{
  uint64_t result = sub_25F6A3AF0(&qword_26A7B0AB0, MEMORY[0x263F07490]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F6A3AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25F6A3B3C()
{
  return sub_25F6A3B38(*v0);
}

uint64_t sub_25F6A3B48()
{
  return sub_25F6A3B44(*v0);
}

uint64_t sub_25F6A3B54()
{
  return sub_25F6A3B50(*v0);
}

uint64_t sub_25F6A3B60()
{
  return sub_25F6A3B5C(*v0);
}

uint64_t sub_25F6A3B6C()
{
  return sub_25F6A3B68(*v0, v0[1]);
}

uint64_t sub_25F6A3B78(uint64_t a1)
{
  return sub_25F6A3B74(*v1, *(void *)(a1 + 16));
}

uint64_t sub_25F6A3B88(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F6A3BDC(void *a1)
{
  return sub_25F6A3BD8(*v1, a1[2], a1[3], a1[4]);
}

uint64_t sub_25F6A3BF0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F6A3C40()
{
  unint64_t v0 = CFBundleGetMainBundle();
  CFTypeRef v1 = (id)CFBundleGetValueForInfoDictionaryKey(v0, (CFStringRef)*MEMORY[0x263EFFB58]);

  if (!v1) {
    return 0;
  }
  if (swift_dynamicCast()) {
    return v3;
  }
  return 0;
}

uint64_t Comparable.isLessThan(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_25F6A3D34(a1, a2, a3, a4, MEMORY[0x263F8D170], (uint64_t (*)(long long *, void, uint64_t, uint64_t))Comparable.isGreaterThan(_:checkReverse:));
}

uint64_t Comparable.isGreaterThan(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_25F6A3D34(a1, a2, a3, a4, MEMORY[0x263F8D168], (uint64_t (*)(long long *, void, uint64_t, uint64_t))Comparable.isLessThan(_:checkReverse:));
}

uint64_t sub_25F6A3D34(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, uint64_t, uint64_t), uint64_t (*a6)(long long *, void, uint64_t, uint64_t))
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v11 = sub_25F70ECF0();
  sub_25F67C9A8();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14, v15);
  uint64_t v17 = (char *)&v30 - v16;
  sub_25F67C9A8();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20, v21);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F67A890(a1, (uint64_t)v37);
  sub_25F67ACD8(&qword_26B39E0A8);
  if (!swift_dynamicCast())
  {
    uint64_t v25 = a6;
    sub_25F674004((uint64_t)v17, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v11);
    if (a2)
    {
      sub_25F67A890(a1, (uint64_t)v32);
      if (v33)
      {
        sub_25F67ACD8(&qword_26A7B0A00);
        if (swift_dynamicCast())
        {
          if (*((void *)&v35 + 1))
          {
            sub_25F675D18(&v34, (uint64_t)v37);
            uint64_t v26 = v38;
            uint64_t v27 = v39;
            sub_25F67A2DC(v37, v38);
            *((void *)&v35 + 1) = a3;
            uint64_t v28 = sub_25F677CCC((uint64_t *)&v34);
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(v19 + 16))(v28, v6, a3);
            char v24 = v25(&v34, 0, v26, v27);
            sub_25F67EFC0((uint64_t)&v34, &qword_26B39E0A8);
            sub_25F67A28C((uint64_t)v37);
            return v24 & 1;
          }
        }
        else
        {
          uint64_t v36 = 0;
          long long v34 = 0u;
          long long v35 = 0u;
        }
      }
      else
      {
        sub_25F67EFC0((uint64_t)v32, &qword_26B39E0A8);
        long long v34 = 0u;
        long long v35 = 0u;
        uint64_t v36 = 0;
      }
      sub_25F67EFC0((uint64_t)&v34, &qword_26A7B1420);
    }
    char v24 = 0;
    return v24 & 1;
  }
  sub_25F674004((uint64_t)v17, 0, 1, a3);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v17, a3);
  char v24 = v31(v6, v23, a3, v30);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, a3);
  return v24 & 1;
}

uint64_t Comparable.isLessThanOrEqual(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_25F6A3D34(a1, a2, a3, a4, MEMORY[0x263F8D180], (uint64_t (*)(long long *, void, uint64_t, uint64_t))Comparable.isGreaterThanOrEqual(_:checkReverse:));
}

uint64_t Comparable.isGreaterThanOrEqual(_:checkReverse:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_25F6A3D34(a1, a2, a3, a4, MEMORY[0x263F8D178], (uint64_t (*)(long long *, void, uint64_t, uint64_t))Comparable.isLessThanOrEqual(_:checkReverse:));
}

uint64_t Configuration.datastoreDirectory.getter()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t Configuration.datastoreDirectory.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Configuration.datastoreDirectory.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.displayFrequencyDuration.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t (*Configuration.displayFrequencyDuration.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.bundleIdentifierOverride.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25F70E570();
  return v1;
}

uint64_t sub_25F6A4148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Configuration.bundleIdentifierOverride.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6A41DC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  sub_25F70E570();
  return Configuration.bundleIdentifierOverride.setter(v1, v2);
}

uint64_t Configuration.bundleIdentifierOverride.setter(uint64_t a1, uint64_t a2)
{
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67C9F4();
  if (v5)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v2 + 32) = a1;
    *(void *)(v2 + 40) = a2;
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*Configuration.bundleIdentifierOverride.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 40);
  *a1 = *(void *)(v1 + 32);
  a1[1] = v3;
  sub_25F70E570();
  return sub_25F6A4300;
}

uint64_t sub_25F6A4300(uint64_t *a1, char a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  if (a2)
  {
    uint64_t v5 = qword_26B39E320;
    sub_25F70E570();
    if (v5 != -1) {
      swift_once();
    }
    sub_25F67C9F4();
    if (v6)
    {
      uint64_t v7 = a1[2];
      swift_bridgeObjectRelease();
      *(void *)(v7 + 32) = v4;
      *(void *)(v7 + 40) = v3;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_26B39E320 != -1) {
      swift_once();
    }
    sub_25F67C9F4();
    if (v6)
    {
      uint64_t v8 = a1[2];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v8 + 32) = v4;
      *(void *)(v8 + 40) = v3;
      return result;
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t Configuration.usesAppleDisplayFrequency.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

void (*Configuration.usesAppleDisplayFrequency.modify(uint64_t a1))(unsigned char *a1, char a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 48);
  return sub_25F6A4428;
}

void sub_25F6A4428(unsigned char *a1, char a2)
{
  char v3 = a1[8];
  if (a2)
  {
    if (qword_26B39E320 != -1) {
      swift_once();
    }
    sub_25F67C9F4();
    if (!v4) {
      return;
    }
LABEL_9:
    *(unsigned char *)(*(void *)a1 + 48) = v3;
    return;
  }
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67E318();
  if (v5) {
    goto LABEL_9;
  }
}

uint64_t Configuration.usesCoreAnalytics.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_25F6A44C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, unsigned char *a8@<X8>)
{
  uint64_t result = a3(a1, *(unsigned __int8 *)(a1 + 104), a2, a3, a4, a5, a6, a7, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40));
  *a8 = result & 1;
  return result;
}

void (*Configuration.usesCoreAnalytics.modify(uint64_t a1))(unsigned char *a1, char a2)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 49);
  return sub_25F6A4590;
}

void sub_25F6A4590(unsigned char *a1, char a2)
{
  char v3 = a1[8];
  if (a2)
  {
    if (qword_26B39E320 != -1) {
      swift_once();
    }
    sub_25F67C9F4();
    if (!v4) {
      return;
    }
LABEL_9:
    *(unsigned char *)(*(void *)a1 + 49) = v3;
    return;
  }
  if (qword_26B39E320 != -1) {
    swift_once();
  }
  sub_25F67E318();
  if (v5) {
    goto LABEL_9;
  }
}

uint64_t Configuration.hideAllTips.getter()
{
  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t Configuration.hideAllTips.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 50) = result;
  return result;
}

uint64_t (*Configuration.hideAllTips.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.hideTipsSet.getter()
{
  return sub_25F70E570();
}

uint64_t Configuration.hideTipsSet.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*Configuration.hideTipsSet.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.showAllTips.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t Configuration.showAllTips.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*Configuration.showAllTips.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.showTipsSet.getter()
{
  return sub_25F70E570();
}

uint64_t Configuration.showTipsSet.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*Configuration.showTipsSet.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.disableDisplayFrequency.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t Configuration.disableDisplayFrequency.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*Configuration.disableDisplayFrequency.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.shouldResetDatastore.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t Configuration.shouldResetDatastore.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

uint64_t (*Configuration.shouldResetDatastore.modify())()
{
  return nullsub_1;
}

uint64_t Configuration.usesCachesDirectoryForDatastore.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  if (word_26B39DFA8 == 3)
  {
    if (qword_26B39E320 != -1) {
      swift_once();
    }
    sub_25F67E318();
    char v1 = v0 ^ 1;
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t static Configuration.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_26B39E3C8;
  uint64_t v4 = qword_26B39E3E0;
  uint64_t v3 = qword_26B39E3E8;
  char v5 = byte_26B39E3F0;
  char v6 = byte_26B39E3F1;
  char v7 = byte_26B39E3F2;
  uint64_t v8 = off_26B39E3F8;
  char v9 = byte_26B39E400;
  unint64_t v10 = off_26B39E408;
  char v11 = word_26B39E410;
  char v12 = HIBYTE(word_26B39E410);
  char v13 = byte_26B39E428;
  *(void *)a1 = qword_26B39E3C0;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = xmmword_26B39E3D0;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 49) = v6;
  *(unsigned char *)(a1 + 50) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 81) = v12;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)&qword_26B39E418;
  *(unsigned char *)(a1 + 104) = v13;
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return sub_25F70E570();
}

uint64_t static Configuration.shared.setter(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v17 = *(unsigned char *)(a1 + 49);
  char v18 = *(unsigned char *)(a1 + 48);
  char v16 = *(unsigned char *)(a1 + 50);
  uint64_t v15 = *(void **)(a1 + 56);
  char v14 = *(unsigned char *)(a1 + 64);
  char v13 = *(void **)(a1 + 72);
  char v11 = *(unsigned char *)(a1 + 81);
  char v12 = *(unsigned char *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 88);
  char v8 = *(unsigned char *)(a1 + 104);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26B39E3C0 = v1;
  qword_26B39E3C8 = v2;
  *(void *)&xmmword_26B39E3D0 = v3;
  *((void *)&xmmword_26B39E3D0 + 1) = v4;
  qword_26B39E3E0 = v5;
  qword_26B39E3E8 = v6;
  byte_26B39E3F0 = v18;
  byte_26B39E3F1 = v17;
  byte_26B39E3F2 = v16;
  off_26B39E3F8 = v15;
  byte_26B39E400 = v14;
  off_26B39E408 = v13;
  LOBYTE(word_26B39E410) = v12;
  HIBYTE(word_26B39E410) = v11;
  qword_26B39E418 = v10;
  unk_26B39E420 = v9;
  byte_26B39E428 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A4AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, unsigned char *a7@<X8>)
{
  return sub_25F6A44C8(a1, a2, (uint64_t (*)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))Configuration.usesAppleDisplayFrequency.getter, a3, a4, a5, a6, a7);
}

void sub_25F6A4AD8(char *a1)
{
}

uint64_t sub_25F6A4B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, unsigned char *a7@<X8>)
{
  return sub_25F6A44C8(a1, a2, (uint64_t (*)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void))Configuration.usesCoreAnalytics.getter, a3, a4, a5, a6, a7);
}

void sub_25F6A4B2C(char *a1)
{
}

uint64_t destroy for Configuration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t assignWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

void *initializeWithTake for Configuration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t assignWithTake for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration()
{
  return &type metadata for Configuration;
}

void sub_25F6A4E9C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0) {
    goto LABEL_30;
  }
  if (a1)
  {
    uint64_t v2 = *(void *)(a2 + 16);
    if (!v2)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    unint64_t v3 = 0;
    unint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a2 + 40);
    uint64_t v23 = v2 - 1;
    uint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v22 = a1;
    while (1)
    {
      uint64_t v9 = *(v5 - 1);
      uint64_t v8 = *v5;
      unint64_t v10 = *(void *)(v6 + 16);
      if ((uint64_t)v10 >= a1)
      {
        if (v4 >= v10) {
          goto LABEL_28;
        }
        uint64_t v21 = *(v5 - 1);
        uint64_t v14 = v6 + 16 * v4;
        uint64_t v15 = *(void *)(v14 + 32);
        uint64_t v16 = *(void *)(v14 + 40);
        sub_25F70E570();
        sub_25F70E570();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25F686110();
        }
        unint64_t v17 = *(void *)(v7 + 16);
        if (v17 >= *(void *)(v7 + 24) >> 1) {
          sub_25F686110();
        }
        *(void *)(v7 + 16) = v17 + 1;
        uint64_t v18 = v7 + 16 * v17;
        *(void *)(v18 + 32) = v15;
        *(void *)(v18 + 40) = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25F6A50F4();
          uint64_t v6 = v19;
        }
        uint64_t v13 = a2;
        if (v4 >= *(void *)(v6 + 16)) {
          goto LABEL_29;
        }
        uint64_t v20 = v6 + 16 * v4;
        swift_bridgeObjectRelease();
        a1 = v22;
        *(void *)(v20 + 32) = v21;
        *(void *)(v20 + 40) = v8;
        if ((uint64_t)++v4 >= v22)
        {
          if (v23 == v3) {
            goto LABEL_26;
          }
          unint64_t v4 = 0;
          goto LABEL_24;
        }
      }
      else
      {
        sub_25F70E570();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25F686110();
        }
        unint64_t v11 = *(void *)(v6 + 16);
        if (v11 >= *(void *)(v6 + 24) >> 1) {
          sub_25F686110();
        }
        *(void *)(v6 + 16) = v11 + 1;
        uint64_t v12 = v6 + 16 * v11;
        *(void *)(v12 + 32) = v9;
        *(void *)(v12 + 40) = v8;
        a1 = v22;
        uint64_t v13 = a2;
      }
      if (v23 == v3) {
        goto LABEL_26;
      }
LABEL_24:
      ++v3;
      v5 += 2;
      if (v3 >= *(void *)(v13 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        return;
      }
    }
  }
}

void sub_25F6A50F4()
{
}

uint64_t static Bool.isSimulator.getter()
{
  return sub_25F654418(&qword_26B39DFB0, (unsigned __int8 *)&byte_26B39DFAC);
}

BOOL static Bool.tvOS.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 3;
}

uint64_t static Bool.isInternalDevice.getter()
{
  return sub_25F654418(&qword_26B39DFB0, (unsigned __int8 *)&byte_26B39DFAB);
}

uint64_t static Bool.isDebugging.getter()
{
  return sub_25F654418(&qword_26B39DFB0, (unsigned __int8 *)&word_26B39DFA8 + 1);
}

uint64_t static Bool.isDebuggingInternalDevice.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  return byte_26B39DFAB & HIBYTE(word_26B39DFA8) & 1;
}

BOOL static Bool.iOS.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 0;
}

BOOL static Bool.macOS.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 1;
}

BOOL static Bool.macCatalyst.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 2;
}

BOOL static Bool.visionOS.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 4;
}

BOOL static Bool.watchOS.getter()
{
  if (qword_26B39DFB0 != -1) {
    swift_once();
  }
  sub_25F67CA04();
  return v0 == 5;
}

uint64_t sub_25F6A53B0(uint64_t result)
{
  if ((unsigned __int128)(result * (__int128)86400) >> 64 == (86400 * result) >> 63) {
    result *= 0xC0DDD92E56000000;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_25F6A53F8(uint64_t a1)
{
  return 1000000000000000000 * a1;
}

uint64_t static String.tipsBundleIdentifier.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t static String.tipsdIdentifier.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t static String.tipsdProcess.getter()
{
  return 0x6473706974;
}

unint64_t static String.tkutilIdentifier.getter()
{
  return sub_25F67CA10();
}

unint64_t static String.tipKitIdentifier.getter()
{
  return sub_25F67CA10();
}

void *assignWithCopy for ConstellationEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ConstellationEvent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationEvent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationEvent()
{
  return &type metadata for ConstellationEvent;
}

uint64_t sub_25F6A55A0()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_25F6A55AC()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t sub_25F6A55DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_25F70E570();
}

unint64_t sub_25F6A55E8(uint64_t a1)
{
  unint64_t result = sub_25F6A5610();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F6A5610()
{
  unint64_t result = qword_26A7B0B50;
  if (!qword_26A7B0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B50);
  }
  return result;
}

unint64_t sub_25F6A565C(uint64_t a1)
{
  unint64_t result = sub_25F6A5684();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F6A5684()
{
  unint64_t result = qword_26A7B0B48;
  if (!qword_26A7B0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B48);
  }
  return result;
}

uint64_t sub_25F6A56D0(unint64_t a1, void (*a2)(uint64_t))
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v5; uint64_t v5 = sub_25F70F100())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x2611FBA70](i - 4, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i);
        swift_retain();
      }
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      a2(v7);
      if (v2)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      if (v8 == v5) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    sub_25F70E570();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6A57E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_25F6A5800(a1, a2, a3, &qword_26B39E258, a4);
}

uint64_t sub_25F6A57F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_25F6A5800(a1, a2, a3, &qword_26B39DD48, a4);
}

uint64_t sub_25F6A5800@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t result = sub_25F67AD88(result, a2), (v8 & 1) != 0))
  {
    unint64_t result = sub_25F66796C(*(void *)(a3 + 56) + 8 * result, a5, a4);
    char v9 = 0;
  }
  else
  {
    *(void *)a5 = 0;
    char v9 = 1;
  }
  *(unsigned char *)(a5 + 8) = v9;
  return result;
}

double sub_25F6A5868@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_25F67AD88(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_25F69D9E0(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t static ConstellationIngestor.ingestContent(_:)()
{
  sub_25F6759E0();
  *(void *)(v1 + 288) = v2;
  *(void *)(v1 + 296) = v0;
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25F6A5954()
{
  sub_25F685F54(0x746E656D75636F64, 0xE900000000000073, *(void *)(v0 + 288), (_OWORD *)(v0 + 16));
  if (!*(void *)(v0 + 40))
  {
    uint64_t v9 = v0 + 16;
LABEL_9:
    sub_25F67EFC0(v9, &qword_26B39D670);
    goto LABEL_10;
  }
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v1 = sub_25F67ACD8(&qword_26A7B0EF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    sub_25F6931C0();
    swift_allocError();
    *unint64_t v10 = 0xD000000000000020;
    v10[1] = 0x800000025F718E00;
    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v0 + 264);
  sub_25F685F54(0x79726576696C6564, 0xEC0000006F666E49, *(void *)(v0 + 288), (_OWORD *)(v0 + 80));
  if (!*(void *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v0 + 80;
    goto LABEL_9;
  }
  uint64_t v3 = sub_25F67ACD8(&qword_26A7B0E68);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v37 = *(void *)(v0 + 256);
  *(void *)(v0 + 168) = v1;
  *(void *)(v0 + 144) = v2;
  sub_25F67AD2C(v0 + 144, v0 + 176);
  if (swift_dynamicCast())
  {
    uint64_t v4 = *(void *)(v0 + 208);
    unint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = sub_25F6A9C00();
    uint64_t v7 = v4;
    unint64_t v8 = v5;
  }
  else
  {
    uint64_t v13 = self;
    *(void *)(v0 + 248) = *(void *)(v0 + 144);
    sub_25F70E570();
    uint64_t v14 = sub_25F70F500();
    *(void *)(v0 + 240) = 0;
    id v15 = objc_msgSend(v13, sel_dataWithJSONObject_options_error_, v14, 0, v0 + 240);
    swift_unknownObjectRelease();
    id v16 = *(id *)(v0 + 240);
    if (!v15)
    {
      uint64_t v23 = v16;
      sub_25F70DD20();

      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v24 = v0 + 144;
LABEL_26:
      sub_25F67A28C(v24);
LABEL_11:
      sub_25F6759EC();
      sub_25F674F14();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v17 = sub_25F70DE80();
    unint64_t v19 = v18;

    uint64_t v20 = sub_25F6A9C00();
    uint64_t v7 = v17;
    unint64_t v8 = v19;
    uint64_t v6 = v20;
  }
  sub_25F67A838(v7, v8);
  *(void *)(v0 + 304) = v6;
  sub_25F67A28C(v0 + 144);
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 48) = v37;
  sub_25F67AD2C(v0 + 48, v0 + 112);
  if (swift_dynamicCast())
  {
    uint64_t v21 = *(void *)(v0 + 224);
    unint64_t v22 = *(void *)(v0 + 232);
    goto LABEL_22;
  }
  uint64_t v25 = self;
  *(void *)(v0 + 272) = *(void *)(v0 + 48);
  sub_25F70E570();
  uint64_t v26 = sub_25F70F500();
  *(void *)(v0 + 280) = 0;
  id v27 = objc_msgSend(v25, sel_dataWithJSONObject_options_error_, v26, 0, v0 + 280);
  swift_unknownObjectRelease();
  id v28 = *(id *)(v0 + 280);
  if (!v27)
  {
    uint64_t v36 = v28;
    sub_25F70DD20();

    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v24 = v0 + 48;
    goto LABEL_26;
  }
  uint64_t v21 = sub_25F70DE80();
  unint64_t v22 = v29;

LABEL_22:
  uint64_t v30 = sub_25F6A9B58();
  sub_25F67A838(v21, v22);
  *(void *)(v0 + 312) = v30;
  sub_25F67A28C(v0 + 48);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_25F6A5E58;
  sub_25F674F14();
  return sub_25F6A61A8(v32, v33);
}

uint64_t sub_25F6A5E58()
{
  sub_25F679DE0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25F6765E0();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
}

uint64_t sub_25F6A602C()
{
  sub_25F6759E0();
  *(void *)(v0 + 336) = type metadata accessor for MiniTipsDatastore();
  if (qword_26B39E100 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_26B39E190;
  return MEMORY[0x270FA2498](sub_25F6A60F4, v1, 0);
}

uint64_t sub_25F6A60F4()
{
  sub_25F67629C();
  static MiniTipsDatastore.resetModelManagers()();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F6A61A8(uint64_t a1, uint64_t a2)
{
  v3[45] = a2;
  v3[46] = v2;
  v3[44] = a1;
  return MEMORY[0x270FA2498](sub_25F6A61CC, 0, 0);
}

uint64_t sub_25F6A61CC()
{
  long long v89 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[44];
  sub_25F67ACD8(&qword_26A7B0EA8);
  uint64_t v3 = sub_25F70E530();
  v0[43] = v3;
  uint64_t v4 = *(void *)(v2 + 16);
  if (!v4)
  {
LABEL_30:
    v1[47] = v3;
    char v49 = *(unsigned char *)(v3 + 32);
    *((unsigned char *)v1 + 472) = v49;
    uint64_t v50 = -1;
    uint64_t v51 = -1 << v49;
    if (-(-1 << v49) < 64) {
      uint64_t v50 = ~(-1 << -(char)v51);
    }
    unint64_t v52 = v50 & *(void *)(v3 + 64);
    v1[48] = 0;
    unint64_t v27 = sub_25F70E570();
    if (v52)
    {
      uint64_t v53 = 0;
      unint64_t v54 = __clz(__rbit64(v52));
      uint64_t v55 = (v52 - 1) & v52;
    }
    else
    {
      unint64_t v29 = 63 - v51;
      if ((unint64_t)(63 - v51) <= 0x7F) {
        goto LABEL_61;
      }
      if (!*(void *)(v27 + 72))
      {
        if (v29 < 0xC0) {
          goto LABEL_61;
        }
        if (!*(void *)(v27 + 80))
        {
          if (v29 < 0x100) {
            goto LABEL_61;
          }
          if (!*(void *)(v27 + 88))
          {
            if (v29 < 0x140) {
              goto LABEL_61;
            }
            if (!*(void *)(v27 + 96))
            {
LABEL_57:
              unint64_t v65 = v29 >> 6;
              uint64_t v66 = 13;
              while (v66 - 8 < v65)
              {
                if (*(void *)(v27 + 8 * v66++)) {
                  goto LABEL_43;
                }
              }
LABEL_61:
              swift_release();
              swift_bridgeObjectRelease();
              sub_25F67D5C4();
              __asm { BRAA            X1, X16 }
            }
          }
        }
      }
LABEL_43:
      sub_25F672A04();
      unint64_t v54 = v63 + (v53 << 6);
    }
    v1[49] = v53;
    v1[50] = v55;
    uint64_t v56 = (void *)(*(void *)(v27 + 48) + 16 * v54);
    v1[51] = *v56;
    v1[52] = v56[1];
    v1[53] = *(void *)(*(void *)(v27 + 56) + 8 * v54);
    uint64_t v57 = qword_26B39D830;
    sub_25F70E570();
    sub_25F70E570();
    if (v57 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for logger();
    v1[54] = sub_25F67F3A4(v58, (uint64_t)qword_26B39D818);
    v1[37] = 0;
    v1[38] = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    v1[35] = 0xD00000000000002CLL;
    v1[36] = 0x800000025F718E70;
    sub_25F70E790();
    sub_25F68C2F0(v1[35], v1[36]);
    swift_bridgeObjectRelease();
    v1[55] = type metadata accessor for MiniTipsDatastore();
    if (qword_26B39E100 != -1) {
      swift_once();
    }
    sub_25F67D5C4();
    return MEMORY[0x270FA2498](v59, v60, v61);
  }
  unint64_t v5 = v0 + 2;
  uint64_t v85 = v0 + 43;
  uint64_t v6 = v0[44];
  uint64_t v7 = v0[45];
  sub_25F70E570();
  memcpy(v0 + 2, (const void *)(v6 + 32), 0xE8uLL);
  uint64_t v8 = (char *)(v6 + 264);
  uint64_t v9 = v4 - 1;
  uint64_t v83 = v1;
  uint64_t v84 = v1 + 31;
  uint64_t v71 = v7;
  __src = v1 + 2;
  while (1)
  {
    if (!*(void *)(v7 + 16)) {
      goto LABEL_27;
    }
    uint64_t v11 = v1[10];
    uint64_t v10 = v1[11];
    sub_25F6AA2C8(v5);
    sub_25F70E570();
    unint64_t v12 = sub_25F67AD88(v11, v10);
    if ((v13 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_25F6AA4B8(v5);
      goto LABEL_27;
    }
    uint64_t v14 = *(void *)(v7 + 56) + 88 * v12;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t v78 = *(void *)(v14 + 16);
    uint64_t v79 = *(void *)v14;
    uint64_t v17 = *(void **)(v14 + 32);
    char v77 = *(unsigned char *)(v14 + 40);
    uint64_t v18 = *(void *)(v14 + 56);
    uint64_t v81 = *(void *)(v14 + 48);
    char v80 = *(unsigned char *)(v14 + 64);
    uint64_t v19 = *(void *)(v14 + 72);
    char v82 = *(unsigned char *)(v14 + 80);
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    swift_bridgeObjectRelease();
    if (!v17[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_25F6AA4B8(v5);
      uint64_t v1 = v83;
      goto LABEL_27;
    }
    uint64_t v74 = v16;
    uint64_t v75 = v18;
    uint64_t v76 = v19;
    uint64_t v21 = v17[4];
    uint64_t v20 = v17[5];
    uint64_t v22 = *v85;
    uint64_t v23 = *(void *)(*v85 + 16);
    sub_25F70E570();
    uint64_t v73 = v17;
    uint64_t v1 = v83;
    uint64_t v24 = v84;
    if (!v23) {
      break;
    }
    sub_25F70E570();
    sub_25F67AD88(v21, v20);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      break;
    }
LABEL_19:
    uint64_t v39 = sub_25F6A6F98(v24, v21, v20);
    uint64_t v40 = *v38;
    if (*v38)
    {
      long long v41 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *long long v41 = v40;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25F6BE4B4();
        uint64_t v40 = v47;
        *long long v41 = v47;
      }
      unint64_t v43 = *(void *)(v40 + 16);
      if (v43 >= *(void *)(v40 + 24) >> 1)
      {
        sub_25F6BE4B4();
        uint64_t v40 = v48;
        *long long v41 = v48;
      }
      unint64_t v5 = __src;
      memcpy(__dst, __src, sizeof(__dst));
      *(void *)(v40 + 16) = v43 + 1;
      uint64_t v44 = v40 + 320 * v43;
      memcpy((void *)(v44 + 32), __dst, 0xE8uLL);
      *(void *)(v44 + 264) = v79;
      *(void *)(v44 + 272) = v15;
      *(void *)(v44 + 280) = v78;
      *(void *)(v44 + 288) = v74;
      *(void *)(v44 + 296) = v73;
      *(unsigned char *)(v44 + 304) = v77;
      int v45 = *(_DWORD *)&v87[3];
      *(_DWORD *)(v44 + 305) = *(_DWORD *)v87;
      *(_DWORD *)(v44 + 308) = v45;
      *(void *)(v44 + 312) = v81;
      *(void *)(v44 + 320) = v75;
      *(unsigned char *)(v44 + 328) = v80;
      int v46 = *(_DWORD *)((char *)v88 + 3);
      *(_DWORD *)(v44 + 329) = v88[0];
      *(_DWORD *)(v44 + 332) = v46;
      *(void *)(v44 + 336) = v76;
      *(unsigned char *)(v44 + 344) = v82;
      uint64_t v24 = v84;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v5 = __src;
      sub_25F6AA4B8(__src);
    }
    ((void (*)(void *, void))v39)(v24, 0);
    swift_bridgeObjectRelease();
    uint64_t v7 = v71;
LABEL_27:
    if (!v9)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v1[43];
      goto LABEL_30;
    }
    memcpy(v5, v8, 0xE8uLL);
    v8 += 232;
    --v9;
  }
  sub_25F70E570();
  swift_isUniquelyReferenced_nonNull_native();
  __dst[0] = v22;
  uint64_t v1 = (void *)v21;
  unint64_t v27 = sub_25F67AD88(v21, v20);
  unint64_t v29 = *(void *)(v22 + 16);
  if (__OFADD__(v29, (v28 & 1) == 0))
  {
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  unint64_t v30 = v27;
  char v31 = v28;
  sub_25F67ACD8(&qword_26A7B0F20);
  unint64_t v27 = sub_25F70F0A0();
  uint64_t v32 = (void *)__dst[0];
  if ((v27 & 1) == 0)
  {
LABEL_12:
    if (v31)
    {
      uint64_t v34 = v32[7];
      swift_bridgeObjectRelease();
      *(void *)(v34 + 8 * v30) = MEMORY[0x263F8EE78];
    }
    else
    {
      v32[(v30 >> 6) + 8] |= 1 << v30;
      long long v35 = (uint64_t *)(v32[6] + 16 * v30);
      *long long v35 = v21;
      v35[1] = v20;
      *(void *)(v32[7] + 8 * v30) = MEMORY[0x263F8EE78];
      uint64_t v36 = v32[2];
      BOOL v37 = __OFADD__(v36, 1);
      unint64_t v29 = v36 + 1;
      if (v37) {
        goto LABEL_56;
      }
      v32[2] = v29;
      sub_25F70E570();
    }
    *uint64_t v85 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v83;
    uint64_t v24 = v84;
    goto LABEL_19;
  }
  unint64_t v27 = sub_25F67AD88(v21, v20);
  if ((v31 & 1) == (v33 & 1))
  {
    unint64_t v30 = v27;
    goto LABEL_12;
  }
  sub_25F67D5C4();
  return sub_25F70F520();
}

uint64_t sub_25F6A6974()
{
  sub_25F67629C();
  uint64_t v1 = v0[48];
  static MiniTipsDatastore.resetModelManagers()();
  v0[56] = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25F6765E0();
    return MEMORY[0x270FA2498](v2, v3, v4);
  }
  else
  {
    unint64_t v5 = (void *)swift_task_alloc();
    v0[57] = v5;
    *unint64_t v5 = v0;
    v5[1] = sub_25F6A6A6C;
    uint64_t v6 = sub_25F682D1C(v0[51]);
    return sub_25F6A7060(v6, v7, v8);
  }
}

uint64_t sub_25F6A6A6C()
{
  sub_25F67629C();
  uint64_t v2 = *v1;
  sub_25F679DE0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25F6A6BA8()
{
  *(void *)(v0 + 328) = 0;
  *(void *)(v0 + 336) = 0xE000000000000000;
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 312) = 0xD00000000000002BLL;
  *(void *)(v0 + 320) = 0x800000025F718EA0;
  sub_25F70E790();
  sub_25F68C2F0(*(void *)(v0 + 312), *(void *)(v0 + 320));
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)())swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 400);
  *(void *)(v0 + 384) = *(void *)(v0 + 464);
  if (v5)
  {
    sub_25F672A04();
    unint64_t v9 = v8 | (v6 << 6);
    uint64_t v1 = *(uint64_t (**)())(v0 + 376);
LABEL_3:
    *(void *)(v0 + 392) = v6;
    *(void *)(v0 + 400) = v7;
    uint64_t v10 = (void *)(*((void *)v1 + 6) + 16 * v9);
    *(void *)(v0 + 408) = *v10;
    *(void *)(v0 + 416) = v10[1];
    *(void *)(v0 + 424) = *(void *)(*((void *)v1 + 7) + 8 * v9);
    uint64_t v11 = qword_26B39D830;
    sub_25F70E570();
    sub_25F70E570();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for logger();
    *(void *)(v0 + 432) = sub_25F67F3A4(v12, (uint64_t)qword_26B39D818);
    *(void *)(v0 + 296) = 0;
    *(void *)(v0 + 304) = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 280) = 0xD00000000000002CLL;
    *(void *)(v0 + 288) = 0x800000025F718E70;
    sub_25F70E790();
    sub_25F68C2F0(*(void *)(v0 + 280), *(void *)(v0 + 288));
    swift_bridgeObjectRelease();
    *(void *)(v0 + 440) = type metadata accessor for MiniTipsDatastore();
    if (qword_26B39E100 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_26B39E190;
    uint64_t v1 = sub_25F6A6974;
    uint64_t v3 = 0;
    return MEMORY[0x270FA2498](v1, v2, v3);
  }
  int64_t v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v14 = (1 << *(unsigned char *)(v0 + 472)) + 63;
  uint64_t v1 = *(uint64_t (**)())(v0 + 376);
  if (v13 < (uint64_t)(v14 >> 6))
  {
    uint64_t v15 = (char *)v1 + 64;
    unint64_t v16 = *((void *)v1 + v13 + 8);
    int64_t v6 = v4 + 1;
    if (v16)
    {
LABEL_13:
      uint64_t v7 = (v16 - 1) & v16;
      unint64_t v9 = __clz(__rbit64(v16)) + (v6 << 6);
      goto LABEL_3;
    }
    int64_t v17 = v14 >> 6;
    int64_t v6 = v13 + 1;
    if (v13 + 1 < v17)
    {
      unint64_t v16 = *(void *)&v15[8 * v6];
      if (v16) {
        goto LABEL_13;
      }
      int64_t v6 = v13 + 2;
      if (v13 + 2 < v17)
      {
        unint64_t v16 = *(void *)&v15[8 * v6];
        if (v16) {
          goto LABEL_13;
        }
        int64_t v18 = v13 + 3;
        if (v18 < v17)
        {
          unint64_t v16 = *(void *)&v15[8 * v18];
          if (v16)
          {
            int64_t v6 = v18;
            goto LABEL_13;
          }
          while (1)
          {
            int64_t v6 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              break;
            }
            if (v6 >= v17) {
              goto LABEL_24;
            }
            unint64_t v16 = *(void *)&v15[8 * v6];
            ++v18;
            if (v16) {
              goto LABEL_13;
            }
          }
LABEL_28:
          __break(1u);
          return MEMORY[0x270FA2498](v1, v2, v3);
        }
      }
    }
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F676894();
  return v19();
}

uint64_t sub_25F6A6ED0()
{
  sub_25F6759E0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F6A6F34()
{
  sub_25F6759E0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25F6759EC();
  return v0();
}

void (*sub_25F6A6F98(void *a1, uint64_t a2, uint64_t a3))(void **a1)
{
  int64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  void v6[4] = a3;
  sub_25F70E570();
  v6[5] = sub_25F6AA6A8(v6, a2, a3);
  return sub_25F6A7018;
}

void sub_25F6A7018(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = sub_25F67D8BC();
  v3(v2);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_25F6A7060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  type metadata accessor for MiniTipsDatastore();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[10] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_25F6A711C;
  return static MiniTipsDatastore.datastore(appleBundleID:)(a1, a2);
}

uint64_t sub_25F6A711C()
{
  sub_25F6759E0();
  sub_25F67CA40();
  sub_25F679DE0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_25F6759EC();
    return v5();
  }
  else
  {
    sub_25F6765E0();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
}

uint64_t sub_25F6A721C()
{
  sub_25F6759E0();
  int64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26A7B1DA0 + dword_26A7B1DA0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25F6A72D4;
  uint64_t v2 = sub_25F682D1C(*(void *)(v0 + 64));
  return v6(v2, v3, v4);
}

void sub_25F6A72D4()
{
  sub_25F67629C();
  sub_25F67CA40();
  uint64_t v3 = v2;
  sub_25F679DE0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  v3[13] = v6;
  swift_task_dealloc();
  if (v0)
  {
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v3[14] = (uint64_t)v7;
    *uint64_t v7 = v5;
    v7[1] = sub_25F6A7414;
    uint64_t v8 = sub_25F682D1C(v3[6]);
    sub_25F6A8040(v8, v9, v10);
  }
}

uint64_t sub_25F6A7414()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  sub_25F679DE0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25F679DE0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25F6A74FC()
{
  sub_25F67629C();
  uint64_t v1 = sub_25F6AA1A0(v0[13]);
  uint64_t v2 = sub_25F690418(v1);
  v0[16] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F6A75C0;
  uint64_t v4 = sub_25F682D1C(v0[6]);
  return sub_25F6A8294(v4, v5, v2, v6);
}

uint64_t sub_25F6A75C0()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  sub_25F679DE0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25F679DE0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25F6A76A8()
{
  sub_25F6759E0();
  sub_25F677E44();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25F6A7740;
  return sub_25F65809C();
}

uint64_t sub_25F6A7740()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F679DE0();
  void *v2 = v1;
  swift_task_dealloc();
  swift_release();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25F6A7828()
{
  sub_25F6759E0();
  swift_release();
  sub_25F676894();
  return v0();
}

uint64_t sub_25F6A7880()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (qword_26A7B1128 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25F67925C();
  sub_25F67F3A4(v2, (uint64_t)qword_26A7B1BC8);
  sub_25F6762A8();
  sub_25F679510();
  sub_25F70E790();
  sub_25F70E790();
  swift_getErrorValue();
  sub_25F70F2F0();
  sub_25F68C2F0(v5, v6);
  swift_bridgeObjectRelease();

  sub_25F677E44();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F6A7740;
  return sub_25F65809C();
}

uint64_t sub_25F6A79EC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 144);
  if (qword_26A7B1128 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25F67925C();
  sub_25F67F3A4(v2, (uint64_t)qword_26A7B1BC8);
  sub_25F6762A8();
  sub_25F679510();
  sub_25F70E790();
  sub_25F70E790();
  swift_getErrorValue();
  sub_25F70F2F0();
  sub_25F68C2F0(v5, v6);
  swift_bridgeObjectRelease();

  sub_25F677E44();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F6A7740;
  return sub_25F65809C();
}

uint64_t sub_25F6A7B60(uint64_t a1, const void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v21 = v4 + 2;
  uint64_t v8 = v4 + 31;
  uint64_t v22 = v4 + 31;
  v4[86] = a1;
  uint64_t v24 = (uint64_t)(v4 + 60);
  uint64_t v25 = (uint64_t)(v4 + 71);
  memcpy(v4 + 2, a2, 0xE8uLL);
  uint64_t v9 = a3[1];
  uint64_t v10 = a3[3];
  uint64_t v19 = a3[2];
  uint64_t v20 = *a3;
  uint64_t v11 = a3[4];
  char v12 = *((unsigned char *)a3 + 40);
  uint64_t v13 = a3[7];
  uint64_t v18 = a3[6];
  char v17 = *((unsigned char *)a3 + 64);
  uint64_t v14 = a3[9];
  LOBYTE(a3) = *((unsigned char *)a3 + 80);
  memcpy(v8, a2, 0xE8uLL);
  v7[71] = v20;
  v7[72] = v9;
  v7[73] = v19;
  v7[74] = v10;
  v7[75] = v11;
  *((unsigned char *)v7 + 608) = v12;
  v7[77] = v18;
  v7[78] = v13;
  *((unsigned char *)v7 + 632) = v17;
  v7[80] = v14;
  *((unsigned char *)v7 + 648) = (_BYTE)a3;
  sub_25F6AA2C8(v21);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  swift_retain();
  uint64_t v15 = (void *)swift_task_alloc();
  v7[87] = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_25F6A7D04;
  return sub_25F6BA040(v24, v22, v25, a4);
}

uint64_t sub_25F6A7D04()
{
  sub_25F6759E0();
  sub_25F67CA40();
  sub_25F679DE0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25F679DE0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 704) = v0;
  swift_task_dealloc();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25F6A7DE4()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = 256;
  if (*(unsigned char *)(v0 + 521)) {
    uint64_t v5 = 256;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | *(unsigned __int8 *)(v0 + 520);
  uint64_t v7 = 0x10000;
  if (*(unsigned char *)(v0 + 522)) {
    uint64_t v8 = 0x10000;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v6 | v8;
  if (!*(unsigned char *)(v0 + 545)) {
    uint64_t v4 = 0;
  }
  uint64_t v10 = v4 | *(unsigned __int8 *)(v0 + 544);
  if (!*(unsigned char *)(v0 + 546)) {
    uint64_t v7 = 0;
  }
  uint64_t v11 = 0x1000000;
  if (!*(unsigned char *)(v0 + 547)) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v10 | v7 | v11;
  uint64_t v13 = 0x100000000;
  if (!*(unsigned char *)(v0 + 548)) {
    uint64_t v13 = 0;
  }
  long long v14 = *(_OWORD *)(v0 + 496);
  long long v15 = *(_OWORD *)(v0 + 528);
  long long v16 = *(_OWORD *)(v0 + 552);
  *(void *)uint64_t v1 = *(void *)(v0 + 480);
  *(void *)(v1 + 8) = v2;
  *(_OWORD *)(v1 + 16) = v14;
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v9;
  *(_OWORD *)(v1 + 48) = v15;
  *(void *)(v1 + 64) = v12 | v13;
  *(_OWORD *)(v1 + 72) = v16;
  sub_25F6759EC();
  return v17();
}

void sub_25F6A7EA8()
{
  if (qword_26A7B1128 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 704);
  uint64_t v2 = *(void *)(v0 + 688);
  uint64_t v3 = type metadata accessor for logger();
  sub_25F67F3A4(v3, (uint64_t)qword_26A7B1BC8);
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  swift_getErrorValue();
  sub_25F70F2F0();
  sub_25F68C2F0(0, 0xE000000000000000);
  swift_bridgeObjectRelease();

  *(void *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)uint64_t v2 = 0u;
  sub_25F6759EC();
  sub_25F674F14();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_25F6A8040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25F6A8064, 0, 0);
}

uint64_t sub_25F6A8064()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_25F674D34();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25F6A814C;
  return v6();
}

uint64_t sub_25F6A814C()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  sub_25F679DE0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25F679DE0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25F6A8238()
{
  sub_25F6759E0();
  swift_release();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F6A8294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a3;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_25F6A82B4, 0, 0);
}

uint64_t sub_25F6A82B4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  sub_25F674D34();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25F6A8398;
  return v5();
}

uint64_t sub_25F6A8398()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  sub_25F679DE0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_25F679DE0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25F6A8480()
{
  sub_25F6759E0();
  swift_release();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F6A84DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  void v4[4] = a2;
  uint64_t v5 = sub_25F67ACD8(&qword_26B39D800);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  sub_25F67ACD8(&qword_26B39DBD8);
  v4[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6A85D4, 0, 0);
}

uint64_t sub_25F6A85D4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  sub_25F67ACD8(&qword_26B39DE58);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25F711040;
  *(void *)(v4 + 32) = swift_getKeyPath();
  sub_25F70E930();
  sub_25F67ACD8(&qword_26B39D658);
  sub_25F67ACD8(&qword_26B39D440);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25F710D20;
  swift_getKeyPath();
  sub_25F6AB458((uint64_t)&qword_26B39D7F0);
  sub_25F70DB40();
  sub_25F674004(v1, 1, 1, v2);
  uint64_t v6 = MEMORY[0x263F8EE78];
  v0[2] = MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)swift_task_alloc();
  long long v7[2] = sub_25F6A8A10;
  v7[3] = 0;
  void v7[4] = v0 + 2;
  sub_25F6A9CE8(v3, 100, 0, 1000, 0, 0, 1, 0, v6, v4, v5, 1, v1, (void (*)(uint64_t))sub_25F6AB10C, (uint64_t)v7);
  uint64_t v8 = v0[2];
  sub_25F67EFC0(v0[10], &qword_26B39DBD8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16))
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for logger();
    sub_25F67F3A4(v9, (uint64_t)qword_26B39D818);
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70E790();
    sub_25F68C2F0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    *(void *)(swift_task_alloc() + 16) = v8;
    v0[3] = type metadata accessor for CoreTipRecord();
    sub_25F70DFA0();
    swift_bridgeObjectRelease();
    sub_25F675DE0();
    sub_25F6F95F0();
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    swift_task_dealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F676894();
  return v10();
}

uint64_t sub_25F6A8A10@<X0>(uint64_t a1@<X8>)
{
  CoreTipRecord.id.getter();
  if (qword_26B39D9A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_25F67ACD8(&qword_26B39E0B0);
  sub_25F67F3A4(v2, (uint64_t)qword_26B39D9B8);
  sub_25F67F3DC();
  sub_25F682540((uint64_t)&qword_26B39E0B8);
  char v3 = sub_25F70E640();
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_25F6AB458((uint64_t)&qword_26B39DD08);
    sub_25F70E220();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = sub_25F70E3C0();
  return sub_25F674004(a1, v4, 1, v5);
}

uint64_t sub_25F6A8BBC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D7D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D400);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26A7B1480);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1;
  sub_25F67ACD8(&qword_26A7B1488);
  sub_25F70DD00();
  sub_25F682540((uint64_t)&qword_26B39D7D0);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  a2[3] = sub_25F67ACD8(&qword_26A7B1490);
  a2[4] = sub_25F6AB180();
  sub_25F677CCC(a2);
  sub_25F682540((uint64_t)&unk_26A7B14B8);
  sub_25F682540((uint64_t)&qword_26B39D3F8);
  sub_25F682540((uint64_t)&unk_26A7B14C0);
  sub_25F6AB458((uint64_t)&qword_26B39DB60);
  uint64_t v19 = v22;
  sub_25F70DC30();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_25F6A8F64()
{
  return sub_25F70E220();
}

uint64_t sub_25F6A8FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  sub_25F67ACD8(&qword_26B39DBD8);
  v3[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6A9074, 0, 0);
}

uint64_t sub_25F6A9074()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  *(void *)(swift_task_alloc() + 16) = v2;
  v0[2] = type metadata accessor for CoreTipRecord();
  sub_25F70DFA0();
  uint64_t v3 = sub_25F67ACD8(&qword_26B39D800);
  sub_25F674004(v1, 0, 1, v3);
  sub_25F675DE0();
  sub_25F6E7F8C();
  unint64_t v5 = v4;
  sub_25F67EFC0(v0[5], &qword_26B39DBD8);
  if (v5 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  sub_25F70E570();
  for (; v6; uint64_t v6 = sub_25F70F100())
  {
    uint64_t v7 = 0;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        MEMORY[0x2611FBA70](v7, v5);
      }
      else {
        swift_retain();
      }
      uint64_t v8 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      sub_25F6EB928();
      swift_release();
      ++v7;
      if (v8 == v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    swift_retain();
    sub_25F70E570();
  }
LABEL_9:
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F676894();
  return v9();
}

uint64_t sub_25F6A927C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v75 = a3;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D488);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  uint64_t v72 = v5;
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v63 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F67ACD8(&qword_26B39CD00);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  uint64_t v68 = v9;
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v60 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25F67ACD8(&qword_26A7B10C0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v69 = v12;
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v12, v14);
  uint64_t v64 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_25F67ACD8(&qword_26A7B10F0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v73 = v16;
  uint64_t v74 = v17;
  MEMORY[0x270FA5388](v16, v18);
  uint64_t v66 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25F67ACD8(&qword_26A7B1098);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v57 = v20;
  uint64_t v58 = v21;
  MEMORY[0x270FA5388](v20, v22);
  uint64_t v24 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_25F67ACD8(&qword_26B39D7D8);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25, v27);
  unint64_t v29 = (char *)v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_25F67ACD8(&qword_26A7B10D8);
  uint64_t v30 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56, v31);
  char v33 = (char *)v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_25F67ACD8(&qword_26A7B1108);
  uint64_t v65 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62, v34);
  uint64_t v59 = (char *)v53 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *a1;
  sub_25F682540((uint64_t)&qword_26B39D7D0);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v26 + 8);
  v53[1] = v26 + 8;
  unint64_t v54 = v36;
  v36(v29, v25);
  type metadata accessor for CoreTip.ConstellationContent();
  sub_25F70DC60();
  v53[0] = MEMORY[0x263F06CB0];
  sub_25F682540((uint64_t)&unk_26A7B10D0);
  sub_25F682540((uint64_t)&unk_26A7B1090);
  sub_25F6AACA8();
  uint64_t v37 = v56;
  uint64_t v38 = v57;
  sub_25F70DC20();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v24, v38);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v37);
  uint64_t v76 = v61;
  sub_25F67ACD8(&qword_26B39CD08);
  uint64_t v39 = v60;
  sub_25F70DD00();
  sub_25F70DD10();
  swift_getKeyPath();
  uint64_t v40 = v63;
  sub_25F70DBF0();
  swift_release();
  v54(v29, v25);
  sub_25F682540((uint64_t)&unk_26B39CCF8);
  sub_25F682540((uint64_t)&unk_26B39D480);
  sub_25F682540((uint64_t)&unk_26B39CD18);
  long long v41 = v64;
  uint64_t v42 = v40;
  uint64_t v43 = v67;
  uint64_t v44 = v71;
  sub_25F70DC30();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v43);
  sub_25F682540((uint64_t)&unk_26A7B10B8);
  int v45 = v66;
  uint64_t v46 = v69;
  sub_25F70DC10();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v46);
  uint64_t v47 = sub_25F67ACD8(&qword_26A7B10A8);
  uint64_t v48 = v75;
  v75[3] = v47;
  v48[4] = sub_25F6AAD54();
  sub_25F677CCC(v48);
  sub_25F682540((uint64_t)&unk_26A7B1100);
  sub_25F682540((uint64_t)&unk_26A7B10E8);
  char v49 = v59;
  uint64_t v50 = v62;
  uint64_t v51 = v73;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v45, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v49, v50);
}

uint64_t ConstellationIngestor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ConstellationIngestor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t ConstellationIngestor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25F6A9B3C()
{
  return ConstellationIngestor.unownedExecutor.getter();
}

uint64_t sub_25F6A9B58()
{
  sub_25F70DA30();
  swift_allocObject();
  sub_25F70DA20();
  sub_25F67ACD8(&qword_26A7B0E58);
  sub_25F6AB49C();
  sub_25F70DA10();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_25F6A9C00()
{
  sub_25F70DA30();
  swift_allocObject();
  sub_25F70DA20();
  sub_25F67ACD8(&qword_26A7B0EB0);
  sub_25F6AAF40((uint64_t)&unk_26A7B0EB8);
  sub_25F70DA10();
  uint64_t result = swift_release();
  if (!v0) {
    return v2;
  }
  return result;
}

void sub_25F6A9CE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void (*a14)(uint64_t), uint64_t a15)
{
  uint64_t v16 = a6;
  if (a3)
  {
    sub_25F6E7F8C();
    if (v15) {
      return;
    }
    sub_25F6A56D0(v23, a14);
    goto LABEL_10;
  }
  if (a5)
  {
    if (a7) {
      a6 = 0;
    }
    a4 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_15;
  }
  if (a7)
  {
    a6 = 0;
LABEL_15:
    sub_25F6A9CE8(a1, a2, 0, a4, 0, a6, 0, a8 & 1, a9, a10, a11, a12 & 1, a13, a14, a15);
    return;
  }
  sub_25F6E7F8C();
  if (v15) {
    return;
  }
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  unint64_t v21 = v20 >> 62;
  if (v20 >> 62)
  {
    unint64_t v31 = v20 >> 62;
    unint64_t v28 = v20;
    sub_25F70E570();
    uint64_t v29 = sub_25F70F100();
    swift_bridgeObjectRelease();
    unint64_t v20 = v28;
    unint64_t v21 = v31;
    if (v29) {
      goto LABEL_7;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_7:
  unint64_t v22 = v20;
  sub_25F6A56D0(v20, a14);
  unint64_t v30 = v21;
  if (a12) {
    sub_25F70E120();
  }
  uint64_t v24 = v16 + v33;
  if (__OFADD__(v16, v33))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v30)
  {
    sub_25F70E570();
    uint64_t v25 = sub_25F70F100();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v25 == v33 && v24 < a4)
  {
    if (!__OFSUB__(a4, v24))
    {
      if (a4 - v24 >= v33) {
        uint64_t v27 = v33;
      }
      else {
        uint64_t v27 = a4 - v24;
      }
      sub_25F6A9CE8(v32, v27, 0, a4, 0, v24, 0, a8 & 1, a9, a10, a11, a12 & 1, a13, a14, a15);
      return;
    }
LABEL_36:
    __break(1u);
  }
}

uint64_t sub_25F6A9F94(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v8 - 8, v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25F70E3C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a2(a1);
  if (!v4)
  {
    if (sub_25F67D9DC((uint64_t)v11, 1, v12) == 1)
    {
      return sub_25F67EFC0((uint64_t)v11, &qword_26B39DF68);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
      sub_25F67ED98((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25F6BE6B0);
      uint64_t v18 = *(void *)(*a4 + 16);
      sub_25F67ED38(v18, (uint64_t (*)(BOOL))sub_25F6BE6B0);
      uint64_t v19 = *a4;
      *(void *)(v19 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 16))(v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v18, v16, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
  }
  return result;
}

uint64_t sub_25F6AA1A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_25F686110();
  if (v2)
  {
    sub_25F70E570();
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = *(void *)(v10 + 16);
      unint64_t v6 = *(void *)(v10 + 24);
      sub_25F70E570();
      if (v7 >= v6 >> 1) {
        sub_25F686110();
      }
      v3 += 11;
      *(void *)(v10 + 16) = v7 + 1;
      uint64_t v8 = v10 + 16 * v7;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = v4;
      --v2;
    }
    while (v2);
  }
  else
  {
    sub_25F70E570();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t type metadata accessor for ConstellationIngestor()
{
  return self;
}

uint64_t method lookup function for ConstellationIngestor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ConstellationIngestor);
}

void *sub_25F6AA2C8(void *a1)
{
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[13];
  uint64_t v3 = a1[16];
  uint64_t v4 = a1[15];
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F6AA3E4(v6, v5, v4, v3);
  return a1;
}

void sub_25F6AA3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_25F70E570();
    sub_25F6774C8(a3, a4);
  }
}

void *sub_25F6AA4B8(void *a1)
{
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[13];
  uint64_t v3 = a1[16];
  uint64_t v4 = a1[15];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25F6AA5D4(v6, v5, v4, v3);
  return a1;
}

void sub_25F6AA5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_25F67739C(a3, a4);
  }
}

void (*sub_25F6AA6A8(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_25F70E570();
  v6[9] = sub_25F6AA940(v6);
  v6[10] = sub_25F6AA7BC(v6 + 4, a2, a3);
  return sub_25F6AA754;
}

void sub_25F6AA754(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_25F67D8BC();
  v2(v3);
  free(v1);
}

void (*sub_25F6AA7BC(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  id v8[2] = a3;
  long long v8[3] = v3;
  v8[1] = a2;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_25F67AD88(a2, a3);
  *((unsigned char *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(void *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  sub_25F67ACD8(&qword_26A7B0F20);
  if (sub_25F70F0A0())
  {
    unint64_t v14 = sub_25F67AD88(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      unint64_t v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **))sub_25F70F520();
    __break(1u);
    return result;
  }
LABEL_5:
  void v8[4] = v12;
  if (v13) {
    uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v12);
  }
  else {
    uint64_t v16 = 0;
  }
  *uint64_t v8 = v16;
  return sub_25F6AA8F0;
}

void sub_25F6AA8F0(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_25F6AA97C(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_25F6AA940(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_25F6AA970;
}

uint64_t sub_25F6AA970(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_25F6AA97C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v6;
    }
    else
    {
      sub_25F6E6794(a4, a5, a6, v6, *a3);
      sub_25F70E570();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_25F67ACD8(&qword_26A7B0EA8);
    sub_25F70F0C0();
  }
  return sub_25F70E570();
}

uint64_t sub_25F6AAA50()
{
  sub_25F67629C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_25F6765EC(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_25F6AAAF8;
  return sub_25F6A7B60(v6, v4, v2, v0);
}

uint64_t sub_25F6AAAF8()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F679DE0();
  void *v2 = v1;
  swift_task_dealloc();
  sub_25F6759EC();
  return v3();
}

uint64_t sub_25F6AABBC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25F6AABF4()
{
  sub_25F67629C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_25F6765EC(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25F6AAAF8;
  return sub_25F6A8FE0(v4, v2, v5);
}

uint64_t sub_25F6AAC98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6A927C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_25F6AACA8()
{
  unint64_t result = qword_26A7B1110;
  if (!qword_26A7B1110)
  {
    sub_25F682580(&qword_26B39D808);
    sub_25F6AB458((uint64_t)&unk_26A7B1118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1110);
  }
  return result;
}

unint64_t sub_25F6AAD54()
{
  unint64_t result = qword_26A7B10A0;
  if (!qword_26A7B10A0)
  {
    sub_25F682580(&qword_26A7B10A8);
    sub_25F6AAE08();
    sub_25F6AAF40((uint64_t)&unk_26A7B10E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B10A0);
  }
  return result;
}

unint64_t sub_25F6AAE08()
{
  unint64_t result = qword_26A7B10F8;
  if (!qword_26A7B10F8)
  {
    sub_25F682580(&qword_26A7B1108);
    sub_25F6AAEA8();
    sub_25F682540((uint64_t)&unk_26A7B1088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B10F8);
  }
  return result;
}

unint64_t sub_25F6AAEA8()
{
  unint64_t result = qword_26A7B10C8;
  if (!qword_26A7B10C8)
  {
    sub_25F682580(&qword_26A7B10D8);
    sub_25F682540((uint64_t)&qword_26B39D7C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B10C8);
  }
  return result;
}

unint64_t sub_25F6AAF40(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_25F682580(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25F6AAFA8()
{
  unint64_t result = qword_26A7B10B0;
  if (!qword_26A7B10B0)
  {
    sub_25F682580(&qword_26A7B10C0);
    sub_25F655698();
    sub_25F696AB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B10B0);
  }
  return result;
}

uint64_t sub_25F6AB024()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25F6AB05C()
{
  sub_25F67629C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)sub_25F6765EC(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_25F6AB5B0;
  return sub_25F6A84DC(v4, v2, v6, v5);
}

uint64_t sub_25F6AB10C(uint64_t a1)
{
  return sub_25F6A9F94(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_25F6AB12C@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6A8BBC(*(void *)(v1 + 16), a1);
}

unint64_t sub_25F6AB134()
{
  return sub_25F6AB458((uint64_t)&qword_26B39DD08);
}

unint64_t sub_25F6AB180()
{
  unint64_t result = qword_26A7B1498;
  if (!qword_26A7B1498)
  {
    sub_25F682580(&qword_26A7B1490);
    sub_25F6AB1FC();
    sub_25F6AB3C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1498);
  }
  return result;
}

unint64_t sub_25F6AB1FC()
{
  unint64_t result = qword_26A7B14A0;
  if (!qword_26A7B14A0)
  {
    sub_25F682580(&qword_26A7B1480);
    sub_25F6AB278();
    sub_25F6AB31C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14A0);
  }
  return result;
}

unint64_t sub_25F6AB278()
{
  unint64_t result = qword_26A7B14A8;
  if (!qword_26A7B14A8)
  {
    sub_25F682580(&qword_26A7B1488);
    sub_25F6AB458((uint64_t)&qword_26B39DB68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14A8);
  }
  return result;
}

unint64_t sub_25F6AB31C()
{
  unint64_t result = qword_26A7B14B0;
  if (!qword_26A7B14B0)
  {
    sub_25F682580(&qword_26A7B1488);
    sub_25F6AB458((uint64_t)&qword_26B39DB58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14B0);
  }
  return result;
}

unint64_t sub_25F6AB3C0()
{
  unint64_t result = qword_26B39D3F0;
  if (!qword_26B39D3F0)
  {
    sub_25F682580(&qword_26B39D400);
    sub_25F682540((uint64_t)&qword_26B39D7C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D3F0);
  }
  return result;
}

unint64_t sub_25F6AB458(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25F6AB49C()
{
  unint64_t result = qword_26A7B0E60;
  if (!qword_26A7B0E60)
  {
    sub_25F682580(&qword_26A7B0E58);
    sub_25F6AB518();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0E60);
  }
  return result;
}

unint64_t sub_25F6AB518()
{
  unint64_t result = qword_26A7B0D70;
  if (!qword_26A7B0D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D70);
  }
  return result;
}

unint64_t sub_25F6AB564()
{
  unint64_t result = qword_26A7B0C48;
  if (!qword_26A7B0C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C48);
  }
  return result;
}

void *sub_25F6AB5B4(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25F70E570();
  return a1;
}

void *sub_25F6AB5E4(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_25F6AB620(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *sub_25F6AB62C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25F6AB660(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6AB6B4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for ConstellationEventMetadata()
{
}

void type metadata accessor for ConstellationEventValue()
{
}

uint64_t sub_25F6AB724(uint64_t a1)
{
  return sub_25F67A28C(a1 + 24);
}

uint64_t sub_25F6AB754(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  sub_25F70E570();
  v6(a1 + 24, v4, v5);
  return a1;
}

uint64_t sub_25F6AB7E0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  sub_25F69A6F8((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

__n128 sub_25F6AB84C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_25F6AB868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  sub_25F67A28C(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_25F6AB8C0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6AB900(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationPreconditionsRuleInfo()
{
}

uint64_t sub_25F6AB958(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F6AB9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  sub_25F70E570();
  if (v5 == 1)
  {
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v8 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v8;
    uint64_t v9 = *(void *)(a2 + 112);
    uint64_t v10 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = v9;
    *(void *)(a1 + 120) = v10;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
  }
  return a1;
}

uint64_t sub_25F6ABA9C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      uint64_t v8 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 16);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
    return a1;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6ABC8C(uint64_t a1)
{
  return a1;
}

void *sub_25F6ABCE0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_25F6ABCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      uint64_t v8 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 16);
  }
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x70uLL);
  return a1;
}

uint64_t sub_25F6ABDD0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6ABE10(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Icon()
{
}

uint64_t sub_25F6ABE7C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F6ABEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  sub_25F70E570();
  sub_25F70E570();
  if (v6 == 1)
  {
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    uint64_t v9 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v9;
    uint64_t v10 = *(void *)(a2 + 128);
    uint64_t v11 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v10;
    *(void *)(a1 + 136) = v11;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
  }
  return a1;
}

uint64_t sub_25F6ABFD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v7;
      uint64_t v8 = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 96) = v8;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 32);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6AC1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v9 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 32);
  }
  memcpy((void *)(a1 + 32), (const void *)(a2 + 32), 0x70uLL);
  return a1;
}

uint64_t sub_25F6AC2E0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 144))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6AC320(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Action()
{
}

uint64_t sub_25F6AC390()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6AC3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6AC47C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

void *sub_25F6AC554(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

uint64_t sub_25F6AC55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t sub_25F6AC5EC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6AC62C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationDeliveryInfo()
{
}

uint64_t sub_25F6AC690(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 112);
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + 128);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_25F6AC744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  if (v10)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v10;
    uint64_t v11 = *(void *)(a2 + 128);
    sub_25F70E570();
    if (v11 != 1)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v11;
      uint64_t v15 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v15;
      uint64_t v16 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v16;
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      uint64_t v17 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;
      uint64_t v18 = *(void *)(a2 + 216);
      uint64_t v19 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = v18;
      *(void *)(a1 + 224) = v19;
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      return a1;
    }
    unint64_t v12 = (void *)(a1 + 120);
    char v13 = (const void *)(a2 + 120);
    size_t v14 = 112;
  }
  else
  {
    unint64_t v12 = (void *)(a1 + 104);
    char v13 = (const void *)(a2 + 104);
    size_t v14 = 128;
  }
  memcpy(v12, v13, v14);
  return a1;
}

uint64_t sub_25F6AC8B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 112);
  if (!*(void *)(a1 + 112))
  {
    if (v4)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v6 = *(void *)(a2 + 128);
      sub_25F70E570();
      if (v6 == 1)
      {
        uint64_t v7 = (void *)(a1 + 120);
        uint64_t v8 = (const void *)(a2 + 120);
LABEL_15:
        size_t v9 = 112;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v7 = (void *)(a1 + 104);
    uint64_t v8 = (const void *)(a2 + 104);
    size_t v9 = 128;
LABEL_16:
    memcpy(v7, v8, v9);
    return a1;
  }
  if (!v4)
  {
    sub_25F6ACBF0(a1 + 104);
    goto LABEL_10;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128) != 1)
  {
    if (v5 != 1)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 168) = v13;
      uint64_t v14 = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = v14;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 120);
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    uint64_t v7 = (void *)(a1 + 120);
    uint64_t v8 = (const void *)(a2 + 120);
    goto LABEL_15;
  }
LABEL_11:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v10 = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 168) = v10;
  uint64_t v11 = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 184) = v11;
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6ACBF0(uint64_t a1)
{
  return a1;
}

void *sub_25F6ACC20(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

uint64_t sub_25F6ACC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 112)) {
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(a2 + 112);
  if (!v9)
  {
    sub_25F6ACBF0(a1 + 104);
LABEL_8:
    uint64_t v11 = (void *)(a1 + 104);
    unint64_t v12 = (const void *)(a2 + 104);
    size_t v13 = 128;
    goto LABEL_9;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128) != 1)
  {
    uint64_t v10 = *(void *)(a2 + 128);
    if (v10 != 1)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v10;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v16;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      uint64_t v17 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 224);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v18;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 120);
  }
  uint64_t v11 = (void *)(a1 + 120);
  unint64_t v12 = (const void *)(a2 + 120);
  size_t v13 = 112;
LABEL_9:
  memcpy(v11, v12, v13);
  return a1;
}

uint64_t sub_25F6ACDBC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 232))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6ACDFC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationDocument()
{
}

uint64_t sub_25F6ACE80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74616C6572726F63 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726576696C6564 && a2 == 0xEE0064496F666E49)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6ACFB8(char a1)
{
  if (a1) {
    return 0x79726576696C6564;
  }
  else {
    return 0x74616C6572726F63;
  }
}

uint64_t sub_25F6AD00C()
{
  return sub_25F6ACFB8(*v0);
}

uint64_t sub_25F6AD014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6ACE80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6AD03C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B36F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AD078(uint64_t a1)
{
  unint64_t v2 = sub_25F6B36F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AD0B4()
{
  sub_25F672A18();
  unint64_t v2 = v1;
  sub_25F67ACD8(&qword_26A7B0F50);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F6768BC();
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B36F4();
  sub_25F70F640();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    sub_25F682C20();
    sub_25F70E570();
    sub_25F682C20();
    uint64_t v5 = sub_25F6759F8();
    v6(v5);
    sub_25F70E570();
    sub_25F67A28C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25F675E04();
}

uint64_t sub_25F6AD22C()
{
  return sub_25F70F5D0();
}

uint64_t sub_25F6AD254(uint64_t a1, uint64_t a2)
{
  if (a1 == 1768843629 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6AD2CC()
{
  return 0;
}

uint64_t sub_25F6AD2D8()
{
  return 1768843629;
}

void sub_25F6AD2E8()
{
  sub_25F672A18();
  sub_25F6B5894();
  sub_25F67ACD8(&qword_26A7B0F58);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F67D5E0();
  sub_25F6B3740();
  sub_25F67855C();
  if (!v1)
  {
    sub_25F6B378C();
    sub_25F6B5860();
    uint64_t v5 = sub_25F6759F8();
    v6(v5);
    memcpy(v2, v7, 0x98uLL);
  }
  sub_25F67A28C(v0);
  sub_25F675E04();
}

uint64_t sub_25F6AD3DC()
{
  unint64_t v0 = sub_25F70F160();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_25F6AD42C()
{
  return 4;
}

uint64_t sub_25F6AD434(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 2036625250;
      break;
    case 2:
      uint64_t result = sub_25F68EEE8(0x69746361u);
      break;
    case 3:
      uint64_t result = 1852793705;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6AD4AC(char a1)
{
  uint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      uint64_t result = 2036625250;
      break;
    case 2:
      uint64_t result = 0x736E6F69746361;
      break;
    case 3:
      uint64_t result = 1852793705;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25F6AD52C(void *a1@<X8>)
{
  sub_25F6AD0B4();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

uint64_t sub_25F6AD560()
{
  return sub_25F6B18A4();
}

uint64_t sub_25F6AD584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AD254(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6AD5B0()
{
  return sub_25F6AD2CC();
}

uint64_t sub_25F6AD5CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _sSQ10TipKitCoreE10isNotEqual_12checkReverseSbypSg_SbtFfA0__0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25F6AD5F8(uint64_t a1)
{
  unint64_t v2 = sub_25F6B3740();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AD634(uint64_t a1)
{
  unint64_t v2 = sub_25F6B3740();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AD670()
{
}

uint64_t sub_25F6AD688(unsigned __int8 *a1, char *a2)
{
  return sub_25F6CC41C(*a1, *a2);
}

uint64_t sub_25F6AD694()
{
  return sub_25F6D9EF8();
}

uint64_t sub_25F6AD69C()
{
  return sub_25F6DA1B4();
}

uint64_t sub_25F6AD6A4()
{
  return sub_25F6DA830();
}

uint64_t sub_25F6AD6AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AD3DC();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AD6DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6AD434(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25F6AD708()
{
  return sub_25F6AD4AC(*v0);
}

uint64_t sub_25F6AD710@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AD428();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AD738()
{
  return sub_25F6AD2CC();
}

uint64_t sub_25F6AD758@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AD42C();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AD780(uint64_t a1)
{
  unint64_t v2 = sub_25F6B441C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AD7BC(uint64_t a1)
{
  unint64_t v2 = sub_25F6B441C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AD7F8()
{
  sub_25F672A18();
  unint64_t v2 = v1;
  uint64_t v10 = v3;
  sub_25F67ACD8(&qword_26A7B0F38);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F674D58();
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B441C();
  sub_25F67927C();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    uint64_t v9 = (uint64_t)v2;
    sub_25F67ACD8(&qword_26B39D068);
    sub_25F6B4F6C(&qword_26B39D070, &qword_26B39D068, (void (*)(void))sub_25F695278);
    sub_25F70F200();
    v15[0] = v13[0];
    sub_25F6B4468();
    sub_25F70F1C0();
    uint64_t v6 = v13[0];
    v15[1] = v13[0];
    sub_25F67ACD8(&qword_26A7B0E90);
    LOBYTE(v12[0]) = 2;
    sub_25F6B4F6C(&qword_26A7B0E98, &qword_26A7B0E90, (void (*)(void))sub_25F6B44B4);
    sub_25F70E570();
    sub_25F70F1C0();
    uint64_t v7 = v13[0];
    _OWORD v15[2] = v13[0];
    sub_25F6B4500();
    sub_25F70E570();
    sub_25F70F1C0();
    sub_25F67E33C();
    v8();
    sub_25F6B454C((uint64_t)&v14, (uint64_t)v11);
    sub_25F6B454C((uint64_t)v11, (uint64_t)&v15[3]);
    v12[0] = v15[0];
    v12[1] = v6;
    v12[2] = v7;
    sub_25F6B454C((uint64_t)v11, (uint64_t)&v12[3]);
    sub_25F70E570();
    sub_25F6B45B4(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v10, v12, 0x98uLL);
    sub_25F67A28C(v9);
    memcpy(v13, v15, sizeof(v13));
    sub_25F6B4688(v13);
  }
  sub_25F675E04();
}

uint64_t sub_25F6ADC28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6ADCB0()
{
  return 0x746E65746E6F63;
}

uint64_t sub_25F6ADCC8(void *a1)
{
  sub_25F67ACD8(&qword_26A7B0F60);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6765FC(a1, a1[3]);
  sub_25F6B4F20();
  sub_25F679DEC();
  if (v2)
  {
    sub_25F67A28C((uint64_t)a1);
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B0E80);
    sub_25F6B4F6C(&qword_26A7B0E88, &qword_26A7B0E80, (void (*)(void))sub_25F6B4FE4);
    sub_25F70F200();
    uint64_t v6 = sub_25F6762CC();
    v7(v6);
    uint64_t v1 = v9;
    sub_25F67A28C((uint64_t)a1);
  }
  return v1;
}

BOOL sub_25F6ADE14(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_25F6ADE24()
{
  return sub_25F70F5D0();
}

uint64_t sub_25F6ADE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6ADF2C()
{
  return 2;
}

uint64_t sub_25F6ADF34(char a1)
{
  if (a1) {
    return 0x746E65746E6F63;
  }
  else {
    return 1701869940;
  }
}

void sub_25F6ADF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_25F672A18();
  sub_25F6B5894();
  sub_25F67ACD8(&qword_26A7B0F48);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v16, v17);
  sub_25F67D5E0();
  sub_25F6B5538();
  sub_25F67855C();
  if (!v14)
  {
    sub_25F67753C();
    sub_25F6B5860();
    sub_25F67ACD8(&qword_26B39D068);
    sub_25F6B4F6C(&qword_26B39D070, &qword_26B39D068, (void (*)(void))sub_25F695278);
    sub_25F70F200();
    uint64_t v18 = sub_25F6759F8();
    v19(v18);
    *(unsigned char *)uint64_t v15 = a13;
    *(void *)(v15 + 8) = v20;
  }
  sub_25F67A28C(v13);
  sub_25F675E04();
}

uint64_t sub_25F6AE0D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7372747461 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6AE1B0(char a1)
{
  if (a1) {
    return 0x7372747461;
  }
  else {
    return 1701869940;
  }
}

void sub_25F6AE1DC()
{
  sub_25F672A18();
  BOOL v2 = v1;
  uint64_t v24 = v3;
  sub_25F67ACD8(&qword_26A7B14C8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F678458();
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B2338();
  sub_25F70F640();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    LOBYTE(v26[0]) = 0;
    uint64_t v6 = sub_25F70F1D0();
    uint64_t v8 = v7;
    sub_25F677298();
    sub_25F70E570();
    sub_25F70F1C0();
    sub_25F67E33C();
    v9();
    uint64_t v10 = v27;
    uint64_t v11 = v28;
    uint64_t v12 = v29;
    uint64_t v13 = v30;
    uint64_t v22 = v32;
    uint64_t v23 = v31;
    uint64_t v20 = v34;
    uint64_t v21 = v33;
    uint64_t v18 = v36;
    uint64_t v19 = v35;
    uint64_t v16 = v38;
    uint64_t v17 = v37;
    uint64_t v14 = v40;
    uint64_t v15 = v39;
    v25[0] = v6;
    v25[1] = v8;
    long long v25[2] = v27;
    _OWORD v25[3] = v28;
    v25[4] = v29;
    void v25[5] = v30;
    v25[6] = v31;
    v25[7] = v32;
    v25[8] = v33;
    v25[9] = v34;
    v25[10] = v35;
    v25[11] = v36;
    v25[12] = v37;
    v25[13] = v38;
    v25[14] = v39;
    v25[15] = v40;
    sub_25F6B2384((uint64_t)v25);
    swift_bridgeObjectRelease();
    memcpy(v24, v25, 0x80uLL);
    sub_25F67A28C((uint64_t)v2);
    v26[0] = v6;
    v26[1] = v8;
    _OWORD v26[2] = v10;
    v26[3] = v11;
    v26[4] = v12;
    v26[5] = v13;
    void v26[6] = v23;
    v26[7] = v22;
    v26[8] = v21;
    v26[9] = v20;
    v26[10] = v19;
    v26[11] = v18;
    v26[12] = v17;
    v26[13] = v16;
    v26[14] = v15;
    v26[15] = v14;
    sub_25F6B2430((uint64_t)v26);
  }
  sub_25F68C5FC();
  sub_25F675E04();
}

uint64_t sub_25F6AE45C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7372747461 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_25F70F330();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_25F6AE58C()
{
  return 3;
}

uint64_t sub_25F6AE594(char a1)
{
  if (!a1) {
    return 1701869940;
  }
  if (a1 == 1) {
    return 1954047348;
  }
  return 0x7372747461;
}

void sub_25F6AE5D8()
{
  sub_25F672A18();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26A7B0F68);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674D58();
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B24DC();
  sub_25F679DEC();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    uint64_t v30 = v4;
    uint64_t v7 = sub_25F70F1D0();
    uint64_t v9 = v8;
    uint64_t v28 = v7;
    LOBYTE(v33[0]) = 1;
    sub_25F70E570();
    uint64_t v10 = sub_25F70F1D0();
    uint64_t v29 = v11;
    uint64_t v27 = v10;
    sub_25F6B5880();
    sub_25F677298();
    sub_25F70E570();
    sub_25F70F1C0();
    uint64_t v12 = sub_25F675E1C();
    v13(v12);
    uint64_t v31 = v34;
    uint64_t v14 = v37;
    uint64_t v25 = v36;
    uint64_t v26 = v35;
    uint64_t v15 = v38;
    uint64_t v23 = v40;
    uint64_t v24 = v39;
    uint64_t v21 = v42;
    uint64_t v22 = v41;
    uint64_t v19 = v44;
    uint64_t v20 = v43;
    uint64_t v17 = v46;
    uint64_t v18 = v45;
    uint64_t v16 = v47;
    v32[0] = v28;
    v32[1] = v9;
    v32[2] = v27;
    v32[3] = v29;
    v32[4] = v34;
    uint64_t v32[5] = v35;
    v32[6] = v36;
    v32[7] = v37;
    v32[8] = v38;
    v32[9] = v39;
    v32[10] = v40;
    v32[11] = v41;
    v32[12] = v42;
    v32[13] = v43;
    v32[14] = v44;
    v32[15] = v45;
    v32[16] = v46;
    v32[17] = v47;
    sub_25F6B2528((uint64_t)v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v30, v32, 0x90uLL);
    sub_25F67A28C((uint64_t)v2);
    v33[0] = v28;
    v33[1] = v9;
    v33[2] = v27;
    _OWORD v33[3] = v29;
    void v33[4] = v31;
    v33[5] = v26;
    v33[6] = v25;
    v33[7] = v14;
    v33[8] = v15;
    v33[9] = v24;
    v33[10] = v23;
    v33[11] = v22;
    v33[12] = v21;
    v33[13] = v20;
    v33[14] = v19;
    v33[15] = v18;
    v33[16] = v17;
    v33[17] = v16;
    sub_25F6B25DC((uint64_t)v33);
  }
  sub_25F68C5FC();
  sub_25F675E04();
}

uint64_t sub_25F6AE8BC()
{
  return sub_25F70F5D0();
}

uint64_t sub_25F6AE8E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656D75636F64 && a2 == 0xEA00000000006449;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E656D75636F64 && a2 == 0xEC000000656D614ELL;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_25F70F330();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_25F6AEB2C()
{
  return 5;
}

uint64_t sub_25F6AEB34(char a1)
{
  uint64_t result = 0x746E656D75636F64;
  switch(a1)
  {
    case 2:
      uint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      uint64_t result = 0x6E6F6974616C6572;
      break;
    case 4:
      uint64_t result = 0x746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25F6AEBE8()
{
  sub_25F672A18();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26A7B0F40);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F6768BC();
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B2040();
  sub_25F70F640();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    uint64_t v32 = v4;
    uint64_t v7 = sub_25F70F1D0();
    uint64_t v9 = v8;
    sub_25F70E570();
    uint64_t v10 = sub_25F70F1D0();
    uint64_t v31 = v11;
    uint64_t v28 = v10;
    uint64_t v29 = v7;
    LOBYTE(v34) = 2;
    sub_25F70E570();
    uint64_t v27 = sub_25F70F1D0();
    LOBYTE(v33[0]) = 3;
    uint64_t v13 = v12;
    unint64_t v14 = sub_25F6B208C();
    sub_25F70E570();
    sub_25F67953C();
    uint64_t v30 = v13;
    if (v14)
    {
      uint64_t v15 = sub_25F6768A4();
      v16(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v17 = 0;
    }
    else
    {
      uint64_t v18 = v35;
      uint64_t v24 = v34;
      uint64_t v25 = v36;
      unint64_t v19 = sub_25F6B20D8();
      sub_25F70E570();
      uint64_t v26 = v37;
      sub_25F70E570();
      sub_25F67953C();
      if (!v19)
      {
        uint64_t v22 = sub_25F6768A4();
        v23(v22);
        memcpy(&v33[10], v45, 0x98uLL);
        memcpy(v46, v45, sizeof(v46));
        v33[0] = v29;
        v33[1] = v9;
        v33[2] = v28;
        _OWORD v33[3] = v31;
        void v33[4] = v27;
        v33[5] = v30;
        v33[6] = v24;
        v33[7] = v18;
        v33[8] = v25;
        v33[9] = v26;
        sub_25F6AA2C8(v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v32, v33, 0xE8uLL);
        sub_25F67A28C((uint64_t)v2);
        uint64_t v34 = v29;
        uint64_t v35 = v9;
        uint64_t v36 = v28;
        uint64_t v37 = v31;
        uint64_t v38 = v27;
        uint64_t v39 = v30;
        uint64_t v40 = v24;
        uint64_t v41 = v18;
        uint64_t v42 = v25;
        uint64_t v43 = v26;
        memcpy(v44, v46, sizeof(v44));
        sub_25F6AA4B8(&v34);
        goto LABEL_4;
      }
      uint64_t v20 = sub_25F6768A4();
      v21(v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v17 = 1;
    }
    sub_25F67A28C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_4:
  sub_25F68C5FC();
  sub_25F675E04();
}

void sub_25F6AEFD8()
{
}

uint64_t sub_25F6AEFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6ADC28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6AF020(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4F20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AF05C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4F20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6AF098@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25F6ADCC8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

BOOL sub_25F6AF0C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25F6ADE14(*a1, *a2);
}

uint64_t sub_25F6AF0D0()
{
  return sub_25F6B0B24();
}

uint64_t sub_25F6AF0EC()
{
  return sub_25F6ADE24();
}

uint64_t sub_25F6AF0F4()
{
  return sub_25F6ADF34(*v0);
}

uint64_t sub_25F6AF0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6ADE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6AF124@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6ADF2C();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AF14C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B5538();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AF188(uint64_t a1)
{
  unint64_t v2 = sub_25F6B5538();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AF1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25F6ADF64(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_25F6AF1DC()
{
  return sub_25F6AE1B0(*v0);
}

uint64_t sub_25F6AF1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AE0D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6AF20C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2338();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AF248(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2338();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AF284()
{
}

uint64_t sub_25F6AF29C()
{
  return sub_25F6AE594(*v0);
}

uint64_t sub_25F6AF2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AE45C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6AF2CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AE58C();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AF2F4(uint64_t a1)
{
  unint64_t v2 = sub_25F6B24DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AF330(uint64_t a1)
{
  unint64_t v2 = sub_25F6B24DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AF36C()
{
}

uint64_t sub_25F6AF384()
{
  return sub_25F6B10F4();
}

uint64_t sub_25F6AF3A0()
{
  return sub_25F6AE8BC();
}

uint64_t sub_25F6AF3A8()
{
  return sub_25F6AEB34(*v0);
}

uint64_t sub_25F6AF3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AE8E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6AF3D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AEB2C();
  *a1 = result;
  return result;
}

uint64_t sub_25F6AF400(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2040();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6AF43C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2040();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6AF478()
{
}

uint64_t sub_25F6AF490(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656D75636F64 && a2 == 0xEA00000000006449;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000025F718F90 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x800000025F718FB0 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x4D79616C70736964 && a2 == 0xEF746E756F437861;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x7372656767697274 && a2 == 0xE800000000000000;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0x69646E6F63657270 && a2 == 0xED0000736E6F6974)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          char v10 = sub_25F70F330();
          swift_bridgeObjectRelease();
          if (v10) {
            return 6;
          }
          else {
            return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_25F6AF7B0()
{
  return 7;
}

unint64_t sub_25F6AF7B8(char a1)
{
  unint64_t result = 0x746E656D75636F64;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D726F6674616C70;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x4D79616C70736964;
      break;
    case 5:
      unint64_t result = 0x7372656767697274;
      break;
    case 6:
      unint64_t result = 0x69646E6F63657270;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25F6AF8C8()
{
  sub_25F672A18();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26A7B0F88);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674D58();
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  sub_25F6765FC(v2, v7);
  sub_25F6B1EF0();
  sub_25F685B3C();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    LOBYTE(v18) = 0;
    sub_25F672958();
    sub_25F672BD0();
    uint64_t v15 = sub_25F672958();
    uint64_t v16 = v8;
    uint64_t v10 = v9;
    sub_25F67ACD8(&qword_26B39CDA0);
    sub_25F6B5880();
    sub_25F6B1F3C();
    sub_25F70E570();
    sub_25F67D8D0();
    sub_25F70F200();
    uint64_t v17 = v10;
    uint64_t v11 = v18;
    sub_25F70E570();
    sub_25F67B074();
    char v20 = sub_25F70F1E0();
    LOBYTE(v18) = 4;
    sub_25F67B074();
    uint64_t v14 = sub_25F70F1F0();
    sub_25F6B1FA8();
    sub_25F678648();
    sub_25F70F1C0();
    sub_25F6B1FF4();
    sub_25F70E570();
    sub_25F682D28();
    sub_25F70F1C0();
    uint64_t v12 = sub_25F675A10();
    v13(v12);
    sub_25F70E570();
    *(void *)uint64_t v4 = v16;
    *(void *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = v15;
    *(void *)(v4 + 24) = v17;
    *(void *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 40) = v20 & 1;
    *(void *)(v4 + 48) = v14;
    *(void *)(v4 + 56) = v18;
    *(unsigned char *)(v4 + 64) = v19;
    *(void *)(v4 + 72) = v18;
    *(unsigned char *)(v4 + 80) = v19;
    sub_25F67A28C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25F675E04();
}

uint64_t sub_25F6AFC90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6AFD8C(char a1)
{
  if (a1) {
    return 0x657079546E696F6ALL;
  }
  else {
    return 0x6F697469646E6F63;
  }
}

void sub_25F6AFDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25F672A18();
  sub_25F6B5894();
  sub_25F67ACD8(&qword_26A7B0FA0);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v13, v14);
  sub_25F67D5E0();
  sub_25F6B365C();
  sub_25F67927C();
  if (v11)
  {
    sub_25F67A28C(v10);
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B0EE0);
    sub_25F6B4F6C(&qword_26A7B0EE8, &qword_26A7B0EE0, (void (*)(void))sub_25F6B36A8);
    sub_25F674F30();
    unint64_t v15 = sub_25F67EB8C();
    sub_25F70E570();
    sub_25F67953C();
    sub_25F67E33C();
    v16();
    if (v15)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)uint64_t v12 = a10;
      *(unsigned char *)(v12 + 8) = v17;
    }
    sub_25F67A28C(v10);
    swift_bridgeObjectRelease();
  }
  sub_25F68C5FC();
  sub_25F675E04();
}

uint64_t sub_25F6AFF54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_25F70F330();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25F6B00D4(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 0x657079546E696F6ALL;
      break;
    case 3:
      uint64_t result = 0x7365756C6176;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25F6B0150()
{
  sub_25F672A18();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26A7B0FA8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F67D5E0();
  sub_25F6B2238();
  sub_25F70F640();
  if (v0)
  {
    sub_25F67A28C(v2);
  }
  else
  {
    LOBYTE(v10) = 0;
    v12[0] = sub_25F682C20();
    v12[1] = v7;
    sub_25F6B2284();
    sub_25F672A30();
    char v13 = 0;
    sub_25F6B5880();
    sub_25F67EB8C();
    sub_25F70F1C0();
    char v14 = 0;
    sub_25F67EB40();
    sub_25F672A30();
    uint64_t v8 = sub_25F6759F8();
    v9(v8);
    long long v15 = v10;
    long long v16 = v11;
    sub_25F6B22D0((uint64_t)v12, v4);
    sub_25F67A28C(v2);
    sub_25F6B2308((uint64_t)v12);
  }
  sub_25F675E04();
}

uint64_t sub_25F6B032C()
{
  unint64_t v0 = sub_25F70F160();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_25F6B0378(char a1)
{
  uint64_t result = 0x65726F7453707061;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x53746E65746E6F63;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x656C6C6174736E69;
      break;
    case 4:
      uint64_t result = sub_25F68EEE8(0x69676572u);
      break;
    case 5:
      uint64_t result = 0x6570795472657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25F6B0464()
{
  return sub_25F6AF7B8(*v0);
}

uint64_t sub_25F6B046C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AF490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B0494@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6AF7B0();
  *a1 = result;
  return result;
}

uint64_t sub_25F6B04BC(uint64_t a1)
{
  unint64_t v2 = sub_25F6B1EF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B04F8(uint64_t a1)
{
  unint64_t v2 = sub_25F6B1EF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B0534()
{
}

uint64_t sub_25F6B054C()
{
  return sub_25F6AFD8C(*v0);
}

uint64_t sub_25F6B0554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AFC90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B057C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B365C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B05B8(uint64_t a1)
{
  unint64_t v2 = sub_25F6B365C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B05F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25F6AFDC8(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_25F6B060C()
{
  return sub_25F6B00D4(*v0);
}

uint64_t sub_25F6B0614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6AFF54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B063C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2238();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B0678(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2238();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B06B4()
{
}

uint64_t sub_25F6B06CC(unsigned __int8 *a1, char *a2)
{
  return sub_25F6CC1F8(*a1, *a2);
}

uint64_t sub_25F6B06D8()
{
  return sub_25F6D9F10();
}

uint64_t sub_25F6B06E0(uint64_t a1)
{
  return sub_25F6DA098(a1, *v1);
}

uint64_t sub_25F6B06E8()
{
  return sub_25F6DA888();
}

uint64_t sub_25F6B06F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6B032C();
  *a1 = result;
  return result;
}

uint64_t sub_25F6B0720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6B0378(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25F6B074C()
{
  return sub_25F70E8D0();
}

uint64_t sub_25F6B07AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546E696F6ALL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6B0894(char a1)
{
  if (a1) {
    return 0x657079546E696F6ALL;
  }
  else {
    return 0x73656C7572;
  }
}

void sub_25F6B08C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_25F672A18();
  sub_25F6B5894();
  sub_25F67ACD8(&qword_26A7B0F70);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v13, v14);
  sub_25F67D5E0();
  sub_25F6B35C4();
  sub_25F67927C();
  if (v11)
  {
    sub_25F67A28C(v10);
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B0ED0);
    sub_25F6B4F6C(&qword_26A7B0ED8, &qword_26A7B0ED0, (void (*)(void))sub_25F6B3610);
    sub_25F674F30();
    unint64_t v15 = sub_25F67EB8C();
    sub_25F70E570();
    sub_25F67953C();
    sub_25F67E33C();
    v16();
    if (v15)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)uint64_t v12 = a10;
      *(unsigned char *)(v12 + 8) = v17;
    }
    sub_25F67A28C(v10);
    swift_bridgeObjectRelease();
  }
  sub_25F68C5FC();
  sub_25F675E04();
}

uint64_t sub_25F6B0A54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6B0B24()
{
  return sub_25F70F620();
}

uint64_t sub_25F6B0B6C(char a1)
{
  if (a1) {
    return 0x73746E657665;
  }
  else {
    return 25705;
  }
}

void sub_25F6B0B94()
{
  sub_25F672A18();
  BOOL v2 = v1;
  sub_25F67ACD8(&qword_26A7B0F98);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F6765FC(v2, v2[3]);
  sub_25F6B4384();
  sub_25F70F640();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    sub_25F70F1D0();
    sub_25F67ACD8(&qword_26A7B0EC0);
    sub_25F6B4F6C(&qword_26A7B0EC8, &qword_26A7B0EC0, (void (*)(void))sub_25F6B43D0);
    sub_25F70E570();
    sub_25F70F200();
    sub_25F67E33C();
    v5();
    sub_25F70E570();
    sub_25F67A28C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_25F675E04();
}

uint64_t sub_25F6B0DA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726573624F6E696DLL && a2 == 0xEF736E6F69746176;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6B6361426B6F6F6CLL && a2 == 0xEC00000073796144;
          if (v9 || (sub_25F70F330() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x800000025F718FD0 || (sub_25F70F330() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x4B794270756F7267 && a2 == 0xEF73687461507965;
            if (v10 || (sub_25F70F330() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 1635018093 && a2 == 0xE400000000000000)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v12 = sub_25F70F330();
              swift_bridgeObjectRelease();
              if (v12) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_25F6B10EC()
{
  return 8;
}

uint64_t sub_25F6B10F4()
{
  return sub_25F70F620();
}

unint64_t sub_25F6B113C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726573624F6E696DLL;
      break;
    case 2:
      unint64_t result = 0x65756C6176;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 0x6B6361426B6F6F6CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x4B794270756F7267;
      break;
    case 7:
      unint64_t result = 1635018093;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25F6B1244()
{
  sub_25F672A18();
  BOOL v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26A7B0F78);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F678458();
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  sub_25F6765FC(v2, v7);
  sub_25F6B4E1C();
  sub_25F685B3C();
  if (v0)
  {
    sub_25F67A28C((uint64_t)v2);
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_25F671F80();
    sub_25F70F1D0();
    sub_25F672BD0();
    uint64_t v9 = sub_25F67B258();
    char v25 = v10;
    uint64_t v22 = v9;
    sub_25F6B5880();
    sub_25F6B4E68();
    sub_25F678648();
    sub_25F70F1C0();
    uint64_t v20 = v23;
    uint64_t v21 = v8;
    sub_25F70E570();
    sub_25F671F80();
    uint64_t v19 = sub_25F70F1F0();
    uint64_t v11 = sub_25F67B258();
    char v18 = v12;
    LOBYTE(v23) = 5;
    uint64_t v13 = sub_25F67B258();
    char v16 = v14;
    uint64_t v17 = v13;
    sub_25F67ACD8(&qword_26B39CDA0);
    sub_25F6B1F3C();
    sub_25F67D8D0();
    sub_25F70F1C0();
    sub_25F6B4EB4();
    sub_25F70E570();
    sub_25F682D28();
    sub_25F70F1C0();
    sub_25F67E33C();
    v15();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F6B4F00(v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25F67A28C((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25F6B4F10(v23);
    *(void *)uint64_t v4 = v21;
    *(void *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = v22;
    *(unsigned char *)(v4 + 24) = v25 & 1;
    *(void *)(v4 + 32) = v20;
    *(void *)(v4 + 40) = v24;
    *(void *)(v4 + 48) = v19;
    *(void *)(v4 + 56) = v11;
    *(unsigned char *)(v4 + 64) = v18 & 1;
    *(void *)(v4 + 72) = v17;
    *(unsigned char *)(v4 + 80) = v16 & 1;
    *(void *)(v4 + 88) = v23;
    *(void *)(v4 + 96) = v23;
  }
  sub_25F675E04();
}

uint64_t sub_25F6B163C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6B16C4()
{
  return 0x6F666E4972657375;
}

uint64_t sub_25F6B16DC(void *a1)
{
  sub_25F67ACD8(&qword_26A7B0F90);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6765FC(a1, a1[3]);
  sub_25F6B2124();
  sub_25F679DEC();
  if (v2)
  {
    sub_25F67A28C((uint64_t)a1);
  }
  else
  {
    sub_25F67ACD8(&qword_26B39D020);
    sub_25F6B2170();
    sub_25F70F1C0();
    uint64_t v6 = sub_25F6762CC();
    v7(v6);
    uint64_t v1 = v9;
    sub_25F67A28C((uint64_t)a1);
  }
  return v1;
}

uint64_t sub_25F6B1804(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6156676E69727473 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6B18A4()
{
  return sub_25F70F620();
}

uint64_t sub_25F6B18E8()
{
  return 0x6156676E69727473;
}

uint64_t sub_25F6B1908(void *a1)
{
  sub_25F67ACD8(&qword_26A7B0F80);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6765FC(a1, a1[3]);
  sub_25F6B21EC();
  sub_25F679DEC();
  if (!v2)
  {
    uint64_t v1 = sub_25F70F1D0();
    uint64_t v6 = sub_25F6762CC();
    v7(v6);
  }
  sub_25F67A28C((uint64_t)a1);
  return v1;
}

uint64_t sub_25F6B1A10()
{
  return sub_25F6B0894(*v0);
}

uint64_t sub_25F6B1A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6B07AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B1A40(uint64_t a1)
{
  unint64_t v2 = sub_25F6B35C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B1A7C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B35C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B1AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25F6B08C8(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_25F6B1AD0()
{
  return sub_25F70F620();
}

uint64_t sub_25F6B1B14()
{
  return sub_25F6B0B6C(*v0);
}

uint64_t sub_25F6B1B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6B0A54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B1B44(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4384();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B1B80(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4384();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B1BBC(void *a1@<X8>)
{
  sub_25F6B0B94();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
  }
}

unint64_t sub_25F6B1BEC()
{
  return sub_25F6B113C(*v0);
}

uint64_t sub_25F6B1BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6B0DA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6B1C1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6B10EC();
  *a1 = result;
  return result;
}

uint64_t sub_25F6B1C44(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4E1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B1C80(uint64_t a1)
{
  unint64_t v2 = sub_25F6B4E1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_25F6B1CBC(void *a1@<X8>)
{
  sub_25F6B1244();
  if (!v1) {
    memcpy(a1, __src, 0x68uLL);
  }
}

uint64_t sub_25F6B1D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6B163C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6B1D38(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2124();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B1D74(uint64_t a1)
{
  unint64_t v2 = sub_25F6B2124();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6B1DB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25F6B16DC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25F6B1DDC()
{
  return sub_25F70F620();
}

uint64_t sub_25F6B1E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6B1804(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6B1E4C(uint64_t a1)
{
  unint64_t v2 = sub_25F6B21EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6B1E88(uint64_t a1)
{
  unint64_t v2 = sub_25F6B21EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6B1EC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25F6B1908(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

unint64_t sub_25F6B1EF0()
{
  unint64_t result = qword_26A7B0D58;
  if (!qword_26A7B0D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D58);
  }
  return result;
}

unint64_t sub_25F6B1F3C()
{
  unint64_t result = qword_26A7B0F00;
  if (!qword_26A7B0F00)
  {
    sub_25F682580(&qword_26B39CDA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0F00);
  }
  return result;
}

unint64_t sub_25F6B1FA8()
{
  unint64_t result = qword_26A7B0C68;
  if (!qword_26A7B0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C68);
  }
  return result;
}

unint64_t sub_25F6B1FF4()
{
  unint64_t result = qword_26A7B0DD8;
  if (!qword_26A7B0DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DD8);
  }
  return result;
}

unint64_t sub_25F6B2040()
{
  unint64_t result = qword_26A7B0B78;
  if (!qword_26A7B0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B78);
  }
  return result;
}

unint64_t sub_25F6B208C()
{
  unint64_t result = qword_26A7B0BC8;
  if (!qword_26A7B0BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BC8);
  }
  return result;
}

unint64_t sub_25F6B20D8()
{
  unint64_t result = qword_26A7B0BE8;
  if (!qword_26A7B0BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BE8);
  }
  return result;
}

unint64_t sub_25F6B2124()
{
  unint64_t result = qword_26A7B0D78;
  if (!qword_26A7B0D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D78);
  }
  return result;
}

unint64_t sub_25F6B2170()
{
  unint64_t result = qword_26B39D028;
  if (!qword_26B39D028)
  {
    sub_25F682580(&qword_26B39D020);
    sub_25F67EB40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D028);
  }
  return result;
}

unint64_t sub_25F6B21EC()
{
  unint64_t result = qword_26A7B0D30;
  if (!qword_26A7B0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D30);
  }
  return result;
}

unint64_t sub_25F6B2238()
{
  unint64_t result = qword_26A7B0DF0;
  if (!qword_26A7B0DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DF0);
  }
  return result;
}

unint64_t sub_25F6B2284()
{
  unint64_t result = qword_26A7B0DE8;
  if (!qword_26A7B0DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DE8);
  }
  return result;
}

uint64_t sub_25F6B22D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F6B2308(uint64_t a1)
{
  return a1;
}

unint64_t sub_25F6B2338()
{
  unint64_t result = qword_26A7B14D0;
  if (!qword_26A7B14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14D0);
  }
  return result;
}

uint64_t sub_25F6B2384(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 16);
  sub_25F70E570();
  sub_25F6774C8(v4, v2);
  return a1;
}

uint64_t sub_25F6B2430(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_25F67739C(v4, v2);
  return a1;
}

unint64_t sub_25F6B24DC()
{
  unint64_t result = qword_26A7B0C20;
  if (!qword_26A7B0C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C20);
  }
  return result;
}

uint64_t sub_25F6B2528(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F6774C8(v4, v3);
  return a1;
}

uint64_t sub_25F6B25DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25F67739C(v4, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ConstellationDocument.Action.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B2760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Action.CodingKeys()
{
  return &type metadata for ConstellationDocument.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Icon.CodingKeys()
{
  return &type metadata for ConstellationDocument.Icon.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationPreconditionsRuleInfo.CodingKeys()
{
  return &type metadata for ConstellationPreconditionsRuleInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventValue.CodingKeys()
{
  return &type metadata for ConstellationEventValue.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventMetadata.CodingKeys()
{
  return &type metadata for ConstellationEventMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ConstellationDocument.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B28B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.CodingKeys()
{
  return &type metadata for ConstellationDocument.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ConstellationDeliveryInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B29BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDeliveryInfo.CodingKeys()
{
  return &type metadata for ConstellationDeliveryInfo.CodingKeys;
}

uint64_t _s8CategoryOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_25F6B2A7C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B2B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for ConstellationPreconditionsType()
{
}

uint64_t sub_25F6B2B80(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

void type metadata accessor for ConstellationPreconditions()
{
}

uint64_t sub_25F6B2BA8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6B2BE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6B2BE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_25F6B2C38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_25F6B2C78(uint64_t *a1, int a2)
{
  if (!a2) {
    return sub_25F6B588C(-1);
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_25F6B588C(v2);
}

void *sub_25F6B2CB4(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *((unsigned char *)result + 8) = 0;
    *unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *((unsigned char *)result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_25F685E08(result, a2);
    }
    *((unsigned char *)result + 9) = 0;
    if (a2) {
      return sub_25F685E08(result, a2);
    }
  }
  return result;
}

void type metadata accessor for ConstellationTriggers()
{
}

void *sub_25F6B2D04(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

void type metadata accessor for ConstellationDocument.OutermostContent()
{
}

uint64_t sub_25F6B2D24()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_25F6B2D60(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

void *sub_25F6B2DA0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_25F6B2E10(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25F6B2E58(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6B2E98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationDocument.Relationships()
{
}

unint64_t sub_25F6B2EE8()
{
  unint64_t result = qword_26A7B14D8;
  if (!qword_26A7B14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14D8);
  }
  return result;
}

unint64_t sub_25F6B2F38()
{
  unint64_t result = qword_26A7B14E0;
  if (!qword_26A7B14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14E0);
  }
  return result;
}

unint64_t sub_25F6B2F88()
{
  unint64_t result = qword_26A7B14E8;
  if (!qword_26A7B14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14E8);
  }
  return result;
}

unint64_t sub_25F6B2FD8()
{
  unint64_t result = qword_26A7B14F0;
  if (!qword_26A7B14F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14F0);
  }
  return result;
}

unint64_t sub_25F6B3028()
{
  unint64_t result = qword_26A7B14F8;
  if (!qword_26A7B14F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B14F8);
  }
  return result;
}

unint64_t sub_25F6B3078()
{
  unint64_t result = qword_26A7B1500;
  if (!qword_26A7B1500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1500);
  }
  return result;
}

unint64_t sub_25F6B30C8()
{
  unint64_t result = qword_26A7B1508;
  if (!qword_26A7B1508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1508);
  }
  return result;
}

unint64_t sub_25F6B3118()
{
  unint64_t result = qword_26A7B1510;
  if (!qword_26A7B1510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1510);
  }
  return result;
}

unint64_t sub_25F6B3168()
{
  unint64_t result = qword_26A7B0C30;
  if (!qword_26A7B0C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C30);
  }
  return result;
}

unint64_t sub_25F6B31B8()
{
  unint64_t result = qword_26A7B0C28;
  if (!qword_26A7B0C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C28);
  }
  return result;
}

unint64_t sub_25F6B3208()
{
  unint64_t result = qword_26A7B1518;
  if (!qword_26A7B1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1518);
  }
  return result;
}

unint64_t sub_25F6B3258()
{
  unint64_t result = qword_26A7B1520;
  if (!qword_26A7B1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1520);
  }
  return result;
}

unint64_t sub_25F6B32A8()
{
  unint64_t result = qword_26A7B0E00;
  if (!qword_26A7B0E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0E00);
  }
  return result;
}

unint64_t sub_25F6B32F8()
{
  unint64_t result = qword_26A7B0DF8;
  if (!qword_26A7B0DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DF8);
  }
  return result;
}

unint64_t sub_25F6B3348()
{
  unint64_t result = qword_26A7B0D40;
  if (!qword_26A7B0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D40);
  }
  return result;
}

unint64_t sub_25F6B3398()
{
  unint64_t result = qword_26A7B0D38;
  if (!qword_26A7B0D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D38);
  }
  return result;
}

unint64_t sub_25F6B33E8()
{
  unint64_t result = qword_26A7B0D88;
  if (!qword_26A7B0D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D88);
  }
  return result;
}

unint64_t sub_25F6B3438()
{
  unint64_t result = qword_26A7B0D80;
  if (!qword_26A7B0D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D80);
  }
  return result;
}

unint64_t sub_25F6B3488()
{
  unint64_t result = qword_26A7B0B88;
  if (!qword_26A7B0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B88);
  }
  return result;
}

unint64_t sub_25F6B34D8()
{
  unint64_t result = qword_26A7B0B80;
  if (!qword_26A7B0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B80);
  }
  return result;
}

unint64_t sub_25F6B3528()
{
  unint64_t result = qword_26A7B0D68;
  if (!qword_26A7B0D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D68);
  }
  return result;
}

unint64_t sub_25F6B3578()
{
  unint64_t result = qword_26A7B0D60;
  if (!qword_26A7B0D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D60);
  }
  return result;
}

unint64_t sub_25F6B35C4()
{
  unint64_t result = qword_26A7B0C50;
  if (!qword_26A7B0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C50);
  }
  return result;
}

unint64_t sub_25F6B3610()
{
  unint64_t result = qword_26A7B0DB8;
  if (!qword_26A7B0DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DB8);
  }
  return result;
}

unint64_t sub_25F6B365C()
{
  unint64_t result = qword_26A7B0DC0;
  if (!qword_26A7B0DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DC0);
  }
  return result;
}

unint64_t sub_25F6B36A8()
{
  unint64_t result = qword_26A7B0E08;
  if (!qword_26A7B0E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0E08);
  }
  return result;
}

unint64_t sub_25F6B36F4()
{
  unint64_t result = qword_26A7B0BB0;
  if (!qword_26A7B0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BB0);
  }
  return result;
}

unint64_t sub_25F6B3740()
{
  unint64_t result = qword_26A7B0BD0;
  if (!qword_26A7B0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BD0);
  }
  return result;
}

unint64_t sub_25F6B378C()
{
  unint64_t result = qword_26A7B0B70;
  if (!qword_26A7B0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B70);
  }
  return result;
}

unint64_t sub_25F6B37D8()
{
  unint64_t result = qword_26A7B0DE0;
  if (!qword_26A7B0DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.OutermostContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.OutermostContent.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Relationships.CodingKeys()
{
  return &type metadata for ConstellationDocument.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationPreconditions.CodingKeys()
{
  return &type metadata for ConstellationPreconditions.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationTriggers.CodingKeys()
{
  return &type metadata for ConstellationTriggers.CodingKeys;
}

uint64_t _s8SubrulesVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8SubrulesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

void *_s8SubrulesVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s18ConstellationAssetVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s8SubrulesVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SubrulesVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8SubrulesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationEventRuleInfo()
{
}

uint64_t sub_25F6B3A34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + 48);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_25F6B3AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    sub_25F70E570();
    if (v6 != 1)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      uint64_t v10 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v10;
      uint64_t v11 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v11;
      sub_25F68839C();
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      uint64_t v12 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v12;
      uint64_t v13 = *(void *)(a2 + 136);
      uint64_t v14 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = v13;
      *(void *)(a1 + 144) = v14;
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      return a1;
    }
    BOOL v7 = (void *)(a1 + 40);
    uint64_t v8 = (const void *)(a2 + 40);
    size_t v9 = 112;
  }
  else
  {
    BOOL v7 = (void *)(a1 + 24);
    uint64_t v8 = (const void *)(a2 + 24);
    size_t v9 = 128;
  }
  memcpy(v7, v8, v9);
  return a1;
}

void *sub_25F6B3BC8(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25F70E570();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      sub_25F678038();
      uint64_t v6 = a2[6];
      sub_25F70E570();
      if (v6 == 1)
      {
        BOOL v7 = a1 + 5;
        uint64_t v8 = a2 + 5;
LABEL_15:
        size_t v9 = 112;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_10:
    BOOL v7 = a1 + 3;
    uint64_t v8 = a2 + 3;
    size_t v9 = 128;
LABEL_16:
    memcpy(v7, v8, v9);
    return a1;
  }
  if (!v4)
  {
    sub_25F6ACBF0((uint64_t)(a1 + 3));
    goto LABEL_10;
  }
  sub_25F678038();
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[6];
  if (a1[6] != 1)
  {
    if (v5 != 1)
    {
      sub_25F6857B4();
      sub_25F70E570();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_25F70E570();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      a1[10] = a2[10];
      sub_25F70E570();
      swift_bridgeObjectRelease();
      sub_25F677E54();
      a1[16] = a2[16];
      sub_25F70E570();
      swift_bridgeObjectRelease();
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C((uint64_t)(a1 + 5));
    goto LABEL_14;
  }
  if (v5 == 1)
  {
LABEL_14:
    BOOL v7 = a1 + 5;
    uint64_t v8 = a2 + 5;
    goto LABEL_15;
  }
LABEL_11:
  sub_25F6857B4();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  sub_25F677E54();
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6B3DE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 32)) {
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4)
  {
    sub_25F6ACBF0(a1 + 24);
LABEL_8:
    uint64_t v6 = (void *)(a1 + 24);
    BOOL v7 = (const void *)(a2 + 24);
    size_t v8 = 128;
    goto LABEL_9;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 48);
    if (v5 != 1)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v11;
      swift_bridgeObjectRelease();
      sub_25F68839C();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      uint64_t v12 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v13;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 40);
  }
  uint64_t v6 = (void *)(a1 + 40);
  BOOL v7 = (const void *)(a2 + 40);
  size_t v8 = 112;
LABEL_9:
  memcpy(v6, v7, v8);
  return a1;
}

uint64_t sub_25F6B3F20(uint64_t *a1, int a2)
{
  if (!a2) {
    return sub_25F6B588C(-1);
  }
  if (a2 < 0 && *((unsigned char *)a1 + 152))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    uint64_t v2 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_25F6B588C(v2);
}

void *sub_25F6B3F5C(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 17) = 0u;
    *(_OWORD *)(result + 15) = 0u;
    *(_OWORD *)(result + 13) = 0u;
    *(_OWORD *)(result + 11) = 0u;
    *(_OWORD *)(result + 9) = 0u;
    *(_OWORD *)(result + 7) = 0u;
    *(_OWORD *)(result + 5) = 0u;
    *(_OWORD *)(result + 3) = 0u;
    *(_OWORD *)(result + 1) = 0u;
    *uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *((unsigned char *)result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return sub_25F685E08(result, a2);
    }
    *((unsigned char *)result + 152) = 0;
    if (a2) {
      return sub_25F685E08(result, a2);
    }
  }
  return result;
}

void type metadata accessor for ConstellationDocument.MiniTipContent()
{
}

unint64_t sub_25F6B3FC8()
{
  unint64_t result = qword_26A7B1528;
  if (!qword_26A7B1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1528);
  }
  return result;
}

unint64_t sub_25F6B4018()
{
  unint64_t result = qword_26A7B1530;
  if (!qword_26A7B1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1530);
  }
  return result;
}

unint64_t sub_25F6B4068()
{
  unint64_t result = qword_26A7B1538;
  if (!qword_26A7B1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1538);
  }
  return result;
}

unint64_t sub_25F6B40B8()
{
  unint64_t result = qword_26A7B1540;
  if (!qword_26A7B1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1540);
  }
  return result;
}

unint64_t sub_25F6B4108()
{
  unint64_t result = qword_26A7B0BE0;
  if (!qword_26A7B0BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BE0);
  }
  return result;
}

unint64_t sub_25F6B4158()
{
  unint64_t result = qword_26A7B0BD8;
  if (!qword_26A7B0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BD8);
  }
  return result;
}

unint64_t sub_25F6B41A8()
{
  unint64_t result = qword_26A7B0BC0;
  if (!qword_26A7B0BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BC0);
  }
  return result;
}

unint64_t sub_25F6B41F8()
{
  unint64_t result = qword_26A7B0BB8;
  if (!qword_26A7B0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BB8);
  }
  return result;
}

unint64_t sub_25F6B4248()
{
  unint64_t result = qword_26A7B0DD0;
  if (!qword_26A7B0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DD0);
  }
  return result;
}

unint64_t sub_25F6B4298()
{
  unint64_t result = qword_26A7B0DC8;
  if (!qword_26A7B0DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DC8);
  }
  return result;
}

unint64_t sub_25F6B42E8()
{
  unint64_t result = qword_26A7B0C60;
  if (!qword_26A7B0C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C60);
  }
  return result;
}

unint64_t sub_25F6B4338()
{
  unint64_t result = qword_26A7B0C58;
  if (!qword_26A7B0C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C58);
  }
  return result;
}

unint64_t sub_25F6B4384()
{
  unint64_t result = qword_26A7B0DA0;
  if (!qword_26A7B0DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DA0);
  }
  return result;
}

unint64_t sub_25F6B43D0()
{
  unint64_t result = qword_26A7B0C88[0];
  if (!qword_26A7B0C88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A7B0C88);
  }
  return result;
}

unint64_t sub_25F6B441C()
{
  unint64_t result = qword_26A7B0B58;
  if (!qword_26A7B0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B58);
  }
  return result;
}

unint64_t sub_25F6B4468()
{
  unint64_t result = qword_26A7B0C08;
  if (!qword_26A7B0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C08);
  }
  return result;
}

unint64_t sub_25F6B44B4()
{
  unint64_t result = qword_26A7B0C38;
  if (!qword_26A7B0C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C38);
  }
  return result;
}

unint64_t sub_25F6B4500()
{
  unint64_t result = qword_26A7B0C10;
  if (!qword_26A7B0C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C10);
  }
  return result;
}

uint64_t sub_25F6B454C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26A7B0C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_25F6B45B4(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[3];
  uint64_t v3 = a1[6];
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F6AA3E4(v6, v5, v2, v3);
  return a1;
}

void *sub_25F6B4688(void *a1)
{
  uint64_t v2 = a1[5];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[3];
  uint64_t v3 = a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25F6AA5D4(v6, v5, v2, v3);
  return a1;
}

unsigned char *_s10TipKitCore34ConstellationPreconditionsRuleInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B4828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.MiniTipContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.MiniTipContent.CodingKeys;
}

ValueMetadata *type metadata accessor for ConstellationEventRuleInfo.CodingKeys()
{
  return &type metadata for ConstellationEventRuleInfo.CodingKeys;
}

uint64_t sub_25F6B4870(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 96);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F6B48D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  if (v6 != 1) {
    sub_25F70E570();
  }
  *(void *)(a1 + 96) = v6;
  return a1;
}

uint64_t sub_25F6B496C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  BOOL v7 = (uint64_t *)(a1 + 96);
  uint64_t v8 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) == 1)
  {
    if (v8 != 1)
    {
      *BOOL v7 = v8;
      sub_25F70E570();
      return a1;
    }
    uint64_t v9 = 1;
  }
  else
  {
    if (v8 != 1)
    {
      *BOOL v7 = v8;
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6B4A88(a1 + 96);
    uint64_t v9 = *(void *)(a2 + 96);
  }
  *BOOL v7 = v9;
  return a1;
}

uint64_t sub_25F6B4A88(uint64_t a1)
{
  return a1;
}

void *sub_25F6B4AB4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t sub_25F6B4ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  BOOL v7 = (uint64_t *)(a1 + 96);
  uint64_t v8 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) != 1)
  {
    if (v8 != 1)
    {
      *BOOL v7 = v8;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6B4A88(a1 + 96);
    uint64_t v8 = 1;
  }
  *BOOL v7 = v8;
  return a1;
}

uint64_t sub_25F6B4B8C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25F6B4BCC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ConstellationEventInfo()
{
}

void type metadata accessor for ConstellationDocument.Body()
{
}

unint64_t sub_25F6B4C40()
{
  unint64_t result = qword_26A7B1548;
  if (!qword_26A7B1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1548);
  }
  return result;
}

unint64_t sub_25F6B4C90()
{
  unint64_t result = qword_26A7B1550;
  if (!qword_26A7B1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1550);
  }
  return result;
}

unint64_t sub_25F6B4CE0()
{
  unint64_t result = qword_26A7B0B68;
  if (!qword_26A7B0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B68);
  }
  return result;
}

unint64_t sub_25F6B4D30()
{
  unint64_t result = qword_26A7B0B60;
  if (!qword_26A7B0B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B60);
  }
  return result;
}

unint64_t sub_25F6B4D80()
{
  unint64_t result = qword_26A7B0DB0;
  if (!qword_26A7B0DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DB0);
  }
  return result;
}

unint64_t sub_25F6B4DD0()
{
  unint64_t result = qword_26A7B0DA8;
  if (!qword_26A7B0DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0DA8);
  }
  return result;
}

unint64_t sub_25F6B4E1C()
{
  unint64_t result = qword_26A7B0C70;
  if (!qword_26A7B0C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C70);
  }
  return result;
}

unint64_t sub_25F6B4E68()
{
  unint64_t result = qword_26A7B0D48;
  if (!qword_26A7B0D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D48);
  }
  return result;
}

unint64_t sub_25F6B4EB4()
{
  unint64_t result = qword_26A7B0D90;
  if (!qword_26A7B0D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0D90);
  }
  return result;
}

uint64_t sub_25F6B4F00(uint64_t result)
{
  if (result != 1) {
    return sub_25F70E570();
  }
  return result;
}

uint64_t sub_25F6B4F10(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25F6B4F20()
{
  unint64_t result = qword_26A7B0BF0;
  if (!qword_26A7B0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BF0);
  }
  return result;
}

uint64_t sub_25F6B4F6C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F682580(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F6B4FE4()
{
  unint64_t result = qword_26A7B0BA8;
  if (!qword_26A7B0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BA8);
  }
  return result;
}

uint64_t _s7OptionsV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10TipKitCore23ConstellationEventValueV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25F6B511CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.Body.CodingKeys()
{
  return &type metadata for ConstellationDocument.Body.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ConstellationEventInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B5220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationEventInfo.CodingKeys()
{
  return &type metadata for ConstellationEventInfo.CodingKeys;
}

uint64_t sub_25F6B5258(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  return a1;
}

uint64_t sub_25F6B5290(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25F6B52D4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25F6B5310(uint64_t a1, int a2)
{
  if (!a2) {
    return sub_25F6B588C(-1);
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16))
  {
    LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2 >= 0xFFFFFFFF) {
      LODWORD(v2) = -1;
    }
  }
  return sub_25F6B588C(v2);
}

void type metadata accessor for ConstellationDocument.BodyContent()
{
}

unint64_t sub_25F6B535C()
{
  unint64_t result = qword_26A7B1558;
  if (!qword_26A7B1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1558);
  }
  return result;
}

unint64_t sub_25F6B53AC()
{
  unint64_t result = qword_26A7B1560;
  if (!qword_26A7B1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1560);
  }
  return result;
}

unint64_t sub_25F6B53FC()
{
  unint64_t result = qword_26A7B0C00;
  if (!qword_26A7B0C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C00);
  }
  return result;
}

unint64_t sub_25F6B544C()
{
  unint64_t result = qword_26A7B0BF8;
  if (!qword_26A7B0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BF8);
  }
  return result;
}

unint64_t sub_25F6B549C()
{
  unint64_t result = qword_26A7B0C80;
  if (!qword_26A7B0C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C80);
  }
  return result;
}

unint64_t sub_25F6B54EC()
{
  unint64_t result = qword_26A7B0C78;
  if (!qword_26A7B0C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0C78);
  }
  return result;
}

unint64_t sub_25F6B5538()
{
  unint64_t result = qword_26A7B0B90;
  if (!qword_26A7B0B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B90);
  }
  return result;
}

uint64_t _s12SubpredicateO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s10TipKitCore21ConstellationDocumentV4IconV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6B56D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_25F6B5700(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ConstellationDocument.BodyContent.CodingKeys()
{
  return &type metadata for ConstellationDocument.BodyContent.CodingKeys;
}

unint64_t sub_25F6B5720()
{
  unint64_t result = qword_26A7B1568;
  if (!qword_26A7B1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B1568);
  }
  return result;
}

unint64_t sub_25F6B5770()
{
  unint64_t result = qword_26A7B0BA0;
  if (!qword_26A7B0BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0BA0);
  }
  return result;
}

unint64_t sub_25F6B57C0()
{
  unint64_t result = qword_26A7B0B98;
  if (!qword_26A7B0B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B98);
  }
  return result;
}

uint64_t sub_25F6B5860()
{
  return sub_25F70F200();
}

void sub_25F6B5880()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t sub_25F6B588C@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_25F6B58A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25F6B58A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25F6B594C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || v7 + ((v6 + 32) & (unint64_t)~v6) + 1 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    char v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_25F70E570();
    sub_25F70E570();
    v16(v14, v15, v4);
    *(unsigned char *)(v14 + v7) = *(unsigned char *)(v15 + v7);
  }
  return a1;
}

uint64_t sub_25F6B5A94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_25F6B5B18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  sub_25F70E570();
  sub_25F70E570();
  v8(v11, v12, v7);
  *(unsigned char *)(*(void *)(v9 + 48) + v11) = *(unsigned char *)(*(void *)(v9 + 48) + v12);
  return a1;
}

void *sub_25F6B5BE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(unsigned char *)(*(void *)(v9 + 40) + v11) = *(unsigned char *)(*(void *)(v9 + 40) + v12);
  return a1;
}

_OWORD *sub_25F6B5CC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  *(unsigned char *)(*(void *)(v7 + 32) + v9) = *(unsigned char *)(*(void *)(v7 + 32) + v10);
  return a1;
}

void *sub_25F6B5D6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  *(unsigned char *)(*(void *)(v10 + 24) + v12) = *(unsigned char *)(*(void *)(v10 + 24) + v13);
  return a1;
}

uint64_t sub_25F6B5E38(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 32) & ~v7) + 1;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return sub_25F67D9DC(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7, v6, v4);
      }
      unint64_t v16 = *((void *)a1 + 1);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_25F6B5FD4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = *(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) + 1;
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) != -1)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x25F6B622CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v20 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
          sub_25F674004(v20, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ConstellationParameter()
{
  return sub_25F67FB98();
}

uint64_t sub_25F6B626C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_25F6B6278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 48));
}

uint64_t sub_25F6B62B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CoreParameterProtocol.description.getter(a1, WitnessTable);
}

uint64_t sub_25F6B6304(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_25F6B630C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_25F6B6314(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25F6B6374(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25F6B63B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, _OWORD *a5@<X8>)
{
  char v8 = *a4;
  char v27 = 1;
  if (*(void *)(a3 + 16)) {
    BOOL v9 = (v8 - 7) > 1u;
  }
  else {
    BOOL v9 = 1;
  }
  if (v9)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)((char *)a5 + 57) = 0u;
    a5[2] = 0u;
    a5[3] = 0u;
    *a5 = 0u;
    a5[1] = 0u;
  }
  else
  {
    uint64_t v11 = sub_25F6F5F20(a3);
    sub_25F6B80A0(a1, a2, v8, v11);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19[0] = a1;
    v19[1] = v13;
    char v18 = v8;
    id v14 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
    id v26 = CoreRule.Predicate.init(compoundOperation:)(&v18);
    char v20 = 1;
    sub_25F70E570();
    uint64_t v15 = sub_25F6F5F20(a3);
    swift_bridgeObjectRelease();
    uint64_t v24 = &type metadata for CoreRule.Subrules;
    unint64_t v16 = sub_25F6B66AC();
    uint64_t v21 = a1;
    uint64_t v22 = v13;
    unint64_t v25 = v16;
    uint64_t v23 = v15;
    sub_25F6B66F8((uint64_t)v19, (uint64_t)a5);
    return sub_25F6B6730((uint64_t)v19);
  }
  return result;
}

void sub_25F6B64F0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_25F6B64FC@<X0>(uint64_t a1@<X8>)
{
  return sub_25F67B010(v1 + 24, a1);
}

id sub_25F6B6508()
{
  return *(id *)(v0 + 64);
}

void sub_25F6B6510(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t sub_25F6B6520(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_25F70F330();
  }
}

uint64_t sub_25F6B6550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(a4 + 56);
  *(void *)(v5 + 32) = a5;
  *(void *)(v5 + 40) = v6;
  *(unsigned char *)(v5 + 56) = *(unsigned char *)(a4 + 64);
  *(void *)(v5 + 48) = *(void *)(a4 + 72);
  *(unsigned char *)(v5 + 57) = *(unsigned char *)(a4 + 80);
  return MEMORY[0x270FA2498](sub_25F6B6590, 0, 0);
}

uint64_t sub_25F6B6590()
{
  uint64_t v2 = v1[6];
  if (v2)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (*(void *)(v2 + 16))
    {
      uint64_t v4 = sub_25F67CA58();
      sub_25F6B82AC(v4, v5, v6, v7, v8);
      if (v0)
      {
LABEL_10:
        id v14 = (uint64_t (*)(void))v1[1];
        return v14();
      }
      sub_25F6BD1C0();
    }
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = v1[5];
  if (v9 && *(void *)(v9 + 16))
  {
    uint64_t v10 = sub_25F67CA58();
    sub_25F6B70A0(v10, v11, v12, v13);
    if (v0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_25F6BD1C0();
  }
  unint64_t v16 = (uint64_t (*)(uint64_t))v1[1];
  return v16(v3);
}

unint64_t sub_25F6B66AC()
{
  unint64_t result = qword_26A7B0AF0;
  if (!qword_26A7B0AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AF0);
  }
  return result;
}

uint64_t sub_25F6B66F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F6B6730(uint64_t a1)
{
  return a1;
}

void destroy for ConstellationRule(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_25F67A28C(a1 + 24);
  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for ConstellationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  sub_25F70E570();
  v8(a1 + 24, v5, v7);
  uint64_t v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  id v10 = v9;
  return a1;
}

uint64_t assignWithCopy for ConstellationRule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_25F66B5AC((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  uint64_t v4 = *(void **)(a2 + 64);
  uint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void *initializeWithTake for ConstellationRule(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for ConstellationRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_25F67A28C(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 64);
  id v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationRule(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationRule()
{
  return &type metadata for ConstellationRule;
}

unint64_t sub_25F6B69F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25F6B6A20();
  unint64_t result = sub_25F6B6A6C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25F6B6A20()
{
  unint64_t result = qword_26A7B0B28;
  if (!qword_26A7B0B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B28);
  }
  return result;
}

unint64_t sub_25F6B6A6C()
{
  unint64_t result = qword_26A7B0B30;
  if (!qword_26A7B0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0B30);
  }
  return result;
}

uint64_t sub_25F6B6AB8(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_25F6D28D0(0, v3, 0);
    uint64_t v5 = v38;
    uint64_t v39 = v37;
    id v6 = (uint64_t *)(a1 + 40);
    uint64_t v7 = &qword_26B39E0A8;
    uint64_t v24 = MEMORY[0x263F8EE58] + 8;
    do
    {
      uint64_t v8 = v7;
      uint64_t v10 = *(v6 - 1);
      uint64_t v9 = *v6;
      uint64_t v11 = *(void *)(a2 + 16);
      swift_bridgeObjectRetain_n();
      if (v11 && (unint64_t v12 = sub_25F67AD88(v10, v9), (v13 & 1) != 0))
      {
        sub_25F69D9E0(*(void *)(a2 + 56) + 32 * v12, (uint64_t)&v31);
        *((void *)&v34 + 1) = &type metadata for AnyCodable;
        uint64_t v14 = swift_allocObject();
        *(void *)&long long v33 = v14;
        long long v15 = v32;
        *(_OWORD *)(v14 + 16) = v31;
        *(_OWORD *)(v14 + 32) = v15;
        BYTE8(v36) = 0;
        *((void *)&v35 + 1) = v10;
        *(void *)&long long v36 = v9;
        LOBYTE(v35) = 0;
        sub_25F67A890((uint64_t)&v33, (uint64_t)v30);
        sub_25F67A890((uint64_t)v30, (uint64_t)&v28);
        if (v29)
        {
          sub_25F67AD1C(&v28, &v26);
          _OWORD v25[3] = v24;
          v25[0] = swift_allocObject();
          sub_25F67AD1C(&v26, (_OWORD *)(v25[0] + 16));
          uint64_t v7 = v8;
          sub_25F67EFC0((uint64_t)v30, v8);
          unint64_t v16 = (long long *)v25;
        }
        else
        {
          uint64_t v27 = MEMORY[0x263F8D310];
          *(void *)&long long v26 = 0x3E6C6C756E3CLL;
          *((void *)&v26 + 1) = 0xE600000000000000;
          uint64_t v7 = v8;
          sub_25F67EFC0((uint64_t)v30, v8);
          unint64_t v16 = &v26;
        }
        sub_25F67AD1C(v16, &v31);
        sub_25F67EFC0((uint64_t)&v33, v7);
      }
      else
      {
        long long v33 = 0u;
        long long v34 = 0u;
        BYTE8(v36) = 0;
        *((void *)&v35 + 1) = v10;
        *(void *)&long long v36 = v9;
        LOBYTE(v35) = 0;
        uint64_t v7 = v8;
        sub_25F67EFC0((uint64_t)&v33, v8);
        long long v31 = 0u;
        long long v32 = 0u;
      }
      sub_25F6B7AD4((uint64_t)&v31, (uint64_t)v39, &qword_26B39D810);
      swift_bridgeObjectRelease();
      uint64_t v38 = v5;
      unint64_t v18 = *(void *)(v5 + 16);
      unint64_t v17 = *(void *)(v5 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_25F6D28D0((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v7 = v8;
        uint64_t v5 = v38;
      }
      v6 += 2;
      *(void *)(v5 + 16) = v18 + 1;
      int v19 = (_OWORD *)(v5 + (v18 << 6));
      long long v20 = v35;
      long long v21 = v36;
      long long v22 = v37[1];
      void v19[4] = v37[0];
      v19[5] = v22;
      void v19[2] = v20;
      _OWORD v19[3] = v21;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

uint64_t sub_25F6B6D68(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_25F6D28D0(0, v1, 0);
    uint64_t v3 = v18;
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_25F70E570();
      char v7 = sub_25F70E7C0();
      sub_25F70E570();
      if (v7)
      {
        unint64_t v8 = sub_25F70E750();
        unint64_t v9 = sub_25F70AF24(v8, v5, v6);
        uint64_t v5 = MEMORY[0x2611FB2A0](v9);
        unint64_t v11 = v10;
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v11 = v6;
      }
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v18 + 16);
      unint64_t v12 = *(void *)(v18 + 24);
      if (v13 >= v12 >> 1) {
        sub_25F6D28D0((char *)(v12 > 1), v13 + 1, 1);
      }
      v4 += 2;
      *(void *)(v18 + 16) = v13 + 1;
      uint64_t v14 = v18 + (v13 << 6);
      *(unsigned char *)(v14 + 32) = 9;
      *(_DWORD *)(v14 + 33) = *(_DWORD *)v17;
      *(_DWORD *)(v14 + 36) = *(_DWORD *)&v17[3];
      *(void *)(v14 + 40) = v5;
      *(void *)(v14 + 48) = v11;
      *(unsigned char *)(v14 + 56) = 1;
      *(_DWORD *)(v14 + 60) = *(_DWORD *)&v16[3];
      *(_DWORD *)(v14 + 57) = *(_DWORD *)v16;
      *(_OWORD *)(v14 + 64) = 0u;
      *(_OWORD *)(v14 + 80) = 0u;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

void sub_25F6B6F10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = a1 + 40;
    uint64_t v5 = MEMORY[0x263F8EE78];
    uint64_t v14 = a1 + 40;
    do
    {
      uint64_t v15 = v5;
      unint64_t v6 = (uint64_t *)(v4 + 16 * v3);
      unint64_t v7 = v3;
      while (1)
      {
        if (v7 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v9 = *(v6 - 1);
        uint64_t v8 = *v6;
        unint64_t v3 = v7 + 1;
        sub_25F70E570();
        if (sub_25F70E7C0()) {
          break;
        }
        swift_bridgeObjectRelease();
        v6 += 2;
        ++v7;
        if (v2 == v3) {
          goto LABEL_13;
        }
      }
      uint64_t v5 = v15;
      uint64_t v17 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F686110();
        uint64_t v5 = v15;
      }
      unint64_t v10 = *(void *)(v5 + 16);
      unint64_t v11 = v10 + 1;
      if (v10 >= *(void *)(v5 + 24) >> 1)
      {
        unint64_t v16 = v10 + 1;
        unint64_t v13 = *(void *)(v5 + 16);
        sub_25F686110();
        unint64_t v11 = v16;
        unint64_t v10 = v13;
        uint64_t v5 = v17;
      }
      *(void *)(v5 + 16) = v11;
      uint64_t v12 = v5 + 16 * v10;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      uint64_t v4 = v14;
    }
    while (v2 - 1 != v7);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_25F6B70A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = *a4;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unsigned int v55 = *a4;
    uint64_t v37 = a3 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v5 = 0;
    uint64_t v6 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v7 = *(void *)(v37 + 24 * v5 + 16);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v39 = v5;
        uint64_t v40 = v6;
        swift_bridgeObjectRetain_n();
        sub_25F70E570();
        uint64_t v9 = 32;
        uint64_t v10 = MEMORY[0x263F8EE78];
        do
        {
          memcpy(__dst, (const void *)(v7 + v9), sizeof(__dst));
          sub_25F6B7AD4((uint64_t)&__dst[32], (uint64_t)v49, &qword_26A7B0D50);
          sub_25F6B7AD4((uint64_t)v49, (uint64_t)&v53, &qword_26A7B0D50);
          uint64_t v11 = v54;
          if (v54)
          {
            uint64_t v12 = v53;
            uint64_t v13 = v7;
            sub_25F6B7AD4((uint64_t)&__dst[16], (uint64_t)v50, &qword_26B39D2A8);
            sub_25F6B7AD4((uint64_t)v50, (uint64_t)&v51, &qword_26B39D2A8);
            if (v52 != 1)
            {
              uint64_t v14 = v51;
              __src[6] = &type metadata for ConstellationEvent;
              __src[7] = sub_25F6A5610();
              __src[3] = v12;
              __src[4] = v11;
              sub_25F6B79A4((uint64_t)__dst);
              sub_25F70E570();
              swift_retain();
              sub_25F6B79FC((uint64_t)v49);
              uint64_t v15 = sub_25F6B76B4((uint64_t)__dst);
              uint64_t v16 = sub_25F6B7808((uint64_t)__dst);
              long long v44 = xmmword_25F712890;
              char v45 = 0;
              char v56 = 5;
              void v43[3] = MEMORY[0x263F8D6C8];
              v43[0] = v14;
              id v17 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
              id v18 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)((uint64_t *)&v44, &v56, (uint64_t)v43, v15, v16);
              sub_25F6B7A28((uint64_t)__dst);
              LOBYTE(__src[9]) = 1;
              sub_25F6B7ED8(a1, a2, (uint64_t)v18, &__src[3]);
              uint64_t v20 = v19;
              swift_release();
              swift_bridgeObjectRelease();
              __src[0] = a1;
              __src[1] = v20;
              LOBYTE(__src[2]) = 2;
              __src[8] = v18;
              memcpy(v43, __src, 0x49uLL);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_25F6BE60C();
                uint64_t v10 = v22;
              }
              unint64_t v21 = *(void *)(v10 + 16);
              if (v21 >= *(void *)(v10 + 24) >> 1)
              {
                sub_25F6BE60C();
                uint64_t v10 = v23;
              }
              *(void *)(v10 + 16) = v21 + 1;
              memcpy((void *)(v10 + 80 * v21 + 32), v43, 0x49uLL);
              uint64_t v7 = v13;
            }
          }
          v9 += 104;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease_n();
        uint64_t v5 = v39;
        uint64_t v6 = v40;
      }
      else
      {
        sub_25F70E570();
        sub_25F70E570();
        uint64_t v10 = MEMORY[0x263F8EE78];
      }
      uint64_t v24 = *(void *)(v10 + 16);
      if (v24)
      {
        if (v24 != 1)
        {
          LOBYTE(__src[9]) = 1;
          sub_25F70E570();
          uint64_t v25 = sub_25F6F5F20(v10);
          sub_25F6B80A0(a1, a2, 7, v25);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __src[0] = a1;
          __src[1] = v27;
          LOBYTE(v43[0]) = 7;
          id v28 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
          __src[8] = CoreRule.Predicate.init(compoundOperation:)((char *)v43);
          LOBYTE(__src[2]) = 1;
          sub_25F70E570();
          uint64_t v29 = sub_25F6F5F20(v10);
          swift_bridgeObjectRelease();
          __src[6] = &type metadata for CoreRule.Subrules;
          unint64_t v30 = sub_25F6B66AC();
          __src[3] = a1;
          __src[4] = v27;
          __src[7] = v30;
          __src[5] = v29;
          sub_25F6B66F8((uint64_t)__src, (uint64_t)v47);
          sub_25F6B6730((uint64_t)__src);
          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        sub_25F6B66F8(v10 + 32, (uint64_t)v47);
      }
      else
      {
        memset(v47, 0, 73);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_22:
      swift_bridgeObjectRelease();
      if (*((void *)&v47[0] + 1))
      {
        memcpy(__src, v47, 0x49uLL);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25F6BE60C();
          uint64_t v6 = v32;
        }
        unint64_t v31 = *(void *)(v6 + 16);
        if (v31 >= *(void *)(v6 + 24) >> 1)
        {
          sub_25F6BE60C();
          uint64_t v6 = v33;
        }
        *(void *)(v6 + 16) = v31 + 1;
        memcpy((void *)(v6 + 80 * v31 + 32), __src, 0x49uLL);
      }
      else
      {
        sub_25F67EFC0((uint64_t)v47, &qword_26A7B0B40);
      }
      if (++v5 == v38)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v55;
        goto LABEL_32;
      }
    }
  }
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_32:
  uint64_t v34 = *(void *)(v6 + 16);
  if (!v34)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  if (v34 != 1 && (sub_25F6CC870(v4, 7) & 1) == 0)
  {
    if (sub_25F6CC870(v4, 8))
    {
      sub_25F67ACD8(&qword_26A7B1578);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25F710D20;
      LOBYTE(v47[0]) = v4;
      sub_25F70E570();
      sub_25F6B63B0(a1, a2, v6, (char *)v47, (_OWORD *)(inited + 32));
      uint64_t v6 = sub_25F6B889C(inited);
      swift_setDeallocating();
      sub_25F6B9E1C();
      return v6;
    }
    goto LABEL_37;
  }
  return v6;
}

uint64_t sub_25F6B76B4(uint64_t a1)
{
  sub_25F6B7AD4(a1 + 96, (uint64_t)&v9, &qword_26A7B0D98);
  sub_25F6B7AD4((uint64_t)&v9, (uint64_t)&v10, &qword_26A7B0D98);
  if (v10 == 1
    || (uint64_t v11 = v10,
        sub_25F6B7AD4((uint64_t)&v11, (uint64_t)v12, &qword_26A7B1580),
        sub_25F6B7AD4((uint64_t)v12, (uint64_t)&v13, &qword_26A7B1580),
        (uint64_t v2 = v13) == 0))
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  else
  {
    sub_25F70E570();
    sub_25F6EAD68();
    uint64_t v4 = v3;
    sub_25F6B7A7C(&v9);
    sub_25F6B7AA8(&v9);
    uint64_t v5 = sub_25F6B6AB8(v4, v2);
    swift_release();
  }
  if (*(void *)(a1 + 88))
  {
    uint64_t v6 = sub_25F70E570();
    sub_25F6B6F10(v6);
    sub_25F6B6D68(v7);
    swift_bridgeObjectRelease();
  }
  sub_25F6BD288();
  return v5;
}

uint64_t sub_25F6B7808(uint64_t a1)
{
  sub_25F6B7AD4(a1 + 56, (uint64_t)v19, &qword_26B39D2A8);
  sub_25F6B7AD4((uint64_t)v19, (uint64_t)&v20, &qword_26B39D2A8);
  if (v21)
  {
    uint64_t v2 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v3 = sub_25F6A53B0(v20);
    uint64_t v5 = v4;
    sub_25F6BE7E8();
    uint64_t v2 = v6;
    unint64_t v7 = *(void *)(v6 + 16);
    if (v7 >= *(void *)(v6 + 24) >> 1)
    {
      sub_25F6BE7E8();
      uint64_t v2 = v15;
    }
    *(void *)(v2 + 16) = v7 + 1;
    uint64_t v8 = v2 + 24 * v7;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v5;
    *(unsigned char *)(v8 + 48) = 0;
  }
  sub_25F6B7AD4(a1 + 72, (uint64_t)v18, &qword_26B39D2A8);
  sub_25F6B7AD4((uint64_t)v18, (uint64_t)&v22, &qword_26B39D2A8);
  if ((v23 & 1) == 0)
  {
    uint64_t v9 = sub_25F6A53B0(v22);
    uint64_t v11 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25F6BE7E8();
      uint64_t v2 = v16;
    }
    unint64_t v12 = *(void *)(v2 + 16);
    if (v12 >= *(void *)(v2 + 24) >> 1)
    {
      sub_25F6BE7E8();
      uint64_t v2 = v17;
    }
    *(void *)(v2 + 16) = v12 + 1;
    uint64_t v13 = v2 + 24 * v12;
    *(void *)(v13 + 32) = v9;
    *(void *)(v13 + 40) = v11;
    *(unsigned char *)(v13 + 48) = 1;
  }
  return v2;
}

uint64_t sub_25F6B79A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F6B4F00(v2);
  return a1;
}

uint64_t sub_25F6B79FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F6B7A28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25F6B4F10(v2);
  return a1;
}

uint64_t *sub_25F6B7A7C(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_25F6B7AA8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_25F6B7AD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_25F67ACD8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25F6B7B38()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25F6B7B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  void v10[3] = sub_25F67ACD8(&qword_26A7B0F08);
  v10[0] = MEMORY[0x263F8D4F8];
  sub_25F70F070();
  sub_25F67A28C((uint64_t)v10);
  sub_25F70E790();
  sub_25F70E790();
  uint64_t result = swift_release();
  unint64_t v9 = v12;
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  *(unsigned char *)(a4 + 32) = a3;
  *(unsigned char *)(a4 + 33) = 1;
  return result;
}

uint64_t sub_25F6B7C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  void v10[3] = sub_25F67ACD8(&qword_26A7B0F10);
  v10[0] = MEMORY[0x263F8D6C8];
  sub_25F70F070();
  sub_25F67A28C((uint64_t)v10);
  sub_25F70E790();
  sub_25F70E790();
  uint64_t result = swift_release();
  unint64_t v9 = v12;
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = a1;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  *(unsigned char *)(a4 + 40) = 1;
  return result;
}

uint64_t sub_25F6B7DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t v10 = sub_25F67ACD8(&qword_26B39D2A8);
  void v13[3] = sub_25F67ACD8(&qword_26A7B1598);
  v13[0] = v10;
  sub_25F70F070();
  sub_25F67A28C((uint64_t)v13);
  sub_25F70E790();
  sub_25F70E790();
  uint64_t result = swift_release();
  unint64_t v12 = v15;
  *(void *)a5 = v14;
  *(void *)(a5 + 8) = v12;
  *(void *)(a5 + 16) = a1;
  *(void *)(a5 + 24) = a2;
  *(void *)(a5 + 32) = a3;
  *(unsigned char *)(a5 + 40) = a4 & 1;
  *(unsigned char *)(a5 + 41) = 1;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_25F6B7ED8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_25F70E570();
  sub_25F6768D4();
  uint64_t v5 = a4[3];
  uint64_t v6 = a4[4];
  sub_25F67A2DC(a4, v5);
  sub_25F6654A8(v5, v6);
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F6768D4();
  uint64_t v7 = a4[3];
  uint64_t v8 = a4[4];
  sub_25F67A2DC(a4, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F6768D4();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_25F6B80A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v21 = a2;
  sub_25F70E570();
  sub_25F70E790();
  LOBYTE(v17[0]) = a3;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_25F686110();
    uint64_t v8 = a4 + 32;
    uint64_t v7 = v20;
    do
    {
      sub_25F67B010(v8, (uint64_t)v17);
      uint64_t v9 = v18;
      uint64_t v10 = v19;
      sub_25F67A2DC(v17, v18);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      uint64_t v13 = v12;
      sub_25F67A28C((uint64_t)v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F686110();
        uint64_t v7 = v20;
      }
      unint64_t v15 = *(void *)(v7 + 16);
      unint64_t v14 = *(void *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_25F67E68C(v14);
        sub_25F686110();
        uint64_t v7 = v20;
      }
      *(void *)(v7 + 16) = v15 + 1;
      uint64_t v16 = v7 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  v17[0] = v7;
  sub_25F67ACD8(&qword_26B39CDA0);
  sub_25F681778((unint64_t *)&qword_26A7B0EF8, &qword_26B39CDA0);
  sub_25F70E650();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
}

uint64_t sub_25F6B82AC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  v45[6] = a5;
  if (!a3) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v8 = *a4;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v38 = *(void *)(a3 + 16);
  if (!v38)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_39:
    uint64_t v32 = *(void *)(v11 + 16);
    if (v32)
    {
      if (v32 == 1 || (sub_25F6CC870(v8, 7) & 1) != 0) {
        return v11;
      }
      if (sub_25F6CC870(v8, 8))
      {
        sub_25F67ACD8(&qword_26A7B1578);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_25F710D20;
        LOBYTE(v42[0]) = v8;
        sub_25F70E570();
        sub_25F6B63B0(a1, a2, v11, (char *)v42, (_OWORD *)(inited + 32));
        uint64_t v11 = sub_25F6B889C(inited);
        swift_setDeallocating();
        sub_25F6B9E1C();
        return v11;
      }
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  unsigned int v35 = *a4;
  uint64_t v37 = a3 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 0;
  uint64_t v11 = v9;
  uint64_t v36 = a1;
  while (1)
  {
    uint64_t v12 = v37 + 56 * v10++;
    sub_25F6B22D0(v12, (uint64_t)v43);
    if (((1 << v44) & 0x1B) != 0) {
      goto LABEL_5;
    }
    if (v44 == 2) {
      break;
    }
    sub_25F69D9E0((uint64_t)v45, (uint64_t)__src);
    sub_25F67AD1C(__src, __dst);
    sub_25F67ACD8(&qword_26B39D030);
    if (!swift_dynamicCast()) {
      goto LABEL_5;
    }
    uint64_t v29 = v40[0];
    *(void *)&__src[0] = v9;
    sub_25F6B983C(v40[0], a1, a2, 0);
    sub_25F6BD1C0();
    sub_25F6B983C(v29, a1, a2, 1);
    swift_bridgeObjectRelease();
    sub_25F6BD1C0();
    uint64_t v13 = *(void *)&__src[0];
LABEL_6:
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      if (v14 != 1)
      {
        BYTE8(__src[4]) = 1;
        sub_25F70E570();
        uint64_t v21 = sub_25F6F5F20(v13);
        sub_25F6B80A0(a1, a2, 7, v21);
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&__src[0] = a1;
        *((void *)&__src[0] + 1) = v23;
        LOBYTE(__dst[0]) = 7;
        id v24 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
        *(void *)&__src[4] = CoreRule.Predicate.init(compoundOperation:)((char *)__dst);
        LOBYTE(__src[1]) = 1;
        sub_25F70E570();
        uint64_t v25 = sub_25F6F5F20(v13);
        swift_bridgeObjectRelease();
        *(void *)&__src[3] = &type metadata for CoreRule.Subrules;
        unint64_t v26 = sub_25F6B66AC();
        *((void *)&__src[1] + 1) = a1;
        *(void *)&void __src[2] = v23;
        uint64_t v9 = MEMORY[0x263F8EE78];
        *((void *)&__src[3] + 1) = v26;
        *((void *)&__src[2] + 1) = v25;
        sub_25F6B66F8((uint64_t)__src, (uint64_t)v42);
        sub_25F6B6730((uint64_t)__src);
        goto LABEL_26;
      }
      sub_25F6B66F8(v13 + 32, (uint64_t)v42);
    }
    else
    {
      memset(v42, 0, 73);
    }
    swift_bridgeObjectRelease();
LABEL_26:
    sub_25F6B2308((uint64_t)v43);
    if (*((void *)&v42[0] + 1))
    {
      memcpy(__src, v42, 0x49uLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F67CF88();
        sub_25F6BE60C();
        uint64_t v11 = v30;
      }
      unint64_t v28 = *(void *)(v11 + 16);
      unint64_t v27 = *(void *)(v11 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_25F67E68C(v27);
        sub_25F6BE60C();
        uint64_t v11 = v31;
      }
      *(void *)(v11 + 16) = v28 + 1;
      memcpy((void *)(v11 + 80 * v28 + 32), __src, 0x49uLL);
    }
    else
    {
      sub_25F67EFC0((uint64_t)v42, &qword_26A7B0B40);
    }
    if (v10 == v38)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v8 = v35;
      goto LABEL_39;
    }
  }
  sub_25F69D9E0((uint64_t)v45, (uint64_t)__src);
  sub_25F67AD1C(__src, __dst);
  sub_25F67ACD8(&qword_26B39DE00);
  if (!swift_dynamicCast())
  {
LABEL_5:
    uint64_t v13 = v9;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v40[0] + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v13 = v9;
  uint64_t v16 = v40[0] + 32;
  sub_25F70E570();
  while (1)
  {
    sub_25F67AD2C(v16, (uint64_t)v40);
    sub_25F67AD2C((uint64_t)v40, (uint64_t)__dst);
    sub_25F70E570();
    swift_retain();
    sub_25F6B8E50(a1, a2, __dst, __src);
    if (v5) {
      break;
    }
    sub_25F67A28C((uint64_t)v40);
    if (*((void *)&__src[0] + 1))
    {
      memcpy(__dst, __src, 0x49uLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F67CF88();
        sub_25F6BE60C();
        uint64_t v13 = v19;
      }
      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_25F67E68C(v17);
        sub_25F6BE60C();
        uint64_t v13 = v20;
      }
      *(void *)(v13 + 16) = v18 + 1;
      memcpy((void *)(v13 + 80 * v18 + 32), __dst, 0x49uLL);
      a1 = v36;
    }
    else
    {
      sub_25F67EFC0((uint64_t)__src, &qword_26A7B0B40);
    }
    v16 += 32;
    if (!--v15)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v9 = MEMORY[0x263F8EE78];
      goto LABEL_6;
    }
  }
  sub_25F67A28C((uint64_t)v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_25F6B2308((uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v11;
}

uint64_t sub_25F6B889C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = a1 + 32;
  sub_25F70E570();
  uint64_t v3 = MEMORY[0x263F8EE78];
  do
  {
    sub_25F6B9EC4(v2, (uint64_t)v11);
    sub_25F6B9F2C((uint64_t)v11, (uint64_t)__src);
    if (__src[1])
    {
      memcpy(v9, __src, sizeof(v9));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F67CF88();
        sub_25F6BE60C();
        uint64_t v3 = v6;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      unint64_t v4 = *(void *)(v3 + 24);
      if (v5 >= v4 >> 1)
      {
        sub_25F67E68C(v4);
        sub_25F6BE60C();
        uint64_t v3 = v7;
      }
      *(void *)(v3 + 16) = v5 + 1;
      memcpy((void *)(v3 + 80 * v5 + 32), v9, 0x49uLL);
    }
    else
    {
      sub_25F67EFC0((uint64_t)__src, &qword_26A7B0B40);
    }
    v2 += 80;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_25F6B89D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  long long v26 = *a3;
  uint64_t v13 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  *(void *)(a6 + 48) = sub_25F67ACD8(&qword_26A7B0D18);
  *(void *)(a6 + 56) = sub_25F681778(&qword_26A7B0D10, &qword_26A7B0D18);
  uint64_t v14 = swift_allocObject();
  *(void *)(a6 + 24) = v14;
  long long v15 = a3[1];
  *(_OWORD *)(v14 + 16) = *a3;
  *(_OWORD *)(v14 + 32) = v15;
  *(_WORD *)(v14 + 48) = *((_WORD *)a3 + 16);
  v24[0] = v13;
  v24[1] = v12;
  char v25 = 1;
  char v23 = a4;
  uint64_t v22 = MEMORY[0x263F8D4F8];
  v21[0] = a5;
  id v16 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_25F6B79FC((uint64_t)&v26);
  id v17 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v24, &v23, (uint64_t)v21, 0, 0);
  *(unsigned char *)(a6 + 72) = 1;
  sub_25F6B7ED8(a1, a2, (uint64_t)v17, (void *)(a6 + 24));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  sub_25F6B9E88((uint64_t)&v26);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = v19;
  *(unsigned char *)(a6 + 16) = 4;
  *(void *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_25F6B8B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v25 = *a3;
  uint64_t v13 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  *(void *)(a6 + 48) = sub_25F67ACD8(&qword_26A7B0D28);
  *(void *)(a6 + 56) = sub_25F681778(&qword_26A7B0D20, &qword_26A7B0D28);
  uint64_t v14 = (_OWORD *)swift_allocObject();
  *(void *)(a6 + 24) = v14;
  long long v15 = a3[1];
  v14[1] = *a3;
  _OWORD v14[2] = v15;
  *(_OWORD *)((char *)v14 + 41) = *(long long *)((char *)a3 + 25);
  v23[0] = v13;
  v23[1] = v12;
  char v24 = 1;
  char v22 = a4;
  v21[3] = MEMORY[0x263F8D6C8];
  v21[0] = a5;
  id v16 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_25F6B79FC((uint64_t)&v25);
  id v17 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v23, &v22, (uint64_t)v21, 0, 0);
  *(unsigned char *)(a6 + 72) = 1;
  sub_25F6B7ED8(a1, a2, (uint64_t)v17, (void *)(a6 + 24));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  sub_25F6B9E88((uint64_t)&v25);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = v19;
  *(unsigned char *)(a6 + 16) = 4;
  *(void *)(a6 + 64) = v17;
  return result;
}

uint64_t sub_25F6B8CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  long long v29 = *a3;
  uint64_t v15 = *((void *)a3 + 2);
  uint64_t v14 = *((void *)a3 + 3);
  *(void *)(a7 + 48) = sub_25F67ACD8(&qword_26A7B1588);
  *(void *)(a7 + 56) = sub_25F681778(&qword_26A7B1590, &qword_26A7B1588);
  id v16 = (_OWORD *)swift_allocObject();
  *(void *)(a7 + 24) = v16;
  long long v17 = a3[1];
  v16[1] = *a3;
  _OWORD v16[2] = v17;
  *(_OWORD *)((char *)v16 + 42) = *(long long *)((char *)a3 + 26);
  v27[0] = v15;
  v27[1] = v14;
  char v28 = 1;
  char v26 = a4;
  uint64_t v25 = sub_25F67ACD8(&qword_26B39D2A8);
  uint64_t v23 = a5;
  char v24 = a6 & 1;
  id v18 = objc_allocWithZone((Class)type metadata accessor for CoreRule.Predicate());
  swift_bridgeObjectRetain_n();
  sub_25F6B79FC((uint64_t)&v29);
  id v19 = CoreRule.Predicate.init(argument:operation:value:queries:subpredicates:)(v27, &v26, (uint64_t)&v23, 0, 0);
  *(unsigned char *)(a7 + 72) = 1;
  sub_25F6B7ED8(a1, a2, (uint64_t)v19, (void *)(a7 + 24));
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_25F6B9E88((uint64_t)&v29);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = v21;
  *(unsigned char *)(a7 + 16) = 4;
  *(void *)(a7 + 64) = v19;
  return result;
}

uint64_t sub_25F6B8E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  sub_25F67AD2C((uint64_t)a3, (uint64_t)&v31);
  sub_25F67ACD8(&qword_26B39D030);
  if (swift_dynamicCast())
  {
    sub_25F685FA4(7955819, 0xE300000000000000);
    if (!v32)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = &v31;
LABEL_19:
      sub_25F67EFC0((uint64_t)v13, &qword_26B39E0A8);
      goto LABEL_20;
    }
    if (swift_dynamicCast())
    {
      uint64_t v23 = v29;
      sub_25F685FA4(0x65756C6176, 0xE500000000000000);
      swift_bridgeObjectRelease();
      if (v30)
      {
        uint64_t v24 = *((void *)&v29 + 1);
        char v22 = a4;
        sub_25F67AD1C(&v29, &v31);
        if (qword_26B39D830 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for logger();
        sub_25F67F3A4(v21, (uint64_t)qword_26B39D818);
        *(void *)&long long v29 = 0;
        *((void *)&v29 + 1) = 0xE000000000000000;
        sub_25F70EEC0();
        swift_bridgeObjectRelease();
        *(void *)&long long v29 = 0xD00000000000001CLL;
        *((void *)&v29 + 1) = 0x800000025F719030;
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F68C2F0(v29, *((unint64_t *)&v29 + 1));
        swift_bridgeObjectRelease();
        if (qword_26B39D588 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_25F67ACD8(&qword_26B39D590);
        uint64_t v9 = sub_25F67F3A4(v8, (uint64_t)qword_26B3A3028);
        swift_beginAccess();
        uint64_t v10 = type metadata accessor for DeviceProfile();
        if (sub_25F67D9DC(v9, 1, v10) || (uint64_t v16 = *(void *)(v9 + *(int *)(v10 + 44))) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_26B39C298 != -1) {
            swift_once();
          }
          sub_25F67F3A4(v21, (uint64_t)qword_26B39C280);
          sub_25F68C2F0(0xD00000000000002CLL, 0x800000025F719050);
          swift_release();
          uint64_t v11 = &v31;
          goto LABEL_13;
        }
        sub_25F67AD2C((uint64_t)&v31, (uint64_t)&v29);
        sub_25F70E570();
        if (swift_dynamicCast())
        {
          int v17 = v36;
          sub_25F70E570();
          sub_25F6A5868(v23, v24, v16, &v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26)
          {
            sub_25F67AD2C((uint64_t)&v25, (uint64_t)&v27);
            sub_25F6674D8((uint64_t)&v25);
            if (swift_dynamicCast())
            {
              int v18 = v25;
              sub_25F70E570();
              sub_25F70E570();
              swift_retain();
              sub_25F6B7B74(v23, v24, v18, (uint64_t)v34);
              sub_25F6B89D8(a1, a2, v34, 0, v17, (uint64_t)__src);
              if (v17 != v18)
              {
                uint64_t v27 = 0;
                unint64_t v28 = 0xE000000000000000;
                sub_25F70EEC0();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
LABEL_38:
                sub_25F70E790();
                swift_bridgeObjectRelease();
                sub_25F70E790();
                sub_25F68C2F0(v27, v28);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_32;
            }
            goto LABEL_34;
          }
        }
        else
        {
          if (!swift_dynamicCast())
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v27 = 0;
            unint64_t v28 = 0xE000000000000000;
            sub_25F70EEC0();
            sub_25F70E790();
            sub_25F67A2DC(&v31, v32);
            sub_25F70F2F0();
            sub_25F68C2F0(0, 0xE000000000000000);
            swift_release();
            goto LABEL_36;
          }
          uint64_t v19 = v36;
          sub_25F70E570();
          sub_25F6A5868(v23, v24, v16, &v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v26)
          {
            sub_25F67AD2C((uint64_t)&v25, (uint64_t)&v27);
            sub_25F6674D8((uint64_t)&v25);
            if (swift_dynamicCast())
            {
              uint64_t v20 = v25;
              sub_25F70E570();
              sub_25F70E570();
              swift_retain();
              sub_25F6B7C8C(v23, v24, v20, (uint64_t)v35);
              sub_25F6B8B50(a1, a2, v35, 0, v19, (uint64_t)__src);
              if (v20 != v19)
              {
                uint64_t v27 = 0;
                unint64_t v28 = 0xE000000000000000;
                sub_25F70EEC0();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
                sub_25F70E790();
                *(void *)&long long v25 = v19;
                sub_25F70F2C0();
                goto LABEL_38;
              }
LABEL_32:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
LABEL_39:
              sub_25F67A28C((uint64_t)&v31);
              sub_25F67A28C((uint64_t)&v29);
              memcpy(v22, __src, 0x49uLL);
              return sub_25F67A28C((uint64_t)a3);
            }
            goto LABEL_34;
          }
        }
        sub_25F67EFC0((uint64_t)&v25, &qword_26B39D810);
LABEL_34:
        uint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_25F70EEC0();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F68C2F0(v27, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
LABEL_36:
        swift_bridgeObjectRelease();
        sub_25F67A28C((uint64_t)&v31);
        uint64_t v11 = &v29;
LABEL_13:
        sub_25F67A28C((uint64_t)v11);
        uint64_t result = sub_25F67A28C((uint64_t)a3);
        *(_OWORD *)((char *)v22 + 57) = 0u;
        v22[2] = 0u;
        _OWORD v22[3] = 0u;
        *char v22 = 0u;
        v22[1] = 0u;
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = &v29;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_20:
  *(void *)&long long v31 = 0;
  *((void *)&v31 + 1) = 0xE000000000000000;
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F67A2DC(a3, a3[3]);
  sub_25F70F2F0();
  long long v14 = v31;
  sub_25F6931C0();
  swift_allocError();
  *uint64_t v15 = v14;
  swift_willThrow();
  swift_release();
  return sub_25F67A28C((uint64_t)a3);
}

uint64_t sub_25F6B983C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = a4 & 1;
  if (a4) {
    uint64_t v5 = 0x6564756C637865;
  }
  else {
    uint64_t v5 = 0x6564756C636E69;
  }
  if (!*(void *)(a1 + 16) || (unint64_t v9 = sub_25F67AD88(v5, 0xE700000000000000), (v10 & 1) == 0))
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  sub_25F67AD2C(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_33:
    sub_25F67EFC0((uint64_t)&v38, &qword_26B39E0A8);
    return MEMORY[0x263F8EE78];
  }
  sub_25F67ACD8(&qword_26B39CDA0);
  if ((swift_dynamicCast() & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  if (qword_26B39D588 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v12 = sub_25F67F3A4(v11, (uint64_t)qword_26B3A3028);
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for DeviceProfile();
  if (sub_25F67D9DC(v12, 1, v13)
    || (int v35 = *(unsigned __int8 *)(v12 + 1), v35 == 3)
    || (uint64_t v14 = *(void *)(*(void *)__src + 16)) == 0)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  char v34 = v4;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v16 = (uint64_t *)(*(void *)__src + 40);
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  do
  {
    uint64_t v17 = *(v16 - 1);
    uint64_t v18 = *v16;
    *((void *)&v39 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v38 = v17;
    *((void *)&v38 + 1) = v18;
    swift_bridgeObjectRetain_n();
    unsigned __int8 v19 = sub_25F6F2830((uint64_t)&v38);
    if (v19 == 3)
    {
      if (qword_26B39D830 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for logger();
      sub_25F67F3A4(v20, (uint64_t)qword_26B39D818);
      *(void *)&long long v38 = 0;
      *((void *)&v38 + 1) = 0xE000000000000000;
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F70E790();
      sub_25F6F73AC(v38, *((unint64_t *)&v38 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v21 = v19;
      swift_bridgeObjectRelease();
      sub_25F70E570();
      swift_retain();
      sub_25F6B7DA4(0x6570795472657355, 0xE800000000000000, v21, 0, (uint64_t)v40);
      char v22 = 1;
      if (sub_25F67D9DC(v33, 1, v32))
      {
        uint64_t v23 = 0;
      }
      else
      {
        int v24 = *(unsigned __int8 *)(v33 + 1);
        char v22 = v24 == 3;
        if (v24 == 3) {
          uint64_t v23 = 0;
        }
        else {
          uint64_t v23 = *(unsigned __int8 *)(v33 + 1);
        }
      }
      sub_25F6B8CC8(a2, a3, v40, v34, v23, v22, (uint64_t)&v38);
      if (qword_26B39D830 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for logger();
      sub_25F67F3A4(v25, (uint64_t)qword_26B39D818);
      *(void *)__src = 0;
      *(void *)&__src[8] = 0xE000000000000000;
      sub_25F70EEC0();
      sub_25F70E790();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      sub_25F70E790();
      unsigned __int8 v37 = v21;
      sub_25F70F070();
      sub_25F70E790();
      a3 = v30;
      sub_25F70E790();
      sub_25F70E790();
      unsigned __int8 v37 = v35;
      sub_25F70F070();
      sub_25F68C2F0(*(uint64_t *)__src, *(unint64_t *)&__src[8]);
      swift_bridgeObjectRelease();
      sub_25F6B66F8((uint64_t)&v38, (uint64_t)__src);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F6BE60C();
        uint64_t v15 = v27;
      }
      unint64_t v26 = *(void *)(v15 + 16);
      a2 = v31;
      if (v26 >= *(void *)(v15 + 24) >> 1)
      {
        sub_25F6BE60C();
        uint64_t v15 = v28;
      }
      *(void *)(v15 + 16) = v26 + 1;
      memcpy((void *)(v15 + 80 * v26 + 32), __src, 0x49uLL);
      sub_25F6B6730((uint64_t)&v38);
    }
    v16 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_25F6B9E1C()
{
  sub_25F67ACD8(&qword_26A7B0B40);
  swift_arrayDestroy();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_25F6B9E80()
{
  return sub_25F64FE30(50);
}

uint64_t sub_25F6B9E88(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F6B9EB4()
{
  return sub_25F64FE30(57);
}

uint64_t sub_25F6B9EBC()
{
  return sub_25F64FE30(58);
}

uint64_t sub_25F6B9EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26A7B0B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6B9F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26A7B0B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25F6B9F94(uint64_t a1, uint64_t a2)
{
  v6[1] = a1;
  void v6[2] = a2;
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  uint64_t v4 = (uint64_t *)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25F6BBC84(v4, v6);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_25F6BA018(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_25F6F2F04(a2, a3, a1, a4);
}

uint64_t sub_25F6BA040(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 1472) = a4;
  *(void *)(v4 + 1464) = a2;
  *(void *)(v4 + 1456) = a1;
  memcpy((void *)(v4 + 248), a2, 0xE8uLL);
  *(_OWORD *)(v4 + 1480) = *(_OWORD *)a3;
  *(void *)(v4 + 1496) = *(void *)(a3 + 16);
  *(_OWORD *)(v4 + 1504) = *(_OWORD *)(a3 + 24);
  *(unsigned char *)(v4 + 1409) = *(unsigned char *)(a3 + 40);
  *(_OWORD *)(v4 + 1520) = *(_OWORD *)(a3 + 48);
  *(unsigned char *)(v4 + 1410) = *(unsigned char *)(a3 + 64);
  *(void *)(v4 + 1536) = *(void *)(a3 + 72);
  *(unsigned char *)(v4 + 1411) = *(unsigned char *)(a3 + 80);
  return MEMORY[0x270FA2498](sub_25F6BA104, 0, 0);
}

uint64_t sub_25F6BA104()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 1512);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  *(void *)(v0 + 1544) = v3;
  __src = (void *)(v0 + 248);
  uint64_t v35 = v2;
  *(void *)(v0 + 1552) = v2;
  if (v1[2])
  {
    uint64_t v4 = v1[4];
    unint64_t v5 = v1[5];
    sub_25F70E570();
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *(void *)(v0 + 1568) = v5;
  *(void *)(v0 + 1560) = v4;
  char v32 = *(unsigned char *)(v0 + 1409);
  uint64_t v6 = *(const void **)(v0 + 1464);
  memcpy((void *)(v0 + 480), (const void *)(v0 + 328), 0x98uLL);
  uint64_t v7 = *(void *)(v0 + 480);
  memcpy(__dst, v6, 0xE8uLL);
  sub_25F70E570();
  swift_unownedRetain();
  sub_25F70E570();
  swift_unownedRetain();
  uint64_t v31 = v7;
  sub_25F70E570();
  sub_25F70E570();
  uint64_t v8 = sub_25F6BAC5C((uint64_t)__dst);
  sub_25F6B7AD4(v0 + 496, v0 + 1440, &qword_26A7B0EA0);
  sub_25F6B7AD4(v0 + 1440, v0 + 1448, &qword_26A7B0EA0);
  uint64_t v9 = *(void *)(v0 + 1448);
  if (v9)
  {
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = __src;
    sub_25F6BBBB8(v0 + 1440);
    uint64_t v11 = sub_25F6BB9B0(v9, (void (*)(uint64_t, void *))sub_25F6BB994, v10);
    sub_25F6B4A88(v0 + 1440);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_25F6B7AD4(v0 + 504, v0 + 632, &qword_26A7B0C18);
  sub_25F6B7AD4(v0 + 632, v0 + 888, &qword_26A7B0C18);
  uint64_t v33 = v3;
  uint64_t v30 = v8;
  if (sub_25F6BAF54(v0 + 888) != 1
    && ((memcpy((void *)(v0 + 760), (const void *)(v0 + 888), 0x80uLL), *(void *)(v0 + 760) == 0x6C6F626D7973)
      ? (BOOL v12 = *(void *)(v0 + 768) == 0xE600000000000000)
      : (BOOL v12 = 0),
        (v12 || (sub_25F70F330() & 1) != 0)
     && (sub_25F6B7AD4(v0 + 776, v0 + 1128, &qword_26A7B15A8),
         sub_25F6B7AD4(v0 + 1128, v0 + 1016, &qword_26A7B15A8),
         *(void *)(v0 + 1024) != 1)))
  {
    uint64_t v14 = *(void *)(v0 + 1056);
    if (v14)
    {
      uint64_t v13 = *(void *)(v0 + 1048);
      uint64_t v14 = sub_25F70E570();
    }
    else
    {
      uint64_t v13 = 0;
    }
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  char v15 = *(unsigned char *)(v0 + 1411);
  uint64_t v16 = *(void *)(v0 + 1536);
  char v17 = *(unsigned char *)(v0 + 1410);
  uint64_t v18 = *(void *)(v0 + 1528);
  uint64_t v19 = *(void *)(v0 + 1520);
  uint64_t v20 = *(void *)(v0 + 1496);
  long long v29 = *(_OWORD *)(v0 + 1480);
  __dst[0] = 0;
  __dst[1] = v13;
  __dst[2] = v14;
  unsigned __int8 v21 = (objc_class *)type metadata accessor for CoreTip.ConstellationContent();
  long long v28 = *(_OWORD *)(v0 + 1504);
  id v22 = objc_allocWithZone(v21);
  id v23 = sub_25F6D75A8(v31, v30, v11, (uint64_t)__dst);
  *(void *)(v0 + 1576) = v23;
  memcpy((void *)(v0 + 16), __src, 0xE8uLL);
  *(_OWORD *)(v0 + 1328) = v29;
  *(void *)(v0 + 1344) = v20;
  *(_OWORD *)(v0 + 1352) = v28;
  *(unsigned char *)(v0 + 1368) = v32;
  *(void *)(v0 + 1376) = v19;
  *(void *)(v0 + 1384) = v18;
  *(unsigned char *)(v0 + 1392) = v17;
  *(void *)(v0 + 1400) = v16;
  *(unsigned char *)(v0 + 1408) = v15;
  id v24 = v23;
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 1584) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_25F6BA4CC;
  uint64_t v26 = *(void *)(v0 + 1472);
  return sub_25F6B6550(v33, v35, v0 + 16, v0 + 1328, v26);
}

uint64_t sub_25F6BA4CC(uint64_t a1)
{
  sub_25F67CA40();
  unint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_25F675A28();
  *uint64_t v7 = v6;
  v5[199] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v8 = (void *)v5[197];
    swift_unownedRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v9 = sub_25F6BAB60;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5[200] = a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25F6AA4B8(v5 + 31);
    uint64_t v9 = sub_25F6BA640;
  }
  return MEMORY[0x270FA2498](v9, 0, 0);
}

uint64_t sub_25F6BA640()
{
  uint64_t v1 = *(void **)(v0 + 1576);
  uint64_t v16 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1560);
  uint64_t v3 = *(void *)(v0 + 1552);
  uint64_t v4 = *(void *)(v0 + 1544);
  char v5 = *(unsigned char *)(v0 + 1409);
  uint64_t v17 = *(void *)(v0 + 1472);
  if (*(void *)(v0 + 1520) == -1) {
    uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v6 = *(void *)(v0 + 1520);
  }
  uint64_t v7 = sub_25F6F5F20(*(void *)(v0 + 1600));
  *(void *)(v0 + 1608) = v7;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1240) = v4;
  *(void *)(v0 + 1248) = v3;
  *(void *)(v0 + 1256) = v1;
  *(void *)(v0 + 1264) = v2;
  *(void *)(v0 + 1272) = v16;
  *(_WORD *)(v0 + 1280) = 1;
  *(unsigned char *)(v0 + 1282) = v5;
  *(void *)(v0 + 1288) = v6;
  *(void *)(v0 + 1296) = 0;
  *(unsigned char *)(v0 + 1304) = 1;
  *(_DWORD *)(v0 + 1305) = 16843009;
  *(void *)(v0 + 1312) = v7;
  *(void *)(v0 + 1320) = v17;
  swift_bridgeObjectRetain_n();
  sub_25F70E570();
  id v8 = v1;
  sub_25F70E570();
  swift_unownedRetain();
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 1552);
  uint64_t v10 = *(void *)(v0 + 1544);
  uint64_t v11 = *(void *)(v0 + 1472);
  swift_beginAccess();
  uint64_t v12 = swift_task_alloc();
  *(void *)(v12 + 16) = v0 + 1240;
  uint64_t v13 = swift_task_alloc();
  *(void *)(v13 + 16) = sub_25F6BB95C;
  *(void *)(v13 + 24) = v12;
  sub_25F70E570();
  swift_retain();
  sub_25F6B9F94(v10, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_unownedRetainStrong();
  *(void *)(v0 + 1616) = *(void *)(v11 + 64);
  swift_retain();
  swift_release();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 1624) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_25F6BA8C8;
  return sub_25F65809C();
}

uint64_t sub_25F6BA8C8()
{
  sub_25F67CA40();
  uint64_t v2 = *(void **)(v1 + 1576);
  uint64_t v3 = *v0;
  sub_25F675A28();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  return MEMORY[0x270FA2498](sub_25F6BAA4C, 0, 0);
}

uint64_t sub_25F6BAA4C()
{
  uint64_t v1 = (void *)v0[197];
  uint64_t v2 = (void *)v0[182];
  swift_release();
  sub_25F70E570();
  id v3 = v1;
  sub_25F70E570();
  sub_25F70E570();
  swift_unownedRetain();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  memcpy(v2, v0 + 155, 0x58uLL);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25F6BAB60()
{
  uint64_t v1 = (void *)v0[197];
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25F6AA4B8(v0 + 31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unownedRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_25F6BAC5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 88);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v2 = *(void *)(v1 + 16);
  sub_25F70E570();
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = v1 + 32;
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      if (v3 >= v2)
      {
        __break(1u);
        JUMPOUT(0x25F6BAF44);
      }
      uint64_t v6 = *(void *)(v4 + 16 * v3 + 8);
      if (v3)
      {
        switch(*(unsigned char *)(v4 + 16 * v3))
        {
          case 1:
          case 2:
          case 3:
            char v7 = sub_25F70F330();
            sub_25F70E570();
            swift_bridgeObjectRelease();
            if (v7) {
              goto LABEL_10;
            }
            break;
          default:
            sub_25F70E570();
            swift_bridgeObjectRelease();
LABEL_10:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_25F6BE568();
              uint64_t v5 = v17;
            }
            unint64_t v8 = *(void *)(v5 + 16);
            if (v8 >= *(void *)(v5 + 24) >> 1)
            {
              sub_25F6BE568();
              uint64_t v5 = v18;
            }
            *(void *)(v5 + 16) = v8 + 1;
            uint64_t v9 = v5 + 144 * v8;
            *(unsigned char *)(v9 + 32) = 3;
            int v10 = *(_DWORD *)((char *)__dst + 3);
            *(_DWORD *)(v9 + 33) = __dst[0];
            *(_DWORD *)(v9 + 36) = v10;
            *(_OWORD *)(v9 + 40) = xmmword_25F7128A0;
            *(_OWORD *)(v9 + 56) = xmmword_25F711160;
            *(_OWORD *)(v9 + 72) = 0u;
            *(_OWORD *)(v9 + 88) = 0u;
            *(_OWORD *)(v9 + 104) = 0u;
            *(_OWORD *)(v9 + 120) = 0u;
            *(_OWORD *)(v9 + 136) = 0u;
            *(_OWORD *)(v9 + 152) = 0u;
            *(void *)(v9 + 168) = 0;
            break;
        }
      }
      else
      {
        sub_25F70E570();
      }
      uint64_t v11 = *(void *)(v6 + 16);
      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25F6BE568();
          uint64_t v5 = v16;
        }
        uint64_t v12 = v11 - 1;
        for (uint64_t i = 32; ; i += 144)
        {
          memcpy(__dst, (const void *)(v6 + i), 0x90uLL);
          sub_25F677410((uint64_t)__dst);
          unint64_t v14 = *(void *)(v5 + 16);
          if (v14 >= *(void *)(v5 + 24) >> 1)
          {
            sub_25F6BE568();
            uint64_t v5 = v15;
          }
          *(void *)(v5 + 16) = v14 + 1;
          memcpy((void *)(v5 + 144 * v14 + 32), __dst, 0x90uLL);
          if (!v12) {
            break;
          }
          --v12;
        }
      }
      swift_bridgeObjectRelease();
      ++v3;
      unint64_t v2 = *(void *)(v1 + 16);
    }
    while (v3 != v2);
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_25F6BAF54(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_25F6BAF6C(const void *a1)
{
  type metadata accessor for CoreTip();
  uint64_t v2 = swift_allocObject();
  sub_25F6BC03C((uint64_t)a1);
  return sub_25F6BBCA4(a1, v2);
}

uint64_t sub_25F6BAFC4()
{
  return swift_unownedRetainStrong();
}

ValueMetadata *sub_25F6BAFCC()
{
  return &type metadata for ConstellationTip;
}

void *sub_25F6BAFD8()
{
  unint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_25F6BB000()
{
  return sub_25F70E570();
}

uint64_t sub_25F6BB008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 41);
  char v5 = *(unsigned char *)(v1 + 42);
  char v6 = *(unsigned char *)(v1 + 64);
  char v7 = *(unsigned char *)(v1 + 65);
  char v8 = *(unsigned char *)(v1 + 66);
  char v9 = *(unsigned char *)(v1 + 67);
  char v10 = *(unsigned char *)(v1 + 68);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  *(unsigned char *)(a1 + 18) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 48);
  *(unsigned char *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 41) = v7;
  *(unsigned char *)(a1 + 42) = v8;
  *(unsigned char *)(a1 + 43) = v9;
  *(unsigned char *)(a1 + 44) = v10;
  return sub_25F70E570();
}

uint64_t sub_25F6BB05C(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_25F6B6520(v4, __dst) & 1;
}

uint64_t sub_25F6BB0B4()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_25F6BB0F0();
}

uint64_t sub_25F6BB0F0()
{
  return 0x203A646928706954;
}

uint64_t sub_25F6BB16C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v26 = a2[4];
  uint64_t v27 = *a2;
  uint64_t v24 = a2[6];
  uint64_t v25 = a2[5];
  uint64_t v9 = a2[9];
  uint64_t v22 = a2[8];
  uint64_t v23 = a2[7];
  uint64_t v10 = a2[10];
  uint64_t v11 = a2[11];
  uint64_t v20 = a2[13];
  uint64_t v21 = a2[12];
  uint64_t v18 = a2[15];
  uint64_t v19 = a2[14];
  uint64_t v16 = a2[17];
  uint64_t v17 = a2[16];
  long long v45 = *a3;
  long long v28 = v45;
  sub_25F6B79FC((uint64_t)&v45);
  sub_25F70E790();
  uint64_t v46 = a1;
  sub_25F70F2C0();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)&v28 + 1);
  uint64_t v15 = v28;
  *(void *)&long long v28 = v27;
  *((void *)&v28 + 1) = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v8;
  uint64_t v31 = v26;
  uint64_t v32 = v25;
  uint64_t v33 = v24;
  uint64_t v34 = v23;
  uint64_t v35 = v22;
  uint64_t v36 = v9;
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  uint64_t v43 = v17;
  uint64_t v44 = v16;
  uint64_t v13 = (uint64_t)a4 + *(int *)(type metadata accessor for CoreTip.ConstellationAction() + 32);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F6774C8(v26, v25);
  uint64_t result = sub_25F6BB38C(&v28, v13);
  *a4 = v15;
  a4[1] = v14;
  a4[2] = v27;
  a4[3] = v6;
  a4[4] = v7;
  a4[5] = v8;
  a4[6] = v26;
  a4[7] = v25;
  a4[8] = v24;
  a4[9] = v23;
  a4[10] = v22;
  a4[11] = v9;
  a4[12] = v10;
  a4[13] = v11;
  a4[14] = v21;
  a4[15] = v20;
  a4[16] = v19;
  a4[17] = v18;
  a4[18] = v17;
  a4[19] = v16;
  return result;
}

uint64_t sub_25F6BB38C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CCB0);
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F70DAF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = a1[15];
  if (a1[5] == 1 || v13 == 0) {
    goto LABEL_14;
  }
  uint64_t v15 = a1[14];
  uint64_t v16 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16) {
    goto LABEL_14;
  }
  if (v15 == 0xD000000000000015 && v13 == 0x800000025F719230 || (sub_25F70F330() & 1) != 0)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for logger();
    sub_25F67F3A4(v17, (uint64_t)qword_26B39D818);
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F68C2F0(v21, v22);
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v18 = sub_25F70DE50();
    return sub_25F674004(a2, 1, 1, v18);
  }
  sub_25F70DAE0();
  if (sub_25F67D9DC((uint64_t)v7, 1, v8) == 1)
  {
    sub_25F67EFC0((uint64_t)v7, &qword_26B39CCB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_25F70D600(7107189, 0xE300000000000000);
    if (v20)
    {
      sub_25F70DE10();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return sub_25F70DE10();
}

uint64_t sub_25F6BB6F8()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39E0B0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0, v2);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = 46;
  unint64_t v20 = 0xE100000000000000;
  uint64_t v14 = &v19;
  uint64_t v5 = sub_25F679768(0x7FFFFFFFFFFFFFFFLL, 1u, sub_25F679BA0, (uint64_t)v13, 0xD00000000000001BLL, 0x800000025F719290);
  uint64_t v19 = sub_25F6817BC(1, v5);
  unint64_t v20 = v6;
  uint64_t v21 = v7;
  uint64_t v22 = v8;
  sub_25F67ACD8(&qword_26B39DF80);
  sub_25F681778(&qword_26B39DF78, &qword_26B39DF80);
  sub_25F681874();
  uint64_t v9 = sub_25F70E880();
  uint64_t v11 = v10;
  swift_unknownObjectRelease();
  uint64_t v17 = v9;
  uint64_t v18 = v11;
  sub_25F70E000();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_25F6818C0();
  sub_25F68190C();
  sub_25F681778((unint64_t *)&qword_26B39E0B8, &qword_26B39E0B0);
  sub_25F70EC30();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_25F6BB95C()
{
  return sub_25F6BAF6C(*(const void **)(v0 + 16));
}

uint64_t sub_25F6BB964()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_25F6BB994@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_25F6BB16C(a1, a2, *(long long **)(v3 + 16), a3);
}

uint64_t sub_25F6BB9B0(uint64_t a1, void (*a2)(uint64_t, void *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v6 = type metadata accessor for CoreTip.ConstellationAction();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_25F6D2890(0, 0, 0);
  uint64_t v10 = v27;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v23 = a1;
  sub_25F70E570();
  uint64_t v19 = v11;
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v18 = &v25;
    uint64_t v13 = 32;
    while (1)
    {
      memcpy(v26, (const void *)(v23 + v13), 0x90uLL);
      uint64_t v14 = v18;
      memcpy(v18, (const void *)(v23 + v13), 0x90uLL);
      uint64_t v24 = v12;
      sub_25F6B2528((uint64_t)v26);
      v21(v12, v14);
      if (v4) {
        break;
      }
      sub_25F6B25DC((uint64_t)v26);
      uint64_t v27 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_25F6D2890(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v27;
      }
      ++v12;
      *(void *)(v10 + 16) = v16 + 1;
      sub_25F6BBBE4((uint64_t)v9, v10+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v16);
      v13 += 144;
      if (v19 == v12) {
        goto LABEL_9;
      }
    }
    sub_25F6B25DC((uint64_t)v26);
    swift_release();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25F6BBBB8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F6BBBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CoreTip.ConstellationAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6BBC48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_25F6BA018(a1, *a2, a2[1], a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_25F6BBC84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6BBC48(a1, *(uint64_t **)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), a2);
}

uint64_t sub_25F6BBCA4(const void *a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)v24 - v10;
  _OWORD v25[3] = &type metadata for ConstellationTip;
  void v25[4] = sub_25F6BC0A0();
  uint64_t v12 = swift_allocObject();
  v25[0] = v12;
  memcpy((void *)(v12 + 16), a1, 0x58uLL);
  sub_25F67ACD8(&qword_26B39DA78);
  swift_allocObject();
  *(void *)(a2 + 96) = sub_25F68E228(0, 1);
  uint64_t v13 = sub_25F70DF30();
  sub_25F674004((uint64_t)v11, 1, 1, v13);
  sub_25F6BC144((uint64_t)v11, (uint64_t)v8);
  sub_25F67ACD8(&qword_26B39DA58);
  swift_allocObject();
  uint64_t v14 = sub_25F68E2CC((uint64_t)v8);
  sub_25F67EFC0((uint64_t)v11, &qword_26B39DBA8);
  *(void *)(a2 + 104) = v14;
  sub_25F67ACD8(&qword_26B39DB40);
  swift_allocObject();
  *(void *)(a2 + 120) = sub_25F6D5554(0);
  sub_25F70DFE0();
  uint64_t v16 = *(void *)(v12 + 16);
  uint64_t v15 = *(void *)(v12 + 24);
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v15;
  sub_25F67ACD8(&qword_26B39DA70);
  swift_allocObject();
  *(void *)(a2 + 112) = sub_25F6D5560(0);
  uint64_t v17 = *(void *)(v12 + 96);
  swift_unownedRetainStrong();
  *(void *)(a2 + 136) = v17;
  sub_25F70E570();
  swift_unownedRetain();
  swift_release();
  sub_25F67ACD8(&qword_26B39DA68);
  swift_allocObject();
  *(void *)(a2 + 128) = sub_25F68E284(0.0);
  if (*(unsigned char *)(v12 + 84) == 1)
  {
    if (qword_26B39D9B0 != -1) {
      swift_once();
    }
    sub_25F70E570();
    swift_retain();
    char v18 = sub_25F68E11C(v16, v15);
    swift_bridgeObjectRelease();
    swift_release();
    if (v18 == 10) {
      char v19 = 3;
    }
    else {
      char v19 = 2;
    }
  }
  else
  {
    char v19 = 0;
    char v18 = 10;
  }
  *(unsigned char *)(a2 + 88) = v19;
  *(unsigned char *)(a2 + 89) = v18;
  sub_25F67B010((uint64_t)v25, a2 + 32);
  *(void *)(a2 + 72) = sub_25F6BB6F8();
  *(void *)(a2 + 80) = v20;
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  sub_25F67B010((uint64_t)v25, (uint64_t)v24);
  uint64_t v22 = swift_allocObject();
  sub_25F675D18(v24, v22 + 16);
  *(void *)(v22 + 56) = v21;
  swift_retain();
  sub_25F68E0FC((uint64_t)&unk_26A7B15B0, v22);
  swift_release();
  swift_release();
  swift_release();
  sub_25F67A28C((uint64_t)v25);
  return a2;
}

uint64_t sub_25F6BC03C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  swift_unownedRetain();
  return a1;
}

unint64_t sub_25F6BC0A0()
{
  unint64_t result = qword_26A7B0AE0;
  if (!qword_26A7B0AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AE0);
  }
  return result;
}

uint64_t sub_25F6BC0EC()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unownedRelease();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_25F6BC144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6BC1AC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25F6BC1E4()
{
  sub_25F67A28C(v0 + 16);
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t destroy for ConstellationTip(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unownedRelease();
}

uint64_t initializeWithCopy for ConstellationTip(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_DWORD *)(a1 + 65) = *(_DWORD *)(a2 + 65);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  id v8 = v5;
  sub_25F70E570();
  sub_25F70E570();
  swift_unownedRetain();
  *(void *)(a1 + 80) = v7;
  return a1;
}

uint64_t assignWithCopy for ConstellationTip(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = swift_unownedRetain();
  swift_unownedRelease();
  return a1;
}

void *initializeWithTake for ConstellationTip(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for ConstellationTip(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_unownedRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConstellationTip(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConstellationTip(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstellationTip()
{
  return &type metadata for ConstellationTip;
}

unint64_t sub_25F6BC580(void *a1)
{
  a1[1] = sub_25F6BC5B8();
  a1[2] = sub_25F6BC604();
  unint64_t result = sub_25F6BC650();
  a1[3] = result;
  return result;
}

unint64_t sub_25F6BC5B8()
{
  unint64_t result = qword_26A7B0AD8;
  if (!qword_26A7B0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AD8);
  }
  return result;
}

unint64_t sub_25F6BC604()
{
  unint64_t result = qword_26A7B0AC8;
  if (!qword_26A7B0AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AC8);
  }
  return result;
}

unint64_t sub_25F6BC650()
{
  unint64_t result = qword_26A7B0AD0;
  if (!qword_26A7B0AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AD0);
  }
  return result;
}

uint64_t measure(_:)()
{
  uint64_t v1 = sub_25F70F050();
  MEMORY[0x270FA5388](v1, v2);
  sub_25F70F040();
  sub_25F6BC7A4();
  sub_25F70F550();
  uint64_t v3 = sub_25F67CA70();
  if (v0) {
    return v4(v3);
  }
  v4(v3);
  return v6;
}

unint64_t sub_25F6BC7A4()
{
  unint64_t result = qword_26B39CCD0;
  if (!qword_26B39CCD0)
  {
    sub_25F70F050();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CCD0);
  }
  return result;
}

uint64_t measure(isolation:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  uint64_t v6 = sub_25F70F050();
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v7 = sub_25F70EA30();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v4[9] = v7;
  v4[10] = v9;
  return MEMORY[0x270FA2498](sub_25F6BC8E4, v7, v9);
}

uint64_t sub_25F6BC8E4()
{
  sub_25F70F040();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  unint64_t v2 = sub_25F6BC7A4();
  *uint64_t v1 = v0;
  v1[1] = sub_25F6BC9A4;
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  return MEMORY[0x270FA2390](v0 + 2, v5, v3, v4, v2);
}

uint64_t sub_25F6BC9A4()
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = sub_25F67CF98();
    v5(v4);
    uint64_t v6 = v2[9];
    uint64_t v7 = v2[10];
    return MEMORY[0x270FA2498](sub_25F6BCB54, v6, v7);
  }
  else
  {
    uint64_t v8 = v2[2];
    uint64_t v9 = v2[3];
    uint64_t v10 = sub_25F67CF98();
    v11(v10);
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v3[1];
    return v12(v8, v9);
  }
}

uint64_t sub_25F6BCB54()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t CoreDonation.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_25F70DF30();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t CoreDonation.donationInfo.getter()
{
  type metadata accessor for CoreDonation();
  return sub_25F70E570();
}

uint64_t type metadata accessor for CoreDonation()
{
  uint64_t result = qword_26A7B15C0;
  if (!qword_26A7B15C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoreDonation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25F70DF30();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_25F70E570();
  }
  return a1;
}

uint64_t destroy for CoreDonation(uint64_t a1)
{
  uint64_t v2 = sub_25F70DF30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F70DF30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_25F70E570();
  return a1;
}

uint64_t assignWithCopy for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F70DF30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F70DF30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F70DF30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25F6BD000);
}

uint64_t sub_25F6BD000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25F70DF30();
  sub_25F67CA88();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return sub_25F67D9DC(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CoreDonation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25F6BD0A0);
}

void sub_25F6BD0A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25F70DF30();
  sub_25F67CA88();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    sub_25F674004(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_25F6BD128()
{
  uint64_t result = sub_25F70DF30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_25F6BD1C0()
{
  sub_25F682D3C();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    sub_25F6BE60C();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_25F67B110();
  if (v9 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_25F6D2350(v6 + 32, v2, v1 + 80 * v8 + 32);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  uint64_t v10 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v10, v2);
  uint64_t v11 = v10 + v2;
  if (!v5)
  {
    *(void *)(v1 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_25F6BD288()
{
  sub_25F682D3C();
  if (v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v5;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v4 > *((void *)v1 + 3) >> 1)
  {
    if (v3 <= v4) {
      int64_t v9 = v4;
    }
    else {
      int64_t v9 = v3;
    }
    uint64_t v1 = sub_25F6BE6F8(isUniquelyReferenced_nonNull_native, v9, 1, (uint64_t)v1);
  }
  if (!*(void *)(v7 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  sub_25F67B110();
  if (v11 != v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_25F6D2404(v7 + 32, v2, (unint64_t)&v1[64 * v10 + 32]);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  uint64_t v12 = *((void *)v1 + 2);
  BOOL v6 = __OFADD__(v12, v2);
  uint64_t v13 = v12 + v2;
  if (!v6)
  {
    *((void *)v1 + 2) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t CoreDonationRecord.date.getter()
{
  return swift_release();
}

uint64_t sub_25F6BD484()
{
  return CoreDonationRecord.date.getter();
}

uint64_t sub_25F6BD4A8()
{
  return CoreDonationRecord.date.getter();
}

uint64_t sub_25F6BD4CC(uint64_t a1)
{
  sub_25F70DF30();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F675E40();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, a1);
  return CoreDonationRecord.date.setter();
}

void (*CoreDonationRecord.date.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_25F70DF30();
  v3[1] = v4;
  sub_25F6768F0(v4);
  void v3[2] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  CoreDonationRecord.date.getter();
  return sub_25F6BD608;
}

void sub_25F6BD608(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    CoreDonationRecord.date.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreDonationRecord.date.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CoreDonationRecord.event.getter()
{
  swift_getKeyPath();
  sub_25F67130C(&qword_26B39DC68, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F67130C(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_25F67130C(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  uint64_t v0 = sub_25F70E2A0();
  swift_release();
  return v0;
}

uint64_t sub_25F6BD7F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreDonationRecord.event.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6BD820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreDonationRecord.event.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6BD84C()
{
  uint64_t v0 = swift_retain();
  return CoreDonationRecord.event.setter(v0);
}

uint64_t (*CoreDonationRecord.event.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = CoreDonationRecord.event.getter();
  return sub_25F6BD8C4;
}

uint64_t sub_25F6BD8C4(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreDonationRecord.event.setter(*a1);
  }
  uint64_t v2 = swift_retain();
  CoreDonationRecord.event.setter(v2);
  return swift_release();
}

uint64_t CoreDonationRecord.donationInfo.getter()
{
  swift_getKeyPath();
  sub_25F67130C(&qword_26B39DC68, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F67130C(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  sub_25F70E250();
  swift_release();
  return v0;
}

uint64_t sub_25F6BDA18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreDonationRecord.donationInfo.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6BDA44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreDonationRecord.donationInfo.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6BDA70()
{
  uint64_t v0 = sub_25F70E570();
  return CoreDonationRecord.donationInfo.setter(v0);
}

uint64_t (*CoreDonationRecord.donationInfo.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = CoreDonationRecord.donationInfo.getter();
  return sub_25F6BDAE8;
}

uint64_t sub_25F6BDAE8(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreDonationRecord.donationInfo.setter(*a1);
  }
  uint64_t v2 = sub_25F70E570();
  CoreDonationRecord.donationInfo.setter(v2);
  return swift_bridgeObjectRelease();
}

unint64_t CoreDonationRecord.description.getter()
{
  uint64_t v1 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4, v5);
  sub_25F675E40();
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  if (CoreDonationRecord.event.getter())
  {
    CoreEventRecord.id.getter();
    swift_release();
  }
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  CoreDonationRecord.date.getter();
  sub_25F67130C(&qword_26A7B15D0, MEMORY[0x263F07490]);
  sub_25F70F2C0();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  sub_25F70E790();
  return 0xD00000000000001ALL;
}

uint64_t CoreDonationRecord.__allocating_init(date:event:donationInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  CoreDonationRecord.init(date:event:donationInfo:)(a1, a2, a3);
  return v6;
}

uint64_t sub_25F6BDD38(uint64_t a1)
{
  sub_25F67B010(a1, (uint64_t)v2);
  return CoreDonationRecord.persistentBackingData.setter(v2);
}

uint64_t (*CoreDonationRecord.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6961A4;
}

uint64_t sub_25F6BDDF0()
{
  return sub_25F70E450();
}

uint64_t sub_25F6BDE14()
{
  return sub_25F70E450();
}

uint64_t CoreDonationRecord.deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  return v0;
}

unint64_t sub_25F6BDE90()
{
  return CoreDonationRecord.description.getter();
}

uint64_t CoreDonationRecord.hashValue.getter()
{
  return sub_25F70F620();
}

void sub_25F6BDF40(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (long long *)(*a1 + 40);
  if (a2)
  {
    uint64_t v4 = *(void *)(v2 + 128) + 24;
    sub_25F67B010(*a1, (uint64_t)v3);
    sub_25F674D7C();
    sub_25F67A28C(v4);
    sub_25F675D18(v3, v4);
    swift_endAccess();
    sub_25F67A28C(v2);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 128) + 24;
    sub_25F674D7C();
    sub_25F67A28C(v5);
    sub_25F675D18((long long *)v2, v5);
    swift_endAccess();
  }
  free((void *)v2);
}

uint64_t sub_25F6BE000()
{
  return CoreDonationRecord.hashValue.getter();
}

uint64_t sub_25F6BE024()
{
  return sub_25F70E290();
}

uint64_t sub_25F6BE098()
{
  return sub_25F70F620();
}

uint64_t sub_25F6BE0F8()
{
  return sub_25F70E220();
}

uint64_t sub_25F6BE16C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_25F67130C(&qword_26B39DC70, (void (*)(uint64_t))type metadata accessor for CoreDonationRecord);
  return MEMORY[0x270EFE8F0](v3, v4, v2, v5);
}

void sub_25F6BE1EC()
{
}

void sub_25F6BE220()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26A7B15E8);
    uint64_t v5 = (const void *)swift_allocObject();
    sub_25F68C608(v5);
    sub_25F677E80(v6 / 8);
  }
  if (v0)
  {
    size_t v7 = (char *)sub_25F674D70();
    sub_25F6C0100(v7, v8, v9);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v10 = sub_25F676908();
    sub_25F6BED94(v10, v11, v12, v13);
  }
}

void sub_25F6BE2D0()
{
}

void sub_25F6BE304()
{
  sub_25F672BF4();
  if (v6)
  {
    sub_25F675A48();
    if (v8 != v9)
    {
      sub_25F67955C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_25F67ACD8(v5);
    unint64_t v12 = (char *)swift_allocObject();
    size_t v13 = j__malloc_size(v12);
    sub_25F6857C8(v13);
  }
  else
  {
    unint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v12 + 32;
  if (v3)
  {
    v2(v0 + 32, v10, v14);
    sub_25F679E0C();
  }
  else
  {
    v1(0, v10, v14, v0);
  }
}

void sub_25F6BE3DC()
{
}

void sub_25F6BE410()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26A7B0FD8);
    uint64_t v5 = (void *)sub_25F674F60();
    sub_25F6762FC(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_25F674D70();
    sub_25F6BFB7C(v6, v7, v8);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v9 = sub_25F676908();
    sub_25F6BF0EC(v9, v10, v11, v12);
  }
}

void sub_25F6BE4B4()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26A7B1008);
    uint64_t v5 = (const void *)swift_allocObject();
    sub_25F68C608(v5);
    sub_25F677E80(v6 / 320);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_25F674D70();
    sub_25F6BFC18(v7, v8, v9);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v10 = sub_25F676908();
    sub_25F6BF1EC(v10, v11, v12, v13);
  }
}

void sub_25F6BE568()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26A7B0FF0);
    uint64_t v5 = (void *)sub_25F674F60();
    sub_25F6762FC(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_25F674D70();
    sub_25F6BFCB0(v6, v7, v8);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v9 = sub_25F676908();
    sub_25F6BF30C(v9, v10, v11, v12);
  }
}

void sub_25F6BE60C()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26A7B1000);
    uint64_t v5 = (void *)sub_25F674F60();
    sub_25F6762FC(v5);
  }
  if (v0)
  {
    uint64_t v6 = (char *)sub_25F674D70();
    sub_25F6BFD68(v6, v7, v8);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v9 = sub_25F676908();
    sub_25F6BF40C(v9, v10, v11, v12);
  }
}

uint64_t sub_25F6BE6B0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25F678090(a1, a2, a3, a4, &qword_26A7B15F0, MEMORY[0x263F18140], MEMORY[0x263F18140], MEMORY[0x263F18140]);
}

char *sub_25F6BE6F8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25F67ACD8(&qword_26A7B15F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_25F6BFE00((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F6BF50C(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_25F6BE7E8()
{
}

void sub_25F6BE81C()
{
  sub_25F672BF4();
  if (v6)
  {
    sub_25F675A48();
    if (v8 != v9)
    {
      sub_25F67955C();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  else
  {
    uint64_t v7 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 16);
  if (v7 <= v10) {
    uint64_t v11 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v11 = v7;
  }
  if (v11)
  {
    sub_25F67ACD8(v5);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = j__malloc_size(v12);
    sub_25F6857C8(v13);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = v12 + 32;
  if (v3)
  {
    v2(v0 + 32, v10, v14);
    sub_25F679E0C();
  }
  else
  {
    v1(0, v10, v14, v0);
  }
}

uint64_t sub_25F6BE8F4()
{
  return sub_25F67130C(&qword_26A7B15D8, MEMORY[0x263F18140]);
}

uint64_t sub_25F6BE93C@<X0>(uint64_t a1@<X8>)
{
  return CoreDonationRecord.persistentBackingData.getter(a1);
}

uint64_t sub_25F6BE964()
{
  return type metadata accessor for CoreDonationRecord();
}

uint64_t method lookup function for CoreDonationRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreDonationRecord);
}

uint64_t dispatch thunk of CoreDonationRecord.__allocating_init(date:event:donationInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CoreDonationRecord.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

ValueMetadata *type metadata accessor for CoreDonationRecord._SwiftDataNoType()
{
  return &type metadata for CoreDonationRecord._SwiftDataNoType;
}

void sub_25F6BE9BC()
{
  sub_25F675E34();
  if (v2)
  {
    sub_25F675A48();
    if (v3 != v4)
    {
      sub_25F67955C();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676614();
  if (v1)
  {
    sub_25F67ACD8(&qword_26B39C1C8);
    char v5 = (void *)sub_25F674F60();
    sub_25F6762FC(v5);
  }
  if (v0)
  {
    char v6 = (char *)sub_25F674D70();
    sub_25F6BFEF4(v6, v7, v8);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v9 = sub_25F676908();
    sub_25F6BF700(v9, v10, v11, v12);
  }
}

uint64_t sub_25F6BEA60(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_25F678090(a1, a2, a3, a4, &qword_26B39C220, MEMORY[0x263F07490], MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_25F6BEAA8()
{
  sub_25F675E34();
  if (v3)
  {
    sub_25F675A48();
    if (v5 != v6)
    {
      sub_25F67955C();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_25F675A38();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    uint64_t v14 = (const void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25F67ACD8(qword_26B39CBE8);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CBD0);
  sub_25F6768F0(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (const void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (!v11 || (v15 - v13 == 0x8000000000000000 ? (BOOL v16 = v11 == -1) : (BOOL v16 = 0), v16))
  {
LABEL_23:
    sub_25F67C9C0();
    uint64_t result = sub_25F70F0D0();
    __break(1u);
    return result;
  }
  sub_25F677E80((uint64_t)(v15 - v13) / v11);
LABEL_18:
  uint64_t v17 = *(void *)(sub_25F67ACD8(&qword_26B39CBD0) - 8);
  if (v1)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    sub_25F6BFFC8(v0 + v18, v7, (unint64_t)v14 + v18);
    sub_25F679E0C();
  }
  else
  {
    uint64_t v19 = sub_25F676908();
    sub_25F6BF820(v19, v20, v21, v22);
  }
  return (uint64_t)v14;
}

uint64_t sub_25F6BEC74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26A7B1208);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BED94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26B39D030);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BEEAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26A7B1258);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BEFCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26B39CE00);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF0EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF1EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 320 * a1 + 32;
    unint64_t v6 = a3 + 320 * v4;
    if (v5 >= v6 || v5 + 320 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26A7B0C40);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF30C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 144 * a1 + 32;
    unint64_t v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF40C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF50C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

char *sub_25F6BF604(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    uint64_t v6 = 3 * v4;
    uint64_t v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF700(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_25F67ACD8(&qword_26B39C158);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

uint64_t sub_25F6BF820(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_25F67ACD8(&qword_26B39CBD0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_25F70F140();
  __break(1u);
  return result;
}

char *sub_25F6BF984(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

char *sub_25F6BF9E0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_25F6BFA7C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

char *sub_25F6BFAE0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_25F6BFB7C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_25F6BFC18(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[320 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 320 * a2);
  }
  return __src;
}

char *sub_25F6BFCB0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[144 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 144 * a2);
  }
  return __src;
}

uint64_t sub_25F6BFD4C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_25F678FF0(a1, a2, a3, (void (*)(void))type metadata accessor for CoreTip.ConstellationAction);
}

char *sub_25F6BFD68(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_25F6BFE00(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

char *sub_25F6BFE5C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25F70F140();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_25F6BFEF4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

char *sub_25F6BFF58(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_25F67C9C0();
    __src = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_25F6BFFC8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t v7 = sub_25F70F140();
    __break(1u);
    return MEMORY[0x270FA01D0](v7);
  }
  if (a3 < a1
    || (uint64_t result = sub_25F67ACD8(&qword_26B39CBD0), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    sub_25F67ACD8(&qword_26B39CBD0);
    return MEMORY[0x270FA01D8](a3);
  }
  else if (a3 != a1)
  {
    uint64_t v7 = a3;
    return MEMORY[0x270FA01D0](v7);
  }
  return result;
}

char *sub_25F6C0100(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    uint64_t result = (char *)sub_25F67E698();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_25F67DF90(a3, result);
  }
  return result;
}

uint64_t sub_25F6C0160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v6 - 8, v7);
  sub_25F6759BC();
  uint64_t v30 = v9 - v8;
  uint64_t v33 = sub_25F67ACD8(&qword_26B39CF18);
  MEMORY[0x270FA5388](v33, v10);
  sub_25F6759BC();
  uint64_t v11 = sub_25F67ACD8(&qword_26B39CEB0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11, v13);
  sub_25F6768BC();
  swift_getKeyPath();
  sub_25F684AE0((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  type metadata accessor for CoreEventRecord();
  sub_25F70DFA0();
  sub_25F67ACD8(&qword_26B39D0B8);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25F710D20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v15 + v14, v3, v11);
  sub_25F70665C();
  if (!v32)
  {
    char v21 = v16;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_25F67CAA0();
    v23(v22);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v11);
    if (v21)
    {
      if (sub_25F70E0B0())
      {
        sub_25F70E100();
        uint64_t v24 = a2;
        uint64_t v25 = a1;
        uint64_t v26 = a3;
        uint64_t v27 = v30;
LABEL_9:
        sub_25F684AE0(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
        sub_25F70E220();
        uint64_t v28 = sub_25F70E3C0();
        sub_25F674004(v27, 0, 1, v28);
        uint64_t v19 = sub_25F6567DC(v25, v24, v27, v26);
        sub_25F673A7C(v27);
        swift_release();
        return v19;
      }
      uint64_t v24 = a2;
      uint64_t v25 = a1;
    }
    else
    {
      uint64_t v24 = a2;
      uint64_t v25 = a1;
    }
    uint64_t v27 = v30;
    uint64_t v26 = a3;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();

  uint64_t v17 = sub_25F67CAA0();
  v18(v17);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v11);
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F70E790();
  uint64_t v19 = 0xD000000000000026;
  sub_25F6931C0();
  swift_allocError();
  *uint64_t v20 = 0xD000000000000026;
  v20[1] = 0x800000025F7194C0;
  swift_willThrow();
  return v19;
}

uint64_t sub_25F6C0630@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D7C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CEF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39CED8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  unint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39CEE8, &qword_26B39CEF0);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_25F70DD00();
  a3[3] = sub_25F67ACD8(&qword_26B39CEC0);
  a3[4] = sub_25F696E84();
  sub_25F677CCC(a3);
  sub_25F681778(&qword_26B39CED0, &qword_26B39CED8);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  uint64_t v19 = v23;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_25F6C0974@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6C0630(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25F6C097C()
{
  return CoreEventRecord.init(id:)();
}

uint64_t sub_25F6C09D8()
{
  return sub_25F6C097C();
}

uint64_t sub_25F6C09E8(void (*a1)(long long *__return_ptr, long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  sub_25F70E570();
  uint64_t v20 = a3;
  uint64_t v8 = (unsigned char *)(a3 + 48);
  uint64_t v9 = MEMORY[0x263F8EE78];
  while (1)
  {
    char v10 = *v8;
    long long v18 = *((_OWORD *)v8 - 1);
    char v19 = v10;
    a1(&v15, &v18);
    if (v4) {
      break;
    }
    if (v16)
    {
      sub_25F675D18(&v15, (uint64_t)v17);
      sub_25F675D18(v17, (uint64_t)&v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F6BE9BC();
        uint64_t v9 = v12;
      }
      unint64_t v11 = *(void *)(v9 + 16);
      if (v11 >= *(void *)(v9 + 24) >> 1)
      {
        sub_25F6BE9BC();
        uint64_t v9 = v13;
      }
      *(void *)(v9 + 16) = v11 + 1;
      sub_25F675D18(&v15, v9 + 40 * v11 + 32);
    }
    v8 += 24;
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_25F6C0B5C()
{
  sub_25F672A18();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39CBD8);
  uint64_t v7 = sub_25F672C08(v6);
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675A6C();
  uint64_t v9 = sub_25F67ACD8(&qword_26B39CBD0);
  sub_25F67CA24();
  uint64_t v28 = v10;
  uint64_t v13 = MEMORY[0x270FA5388](v11, v12);
  uint64_t v29 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v15);
  uint64_t v27 = (uint64_t)v24 - v16;
  uint64_t v17 = *(void *)(v3 + 16);
  if (v17)
  {
    uint64_t v18 = *(void *)(sub_25F70E1A0() - 8);
    uint64_t v19 = v3 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v20 = *(void *)(v18 + 72);
    v24[1] = v3;
    sub_25F70E570();
    uint64_t v21 = MEMORY[0x263F8EE78];
    uint64_t v25 = v9;
    uint64_t v26 = v5;
    while (1)
    {
      v5(v19);
      if (v0) {
        break;
      }
      if (sub_25F67D9DC(v1, 1, v9) == 1)
      {
        sub_25F675D8C(v1, &qword_26B39CBD8);
      }
      else
      {
        uint64_t v22 = v27;
        sub_25F6C1B4C(v1, v27);
        sub_25F6C1B4C(v22, (uint64_t)v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_25F6BEAA8();
        }
        unint64_t v23 = *(void *)(v21 + 16);
        if (v23 >= *(void *)(v21 + 24) >> 1) {
          uint64_t v21 = sub_25F6BEAA8();
        }
        *(void *)(v21 + 16) = v23 + 1;
        sub_25F6C1B4C((uint64_t)v29, v21+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v23);
        uint64_t v9 = v25;
        uint64_t v5 = v26;
      }
      v19 += v20;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_25F675E04();
}

uint64_t sub_25F6C0DF4()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39DBC8);
  uint64_t v2 = sub_25F672C08(v1);
  MEMORY[0x270FA5388](v2, v3);
  sub_25F675A6C();
  sub_25F70DFA0();
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CF20);
  sub_25F674004(v0, 0, 1, v4);
  sub_25F6E829C();
  uint64_t v6 = v5;
  sub_25F675D8C(v0, &qword_26B39DBC8);
  return v6;
}

void sub_25F6C1004()
{
  sub_25F672A18();
  sub_25F676360();
  uint64_t v0 = sub_25F67ACD8(&qword_26B39DBC0);
  uint64_t v1 = sub_25F672C08(v0);
  MEMORY[0x270FA5388](v1, v2);
  sub_25F677E8C();
  sub_25F67ACD8(&qword_26B39CFF0);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F676344();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674F7C();
  sub_25F67ACD8(&qword_26B39CF18);
  sub_25F674D1C();
  uint64_t v7 = sub_25F676918();
  v8(v7);
  sub_25F67D604();
  type metadata accessor for CoreEventRecord();
  sub_25F6681C0((uint64_t)&qword_26B39DC30);
  sub_25F679568();
  swift_getKeyPath();
  sub_25F67D368();
  uint64_t v9 = sub_25F67E6BC();
  v10(v9);
  swift_release();
  sub_25F679E24();
  uint64_t v11 = sub_25F67DFAC();
  v12(v11);
  sub_25F672A70();
  sub_25F675E04();
}

void sub_25F6C1178()
{
  sub_25F672A18();
  sub_25F676360();
  uint64_t v0 = sub_25F67ACD8(&qword_26B39DBD8);
  uint64_t v1 = sub_25F672C08(v0);
  MEMORY[0x270FA5388](v1, v2);
  sub_25F677E8C();
  sub_25F67ACD8(&qword_26B39D838);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F676344();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674F7C();
  sub_25F67ACD8(&qword_26B39D800);
  sub_25F674D1C();
  uint64_t v7 = sub_25F676918();
  v8(v7);
  sub_25F67D604();
  type metadata accessor for CoreTipRecord();
  sub_25F6681C0((uint64_t)&qword_26B39DD08);
  sub_25F679568();
  swift_getKeyPath();
  sub_25F67D368();
  uint64_t v9 = sub_25F67E6BC();
  v10(v9);
  swift_release();
  sub_25F679E24();
  uint64_t v11 = sub_25F67DFAC();
  v12(v11);
  sub_25F672A70();
  sub_25F675E04();
}

void sub_25F6C12EC()
{
  sub_25F672A18();
  sub_25F676360();
  uint64_t v0 = sub_25F67ACD8(&qword_26B39DBD0);
  uint64_t v1 = sub_25F672C08(v0);
  MEMORY[0x270FA5388](v1, v2);
  sub_25F677E8C();
  sub_25F67ACD8(&qword_26B39D338);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F676344();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F674F7C();
  sub_25F67ACD8(&qword_26B39D330);
  sub_25F674D1C();
  uint64_t v7 = sub_25F676918();
  v8(v7);
  sub_25F67D604();
  type metadata accessor for CoreParameterRecord();
  sub_25F6681C0((uint64_t)&qword_26B39DCB0);
  sub_25F679568();
  swift_getKeyPath();
  sub_25F67D368();
  uint64_t v9 = sub_25F67E6BC();
  v10(v9);
  swift_release();
  sub_25F679E24();
  uint64_t v11 = sub_25F67DFAC();
  v12(v11);
  sub_25F672A70();
  sub_25F675E04();
}

uint64_t sub_25F6C1460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v16 = a2;
  uint64_t v19 = sub_25F67ACD8(&qword_26B39DA50);
  MEMORY[0x270FA5388](v19, v6);
  uint64_t v7 = sub_25F67ACD8(&qword_26B39CF08);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25F67ACD8(&qword_26B39CD88);
  MEMORY[0x270FA5388](v12, v13);
  uint64_t v17 = sub_25F67ACD8(&qword_26B39CD60);
  MEMORY[0x270FA5388](v17, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39C160);
  sub_25F682540((uint64_t)&unk_26B39CF00);
  sub_25F70DCD0();
  type metadata accessor for CoreEventRecord();
  sub_25F67ACD8(&qword_26B39CED8);
  sub_25F682540((uint64_t)&unk_26B39CD80);
  sub_25F682540((uint64_t)&unk_26B39CED0);
  sub_25F70DC40();
  uint64_t v20 = v16;
  uint64_t v21 = v18;
  sub_25F70E570();
  sub_25F67ACD8(&qword_26B39DA98);
  sub_25F70DCC0();
  a4[3] = sub_25F67ACD8(&qword_26B39CD70);
  a4[4] = sub_25F66095C();
  sub_25F677CCC(a4);
  sub_25F682540((uint64_t)&unk_26B39CD58);
  sub_25F682540((uint64_t)&unk_26B39DA48);
  sub_25F65F814((uint64_t)&unk_26B39DAA8);
  return sub_25F70DCA0();
}

uint64_t sub_25F6C183C(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39CEF0);
  MEMORY[0x270FA5388](v2, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_getKeyPath();
  sub_25F682540((uint64_t)&unk_26B39CEE8);
  return sub_25F70DCD0();
}

uint64_t sub_25F6C1964@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v16 = *a1;
  uint64_t v8 = v16;
  uint64_t v9 = sub_25F6C09E8((void (*)(long long *__return_ptr, long long *))sub_25F6C1B20, (uint64_t)&v15, a2);
  sub_25F6C1460(v8, a3, a4, v22);
  sub_25F67B010((uint64_t)v22, (uint64_t)&v19);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v9 + 32;
    sub_25F70E570();
    do
    {
      sub_25F67B010(v11, (uint64_t)v18);
      uint64_t v12 = v20;
      uint64_t v13 = v21;
      sub_25F67A2DC(&v19, v20);
      StandardPredicateExpression<>.join(_:)(v18, v12, v13, (uint64_t *)v17);
      sub_25F67A28C((uint64_t)v18);
      sub_25F67A28C((uint64_t)&v19);
      sub_25F675D18(v17, (uint64_t)&v19);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  sub_25F675D18(&v19, a5);
  sub_25F67A28C((uint64_t)v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C1A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  if (*(unsigned char *)(a1 + 16)) {
    return sub_25F6D0450(a2, v4, v5, a3);
  }
  else {
    return sub_25F6D00B8(a2, v4, v5, a3);
  }
}

uint64_t sub_25F6C1AFC()
{
  return 16;
}

__n128 sub_25F6C1B08(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_25F6C1B14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F6C1964(a1, v2[2], v2[4], v2[5], a2);
}

uint64_t sub_25F6C1B20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6C1A9C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_25F6C1B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6C1BB4(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v15 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v16 = v4 & 0xC000000000000001;
      unint64_t v14 = v4;
      while (v16)
      {
        uint64_t v9 = MEMORY[0x2611FBA70](v8, v4);
LABEL_7:
        unint64_t v10 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        uint64_t v17 = v9;
        uint64_t v11 = a2;
        char v12 = a1(&v17);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return v11;
        }
        if (v12)
        {
          sub_25F70EFA0();
          sub_25F70EFE0();
          unint64_t v4 = v14;
          sub_25F70EFF0();
          sub_25F70EFB0();
        }
        else
        {
          swift_release();
        }
        ++v8;
        if (v10 == v7)
        {
          uint64_t v11 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v15 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_25F70F100();
      if (!v7) {
        goto LABEL_19;
      }
    }
    uint64_t v9 = *(void *)(v4 + 8 * v8 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v11 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_25F6C1D6C(uint64_t a1, unint64_t a2)
{
  void (*v14)(void *__return_ptr, uint64_t *);
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  void v25[7];
  uint64_t v26;
  unint64_t v27;
  unsigned char v28[64];

  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = a1 + 32;
    sub_25F70E570();
    void v25[5] = a1;
    sub_25F70E570();
    v25[6] = 0x800000025F719590;
    do
    {
      unint64_t v6 = a2;
      uint64_t v7 = sub_25F6C2EE8(v5, (uint64_t)v28);
      if (v28[24])
      {
        int v9 = v28[0];
        switch(v28[0])
        {
          case 9:
            uint64_t v10 = swift_bridgeObjectRelease();
            goto LABEL_10;
          case 0xB:
            sub_25F67CABC();
            break;
          case 0xC:
            sub_25F67CFAC();
            break;
          default:
            break;
        }
        char v12 = sub_25F70F330();
        uint64_t v10 = swift_bridgeObjectRelease();
        if (v12)
        {
LABEL_10:
          MEMORY[0x270FA5388](v10, v11);
          sub_25F67E6DC();
          unint64_t v14 = sub_25F6C2ADC((void (*)(void *__return_ptr, uint64_t *))sub_25F6C2F98, v13, v6);
LABEL_17:
          if (v14) {
            a2 = (unint64_t)v14;
          }
          else {
            a2 = MEMORY[0x263F8EE78];
          }
        }
        else
        {
          switch(v9)
          {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
              goto LABEL_15;
            case 10:
              uint64_t v15 = swift_bridgeObjectRelease();
              goto LABEL_16;
            case 11:
              sub_25F67CABC();
              goto LABEL_15;
            case 12:
              sub_25F67CFAC();
LABEL_15:
              uint64_t v17 = sub_25F70F330();
              uint64_t v15 = swift_bridgeObjectRelease();
              if (v17)
              {
LABEL_16:
                MEMORY[0x270FA5388](v15, v16);
                sub_25F67E6DC();
                unint64_t v14 = sub_25F6C2D50((void (*)(void *__return_ptr, uint64_t *))sub_25F6C3368, v18, v6);
                goto LABEL_17;
              }
              uint64_t v26 = 0;
              uint64_t v27 = 0xE000000000000000;
              sub_25F70EEC0();
              sub_25F70E790();
              sub_25F70F070();
              long long v19 = v26;
              uint64_t v20 = v27;
              sub_25F6931C0();
              uint64_t v21 = (void *)swift_allocError();
              *uint64_t v22 = v19;
              v22[1] = v20;
              swift_willThrow();
              if (qword_26B39C298 != -1) {
                swift_once();
              }
              unint64_t v23 = type metadata accessor for logger();
              sub_25F67F3A4(v23, (uint64_t)qword_26B39C280);
              uint64_t v26 = 0;
              uint64_t v27 = 0xE000000000000000;
              sub_25F70EEC0();
              sub_25F70E790();
              sub_25F70E570();
              sub_25F70E790();
              swift_bridgeObjectRelease();
              sub_25F70E790();
              swift_getErrorValue();
              sub_25F70F2F0();
              sub_25F68C2F0(v26, v27);
              swift_bridgeObjectRelease();

              sub_25F70E570();
              a2 = v6;
              break;
            default:
              JUMPOUT(0);
          }
        }
      }
      else
      {
        MEMORY[0x270FA5388](v7, v8);
        long long v25[2] = v28;
        sub_25F70E570();
        a2 = sub_25F6C1BB4((uint64_t (*)(uint64_t *))sub_25F6C2FB4, (uint64_t)v25, a2);
      }
      sub_25F6C2F44((uint64_t)v28);
      swift_bridgeObjectRelease();
      v5 += 64;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F70E570();
  }
  return a2;
}

uint64_t sub_25F6C22E0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = CoreDonationRecord.donationInfo.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *((void *)a2 + 1);
    uint64_t v7 = *((void *)a2 + 2);
    sub_25F70E570();
    sub_25F685FA4(v6, v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_25F66796C((uint64_t)(a2 + 32), (uint64_t)v10, &qword_26B39D810);
  if (v10[3])
  {
    sub_25F67AD2C((uint64_t)v10, (uint64_t)v11);
    sub_25F6674D8((uint64_t)v10);
  }
  else
  {
    sub_25F67EFC0((uint64_t)v10, &qword_26B39D810);
    memset(v11, 0, sizeof(v11));
  }
  char v8 = sub_25F6C23FC((uint64_t)v12, (uint64_t)v11, v3);
  sub_25F67EFC0((uint64_t)v11, &qword_26B39E0A8);
  sub_25F67EFC0((uint64_t)v12, &qword_26B39D670);
  return v8 & 1;
}

uint64_t sub_25F6C23FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_25F6CC870(a3, 0) & 1) == 0)
  {
LABEL_5:
    if (sub_25F6CC870(a3, 1))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D2B8);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        sub_25F67A2DC(v33, v34);
        char v10 = default argument 1 of Equatable.isNotEqual(_:checkReverse:)();
        char v9 = Equatable.isNotEqual(_:checkReverse:)(a2, v10 & 1);
        goto LABEL_31;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1600);
    }
    if (sub_25F6CC870(a3, 6))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D2B8);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        char v11 = v34;
        sub_25F67A2DC(v33, v34);
        sub_25F66796C(a2, (uint64_t)&v29, &qword_26B39E0A8);
        if (*((void *)&v30 + 1))
        {
          sub_25F67ACD8(&qword_26B39DE00);
          if (swift_dynamicCast()) {
            char v12 = (void *)v32[0];
          }
          else {
            char v12 = 0;
          }
        }
        else
        {
          sub_25F67EFC0((uint64_t)&v29, &qword_26B39E0A8);
          char v12 = 0;
        }
        v36.value._rawValue = v12;
        v36.is_nil = v11;
        char v25 = Equatable.exists(in:)(v36);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1600);
    }
    if (sub_25F6CC870(a3, 2))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26A7B0A00);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        uint64_t v13 = v34;
        uint64_t v14 = v35;
        sub_25F67A2DC(v33, v34);
        char v15 = default argument 1 of Comparable.isLessThan(_:checkReverse:)(v13, v14);
        char v9 = Comparable.isLessThan(_:checkReverse:)(a2, v15 & 1, v13, v14);
        goto LABEL_31;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1420);
    }
    if (sub_25F6CC870(a3, 3))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26A7B0A00);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        uint64_t v16 = v34;
        uint64_t v17 = v35;
        sub_25F67A2DC(v33, v34);
        char v18 = default argument 1 of Comparable.isLessThanOrEqual(_:checkReverse:)(v16, v17);
        char v9 = Comparable.isLessThanOrEqual(_:checkReverse:)(a2, v18 & 1, v16, v17);
        goto LABEL_31;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1420);
    }
    if (sub_25F6CC870(a3, 4))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26A7B0A00);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        uint64_t v19 = v34;
        uint64_t v20 = v35;
        sub_25F67A2DC(v33, v34);
        char v21 = default argument 1 of Comparable.isGreaterThan(_:checkReverse:)(v19, v20);
        char v9 = Comparable.isGreaterThan(_:checkReverse:)(a2, v21 & 1, v19, v20);
        goto LABEL_31;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1420);
    }
    if (sub_25F6CC870(a3, 5))
    {
      sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
      sub_25F67ACD8(&qword_26B39D670);
      sub_25F67ACD8(&qword_26A7B0A00);
      if (swift_dynamicCast())
      {
        sub_25F675D18(&v29, (uint64_t)v33);
        uint64_t v22 = v34;
        uint64_t v23 = v35;
        sub_25F67A2DC(v33, v34);
        char v24 = default argument 1 of Comparable.isGreaterThanOrEqual(_:checkReverse:)(v22, v23);
        char v9 = Comparable.isGreaterThanOrEqual(_:checkReverse:)(a2, v24 & 1, v22, v23);
        goto LABEL_31;
      }
      uint64_t v31 = 0;
      long long v29 = 0u;
      long long v30 = 0u;
      sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1420);
    }
    sub_25F66796C(a1, (uint64_t)v33, &qword_26B39D670);
    sub_25F67ACD8(&qword_26B39D670);
    sub_25F6C2FD4();
    if (swift_dynamicCast())
    {
      uint64_t v27 = (void *)v29;
      sub_25F66796C(a2, (uint64_t)v33, &qword_26B39E0A8);
      if (v34)
      {
        if (swift_dynamicCast())
        {
          uint64_t v28 = (void *)v29;
          LOBYTE(v33[0]) = a3;
          char v25 = sub_25F6CCFF4(v27, v29);

          return v25 & 1;
        }
      }
      else
      {

        sub_25F67EFC0((uint64_t)v33, &qword_26B39E0A8);
      }
    }
    char v25 = 0;
    return v25 & 1;
  }
  sub_25F66796C(a1, (uint64_t)v32, &qword_26B39D670);
  sub_25F67ACD8(&qword_26B39D670);
  sub_25F67ACD8(&qword_26B39D2B8);
  if (!swift_dynamicCast())
  {
    uint64_t v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
    sub_25F67EFC0((uint64_t)&v29, &qword_26A7B1600);
    goto LABEL_5;
  }
  sub_25F675D18(&v29, (uint64_t)v33);
  uint64_t v6 = v34;
  uint64_t v7 = v35;
  sub_25F67A2DC(v33, v34);
  char v8 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v6, v7);
  char v9 = Equatable.isEqual(_:checkReverse:)(a2, v8 & 1);
LABEL_31:
  char v25 = v9;
LABEL_32:
  sub_25F67A28C((uint64_t)v33);
  return v25 & 1;
}

void (*sub_25F6C2ADC(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3))(void *__return_ptr, uint64_t *)
{
  sub_25F70E570();
  sub_25F6C3014(a3, a1);
  if (!v3)
  {
    sub_25F70E570();
    sub_25F6EADF0();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease_n();
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      a1 = *(void (**)(void *__return_ptr, uint64_t *))(v7 + 32);
      uint64_t v9 = v8 - 1;
      if (v8 == 1)
      {
        sub_25F70E570();
      }
      else
      {
        swift_retain();
        sub_25F70E570();
        uint64_t v10 = 0;
        unint64_t v11 = (unint64_t)a1;
        do
        {
          unint64_t v12 = *(void *)(v7 + 8 * v10 + 40);
          if (v11 >> 62)
          {
            sub_25F70E570();
            sub_25F70E570();
            uint64_t v13 = sub_25F70F100();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_25F70E570();
          }
          if (v12 >> 62)
          {
            sub_25F70E570();
            uint64_t v14 = sub_25F70F100();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v13 < v14) {
            unint64_t v11 = v12;
          }
          swift_bridgeObjectRelease();
          ++v10;
        }
        while (v9 != v10);
        swift_release();
        a1 = (void (*)(void *__return_ptr, uint64_t *))v11;
      }
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return a1;
}

uint64_t sub_25F6C2C78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = CoreDonationRecord.donationInfo.getter();
  if (!v4)
  {
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_6;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  sub_25F70E570();
  sub_25F685FA4(v6, v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_6:
    uint64_t result = sub_25F67EFC0((uint64_t)&v9, &qword_26B39D670);
    goto LABEL_7;
  }
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_7:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void (*sub_25F6C2D50(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3))(void *__return_ptr, uint64_t *)
{
  sub_25F70E570();
  sub_25F6C3014(a3, a1);
  if (!v3)
  {
    sub_25F70E570();
    sub_25F6EADF0();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease_n();
    uint64_t v8 = *(void *)(v7 + 16);
    if (v8)
    {
      a1 = *(void (**)(void *__return_ptr, uint64_t *))(v7 + 32);
      uint64_t v9 = v8 - 1;
      if (v8 == 1)
      {
        sub_25F70E570();
      }
      else
      {
        swift_retain();
        sub_25F70E570();
        uint64_t v10 = 0;
        unint64_t v11 = (unint64_t)a1;
        do
        {
          unint64_t v12 = *(void *)(v7 + 8 * v10 + 40);
          if (v12 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v13 = sub_25F70F100();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_25F70E570();
          }
          if (v11 >> 62)
          {
            sub_25F70E570();
            uint64_t v14 = sub_25F70F100();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v13 < v14) {
            unint64_t v11 = v12;
          }
          swift_bridgeObjectRelease();
          ++v10;
        }
        while (v9 != v10);
        swift_release();
        a1 = (void (*)(void *__return_ptr, uint64_t *))v11;
      }
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return a1;
}

uint64_t sub_25F6C2EE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25F6C2F44(uint64_t a1)
{
  return a1;
}

uint64_t sub_25F6C2F98@<X0>(uint64_t a1@<X8>)
{
  return sub_25F6C2C78(*(void *)(v1 + 16), a1);
}

uint64_t sub_25F6C2FB4(uint64_t a1)
{
  return sub_25F6C22E0(a1, *(unsigned __int8 **)(v1 + 16)) & 1;
}

unint64_t sub_25F6C2FD4()
{
  unint64_t result = qword_26B39CDA8;
  if (!qword_26B39CDA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B39CDA8);
  }
  return result;
}

uint64_t sub_25F6C3014(unint64_t a1, void (*a2)(void *__return_ptr, uint64_t *))
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  long long v30 = (void *)MEMORY[0x263F8EE80];
  if (a1 >> 62)
  {
LABEL_25:
    sub_25F70E570();
    uint64_t v5 = sub_25F70F100();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v25 = v4 & 0xC000000000000001;
      uint64_t v6 = (void *)MEMORY[0x263F8EE80];
      for (uint64_t i = 4; ; ++i)
      {
        if (v25)
        {
          uint64_t v8 = MEMORY[0x2611FBA70](i - 4, v4);
        }
        else
        {
          uint64_t v8 = *(void *)(v4 + 8 * i);
          swift_retain();
        }
        uint64_t v9 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        uint64_t v29 = v8;
        a2(v28, &v29);
        if (v3)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return (uint64_t)v6;
        }
        uint64_t v3 = v4;
        uint64_t v4 = v5;
        unint64_t v11 = sub_25F699D6C((uint64_t)v28);
        uint64_t v12 = v6[2];
        BOOL v13 = (v10 & 1) == 0;
        uint64_t v14 = v12 + v13;
        if (__OFADD__(v12, v13)) {
          goto LABEL_23;
        }
        char v15 = v10;
        if (v6[3] < v14)
        {
          sub_25F69BF84(v14, 1);
          uint64_t v6 = v30;
          unint64_t v16 = sub_25F699D6C((uint64_t)v28);
          if ((v15 & 1) != (v17 & 1))
          {
            sub_25F67ACD8(&qword_26B39CD28);
            uint64_t result = sub_25F70F520();
            __break(1u);
            return result;
          }
          unint64_t v11 = v16;
        }
        if (v15)
        {
          uint64_t v18 = sub_25F67EFC0((uint64_t)v28, &qword_26B39CD28);
          uint64_t v6 = v30;
          uint64_t v19 = (void *)(v30[7] + 8 * v11);
          MEMORY[0x2611FB470](v18);
          if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_25F70E960();
          }
          sub_25F70E9A0();
          sub_25F70E930();
        }
        else
        {
          sub_25F67ACD8(&qword_26B39DE58);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_25F711040;
          *(void *)(v20 + 32) = v8;
          uint64_t v27 = v20;
          sub_25F70E930();
          v6[(v11 >> 6) + 8] |= 1 << v11;
          sub_25F6C3300((uint64_t)v28, v6[6] + 40 * v11);
          *(void *)(v6[7] + 8 * v11) = v27;
          uint64_t v21 = v6[2];
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_24;
          }
          void v6[2] = v23;
        }
        uint64_t v5 = v4;
        uint64_t v4 = v3;
        uint64_t v3 = 0;
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v6;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE80];
}

uint64_t sub_25F6C3300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26B39CD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6C3368@<X0>(uint64_t a1@<X8>)
{
  return sub_25F6C2F98(a1);
}

uint64_t sub_25F6C3380(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v2; uint64_t v2 = sub_25F70F100())
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x2611FBA70](v3 - 4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v5 = swift_retain();
      CoreDonationRecord.event.setter(v5);
      swift_release();
      ++v3;
      if (v4 == v2) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    sub_25F70E570();
  }
LABEL_9:
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C3474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DBC8);
  MEMORY[0x270FA5388](v7 - 8, v8);
  sub_25F674D94();
  uint64_t v64 = v9;
  sub_25F70E3C0();
  sub_25F67CA24();
  uint64_t v66 = v11;
  uint64_t v67 = v10;
  MEMORY[0x270FA5388](v10, v12);
  sub_25F674D94();
  uint64_t v65 = v13;
  sub_25F67ACD8(&qword_26B39CEB0);
  sub_25F67CA24();
  uint64_t v68 = v15;
  uint64_t v69 = v14;
  MEMORY[0x270FA5388](v14, v16);
  sub_25F67E6F0();
  uint64_t v17 = sub_25F67ACD8(&qword_26B39CF18);
  sub_25F67CA24();
  uint64_t v19 = v18;
  uint64_t v22 = MEMORY[0x270FA5388](v20, v21);
  char v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22, v25);
  uint64_t v27 = (char *)v63 - v26;
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  uint64_t v73 = a1;
  uint64_t v74 = a2;
  uint64_t v28 = type metadata accessor for CoreEventRecord();
  uint64_t v77 = v28;
  sub_25F70DFA0();
  uint64_t v29 = a3;
  long long v30 = v72;
  sub_25F6C1004();
  uint64_t v32 = v31;
  uint64_t v35 = *(uint64_t (**)(void, void))(v19 + 8);
  uint64_t v34 = v19 + 8;
  uint64_t v33 = v35;
  uint64_t result = v35(v27, v17);
  if (!v30)
  {
    v63[3] = v34;
    v63[4] = v33;
    uint64_t v72 = v24;
    v63[2] = v28;
    v63[5] = v29;
    uint64_t v37 = v70;
    uint64_t v38 = v71;
    if (v32 >= 2)
    {
      v63[0] = v17;
      swift_getKeyPath();
      sub_25F684B28((uint64_t)&qword_26B39D7F0);
      uint64_t v39 = sub_25F70DB40();
      v63[1] = v63;
      MEMORY[0x270FA5388](v39, v40);
      uint64_t v61 = v37;
      uint64_t v62 = v38;
      sub_25F70DFA0();
      sub_25F67ACD8(&qword_26B39D0B8);
      uint64_t v41 = v68;
      unint64_t v42 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_25F710D20;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 16))(v43 + v42, v3, v69);
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_25F658DA0();
      uint64_t v49 = v45;
      swift_bridgeObjectRelease();
      sub_25F679E44();
      v50();
      uint64_t v51 = sub_25F675A84();
      v52(v51);
      if (v49)
      {
        sub_25F684B28((uint64_t)&qword_26B39DC30);
        uint64_t v53 = sub_25F70E220();
        MEMORY[0x270FA5388](v53, v54);
        uint64_t v55 = v71;
        v63[-4] = v70;
        v63[-3] = v55;
        uint64_t v56 = v64;
        uint64_t v75 = v63[6];
        sub_25F70DFA0();
        uint64_t v57 = sub_25F67ACD8(&qword_26B39CF20);
        sub_25F674004(v56, 0, 1, v57);
        uint64_t v61 = v44;
        uint64_t v62 = v56;
        sub_25F6E829C();
        unint64_t v59 = v58;
        sub_25F6C49A0(v56, &qword_26B39DBC8);
        swift_retain();
        sub_25F6C3380(v59);
        swift_release();
        swift_bridgeObjectRelease();
        sub_25F679E44();
        return v60();
      }
      else
      {
        uint64_t v75 = 0;
        unint64_t v76 = 0xE000000000000000;
        sub_25F70EEC0();
        sub_25F70E790();
        sub_25F70E790();
        sub_25F70E790();
        uint64_t v46 = v75;
        unint64_t v47 = v76;
        sub_25F6931C0();
        swift_allocError();
        *uint64_t v48 = v46;
        v48[1] = v47;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_25F6C3A74@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6C3A98(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_25F6C3A98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  sub_25F67ACD8(&qword_26B39D7C0);
  sub_25F67CA24();
  uint64_t v24 = v5;
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v5, v7);
  sub_25F67E6F0();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39CEF0);
  sub_25F67CA24();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11, v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_25F67ACD8(&qword_26B39CED8);
  sub_25F67CA24();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18, v19);
  sub_25F675A6C();
  sub_25F682540((uint64_t)&qword_26B39CEE8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v8);
  uint64_t v26 = v22;
  uint64_t v27 = v23;
  sub_25F70DD00();
  a3[3] = sub_25F67ACD8(&qword_26B39CEC0);
  a3[4] = sub_25F696E84();
  sub_25F677CCC(a3);
  sub_25F682540((uint64_t)&qword_26B39CED0);
  sub_25F682540((uint64_t)&qword_26B39D7B8);
  sub_25F70DBE0();
  sub_25F679E44();
  v20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v3, v15);
}

uint64_t sub_25F6C3D40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v71 = a4;
  uint64_t v64 = a3;
  uint64_t v63 = a2;
  uint64_t v79 = a5;
  uint64_t v73 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v73, v6);
  uint64_t v70 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25F67ACD8(&qword_26A7B1608);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  uint64_t v76 = v9;
  MEMORY[0x270FA5388](v8, v10);
  uint64_t v69 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_25F67ACD8(&qword_26A7B1610);
  uint64_t v74 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72, v12);
  uint64_t v65 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26A7B1618);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v68 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_25F67ACD8(&qword_26B39DA50);
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61, v18);
  unint64_t v58 = (char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_25F67ACD8(&qword_26B39CF08);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20, v22);
  uint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_25F67ACD8(&qword_26B39CD88);
  uint64_t v82 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80, v25);
  uint64_t v27 = (char *)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_25F67ACD8(&qword_26B39CD60);
  uint64_t v60 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59, v28);
  long long v30 = (char *)v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_25F67ACD8(&qword_26B39CD70);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v66 = v31;
  uint64_t v67 = v32;
  MEMORY[0x270FA5388](v31, v33);
  uint64_t v81 = (char *)v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = *a1;
  sub_25F682540((uint64_t)&qword_26B39CF00);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v21 + 8);
  v55[5] = v21 + 8;
  uint64_t v56 = v35;
  v35(v24, v20);
  sub_25F67ACD8(&qword_26B39CED8);
  v55[2] = type metadata accessor for CoreEventRecord();
  v55[3] = MEMORY[0x263F06CB0];
  v55[1] = sub_25F682540((uint64_t)&unk_26B39CD80);
  sub_25F682540((uint64_t)&qword_26B39CED0);
  uint64_t v36 = v80;
  sub_25F70DC00();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v82 + 8);
  v82 += 8;
  v55[0] = v37;
  v37(v27, v36);
  uint64_t v83 = v63;
  uint64_t v84 = v64;
  sub_25F67ACD8(&qword_26B39DA98);
  uint64_t v38 = v58;
  sub_25F70DD00();
  uint64_t v64 = MEMORY[0x263F06B40];
  sub_25F682540((uint64_t)&unk_26B39CD58);
  v55[4] = MEMORY[0x263F06C70];
  sub_25F682540((uint64_t)&unk_26B39DA48);
  uint64_t v63 = MEMORY[0x263F8EE38];
  sub_25F65F814((uint64_t)&unk_26B39DAA8);
  uint64_t v39 = v59;
  uint64_t v40 = v61;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v40);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v39);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  v56(v24, v20);
  sub_25F67ACD8(&qword_26B39CB80);
  uint64_t v41 = sub_25F70E3C0();
  sub_25F682540((uint64_t)&qword_26B39CB78);
  unint64_t v42 = v65;
  uint64_t v43 = v80;
  sub_25F70DC00();
  ((void (*)(char *, uint64_t))v55[0])(v27, v43);
  uint64_t v44 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v70, v71, v41);
  sub_25F674004(v44, 0, 1, v41);
  uint64_t v45 = v69;
  sub_25F70DD00();
  sub_25F6C49A0(v44, &qword_26B39DF68);
  sub_25F682540((uint64_t)&unk_26A7B1620);
  sub_25F682540((uint64_t)&unk_26A7B1628);
  sub_25F6C4D88((uint64_t)&unk_26A7B1630);
  uint64_t v46 = v68;
  uint64_t v47 = v72;
  uint64_t v48 = v75;
  sub_25F70DC20();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v45, v48);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v47);
  uint64_t v49 = sub_25F67ACD8(&qword_26A7B1638);
  uint64_t v50 = v79;
  v79[3] = v49;
  void v50[4] = sub_25F6C49F8();
  sub_25F677CCC(v50);
  sub_25F682540((uint64_t)&unk_26A7B1670);
  sub_25F682540((uint64_t)&unk_26A7B1678);
  uint64_t v51 = v81;
  uint64_t v52 = v66;
  uint64_t v53 = v77;
  sub_25F70DC70();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v46, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v51, v52);
}

uint64_t sub_25F6C47EC()
{
  return sub_25F6C4804();
}

uint64_t sub_25F6C47F8()
{
  return sub_25F6C4804();
}

uint64_t sub_25F6C4804()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39CEF0);
  sub_25F67CA24();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4, v5);
  sub_25F675A6C();
  sub_25F682540((uint64_t)&qword_26B39CEE8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

uint64_t sub_25F6C4910()
{
  return sub_25F70E220();
}

uint64_t sub_25F6C498C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25F6C3D40(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_25F6C49A0(uint64_t a1, uint64_t *a2)
{
  sub_25F67ACD8(a2);
  sub_25F679E44();
  v3();
  return a1;
}

unint64_t sub_25F6C49F8()
{
  unint64_t result = qword_26A7B1640;
  if (!qword_26A7B1640)
  {
    sub_25F682580(&qword_26A7B1638);
    sub_25F66095C();
    sub_25F6C4B0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1640);
  }
  return result;
}

unint64_t sub_25F6C4A74()
{
  unint64_t result = qword_26B39CD78;
  if (!qword_26B39CD78)
  {
    sub_25F682580(&qword_26B39CD88);
    sub_25F682540((uint64_t)&qword_26B39CEF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD78);
  }
  return result;
}

unint64_t sub_25F6C4B0C()
{
  unint64_t result = qword_26A7B1648;
  if (!qword_26A7B1648)
  {
    sub_25F682580(&qword_26A7B1618);
    sub_25F6C4B88();
    sub_25F6C4C9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1648);
  }
  return result;
}

unint64_t sub_25F6C4B88()
{
  unint64_t result = qword_26A7B1650;
  if (!qword_26A7B1650)
  {
    sub_25F682580(&qword_26A7B1610);
    sub_25F6C4A74();
    sub_25F6C4C04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1650);
  }
  return result;
}

unint64_t sub_25F6C4C04()
{
  unint64_t result = qword_26B39CB70;
  if (!qword_26B39CB70)
  {
    sub_25F682580(&qword_26B39CB80);
    sub_25F682540((uint64_t)&qword_26B39CEE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CB70);
  }
  return result;
}

unint64_t sub_25F6C4C9C()
{
  unint64_t result = qword_26A7B1658;
  if (!qword_26A7B1658)
  {
    sub_25F682580(&qword_26A7B1608);
    sub_25F6C4D88((uint64_t)&unk_26A7B1660);
    sub_25F6C4D88((uint64_t)&unk_26A7B1668);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1658);
  }
  return result;
}

unint64_t sub_25F6C4D88(uint64_t a1)
{
  unint64_t result = sub_25F675DF8(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_25F682580(&qword_26B39DF68);
    sub_25F684B28(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_25F6C4E18()
{
  return sub_25F684B28((uint64_t)&qword_26B39DC30);
}

uint64_t CoreEvent.event.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25F67B010(v1 + 16, a1);
}

uint64_t CoreEvent.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_25F67A2DC((void *)(v0 + 16), v1);
  sub_25F67CAD8();
  return v2(v1);
}

uint64_t sub_25F6C4EBC()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t CoreEvent.mapDonations<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unownedRetainStrong();
  uint64_t v8 = *(void *)(v3 + 40);
  sub_25F67A2DC((void *)(v3 + 16), v8);
  sub_25F67CAD8();
  _OWORD v13[2] = a3;
  void v13[3] = v9(v8);
  void v13[4] = v10;
  v13[5] = a1;
  v13[6] = a2;
  uint64_t v11 = sub_25F70E9F0();
  MiniTipsDatastore.performAndWait<A>(_:)((void (*)(uint64_t))sub_25F6C5120, (uint64_t)v13, v11, (uint64_t)&v14);
  swift_release();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_25F6C4FE8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CoreDonationRecord();
  sub_25F6C0DF4();
  sub_25F67ACD8(&qword_26B39D038);
  sub_25F6C519C();
  uint64_t v3 = sub_25F70E840();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    *a1 = v3;
  }
  return result;
}

uint64_t CoreEvent.deinit()
{
  sub_25F67A28C(v0 + 16);
  swift_unownedRelease();
  return v0;
}

uint64_t sub_25F6C50F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEvent.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C5120@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6C4FE8(a1);
}

uint64_t method lookup function for CoreEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreEvent);
}

uint64_t dispatch thunk of CoreEvent.__allocating_init(_:datastore:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_25F6C5170(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1);
}

unint64_t sub_25F6C519C()
{
  unint64_t result = qword_26B39D040;
  if (!qword_26B39D040)
  {
    sub_25F682580(&qword_26B39D038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D040);
  }
  return result;
}

uint64_t CoreEvent.donate(donationInfo:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_25F67D38C((uint64_t)sub_25F6557BC);
}

uint64_t CoreEvent.donate<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[4] = a4;
  v5[5] = v4;
  long long v5[2] = a1;
  v5[3] = a2;
  return sub_25F67D38C((uint64_t)sub_25F6C5224);
}

uint64_t sub_25F6C5224()
{
  sub_25F67629C();
  uint64_t v1 = static DictionaryCoder.encode<A>(_:)();
  *(void *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  void *v2 = v0;
  v2[1] = sub_25F6C52E8;
  return CoreEvent.donate(donationInfo:)(v1);
}

uint64_t sub_25F6C52E8()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  sub_25F675A28();
  void *v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_25F6759EC();
  return v3();
}

uint64_t static CoreEvent.donate(eventID:donationInfo:datastore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return sub_25F67D38C((uint64_t)sub_25F6C53E4);
}

uint64_t sub_25F6C53E4()
{
  sub_25F672A80();
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = (void *)swift_allocObject();
  v0[6] = v4;
  _OWORD v4[2] = v3;
  v4[3] = v2;
  void v4[4] = v1;
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_26A7B16D8 + dword_26A7B16D8);
  sub_25F70E570();
  sub_25F70E570();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25F6C54EC;
  return v7();
}

uint64_t sub_25F6C54EC()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25F675A28();
  *uint64_t v5 = v4;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25F6C55D4()
{
  sub_25F6759E0();
  swift_release();
  sub_25F6759EC();
  return v0();
}

uint64_t sub_25F6C5630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[4] = a4;
  v5[5] = a5;
  long long v5[2] = a2;
  v5[3] = a3;
  return MEMORY[0x270FA2498](sub_25F6C5654, 0, 0);
}

uint64_t sub_25F6C5654()
{
  sub_25F672A80();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  type metadata accessor for CoreDonationRecord();
  sub_25F6C0160(v3, v1, v2);
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_25F6C5704()
{
  sub_25F672A80();
  sub_25F675A98();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F657548;
  uint64_t v3 = sub_25F67CFC4();
  return sub_25F6C5630(v3, v4, v5, v6, v7);
}

uint64_t sub_25F6C579C()
{
  sub_25F6759E0();
  v1[11] = v2;
  v1[12] = v0;
  v1[10] = v3;
  sub_25F693AA8();
  if (v0)
  {
    swift_getObjectType();
    uint64_t v4 = sub_25F70EA30();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  return MEMORY[0x270FA2498](sub_25F6C582C, v4, v6);
}

uint64_t sub_25F6C582C()
{
  sub_25F67629C();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  v0[2] = v0;
  v0[3] = sub_25F6C58F4;
  uint64_t v4 = swift_continuation_init();
  sub_25F655DB8(v4, v1, v3, v2, 85, (uint64_t)&unk_270BB6368, (uint64_t)&unk_26A7B16E8);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_25F6C58F4()
{
  sub_25F67629C();
  sub_25F67CA40();
  uint64_t v1 = *v0;
  if (*(void *)(v2 + 48)) {
    swift_willThrow();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_25F6C59D4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a3;
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_25F6C5AB0;
  return v7();
}

uint64_t sub_25F6C5AB0()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v2 = *v1;
  sub_25F675A28();
  *uint64_t v3 = v2;
  *(void *)(v4 + 32) = v0;
  swift_task_dealloc();
  sub_25F6765E0();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_25F6C5B90()
{
  sub_25F6759E0();
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25F67ACD8(&qword_26B39D870);
  swift_allocError();
  void *v2 = v1;
  swift_continuation_throwingResumeWithError();
  sub_25F6759EC();
  return v3();
}

uint64_t sub_25F6C5C1C(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v8 = *a2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_25F691BBC;
  return sub_25F6C59D4(a1, v8, a3, a4);
}

uint64_t sub_25F6C5CE4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25F6C5D1C()
{
  sub_25F672A80();
  sub_25F675A98();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_25F6765EC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25F691BBC;
  uint64_t v3 = sub_25F67CFC4();
  return v4(v3);
}

void sub_25F6C5DC4()
{
  sub_25F67CAEC();
  sub_25F67CFE0();
  sub_25F6C646C();
  os_unfair_lock_unlock(v0);
}

void sub_25F6C5E04()
{
  sub_25F67CAEC();
  sub_25F67CFE0();
  sub_25F6C63E0();
  os_unfair_lock_unlock(v0);
}

void sub_25F6C5E44()
{
  sub_25F67CAEC();
  sub_25F67CFE0();
  sub_25F6C6450();
  os_unfair_lock_unlock(v0);
}

void sub_25F6C5E84()
{
  sub_25F67CAEC();
  sub_25F67CFE0();
  sub_25F6C6434();
  os_unfair_lock_unlock(v0);
}

void sub_25F6C5EC4()
{
  sub_25F67CAEC();
  sub_25F67CFE0();
  sub_25F6C6418();
  os_unfair_lock_unlock(v0);
}

void sub_25F6C5F04()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 16) + 24);
  os_unfair_lock_lock(v1);
  sub_25F6C63FC();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_25F6C5F60()
{
  return sub_25F70E5C0();
}

uint64_t sub_25F6C5FB0()
{
  return sub_25F70E5C0();
}

uint64_t sub_25F6C6000()
{
  return sub_25F70E5C0();
}

uint64_t sub_25F6C6050()
{
  return sub_25F70E5C0();
}

uint64_t sub_25F6C60A0()
{
  return sub_25F70E5C0();
}

uint64_t sub_25F6C60F0()
{
  return sub_25F70E5C0();
}

uint64_t static CoreEvent.events.setter(uint64_t a1)
{
  return sub_25F6C6224(a1, &qword_26B39CAB0, &qword_26B39CAB8);
}

uint64_t (*static CoreEvent.events.modify())()
{
  if (qword_26B39CAB0 != -1) {
    swift_once();
  }
  sub_25F67CFF0();
  return j_j__swift_endAccess;
}

uint64_t static CoreEvent.modelIdentifiers.getter()
{
  return sub_25F66038C(&qword_26B39CE78);
}

uint64_t static CoreEvent.modelIdentifiers.setter(uint64_t a1)
{
  return sub_25F6C6224(a1, &qword_26B39CE78, &qword_26B39CE70);
}

uint64_t sub_25F6C6224(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_release();
}

uint64_t (*static CoreEvent.modelIdentifiers.modify())()
{
  if (qword_26B39CE78 != -1) {
    swift_once();
  }
  sub_25F67CFF0();
  return j__swift_endAccess;
}

uint64_t sub_25F6C6304()
{
  if (qword_26B39CAB0 != -1) {
    swift_once();
  }
  sub_25F67CB10();
  swift_retain();
  sub_25F6C5F04();
  swift_release();
  if (qword_26B39CE78 != -1) {
    swift_once();
  }
  sub_25F67CB10();
  swift_retain();
  sub_25F6C5E04();
  return swift_release();
}

uint64_t sub_25F6C63E0()
{
  return sub_25F6C6000();
}

uint64_t sub_25F6C63FC()
{
  return sub_25F6C60F0();
}

uint64_t sub_25F6C6418()
{
  return sub_25F6C60A0();
}

uint64_t sub_25F6C6434()
{
  return sub_25F6C5F60();
}

uint64_t sub_25F6C6450()
{
  return sub_25F6C5FB0();
}

uint64_t sub_25F6C646C()
{
  return sub_25F6C6050();
}

void sub_25F6C6490(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CoreEventRecord.dateCreated.getter()
{
  return swift_release();
}

uint64_t sub_25F6C65D4()
{
  return CoreEventRecord.dateCreated.getter();
}

uint64_t sub_25F6C65F8()
{
  sub_25F70DF30();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v0, v1);
  uint64_t v2 = sub_25F67D62C();
  v3(v2);
  return CoreEventRecord.dateCreated.setter();
}

uint64_t CoreEventRecord.dateCreated.setter()
{
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&unk_26B39DC28);
  sub_25F676374();
  swift_release();
  sub_25F70DF30();
  sub_25F675A58();
  uint64_t v0 = sub_25F678470();
  return v1(v0);
}

uint64_t sub_25F6C6774@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C67A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C67CC()
{
  return CoreEventRecord.id.setter();
}

uint64_t sub_25F6C6810()
{
  return CoreEventRecord.dateCreated.getter();
}

uint64_t CoreEventRecord.id.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t CoreEventRecord.__allocating_init(id:)()
{
  uint64_t v0 = swift_allocObject();
  CoreEventRecord.init(id:)();
  return v0;
}

uint64_t sub_25F6C696C()
{
  return swift_release();
}

uint64_t (*CoreEventRecord.id.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = CoreEventRecord.id.getter();
  a1[1] = v3;
  return sub_25F6C6A68;
}

uint64_t sub_25F6C6A68(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreEventRecord.id.setter();
  }
  sub_25F70E570();
  CoreEventRecord.id.setter();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C6ADC()
{
  return swift_release();
}

uint64_t sub_25F6C6BB4()
{
  return sub_25F6C6ADC();
}

uint64_t sub_25F6C6BD0()
{
  return sub_25F6C696C();
}

void (*CoreEventRecord.dateCreated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_25F70DF30();
  v3[1] = v4;
  sub_25F6768F0(v4);
  void v3[2] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  CoreEventRecord.dateCreated.getter();
  return sub_25F6C6C94;
}

void sub_25F6C6C94(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    CoreEventRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreEventRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CoreEventRecord.rules.getter()
{
  return sub_25F6C6E88((uint64_t)&unk_25F712F00, (void (*)(void))type metadata accessor for CoreRuleRecord, (void (*)(void))sub_25F678764);
}

uint64_t sub_25F6C6D7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.rules.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C6DA8()
{
  return CoreEventRecord.rules.setter();
}

uint64_t CoreEventRecord.rules.setter()
{
  return sub_25F6C7028();
}

uint64_t (*CoreEventRecord.rules.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = CoreEventRecord.rules.getter();
  return sub_25F6C6E3C;
}

uint64_t sub_25F6C6E3C(uint64_t *a1, char a2)
{
  return sub_25F6C7224(a1, a2, (uint64_t (*)(uint64_t))CoreEventRecord.rules.setter);
}

uint64_t CoreEventRecord.donations.getter()
{
  return sub_25F6C6E88((uint64_t)&unk_25F712F28, (void (*)(void))type metadata accessor for CoreDonationRecord, (void (*)(void))sub_25F66B29C);
}

uint64_t sub_25F6C6E88(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&unk_26B39DC28);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  a2(0);
  sub_25F6740CC((uint64_t)&qword_26B39DC30);
  a3();
  sub_25F70E2B0();
  swift_release();
  return v3;
}

uint64_t sub_25F6C6FB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C6FDC()
{
  return CoreEventRecord.donations.setter();
}

uint64_t CoreEventRecord.donations.setter()
{
  return sub_25F6C7028();
}

uint64_t sub_25F6C7028()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C70F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return swift_release();
}

uint64_t (*CoreEventRecord.donations.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = CoreEventRecord.donations.getter();
  return sub_25F6C720C;
}

uint64_t sub_25F6C720C(uint64_t *a1, char a2)
{
  return sub_25F6C7224(a1, a2, (uint64_t (*)(uint64_t))CoreEventRecord.donations.setter);
}

uint64_t sub_25F6C7224(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  if ((a2 & 1) == 0) {
    return a3(*a1);
  }
  uint64_t v4 = sub_25F70E570();
  a3(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C7294()
{
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&unk_26B39DC28);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  sub_25F6740CC((uint64_t)&qword_26B39DC30);
  sub_25F70E250();
  swift_release();
  return v0;
}

uint64_t sub_25F6C7390()
{
  return sub_25F6C73BC();
}

uint64_t sub_25F6C73BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C747C()
{
  return swift_release();
}

unint64_t CoreEventRecord.description.getter()
{
  return 0xD000000000000014;
}

uint64_t CoreEventRecord.init(id:)()
{
  uint64_t v1 = v0;
  sub_25F6762E8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25F70DF30();
  MEMORY[0x270FA5388](v4 - 8, v5);
  size_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 48) = sub_25F67ACD8(&qword_26B39D000);
  unint64_t v8 = sub_25F6740CC((uint64_t)&unk_26B39DC30);
  v13[0] = v3;
  v13[1] = v3;
  _OWORD v13[2] = v8;
  void v13[3] = v8;
  *(void *)(v1 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v1 + 24));
  sub_25F70E230();
  sub_25F66B408(0, 0xE000000000000000, v1 + 24);
  sub_25F70DF20();
  sub_25F66B4B4((uint64_t)v7, v1 + 24, v9);
  sub_25F66B1A8(v1 + 24, &qword_26B39DAC8, (uint64_t (*)(void))type metadata accessor for CoreRuleRecord, (void (*)(uint64_t))sub_25F678764, (unsigned char *)(v1 + 16));
  sub_25F66B1A8(v1 + 24, &qword_26B39D048, (uint64_t (*)(void))type metadata accessor for CoreDonationRecord, (void (*)(uint64_t))sub_25F66B29C, (unsigned char *)(v1 + 17));
  sub_25F67ACD8(&qword_26B39D878);
  uint64_t v10 = sub_25F70E530();
  sub_25F66B36C(v10, v1 + 24, v11);
  sub_25F70DFE0();
  CoreEventRecord.id.setter();
  return v1;
}

uint64_t sub_25F6C77E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.rules.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C7818()
{
  return sub_25F6C70F4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_25F712F00, (void (*)(void))type metadata accessor for CoreRuleRecord, (void (*)(void))sub_25F678764);
}

uint64_t sub_25F6C7864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C7894()
{
  return sub_25F6C70F4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_25F712F28, (void (*)(void))type metadata accessor for CoreDonationRecord, (void (*)(void))sub_25F66B29C);
}

uint64_t sub_25F6C78E0(uint64_t a1)
{
  sub_25F67B010(a1, (uint64_t)v2);
  return CoreEventRecord.persistentBackingData.setter(v2);
}

uint64_t (*CoreEventRecord.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6C7998;
}

uint64_t sub_25F6C79A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6C7294();
  *a1 = result;
  return result;
}

uint64_t CoreEventRecord.deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  return v0;
}

uint64_t sub_25F6C7A30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreEventRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_25F6C7A5C()
{
  return CoreEventRecord.description.getter();
}

uint64_t CoreEventRecord.hashValue.getter()
{
  return sub_25F70F620();
}

uint64_t (*sub_25F6C7B0C(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6C7998;
}

void sub_25F6C7B88(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (long long *)(*a1 + 40);
  if (a2)
  {
    uint64_t v4 = *(void *)(v2 + 128) + 24;
    sub_25F67B010(*a1, (uint64_t)v3);
    sub_25F674D7C();
    sub_25F67A28C(v4);
    sub_25F675D18(v3, v4);
    swift_endAccess();
    sub_25F67A28C(v2);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 128) + 24;
    sub_25F67D62C();
    sub_25F674D7C();
    sub_25F67A28C(v5);
    sub_25F675D18((long long *)v2, v5);
    swift_endAccess();
  }
  free((void *)v2);
}

uint64_t sub_25F6C7C44()
{
  return CoreEventRecord.hashValue.getter();
}

uint64_t sub_25F6C7C68()
{
  return sub_25F70E290();
}

uint64_t sub_25F6C7CDC@<X0>(uint64_t a1@<X8>)
{
  return CoreEventRecord.persistentBackingData.getter(a1);
}

uint64_t sub_25F6C7D04()
{
  return type metadata accessor for CoreEventRecord();
}

uint64_t method lookup function for CoreEventRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreEventRecord);
}

uint64_t dispatch thunk of CoreEventRecord.__allocating_init(id:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreEventRecord.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for CoreEventRecord._SwiftDataNoType()
{
  return &type metadata for CoreEventRecord._SwiftDataNoType;
}

uint64_t sub_25F6C7D5C()
{
  return sub_25F6C747C();
}

void sub_25F6C7D88()
{
  sub_25F672A18();
  uint64_t v17 = v1;
  uint64_t v16 = v2;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39CF18);
  sub_25F67C9A8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675A6C();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39CEB0);
  sub_25F67C9A8();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6759BC();
  uint64_t v15 = v14 - v13;
  swift_getKeyPath();
  sub_25F684B6C((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  sub_25F70DFA0();
  sub_25F6C7F48(v17, 0, v15, v0, v16);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v8);
  sub_25F675E04();
}

uint64_t sub_25F6C7F48@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v45 = a3;
  int v43 = a2;
  uint64_t v40 = a5;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39DBC0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_25F67ACD8(&qword_26B39CFF0);
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = v42;
  uint64_t v13 = MEMORY[0x270FA5388](v10, v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v13, v16);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v21 = MEMORY[0x270FA5388](v17, v20);
  uint64_t v56 = (char *)&v40 - v22;
  MEMORY[0x270FA5388](v21, v23);
  uint64_t v44 = (char *)&v40 - v24;
  uint64_t v25 = sub_25F67ACD8(&qword_26B39CF18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v9, a4, v25);
  sub_25F674004((uint64_t)v9, 0, 1, v25);
  uint64_t v26 = type metadata accessor for CoreEventRecord();
  uint64_t v27 = sub_25F684B6C(&qword_26B39DC30, (void (*)(uint64_t))type metadata accessor for CoreEventRecord);
  sub_25F70E200();
  uint64_t v52 = v26;
  uint64_t v53 = v27;
  swift_getKeyPath();
  uint64_t v54 = 1;
  char v55 = 0;
  swift_setAtWritableKeyPath();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v41 = v10;
  v28(v19, v15, v10);
  swift_release();
  uint64_t v50 = v26;
  uint64_t v51 = v27;
  swift_getKeyPath();
  LOBYTE(v54) = v43;
  swift_setAtWritableKeyPath();
  v28(v56, v19, v10);
  swift_release();
  uint64_t v48 = v26;
  uint64_t v49 = v27;
  swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D0B8);
  uint64_t v29 = sub_25F67ACD8(&qword_26B39CEB0);
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_25F710D20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 16))(v32 + v31, v45, v29);
  uint64_t v54 = v32;
  sub_25F70E570();
  uint64_t v33 = v56;
  swift_setAtWritableKeyPath();
  uint64_t v34 = v44;
  uint64_t v35 = v33;
  uint64_t v36 = v41;
  v28(v44, v35, v41);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v37 = v47;
  uint64_t v38 = sub_25F70E0F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v34, v36);
  if (!v37)
  {
    sub_25F703A4C(v38, v40);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25F6C839C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_25F6C83A4()
{
  sub_25F672A18();
  sub_25F674DA8(v0, v1, v2, v3);
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DBD0);
  uint64_t v5 = sub_25F672C08(v4);
  MEMORY[0x270FA5388](v5, v6);
  sub_25F675A6C();
  sub_25F67ACD8(&qword_26B39D338);
  sub_25F67C9A8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9, v10);
  sub_25F675E58();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F672AD4();
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  sub_25F67929C(v15, v16, v17, v18, v19, v20, v21, v22, v44);
  uint64_t v25 = MEMORY[0x270FA5388](v23, v24);
  sub_25F672C20(v25, v26, v27, v28, v29, v30, v31, v32, v45);
  sub_25F67ACD8(&qword_26B39D330);
  sub_25F68EEF4();
  uint64_t v33 = sub_25F674F8C();
  v34(v33);
  sub_25F68C624();
  type metadata accessor for CoreParameterRecord();
  uint64_t v35 = sub_25F684B6C(&qword_26B39DCB0, (void (*)(uint64_t))type metadata accessor for CoreParameterRecord);
  sub_25F678494();
  swift_getKeyPath();
  sub_25F676624();
  uint64_t v36 = *(void (**)(void))(v8 + 32);
  sub_25F67DFEC();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F677EA4();
  sub_25F67DFEC();
  v36();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D360);
  sub_25F67ACD8(&qword_26B39D2C8);
  sub_25F67C9A8();
  uint64_t v38 = (__n128 *)sub_25F679E50();
  uint64_t v39 = sub_25F675AAC(v38, (__n128)xmmword_25F710D20);
  v40(v39);
  sub_25F70E570();
  sub_25F678594();
  uint64_t v41 = sub_25F67E35C();
  ((void (*)(uint64_t))v36)(v41);
  swift_bridgeObjectRelease();
  swift_release();
  sub_25F67B124();
  uint64_t v42 = sub_25F67E708();
  v43(v42);
  if (!v35)
  {
    sub_25F703A4C(KeyPath, v46);
    swift_bridgeObjectRelease();
  }
  sub_25F675E04();
}

void sub_25F6C8638()
{
  sub_25F672A18();
  sub_25F674DA8(v0, v1, v2, v3);
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DBD8);
  uint64_t v5 = sub_25F672C08(v4);
  MEMORY[0x270FA5388](v5, v6);
  sub_25F675A6C();
  sub_25F67ACD8(&qword_26B39D838);
  sub_25F67C9A8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9, v10);
  sub_25F675E58();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F672AD4();
  uint64_t v15 = MEMORY[0x270FA5388](v13, v14);
  sub_25F67929C(v15, v16, v17, v18, v19, v20, v21, v22, v44);
  uint64_t v25 = MEMORY[0x270FA5388](v23, v24);
  sub_25F672C20(v25, v26, v27, v28, v29, v30, v31, v32, v45);
  sub_25F67ACD8(&qword_26B39D800);
  sub_25F68EEF4();
  uint64_t v33 = sub_25F674F8C();
  v34(v33);
  sub_25F68C624();
  type metadata accessor for CoreTipRecord();
  uint64_t v35 = sub_25F684B6C(&qword_26B39DD08, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_25F678494();
  swift_getKeyPath();
  sub_25F676624();
  uint64_t v36 = *(void (**)(void))(v8 + 32);
  sub_25F67DFEC();
  v36();
  swift_release();
  swift_getKeyPath();
  sub_25F677EA4();
  sub_25F67DFEC();
  v36();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_25F67ACD8(&qword_26B39D658);
  sub_25F67ACD8(&qword_26B39D440);
  sub_25F67C9A8();
  uint64_t v38 = (__n128 *)sub_25F679E50();
  uint64_t v39 = sub_25F675AAC(v38, (__n128)xmmword_25F710D20);
  v40(v39);
  sub_25F70E570();
  sub_25F678594();
  uint64_t v41 = sub_25F67E35C();
  ((void (*)(uint64_t))v36)(v41);
  swift_bridgeObjectRelease();
  swift_release();
  sub_25F67B124();
  uint64_t v42 = sub_25F67E708();
  v43(v42);
  if (!v35)
  {
    sub_25F703A4C(KeyPath, v46);
    swift_bridgeObjectRelease();
  }
  sub_25F675E04();
}

uint64_t CoreParameter.id.getter()
{
  sub_25F67A2DC((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = sub_25F67E37C();
  return v2(v1);
}

uint64_t sub_25F6C8938()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t CoreParameter.deinit()
{
  sub_25F67A28C(v0 + 16);
  swift_unownedRelease();
  return v0;
}

uint64_t CoreParameter.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 16);
  swift_unownedRelease();
  return MEMORY[0x270FA0228](v0, 64, 7);
}

uint64_t sub_25F6C89D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameter.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C8A04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25F67C9A8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 80) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  sub_25F67A28C(v0 + 40);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t method lookup function for CoreParameter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreParameter);
}

uint64_t dispatch thunk of CoreParameter.__allocating_init(_:datastore:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t static CoreParameter.parameters.setter(uint64_t a1)
{
  return sub_25F6C6224(a1, &qword_26B39D688, &qword_26B39D680);
}

uint64_t (*static CoreParameter.parameters.modify())()
{
  if (qword_26B39D688 != -1) {
    swift_once();
  }
  sub_25F67CFF0();
  return j__swift_endAccess;
}

uint64_t static CoreParameter.modelIdentifiers.getter()
{
  return sub_25F66038C(&qword_26B39D698);
}

uint64_t static CoreParameter.modelIdentifiers.setter(uint64_t a1)
{
  return sub_25F6C6224(a1, &qword_26B39D698, &qword_26B39D690);
}

uint64_t (*static CoreParameter.modelIdentifiers.modify())()
{
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  sub_25F67CFF0();
  return j_j__swift_endAccess;
}

uint64_t sub_25F6C8C2C()
{
  if (qword_26B39D688 != -1) {
    swift_once();
  }
  sub_25F67CB10();
  swift_retain();
  sub_25F6C5EC4();
  swift_release();
  if (qword_26B39D698 != -1) {
    swift_once();
  }
  sub_25F67CB10();
  swift_retain();
  sub_25F6C5E04();
  return swift_release();
}

void sub_25F6C8D08(unsigned char *a1@<X8>)
{
}

uint64_t CoreParameterProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  sub_25F70EEC0();
  swift_bridgeObjectRelease();
  strcpy((char *)v5, "Parameter(id: ");
  HIBYTE(v5[1]) = -18;
  (*(void (**)(uint64_t))(*(void *)(a2 + 16) + 16))(a1);
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  return v5[0];
}

uint64_t static CoreParameterProtocol.valuesEqual(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_25F67A890(a1, (uint64_t)v13);
  if (!v14)
  {
    sub_25F67EFC0((uint64_t)v13, &qword_26B39E0A8);
    sub_25F67E72C();
    goto LABEL_7;
  }
  sub_25F67ACD8(&qword_26B39D2B8);
  if ((sub_25F67CB5C() & 1) == 0)
  {
    sub_25F67D010();
LABEL_7:
    sub_25F67EFC0((uint64_t)&v15, &qword_26A7B1600);
    sub_25F67A890(a2, (uint64_t)v13);
    if (v14)
    {
      sub_25F67ACD8(&qword_26B39D2B8);
      if (sub_25F67CB5C())
      {
        if (v16)
        {
          sub_25F675D18(&v15, (uint64_t)v17);
          uint64_t v8 = v18;
          uint64_t v9 = v19;
          sub_25F67A2DC(v17, v18);
          char v6 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v8, v9) & 1;
          uint64_t v7 = a1;
          goto LABEL_11;
        }
      }
      else
      {
        sub_25F67D010();
      }
    }
    else
    {
      sub_25F67EFC0((uint64_t)v13, &qword_26B39E0A8);
      sub_25F67E72C();
    }
    sub_25F67EFC0((uint64_t)&v15, &qword_26A7B1600);
    uint64_t v11 = *(void *)(a1 + 24);
    sub_25F67A890(a2, (uint64_t)v17);
    char v10 = (v11 | v18) == 0;
    sub_25F67EFC0((uint64_t)v17, &qword_26B39E0A8);
    return v10 & 1;
  }
  if (!v16) {
    goto LABEL_7;
  }
  sub_25F675D18(&v15, (uint64_t)v17);
  uint64_t v4 = v18;
  uint64_t v5 = v19;
  sub_25F67A2DC(v17, v18);
  char v6 = default argument 1 of Equatable.isEqual(_:checkReverse:)(v4, v5) & 1;
  uint64_t v7 = a2;
LABEL_11:
  char v10 = Equatable.isEqual(_:checkReverse:)(v7, v6);
  sub_25F67A28C((uint64_t)v17);
  return v10 & 1;
}

uint64_t dispatch thunk of CoreParameterProtocol.isTransient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreParameterProtocol.wrapperValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoreParameterProtocol.updateWrapperValue(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_25F6C8FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C9028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25F659690(a1, a2, a3, a4, (uint64_t (*)(uint64_t))CoreParameterRecord.id.setter);
}

uint64_t CoreParameterRecord.id.setter()
{
  return sub_25F6596F0();
}

uint64_t (*CoreParameterRecord.id.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = CoreParameterRecord.id.getter();
  a1[1] = v3;
  return sub_25F6C90A8;
}

uint64_t sub_25F6C90A8(uint64_t a1, char a2)
{
  return sub_25F6C980C(a1, a2, (void (*)(uint64_t))CoreParameterRecord.id.setter);
}

uint64_t CoreParameterRecord.dateCreated.getter()
{
  return swift_release();
}

uint64_t sub_25F6C91F8()
{
  return CoreParameterRecord.dateCreated.getter();
}

uint64_t sub_25F6C921C()
{
  sub_25F70DF30();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v0, v1);
  uint64_t v2 = sub_25F67D62C();
  v3(v2);
  return CoreParameterRecord.dateCreated.setter();
}

uint64_t CoreParameterRecord.dateCreated.setter()
{
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&unk_26B39DCA8);
  sub_25F676374();
  swift_release();
  sub_25F70DF30();
  sub_25F675A58();
  uint64_t v0 = sub_25F678470();
  return v1(v0);
}

uint64_t sub_25F6C9398()
{
  return swift_release();
}

void (*CoreParameterRecord.dateCreated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_25F70DF30();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  CoreParameterRecord.dateCreated.getter();
  return sub_25F6C9538;
}

void sub_25F6C9538(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    CoreParameterRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreParameterRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_25F6C95EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.valueData.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C961C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6C964C()
{
  return sub_25F6577BC();
}

uint64_t sub_25F6C9674()
{
  return CoreParameterRecord.dateCreated.getter();
}

uint64_t sub_25F6C969C()
{
  return sub_25F6C9398();
}

uint64_t (*CoreParameterRecord.valueData.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = CoreParameterRecord.valueData.getter();
  a1[1] = v3;
  return sub_25F6C9700;
}

uint64_t sub_25F6C9700(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return CoreParameterRecord.valueData.setter(*a1, v3);
  }
  sub_25F6865EC(*a1, v3);
  CoreParameterRecord.valueData.setter(v2, v3);
  return sub_25F67EFAC(v2, v3);
}

uint64_t sub_25F6C977C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.valueType.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t (*CoreParameterRecord.valueType.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = CoreParameterRecord.valueType.getter();
  a1[1] = v3;
  return sub_25F6C97F4;
}

uint64_t sub_25F6C97F4(uint64_t a1, char a2)
{
  return sub_25F6C980C(a1, a2, (void (*)(uint64_t))CoreParameterRecord.valueType.setter);
}

uint64_t sub_25F6C980C(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  if (a2)
  {
    sub_25F70E570();
    uint64_t v4 = sub_25F67664C();
    a3(v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_25F67664C();
    return ((uint64_t (*)(uint64_t))a3)(v6);
  }
}

uint64_t CoreParameterRecord.rules.getter()
{
  swift_getKeyPath();
  sub_25F67B208((uint64_t)&unk_26B39DCA8);
  sub_25F70DFD0();
  swift_release();
  swift_getKeyPath();
  type metadata accessor for CoreRuleRecord();
  sub_25F67B208((uint64_t)&unk_26B39DCB0);
  sub_25F678764();
  sub_25F67D62C();
  sub_25F70E2B0();
  swift_release();
  return v0;
}

uint64_t sub_25F6C9990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.rules.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C99BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.rules.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6C99E8()
{
  return CoreParameterRecord.rules.setter();
}

uint64_t CoreParameterRecord.rules.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6C9AD8()
{
  return swift_release();
}

uint64_t sub_25F6C9B94()
{
  return sub_25F6C9AD8();
}

uint64_t (*CoreParameterRecord.rules.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = CoreParameterRecord.rules.getter();
  return sub_25F6C9BF8;
}

uint64_t sub_25F6C9BF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreParameterRecord.rules.setter();
  }
  sub_25F70E570();
  CoreParameterRecord.rules.setter();
  return swift_bridgeObjectRelease();
}

unint64_t CoreParameterRecord.description.getter()
{
  return 0xD000000000000018;
}

uint64_t CoreParameterRecord.__allocating_init(id:valueType:)()
{
  uint64_t v0 = swift_allocObject();
  CoreParameterRecord.init(id:valueType:)();
  return v0;
}

uint64_t CoreParameterRecord.init(id:valueType:)()
{
  uint64_t v1 = v0;
  sub_25F6762E8();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25F70DF30();
  MEMORY[0x270FA5388](v4 - 8, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 48) = sub_25F67ACD8(&qword_26B39D340);
  unint64_t v8 = sub_25F67B208((uint64_t)&qword_26B39DCB0);
  v10[0] = v3;
  v10[1] = v3;
  v10[2] = v8;
  void v10[3] = v8;
  *(void *)(v1 + 56) = swift_getOpaqueTypeConformance2();
  sub_25F677CCC((uint64_t *)(v1 + 24));
  sub_25F70E230();
  sub_25F67797C(0, 0xE000000000000000, v1 + 24);
  sub_25F70DF20();
  sub_25F67F1D8((uint64_t)v7, v1 + 24);
  sub_25F67EE0C(0, 0xF000000000000000, v1 + 24, (unsigned char *)(v1 + 16));
  sub_25F67797C(0, 0xE000000000000000, v1 + 24);
  sub_25F67F0B8(v1 + 24, (unsigned char *)(v1 + 17));
  sub_25F70DFE0();
  CoreParameterRecord.id.setter();
  CoreParameterRecord.valueType.setter();
  return v1;
}

uint64_t sub_25F6C9F20(uint64_t a1)
{
  sub_25F67B010(a1, (uint64_t)v2);
  return CoreParameterRecord.persistentBackingData.setter(v2);
}

uint64_t (*CoreParameterRecord.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6C7998;
}

uint64_t CoreParameterRecord.deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  return v0;
}

uint64_t sub_25F6CA034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreParameterRecord.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_25F6CA060()
{
  return CoreParameterRecord.description.getter();
}

uint64_t CoreParameterRecord.hashValue.getter()
{
  return sub_25F70F620();
}

uint64_t sub_25F6CA110()
{
  return CoreParameterRecord.hashValue.getter();
}

uint64_t sub_25F6CA134()
{
  return sub_25F70E290();
}

uint64_t sub_25F6CA1A8@<X0>(uint64_t a1@<X8>)
{
  return CoreParameterRecord.persistentBackingData.getter(a1);
}

uint64_t sub_25F6CA1D0()
{
  return type metadata accessor for CoreParameterRecord();
}

uint64_t method lookup function for CoreParameterRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreParameterRecord);
}

uint64_t dispatch thunk of CoreParameterRecord.__allocating_init(id:valueType:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreParameterRecord.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for CoreParameterRecord._SwiftDataNoType()
{
  return &type metadata for CoreParameterRecord._SwiftDataNoType;
}

uint64_t sub_25F6CA238()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39D330);
  sub_25F67CA24();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4, v5);
  sub_25F675A6C();
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D2C8);
  sub_25F67CA24();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9, v10);
  sub_25F6759BC();
  uint64_t v13 = v12 - v11;
  swift_getKeyPath();
  sub_25F684BB4((unint64_t *)&qword_26B39D7F0, MEMORY[0x263F07490]);
  sub_25F70DB40();
  sub_25F70DFA0();
  sub_25F6C83A4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v13, v6);
}

uint64_t sub_25F6CA408()
{
  return CoreParameterRecord.init(id:valueType:)();
}

uint64_t sub_25F6CA498()
{
  return sub_25F6CA408();
}

uint64_t CoreRule.id.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_25F67A2DC(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t CoreRule.deinit()
{
  sub_25F67A28C(v0 + 16);
  return v0;
}

uint64_t CoreRule.__deallocating_deinit()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t sub_25F6CA56C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreRule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreRule);
}

uint64_t CoreRule.Category.description.getter()
{
  uint64_t result = 0x646E756F706D6F63;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x746E657665;
      break;
    case 3:
      uint64_t result = 0x6574617473;
      break;
    case 4:
      uint64_t result = 0x6574656D61726170;
      break;
    case 5:
      uint64_t result = 0x656369766564;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t CoreRule.Category.rawValue.getter()
{
  return *v0;
}

unint64_t sub_25F6CA67C()
{
  unint64_t result = qword_26A7B1738;
  if (!qword_26A7B1738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1738);
  }
  return result;
}

uint64_t sub_25F6CA6C8()
{
  return sub_25F6D9F70(*v0);
}

uint64_t sub_25F6CA6D0(uint64_t a1)
{
  return sub_25F6DAFE8(a1, *v1);
}

uint64_t sub_25F6CA6D8(uint64_t a1)
{
  return sub_25F6DA5D8(a1, *v1);
}

unint64_t sub_25F6CA6E0@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CoreRule.Category.init(rawValue:)(*a1, a2);
}

uint64_t sub_25F6CA6E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Category.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6CA710()
{
  return sub_25F70E8E0();
}

uint64_t sub_25F6CA770()
{
  return sub_25F70E8C0();
}

unsigned char *_s8CategoryOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6CA890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unint64_t sub_25F6CA8B8()
{
  unint64_t result = qword_26A7B1740;
  if (!qword_26A7B1740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1740);
  }
  return result;
}

unint64_t sub_25F6CA904()
{
  unint64_t result = qword_26B39D9E0;
  if (!qword_26B39D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39D9E0);
  }
  return result;
}

uint64_t sub_25F6CA950(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025F7198B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_25F6CA9D8()
{
  return 0xD000000000000010;
}

uint64_t sub_25F6CA9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6CA950(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6CAA28(uint64_t a1)
{
  unint64_t v2 = sub_25F6CAB88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CAA64(uint64_t a1)
{
  unint64_t v2 = sub_25F6CAB88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreRule.Options.encode(to:)(void *a1)
{
  sub_25F67ACD8(&qword_26A7B1748);
  sub_25F67CB94();
  MEMORY[0x270FA5388](v2, v3);
  sub_25F675A6C();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6CAB88();
  sub_25F70F660();
  sub_25F70F280();
  uint64_t v4 = sub_25F67D034();
  return v5(v4);
}

unint64_t sub_25F6CAB88()
{
  unint64_t result = qword_26A7B1750;
  if (!qword_26A7B1750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1750);
  }
  return result;
}

uint64_t CoreRule.Options.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_25F67ACD8(&qword_26A7B1758);
  sub_25F67CB94();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F675A6C();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6CAB88();
  sub_25F70F640();
  if (!v2)
  {
    char v7 = sub_25F70F1E0();
    uint64_t v8 = sub_25F67D034();
    v9(v8);
    *a2 = v7 & 1;
  }
  return sub_25F67A28C((uint64_t)a1);
}

uint64_t sub_25F6CACDC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CoreRule.Options.init(from:)(a1, a2);
}

uint64_t sub_25F6CACF4(void *a1)
{
  return CoreRule.Options.encode(to:)(a1);
}

uint64_t _s7OptionsVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s7OptionsVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6CAE70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *_s7OptionsV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25F6CAF34);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s7OptionsV10CodingKeysOMa()
{
  return &_s7OptionsV10CodingKeysON;
}

unint64_t sub_25F6CAF70()
{
  unint64_t result = qword_26A7B1760;
  if (!qword_26A7B1760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1760);
  }
  return result;
}

unint64_t sub_25F6CAFC0()
{
  unint64_t result = qword_26A7B1768;
  if (!qword_26A7B1768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1768);
  }
  return result;
}

unint64_t sub_25F6CB010()
{
  unint64_t result = qword_26A7B1770;
  if (!qword_26A7B1770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1770);
  }
  return result;
}

id CoreRule.Predicate.__allocating_init(compoundOperation:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return CoreRule.Predicate.init(compoundOperation:)(a1);
}

uint64_t CoreRule.Predicate.id.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___Predicate_id);
  sub_25F70E570();
  return v1;
}

uint64_t CoreRule.Predicate.argument.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1 + OBJC_IVAR___Predicate_argument;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___Predicate_argument);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___Predicate_argument + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v2 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_25F667180(v3, v4, v5);
}

void CoreRule.Predicate.operation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR___Predicate_operation);
}

id CoreRule.Predicate.init(compoundOperation:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v13 = *a1;
  char v5 = v13;
  uint64_t v6 = CoreRule.Predicate.Operator.rawValue.getter();
  BOOL v7 = (uint64_t *)&v2[OBJC_IVAR___Predicate_id];
  *BOOL v7 = v6;
  v7[1] = v8;
  uint64_t v9 = &v2[OBJC_IVAR___Predicate_argument];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  v9[16] = 2;
  *(_OWORD *)&v2[OBJC_IVAR___Predicate_rawdata] = xmmword_25F713AD0;
  v2[OBJC_IVAR___Predicate_operation] = v5;
  uint64_t v10 = &v2[OBJC_IVAR___Predicate_value];
  *uint64_t v10 = 0u;
  v10[1] = 0u;
  *(void *)&v2[OBJC_IVAR___Predicate_queries] = 0;
  *(void *)&v2[OBJC_IVAR___Predicate_subpredicates] = 0;
  v12.receiver = v2;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id CoreRule.Predicate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CoreRule.Predicate.init()()
{
}

uint64_t sub_25F6CB24C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E656D75677261 && a2 == 0xE800000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x61746164776172 && a2 == 0xE700000000000000;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
          if (v9 || (sub_25F70F330() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x73656972657571 && a2 == 0xE700000000000000;
            if (v10 || (sub_25F70F330() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x6964657270627573 && a2 == 0xED00007365746163)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              char v12 = sub_25F70F330();
              swift_bridgeObjectRelease();
              if (v12) {
                return 6;
              }
              else {
                return 7;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_25F6CB548()
{
  return sub_25F6B10F4();
}

uint64_t sub_25F6CB550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6CB24C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6CB578(uint64_t a1)
{
  unint64_t v2 = sub_25F67EA8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CB5B4(uint64_t a1)
{
  unint64_t v2 = sub_25F67EA8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

id CoreRule.Predicate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_25F6CB628@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Predicate.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreRule.Predicate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreRule.Predicate);
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(argument:operation:value:queries:subpredicates:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(id:predicateData:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(compoundOperation:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of CoreRule.Predicate.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unint64_t sub_25F6CB6FC()
{
  unint64_t result = qword_26A7B17B0;
  if (!qword_26A7B17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17B0);
  }
  return result;
}

uint64_t sub_25F6CB748()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t CoreRule.Predicate.Argument.id.getter()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    uint64_t v1 = 0x28746E756F63;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    uint64_t v1 = 0x286C617665;
LABEL_5:
    uint64_t v3 = v1;
    sub_25F70E790();
    sub_25F70E790();
    return v3;
  }
  return 0;
}

uint64_t CoreRule.Predicate.Argument.name.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 > 1) {
    return 0;
  }
  uint64_t v3 = v0;
  uint64_t v2 = *(void *)v0;
  sub_25F667180(v2, *(void *)(v3 + 8), v1);
  return v2;
}

uint64_t static CoreRule.Predicate.Argument.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_25F67E408();
        }
        sub_25F667180(v6, v5, 1u);
        sub_25F667180(v3, v2, 1u);
        sub_25F67F01C(v3, v2, 1u);
        uint64_t v12 = v6;
        uint64_t v13 = v5;
        unsigned __int8 v14 = 1;
LABEL_25:
        sub_25F67F01C(v12, v13, v14);
        return v9 & 1;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_25F67F01C(*(void *)a1, v2, 2u);
      sub_25F67F01C(0, 0, 2u);
      char v9 = 1;
      return v9 & 1;
    }
  }
  else if (!*(unsigned char *)(a2 + 16))
  {
    if (v3 == v6 && v2 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = sub_25F67E408();
    }
    sub_25F667180(v6, v5, 0);
    sub_25F667180(v3, v2, 0);
    sub_25F67F01C(v3, v2, 0);
    uint64_t v12 = v6;
    uint64_t v13 = v5;
    unsigned __int8 v14 = 0;
    goto LABEL_25;
  }
  sub_25F667180(*(void *)a2, *(void *)(a2 + 8), v7);
  sub_25F667180(v3, v2, v4);
  sub_25F67F01C(v3, v2, v4);
  sub_25F67F01C(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

uint64_t sub_25F6CB9E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6CBA5C()
{
  return 1;
}

uint64_t sub_25F6CBA7C()
{
  return 0;
}

uint64_t sub_25F6CBA88(uint64_t a1)
{
  unint64_t v2 = sub_25F67DA04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CBAC4(uint64_t a1)
{
  unint64_t v2 = sub_25F67DA04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CBB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6CB9E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6CBB2C(uint64_t a1)
{
  unint64_t v2 = sub_25F67ECEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CBB68(uint64_t a1)
{
  unint64_t v2 = sub_25F67ECEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CBBA4(uint64_t a1)
{
  unint64_t v2 = sub_25F6CBD04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CBBE0(uint64_t a1)
{
  unint64_t v2 = sub_25F6CBD04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CBC20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6CBA5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25F6CBC4C(uint64_t a1)
{
  unint64_t v2 = sub_25F67DA50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CBC88(uint64_t a1)
{
  unint64_t v2 = sub_25F67DA50();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CBCC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Predicate.Argument.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6CBCF0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_25F6CBD04()
{
  unint64_t result = qword_26B39CA78;
  if (!qword_26B39CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CA78);
  }
  return result;
}

uint64_t _s8ArgumentOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_25F667180(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25F67F01C(v6, v7, v8);
  return a1;
}

__n128 _s8ArgumentOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s8ArgumentOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25F67F01C(v4, v5, v6);
  return a1;
}

uint64_t _s8ArgumentOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s8ArgumentOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25F6CBE88(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25F6CBEA0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void *_s8ArgumentO17CommonKeyPathKindOwca(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_25F70E570();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ArgumentO17CommonKeyPathKindOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_25F6CC014()
{
  unint64_t result = qword_26A7B17C0;
  if (!qword_26A7B17C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17C0);
  }
  return result;
}

unint64_t sub_25F6CC064()
{
  unint64_t result = qword_26A7B17C8;
  if (!qword_26A7B17C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17C8);
  }
  return result;
}

unint64_t sub_25F6CC0B4()
{
  unint64_t result = qword_26A7B17D0;
  if (!qword_26A7B17D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17D0);
  }
  return result;
}

uint64_t sub_25F6CC108()
{
  uint64_t v0 = sub_25F70E6C0();
  uint64_t v2 = v1;
  if (v0 == sub_25F70E6C0() && v2 == v3) {
    sub_25F67D3EC();
  }
  else {
    LOBYTE(v0) = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

unint64_t sub_25F6CC180(char a1, char a2)
{
  unint64_t v3 = sub_25F6A31E0(a1);
  uint64_t v5 = v4;
  if (v3 == sub_25F6A31E0(a2) && v5 == v6) {
    sub_25F67D3EC();
  }
  else {
    LOBYTE(v3) = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_25F6CC1F8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF736E6F69676552;
  unint64_t v3 = 0x65726F7453707061;
  uint64_t v4 = a1;
  unint64_t v5 = 0x65726F7453707061;
  unint64_t v6 = 0xEF736E6F69676552;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x53746E65746E6F63;
      unsigned int v7 = 1970561396;
      goto LABEL_5;
    case 2:
      unint64_t v6 = 0x800000025F7185B0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0x656C6C6174736E69;
      unsigned int v7 = 1886404964;
LABEL_5:
      unint64_t v6 = v7 | 0xED00007300000000;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x736E6F69676572;
      break;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x6570795472657375;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v3 = 0x53746E65746E6F63;
      unsigned int v8 = 1970561396;
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0x800000025F7185B0;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0x656C6C6174736E69;
      unsigned int v8 = 1886404964;
LABEL_12:
      unint64_t v2 = v8 | 0xED00007300000000;
      break;
    case 4:
      unint64_t v2 = 0xE700000000000000;
      unint64_t v3 = 0x736E6F69676572;
      break;
    case 5:
      unint64_t v2 = 0xE800000000000000;
      unint64_t v3 = 0x6570795472657375;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v10 = 1;
  }
  else {
    char v10 = sub_25F70F330();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_25F6CC41C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x656C746974;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x656C746974;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 2036625250;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x736E6F69746361;
      break;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1852793705;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 2036625250;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x736E6F69746361;
      break;
    case 3:
      unint64_t v7 = 0xE400000000000000;
      uint64_t v3 = 1852793705;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_25F67D3EC();
  }
  else {
    char v2 = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25F6CC560(uint64_t a1, uint64_t a2)
{
  return sub_25F6CC888(a1, a2, (uint64_t (*)(void))CoreTip.ConstellationContent.Color.rawValue.getter);
}

uint64_t sub_25F6CC578(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6567616D69;
  }
  else {
    uint64_t v4 = 0x6C6F626D7973;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v6 = 0x6567616D69;
  }
  else {
    uint64_t v6 = 0x6C6F626D7973;
  }
  if (a2) {
    unint64_t v7 = 0xE500000000000000;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_25F67D3EC();
  }
  else {
    char v2 = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25F6CC604(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6F43746E65636361;
  }
  else {
    uint64_t v4 = 97;
  }
  if (v3) {
    unint64_t v5 = 0xE100000000000000;
  }
  else {
    unint64_t v5 = 0xEB00000000726F6CLL;
  }
  if (a2) {
    uint64_t v6 = 0x6F43746E65636361;
  }
  else {
    uint64_t v6 = 97;
  }
  if (a2) {
    unint64_t v7 = 0xEB00000000726F6CLL;
  }
  else {
    unint64_t v7 = 0xE100000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_25F67D3EC();
  }
  else {
    char v2 = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25F6CC694(char a1, char a2)
{
  unint64_t v4 = 0xE100000000000000;
  unint64_t v5 = 112;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x800000025F718770;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v5 = 0x6C6F626D7973;
      break;
    case 3:
      unint64_t v4 = 0xE400000000000000;
      unint64_t v5 = 1954047348;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE100000000000000;
  unint64_t v7 = 112;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x800000025F718770;
      unint64_t v7 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v7 = 0x6C6F626D7973;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v7 = 1954047348;
      break;
    default:
      break;
  }
  if (v5 == v7 && v4 == v6) {
    sub_25F67D3EC();
  }
  else {
    char v2 = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25F6CC7D4(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x6579616C70736964;
  }
  else {
    uint64_t v4 = 0x4449706974;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xED00006574614464;
  }
  if (a2) {
    uint64_t v6 = 0x6579616C70736964;
  }
  else {
    uint64_t v6 = 0x4449706974;
  }
  if (a2) {
    unint64_t v7 = 0xED00006574614464;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    sub_25F67D3EC();
  }
  else {
    char v2 = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25F6CC870(uint64_t a1, uint64_t a2)
{
  return sub_25F6CC888(a1, a2, CoreRule.Predicate.Operator.rawValue.getter);
}

uint64_t sub_25F6CC888(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    sub_25F67D3EC();
  }
  else {
    LOBYTE(v4) = sub_25F67E42C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

BOOL CoreRule.Predicate.Operator.isCompoundOperation.getter()
{
  return *v0 - 7 < 2;
}

uint64_t CoreRule.Predicate.Operator.evaluate<A>(lhs:rhs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v77 = a2;
  sub_25F67C9A8();
  uint64_t v6 = v5;
  uint64_t v9 = MEMORY[0x270FA5388](v7, v8);
  uint64_t v76 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9, v11);
  uint64_t v74 = (char *)&v73 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12, v14);
  uint64_t v75 = (char *)&v73 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15, v17);
  uint64_t v20 = MEMORY[0x270FA5388](v18, v19);
  uint64_t v22 = MEMORY[0x270FA5388](v20, v21);
  uint64_t v24 = MEMORY[0x270FA5388](v22, v23);
  uint64_t v26 = MEMORY[0x270FA5388](v24, v25);
  uint64_t v27 = *v3;
  uint64_t v28 = v26;
  if (sub_25F6CC888(v27, 0, CoreRule.Predicate.Operator.rawValue.getter))
  {
    sub_25F6766A8();
    sub_25F67E054();
    v29();
    sub_25F67ACD8(&qword_26B39D2B8);
    if (sub_25F67699C())
    {
      uint64_t v30 = sub_25F67CBCC();
      default argument 1 of Equatable.isEqual(_:checkReverse:)(v30, v31);
      uint64_t v32 = sub_25F67E7AC();
      char v34 = Equatable.isEqual(_:checkReverse:)(v32, v33);
LABEL_31:
      char v69 = v34;
      sub_25F67A28C((uint64_t)v80);
      return v69 & 1;
    }
    sub_25F675B00();
    sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1600);
  }
  if (sub_25F6CC888(v27, 1, CoreRule.Predicate.Operator.rawValue.getter))
  {
    sub_25F6766A8();
    sub_25F67E054();
    v35();
    sub_25F67ACD8(&qword_26B39D2B8);
    if (sub_25F67699C())
    {
      sub_25F67CBCC();
      default argument 1 of Equatable.isNotEqual(_:checkReverse:)();
      uint64_t v36 = sub_25F67E7AC();
      char v34 = Equatable.isNotEqual(_:checkReverse:)(v36, v37);
      goto LABEL_31;
    }
    sub_25F675B00();
    sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1600);
  }
  if ((sub_25F6CC888(v27, 6, CoreRule.Predicate.Operator.rawValue.getter) & 1) == 0)
  {
LABEL_16:
    if (sub_25F6CC888(v27, 2, CoreRule.Predicate.Operator.rawValue.getter))
    {
      sub_25F6766A8();
      sub_25F67E054();
      v41();
      sub_25F67ACD8(&qword_26A7B0A00);
      if (sub_25F67699C())
      {
        uint64_t v42 = sub_25F67CBCC();
        default argument 1 of Comparable.isLessThan(_:checkReverse:)(v42, v43);
        uint64_t v44 = sub_25F67E7AC();
        char v34 = Comparable.isLessThan(_:checkReverse:)(v44, v45, v46, v47);
        goto LABEL_31;
      }
      sub_25F675B00();
      sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1420);
    }
    if (sub_25F6CC888(v27, 3, CoreRule.Predicate.Operator.rawValue.getter))
    {
      sub_25F6766A8();
      sub_25F67E054();
      v48();
      sub_25F67ACD8(&qword_26A7B0A00);
      if (sub_25F67699C())
      {
        uint64_t v49 = sub_25F67CBCC();
        default argument 1 of Comparable.isLessThanOrEqual(_:checkReverse:)(v49, v50);
        uint64_t v51 = sub_25F67E7AC();
        char v34 = Comparable.isLessThanOrEqual(_:checkReverse:)(v51, v52, v53, v54);
        goto LABEL_31;
      }
      sub_25F675B00();
      sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1420);
    }
    if (sub_25F6CC888(v27, 4, CoreRule.Predicate.Operator.rawValue.getter))
    {
      sub_25F6766A8();
      sub_25F67E054();
      v55();
      sub_25F67ACD8(&qword_26A7B0A00);
      if (sub_25F67699C())
      {
        uint64_t v56 = sub_25F67CBCC();
        default argument 1 of Comparable.isGreaterThan(_:checkReverse:)(v56, v57);
        uint64_t v58 = sub_25F67E7AC();
        char v34 = Comparable.isGreaterThan(_:checkReverse:)(v58, v59, v60, v61);
        goto LABEL_31;
      }
      sub_25F675B00();
      sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1420);
    }
    if (sub_25F6CC888(v27, 5, CoreRule.Predicate.Operator.rawValue.getter))
    {
      uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      v62(v74, v28, a3);
      sub_25F67ACD8(&qword_26A7B0A00);
      if (sub_25F67699C())
      {
        uint64_t v63 = sub_25F67CBCC();
        default argument 1 of Comparable.isGreaterThanOrEqual(_:checkReverse:)(v63, v64);
        uint64_t v65 = sub_25F67E7AC();
        char v34 = Comparable.isGreaterThanOrEqual(_:checkReverse:)(v65, v66, v67, v68);
        goto LABEL_31;
      }
      sub_25F675B00();
      sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1420);
      v62(v76, v28, a3);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v76, v28, a3);
    }
    sub_25F6C2FD4();
    if (swift_dynamicCast())
    {
      uint64_t v71 = (void *)v80[0];
      sub_25F67A890(v77, (uint64_t)v80);
      if (v81)
      {
        if (swift_dynamicCast())
        {
          uint64_t v72 = (void *)v78;
          LOBYTE(v80[0]) = v27;
          char v69 = sub_25F6CCFF4(v71, v78);

          return v69 & 1;
        }
      }
      else
      {

        sub_25F67EFC0((uint64_t)v80, &qword_26B39E0A8);
      }
    }
    char v69 = 0;
    return v69 & 1;
  }
  sub_25F6766A8();
  sub_25F67E054();
  v38();
  sub_25F67ACD8(&qword_26B39D2B8);
  if ((sub_25F67699C() & 1) == 0)
  {
    sub_25F675B00();
    sub_25F67EFC0((uint64_t)&v78, &qword_26A7B1600);
    goto LABEL_16;
  }
  sub_25F675D18(&v78, (uint64_t)v80);
  char v39 = v81;
  sub_25F67A2DC(v80, v81);
  sub_25F67A890(v77, (uint64_t)&v78);
  if (v79)
  {
    sub_25F67ACD8(&qword_26B39DE00);
    if (swift_dynamicCast()) {
      uint64_t v40 = v82;
    }
    else {
      uint64_t v40 = 0;
    }
  }
  else
  {
    sub_25F67EFC0((uint64_t)&v78, &qword_26B39E0A8);
    uint64_t v40 = 0;
  }
  v83.value._rawValue = v40;
  v83.is_nil = v39;
  char v69 = Equatable.exists(in:)(v83);
  swift_bridgeObjectRelease();
  sub_25F67A28C((uint64_t)v80);
  return v69 & 1;
}

uint64_t sub_25F6CCFF4(id a1, uint64_t a2)
{
  switch(*v2)
  {
    case 0:
      return (uint64_t)objc_msgSend(a1, sel_isEqualToNumber_, a2);
    case 1:
      return objc_msgSend(a1, sel_isEqualToNumber_, a2) ^ 1;
    case 2:
      BOOL v4 = (char *)sub_25F679594((uint64_t)a1, sel_compare_) + 1 == 0;
      goto LABEL_11;
    case 3:
      uint64_t result = (uint64_t)sub_25F679594((uint64_t)a1, sel_compare_);
      if (result != -1) {
        goto LABEL_10;
      }
      uint64_t result = 1;
      break;
    case 4:
      BOOL v4 = sub_25F679594((uint64_t)a1, sel_compare_) == (id)1;
      goto LABEL_11;
    case 5:
      uint64_t result = (uint64_t)sub_25F679594((uint64_t)a1, sel_compare_);
      if (result != 1)
      {
LABEL_10:
        BOOL v4 = sub_25F679594(result, sel_compare_) == 0;
LABEL_11:
        uint64_t result = v4;
      }
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_25F6CD114()
{
  unint64_t result = qword_26A7B17D8;
  if (!qword_26A7B17D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17D8);
  }
  return result;
}

uint64_t sub_25F6CD160()
{
  return sub_25F6D9F74();
}

uint64_t sub_25F6CD168()
{
  return sub_25F6DA49C();
}

uint64_t sub_25F6CD170()
{
  return sub_25F6DA5DC();
}

uint64_t sub_25F6CD178@<X0>(char *a1@<X8>)
{
  return CoreRule.Predicate.Operator.init(rawValue:)(a1);
}

uint64_t sub_25F6CD184(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25F6CC888(*a1, *a2, CoreRule.Predicate.Operator.rawValue.getter) & 1;
}

uint64_t sub_25F6CD1E4(uint64_t a1, uint64_t a2)
{
  return sub_25F6CD25C(a1, a2, &qword_26B39D020, (uint64_t (*)())sub_25F6ED128, &qword_26A7B0E78, (uint64_t (*)())sub_25F6CD7B0);
}

uint64_t sub_25F6CD220(uint64_t a1, uint64_t a2)
{
  return sub_25F6CD25C(a1, a2, &qword_26A7B11F0, (uint64_t (*)())sub_25F6ED170, &qword_26A7B11D8, (uint64_t (*)())sub_25F6CD8B0);
}

uint64_t sub_25F6CD25C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(), uint64_t *a5, uint64_t (*a6)())
{
  sub_25F67AD2C(a1, (uint64_t)v26);
  sub_25F67AD2C(a2, (uint64_t)v27);
  sub_25F67ACD8(&qword_26B39CB48);
  sub_25F67ACD8(&qword_26B39CB40);
  if (!sub_25F67D04C())
  {
    sub_25F67ACD8(&qword_26B39CB50);
    if (swift_dynamicCast()) {
      goto LABEL_4;
    }
    if (sub_25F67D04C() && sub_25F67E7C4())
    {
      char v11 = LOBYTE(v24) ^ LOBYTE(v22) ^ 1;
LABEL_41:
      sub_25F67A28C((uint64_t)v27);
      sub_25F67A28C((uint64_t)v26);
      return v11 & 1;
    }
    if (sub_25F67D04C())
    {
      double v12 = v24;
      if (sub_25F67E068()) {
        goto LABEL_21;
      }
    }
    if (sub_25F67D04C())
    {
      int v13 = LOBYTE(v24);
      if (sub_25F67E7C4())
      {
        int v14 = LOBYTE(v22);
LABEL_30:
        BOOL v17 = v13 == v14;
        goto LABEL_38;
      }
    }
    if (sub_25F67D04C())
    {
      int v15 = LOWORD(v24);
      if (sub_25F67E068())
      {
        int v16 = LOWORD(v22);
LABEL_34:
        BOOL v17 = v15 == v16;
        goto LABEL_38;
      }
    }
    if (sub_25F67D04C())
    {
      int v13 = LODWORD(v24);
      if (sub_25F67E7C4())
      {
        int v14 = LODWORD(v22);
        goto LABEL_30;
      }
    }
    if (sub_25F67D04C())
    {
      double v12 = v24;
      if (sub_25F67E068())
      {
LABEL_21:
        BOOL v17 = *(void *)&v12 == *(void *)&v22;
        goto LABEL_38;
      }
    }
    if (sub_25F67D04C())
    {
      double v18 = v24;
      if (sub_25F67E7C4()) {
        goto LABEL_37;
      }
    }
    if (sub_25F67D04C())
    {
      int v15 = LOBYTE(v24);
      if (sub_25F67E068())
      {
        int v16 = LOBYTE(v22);
        goto LABEL_34;
      }
    }
    if (sub_25F67D04C())
    {
      int v13 = LOWORD(v24);
      if (sub_25F67E7C4())
      {
        int v14 = LOWORD(v22);
        goto LABEL_30;
      }
    }
    if (sub_25F67D04C())
    {
      int v15 = LODWORD(v24);
      if (sub_25F67E068())
      {
        int v16 = LODWORD(v22);
        goto LABEL_34;
      }
    }
    if (sub_25F67D04C())
    {
      double v18 = v24;
      if (sub_25F67E7C4())
      {
LABEL_37:
        BOOL v17 = *(void *)&v18 == *(void *)&v22;
        goto LABEL_38;
      }
    }
    if (sub_25F67D04C() && sub_25F67E068())
    {
      BOOL v17 = *(float *)&v24 == *(float *)&v22;
      goto LABEL_38;
    }
    if (sub_25F67D04C() && sub_25F67E7C4())
    {
      BOOL v17 = v24 == v22;
LABEL_38:
      char v11 = v17;
      goto LABEL_41;
    }
    if (sub_25F67D04C())
    {
      if (sub_25F67E068())
      {
        if (*(void *)&v24 == *(void *)&v22 && v25 == v23)
        {
          char v11 = 1;
          goto LABEL_66;
        }
        char v21 = sub_25F70F330();
LABEL_60:
        char v11 = v21;
LABEL_66:
        swift_bridgeObjectRelease();
        goto LABEL_67;
      }
      swift_bridgeObjectRelease();
    }
    sub_25F67ACD8(a3);
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        char v21 = a4();
        goto LABEL_60;
      }
      swift_bridgeObjectRelease();
    }
    sub_25F67ACD8(a5);
    if (swift_dynamicCast())
    {
      if (swift_dynamicCast())
      {
        char v11 = a6();
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
    }
    sub_25F6CF9FC((uint64_t)v26, &qword_26B39CB48);
    char v11 = 0;
    return v11 & 1;
  }

LABEL_4:
  sub_25F6CF9FC((uint64_t)v26, &qword_26B39CB48);
  char v11 = 1;
  return v11 & 1;
}

uint64_t sub_25F6CD774(uint64_t a1, uint64_t a2)
{
  return sub_25F6CD25C(a1, a2, &qword_26A7B0E48, (uint64_t (*)())sub_25F6ED454, &qword_26A7B1050, (uint64_t (*)())sub_25F6CD9B0);
}

uint64_t sub_25F6CD7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_25F69D9E0(v3, (uint64_t)v11);
        sub_25F69D9E0(v4, (uint64_t)v10);
        char v6 = sub_25F6CD25C((uint64_t)v11, (uint64_t)v10, &qword_26B39D020, (uint64_t (*)())sub_25F6ED128, &qword_26A7B0E78, sub_25F6CD7B0);
        sub_25F6674D8((uint64_t)v10);
        sub_25F6674D8((uint64_t)v11);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_25F6CD8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_25F69CF14(v3, (uint64_t)v11);
        sub_25F69CF14(v4, (uint64_t)v10);
        char v6 = sub_25F6CD25C((uint64_t)v11, (uint64_t)v10, &qword_26A7B11F0, (uint64_t (*)())sub_25F6ED170, &qword_26A7B11D8, sub_25F6CD8B0);
        sub_25F69CEC0((uint64_t)v10);
        sub_25F69CEC0((uint64_t)v11);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_25F6CD9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v6 = 1;
    }
    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        sub_25F69D930(v3, (uint64_t)v11);
        sub_25F69D930(v4, (uint64_t)v10);
        char v6 = sub_25F6CD25C((uint64_t)v11, (uint64_t)v10, &qword_26A7B0E48, (uint64_t (*)())sub_25F6ED454, &qword_26A7B1050, sub_25F6CD9B0);
        sub_25F69D98C((uint64_t)v10);
        sub_25F69D98C((uint64_t)v11);
        BOOL v8 = v5-- != 0;
        if ((v6 & 1) == 0) {
          break;
        }
        v3 += 32;
        v4 += 32;
      }
      while (v8);
    }
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_25F6CDAB0(uint64_t a1)
{
  if (!a1) {
    return 7104878;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_25F686110();
    uint64_t v4 = a1 + 32;
    uint64_t v3 = v13;
    do
    {
      sub_25F6C2EE8(v4, (uint64_t)v12);
      uint64_t v5 = CoreRule.Predicate.Query.id.getter();
      uint64_t v7 = v6;
      sub_25F6C2F44((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F686110();
        uint64_t v3 = v13;
      }
      unint64_t v8 = *(void *)(v3 + 16);
      if (v8 >= *(void *)(v3 + 24) >> 1)
      {
        sub_25F686110();
        uint64_t v3 = v13;
      }
      *(void *)(v3 + 16) = v8 + 1;
      uint64_t v9 = v3 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v7;
      v4 += 64;
      --v2;
    }
    while (v2);
  }
  v12[0] = v3;
  sub_25F67ACD8(&qword_26B39CDA0);
  sub_25F6CFA50();
  uint64_t v10 = sub_25F70E650();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t CoreRule.Predicate.Query.id.getter()
{
  if (*(unsigned char *)(v0 + 24))
  {
    uint64_t v6 = 0x3A794270756F7267;
    unint64_t v7 = 0xE900000000000020;
    LOBYTE(v9) = *(unsigned char *)v0;
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    return 0x3A794270756F7267;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 8);
    uint64_t v10 = v2;
    sub_25F70E570();
    sub_25F70E790();
    LOBYTE(v6) = *(unsigned char *)v0;
    CoreRule.Predicate.Operator.rawValue.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F6CF99C(v0 + 32, (uint64_t)&v6, &qword_26B39D810);
    if (v8)
    {
      uint64_t v3 = sub_25F69738C();
      unint64_t v5 = v4;
      sub_25F6674D8((uint64_t)&v6);
    }
    else
    {
      sub_25F6CF9FC((uint64_t)&v6, &qword_26B39D810);
      uint64_t v3 = 0;
      unint64_t v5 = 0;
    }
    uint64_t v6 = v3;
    unint64_t v7 = v5;
    sub_25F67ACD8(&qword_26B39DA98);
    sub_25F70E6E0();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    return v9;
  }
}

uint64_t sub_25F6CDDAC@<X0>(char a1@<W0>, char *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  char v6 = a1 & 1;
  char v7 = *a2;
  uint64_t v8 = AnyKeyPath.stringValue.getter();
  uint64_t v10 = v9;
  sub_25F6CF99C(a3, (uint64_t)v19, &qword_26B39E0A8);
  BYTE8(v17) = v6;
  *((void *)&v16 + 1) = v8;
  *(void *)&long long v17 = v10;
  LOBYTE(v16) = v7;
  if (v20)
  {
    sub_25F6CF99C((uint64_t)v19, (uint64_t)v14, &qword_26B39E0A8);
    sub_25F667A50((uint64_t)v14, v15);
    sub_25F6CF9FC((uint64_t)v19, &qword_26B39E0A8);
  }
  else
  {
    sub_25F6CF9FC((uint64_t)v19, &qword_26B39E0A8);
    memset(v15, 0, sizeof(v15));
  }
  sub_25F67EAD8((uint64_t)v15, (uint64_t)v18);
  long long v11 = v17;
  *a4 = v16;
  a4[1] = v11;
  long long v12 = v18[1];
  a4[2] = v18[0];
  a4[3] = v12;
  swift_release();
  return sub_25F6CF9FC(a3, &qword_26B39E0A8);
}

BOOL static CoreRule.Predicate.Query.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((sub_25F6CC870(*a1, *a2) & 1) == 0) {
    return 0;
  }
  BOOL v4 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
  if (v4 || (char v5 = sub_25F70F330(), result = 0, (v5 & 1) != 0))
  {
    if (a1[24] == a2[24])
    {
      sub_25F6CF99C((uint64_t)(a1 + 32), (uint64_t)v15, &qword_26B39D810);
      sub_25F6CF99C((uint64_t)(a2 + 32), (uint64_t)v14, &qword_26B39D810);
      sub_25F6CF99C((uint64_t)v15, (uint64_t)v10, &qword_26B39D810);
      sub_25F6CF99C((uint64_t)v14, (uint64_t)&v12, &qword_26B39D810);
      if (v11)
      {
        sub_25F6CF99C((uint64_t)v10, (uint64_t)v9, &qword_26B39D810);
        if (*((void *)&v13 + 1))
        {
          v8[0] = v12;
          v8[1] = v13;
          char v7 = sub_25F6CD25C((uint64_t)v9, (uint64_t)v8, &qword_26B39D020, (uint64_t (*)())sub_25F6ED128, &qword_26A7B0E78, (uint64_t (*)())sub_25F6CD7B0);
          sub_25F6674D8((uint64_t)v8);
          sub_25F6CF9FC((uint64_t)v14, &qword_26B39D810);
          sub_25F6CF9FC((uint64_t)v15, &qword_26B39D810);
          sub_25F6674D8((uint64_t)v9);
          sub_25F6CF9FC((uint64_t)v10, &qword_26B39D810);
          return (v7 & 1) != 0;
        }
        sub_25F6CF9FC((uint64_t)v14, &qword_26B39D810);
        sub_25F6CF9FC((uint64_t)v15, &qword_26B39D810);
        sub_25F6674D8((uint64_t)v9);
      }
      else
      {
        sub_25F6CF9FC((uint64_t)v14, &qword_26B39D810);
        sub_25F6CF9FC((uint64_t)v15, &qword_26B39D810);
        if (!*((void *)&v13 + 1))
        {
          sub_25F6CF9FC((uint64_t)v10, &qword_26B39D810);
          return 1;
        }
      }
      sub_25F6CF9FC((uint64_t)v10, &qword_26A7B17E0);
    }
    return 0;
  }
  return result;
}

uint64_t sub_25F6CE0A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7955819 && a2 == 0xE300000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1684957547 && a2 == 0xE400000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_25F70F330();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25F6CE238(char a1)
{
  uint64_t result = 0x6F6974617265706FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 7955819;
      break;
    case 2:
      uint64_t result = 1684957547;
      break;
    case 3:
      uint64_t result = 0x65756C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6CE2BC()
{
  return sub_25F6CE238(*v0);
}

uint64_t sub_25F6CE2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6CE0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6CE2EC(uint64_t a1)
{
  unint64_t v2 = sub_25F6CE520();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CE328(uint64_t a1)
{
  unint64_t v2 = sub_25F6CE520();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreRule.Predicate.Query.encode(to:)(void *a1)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26A7B17E8);
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675B10();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6CE520();
  sub_25F70F660();
  sub_25F676C04();
  sub_25F70F2A0();
  if (!v1)
  {
    sub_25F70F270();
    sub_25F6CE56C();
    sub_25F70F2A0();
    sub_25F676BB8();
    sub_25F70F260();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_25F6CE520()
{
  unint64_t result = qword_26A7B17F0;
  if (!qword_26A7B17F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17F0);
  }
  return result;
}

unint64_t sub_25F6CE56C()
{
  unint64_t result = qword_26A7B17F8;
  if (!qword_26A7B17F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B17F8);
  }
  return result;
}

uint64_t CoreRule.Predicate.Query.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67ACD8(&qword_26A7B1800);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F6759BC();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6CE520();
  sub_25F70F640();
  if (v2) {
    return sub_25F67A28C((uint64_t)a1);
  }
  sub_25F67EB8C();
  sub_25F6769B4();
  v12[0] = v11[0];
  v11[0] = 1;
  uint64_t v13 = sub_25F70F1D0();
  uint64_t v14 = v7;
  sub_25F6CE7E4();
  sub_25F6769B4();
  char v15 = 1;
  v16[47] = 3;
  sub_25F67EB40();
  sub_25F70F1C0();
  uint64_t v8 = sub_25F6759F8();
  v9(v8);
  sub_25F67EAD8((uint64_t)v11, (uint64_t)v16);
  sub_25F6C2EE8((uint64_t)v12, a2);
  sub_25F67A28C((uint64_t)a1);
  return sub_25F6C2F44((uint64_t)v12);
}

unint64_t sub_25F6CE7E4()
{
  unint64_t result = qword_26A7B1808;
  if (!qword_26A7B1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1808);
  }
  return result;
}

uint64_t sub_25F6CE830(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6970756F7267 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6CE918(char a1)
{
  if (a1) {
    return 0x676E6970756F7267;
  }
  else {
    return 0x7265746C6966;
  }
}

uint64_t sub_25F6CE94C(void *a1, char a2)
{
  sub_25F67ACD8(&qword_26A7B1830);
  sub_25F67CA24();
  uint64_t v27 = v4;
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v26 = sub_25F67ACD8(&qword_26A7B1838);
  sub_25F67CA24();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11, v12);
  sub_25F6759BC();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_25F67ACD8(&qword_26A7B1840);
  sub_25F67CA24();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19, v20);
  sub_25F6759BC();
  uint64_t v23 = v22 - v21;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6CF8B8();
  sub_25F70F660();
  double v24 = (uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
  if (a2)
  {
    sub_25F6CF904();
    sub_25F70F220();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v8, v28);
  }
  else
  {
    sub_25F6CF950();
    sub_25F70F220();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v15, v26);
  }
  return (*v24)(v23, v16);
}

uint64_t sub_25F6CEB6C(uint64_t a1)
{
  sub_25F67ACD8(&qword_26A7B1860);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v2, v3);
  sub_25F6759BC();
  sub_25F67ACD8(&qword_26A7B1868);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6759BC();
  sub_25F67ACD8(&qword_26A7B1870);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675B10();
  sub_25F67A2DC((void *)a1, *(void *)(a1 + 24));
  sub_25F6CF8B8();
  sub_25F70F640();
  if (v28) {
    goto LABEL_8;
  }
  uint64_t v29 = a1;
  uint64_t v8 = sub_25F70F210();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9
    || (a1 = *(unsigned __int8 *)(v8 + 32),
        sub_25F6CC100(1, v9, v8, v8 + 32, 0, (2 * v9) | 1),
        uint64_t v11 = v10,
        unint64_t v13 = v12,
        swift_bridgeObjectRelease(),
        v11 != v13 >> 1))
  {
    sub_25F70EF20();
    swift_allocError();
    uint64_t v19 = v18;
    sub_25F67ACD8(&qword_26A7B17B8);
    *uint64_t v19 = &_s5QueryV4KindON;
    sub_25F70F180();
    sub_25F70EF10();
    sub_25F675994();
    (*(void (**)(void *))(v20 + 104))(v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_25F679E44();
    v22(v21);
    a1 = v29;
LABEL_8:
    sub_25F67A28C(a1);
    return a1;
  }
  if (a1)
  {
    sub_25F6CF904();
    sub_25F677ED8();
    sub_25F679E44();
    v15(v14);
    swift_unknownObjectRelease();
    uint64_t v16 = sub_25F67D3F8();
    v17(v16);
    a1 = a1;
  }
  else
  {
    sub_25F6CF950();
    sub_25F677ED8();
    sub_25F679E44();
    v25(v24);
    swift_unknownObjectRelease();
    uint64_t v26 = sub_25F67D3F8();
    v27(v26);
  }
  sub_25F67A28C(v29);
  return a1;
}

uint64_t sub_25F6CEF1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreRule.Predicate.Query.init(from:)(a1, a2);
}

uint64_t sub_25F6CEF34(void *a1)
{
  return CoreRule.Predicate.Query.encode(to:)(a1);
}

uint64_t sub_25F6CEF50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Predicate.Query.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6CEF78()
{
  return sub_25F6CE918(*v0);
}

uint64_t sub_25F6CEF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6CE830(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6CEFA8(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF8B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CEFE4(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF8B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CF020(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF950();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CF05C(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF950();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CF098(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF904();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6CF0D4(uint64_t a1)
{
  unint64_t v2 = sub_25F6CF904();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6CF110@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25F6CEB6C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_25F6CF140(void *a1)
{
  return sub_25F6CE94C(a1, *v1);
}

uint64_t static CoreRule.Predicate.Query.filter<A, B>(operation:keyPath:value:)(char *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char v7 = *a1;
  uint64_t v6[3] = *(void *)(*MEMORY[0x263F8EA20] + v2 + 8);
  sub_25F677CCC(v6);
  sub_25F675994();
  sub_25F6795AC();
  v3();
  uint64_t v4 = swift_retain();
  return sub_25F6763F8(v4);
}

uint64_t static CoreRule.Predicate.Query.excluding<A, B>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25F6CF21C(a1, a2, a3, a4, a5, 1);
}

uint64_t static CoreRule.Predicate.Query.matching<A, B>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25F6CF21C(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_25F6CF21C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6 = *a1;
  char v11 = a6;
  void v10[3] = *(void *)(*MEMORY[0x263F8EA20] + v6 + 8);
  sub_25F677CCC(v10);
  sub_25F675994();
  sub_25F6795AC();
  v7();
  uint64_t v8 = swift_retain();
  return sub_25F6763F8(v8);
}

double static CoreRule.Predicate.Query.largestSubset<A, B>(groupedBy:)@<D0>(uint64_t a1@<X8>)
{
  swift_retain();
  uint64_t v2 = AnyKeyPath.stringValue.getter();
  uint64_t v4 = v3;
  swift_release();
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)a1 = 9;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

double static CoreRule.Predicate.Query.smallestSubset<A, B>(groupedBy:)@<D0>(uint64_t a1@<X8>)
{
  swift_retain();
  uint64_t v2 = AnyKeyPath.stringValue.getter();
  uint64_t v4 = v3;
  swift_release();
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)a1 = 10;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

uint64_t _s5QueryVwxx(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    return sub_25F67A28C(a1 + 32);
  }
  return result;
}

uint64_t _s5QueryVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  sub_25F70E570();
  if (v5)
  {
    *(void *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v5 - 8))(a1 + 32, v4, v5);
  }
  else
  {
    long long v6 = v4[1];
    *(_OWORD *)(a1 + 32) = *v4;
    *(_OWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t _s5QueryVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      sub_25F69A6F8((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
    }
    else
    {
      sub_25F6674D8(a1 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 56) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  return a1;
}

__n128 _s5QueryVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5QueryVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (*(void *)(a1 + 56))
  {
    if (*(void *)(a2 + 56)) {
      sub_25F67A28C(a1 + 32);
    }
    else {
      sub_25F6674D8(a1 + 32);
    }
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t _s5QueryVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5QueryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5QueryV4KindOMa()
{
  return &_s5QueryV4KindON;
}

unsigned char *_s5QueryV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6CF740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5QueryV10CodingKeysOMa()
{
  return &_s5QueryV10CodingKeysON;
}

unint64_t sub_25F6CF77C()
{
  unint64_t result = qword_26A7B1810;
  if (!qword_26A7B1810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1810);
  }
  return result;
}

unint64_t sub_25F6CF7CC()
{
  unint64_t result = qword_26A7B1818;
  if (!qword_26A7B1818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1818);
  }
  return result;
}

unint64_t sub_25F6CF81C()
{
  unint64_t result = qword_26A7B1820;
  if (!qword_26A7B1820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1820);
  }
  return result;
}

unint64_t sub_25F6CF86C()
{
  unint64_t result = qword_26A7B1828;
  if (!qword_26A7B1828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1828);
  }
  return result;
}

unint64_t sub_25F6CF8B8()
{
  unint64_t result = qword_26A7B1848;
  if (!qword_26A7B1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1848);
  }
  return result;
}

unint64_t sub_25F6CF904()
{
  unint64_t result = qword_26A7B1850;
  if (!qword_26A7B1850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1850);
  }
  return result;
}

unint64_t sub_25F6CF950()
{
  unint64_t result = qword_26A7B1858;
  if (!qword_26A7B1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1858);
  }
  return result;
}

uint64_t sub_25F6CF99C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_25F67ACD8(a3);
  sub_25F675994();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_25F6CF9FC(uint64_t a1, uint64_t *a2)
{
  sub_25F67ACD8(a2);
  sub_25F675994();
  sub_25F679E44();
  v3();
  return a1;
}

unint64_t sub_25F6CFA50()
{
  unint64_t result = qword_26A7B0EF8;
  if (!qword_26A7B0EF8)
  {
    sub_25F682580(&qword_26B39CDA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0EF8);
  }
  return result;
}

unsigned char *_s5QueryV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6CFB70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5QueryV4KindO10CodingKeysOMa()
{
  return &_s5QueryV4KindO10CodingKeysON;
}

ValueMetadata *_s5QueryV4KindO16FilterCodingKeysOMa()
{
  return &_s5QueryV4KindO16FilterCodingKeysON;
}

ValueMetadata *_s5QueryV4KindO18GroupingCodingKeysOMa()
{
  return &_s5QueryV4KindO18GroupingCodingKeysON;
}

unint64_t sub_25F6CFBCC()
{
  unint64_t result = qword_26A7B1878;
  if (!qword_26A7B1878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1878);
  }
  return result;
}

unint64_t sub_25F6CFC1C()
{
  unint64_t result = qword_26A7B1880;
  if (!qword_26A7B1880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1880);
  }
  return result;
}

unint64_t sub_25F6CFC6C()
{
  unint64_t result = qword_26A7B1888;
  if (!qword_26A7B1888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1888);
  }
  return result;
}

unint64_t sub_25F6CFCBC()
{
  unint64_t result = qword_26A7B1890;
  if (!qword_26A7B1890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1890);
  }
  return result;
}

unint64_t sub_25F6CFD0C()
{
  unint64_t result = qword_26A7B1898;
  if (!qword_26A7B1898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1898);
  }
  return result;
}

unint64_t sub_25F6CFD5C()
{
  unint64_t result = qword_26A7B18A0;
  if (!qword_26A7B18A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18A0);
  }
  return result;
}

unint64_t sub_25F6CFDAC()
{
  unint64_t result = qword_26A7B18A8;
  if (!qword_26A7B18A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18A8);
  }
  return result;
}

uint64_t static CoreRule.Predicate.Subpredicate.maxAge(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_25F6CFE08(uint64_t a1)
{
  if (!a1) {
    return 7104878;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_25F686110();
    int v3 = (unsigned char *)(a1 + 48);
    do
    {
      if (*v3)
      {
        sub_25F70EEC0();
        swift_bridgeObjectRelease();
        unint64_t v9 = 0xD000000000000015;
        unint64_t v10 = 0x800000025F719AC0;
      }
      else
      {
        sub_25F70EEC0();
        swift_bridgeObjectRelease();
        sub_25F67641C();
        unint64_t v9 = v4;
        unint64_t v10 = 0xEE00202D20776F6ELL;
      }
      sub_25F70F680();
      sub_25F70E790();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v11 + 16);
      if (v5 >= *(void *)(v11 + 24) >> 1) {
        sub_25F686110();
      }
      v3 += 24;
      *(void *)(v11 + 16) = v5 + 1;
      uint64_t v6 = v11 + 16 * v5;
      *(void *)(v6 + 32) = v9;
      *(void *)(v6 + 40) = v10;
      --v2;
    }
    while (v2);
  }
  sub_25F67ACD8(&qword_26B39CDA0);
  sub_25F681778((unint64_t *)&qword_26A7B0EF8, &qword_26B39CDA0);
  uint64_t v7 = sub_25F70E650();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t CoreRule.Predicate.Subpredicate.id.getter()
{
  if (*(unsigned char *)(v0 + 16))
  {
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    unint64_t v1 = 0xD000000000000015;
  }
  else
  {
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    sub_25F67641C();
  }
  unint64_t v3 = v1;
  sub_25F70F680();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_25F6D00B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v33[2] = a2;
  void v33[3] = a3;
  v33[0] = a1;
  char v37 = a4;
  uint64_t v35 = sub_25F70DC90();
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F674D94();
  uint64_t v34 = v8;
  uint64_t v9 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v11 = v10;
  uint64_t v14 = MEMORY[0x270FA5388](v12, v13);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17);
  uint64_t v36 = sub_25F67ACD8(&qword_26B39C278);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v18, v19);
  sub_25F675A6C();
  uint64_t v20 = sub_25F67ACD8(&qword_26B39CF08);
  sub_25F67CA24();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23, v24);
  sub_25F6759BC();
  uint64_t v27 = v26 - v25;
  v33[1] = sub_25F67ACD8(&qword_26B39C150);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v28, v29);
  sub_25F6768BC();
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 16))(v27, v33[0], v20);
  swift_getKeyPath();
  sub_25F681778(&qword_26B39CF00, &qword_26B39CF08);
  sub_25F70DCD0();
  _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  sub_25F70DEA0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v9);
  sub_25F70DCC0();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v34, *MEMORY[0x263F06B90], v35);
  uint64_t v30 = sub_25F67ACD8(&qword_26B39C138);
  uint64_t v31 = v37;
  void v37[3] = v30;
  v31[4] = sub_25F6D1A6C();
  sub_25F677CCC(v31);
  sub_25F681778(&qword_26B39C148, &qword_26B39C150);
  sub_25F681778(&qword_26B39C270, &qword_26B39C278);
  sub_25F6D1C34((unint64_t *)&qword_26B39D7F0);
  return sub_25F70DBB0();
}

uint64_t sub_25F6D0450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v38 = a1;
  sub_25F70DC90();
  sub_25F67CA24();
  uint64_t v43 = v8;
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7, v9);
  sub_25F674D94();
  uint64_t v47 = v10;
  uint64_t v46 = sub_25F67ACD8(&qword_26B39C278);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v11, v12);
  sub_25F674D94();
  uint64_t v45 = v13;
  uint64_t v14 = sub_25F67ACD8(&qword_26B39CF08);
  sub_25F67CA24();
  uint64_t v37 = v15;
  MEMORY[0x270FA5388](v16, v17);
  sub_25F675B10();
  uint64_t v42 = sub_25F67ACD8(&qword_26B39C150);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v18, v19);
  sub_25F674D94();
  uint64_t v39 = v20;
  uint64_t v21 = sub_25F67ACD8(&qword_26B39DBA8);
  MEMORY[0x270FA5388](v21 - 8, v22);
  sub_25F675A6C();
  uint64_t v23 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v25 = v24;
  uint64_t v28 = MEMORY[0x270FA5388](v26, v27);
  MEMORY[0x270FA5388](v28, v29);
  uint64_t v31 = (char *)&v36 - v30;
  if (qword_26B39D588 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_25F67ACD8(&qword_26B39D590);
  uint64_t v33 = sub_25F67F3A4(v32, (uint64_t)qword_26B3A3028);
  swift_beginAccess();
  uint64_t v34 = type metadata accessor for DeviceProfile();
  if (sub_25F67D9DC(v33, 1, v34))
  {
    sub_25F674004(v5, 1, 1, v23);
LABEL_6:
    sub_25F68C224(v5);
    char v48 = 0;
    a4[3] = sub_25F67ACD8(&qword_26A7B18C8);
    a4[4] = sub_25F6D1C78();
    sub_25F677CCC(a4);
    return sub_25F70DCC0();
  }
  sub_25F6BC144(v33 + *(int *)(v34 + 32), v5);
  if (sub_25F67D9DC(v5, 1, v23) == 1) {
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v31, v5, v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v4, v38, v14);
  swift_getKeyPath();
  sub_25F681778(&qword_26B39CF00, &qword_26B39CF08);
  sub_25F70DCD0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  sub_25F70DEA0();
  sub_25F70DCC0();
  (*(void (**)(uint64_t, void, uint64_t))(v43 + 104))(v47, *MEMORY[0x263F06B90], v44);
  a4[3] = sub_25F67ACD8(&qword_26B39C138);
  a4[4] = sub_25F6D1A6C();
  sub_25F677CCC(a4);
  sub_25F681778(&qword_26B39C148, &qword_26B39C150);
  sub_25F681778(&qword_26B39C270, &qword_26B39C278);
  sub_25F6D1C34((unint64_t *)&qword_26B39D7F0);
  sub_25F70DBB0();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v31, v23);
}

uint64_t static CoreRule.Predicate.Subpredicate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a2 + 16))
  {
    return 0;
  }
  return sub_25F70F6C0();
}

uint64_t sub_25F6D0978(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65674178616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6470557265746661 && a2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6D0A78(char a1)
{
  if (a1) {
    return 0x6470557265746661;
  }
  else {
    return 0x65674178616DLL;
  }
}

uint64_t sub_25F6D0AB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_25F70F330();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25F6D0B3C()
{
  return 0x6E6F697461727564;
}

uint64_t sub_25F6D0B58(uint64_t a1)
{
  unint64_t v2 = sub_25F6D0FD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D0B94(uint64_t a1)
{
  unint64_t v2 = sub_25F6D0FD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6D0BD0()
{
  return sub_25F6B0B24();
}

uint64_t sub_25F6D0BD8()
{
  return sub_25F6D0A78(*v0);
}

uint64_t sub_25F6D0BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D0978(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D0C08(uint64_t a1)
{
  unint64_t v2 = sub_25F6D0F84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D0C44(uint64_t a1)
{
  unint64_t v2 = sub_25F6D0F84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6D0C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D0AB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25F6D0CAC(uint64_t a1)
{
  unint64_t v2 = sub_25F6D101C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D0CE8(uint64_t a1)
{
  unint64_t v2 = sub_25F6D101C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreRule.Predicate.Subpredicate.encode(to:)(void *a1)
{
  sub_25F67ACD8(&qword_26A7B0FC0);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6768BC();
  sub_25F67ACD8(&qword_26A7B0FB8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6759BC();
  sub_25F67ACD8(&qword_26A7B0FB0);
  sub_25F67CA24();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10, v11);
  sub_25F675A6C();
  uint64_t v12 = *(unsigned __int8 *)(v1 + 16);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6D0F84();
  sub_25F70F660();
  if (v12) {
    sub_25F6D0FD0();
  }
  else {
    sub_25F6D101C();
  }
  sub_25F679E8C();
  sub_25F70F2A0();
  sub_25F679E44();
  v13();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v2, v12);
}

unint64_t sub_25F6D0F84()
{
  unint64_t result = qword_26B39C170;
  if (!qword_26B39C170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C170);
  }
  return result;
}

unint64_t sub_25F6D0FD0()
{
  unint64_t result = qword_26B39C198;
  if (!qword_26B39C198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C198);
  }
  return result;
}

unint64_t sub_25F6D101C()
{
  unint64_t result = qword_26A7B0AF8;
  if (!qword_26A7B0AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B0AF8);
  }
  return result;
}

uint64_t CoreRule.Predicate.Subpredicate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67ACD8(&qword_26B39C1C0);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v4, v5);
  sub_25F6759BC();
  sub_25F67ACD8(&qword_26B39C1B8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v6, v7);
  sub_25F675A6C();
  uint64_t v8 = sub_25F67ACD8(&qword_26B39C1B0);
  sub_25F67CA24();
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v10, v11);
  sub_25F675B10();
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6D0F84();
  sub_25F70F640();
  if (v31) {
    goto LABEL_9;
  }
  uint64_t v12 = sub_25F70F210();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    uint64_t v14 = v2;
    goto LABEL_7;
  }
  uint64_t v14 = v2;
  char v15 = *(unsigned char *)(v12 + 32);
  sub_25F6CC100(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v17 != v19 >> 1)
  {
LABEL_7:
    uint64_t v20 = sub_25F70EF20();
    swift_allocError();
    uint64_t v22 = v21;
    sub_25F67ACD8(&qword_26A7B17B8);
    *uint64_t v22 = &type metadata for CoreRule.Predicate.Subpredicate;
    sub_25F70F180();
    sub_25F70EF10();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v8);
LABEL_9:
    uint64_t v23 = (uint64_t)a1;
    return sub_25F67A28C(v23);
  }
  if (v15)
  {
    LOBYTE(v30) = 1;
    sub_25F6D0FD0();
    sub_25F67D6D8();
    sub_25F70F200();
    sub_25F6795C0();
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_25F6D101C();
    sub_25F67D6D8();
    sub_25F70F200();
    sub_25F677EF8();
  }
  sub_25F679E44();
  v25();
  swift_unknownObjectRelease();
  uint64_t v26 = sub_25F6766B4();
  v27(v26);
  *(_OWORD *)a2 = v30;
  *(unsigned char *)(a2 + 16) = v15;
  uint64_t v23 = (uint64_t)a1;
  return sub_25F67A28C(v23);
}

uint64_t sub_25F6D14B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreRule.Predicate.Subpredicate.init(from:)(a1, a2);
}

uint64_t sub_25F6D14CC(void *a1)
{
  return CoreRule.Predicate.Subpredicate.encode(to:)(a1);
}

unint64_t sub_25F6D14E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CoreRule.Predicate.Subpredicate.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s12SubpredicateOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s12SubpredicateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25F6D1594(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_25F6D159C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

unsigned char *_s12SubpredicateO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D1674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12SubpredicateO10CodingKeysOMa()
{
  return &_s12SubpredicateO10CodingKeysON;
}

ValueMetadata *_s12SubpredicateO16MaxAgeCodingKeysOMa()
{
  return &_s12SubpredicateO16MaxAgeCodingKeysON;
}

unsigned char *_s12SubpredicateO16MaxAgeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25F6D175CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s12SubpredicateO21AfterUpdateCodingKeysOMa()
{
  return &_s12SubpredicateO21AfterUpdateCodingKeysON;
}

unint64_t sub_25F6D1798()
{
  unint64_t result = qword_26A7B18B0;
  if (!qword_26A7B18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18B0);
  }
  return result;
}

unint64_t sub_25F6D17E8()
{
  unint64_t result = qword_26A7B18B8;
  if (!qword_26A7B18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18B8);
  }
  return result;
}

unint64_t sub_25F6D1838()
{
  unint64_t result = qword_26A7B18C0;
  if (!qword_26A7B18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18C0);
  }
  return result;
}

unint64_t sub_25F6D1888()
{
  unint64_t result = qword_26B39C190;
  if (!qword_26B39C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C190);
  }
  return result;
}

unint64_t sub_25F6D18D8()
{
  unint64_t result = qword_26B39C188;
  if (!qword_26B39C188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C188);
  }
  return result;
}

unint64_t sub_25F6D1928()
{
  unint64_t result = qword_26B39C1A8;
  if (!qword_26B39C1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C1A8);
  }
  return result;
}

unint64_t sub_25F6D1978()
{
  unint64_t result = qword_26B39C1A0;
  if (!qword_26B39C1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C1A0);
  }
  return result;
}

unint64_t sub_25F6D19C8()
{
  unint64_t result = qword_26B39C180;
  if (!qword_26B39C180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C180);
  }
  return result;
}

unint64_t sub_25F6D1A18()
{
  unint64_t result = qword_26B39C178;
  if (!qword_26B39C178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C178);
  }
  return result;
}

unint64_t sub_25F6D1A6C()
{
  unint64_t result = qword_26B39C130;
  if (!qword_26B39C130)
  {
    sub_25F682580(&qword_26B39C138);
    sub_25F6D1AE8();
    sub_25F6D1B80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C130);
  }
  return result;
}

unint64_t sub_25F6D1AE8()
{
  unint64_t result = qword_26B39C140;
  if (!qword_26B39C140)
  {
    sub_25F682580(&qword_26B39C150);
    sub_25F681778(&qword_26B39CEF8, &qword_26B39CF08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C140);
  }
  return result;
}

unint64_t sub_25F6D1B80()
{
  unint64_t result = qword_26B39C268;
  if (!qword_26B39C268)
  {
    sub_25F682580(&qword_26B39C278);
    sub_25F6D1C34(&qword_26B39D3C0);
    sub_25F6D1C34(&qword_26B39DB00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C268);
  }
  return result;
}

uint64_t sub_25F6D1C34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25F70DF30();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25F6D1C78()
{
  unint64_t result = qword_26A7B18D0;
  if (!qword_26A7B18D0)
  {
    sub_25F682580(&qword_26A7B18C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B18D0);
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> static CoreRuleProtocol.makeIdentifier(prefix:operation:subrules:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  char v5 = *a3;
  uint64_t v20 = a2;
  sub_25F70E570();
  sub_25F70E790();
  LOBYTE(v16[0]) = v5;
  CoreRule.Predicate.Operator.rawValue.getter();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    sub_25F686110();
    uint64_t v8 = a4 + 32;
    uint64_t v7 = v19;
    do
    {
      sub_25F67B010(v8, (uint64_t)v16);
      uint64_t v9 = v17;
      uint64_t v10 = v18;
      sub_25F67A2DC(v16, v17);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
      uint64_t v13 = v12;
      sub_25F67A28C((uint64_t)v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25F686110();
        uint64_t v7 = v19;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      if (v14 >= *(void *)(v7 + 24) >> 1)
      {
        sub_25F686110();
        uint64_t v7 = v19;
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v13;
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  v16[0] = v7;
  sub_25F67ACD8(&qword_26B39CDA0);
  sub_25F6CFA50();
  sub_25F70E650();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
}

uint64_t static CoreRuleProtocol.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  uint64_t v7 = v6(a3, a4);
  uint64_t v9 = v8;
  if (v7 == v6(a3, a4) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_25F70F330();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_25F6D1FC0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25F6D20A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25F6D2184(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    sub_25F67E7DC();
LABEL_11:
    uint64_t result = sub_25F67D40C();
    __break(1u);
    return result;
  }
  if (a3 + 48 * a2 > a1 && a1 + 48 * a2 > a3)
  {
    sub_25F67C9C0();
    sub_25F67D06C();
    goto LABEL_11;
  }
  sub_25F67ACD8(&qword_26A7B1258);
  sub_25F6795D4();
  return swift_arrayInitWithCopy();
}

uint64_t sub_25F6D224C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (BOOL v3 = a1 + 40 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    sub_25F67ACD8(&qword_26A7B0AE8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25F6D2350(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    sub_25F67E7DC();
LABEL_11:
    uint64_t result = sub_25F67D40C();
    __break(1u);
    return result;
  }
  if (a3 + 80 * a2 > a1 && a1 + 80 * a2 > a3)
  {
    sub_25F67C9C0();
    sub_25F67D06C();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_25F6D2404(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_25F67C9C0();
    sub_25F67E7DC();
LABEL_11:
    uint64_t result = sub_25F67D40C();
    __break(1u);
    return result;
  }
  if (a3 + (a2 << 6) > a1 && a1 + (a2 << 6) > a3)
  {
    sub_25F67C9C0();
    sub_25F67D06C();
    goto LABEL_11;
  }
  return swift_arrayInitWithCopy();
}

void *sub_25F6D24B4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_25F70F140();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_25F6D258C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25F6D266C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25F70F140();
    __break(1u);
  }
  else
  {
    sub_25F67ACD8(&qword_26B39CBE0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void sub_25F6D276C()
{
  sub_25F6D29B0();
  void *v0 = v1;
}

void sub_25F6D27BC()
{
  sub_25F6D29B0();
  void *v0 = v1;
}

char *sub_25F6D280C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25F6D2A74(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

uint64_t dispatch thunk of CoreRuleProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoreRuleProtocol.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreRuleProtocol.subject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreRuleProtocol.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreRuleProtocol.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

size_t sub_25F6D2890(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_25F6D2B94(a1, a2, a3, *v3);
  *BOOL v3 = result;
  return result;
}

char *sub_25F6D28B0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_25F6D2D48(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_25F6D28D0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_25F6D2E34(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_25F6D28F0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_25F6D2F18(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

void sub_25F6D2910()
{
  sub_25F686160();
  void *v0 = v1;
}

void sub_25F6D2960()
{
  sub_25F68D138();
  void *v0 = v1;
}

void sub_25F6D29B0()
{
  sub_25F67E088();
  if (v5)
  {
    sub_25F675A48();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_25F675A38();
    }
  }
  sub_25F676430();
  if (v4)
  {
    sub_25F67ACD8(v9);
    uint64_t v10 = (const void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_25F6766CC(v11 - 32);
  }
  uint64_t v12 = sub_25F67D6FC();
  if (v3)
  {
    v2(v12);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    v1(v12);
  }
  swift_release();
}

char *sub_25F6D2A74(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25F67ACD8(&qword_26B39CDD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25F6BFA7C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25F6D2184((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_25F6D2B60()
{
}

size_t sub_25F6D2B94(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_25F67ACD8(&qword_26A7B0FF8);
  uint64_t v10 = *(void *)(type metadata accessor for CoreTip.ConstellationAction() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  _OWORD v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for CoreTip.ConstellationAction() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (unint64_t)v13 + v16;
  unint64_t v18 = a4 + v16;
  if (v5)
  {
    sub_25F6BFD4C(v18, v8, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25F679400(v18, v8, v17, (uint64_t (*)(void))type metadata accessor for CoreTip.ConstellationAction);
  }
  swift_release();
  return (size_t)v13;
}

char *sub_25F6D2D48(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25F67ACD8(&qword_26A7B0FE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25F6BFD64(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25F6D224C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_25F6D2E34(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25F67ACD8(&qword_26A7B15F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25F6BFE00(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25F6D2404((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_25F6D2F18(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_25F67ACD8(&qword_26B39C1D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25F6BFF58(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25F6D24B4(v13, v8, v12);
  }
  swift_release();
  return v10;
}

unint64_t CoreRule.Status.init(rawValue:)(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

uint64_t CoreRule.Status.init(isSatisfied:)(char a1)
{
  if (a1) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t CoreRule.Status.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_25F6D301C()
{
  unint64_t result = qword_26A7B18E8;
  if (!qword_26A7B18E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B18E8);
  }
  return result;
}

unint64_t sub_25F6D3068@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = CoreRule.Status.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_25F6D3094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Status.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

unsigned char *_s6StatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D318CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of RuleSubject.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static RuleSubject.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t CoreRule.Subrules.init(id:subrules:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t CoreRule.Subrules.id.getter()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t CoreRule.Subrules.rules.getter()
{
  return sub_25F70E570();
}

void static CoreRule.Subrules.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_25F6D3234(uint64_t a1)
{
  unint64_t result = sub_25F6D325C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25F6D325C()
{
  unint64_t result = qword_26B39C168;
  if (!qword_26B39C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C168);
  }
  return result;
}

uint64_t sub_25F6D32A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreRule.Subrules.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for CoreRule.Subrules()
{
  return &type metadata for CoreRule.Subrules;
}

uint64_t sub_25F6D32E0()
{
  sub_25F70E790();
  return swift_bridgeObjectRelease();
}

void sub_25F6D33D8(void *a1@<X8>)
{
  CoreRuleRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_25F6D3404(void *a1@<X8>)
{
  CoreRuleRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25F6D3430()
{
  return CoreRuleRecord.id.setter();
}

uint64_t sub_25F6D3474@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F69664C();
  *a1 = result;
  return result;
}

void sub_25F6D34A0()
{
}

uint64_t sub_25F6D34F4()
{
  return sub_25F6899D4();
}

uint64_t sub_25F6D3530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6D34F4();
  *a1 = result;
  return result;
}

void sub_25F6D355C()
{
}

uint64_t (*CoreRuleRecord.id.modify(void *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  CoreRuleRecord.id.getter();
  *a1 = v3;
  a1[1] = v4;
  return sub_25F6D35F8;
}

uint64_t sub_25F6D35F8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreRuleRecord.id.setter();
  }
  sub_25F70E570();
  CoreRuleRecord.id.setter();
  return swift_bridgeObjectRelease();
}

void CoreRuleRecord.dateCreated.getter()
{
}

void sub_25F6D3798()
{
}

void sub_25F6D37BC()
{
}

uint64_t sub_25F6D37E0(uint64_t a1)
{
  sub_25F70DF30();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v2, v3);
  sub_25F6759BC();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5 - v4, a1);
  return CoreRuleRecord.dateCreated.setter();
}

uint64_t CoreRuleRecord.dateCreated.setter()
{
  swift_getKeyPath();
  sub_25F67B1C0(&qword_26B39DBE8, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  sub_25F676374();
  swift_release();
  sub_25F70DF30();
  sub_25F675A58();
  uint64_t v0 = sub_25F678470();
  return v1(v0);
}

uint64_t sub_25F6D395C()
{
  return swift_release();
}

uint64_t sub_25F6D3A34()
{
  return sub_25F6D395C();
}

void (*CoreRuleRecord.dateCreated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_25F70DF30();
  v3[1] = v4;
  sub_25F6768F0(v4);
  void v3[2] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  CoreRuleRecord.dateCreated.getter();
  return sub_25F6D3AF4;
}

void sub_25F6D3AF4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    CoreRuleRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreRuleRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_25F6D3BA8(void *a1@<X8>)
{
  CoreRuleRecord.predicate.getter();
  *a1 = v2;
}

void sub_25F6D3BD4()
{
  sub_25F6D48B0();
  CoreRuleRecord.predicate.getter();
  void *v0 = v1;
}

void sub_25F6D3BFC(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  CoreRuleRecord.predicate.setter(v1);
}

void (*CoreRuleRecord.predicate.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  CoreRuleRecord.predicate.getter();
  *a1 = v3;
  return sub_25F6D3C78;
}

void sub_25F6D3C78(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    CoreRuleRecord.predicate.setter(v2);
  }
  else
  {
    CoreRuleRecord.predicate.setter(*a1);
  }
}

uint64_t CoreRuleRecord.isDirty.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t CoreRuleRecord.isDirty.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 17) = a1;
  return result;
}

uint64_t (*CoreRuleRecord.isDirty.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_25F6D3DA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F689AEC();
  *a1 = result;
  return result;
}

void sub_25F6D3DCC()
{
}

void sub_25F6D3E20(void *a1@<X8>)
{
  sub_25F68AB60();
  *a1 = v2;
}

void sub_25F6D3E4C()
{
}

void sub_25F6D3EA0(void *a1@<X8>)
{
  sub_25F65E654();
  *a1 = v2;
}

void sub_25F6D3ECC()
{
}

void sub_25F6D3F28()
{
}

uint64_t sub_25F6D3F5C()
{
  return swift_release();
}

uint64_t sub_25F6D4018()
{
  return sub_25F68398C();
}

void sub_25F6D4044(_WORD *a1@<X8>)
{
  CoreRuleRecord.statusValue.getter();
  *a1 = v2;
}

void sub_25F6D4070()
{
  sub_25F6D48B0();
  CoreRuleRecord.statusValue.getter();
  _WORD *v0 = v1;
}

void sub_25F6D4098()
{
}

void sub_25F6D40C0()
{
}

void (*CoreRuleRecord.statusValue.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  CoreRuleRecord.statusValue.getter();
  *(_WORD *)(a1 + 8) = v3;
  return sub_25F6D4130;
}

void sub_25F6D4130()
{
}

void (*CoreRuleRecord.status.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = CoreRuleRecord.status.getter();
  return sub_25F6D41A0;
}

void sub_25F6D41A0()
{
}

uint64_t CoreRuleRecord.description.getter()
{
  uint64_t v3 = 0;
  unint64_t v4 = 0xE000000000000000;
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F689784(&v2);
  sub_25F6D32E0();
  sub_25F70E790();
  sub_25F689990();
  if (v0)
  {
    CoreTipRecord.id.getter();
    swift_release();
  }
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  return v3;
}

uint64_t CoreRuleRecord.__allocating_init(id:predicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  CoreRuleRecord.init(id:predicate:)(a1, a2, a3);
  return v6;
}

uint64_t sub_25F6D4320(uint64_t a1)
{
  sub_25F67B010(a1, (uint64_t)v2);
  return CoreRuleRecord.persistentBackingData.setter(v2);
}

uint64_t (*CoreRuleRecord.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  unsigned char v3[16] = v1;
  swift_beginAccess();
  sub_25F67B010(v1 + 24, (uint64_t)v3);
  return sub_25F6961A4;
}

uint64_t sub_25F6D43D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F689AEC();
  *a1 = result;
  return result;
}

void sub_25F6D4408(void *a1@<X8>)
{
  sub_25F68AB60();
  *a1 = v2;
}

uint64_t sub_25F6D4438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6D34F4();
  *a1 = result;
  return result;
}

uint64_t sub_25F6D4470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F69664C();
  *a1 = result;
  return result;
}

void sub_25F6D44A8(void *a1@<X8>)
{
  sub_25F65E654();
  *a1 = v2;
}

void sub_25F6D44D8()
{
  sub_25F6D48B0();
  sub_25F6835B0();
  void *v0 = v1;
}

void sub_25F6D4504()
{
  sub_25F6D48B0();
  sub_25F689984();
  _WORD *v0 = v1;
}

void sub_25F6D452C()
{
}

uint64_t CoreRuleRecord.deinit()
{
  sub_25F67A28C(v0 + 24);
  sub_25F70DFF0();
  sub_25F675A58();
  uint64_t v1 = sub_25F678470();
  v2(v1);
  return v0;
}

void sub_25F6D45CC(void *a1@<X8>)
{
  CoreRuleRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25F6D45F8()
{
  return CoreRuleRecord.description.getter();
}

uint64_t CoreRuleRecord.hashValue.getter()
{
  return sub_25F70F620();
}

uint64_t sub_25F6D46A8()
{
  return CoreRuleRecord.hashValue.getter();
}

uint64_t sub_25F6D46CC()
{
  return sub_25F70E290();
}

uint64_t sub_25F6D4740(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_25F67B1C0((unint64_t *)&qword_26B39DBF0, (void (*)(uint64_t))type metadata accessor for CoreRuleRecord);
  return MEMORY[0x270EFE8F0](v3, v4, v2, v5);
}

uint64_t sub_25F6D47C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CoreRuleRecord.status.getter();
  *a1 = result;
  return result;
}

void sub_25F6D47EC()
{
}

uint64_t sub_25F6D4814@<X0>(uint64_t a1@<X8>)
{
  return CoreRuleRecord.persistentBackingData.getter(a1);
}

uint64_t sub_25F6D483C()
{
  return type metadata accessor for CoreRuleRecord();
}

uint64_t method lookup function for CoreRuleRecord(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreRuleRecord);
}

uint64_t dispatch thunk of CoreRuleRecord.__allocating_init(id:predicate:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of CoreRuleRecord.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

ValueMetadata *type metadata accessor for CoreRuleRecord._SwiftDataNoType()
{
  return &type metadata for CoreRuleRecord._SwiftDataNoType;
}

uint64_t sub_25F6D4894()
{
  return sub_25F6D3F5C();
}

uint64_t sub_25F6D48BC()
{
  return sub_25F70E250();
}

uint64_t sub_25F6D48DC()
{
  return swift_retain();
}

unint64_t sub_25F6D490C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = a6;
  uint64_t v13 = sub_25F68FC48(a1, a2, a3, a7, a8, a9);
  if (!v13) {
    goto LABEL_9;
  }
  unint64_t v14 = v13;
  sub_25F67B010(a4, (uint64_t)&v25);
  sub_25F67ACD8(&qword_26B39D578);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
LABEL_9:
    unint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xD00000000000002ELL;
    unint64_t v26 = 0x800000025F719BD0;
    (*(void (**)(uint64_t, uint64_t))(a9 + 24))(a8, a9);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    unint64_t v20 = v25;
    unint64_t v14 = v26;
    sub_25F6931C0();
    swift_allocError();
    *uint64_t v21 = v20;
    v21[1] = v14;
    swift_willThrow();
    return v14;
  }
  CoreRuleRecord.update(tip:parent:)(a5, v29);
  swift_getKeyPath();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 32))(&v25, a8, a9);
  uint64_t v29 = sub_25F68FA04();
  swift_release();
  swift_getKeyPath();
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 56))(&v25, a8, a9);
  sub_25F68FA04();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(v24 + 16);
  if (v15)
  {
    sub_25F70E570();
    sub_25F70EFD0();
    uint64_t v16 = v24 + 32;
    while (1)
    {
      sub_25F67B010(v16, (uint64_t)&v25);
      uint64_t v17 = v27;
      uint64_t v18 = v28;
      uint64_t v19 = sub_25F67A2DC(&v25, v27);
      sub_25F68F518(v19, 0, v14, a7, v17, v18);
      sub_25F67A28C((uint64_t)&v25);
      if (v9) {
        break;
      }
      sub_25F70EFA0();
      sub_25F70EFE0();
      sub_25F70EFF0();
      sub_25F70EFB0();
      v16 += 40;
      if (!--v15)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    sub_25F6D3F28();
  }
  return v14;
}

uint64_t sub_25F6D4C7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F68350C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_25F6D4CAC(char *a1)
{
  return sub_25F683684(*a1);
}

void sub_25F6D4D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25F689990();
  if (v8)
  {
    if (CoreTipRecord.status.getter() != 2)
    {
      uint64_t v9 = *(void *)(a4 + 16);
      void v11[3] = a3;
      void v11[4] = v9;
      uint64_t v10 = sub_25F677CCC(v11);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v10, a2, a3);
      sub_25F689B28((uint64_t)v11);
      if (v4)
      {
        swift_release();
        sub_25F67EFC0((uint64_t)v11, &qword_26B39D580);
        return;
      }
      sub_25F67EFC0((uint64_t)v11, &qword_26B39D580);
      sub_25F688488(0);
    }
    swift_release();
  }
}

BOOL sub_25F6D4E44(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_25F6D4EA4(unsigned __int8 a1, uint64_t a2)
{
  CoreRuleRecord.predicate.getter();
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  sub_25F689784(v13);
  if (LOBYTE(v13[0]) != 1 || (int v6 = v5[OBJC_IVAR___Predicate_operation], (v6 - 7) > 1))
  {

LABEL_8:
    sub_25F6931C0();
    swift_allocError();
    *size_t v7 = 0xD00000000000001ALL;
    v7[1] = 0x800000025F719D10;
    swift_willThrow();
    return;
  }
  if (v6 == 7)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    if (v8 && *(unsigned char *)(a2 + 32) == 2 && v8 != 1)
    {
      uint64_t v9 = 33;
      while (1)
      {
        uint64_t v10 = v9 - 31;
        if (__OFADD__(v9 - 32, 1)) {
          break;
        }
        if (*(unsigned char *)(a2 + v9) == 2)
        {
          ++v9;
          if (v10 != v8) {
            continue;
          }
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_25:
      swift_once();
      goto LABEL_21;
    }
  }
  else
  {
    if (v6 != 8) {
      goto LABEL_17;
    }
    sub_25F6D4E44(2, a2);
  }
LABEL_16:
  CoreRuleRecord.status.setter();
LABEL_17:
  if (!*(void *)(a2 + 16)) {
    CoreRuleRecord.status.setter();
  }
  if (CoreRuleRecord.status.getter() == a1) {
    goto LABEL_23;
  }
  if (qword_26B39D830 != -1) {
    goto LABEL_25;
  }
LABEL_21:
  uint64_t v11 = type metadata accessor for logger();
  sub_25F67F3A4(v11, (uint64_t)qword_26B39D818);
  *(void *)&v13[0] = 0;
  *((void *)&v13[0] + 1) = 0xE000000000000000;
  sub_25F70EEC0();
  sub_25F70E790();
  CoreRuleRecord.id.getter();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  char v15 = CoreRuleRecord.status.getter();
  sub_25F70F070();
  sub_25F68C2F0(*(uint64_t *)&v13[0], *((unint64_t *)&v13[0] + 1));
  swift_bridgeObjectRelease();
  sub_25F68AB60();
  if (v12)
  {
    uint64_t v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_25F688B00(v13);
    sub_25F686FDC((uint64_t)v13);

    swift_release();
    return;
  }
LABEL_23:
}

void sub_25F6D5180(uint64_t a1@<X8>)
{
  sub_25F67E448();
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x263F8DD00] + v3 + 16);
  sub_25F6792F8(v4);
  sub_25F6D5460(v5, a1);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_25F6D5200()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F6D5C38(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_25F6D5260(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_25F6D5BA4(v4);
  os_unfair_lock_unlock(v5);
  return sub_25F675D8C(a1, &qword_26B39DBA8);
}

void sub_25F6D5314()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  p_os_unfair_lock_opaque = (double *)&v1[4]._os_unfair_lock_opaque;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F6D5BC0(p_os_unfair_lock_opaque);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F6D5378(uint64_t a1)
{
  sub_25F67E448();
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x263F8DD00] + v3 + 16);
  sub_25F6792F8(v4);
  sub_25F6D5BDC(v5);
  os_unfair_lock_unlock(v1);
  return sub_25F675D8C(a1, &qword_26B39D3B0);
}

void sub_25F6D53FC()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = v1 + 4;
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F6D5C80(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_25F6D5460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F675D30(a1, a2, &qword_26B39D3B0);
}

uint64_t sub_25F6D5494(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_25F6D549C(uint64_t a1, uint64_t a2)
{
  return sub_25F675D30(a2, a1, &qword_26B39DBA8);
}

double *sub_25F6D54F0(double *result, double a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_25F6D54F8(uint64_t a1, uint64_t a2)
{
  return sub_25F675D30(a2, a1, &qword_26B39D3B0);
}

void *sub_25F6D554C(void *result, uint64_t a2)
{
  *uint64_t result = a2;
  return result;
}

uint64_t sub_25F6D5554(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39DB78);
}

uint64_t sub_25F6D5560(uint64_t a1)
{
  return sub_25F68DFC8(a1, &qword_26B39DE28);
}

uint64_t CoreTip.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25F70E570();
  return v1;
}

uint64_t sub_25F6D559C@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = CoreTip.status.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_25F6D55D8()
{
  return sub_25F669178();
}

uint64_t sub_25F6D5610(uint64_t a1)
{
  uint64_t v2 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v3 = sub_25F672C08(v2);
  MEMORY[0x270FA5388](v3, v4);
  int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F675D30(a1, (uint64_t)v6, &qword_26B39DBA8);
  swift_retain();
  sub_25F6D5260((uint64_t)v6);
  swift_release();
  uint64_t v7 = sub_25F674DEC();
  return sub_25F675D8C(v7, v8);
}

uint64_t CoreTip.activeViews.getter()
{
  swift_retain();
  uint64_t v0 = sub_25F6D5200();
  swift_release();
  return v0;
}

uint64_t CoreTip.activeViews.setter()
{
  swift_retain();
  sub_25F6D53FC();
  return swift_release();
}

uint64_t (*CoreTip.activeViews.modify(uint64_t *a1))()
{
  a1[1] = *(void *)(v1 + 112);
  swift_retain();
  *a1 = sub_25F6D5200();
  return sub_25F6D5790;
}

uint64_t sub_25F6D5790()
{
  sub_25F6D53FC();
  return swift_release();
}

uint64_t CoreTip.$activeViews.getter()
{
  return swift_retain();
}

void sub_25F6D57D0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_25F64FDD0(v1);
}

uint64_t CoreTip.$constellationContent.getter()
{
  return swift_retain();
}

uint64_t sub_25F6D5808()
{
  swift_retain();
  sub_25F6D5314();
  return swift_release();
}

uint64_t CoreTip.$displayDuration.getter()
{
  return swift_retain();
}

uint64_t sub_25F6D5860()
{
  if (qword_26B39D408 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F70E570();
  sub_25F6E068C();
  return swift_release();
}

uint64_t CoreTip.description.getter()
{
  sub_25F675B8C();
  uint64_t v2 = v0;
  sub_25F70E570();
  sub_25F674DEC();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  return v2;
}

uint64_t CoreTip.init(_:)(uint64_t a1)
{
  return sub_25F68D858(a1, sub_25F68DB8C);
}

uint64_t sub_25F6D597C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6D59A8()
{
  return CoreTip.description.getter();
}

uint64_t sub_25F6D59D4()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25F6D5A0C()
{
  return sub_25F69247C(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_25F6D5A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.activeViews.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6D5A54()
{
  return CoreTip.activeViews.setter();
}

uint64_t sub_25F6D5A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.constellationContent.getter();
  *a1 = result;
  return result;
}

void sub_25F6D5AAC(double *a1@<X8>)
{
  *a1 = CoreTip.displayDuration.getter();
}

uint64_t sub_25F6D5AD8()
{
  return sub_25F6D5808();
}

uint64_t sub_25F6D5B00()
{
  return type metadata accessor for CoreTip();
}

uint64_t method lookup function for CoreTip(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreTip);
}

uint64_t dispatch thunk of CoreTip.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_25F6D5B34()
{
  return sub_25F69247C(MEMORY[0x263F8EEE8], 42);
}

double *sub_25F6D5B50(double *a1, double *a2)
{
  return sub_25F6D54F0(a1, *a2);
}

uint64_t sub_25F6D5B6C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25F6D5BA4(uint64_t a1)
{
  return sub_25F6D549C(a1, *(void *)(v1 + 16));
}

double *sub_25F6D5BC0(double *a1)
{
  return sub_25F6D5B50(a1, *(double **)(v1 + 16));
}

uint64_t sub_25F6D5BDC(uint64_t a1)
{
  return sub_25F6D54F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_25F6D5BF8()
{
  sub_25F67A28C(v0 + 16);
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_25F6D5C38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25F6D5494(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void *sub_25F6D5C64(void *a1, uint64_t *a2)
{
  return sub_25F6D554C(a1, *a2);
}

void *sub_25F6D5C80(void *a1)
{
  return sub_25F6D5C64(a1, *(uint64_t **)(v1 + 16));
}

uint64_t CoreTip.ConstellationAction.id.getter()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t CoreTip.ConstellationAction.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25F70E570();
  return v1;
}

uint64_t CoreTip.ConstellationAction.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25F70E570();
  return v1;
}

uint64_t CoreTip.ConstellationAction.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = v1[13];
  uint64_t v10 = v1[14];
  uint64_t v11 = v1[15];
  uint64_t v12 = v1[16];
  uint64_t v13 = v1[17];
  uint64_t v14 = v1[18];
  uint64_t v15 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  return sub_25F6774C8(v2, v3);
}

uint64_t CoreTip.ConstellationAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CoreTip.ConstellationAction() + 32);
  return sub_25F65A184(v3, a1);
}

uint64_t sub_25F6D5DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701869940 && a2 == 0xE400000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1954047348 && a2 == 0xE400000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x7372747461 && a2 == 0xE500000000000000;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 7107189 && a2 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_25F70F330();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_25F6D5FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D5DD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D5FD8(uint64_t a1)
{
  unint64_t v2 = sub_25F66BD94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D6014(uint64_t a1)
{
  unint64_t v2 = sub_25F66BD94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t _s19ConstellationActionVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    if (v10 == 1)
    {
      memcpy((void *)(a1 + 48), a2 + 6, 0x70uLL);
    }
    else
    {
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v10;
      uint64_t v12 = a2[9];
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v12;
      uint64_t v13 = a2[11];
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v13;
      *(void *)(a1 + 96) = a2[12];
      *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = a2[14];
      uint64_t v14 = a2[17];
      *(void *)(a1 + 128) = a2[16];
      *(void *)(a1 + 136) = v14;
      uint64_t v15 = a2[19];
      *(void *)(a1 + 144) = a2[18];
      *(void *)(a1 + 152) = v15;
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
    }
    uint64_t v16 = *(int *)(a3 + 32);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_25F70DE50();
    if (sub_25F67D9DC((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_25F67ACD8(&qword_26B39E248);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      sub_25F674004((uint64_t)v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t _s19ConstellationActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) == 1)
  {
    if (v6 != 1)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v7 = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 96) = v7;
      uint64_t v8 = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      *(void *)(a1 + 112) = v8;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      sub_25F70E570();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 1)
  {
    sub_25F6ABC8C(a1 + 48);
LABEL_6:
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  sub_25F70E570();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_25F70DE50();
  int v15 = sub_25F67D9DC((uint64_t)v12, 1, v14);
  int v16 = sub_25F67D9DC((uint64_t)v13, 1, v14);
  if (!v15)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    uint64_t v18 = sub_25F67ACD8(&qword_26B39E248);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  sub_25F674004((uint64_t)v12, 0, 1, v14);
  return a1;
}

_OWORD *_s19ConstellationActionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  memcpy(a1 + 3, a2 + 3, 0x70uLL);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25F70DE50();
  if (sub_25F67D9DC((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_25F67ACD8(&qword_26B39E248);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    sub_25F674004((uint64_t)v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s19ConstellationActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a2 + 56);
  if (v9 == 1)
  {
    sub_25F6ABC8C(a1 + 48);
LABEL_4:
    memcpy((void *)(a1 + 48), (const void *)(a2 + 48), 0x70uLL);
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v14 = *(int *)(a3 + 32);
  int v15 = (void *)(a1 + v14);
  int v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_25F70DE50();
  int v18 = sub_25F67D9DC((uint64_t)v15, 1, v17);
  int v19 = sub_25F67D9DC((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    uint64_t v21 = sub_25F67ACD8(&qword_26B39E248);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  sub_25F674004((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t _s19ConstellationActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25F6D68E8);
}

uint64_t sub_25F6D68E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25F67ACD8(&qword_26B39E248);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return sub_25F67D9DC(v9, a2, v8);
  }
}

uint64_t _s19ConstellationActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25F6D6988);
}

uint64_t sub_25F6D6988(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25F67ACD8(&qword_26B39E248);
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return sub_25F674004(v8, a2, a2, v7);
  }
  return result;
}

unint64_t sub_25F6D6A38()
{
  unint64_t result = qword_26A7B1918;
  if (!qword_26A7B1918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1918);
  }
  return result;
}

void CoreTip.ConstellationAsset.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t CoreTip.ConstellationAsset.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25F70E570();
  return v1;
}

uint64_t sub_25F6D6AC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_25F70F330();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25F6D6B98(char a1)
{
  if (a1) {
    return 1701667182;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_25F6D6BB8()
{
  return sub_25F6D6B98(*v0);
}

uint64_t sub_25F6D6BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D6AC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D6BE8(uint64_t a1)
{
  unint64_t v2 = sub_25F6D6DC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D6C24(uint64_t a1)
{
  unint64_t v2 = sub_25F6D6DC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreTip.ConstellationAsset.encode(to:)(void *a1)
{
  uint64_t v4 = sub_25F67ACD8(&qword_26A7B1920);
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *v1;
  uint64_t v12 = *((void *)v1 + 1);
  v14[0] = *((void *)v1 + 2);
  v14[1] = v12;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6D6DC0();
  sub_25F70F660();
  char v17 = v11;
  char v16 = 0;
  sub_25F6D6E0C();
  sub_25F70F2A0();
  if (!v2)
  {
    char v15 = 1;
    sub_25F70F270();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v4);
}

unint64_t sub_25F6D6DC0()
{
  unint64_t result = qword_26A7B1928;
  if (!qword_26A7B1928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1928);
  }
  return result;
}

unint64_t sub_25F6D6E0C()
{
  unint64_t result = qword_26A7B1930;
  if (!qword_26A7B1930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1930);
  }
  return result;
}

uint64_t CoreTip.ConstellationAsset.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67ACD8(&qword_26A7B1938);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6D6DC0();
  sub_25F70F640();
  if (!v2)
  {
    sub_25F6D6FD4();
    sub_25F70F200();
    uint64_t v8 = sub_25F70F1D0();
    uint64_t v10 = v9;
    uint64_t v11 = sub_25F67D0C4();
    v12(v11);
    *(unsigned char *)a2 = v13;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v10;
  }
  return sub_25F67A28C((uint64_t)a1);
}

unint64_t sub_25F6D6FD4()
{
  unint64_t result = qword_26A7B1940;
  if (!qword_26A7B1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1940);
  }
  return result;
}

uint64_t sub_25F6D7020@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreTip.ConstellationAsset.init(from:)(a1, a2);
}

uint64_t sub_25F6D7038(void *a1)
{
  return CoreTip.ConstellationAsset.encode(to:)(a1);
}

uint64_t CoreTip.ConstellationAsset.AssetType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25F70F160();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t CoreTip.ConstellationAsset.AssetType.rawValue.getter()
{
  if (*v0) {
    return 0x6567616D69;
  }
  else {
    return 0x6C6F626D7973;
  }
}

uint64_t sub_25F6D70E8(char *a1, char *a2)
{
  return sub_25F6CC578(*a1, *a2);
}

unint64_t sub_25F6D70F8()
{
  unint64_t result = qword_26A7B1948;
  if (!qword_26A7B1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1948);
  }
  return result;
}

uint64_t sub_25F6D7144()
{
  return sub_25F6D9FA8();
}

uint64_t sub_25F6D714C()
{
  return sub_25F6DA2B4();
}

uint64_t sub_25F6D7154()
{
  return sub_25F6DA710();
}

uint64_t sub_25F6D715C@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationAsset.AssetType.init(rawValue:)(a1);
}

uint64_t sub_25F6D7168@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.ConstellationAsset.AssetType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6D7190()
{
  return sub_25F70E8D0();
}

uint64_t sub_25F6D71F0()
{
  return sub_25F70E8B0();
}

uint64_t _s18ConstellationAssetVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18ConstellationAssetVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  sub_25F70E570();
  return a1;
}

uint64_t _s18ConstellationAssetVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18ConstellationAssetVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationAsset()
{
  return &type metadata for CoreTip.ConstellationAsset;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationAsset.AssetType()
{
  return &type metadata for CoreTip.ConstellationAsset.AssetType;
}

unsigned char *_s18ConstellationAssetV9AssetTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D73FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18ConstellationAssetV10CodingKeysOMa()
{
  return &_s18ConstellationAssetV10CodingKeysON;
}

unint64_t sub_25F6D7438()
{
  unint64_t result = qword_26A7B1950;
  if (!qword_26A7B1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1950);
  }
  return result;
}

unint64_t sub_25F6D7488()
{
  unint64_t result = qword_26A7B1958;
  if (!qword_26A7B1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1958);
  }
  return result;
}

unint64_t sub_25F6D74D8()
{
  unint64_t result = qword_26A7B1960;
  if (!qword_26A7B1960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1960);
  }
  return result;
}

unint64_t sub_25F6D7524()
{
  unint64_t result = qword_26A7B1968;
  if (!qword_26A7B1968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1968);
  }
  return result;
}

uint64_t CoreTip.ConstellationContent.message.getter()
{
  return sub_25F67E878();
}

uint64_t CoreTip.ConstellationContent.actions.getter()
{
  return sub_25F67E878();
}

uint64_t CoreTip.ConstellationContent.asset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___ConstellationContent_asset + 16);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + OBJC_IVAR___ConstellationContent_asset);
  *(void *)(a1 + 16) = v2;
  return sub_25F70E570();
}

id sub_25F6D75A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = *(void *)(a4 + 16);
  *(void *)&v4[OBJC_IVAR___ConstellationContent_title] = a1;
  *(void *)&v4[OBJC_IVAR___ConstellationContent_message] = a2;
  *(void *)&v4[OBJC_IVAR___ConstellationContent_actions] = a3;
  uint64_t v11 = &v4[OBJC_IVAR___ConstellationContent_asset];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a4;
  *((void *)v11 + 2) = v10;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

id CoreTip.ConstellationContent.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CoreTip.ConstellationContent.init()()
{
}

uint64_t sub_25F6D76BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x736E6F69746361 && a2 == 0xE700000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7465737361 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_25F70F330();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25F6D7874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D76BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D789C(uint64_t a1)
{
  unint64_t v2 = sub_25F66D0A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D78D8(uint64_t a1)
{
  unint64_t v2 = sub_25F66D0A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

id CoreTip.ConstellationContent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t CoreTip.ConstellationContent.Attributes.glyph.getter()
{
  return sub_25F674DF8();
}

uint64_t CoreTip.ConstellationContent.Attributes.alt.getter()
{
  return sub_25F674DF8();
}

uint64_t CoreTip.ConstellationContent.Attributes.stringId.getter()
{
  return sub_25F674DF8();
}

uint64_t CoreTip.ConstellationContent.Attributes.providerId.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t CoreTip.ConstellationContent.Attributes.personalizationId.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t CoreTip.ConstellationContent.Attributes.href.getter()
{
  return sub_25F674DF8();
}

uint64_t CoreTip.ConstellationContent.Attributes.color.getter()
{
  return sub_25F674DF8();
}

uint64_t sub_25F6D7A40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6870796C67 && a2 == 0xE500000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7629921 && a2 == 0xE300000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6449676E69727473 && a2 == 0xE800000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x72656469766F7270 && a2 == 0xEA00000000006449;
        if (v8 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x800000025F719F10 || (sub_25F70F330() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 1717924456 && a2 == 0xE400000000000000;
          if (v9 || (sub_25F70F330() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = sub_25F70F330();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_25F6D7D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D7A40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D7D2C(uint64_t a1)
{
  unint64_t v2 = sub_25F66AECC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D7D68(uint64_t a1)
{
  unint64_t v2 = sub_25F66AECC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreTip.ConstellationContent.Color.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25F70F160();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 15;
  if (v2 < 0xF) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t CoreTip.ConstellationContent.Color.rawValue.getter()
{
  unint64_t result = 0x6F43746E65636361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      unint64_t result = 0x6C426D6574737973;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x79436D6574737973;
      break;
    case 5:
      unint64_t result = 0x72476D6574737973;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
    case 9:
    case 0xB:
    case 0xE:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x694D6D6574737973;
      break;
    case 0xA:
      unint64_t result = 0x69506D6574737973;
      break;
    case 0xC:
      unint64_t result = 0x65526D6574737973;
      break;
    case 0xD:
      unint64_t result = 0x65546D6574737973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6D8028(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25F6CC560(*a1, *a2);
}

unint64_t sub_25F6D8038()
{
  unint64_t result = qword_26A7B1990;
  if (!qword_26A7B1990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1990);
  }
  return result;
}

uint64_t sub_25F6D8084()
{
  return sub_25F6D9FB4();
}

uint64_t sub_25F6D808C()
{
  return sub_25F6DA268();
}

uint64_t sub_25F6D8094()
{
  return sub_25F6DA788();
}

uint64_t sub_25F6D809C@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationContent.Color.init(rawValue:)(a1);
}

unint64_t sub_25F6D80A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CoreTip.ConstellationContent.Color.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for CoreTip.ConstellationContent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreTip.ConstellationContent);
}

uint64_t dispatch thunk of CoreTip.ConstellationContent.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t _s20ConstellationContentC10AttributesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20ConstellationContentC10AttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationContent.Attributes()
{
  return &type metadata for CoreTip.ConstellationContent.Attributes;
}

uint64_t _s20ConstellationContentC5ColorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s20ConstellationContentC5ColorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D83FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.ConstellationContent.Color()
{
  return &type metadata for CoreTip.ConstellationContent.Color;
}

unint64_t sub_25F6D8488()
{
  unint64_t result = qword_26A7B1998;
  if (!qword_26A7B1998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1998);
  }
  return result;
}

unint64_t sub_25F6D84D8()
{
  unint64_t result = qword_26A7B19A0;
  if (!qword_26A7B19A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B19A0);
  }
  return result;
}

uint64_t CoreTip.ConstellationText.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25F70E570();
  return v1;
}

uint64_t CoreTip.ConstellationText.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F67E880(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], a1);
}

uint64_t CoreTip.ConstellationText.marks.getter()
{
  return sub_25F70E570();
}

uint64_t sub_25F6D859C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1954047348 && a2 == 0xE400000000000000;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7372747461 && a2 == 0xE500000000000000;
      if (v7 || (sub_25F70F330() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736B72616DLL && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_25F70F330();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25F6D8734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6D859C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6D875C(uint64_t a1)
{
  unint64_t v2 = sub_25F67724C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D8798(uint64_t a1)
{
  unint64_t v2 = sub_25F67724C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6D87E4(char *a1, char *a2)
{
  return sub_25F6CC694(*a1, *a2);
}

uint64_t sub_25F6D87F0()
{
  return sub_25F6D9FE8();
}

uint64_t sub_25F6D87F8(uint64_t a1)
{
  return sub_25F6DA380(a1, *v1);
}

uint64_t sub_25F6D8800()
{
  return sub_25F6DA67C();
}

uint64_t CoreTip.ConstellationText.Mark.attrs.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F67E880(v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t CoreTip.ConstellationText.Mark.MarkType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25F70F160();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t CoreTip.ConstellationText.Mark.MarkType.rawValue.getter()
{
  if (*v0) {
    return 0x6F43746E65636361;
  }
  else {
    return 97;
  }
}

uint64_t sub_25F6D88E4(char *a1, char *a2)
{
  return sub_25F6CC604(*a1, *a2);
}

uint64_t sub_25F6D88F0()
{
  return sub_25F6DA040();
}

uint64_t sub_25F6D88F8()
{
  return sub_25F6DA318();
}

uint64_t sub_25F6D8900()
{
  return sub_25F6DA694();
}

uint64_t sub_25F6D8908@<X0>(char *a1@<X8>)
{
  return CoreTip.ConstellationText.Mark.MarkType.init(rawValue:)(a1);
}

uint64_t sub_25F6D8914@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.ConstellationText.Mark.MarkType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25F6D893C()
{
  return sub_25F70E8D0();
}

uint64_t sub_25F6D899C()
{
  return sub_25F70E8B0();
}

uint64_t sub_25F6D89EC(uint64_t a1)
{
  unint64_t v2 = sub_25F6D8BD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6D8A28(uint64_t a1)
{
  unint64_t v2 = sub_25F6D8BD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void CoreTip.ConstellationText.Mark.encode(to:)()
{
  sub_25F672A18();
  uint64_t v3 = v2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39C120);
  sub_25F67CA24();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7, v8);
  sub_25F675B10();
  sub_25F67CC78();
  sub_25F67A2DC(v3, v3[3]);
  sub_25F6D8BD0();
  sub_25F70F660();
  sub_25F6D8C1C();
  sub_25F67E45C();
  if (!v0)
  {
    sub_25F679EDC();
    sub_25F674E04();
    sub_25F675EAC();
    sub_25F677588();
    sub_25F67E45C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_25F675E04();
}

unint64_t sub_25F6D8BD0()
{
  unint64_t result = qword_26B39C248;
  if (!qword_26B39C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C248);
  }
  return result;
}

unint64_t sub_25F6D8C1C()
{
  unint64_t result = qword_26B39C118;
  if (!qword_26B39C118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C118);
  }
  return result;
}

void CoreTip.ConstellationText.Mark.init(from:)()
{
  sub_25F672A18();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_25F67ACD8(&qword_26B39C260);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F67A2DC(v2, v2[3]);
  sub_25F6D8BD0();
  sub_25F70F640();
  if (!v0)
  {
    sub_25F6D8DD8();
    sub_25F675BD0();
    sub_25F677298();
    sub_25F675BD0();
    uint64_t v7 = sub_25F6759F8();
    v8(v7);
    *(unsigned char *)uint64_t v4 = v9;
    *(_OWORD *)(v4 + 8) = v9;
    *(_OWORD *)(v4 + 24) = v10;
    *(_OWORD *)(v4 + 40) = v11;
    *(_OWORD *)(v4 + 56) = v12;
    *(_OWORD *)(v4 + 72) = v13;
    *(_OWORD *)(v4 + 88) = v14;
    *(_OWORD *)(v4 + 104) = v15;
  }
  sub_25F67A28C((uint64_t)v2);
  sub_25F675E04();
}

unint64_t sub_25F6D8DD8()
{
  unint64_t result = qword_26B39C240;
  if (!qword_26B39C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C240);
  }
  return result;
}

unint64_t sub_25F6D8E28()
{
  unint64_t result = qword_26A7B19A8;
  if (!qword_26A7B19A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B19A8);
  }
  return result;
}

unint64_t sub_25F6D8E78()
{
  unint64_t result = qword_26A7B19B0;
  if (!qword_26A7B19B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B19B0);
  }
  return result;
}

void sub_25F6D8EC4()
{
}

void sub_25F6D8EDC()
{
}

uint64_t _s17ConstellationTextVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) != 1)
  {
    if (v4 != 1)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 72) = v7;
      uint64_t v8 = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 88) = v8;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_25F6ABC8C(a1 + 24);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
LABEL_8:
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17ConstellationTextVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) != 1)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    if (v5 != 1)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v8 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_25F6ABC8C(a1 + 24);
  }
  memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x70uLL);
LABEL_6:
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17ConstellationTextVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ConstellationTextVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.ContentType()
{
}

uint64_t _s17ConstellationTextV4MarkVwxx(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17ConstellationTextV4MarkVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4 == 1)
  {
    memcpy(v3, (const void *)(a2 + 8), 0x70uLL);
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v7 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v7;
    uint64_t v8 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v8;
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
    sub_25F70E570();
  }
  return a1;
}

uint64_t _s17ConstellationTextV4MarkVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v5 = (const void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) != 1)
  {
    if (v6 != 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 56) = v9;
      uint64_t v10 = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 72) = v10;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      sub_25F70E570();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C(a1 + 8);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy(v4, v5, 0x70uLL);
    return a1;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  return a1;
}

void *_s17ConstellationTextV4MarkVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t _s17ConstellationTextV4MarkVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v3 = (void *)(a1 + 8);
  uint64_t v4 = (const void *)(a2 + 8);
  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6 != 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_25F6ABC8C((uint64_t)v3);
  }
  memcpy(v3, v4, 0x70uLL);
  return a1;
}

uint64_t _s17ConstellationTextV4MarkVwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 120))
    {
      int v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v4 = v3 - 1;
      if (v4 < 0) {
        int v4 = -1;
      }
      BOOL v5 = __OFSUB__(v4, 1);
      int v2 = v4 - 1;
      if (v2 < 0 != v5) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ConstellationTextV4MarkVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for CoreTip.ConstellationText.Mark.MarkType()
{
}

unsigned char *_s17ConstellationTextV4MarkV8MarkTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D9874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17ConstellationTextV4MarkV10CodingKeysOMa()
{
  return &_s17ConstellationTextV4MarkV10CodingKeysON;
}

unint64_t sub_25F6D98D8()
{
  unint64_t result = qword_26A7B19B8;
  if (!qword_26A7B19B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B19B8);
  }
  return result;
}

unint64_t sub_25F6D9928()
{
  unint64_t result = qword_26A7B19C0;
  if (!qword_26A7B19C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B19C0);
  }
  return result;
}

unint64_t sub_25F6D9978()
{
  unint64_t result = qword_26B39C258;
  if (!qword_26B39C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C258);
  }
  return result;
}

unint64_t sub_25F6D99C8()
{
  unint64_t result = qword_26B39C250;
  if (!qword_26B39C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C250);
  }
  return result;
}

unint64_t sub_25F6D9A14()
{
  unint64_t result = qword_26B39C238;
  if (!qword_26B39C238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39C238);
  }
  return result;
}

uint64_t _s19IneligibilityReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE7)
  {
    if (a2 + 25 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 25) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 26;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v5 = v6 - 26;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s19IneligibilityReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6D9BB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

unint64_t sub_25F6D9BDC(char a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6669636570736E75;
      break;
    case 2:
      unint64_t result = 0x4470704173706974;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    case 9:
      unint64_t result = 0x657373696D736964;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
    case 15:
    case 16:
    case 19:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0x77656E4B72657375;
      break;
    case 13:
      unint64_t result = 0xD000000000000016;
      break;
    case 14:
      unint64_t result = 0xD000000000000014;
      break;
    case 17:
      unint64_t result = 0x64657269707865;
      break;
    case 18:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 20:
      unint64_t result = 0xD000000000000019;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0x746E756F63;
      break;
    case 24:
      unint64_t result = 0x694479636167656CLL;
      break;
    case 25:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25F6D9EE0()
{
  return sub_25F6D9F28();
}

uint64_t sub_25F6D9EF8()
{
  return sub_25F6DA000();
}

uint64_t sub_25F6D9F10()
{
  return sub_25F6D9F28();
}

uint64_t sub_25F6D9F28()
{
  sub_25F67E480();
  v0(v1);
  sub_25F67CCFC();
  swift_bridgeObjectRelease();
  return sub_25F70F620();
}

uint64_t sub_25F6D9F74()
{
  return sub_25F6DA7A0();
}

uint64_t sub_25F6D9FA8()
{
  return sub_25F6DA710();
}

uint64_t sub_25F6D9FB4()
{
  return sub_25F6DA7A0();
}

uint64_t sub_25F6D9FE8()
{
  return sub_25F6DA000();
}

uint64_t sub_25F6DA000()
{
  sub_25F67E480();
  v0(v3, v1);
  return sub_25F70F620();
}

uint64_t sub_25F6DA040()
{
  return sub_25F6DA694();
}

uint64_t sub_25F6DA04C()
{
  return sub_25F6DA5F4();
}

uint64_t sub_25F6DA058(uint64_t a1, char a2)
{
  sub_25F6A31E0(a2);
  sub_25F67D0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA098(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_25F67E118();
      break;
    default:
      break;
  }
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA1B4()
{
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA268()
{
  CoreTip.ConstellationContent.Color.rawValue.getter();
  sub_25F67D0D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA2B4()
{
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA318()
{
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA380(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_25F67E118();
      break;
    default:
      break;
  }
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA428()
{
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA49C()
{
  sub_25F70E740();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6DA5DC()
{
  return sub_25F6DA7A0();
}

uint64_t sub_25F6DA5F4()
{
  return sub_25F70F620();
}

uint64_t sub_25F6DA67C()
{
  return sub_25F6DA848();
}

uint64_t sub_25F6DA694()
{
  return sub_25F70F620();
}

uint64_t sub_25F6DA710()
{
  return sub_25F70F620();
}

uint64_t sub_25F6DA788()
{
  return sub_25F6DA7A0();
}

uint64_t sub_25F6DA7A0()
{
  uint64_t v1 = sub_25F67E8B8();
  v0(v1);
  sub_25F67CCFC();
  swift_bridgeObjectRelease();
  return sub_25F70F620();
}

uint64_t sub_25F6DA7EC()
{
  return sub_25F70F620();
}

uint64_t sub_25F6DA830()
{
  return sub_25F6DA848();
}

uint64_t sub_25F6DA848()
{
  sub_25F67E8B8();
  v0(v3, v1);
  return sub_25F70F620();
}

uint64_t sub_25F6DA888()
{
  return sub_25F6DA8B8();
}

uint64_t sub_25F6DA8A0()
{
  return sub_25F6DA8B8();
}

uint64_t sub_25F6DA8B8()
{
  sub_25F67E8B8();
  v0(v1);
  sub_25F67CCFC();
  swift_bridgeObjectRelease();
  return sub_25F70F620();
}

uint64_t sub_25F6DA900()
{
  uint64_t v1 = (uint64_t)(v0 + 4);
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  sub_25F67A2DC(v0 + 4, v2);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v3 + 72))(v7, v2, v3);
  int v4 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    swift_unownedRetainStrong();
    swift_retain();
    swift_release();
    sub_25F67B010(v1, (uint64_t)v7);
    uint64_t v6 = swift_allocObject();
    sub_25F675D18(v7, v6 + 16);
    sub_25F68EF7C((uint64_t)&unk_26A7B19D8, v6);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_25F6DAA04(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_25F6DAA24, 0, 0);
}

uint64_t sub_25F6DAA24()
{
  uint64_t v1 = (void *)v0[7];
  type metadata accessor for CoreTipRecord();
  uint64_t v2 = v1[4];
  long long v15 = v1;
  sub_25F67A2DC(v1, v1[3]);
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 32);
  uint64_t v4 = sub_25F675BF8();
  v3(v4);
  sub_25F6E6BE8();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v9 = v0[6];
    uint64_t v10 = v15[3];
    uint64_t v11 = v15[4];
    long long v12 = sub_25F67A2DC((void *)v0[7], v10);
    sub_25F687FD8(0, (uint64_t)v12, v9, v10, v11);
    sub_25F67A2DC((void *)v0[7], v15[3]);
    sub_25F6EC2E0();
    swift_release();
  }
  else
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for logger();
    sub_25F67F3A4(v13, (uint64_t)qword_26B39D818);
    sub_25F70EEC0();
    sub_25F70E790();
    uint64_t v14 = sub_25F675BF8();
    v3(v14);
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    sub_25F68C2F0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
  }
  BOOL v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

unint64_t sub_25F6DAD3C(unint64_t result)
{
  if (result >= 0x1A) {
    return 26;
  }
  return result;
}

uint64_t sub_25F6DAD4C(uint64_t result)
{
  return result;
}

uint64_t sub_25F6DAD54()
{
  return sub_25F6DA7EC();
}

unint64_t sub_25F6DAD70@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_25F6DAD3C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_25F6DAD9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6DAD4C(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_25F6DADCC()
{
  unint64_t result = qword_26A7B19C8;
  if (!qword_26A7B19C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B19C8);
  }
  return result;
}

uint64_t sub_25F6DAE18()
{
  return sub_25F70E8E0();
}

uint64_t sub_25F6DAE78()
{
  return sub_25F70E8C0();
}

unint64_t sub_25F6DAEC8()
{
  unint64_t result = qword_26B39CD30;
  if (!qword_26B39CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD30);
  }
  return result;
}

uint64_t sub_25F6DAF14()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25F6DAF4C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25F695570;
  return sub_25F6DAA04(a1, v1 + 16);
}

void CoreTip.viewDidAppear(date:)()
{
  sub_25F6784CC();
  uint64_t v2 = v0;
  sub_25F67E4A0();
  uint64_t v3 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  sub_25F67A2DC(v0 + 4, v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 72))(&v22, v10, v11);
  char v12 = v24;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    static CoreTip.setLastTipDisplayed(id:date:)(v2[2], v2[3], v1);
  }
  CoreTip.status.getter(&v22);
  if (v22 != 1)
  {
    if (qword_26B39C298 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for logger();
    sub_25F67F3A4(v13, (uint64_t)qword_26B39C280);
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_25F70EEC0();
    sub_25F67D0FC();
    sub_25F70E570();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    CoreTip.status.getter(&v21);
    v20[6] = v21;
    CoreTip.Status.description.getter();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F68C2F0(v22, v23);
    swift_bridgeObjectRelease();
  }
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  uint64_t v15 = v2[2];
  uint64_t v14 = v2[3];
  uint64_t v16 = sub_25F679EF0();
  v17(v16);
  unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  *(void *)(v19 + 24) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_25F70E570();
  sub_25F68EF7C((uint64_t)&unk_26A7B19E8, v19);
  swift_release();
  swift_release();
  sub_25F67865C();
}

uint64_t sub_25F6DB27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  return MEMORY[0x270FA2498](sub_25F6DB2A0, 0, 0);
}

uint64_t sub_25F6DB2A0()
{
  uint64_t v1 = (void *)v0[8];
  type metadata accessor for CoreTipRecord();
  sub_25F677F4C();
  if (v1)
  {
    if (qword_26A7B1128 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for logger();
    sub_25F67F3A4(v2, (uint64_t)qword_26A7B1BC8);
    sub_25F67D724();
    sub_25F70EEC0();
    sub_25F67D0FC();
    sub_25F67D920();
    sub_25F67D45C();
    sub_25F70E790();
    sub_25F67B290();
    uint64_t v3 = sub_25F70F2F0();
    sub_25F674FF4(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F6EBA50(v0[7], v0[8], v0[9], v0[6]);
    if (sub_25F70E0B0()) {
      sub_25F70E100();
    }
  }
  sub_25F6759EC();
  return v11();
}

Swift::Void __swiftcall CoreTip.viewDidDisappear(viewDisplayDuration:)(Swift::Double_optional viewDisplayDuration)
{
  void (*v9)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  long long v11;
  long long v12;
  _OWORD v13[2];
  uint64_t vars8;

  char v3 = v1;
  uint64_t v4 = *(void *)&viewDisplayDuration.is_nil;
  if ((v1 & 1) == 0)
  {
    CoreTip.displayDuration.getter();
    sub_25F6D5808();
  }
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  uint64_t v6 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  sub_25F67A2DC(v2 + 4, v7);
  uint64_t v9 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 72);
  sub_25F70E570();
  v9(&v12, v7, v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v5;
  *(void *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 40) = v3 & 1;
  uint64_t v11 = v13[0];
  *(_OWORD *)(v10 + 48) = v12;
  *(_OWORD *)(v10 + 64) = v11;
  *(_OWORD *)(v10 + 77) = *(_OWORD *)((char *)v13 + 13);
  sub_25F68EF7C((uint64_t)&unk_26A7B19F8, v10);
  swift_release();
  swift_release();
}

uint64_t sub_25F6DB53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = a6;
  *(unsigned char *)(v6 + 88) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 48) = a1;
  return MEMORY[0x270FA2498](sub_25F6DB568, 0, 0);
}

uint64_t sub_25F6DB568()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 48);
  int v6 = *(unsigned char *)(v0 + 88) & 1;
  type metadata accessor for CoreTipRecord();
  sub_25F6E7A3C(v4, v3, v1, v6, *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), v5);
  if (sub_25F70E0B0()) {
    sub_25F70E100();
  }
  sub_25F6759EC();
  return v7();
}

void sub_25F6DB6EC()
{
  void (*v28)(long long *__return_ptr, uint64_t, uint64_t);
  void (**v29)(unint64_t, char *, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  unint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  long long v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  long long v40;
  unsigned char v41[29];

  sub_25F6784CC();
  uint64_t v2 = v0;
  sub_25F67E4A0();
  uint64_t v3 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v8, v9);
  uint64_t v10 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F679318();
  if (qword_26B39E3E8)
  {
    uint64_t v11 = qword_26B39E3E0;
    unint64_t v12 = qword_26B39E3E8;
  }
  else
  {
    uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v11 = qword_26B3A3078;
      unint64_t v12 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v13 = sub_25F6A3C40();
      if (v14) {
        uint64_t v11 = v13;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v14) {
        unint64_t v12 = v14;
      }
      else {
        unint64_t v12 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
    uint64_t v10 = v39;
  }
  if (v11 == 0x6C7070612E6D6F63 && v12 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_25F70F330();
    sub_25F70E570();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (qword_26B39E320 != -1) {
        swift_once();
      }
      if (byte_26B39E318 == 1)
      {
        if (qword_26B39D588 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_25F67ACD8(&qword_26B39D590);
        uint64_t v18 = sub_25F67F3A4(v17, (uint64_t)qword_26B3A3028);
        swift_beginAccess();
        uint64_t v19 = type metadata accessor for DeviceProfile();
        if (!sub_25F67D9DC(v18, 1, v19) && *(unsigned char *)(v18 + 2) == 2)
        {
          uint64_t v39 = v5;
          uint64_t v20 = v2 + 4;
          sub_25F67A2DC(v2 + 4, v2[7]);
          uint64_t v21 = sub_25F682D84();
          v22(v21);
          char v23 = v41[2];
          swift_bridgeObjectRelease();
          if ((v23 & 1) == 0) {
            static CoreTip.setLastTipDisplayed(id:date:)(v2[2], v2[3], v1);
          }
          uint64_t v24 = v2[17];
          swift_unownedRetainStrong();
          uint64_t v38 = *(void *)(v24 + 64);
          swift_retain();
          swift_release();
          uint64_t v25 = v2[3];
          uint64_t v37 = v2[2];
          uint64_t v27 = v2[7];
          uint64_t v26 = v2[8];
          sub_25F67A2DC(v20, v27);
          uint64_t v28 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 72);
          sub_25F70E570();
          v28(&v40, v27, v26);
          uint64_t v29 = (void (**)(unint64_t, char *, uint64_t))v39;
          long long v30 = sub_25F679EF0();
          v31(v30);
          uint64_t v32 = (*((unsigned __int8 *)v29 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v29 + 80);
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v37;
          *(void *)(v33 + 24) = v25;
          v29[4](v33 + v32, v10, v3);
          uint64_t v34 = (_OWORD *)(v33 + ((v7 + v32 + 7) & 0xFFFFFFFFFFFFFFF8));
          uint64_t v35 = *(_OWORD *)v41;
          *uint64_t v34 = v40;
          v34[1] = v35;
          *(_OWORD *)((char *)v34 + 29) = *(_OWORD *)&v41[13];
          sub_25F68EF7C((uint64_t)&unk_26A7B1A30, v33);
          swift_release();
          swift_release();
        }
      }
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F6DBB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  unsigned char v5[8] = a3;
  v5[6] = a1;
  return MEMORY[0x270FA2498](sub_25F6DBB48, 0, 0);
}

uint64_t sub_25F6DBB48()
{
  uint64_t v1 = (void *)v0[8];
  type metadata accessor for CoreTipRecord();
  sub_25F677F4C();
  if (v1)
  {
    if (qword_26B39C298 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for logger();
    sub_25F67F3A4(v2, (uint64_t)qword_26B39C280);
    sub_25F67D724();
    sub_25F70EEC0();
    sub_25F67D0FC();
    sub_25F67D920();
    sub_25F67D45C();
    sub_25F70E790();
    sub_25F67B290();
    uint64_t v3 = sub_25F70F2F0();
    sub_25F674FF4(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_25F6EBA50(v0[7], v0[8], v0[9], v0[6]);
    sub_25F6E7A3C(v0[7], v0[8], 0, 1, *(void *)(v0[10] + 32), *(unsigned __int8 *)(v0[10] + 40), v0[6]);
    if (sub_25F70E0B0()) {
      sub_25F70E100();
    }
  }
  sub_25F6759EC();
  return v11();
}

void CoreTip.actionButtonTapped(actionID:linkURL:)()
{
  sub_25F6784CC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_25F67ACD8(&qword_26B39E248);
  uint64_t v8 = sub_25F6768F0(v7);
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v8, v13);
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F679318();
  if (byte_26B39E3F1 == 1)
  {
    sub_25F67A2DC(v0 + 4, v0[7]);
    uint64_t v14 = sub_25F682D84();
    v15(v14);
    swift_bridgeObjectRelease();
    if (v20[51] == 1)
    {
      swift_unownedRetainStrong();
      swift_retain();
      swift_release();
      uint64_t v17 = v0[2];
      uint64_t v16 = v0[3];
      sub_25F65A184(v2, (uint64_t)&v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)]);
      unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v19 = (void *)swift_allocObject();
      void v19[2] = v17;
      _OWORD v19[3] = v16;
      void v19[4] = v6;
      v19[5] = v4;
      sub_25F66C1F4((uint64_t)&v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v19 + v18);
      sub_25F70E570();
      sub_25F70E570();
      sub_25F68EF7C((uint64_t)&unk_26A7B1A08, (uint64_t)v19);
      swift_release();
      swift_release();
    }
  }
  sub_25F67865C();
}

uint64_t sub_25F6DBE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  uint64_t v6[4] = a3;
  v6[5] = a4;
  void v6[2] = a1;
  uint64_t v6[3] = a2;
  sub_25F67ACD8(&qword_26B39DF68);
  v6[8] = swift_task_alloc();
  v6[9] = swift_task_alloc();
  uint64_t v7 = sub_25F70E3C0();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  _WORD v6[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6DBF90, 0, 0);
}

uint64_t sub_25F6DBF90()
{
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  swift_retain();
  sub_25F70E570();
  sub_25F68EF08();
  swift_release();
  swift_bridgeObjectRelease();
  if (sub_25F67D9DC(v2, 1, v1) == 1)
  {
    sub_25F67EFC0(v0[9], &qword_26B39DF68);
LABEL_10:
    if (qword_26B39C298 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for logger();
    sub_25F67F3A4(v12, (uint64_t)qword_26B39C280);
    sub_25F6857F8();
    sub_25F70EEC0();
    sub_25F67D0FC();
    sub_25F70E790();
    sub_25F70E790();
    sub_25F68C2F0(v15, v16);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_25F676464();
  v5(v4);
  uint64_t v6 = sub_25F679628();
  v7(v6);
  sub_25F68C65C();
  sub_25F66EF7C();
  uint64_t v9 = v8;
  sub_25F67EFC0(v3, &qword_26B39DF68);
  if (!v9)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[11] + 8))(v0[12], v0[10]);
    goto LABEL_10;
  }
  if (sub_25F68AFBC()) {
    sub_25F6A2738(v9, v0[5], v0[6], v0[7]);
  }
  swift_release();
  uint64_t v10 = sub_25F6785C0();
  v11(v10);
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F6759EC();
  return v13();
}

Swift::Void __swiftcall CoreTip.tipViewTapped()()
{
  uint64_t v1 = v0;
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  sub_25F679318();
  if (byte_26B39E3F1 == 1)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = v0[8];
    sub_25F67A2DC(v0 + 4, v2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 72))(&v8, v2, v3);
    int v4 = v9;
    swift_bridgeObjectRelease();
    if (v4 == 1)
    {
      swift_unownedRetainStrong();
      swift_retain();
      swift_release();
      uint64_t v6 = v1[2];
      uint64_t v5 = v1[3];
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = v5;
      sub_25F70E570();
      sub_25F68EF7C((uint64_t)&unk_26A7B1A18, v7);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_25F6DC324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  sub_25F67ACD8(&qword_26B39DF68);
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  uint64_t v4 = sub_25F70E3C0();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6DC428, 0, 0);
}

uint64_t sub_25F6DC428()
{
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  swift_retain();
  sub_25F70E570();
  sub_25F68EF08();
  swift_release();
  swift_bridgeObjectRelease();
  if (sub_25F67D9DC(v2, 1, v1) == 1)
  {
    sub_25F67EFC0(v0[6], &qword_26B39DF68);
LABEL_10:
    if (qword_26B39C298 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for logger();
    sub_25F67F3A4(v12, (uint64_t)qword_26B39C280);
    sub_25F6857F8();
    sub_25F70EEC0();
    sub_25F67D0FC();
    sub_25F70E790();
    sub_25F70E790();
    sub_25F68C2F0(v15, v16);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_25F676464();
  v5(v4);
  uint64_t v6 = sub_25F679628();
  v7(v6);
  sub_25F68C65C();
  sub_25F66EF7C();
  uint64_t v9 = v8;
  sub_25F67EFC0(v3, &qword_26B39DF68);
  if (!v9)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    goto LABEL_10;
  }
  if (sub_25F68AFBC()) {
    sub_25F6A2920(v9);
  }
  swift_release();
  uint64_t v10 = sub_25F6785C0();
  v11(v10);
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_25F6759EC();
  return v13();
}

Swift::Void __swiftcall CoreTip.hide()()
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F672C48();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
  {
    sub_25F678674();
    swift_task_reportUnexpectedExecutor();
  }
  sub_25F66FEB4(v1);
  if (LOBYTE(v1[0]) != 2)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for logger();
    sub_25F67F3A4(v0, (uint64_t)qword_26B39D818);
    sub_25F70EA60();
    sub_25F672C48();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
    {
      sub_25F678674();
      swift_task_reportUnexpectedExecutor();
    }
    sub_25F67D724();
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    sub_25F676700();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F67D45C();
    sub_25F70E790();
    swift_release();
    sub_25F68C2F0(v1[0], v1[1]);
    swift_bridgeObjectRelease();
    LOBYTE(v1[0]) = 2;
    sub_25F6D5860();
    sub_25F6DC844();
  }
  swift_release();
}

uint64_t sub_25F6DC844()
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (qword_26B39E3E8)
  {
    uint64_t v0 = qword_26B39E3E0;
    unint64_t v1 = qword_26B39E3E8;
  }
  else
  {
    if (qword_26B39E430 != -1) {
      swift_once();
    }
    if (qword_26B3A3080)
    {
      uint64_t v0 = qword_26B3A3078;
      unint64_t v1 = qword_26B3A3080;
    }
    else
    {
      type metadata accessor for CFBundle(0);
      uint64_t v2 = sub_25F6A3C40();
      if (v3)
      {
        uint64_t v0 = v2;
        unint64_t v1 = v3;
      }
      else
      {
        uint64_t v0 = 0;
        unint64_t v1 = 0xE000000000000000;
      }
    }
    sub_25F70E570();
  }
  if (v0 == 0x6C7070612E6D6F63 && v1 == 0xEF64737069742E65)
  {
    sub_25F70E570();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_25F70F330();
    sub_25F70E570();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      swift_unownedRetainStrong();
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      sub_25F6E2424((void (*)(uint64_t *__return_ptr, uint64_t))sub_25F6DE4A4, v7);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
}

Swift::Void __swiftcall CoreTip.show()()
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F672C48();
  if ((swift_task_isCurrentExecutor() & 1) == 0)
  {
    sub_25F678674();
    swift_task_reportUnexpectedExecutor();
  }
  sub_25F66FEB4(v1);
  if (LOBYTE(v1[0]) == 2)
  {
    if (qword_26B39D830 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for logger();
    sub_25F67F3A4(v0, (uint64_t)qword_26B39D818);
    sub_25F70EA60();
    sub_25F672C48();
    if ((swift_task_isCurrentExecutor() & 1) == 0)
    {
      sub_25F678674();
      swift_task_reportUnexpectedExecutor();
    }
    sub_25F67D724();
    sub_25F70EEC0();
    swift_bridgeObjectRelease();
    sub_25F676700();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F67D45C();
    sub_25F70E790();
    swift_release();
    sub_25F68C2F0(v1[0], v1[1]);
    swift_bridgeObjectRelease();
    LOBYTE(v1[0]) = 0;
    sub_25F6D5860();
    sub_25F6DC844();
  }
  swift_release();
}

uint64_t sub_25F6DCC8C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v5 = result;
  if (result)
  {
    sub_25F66EC88(a1);
    uint64_t result = swift_release();
  }
  *a2 = v5 == 0;
  return result;
}

void sub_25F6DCD10()
{
  sub_25F6784CC();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39DBA8);
  MEMORY[0x270FA5388](v4 - 8, v5);
  sub_25F6759BC();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = v15 - v14;
  if (!v1) {
    goto LABEL_9;
  }
  if (!*(void *)(v1 + 16)
    || (unint64_t v17 = sub_25F67AD88(0x4449706974, 0xE500000000000000), (v18 & 1) == 0)
    || (sub_25F67AD2C(*(void *)(v1 + 56) + 32 * v17, (uint64_t)v27),
        sub_25F67ACD8(&qword_26B39D878),
        (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v24 = _s12DisplayEventVMa();
    uint64_t v22 = (uint64_t)v3;
    uint64_t v23 = 1;
    goto LABEL_10;
  }
  sub_25F685FA4(0x6579616C70736964, 0xED00006574614464);
  swift_bridgeObjectRelease();
  if (!v27[3])
  {
    sub_25F67EFC0((uint64_t)v27, &qword_26B39D670);
    sub_25F674004(v8, 1, 1, v9);
    goto LABEL_12;
  }
  int v19 = swift_dynamicCast();
  sub_25F674004(v8, v19 ^ 1u, 1, v9);
  if (sub_25F67D9DC(v8, 1, v9) == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_25F67EFC0(v8, &qword_26B39DBA8);
    goto LABEL_9;
  }
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  v20(v16, v8, v9);
  uint64_t v21 = _s12DisplayEventVMa();
  v20((uint64_t)v3 + *(int *)(v21 + 20), v16, v9);
  *unint64_t v3 = v25;
  v3[1] = v26;
  uint64_t v22 = (uint64_t)v3;
  uint64_t v23 = 0;
  uint64_t v24 = v21;
LABEL_10:
  sub_25F674004(v22, v23, 1, v24);
  sub_25F67865C();
}

uint64_t sub_25F6DCF7C(char a1)
{
  if (a1) {
    return 0x6579616C70736964;
  }
  else {
    return 0x4449706974;
  }
}

uint64_t sub_25F6DCFBC()
{
  uint64_t v0 = sub_25F70F160();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25F6DD014(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_25F70F330() & 1) == 0) {
    return 0;
  }
  _s12DisplayEventVMa();
  return sub_25F70DF00();
}

uint64_t sub_25F6DD090(void *a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26A7B0FC8);
  sub_25F67CA24();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6, v7);
  sub_25F6759BC();
  uint64_t v10 = v9 - v8;
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6DE1C4();
  sub_25F70F660();
  sub_25F70F270();
  if (!v1)
  {
    _s12DisplayEventVMa();
    sub_25F70DF30();
    sub_25F6D1C34(&qword_26B39DB00);
    sub_25F70F2A0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t sub_25F6DD204@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v5, v6);
  sub_25F6759BC();
  uint64_t v9 = v8 - v7;
  sub_25F67ACD8(&qword_26B39CDB8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v10, v11);
  sub_25F6759BC();
  uint64_t v12 = _s12DisplayEventVMa();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = (uint64_t *)(v15 - v14);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6DE1C4();
  sub_25F70F640();
  if (v2) {
    return sub_25F67A28C((uint64_t)a1);
  }
  uint64_t *v16 = sub_25F70F1D0();
  v16[1] = v17;
  sub_25F6D1C34(&qword_26B39D3C0);
  sub_25F70F200();
  uint64_t v18 = sub_25F67B150();
  v19(v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))((char *)v16 + *(int *)(v12 + 20), v9, v23);
  sub_25F6DE210((uint64_t)v16, a2);
  sub_25F67A28C((uint64_t)a1);
  return sub_25F6DE274((uint64_t)v16);
}

uint64_t sub_25F6DD470(char *a1, char *a2)
{
  return sub_25F6CC7D4(*a1, *a2);
}

uint64_t sub_25F6DD47C()
{
  return sub_25F6DA04C();
}

uint64_t sub_25F6DD484()
{
  return sub_25F6DA428();
}

uint64_t sub_25F6DD48C()
{
  return sub_25F6DA5F4();
}

uint64_t sub_25F6DD494@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6DCFBC();
  *a1 = result;
  return result;
}

uint64_t sub_25F6DD4C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25F6DCF7C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25F6DD4F0()
{
  return sub_25F6DCF7C(*v0);
}

uint64_t sub_25F6DD4F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6DD010();
  *a1 = result;
  return result;
}

uint64_t sub_25F6DD520(uint64_t a1)
{
  unint64_t v2 = sub_25F6DE1C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6DD55C(uint64_t a1)
{
  unint64_t v2 = sub_25F6DE1C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25F6DD598@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25F6DD204(a1, a2);
}

uint64_t sub_25F6DD5B0(void *a1)
{
  return sub_25F6DD090(a1);
}

unint64_t CoreTip.DisplayState.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 3;
  if (result < 3) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t CoreTip.DisplayState.rawValue.getter()
{
  return *v0;
}

unint64_t sub_25F6DD5E8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CoreTip.DisplayState.init(rawValue:)(*a1, a2);
}

uint64_t sub_25F6DD5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.DisplayState.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6DD618()
{
  sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 32) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_25F672B24();
  v9(v8);
  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_25F6DD6AC(uint64_t a1)
{
  uint64_t v3 = sub_25F70DF30();
  sub_25F675C0C(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_25F674E18(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_25F6DE6B4;
  return sub_25F6DB27C(a1, v5, v6, v7);
}

uint64_t sub_25F6DD770()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 93, 7);
}

uint64_t sub_25F6DD7B0()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_25F674E18(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_25F6DE6B4;
  uint64_t v5 = sub_25F676A2C();
  return sub_25F6DB53C(v5, v6, v7, v8, v1, v0 + 48);
}

uint64_t sub_25F6DD864()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39E248);
  sub_25F6768F0(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_25F70DE50();
  if (!sub_25F67D9DC(v0 + v4, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v4, v7);
  }
  return MEMORY[0x270FA0238](v0, v4 + v6, v3 | 7);
}

uint64_t sub_25F6DD944()
{
  uint64_t v1 = sub_25F67ACD8(&qword_26B39E248);
  sub_25F675C0C(v1);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_25F674E18(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_25F6DE6B4;
  uint64_t v8 = sub_25F676A2C();
  return sub_25F6DBE88(v8, v9, v10, v11, v3, v4);
}

uint64_t sub_25F6DDA10()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25F6DDA48(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_25F674E18(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_25F6DDAEC;
  return sub_25F6DC324(a1, v4, v3);
}

uint64_t sub_25F6DDAEC()
{
  swift_task_dealloc();
  sub_25F6759EC();
  return v0();
}

unint64_t sub_25F6DDBE0()
{
  unint64_t result = qword_26A7B1A20;
  if (!qword_26A7B1A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B1A20);
  }
  return result;
}

unsigned char *_s12DisplayStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6DDCF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t *sub_25F6DDD20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_25F70DF30();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    sub_25F70E570();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_25F6DDE08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_25F70DF30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_25F6DDE80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_25F70DF30();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  sub_25F70E570();
  v9(v6, v7, v8);
  return a1;
}

void *sub_25F6DDF18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25F70E570();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_25F70DF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_25F6DDFB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_25F70DF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_25F6DE030(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_25F70DF30();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_25F6DE0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_25F70DF30();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return sub_25F67D9DC(v9, a2, v8);
  }
}

uint64_t sub_25F6DE144(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_25F70DF30();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return sub_25F674004(v8, a2, a2, v7);
  }
  return result;
}

unint64_t sub_25F6DE1C4()
{
  unint64_t result = qword_26B39CD90;
  if (!qword_26B39CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD90);
  }
  return result;
}

uint64_t sub_25F6DE210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6DE274(uint64_t a1)
{
  uint64_t v2 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F6DE2D0()
{
  sub_25F70DF30();
  sub_25F67CA24();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 45;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_25F672B24();
  v9(v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_25F6DE384()
{
  uint64_t v1 = sub_25F70DF30();
  sub_25F6768F0(v1);
  uint64_t v4 = v0
     + ((*(void *)(v3 + 64)
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)sub_25F674E18(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_25F6DE6B4;
  uint64_t v8 = sub_25F676A2C();
  return sub_25F6DBB20(v8, v9, v10, v11, v4);
}

uint64_t sub_25F6DE46C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25F6DE4A4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_25F6DCC8C(a1, a2);
}

unsigned char *_s12DisplayEventV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6DE58CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12DisplayEventV10CodingKeysOMa()
{
  return &_s12DisplayEventV10CodingKeysON;
}

unint64_t sub_25F6DE5C8()
{
  unint64_t result = qword_26A7B1A38;
  if (!qword_26A7B1A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B1A38);
  }
  return result;
}

unint64_t sub_25F6DE618()
{
  unint64_t result = qword_26B39CD40;
  if (!qword_26B39CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD40);
  }
  return result;
}

unint64_t sub_25F6DE668()
{
  unint64_t result = qword_26B39CD98;
  if (!qword_26B39CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B39CD98);
  }
  return result;
}

unint64_t sub_25F6DE6B8(char a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x657373696D736964;
      break;
    case 3:
    case 7:
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_25F6DE7EC(char a1)
{
  return byte_25F71681A[a1];
}

uint64_t CoreTip.InvalidationReason.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_25F6DE808@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = CoreTip.InvalidationReason.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_25F6DE834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CoreTip.InvalidationReason.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_25F6DE860()
{
  return sub_25F70E8E0();
}

uint64_t sub_25F6DE8C0()
{
  return sub_25F70E8C0();
}

uint64_t CoreTip.invalidate(reason:)(char a1)
{
  uint64_t v3 = v1[2];
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[9];
  uint64_t v5 = v1[10];
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  sub_25F70E570();
  int v6 = sub_25F687758(v3, v2, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6 != 4) {
    return sub_25F6DEB04(a1);
  }
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v2;
  *(unsigned char *)(v7 + 32) = a1;
  sub_25F70E570();
  sub_25F68EF7C((uint64_t)&unk_26A7B1A48, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_25F6DEB04(char a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39E2B8);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8, v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xFE) == 2)
  {
    uint64_t v8 = sub_25F70EA90();
    sub_25F674004((uint64_t)v7, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    _OWORD v9[2] = 0;
    long long v9[3] = 0;
    id v9[4] = v1;
    swift_retain();
    sub_25F6559D4((uint64_t)v7, (uint64_t)&unk_26A7B1A90, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_25F6DEBEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 72) = a4;
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 48) = a1;
  return MEMORY[0x270FA2498](sub_25F6DEC14, 0, 0);
}

uint64_t sub_25F6DEC14()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  int v3 = *(unsigned __int8 *)(v0 + 72);
  type metadata accessor for CoreTipRecord();
  sub_25F6E9A8C(v1, v2, v3);
  sub_25F6759EC();
  return v4();
}

uint64_t sub_25F6DED9C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_25F6DEDD4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_25F674E18(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25F657548;
  return sub_25F6DEBEC(a1, v3, v4, v5);
}

uint64_t sub_25F6DEE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[2] = a4;
  uint64_t v5 = sub_25F70F050();
  v4[3] = v5;
  void v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6DEF40, 0, 0);
}

uint64_t sub_25F6DEF40()
{
  sub_25F672A80();
  if (qword_26B39D830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for logger();
  v0[6] = sub_25F67F3A4(v2, (uint64_t)qword_26B39D818);
  sub_25F70EEC0();
  sub_25F67D0FC();
  v0[7] = *(void *)(v1 + 16);
  v0[8] = *(void *)(v1 + 24);
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F68C2F0(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  v0[9] = sub_25F70EA70();
  v0[10] = sub_25F70EA60();
  uint64_t v4 = sub_25F70EA30();
  return MEMORY[0x270FA2498](sub_25F6DF0C0, v4, v3);
}

uint64_t sub_25F6DF0C0()
{
  sub_25F6759E0();
  swift_release();
  CoreTip.hide()();
  return MEMORY[0x270FA2498](sub_25F6DF12C, 0, 0);
}

uint64_t sub_25F6DF12C()
{
  sub_25F6759E0();
  sub_25F70F040();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_26A7B1DC8 + dword_26A7B1DC8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25F6DF1F0;
  return v3();
}

uint64_t sub_25F6DF1F0()
{
  sub_25F672A80();
  uint64_t v2 = *v1;
  sub_25F675A28();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {

    sub_25F6769DC();
    v4();
    uint64_t v5 = sub_25F6E0598;
  }
  else
  {
    sub_25F6769DC();
    v6();
    uint64_t v5 = sub_25F6DF36C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25F6DF36C()
{
  sub_25F70EEC0();
  sub_25F67D0FC();
  sub_25F70E570();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  sub_25F68C2F0(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 96) = sub_25F70EA60();
  uint64_t v2 = sub_25F70EA30();
  return MEMORY[0x270FA2498](sub_25F6DF488, v2, v1);
}

uint64_t sub_25F6DF488()
{
  sub_25F6759E0();
  swift_release();
  CoreTip.show()();
  swift_task_dealloc();
  sub_25F6759EC();
  return v0();
}

uint64_t static CoreTip.invalidateTip(id:reason:datastore:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a4;
  *(unsigned char *)(v4 + 64) = a3;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25F6DF51C, 0, 0);
}

uint64_t sub_25F6DF51C()
{
  sub_25F672A80();
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 40) = v4;
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v1;
  *(unsigned char *)(v4 + 32) = v2;
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_26A7B16D8 + dword_26A7B16D8);
  sub_25F70E570();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25F6DF620;
  return v7();
}

uint64_t sub_25F6DF620()
{
  sub_25F6759E0();
  sub_25F67CA40();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_25F675A28();
  *uint64_t v5 = v4;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_25F6A8238;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_25F67E324;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_25F6DF70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 96) = a5;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D800);
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  uint64_t v7 = sub_25F67ACD8(&qword_26B39D440);
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = *(void *)(v7 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25F6DF838, 0, 0);
}

uint64_t sub_25F6DF838()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  swift_getKeyPath();
  sub_25F6903C8();
  sub_25F70DB40();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(void *)(v0 + 16) = type metadata accessor for CoreTipRecord();
  sub_25F70DFA0();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v5;
  sub_25F67ACD8(&qword_26B39D658);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25F710D20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v9 + v8, v1, v3);
  sub_25F70692C();
  char v16 = *(unsigned char *)(v0 + 96);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_25F675EC0();
  v11(v10);
  uint64_t v12 = sub_25F677F74();
  v13(v12);
  sub_25F6E9D58(v16);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_25F6DFAAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_25F67ACD8(&qword_26B39D7C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v4, v6);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25F67ACD8(&qword_26B39D7D8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25F67ACD8(&qword_26B39D488);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F681778(&qword_26B39D7D0, &qword_26B39D7D8);
  sub_25F70DD10();
  swift_getKeyPath();
  sub_25F70DBF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_25F70DD00();
  a3[3] = sub_25F67ACD8(&qword_26B39D460);
  a3[4] = sub_25F6623F0();
  sub_25F677CCC(a3);
  sub_25F681778(&qword_26B39D480, &qword_26B39D488);
  sub_25F681778(&qword_26B39D7B8, &qword_26B39D7C0);
  uint64_t v19 = v23;
  sub_25F70DBE0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

void sub_25F6DFDF0()
{
}

Swift::Void __swiftcall CoreTip.reset()()
{
  swift_unownedRetainStrong();
  swift_retain();
  swift_release();
  sub_25F67B010(v0 + 32, (uint64_t)v2);
  uint64_t v1 = swift_allocObject();
  sub_25F675D18(v2, v1 + 16);
  sub_25F68EF7C((uint64_t)&unk_26A7B1A70, v1);
  swift_release();
  swift_release();
}

uint64_t sub_25F6DFEF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_25F6DFF18, 0, 0);
}

uint64_t sub_25F6DFF18()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 56);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = sub_25F67A2DC(v2, v3);
  type metadata accessor for CoreTipRecord();
  sub_25F6EA1C0((uint64_t)v5, v1, v3, v4);
  sub_25F6759EC();
  return v6();
}

uint64_t sub_25F6E00E8()
{
  sub_25F672A80();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  char v7 = *(unsigned char *)(v0 + 32);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)sub_25F674E18(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_25F657548;
  return sub_25F6DF70C(v4, v2, v5, v6, v7);
}

uint64_t sub_25F6E01A4()
{
  sub_25F67A28C(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25F6E01DC()
{
  sub_25F6759E0();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_25F674E18(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_25F691BBC;
  return sub_25F6DFEF8(v2, v0 + 16);
}

unint64_t sub_25F6E0274()
{
  unint64_t result = qword_26A7B1A78;
  if (!qword_26A7B1A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1A78);
  }
  return result;
}

uint64_t _s18InvalidationReasonOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s18InvalidationReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6E0414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

unint64_t sub_25F6E043C()
{
  unint64_t result = qword_26A7B1A80;
  if (!qword_26A7B1A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A7B1A80);
  }
  return result;
}

uint64_t sub_25F6E0490@<X0>(uint64_t *a1@<X8>)
{
  return sub_25F6DFAAC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_25F6E0498()
{
}

uint64_t sub_25F6E04A8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25F6E04E8(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = swift_task_alloc();
  BOOL v7 = (void *)sub_25F674E18(v6);
  *BOOL v7 = v8;
  v7[1] = sub_25F691BBC;
  return sub_25F6DEE80(a1, v3, v4, v5);
}

uint64_t sub_25F6E05A0(uint64_t a1)
{
  sub_25F67ACD8(&qword_26B39C1F0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_25F675D30(a1, v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16), &qword_26B39D3B0);
  sub_25F675D8C(a1, &qword_26B39D3B0);
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_25F6E068C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 16);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_25F6E1064(v2);
  os_unfair_lock_unlock(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E0700(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_25F6E1048(v4);
  os_unfair_lock_unlock(v5);
  swift_bridgeObjectRelease();
  return sub_25F675D8C(a1, &qword_26B39DF68);
}

uint64_t sub_25F6E0780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == 3)
  {
    sub_25F70E570();
    sub_25F6E6484();
  }
  else
  {
    sub_25F70E570();
    sub_25F6E6604(a4, a2, a3, v7, v8, v9, v10, v11, v13, v14);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E080C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_25F67ACD8(&qword_26B39DF68);
  MEMORY[0x270FA5388](v7 - 8, v8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25F675D30(a4, (uint64_t)v10, &qword_26B39DF68);
  sub_25F70E570();
  return sub_25F684DA0((uint64_t)v10, a2, a3);
}

uint64_t static CoreTip.setLastTipDisplayed(id:date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25F67ACD8(&qword_26B39D3B0);
  MEMORY[0x270FA5388](v6 - 8, v7);
  sub_25F6759BC();
  uint64_t v10 = (uint64_t *)(v9 - v8);
  uint64_t v11 = type metadata accessor for DeviceProfile();
  sub_25F674D1C();
  MEMORY[0x270FA5388](v12, v13);
  sub_25F6759BC();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_25F67ACD8(&qword_26B39D590);
  sub_25F674D1C();
  MEMORY[0x270FA5388](v18, v19);
  sub_25F6759BC();
  uint64_t v22 = v21 - v20;
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  uint64_t result = sub_25F67D70C();
  if ((byte_26B39E3F2 & 1) == 0 && !*((void *)off_26B39E3F8 + 2) && (byte_26B39E400 & 1) == 0)
  {
    char v24 = *((void *)off_26B39E408 + 2) ? 1 : word_26B39E410;
    if ((v24 & 1) == 0)
    {
      if (byte_26B39E3F0 == 1)
      {
        if (qword_26B39D588 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_25F67F3A4(v17, (uint64_t)qword_26B3A3028);
        sub_25F67D70C();
        sub_25F675D30(v25, v22, &qword_26B39D590);
        int v26 = sub_25F67D9DC(v22, 1, v11);
        sub_25F675D8C(v22, &qword_26B39D590);
        if (v26 != 1)
        {
          swift_beginAccess();
          if (!sub_25F67D9DC(v25, 1, v11)) {
            sub_25F6ED49C(a1, a2);
          }
          swift_endAccess();
          if (!sub_25F67D9DC(v25, 1, v11))
          {
            sub_25F694524(v25, v16);
            sub_25F6ED7A4();
            sub_25F6E0FA0(v16);
          }
        }
      }
      if (qword_26B39C210 != -1) {
        swift_once();
      }
      uint64_t v27 = _s12DisplayEventVMa();
      uint64_t v28 = (char *)v10 + *(int *)(v27 + 20);
      sub_25F70DF30();
      sub_25F674D1C();
      (*(void (**)(char *, uint64_t))(v29 + 16))(v28, a3);
      *uint64_t v10 = a1;
      v10[1] = a2;
      sub_25F674004((uint64_t)v10, 0, 1, v27);
      swift_retain();
      sub_25F70E570();
      sub_25F6D5378((uint64_t)v10);
      return swift_release();
    }
  }
  return result;
}

uint64_t static CoreTip.tips.setter(uint64_t a1)
{
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26B39DE80 = a1;
  return swift_release();
}

uint64_t (*static CoreTip.tips.modify())()
{
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static CoreTip.modelIdentifiers.getter()
{
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_25F6E0D8C()
{
  uint64_t v0 = sub_25F67ACD8(&qword_26B39D3B0);
  MEMORY[0x270FA5388](v0 - 8, v1);
  sub_25F6759BC();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = _s12DisplayEventVMa();
  sub_25F674004(v4, 1, 1, v5);
  sub_25F67ACD8(&qword_26B39C1D8);
  sub_25F67E12C();
  uint64_t result = sub_25F6E05A0(v4);
  qword_26B3A2FC0 = result;
  return result;
}

uint64_t sub_25F6E0E2C()
{
  if (qword_26B39DE88 != -1) {
    swift_once();
  }
  sub_25F67D70C();
  swift_retain();
  sub_25F6C5DC4();
  swift_release();
  if (qword_26B39D6A8 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F6C5E04();
  swift_release();
  if (qword_26B39DB08 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F6C5E44();
  swift_release();
  if (qword_26B39D9B0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F6C5E84();
  return swift_release();
}

uint64_t sub_25F6E0FA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceProfile();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25F6E0FFC(uint64_t a1, uint64_t *a2, unsigned __int8 *a3)
{
  return sub_25F6E0780(a1, *a2, a2[1], *a3);
}

uint64_t sub_25F6E1024(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_25F6E080C(a1, *a2, a2[1], a3);
}

uint64_t sub_25F6E1048(uint64_t a1)
{
  return sub_25F6E1024(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25F6E1064(uint64_t a1)
{
  return sub_25F6E0FFC(a1, *(uint64_t **)(v1 + 16), *(unsigned __int8 **)(v1 + 24));
}

uint64_t CoreTip.Options.bundleID.getter()
{
  uint64_t v1 = *v0;
  sub_25F70E570();
  return v1;
}

uint64_t CoreTip.Options.cloudSyncEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t CoreTip.Options.hasRandomIdentifier.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t CoreTip.Options.ignoresDisplayFrequency.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t CoreTip.Options.maxDisplayCount.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t CoreTip.Options.maxDisplayDuration.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t CoreTip.Options.updatesFromTipsd.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t CoreTip.Options.usesCoreAnalytics.getter()
{
  return *(unsigned __int8 *)(v0 + 43);
}

uint64_t CoreTip.Options.usesTipRecord.getter()
{
  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t sub_25F6E10F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000025F71A520 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000025F71A540 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000025F71A560 || (sub_25F70F330() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v6 = a1 == 0x6C7073694478616DLL && a2 == 0xEF746E756F437961;
    if (v6 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x800000025F71A580 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000025F7198B0 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000025F71A5A0 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x800000025F71A5C0 || (sub_25F70F330() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else if (a1 == 0x5270695473657375 && a2 == 0xED000064726F6365)
    {
      swift_bridgeObjectRelease();
      return 9;
    }
    else
    {
      char v8 = sub_25F70F330();
      swift_bridgeObjectRelease();
      if (v8) {
        return 9;
      }
      else {
        return 10;
      }
    }
  }
}

uint64_t sub_25F6E1500()
{
  return 10;
}

unint64_t sub_25F6E1508(char a1)
{
  unint64_t result = 0x4449656C646E7562;
  switch(a1)
  {
    case 1:
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6C7073694478616DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x5270695473657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25F6E165C()
{
  return sub_25F6E1508(*v0);
}

uint64_t sub_25F6E1664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6E10F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25F6E168C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25F6E1500();
  *a1 = result;
  return result;
}

uint64_t sub_25F6E16B4(uint64_t a1)
{
  unint64_t v2 = sub_25F6E19AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25F6E16F0(uint64_t a1)
{
  unint64_t v2 = sub_25F6E19AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CoreTip.Options.encode(to:)(void *a1)
{
  sub_25F67ACD8(&qword_26A7B1A98);
  sub_25F67CA24();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5, v6);
  char v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v1 + 16);
  int v22 = *(unsigned __int8 *)(v1 + 17);
  int v23 = v9;
  int v21 = *(unsigned __int8 *)(v1 + 18);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  int v19 = *(unsigned __int8 *)(v1 + 40);
  int v10 = *(unsigned __int8 *)(v1 + 41);
  v17[4] = *(unsigned __int8 *)(v1 + 42);
  v17[5] = v10;
  void v17[3] = *(unsigned __int8 *)(v1 + 43);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  sub_25F67A2DC(v12, v11);
  sub_25F6E19AC();
  sub_25F70F660();
  char v34 = 0;
  uint64_t v15 = v24;
  sub_25F70F270();
  if (!v15)
  {
    char v33 = 1;
    sub_25F67E144();
    char v32 = 2;
    sub_25F67E144();
    char v31 = 3;
    sub_25F67E144();
    char v30 = 4;
    sub_25F70F290();
    char v29 = 5;
    sub_25F70F240();
    char v28 = 6;
    sub_25F67E144();
    char v27 = 7;
    sub_25F67E144();
    char v26 = 8;
    sub_25F67E144();
    char v25 = 9;
    sub_25F67E144();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v14);
}

unint64_t sub_25F6E19AC()
{
  unint64_t result = qword_26A7B1AA0;
  if (!qword_26A7B1AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1AA0);
  }
  return result;
}

uint64_t CoreTip.Options.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_25F67ACD8(&qword_26A7B1AA8);
  sub_25F67CA24();
  MEMORY[0x270FA5388](v5, v6);
  sub_25F67A2DC(a1, a1[3]);
  sub_25F6E19AC();
  sub_25F70F640();
  if (v2) {
    return sub_25F67A28C((uint64_t)a1);
  }
  sub_25F67E4B8();
  uint64_t v8 = sub_25F70F1D0();
  uint64_t v10 = v9;
  sub_25F70E570();
  char v24 = sub_25F67CD20();
  char v23 = sub_25F67CD20();
  char v22 = sub_25F67CD20();
  sub_25F67E4B8();
  uint64_t v21 = sub_25F70F1F0();
  sub_25F67E4B8();
  uint64_t v11 = sub_25F70F1A0();
  char v19 = v12;
  uint64_t v20 = v11;
  char v18 = sub_25F67CD20();
  char v17 = sub_25F67CD20();
  char v16 = sub_25F67CD20();
  char v13 = sub_25F67CD20();
  uint64_t v14 = sub_25F675C20();
  v15(v14);
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v24 & 1;
  *(unsigned char *)(a2 + 17) = v23 & 1;
  *(unsigned char *)(a2 + 18) = v22 & 1;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 40) = v19 & 1;
  *(unsigned char *)(a2 + 41) = v18 & 1;
  *(unsigned char *)(a2 + 42) = v17 & 1;
  *(unsigned char *)(a2 + 43) = v16 & 1;
  *(unsigned char *)(a2 + 44) = v13 & 1;
  sub_25F67A28C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E1D24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CoreTip.Options.init(from:)(a1, a2);
}

uint64_t sub_25F6E1D3C(void *a1)
{
  return CoreTip.Options.encode(to:)(a1);
}

uint64_t _s7OptionsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25F70E570();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  return a1;
}

uint64_t _s7OptionsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  return a1;
}

uint64_t _s7OptionsVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 45))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7OptionsVwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 44) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 45) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 45) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unsigned char *_s7OptionsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6E1FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7OptionsV10CodingKeysOMa_0()
{
  return &_s7OptionsV10CodingKeysON_0;
}

unint64_t sub_25F6E200C()
{
  unint64_t result = qword_26A7B1AB0;
  if (!qword_26A7B1AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1AB0);
  }
  return result;
}

unint64_t sub_25F6E205C()
{
  unint64_t result = qword_26A7B1AB8;
  if (!qword_26A7B1AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1AB8);
  }
  return result;
}

unint64_t sub_25F6E20AC()
{
  unint64_t result = qword_26A7B1AC0;
  if (!qword_26A7B1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1AC0);
  }
  return result;
}

uint64_t static CoreTipProtocol.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  uint64_t v7 = v6(a3, a4);
  uint64_t v9 = v8;
  if (v7 == v6(a3, a4) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_25F70F330();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t CoreTipProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  return 0x203A646928706954;
}

uint64_t dispatch thunk of CoreTipProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoreTipProtocol.datastore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoreTipProtocol.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoreTipProtocol.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoreTipProtocol.rules.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CoreTipProtocol.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_25F6E22B4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer)) {
    return 2;
  }
  swift_retain();
  if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
  {
    uint64_t v5 = sub_25F70EA70();
    MEMORY[0x270FA5388](v5, v6);
    _OWORD v9[2] = v2;
    long long v9[3] = a1;
    id v9[4] = a2;
    uint64_t v7 = sub_25F6E36CC((uint64_t)sub_25F6E3AF8, (uint64_t)v9, (uint64_t)"TipKitCore/MiniTipsDatastore+DatastoreTasks.swift", 49);
    swift_release();
  }
  else
  {
    sub_25F70E180();
    swift_retain();
    sub_25F70E570();
    sub_25F666AE0();
    uint64_t v7 = sub_25F6E39EC(a1);
    swift_release();
    swift_release();
  }
  return v7;
}

uint64_t sub_25F6E2424(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer)) {
    return 1;
  }
  swift_retain();
  if (pthread_main_np() == 1 && _CFRunLoopCurrentIsMain())
  {
    uint64_t v6 = sub_25F70EA70();
    MEMORY[0x270FA5388](v6, v7);
    sub_25F679334();
    *(void *)(v8 - 16) = a2;
    sub_25F679F28();
    char v12 = sub_25F6E385C(v9, v10, v11);
    uint64_t result = swift_release();
    if (!v3) {
      return v12 & 1;
    }
  }
  else
  {
    sub_25F70E180();
    swift_retain();
    sub_25F70E570();
    sub_25F666AE0();
    char v14 = sub_25F6E39EC(a1);
    swift_release();
    uint64_t result = swift_release();
    if (!v3) {
      return v14 & 1;
    }
  }
  return result;
}

BOOL CoreTip.Status.isAvailable.getter()
{
  return *v0 == 1;
}

uint64_t CoreTip.Status.invalidationReason.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

BOOL CoreTip.Status.isInvalidated.getter()
{
  return *v0 == 2;
}

uint64_t static CoreTip.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v2 = a1[1];
  int v3 = a2[1];
  if (v2 == 10)
  {
    if (v3 != 10) {
      return 0;
    }
  }
  else if (v3 == 10 || v2 != v3)
  {
    return 0;
  }
  return 1;
}

BOOL CoreTip.RecordStatus.isEligible.getter(char a1)
{
  return a1 == 1;
}

unint64_t sub_25F6E260C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = CoreTip.RecordStatus.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_25F6E263C()
{
  unint64_t result = qword_26A7B1AC8;
  if (!qword_26A7B1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7B1AC8);
  }
  return result;
}

uint64_t _s6StatusVwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 65283 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65283 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65284;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s6StatusVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6E27E0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *_s12RecordStatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25F6E28D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTip.RecordStatus()
{
  return &type metadata for CoreTip.RecordStatus;
}

uint64_t sub_25F6E290C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_25F67ACD8(&qword_26B39D3B0);
  MEMORY[0x270FA5388](v2 - 8, v3);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = _s12DisplayEventVMa();
  MEMORY[0x270FA5388](v6, v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B39C210 != -1) {
    swift_once();
  }
  swift_retain();
  sub_25F6D5180((uint64_t)v5);
  swift_release();
  if (sub_25F67D9DC((uint64_t)v5, 1, v6) == 1)
  {
    sub_25F675D8C((uint64_t)v5, &qword_26B39D3B0);
  }
  else
  {
    sub_25F6E3A4C((uint64_t)v5, (uint64_t)v9);
    BOOL v10 = *v9 == *(void *)(v0 + 16) && v9[1] == *(void *)(v0 + 24);
    if (v10 || (sub_25F70F330() & 1) != 0)
    {
      sub_25F6DE274((uint64_t)v9);
    }
    else
    {
      if (qword_26B39E328 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_25F70DED0();
      long double v14 = -v13;
      uint64_t v15 = Double.seconds.getter(-v13);
      uint64_t v16 = sub_25F6A53F8(v15);
      uint64_t v18 = v17;
      fmod(v14, 1.0);
      uint64_t v19 = sub_25F70F690();
      MEMORY[0x2611FC230](v16, v18, v19, v20);
      LOBYTE(v16) = sub_25F70F6A0();
      sub_25F6DE274((uint64_t)v9);
      if (v16) {
        return 1;
      }
    }
  }
  swift_unownedRetainStrong();
  uint64_t v11 = sub_25F6E22B4((void (*)(uint64_t *__return_ptr, uint64_t))sub_25F6E3AB0, v1);
  swift_release();
  return v11;
}

uint64_t sub_25F6E2B94@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = sub_25F70DF30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v3, v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6, v9);
  uint64_t v11 = (char *)&v17 - v10;
  type metadata accessor for CoreTipRecord();
  _s10TipKitCore0cA0C13viewDidAppear4datey10Foundation4DateV_tFfA__0();
  if (qword_26B39E328 != -1) {
    swift_once();
  }
  swift_beginAccess();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  _ss8DurationV10TipKitCoreE7secondsSivg_0();
  sub_25F70DEA0();
  char v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v8, v3);
  if (qword_26A7B0AA8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_25F67F3A4(v3, (uint64_t)qword_26A7B0A90);
  unint64_t v14 = sub_25F6E8BCC((uint64_t)v11, v13);
  v12(v11, v3);
  swift_retain();
  char v15 = sub_25F6E2DE0(v14, a1);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v18 = v15 & 1;
  return result;
}

uint64_t sub_25F6E2DE0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_25F70E570();
  for (; v4; uint64_t v4 = sub_25F70F100())
  {
    uint64_t v5 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x2611FBA70](v5 - 4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      CoreTipRecord.id.getter();
      if (v8 == *(void *)(a2 + 16) && v7 == *(void *)(a2 + 24))
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_25F70F330();
        swift_bridgeObjectRelease();
        if (v10)
        {
          swift_release();
        }
        else
        {
          char v11 = sub_25F6E4248();
          swift_release();
          if ((v11 & 1) == 0)
          {
            swift_release();
            uint64_t v12 = 1;
            goto LABEL_22;
          }
        }
      }
      ++v5;
      if (v6 == v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    sub_25F70E570();
  }
LABEL_21:
  swift_release();
  uint64_t v12 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_25F6E2F5C@<X0>(void (*a1)(uint64_t)@<X1>, _OWORD *a2@<X8>)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_25F6E31C0(a1, a2);
  return swift_release();
}

uint64_t sub_25F6E3028(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v3 = sub_25F6E32F8(a2);
  swift_release();
  return v3;
}

uint64_t sub_25F6E30F4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v3 = sub_25F6E3418(a2);
  swift_release();
  return v3 & 1;
}

uint64_t sub_25F6E31C0@<X0>(void (*a1)(uint64_t)@<X0>, _OWORD *a2@<X8>)
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    uint64_t v5 = sub_25F70E1B0();
    swift_release();
    if (sub_25F70E0D0()) {
      sub_25F70E0E0();
    }
    a1(v5);
    sub_25F70E120();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *a2 = xmmword_25F713AD0;
  }
  return result;
}

uint64_t sub_25F6E32F8(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    sub_25F70E1B0();
    swift_release();
    if (sub_25F70E0D0()) {
      sub_25F70E0E0();
    }
    uint64_t v3 = sub_25F6E39EC(a1);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return 2;
  }
  return v3;
}

uint64_t sub_25F6E3418(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  sub_25F70EA70();
  sub_25F70EA60();
  sub_25F70EA30();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC10TipKitCore17MiniTipsDatastore_modelContainer))
  {
    swift_retain();
    sub_25F70E1B0();
    swift_release();
    if (sub_25F70E0D0()) {
      sub_25F70E0E0();
    }
    char v4 = sub_25F6E39EC(a1);
    swift_release();
    uint64_t result = swift_release();
    if (!v2) {
      return v4 & 1;
    }
  }
  else
  {
    swift_release();
    return 1;
  }
  return result;
}

uint64_t sub_25F6E3540(uint64_t a1, uint64_t a2)
{
  sub_25F70EA60();
  swift_release();
  swift_task_getMainExecutor();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  sub_25F6E3BCC();
  if (v2) {
    return swift_release();
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_25F70EEC0();
    sub_25F70E790();
    sub_25F70F720();
    sub_25F70E790();
    swift_bridgeObjectRelease();
    sub_25F70E790();
    uint64_t result = sub_25F70F0E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_25F6E36CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_25F70EA60();
  swift_release();
  swift_task_getMainExecutor();
  if (swift_task_isCurrentExecutor())
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    sub_25F6E3B1C();
    if (v4)
    {
      swift_release();
      return a4;
    }
    a4 = v11;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return a4;
    }
    __break(1u);
  }
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70F720();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t result = sub_25F70F0E0();
  __break(1u);
  return result;
}

uint64_t sub_25F6E385C(uint64_t a1, uint64_t a2, char a3)
{
  sub_25F70EA60();
  swift_release();
  swift_task_getMainExecutor();
  if (swift_task_isCurrentExecutor())
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = a2;
    sub_25F6E3B1C();
    if (v3)
    {
      swift_release();
      return a3 & 1;
    }
    a3 = v10;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return a3 & 1;
    }
    __break(1u);
  }
  sub_25F70EEC0();
  sub_25F70E790();
  sub_25F70F720();
  sub_25F70E790();
  swift_bridgeObjectRelease();
  sub_25F70E790();
  uint64_t result = sub_25F70F0E0();
  __break(1u);
  return result;
}

uint64_t sub_25F6E39EC(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  a1(&v4, v1);
  if (v2) {
    return sub_25F70E120();
  }
  sub_25F70E120();
  return v4;
}

uint64_t sub_25F6E3A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12DisplayEventVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25F6E3AB0@<X0>(unsigned char *a1@<X8>)
{
  return sub_25F6E2B94(v1, a1);
}

uint64_t sub_25F6E3ACC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6E3028(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_25F6E3AF8@<X0>(unsigned char *a1@<X8>)
{
  return sub_25F6E3ACC(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_25F6E3B1C()
{
  sub_25F67B2AC();
  uint64_t result = v2();
  if (!v1) {
    unsigned char *v0 = v4;
  }
  return result;
}

uint64_t sub_25F6E3B54@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t)@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25F6E30F4(a1, a2);
  if (!v3) {
    *a3 = result & 1;
  }
  return result;
}

uint64_t sub_25F6E3B84@<X0>(unsigned char *a1@<X8>)
{
  return sub_25F6E3B54(*(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24), a1);
}

uint64_t sub_25F6E3BA8@<X0>(_OWORD *a1@<X8>)
{
  return sub_25F6E2F5C(*(void (**)(uint64_t))(v1 + 24), a1);
}

uint64_t sub_25F6E3BCC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_25F6E3BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
}

uint64_t sub_25F6E3C10()
{
  sub_25F678370();
  sub_25F685FA4(0x4449656C646E7562, 0xE800000000000000, v0);
  sub_25F67ACD8(&qword_26B39D670);
  if (!sub_25F675ED8())
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v1 = v3;
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_5;
  }
  return v1;
}

void sub_25F6E3CC0(void *a1@<X8>)
{
  CoreTipRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_25F6E3CEC(void *a1@<X8>)
{
  CoreTipRecord.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_25F6E3D18()
{
  return CoreTipRecord.id.setter();
}

uint64_t CoreTipRecord.id.setter()
{
  return swift_bridgeObjectRelease();
}

void CoreTipRecord.dateCreated.getter()
{
}

void sub_25F6E3F58()
{
}

uint64_t sub_25F6E3F7C(uint64_t a1)
{
  sub_25F70DF30();
  sub_25F67CA24();
  MEMORY[0x270FA5388](v3, v4);
  sub_25F675E40();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v1, a1);
  return CoreTipRecord.dateCreated.setter();
}

uint64_t CoreTipRecord.dateCreated.setter()
{
  sub_25F6E6868();
  swift_getKeyPath();
  sub_25F6E68D8();
  sub_25F67AF7C(&qword_26B39DD00, (void (*)(uint64_t))type metadata accessor for CoreTipRecord);
  sub_25F676374();
  swift_release();
  sub_25F70DF30();
  sub_25F674D1C();
  uint64_t v0 = sub_25F678470();
  return v1(v0);
}

void sub_25F6E40E8(void *a1@<X8>)
{
  CoreTipRecord.content.getter();
  *a1 = v2;
}

void sub_25F6E4114(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  CoreTipRecord.content.setter(v1);
}

void CoreTipRecord.content.setter(void *a1)
{
}

uint64_t CoreTipRecord.__allocating_init(id:)()
{
  uint64_t v0 = swift_allocObject();
  CoreTipRecord.init(id:)();
  return v0;
}

uint64_t sub_25F6E4248()
{
  sub_25F678370();
  uint64_t v2 = v1;
  sub_25F670C68();
  sub_25F685FA4(0xD000000000000017, v3, v2);
  sub_25F67ACD8(&qword_26B39D670);
  if (sub_25F675ED8())
  {
    sub_25F685E28();
    return v0 & 1;
  }
  else
  {
    sub_25F675010();
    return 0;
  }
}

uint64_t sub_25F6E42C8()
{
  return swift_release();
}

uint64_t sub_25F6E437C()
{
  return sub_25F6E42C8();
}

void sub_25F6E439C()
{
}

uint64_t (*CoreTipRecord.id.modify(void *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  CoreTipRecord.id.getter();
  *a1 = v3;
  a1[1] = v4;
  return sub_25F6E440C;
}

uint64_t sub_25F6E440C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreTipRecord.id.setter();
  }
  sub_25F70E570();
  CoreTipRecord.id.setter();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E4480()
{
  return swift_release();
}

uint64_t sub_25F6E4558()
{
  return sub_25F6E4480();
}

void sub_25F6E4574(void *a1@<X8>)
{
  CoreTipRecord.content.getter();
  *a1 = v2;
}

void (*CoreTipRecord.dateCreated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_25F70DF30();
  v3[1] = v4;
  sub_25F6768F0(v4);
  void v3[2] = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  CoreTipRecord.dateCreated.getter();
  return sub_25F6E4648;
}

void sub_25F6E4648(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    CoreTipRecord.dateCreated.setter();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    CoreTipRecord.dateCreated.setter();
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_25F6E46FC()
{
  return swift_release();
}

uint64_t sub_25F6E479C()
{
  return sub_25F6E46FC();
}

void (*CoreTipRecord.content.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  CoreTipRecord.content.getter();
  *a1 = v3;
  return sub_25F6E4800;
}

void sub_25F6E4800(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    CoreTipRecord.content.setter(v2);
  }
  else
  {
    CoreTipRecord.content.setter(*a1);
  }
}

void CoreTipRecord.lastDisplayed.getter()
{
}

void sub_25F6E4988()
{
}

uint64_t sub_25F6E49AC(uint64_t a1)
{
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DBA8);
  uint64_t v4 = sub_25F672C08(v3);
  MEMORY[0x270FA5388](v4, v5);
  sub_25F675E40();
  sub_25F6BC144(a1, v1);
  return CoreTipRecord.lastDisplayed.setter(v1);
}

uint64_t CoreTipRecord.lastDisplayed.setter(uint64_t a1)
{
  return sub_25F685E7C(a1, &qword_26B39DBA8);
}

uint64_t sub_25F6E4AE8()
{
  return swift_release();
}

void (*CoreTipRecord.lastDisplayed.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  uint64_t v3 = sub_25F67ACD8(&qword_26B39DBA8);
  sub_25F672C08(v3);
  size_t v5 = *(void *)(v4 + 64);
  a1[1] = malloc(v5);
  a1[2] = malloc(v5);
  CoreTipRecord.lastDisplayed.getter();
  return sub_25F6E4C50;
}

void sub_25F6E4C50(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_25F6BC144((uint64_t)v3, (uint64_t)v2);
    CoreTipRecord.lastDisplayed.setter((uint64_t)v2);
    sub_25F685E7C((uint64_t)v3, &qword_26B39DBA8);
  }
  else
  {
    CoreTipRecord.lastDisplayed.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

void sub_25F6E4CC8(void *a1@<X8>)
{
  CoreTipRecord.rules.getter();
  *a1 = v2;
}

uint64_t sub_25F6E4CF4()
{
  return CoreTipRecord.rules.setter();
}

uint64_t CoreTipRecord.rules.setter()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E4DD8()
{
  return swift_release();
}

uint64_t (*CoreTipRecord.rules.modify(void *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  CoreTipRecord.rules.getter();
  *a1 = v3;
  return sub_25F6E4EDC;
}

uint64_t sub_25F6E4EDC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return CoreTipRecord.rules.setter();
  }
  sub_25F70E570();
  CoreTipRecord.rules.setter();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25F6E4F34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = CoreTipRecord.status.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25F6E4F60()
{
  return CoreTipRecord.status.setter();
}

uint64_t CoreTipRecord.status.setter()
{
  return sub_25F68EB90();
}

uint64_t (*CoreTipRecord.status.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = CoreTipRecord.status.getter();
  return sub_25F6E5008;
}

uint64_t sub_25F6E5008()
{
  return CoreTipRecord.status.setter();
}

uint64_t sub_25F6E5030(uint64_t a1, uint64_t a2)
{
  sub_25F67B010(a2, (uint64_t)v3);
  sub_25F67A2DC(v3, v3[3]);
  swift_getKeyPath();
  sub_25F70E070();
  swift_release();
  return sub_25F67A28C((uint64_t)v3);
}

uint64_t (*CoreTipRecord.invalidationReason.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = CoreTipRecord.invalidationReason.getter();
  return sub_25F6E5120;
}