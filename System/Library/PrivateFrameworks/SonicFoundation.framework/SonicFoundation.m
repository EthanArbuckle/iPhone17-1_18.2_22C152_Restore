uint64_t OUTLINED_FUNCTION_7(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_0_0(uint64_t a1)
{
  return sub_25E03F028(a1 & 0xFFFFFFFFFFFFLL | 0x8000000000000000);
}

sqlite3_value *OUTLINED_FUNCTION_0_1()
{
  return sub_25E04024C(v0);
}

uint64_t OUTLINED_FUNCTION_9()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_0_7(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  *(__n128 *)uint64_t v7 = a3;
  *(void *)(v7 + 16) = a1;
  *(__n128 *)(v7 + 24) = a2;
  *(void *)(v7 + 40) = v3;
  *(unsigned char *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v5;
  *(unsigned char *)(v7 + 64) = v6;
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_0_9(uint64_t a1)
{
  return MEMORY[0x270EF02A8](a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  void *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return NanoID.init<A>(config:using:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  return sub_25E0DC5C0();
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t OUTLINED_FUNCTION_0_14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return sub_25E0DC140();
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return sub_25E0DBC40();
}

uint64_t OUTLINED_FUNCTION_0_17(uint64_t result)
{
  return result;
}

void OUTLINED_FUNCTION_0_18(_DWORD *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_6()
{
  return sub_25E03DEA4(v4, v3, v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, int a12, char a13)
{
  a10 = v13;
  a11 = v14;
  a12 = 17;
  a13 = 14;
  return static SQLError.Code.== infix(_:_:)(&a10, &a12);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return v0;
}

void OUTLINED_FUNCTION_10_3(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  type metadata accessor for _WrappingError();
  return sub_25E0DBCF0();
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

void OUTLINED_FUNCTION_10_9()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_48()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_13()
{
  return sub_25E0DC4D0();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_32()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return sub_25E0DC030();
}

uint64_t OUTLINED_FUNCTION_5(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return sub_25E0DC380();
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return sub_25E0DC380();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return v0;
}

void OUTLINED_FUNCTION_8_1()
{
  JUMPOUT(0x2611CE570);
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_6(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_25E061064(a3);
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return sub_25E03DEA4(v3, v2, v1, v0, v4);
}

void OUTLINED_FUNCTION_8_11()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return v0 - 112;
}

void OUTLINED_FUNCTION_44()
{
  sub_25E0A95D0();
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  uint64_t v1 = *(void *)(v0 - 96);
  uint64_t v2 = *(void *)(v0 - 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 120), v1);
  return MEMORY[0x270F9F5A0](v1, v2);
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return MEMORY[0x270F9E648](v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  uint64_t result = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 192) = result;
  *(void *)(v0 + 200) = v2;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  *(void *)(v0 + 208) = v3;
  *(void *)(v0 + 216) = v4;
  uint64_t v5 = *(void *)(v0 + 112);
  *(void *)(v0 + 224) = v5;
  char v6 = *(unsigned char *)(v0 + 120);
  *(unsigned char *)(v0 + 121) = v6;
  *(void *)(v0 + 16) = result;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  *(unsigned char *)(v0 + 56) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_14_10()
{
  return swift_release();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return sub_25E0DC1C0();
}

uint64_t OUTLINED_FUNCTION_13(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_1_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return MEMORY[0x270EF25B0](&a9, a2, a2, v9, v9);
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return type metadata accessor for SQLDynamicValue.Box();
}

uint64_t OUTLINED_FUNCTION_5_1(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA2498](a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_1_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, int a15, char a16)
{
  char v18 = *(unsigned char *)(v16 + 24);
  a13 = *(_DWORD *)(v16 + 20);
  a14 = v18;
  a15 = 17;
  a16 = 14;
  return static SQLError.Code.== infix(_:_:)(&a13, &a15);
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return MEMORY[0x270F9E8A8](v0, 32, 0xE100000000000000, 0, 0xE000000000000000, v3 - 104, v2, v1);
}

void OUTLINED_FUNCTION_109(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return sub_25E0DBD80();
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return v0;
}

void OUTLINED_FUNCTION_1_13(uint64_t a1@<X8>)
{
  *(void *)(v4 + 328) = a1;
  *(void *)(v4 + 336) = v2;
  *(void *)(v4 + 312) = v5;
  *(void *)(v4 + 320) = v3;
  *(void *)(v4 + 256) = v5;
  *(void *)(v4 + 264) = v3;
  *(void *)(v4 + 272) = a1;
  *(void *)(v4 + 280) = v2;
  *(unsigned char *)(v4 + 288) = v1 != 0;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return sub_25E0DC290();
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21(uint64_t a1, uint64_t a2)
{
  __swift_storeEnumTagSinglePayload(v3, a2, 1, v2);
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_1_16(uint64_t a1)
{
  return MEMORY[0x270FA2498](a1, v1, 0);
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  return sub_25E0DB6F0();
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return sub_25E0DC5C0();
}

uint64_t OUTLINED_FUNCTION_1_20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return MEMORY[0x270F9E650](v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_22()
{
  return *(void *)(v0 - 280);
}

void OUTLINED_FUNCTION_1_23()
{
  sub_25E056CAC();
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return sub_25E0DC4D0();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void OUTLINED_FUNCTION_30()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 56);
  sub_25E03E6F4(v2, v3, v4, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return sub_25E0526E8(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_9_7(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 240);
  return a1 + 32;
}

uint64_t OUTLINED_FUNCTION_9_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_9_9(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  return MEMORY[0x270F9E8A8](v2, 32, 0xE100000000000000, 0, 0xE000000000000000, va, v3, v4);
}

void OUTLINED_FUNCTION_9_10()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  return sub_25E0DC270();
}

void OUTLINED_FUNCTION_9_14()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_9_16(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270F9E5B8](a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_3@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 + 376) = a1;
  *(void *)(v4 + 384) = v2;
  *(void *)(v4 + 360) = v5;
  *(void *)(v4 + 368) = v1;
  uint64_t v6 = *(void *)(v4 + 336);
  *(void *)(v4 + 256) = v5;
  *(void *)(v4 + 264) = v1;
  *(void *)(v4 + 272) = a1;
  *(void *)(v4 + 280) = v2;
  *(unsigned char *)(v4 + 288) = v3 != 0;
  return v6 + 48;
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  *(void *)(v1 - 104) = v0;
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_35_6()
{
  return sub_25E0D6330();
}

uint64_t OUTLINED_FUNCTION_35_7(void *a1)
{
  a1[2] = v2;
  a1[3] = v1;
  a1[4] = v3;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_3_0@<X0>(__n128 *a1@<X0>, unint64_t a2@<X8>, __n128 a3@<Q0>)
{
  a1[1] = a3;
  a1[3].n128_u64[1] = a2;
  a1[2].n128_u64[0] = 0x4B325B1B0DLL;
  a1[2].n128_u64[1] = 0xE500000000000000;
  return sub_25E0DC4C0();
}

void *OUTLINED_FUNCTION_3_3(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = 0;
  v1[4] = 0;
  return v1 + 2;
}

__n128 OUTLINED_FUNCTION_3_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  *(_DWORD *)a2 = a13;
  *(_DWORD *)(a2 + 4) = v16;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = a11;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = a10;
  *(void *)(a2 + 40) = v13;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_3_6(uint64_t a1@<X8>)
{
  *(void *)(v1 - 176) = 0x436D756D6978616DLL;
  *(void *)(v1 - 168) = a1;
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  return sub_25E0DC4E0();
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return sub_25E0DC4E0();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return v0;
}

void OUTLINED_FUNCTION_11_4(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_11_5()
{
  return sub_25E0DBCF0();
}

void OUTLINED_FUNCTION_11_6()
{
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0xE000000000000000;
  *(unsigned char *)(v0 + 248) = 0;
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  return 0;
}

void OUTLINED_FUNCTION_11_12(uint64_t a1@<X8>)
{
  sub_25E0B07D0(0, 15, 0xD000000000000040, (a1 - 32) | 0x8000000000000000);
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return *(void *)(v0 + 64);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  sub_25E0540B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  *(void *)(v0 + 304) = *(void *)(v0 + 88);
  return __swift_destroy_boxed_opaque_existential_1(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return swift_beginAccess();
}

size_t OUTLINED_FUNCTION_6_4(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void OUTLINED_FUNCTION_6_7()
{
  *(unsigned char *)(v0 - 112) = *(_DWORD *)(v0 - 260);
}

void OUTLINED_FUNCTION_6_9()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  return sub_25E0DC130();
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 120);
  uint64_t v5 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_25E0CA8B0((void *)(v4 + 16), v5, a1);
}

unint64_t OUTLINED_FUNCTION_6_12(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_6_13@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_25E0DB3C0();
}

unsigned char *OUTLINED_FUNCTION_6_14@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *size_t result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_5_8(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_5_9@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 + 344) = a1;
  *(void *)(v4 + 352) = v2;
  *(void *)(v4 + 328) = v5;
  *(void *)(v4 + 336) = v1;
  uint64_t v6 = *(void *)(v4 + 304);
  *(void *)(v4 + 256) = v5;
  *(void *)(v4 + 264) = v1;
  *(void *)(v4 + 272) = a1;
  *(void *)(v4 + 280) = v2;
  *(unsigned char *)(v4 + 288) = v3 != 0;
  return v6 + 8;
}

char *OUTLINED_FUNCTION_5_10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_5_11@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return sub_25E0DC220();
}

void OUTLINED_FUNCTION_5_12()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_5_13@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

void OUTLINED_FUNCTION_5_14()
{
  sub_25E053F70();
}

uint64_t OUTLINED_FUNCTION_5_15@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return sub_25E0DC4D0();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_25E0DC1C0();
}

void OUTLINED_FUNCTION_4_4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  *(void *)(v0 + 120) = *(void *)v1;
  *(void *)(v0 + 128) = *(void *)(v1 + 8);
  *(void *)(v0 + 136) = *(void *)(v1 + 16);
  *(void *)(v0 + 144) = *(void *)(v1 + 24);
  *(void *)(v0 + 152) = *(void *)(v1 + 32);
  *(unsigned char *)(v0 + 97) = *(unsigned char *)(v1 + 40);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  *(void *)(v1 + 80) = *(void *)(v2 + 8);
  *(void *)(v1 + 88) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_11()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  uint64_t result = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 152) = result;
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  *(void *)(v0 + 168) = v3;
  *(void *)(v0 + 176) = v4;
  uint64_t v5 = *(void *)(v0 + 112);
  *(void *)(v0 + 184) = v5;
  char v6 = *(unsigned char *)(v0 + 120);
  *(unsigned char *)(v0 + 121) = v6;
  *(void *)(v0 + 16) = result;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  *(unsigned char *)(v0 + 56) = v6;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_13@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return swift_allocObject();
}

double OUTLINED_FUNCTION_16_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_3(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_25E09228C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_16_4(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + 112);
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return v0;
}

void OUTLINED_FUNCTION_12_0()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_16_6@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v5 + 256) = v6;
  *(void *)(v5 + 264) = v3;
  *(void *)(v5 + 272) = a2;
  *(void *)(v5 + 280) = v4;
  *(unsigned char *)(v5 + 288) = v2;
  return a1 + 8;
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  return sub_25E0DB7E0();
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return MEMORY[0x270F9E640](v1, v0);
}

uint64_t SQLDatabase._markdown(sql:)()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v1 + 336) = v2;
  *(void *)(v1 + 344) = v0;
  char v4 = *(unsigned char *)(v3 + 32);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 272) = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 288) = v5;
  *(unsigned char *)(v1 + 304) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 352) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_25E0394B4;
  return SQLDatabase.results(dynamicValues:)(v1 + 64, v1 + 272);
}

uint64_t sub_25E0394B4()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 344);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *unsigned __int8 v7 = v6;
  *(void *)(v8 + 360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v9 = sub_25E03A318;
  }
  else {
    uint64_t v9 = sub_25E0395E0;
  }
  return MEMORY[0x270FA2498](v9, v5, 0);
}

uint64_t sub_25E0395E0()
{
  OUTLINED_FUNCTION_12();
  long long v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v1;
  *(_OWORD *)(v0 + 41) = *(_OWORD *)(v0 + 89);
  sub_25E03DD94(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25E0396B0;
  return sub_25E03ADFC();
}

uint64_t sub_25E0396B0()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = v5;
  v3[47] = v6;
  v3[48] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    sub_25E03DE44((uint64_t)(v3 + 2));
    uint64_t v10 = dword_26A6D4290;
    uint64_t v11 = (void *)swift_task_alloc();
    v3[49] = v11;
    *uint64_t v11 = v5;
    v11[1] = sub_25E039864;
    return ((uint64_t (__cdecl *)())((char *)&dword_26A6D4290 + v10))();
  }
}

uint64_t sub_25E039864()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[50] = v5;
  v3[51] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = v3[43];
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_25E03A394;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v8 = v3[43];
    uint64_t v7 = sub_25E039AC4;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_25E0399AC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 344);
  sub_25E03DE44(v0 + 16);
  return MEMORY[0x270FA2498](sub_25E039A40, v1, 0);
}

uint64_t sub_25E039A40()
{
  OUTLINED_FUNCTION_12();
  sub_25E03DE44(v0 + 16);
  OUTLINED_FUNCTION_18();
  return v1();
}

uint64_t sub_25E039AC4()
{
  uint64_t v79 = v0;
  uint64_t v78 = *MEMORY[0x263EF8340];
  uint64_t v67 = v0 + 16;
  uint64_t v1 = *(void *)(v0 + 376);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    *(void *)&long long v77 = MEMORY[0x263F8EE78];
    sub_25E03CBEC(0, v2, 0);
    uint64_t v4 = v77;
    unint64_t v5 = *(void *)(v77 + 16);
    uint64_t v6 = 24 * v5 + 32;
    uint64_t v7 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      *(void *)&long long v77 = v4;
      int64_t v10 = v5 + 1;
      unint64_t v11 = *(void *)(v4 + 24);
      sub_25E0DB3C0();
      if (v5 >= v11 >> 1)
      {
        sub_25E03CBEC((char *)(v11 > 1), v10, 1);
        uint64_t v4 = v77;
      }
      *(void *)(v4 + 16) = v10;
      uint64_t v12 = v4 + v6;
      *(unsigned char *)uint64_t v12 = 3;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + 16) = v8;
      v6 += 24;
      v7 += 2;
      ++v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x263F8EE78];
  }
  uint64_t v13 = *(void *)(v0 + 400);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v66 = v4;
    v71 = (long long *)(v0 + 192);
    v72 = (long long *)(v0 + 112);
    uint64_t v75 = v3;
    sub_25E03CBA4(0, v14, 0);
    uint64_t v15 = 0;
    uint64_t v69 = v13 + 32;
    uint64_t v68 = v14;
    do
    {
      uint64_t v70 = v15;
      uint64_t v16 = *(void *)(v69 + 8 * v15);
      int64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v76 = v3;
        sub_25E0DB3C0();
        sub_25E03CC0C(0, v17, 0);
        uint64_t v18 = 0;
        int64_t v73 = v17;
        uint64_t v74 = v16;
        while (1)
        {
          uint64_t v19 = *(void *)(v16 + 8 * v18 + 32);
          v20 = *(sqlite3_value **)(v19 + 16);
          swift_retain_n();
          switch(sqlite3_value_type(v20))
          {
            case 1:
              *(void *)(v0 + 136) = MEMORY[0x263F8D6C8];
              *(void *)(v0 + 144) = &protocol witness table for Int;
              *(void *)(v0 + 112) = sqlite3_value_int64(*(sqlite3_value **)(v19 + 16));
              goto LABEL_34;
            case 2:
              *(void *)(v0 + 136) = MEMORY[0x263F8D5C8];
              *(void *)(v0 + 144) = &protocol witness table for Float;
              float v21 = sqlite3_value_double(*(sqlite3_value **)(v19 + 16));
              *(float *)(v0 + 112) = v21;
              goto LABEL_34;
            case 3:
              *(void *)(v0 + 136) = MEMORY[0x263F8D310];
              *(void *)(v0 + 144) = &protocol witness table for String;
              v22 = *(sqlite3_value **)(v19 + 16);
              swift_retain();
              v23 = sqlite3_value_text(v22);
              sqlite3_value_bytes(v22);
              if (v23)
              {
                uint64_t v24 = sub_25E0DB4C0();
                if (v25)
                {
                  uint64_t v26 = v24;
                  uint64_t v27 = v25;
                  swift_release();
                  *(void *)(v0 + 112) = v26;
                  *(void *)(v0 + 120) = v27;
                  goto LABEL_34;
                }
                *(void *)&long long v77 = 0;
                *((void *)&v77 + 1) = 0xE000000000000000;
                sub_25E0DBE80();
                uint64_t v40 = *((void *)&v77 + 1);
                *(void *)(v0 + 312) = v77;
                *(void *)(v0 + 320) = v40;
                sub_25E0DB630();
                *(void *)(v0 + 328) = v23;
                sub_25E0DC0D0();
                uint64_t v41 = *(void *)(v0 + 312);
                unint64_t v39 = *(void *)(v0 + 320);
                sub_25E03E00C();
                uint64_t v38 = swift_allocError();
                void *v37 = v41;
              }
              else
              {
                sub_25E03E00C();
                uint64_t v38 = swift_allocError();
                void *v37 = 0xD00000000000002DLL;
                unint64_t v39 = 0x800000025E0E3850;
              }
              v37[1] = v39;
              swift_willThrow();
              swift_release();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v72);
              MEMORY[0x2611CF510](v38);
              goto LABEL_30;
            case 4:
              *(void *)(v0 + 136) = MEMORY[0x263F06F78];
              *(void *)(v0 + 144) = sub_25E03DEF0();
              v29 = *(sqlite3_value **)(v19 + 16);
              swift_retain();
              v30 = sqlite3_value_blob(v29);
              unsigned int v31 = sqlite3_value_bytes(v29);
              if ((int)v31 < 1)
              {
                swift_release();
                uint64_t v35 = 0;
                unint64_t v36 = 0xC000000000000000;
                goto LABEL_33;
              }
              if (v30)
              {
                unsigned int v32 = v31;
                uint64_t v33 = v31;
                if (v31 <= 0xE)
                {
                  *(void *)((char *)&v77 + 6) = 0;
                  *(void *)&long long v77 = 0;
                  BYTE14(v77) = v31;
                  memcpy(&v77, v30, v31);
                  uint64_t v35 = v77;
                  uint64_t v44 = DWORD2(v77);
                  uint64_t v45 = BYTE12(v77);
                  uint64_t v46 = BYTE13(v77);
                  uint64_t v47 = BYTE14(v77);
                  swift_release();
                  unint64_t v36 = v44 | (v45 << 32) | (v46 << 40) | (v47 << 48);
                }
                else
                {
                  sub_25E0DAD60();
                  swift_allocObject();
                  uint64_t v34 = sub_25E0DAD10();
                  if (v32 >= 0x7FFFFFFF)
                  {
                    sub_25E0DAEC0();
                    uint64_t v35 = swift_allocObject();
                    *(_OWORD *)(v35 + 16) = xmmword_25E0DD410;
                    swift_release();
                    unint64_t v36 = v34 | 0x8000000000000000;
                  }
                  else
                  {
                    swift_release();
                    uint64_t v35 = v33 << 32;
                    unint64_t v36 = v34 | 0x4000000000000000;
                  }
                }
LABEL_33:
                *(void *)(v0 + 112) = v35;
                *(void *)(v0 + 120) = v36;
LABEL_34:
                sub_25E03DF3C(v72, (uint64_t)v71);
                swift_release();
                sub_25E03DF3C(v71, v0 + 152);
                sub_25E03DF54(v0 + 152, v0 + 232);
                sub_25E03E530(0, (unint64_t *)&qword_26A6D42A0);
                uint64_t v43 = sub_25E0DB550();
                unint64_t v42 = v48;
                __swift_destroy_boxed_opaque_existential_1(v0 + 152);
                swift_release_n();
                goto LABEL_35;
              }
              swift_release();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v72);
LABEL_30:
              swift_release();
              swift_release_n();
              unint64_t v42 = 0xEF65756C61566369;
              uint64_t v43 = 0x6D616E79444C5153;
LABEL_35:
              uint64_t v49 = v76;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                uint64_t v50 = OUTLINED_FUNCTION_28();
                sub_25E03CC0C(v50, v51, v52);
                uint64_t v49 = v76;
              }
              unint64_t v54 = *(void *)(v49 + 16);
              unint64_t v53 = *(void *)(v49 + 24);
              if (v54 >= v53 >> 1)
              {
                sub_25E03CC0C(v53 > 1, v54 + 1, 1);
                uint64_t v49 = v76;
              }
              ++v18;
              *(void *)(v49 + 16) = v54 + 1;
              uint64_t v55 = v49 + 16 * v54;
              *(void *)(v55 + 32) = v43;
              *(void *)(v55 + 40) = v42;
              uint64_t v16 = v74;
              if (v73 == v18)
              {
                swift_bridgeObjectRelease();
                uint64_t v3 = MEMORY[0x263F8EE78];
                uint64_t v14 = v68;
                goto LABEL_42;
              }
              break;
            case 5:
              *(void *)(v0 + 136) = &type metadata for SQLNull;
              *(void *)(v0 + 144) = sub_25E03E058();
              v28 = *(sqlite3_value **)(v19 + 16);
              if (sqlite3_value_type(v28) == 5) {
                goto LABEL_34;
              }
              *(void *)&long long v77 = 0;
              *((void *)&v77 + 1) = 0xE000000000000000;
              sub_25E0DBE80();
              swift_bridgeObjectRelease();
              *(void *)&long long v77 = 0xD00000000000001ELL;
              *((void *)&v77 + 1) = 0x800000025E0E38A0;
              *(_DWORD *)(v0 + 60) = sqlite3_value_type(v28);
              sub_25E0DC2D0();
              sub_25E0DB630();
              swift_bridgeObjectRelease();
              sub_25E0DB630();
              __swift_deallocate_boxed_opaque_existential_1((uint64_t)v72);
              swift_bridgeObjectRelease();
              goto LABEL_30;
            default:
              __break(1u);
              return result;
          }
        }
      }
      uint64_t v49 = v3;
LABEL_42:
      uint64_t v56 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        char v57 = OUTLINED_FUNCTION_28();
        sub_25E03CBA4(v57, v58, v59);
        uint64_t v56 = v75;
      }
      uint64_t v60 = v70;
      unint64_t v62 = *(void *)(v56 + 16);
      unint64_t v61 = *(void *)(v56 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_25E03CBA4(v61 > 1, v62 + 1, 1);
        uint64_t v60 = v70;
        uint64_t v56 = v75;
      }
      uint64_t v15 = v60 + 1;
      *(void *)(v56 + 16) = v62 + 1;
      *(void *)(v56 + 8 * v62 + 32) = v49;
    }
    while (v15 != v14);
    swift_bridgeObjectRelease();
    sub_25E03DE44(v67);
    uint64_t v4 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_25E03DE44(v67);
    uint64_t v56 = MEMORY[0x263F8EE78];
  }
  uint64_t v63 = *(void *)(v0 + 336);
  *(unsigned char *)uint64_t v63 = 0;
  *(void *)(v63 + 8) = v4;
  *(void *)(v63 + 16) = v56;
  v64 = *(uint64_t (**)(void))(v0 + 8);
  return v64();
}

uint64_t sub_25E03A318()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_18();
  return v0();
}

uint64_t sub_25E03A394()
{
  OUTLINED_FUNCTION_12();
  sub_25E03DE44(v0 + 16);
  OUTLINED_FUNCTION_18();
  return v1();
}

uint64_t sub_25E03A418()
{
  *(void *)(v1 + 80) = v0;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E03A430);
}

uint64_t sub_25E03A430()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  *(void *)(v0 + 16) = *(void *)v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 40) = v4;
  *(void *)(v0 + 48) = v5;
  *(unsigned char *)(v0 + 56) = v6;
  *(void *)(v0 + 64) = sub_25E049840;
  *(void *)(v0 + 72) = 0;
  swift_retain();
  sub_25E03DDF4(v2, v3, v4, v5, v6);
  *(void *)(v0 + 88) = MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)OUTLINED_FUNCTION_20_0();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25E03A538;
  return v9();
}

uint64_t sub_25E03A538()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    sub_25E03E6F4(*(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
    swift_release();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E03A644()
{
  uint64_t v1 = *(void *)(v0 + 104);
  if (v1)
  {
    sub_25E0DB3C0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v3 = *(void *)(v0 + 88);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_28();
      sub_25E056908();
      uint64_t v3 = v9;
    }
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4 >= *(void *)(v3 + 24) >> 1)
    {
      sub_25E056908();
      uint64_t v3 = v10;
    }
    *(void *)(v3 + 16) = v4 + 1;
    *(void *)(v3 + 8 * v4 + 32) = v1;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 88) = v3;
    unint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_26A6D4468 + dword_26A6D4468);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_25E03A538;
    return v11();
  }
  else
  {
    sub_25E03E6F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
    swift_release();
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v8 = *(void *)(v0 + 88);
    return v7(v8);
  }
}

uint64_t sub_25E03A7E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25E03A7F8()
{
  OUTLINED_FUNCTION_12();
  v1[8] = v0;
  sub_25E03E350(0);
  v1[9] = v2;
  OUTLINED_FUNCTION_7(v2);
  v1[10] = v3;
  v1[11] = swift_task_alloc();
  sub_25E03E428(0);
  v1[12] = v4;
  OUTLINED_FUNCTION_7(v4);
  v1[13] = v5;
  v1[14] = swift_task_alloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E03A8C4()
{
  OUTLINED_FUNCTION_17();
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[8], v0[9]);
  sub_25E03EC5C(&qword_26A6D4370, sub_25E03E350);
  sub_25E0DBB20();
  v0[15] = MEMORY[0x263F8EE78];
  uint64_t v1 = sub_25E03EC5C(&qword_26A6D4378, sub_25E03E428);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25E03AA24;
  uint64_t v3 = v0[12];
  return MEMORY[0x270FA1E80](v0 + 2, v3, v1);
}

uint64_t sub_25E03AA24()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v3[17] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[14];
    uint64_t v10 = v3 + 12;
    uint64_t v8 = v3[12];
    uint64_t v9 = v10[1];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E03AB30()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v18 = *(void *)(v0 + 48);
    __int16 v5 = *(_WORD *)(v0 + 56);
    swift_retain();
    sub_25E0DB3C0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *(void *)(v0 + 120);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      OUTLINED_FUNCTION_28();
      sub_25E056D70();
      uint64_t v7 = v15;
    }
    unint64_t v8 = *(void *)(v7 + 16);
    if (v8 >= *(void *)(v7 + 24) >> 1)
    {
      sub_25E056D70();
      uint64_t v7 = v16;
    }
    *(void *)(v7 + 16) = v8 + 1;
    uint64_t v9 = v7 + 48 * v8;
    *(void *)(v9 + 32) = v2;
    *(void *)(v9 + 40) = v1;
    *(unsigned char *)(v9 + 48) = v3;
    *(unsigned char *)(v9 + 49) = BYTE1(v3) & 1;
    *(void *)(v9 + 56) = v4;
    *(void *)(v9 + 64) = v18;
    *(unsigned char *)(v9 + 72) = v5 & 1;
    *(unsigned char *)(v9 + 73) = HIBYTE(v5);
    sub_25E03E4EC(v2, v1);
    *(void *)(v0 + 120) = v7;
    uint64_t v10 = sub_25E03EC5C(&qword_26A6D4378, sub_25E03E428);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25E03AA24;
    uint64_t v12 = *(void *)(v0 + 96);
    return MEMORY[0x270FA1E80](v0 + 16, v12, v10);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96));
    sub_25E03E4EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v14 = *(void *)(v0 + 120);
    return v13(v14);
  }
}

uint64_t sub_25E03AD90()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_25E03ADFC()
{
  *(void *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E03AE14);
}

uint64_t sub_25E03AE14()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = (void *)v0[7];
  v0[8] = *v1;
  sub_25E03E7AC((uint64_t)(v1 + 1), (uint64_t)(v0 + 2));
  swift_retain();
  sub_25E03E808((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void))sub_25E03DDF4);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_0();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25E03AF00;
  return v4(v0 + 2, &unk_26A6D4F48, 0);
}

uint64_t sub_25E03AF00()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = v4 + 16;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *unint64_t v8 = v7;
  swift_task_dealloc();
  swift_release();
  uint64_t v9 = sub_25E03E808(v6, (void (*)(void, void, void, void, void))sub_25E03DEA4);
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v0) {
    uint64_t v9 = v3;
  }
  return v10(v9);
}

uint64_t sub_25E03B018@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_25E03B020(char a1)
{
  return a1 & 1;
}

uint64_t sub_25E03B028()
{
  return sub_25E03B1E8(*v0, MEMORY[0x263F07B58]);
}

uint64_t sub_25E03B05C(uint64_t a1, id *a2)
{
  uint64_t result = sub_25E0DB4E0();
  *a2 = 0;
  return result;
}

uint64_t sub_25E03B0D8(uint64_t a1, id *a2)
{
  char v3 = sub_25E0DB4F0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_25E03B158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E03B180();
  *a1 = result;
  return result;
}

uint64_t sub_25E03B180()
{
  sub_25E0DB500();
  uint64_t v0 = sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25E03B1B8()
{
  return sub_25E03B1E8(*v0, MEMORY[0x263F8D308]);
}

uint64_t sub_25E03B1E8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_25E0DB500();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25E03B228()
{
  return sub_25E03B230();
}

uint64_t sub_25E03B230()
{
  sub_25E0DB500();
  sub_25E0DB5E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25E03B284()
{
  return sub_25E0D5048();
}

uint64_t sub_25E03B28C()
{
  return sub_25E081F98();
}

uint64_t sub_25E03B298@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_25E0DB4D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_25E03B2E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0D50BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25E03B30C(uint64_t a1)
{
  uint64_t v2 = sub_25E03EC5C((unint64_t *)&qword_26A6D4410, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_25E03EC5C(&qword_26A6D4418, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

char *sub_25E03B3CC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B428(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_25E03B4C4(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_25_0(a3, result, a2);
  }
  return result;
}

char *sub_25E03B524(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_25E03B5C4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B628(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B688(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B6E8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[88 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_25_0(a3, result, 88 * a2);
  }
  return result;
}

char *sub_25E03B750(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_25E03B7E8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B848(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_25E03B8DC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[56 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 56 * a2);
  }
  return __src;
}

char *sub_25E03B978(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

char *sub_25E03B9D8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = (char *)OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_2_0(a3, result);
  }
  return result;
}

uint64_t sub_25E03BA3C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_25E03BA6C(a1, a2, a3, (void (*)(void))type metadata accessor for SQLDatabase.AttachedLocation);
}

uint64_t sub_25E03BA54(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_25E03BA6C(a1, a2, a3, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
}

uint64_t sub_25E03BA6C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    uint64_t result = OUTLINED_FUNCTION_1_0();
    __break(1u);
  }
  else if (a3 < a1 {
         || (uint64_t result = ((uint64_t (*)(void))a4)(0),
  }
             a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    OUTLINED_FUNCTION_22_1();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    OUTLINED_FUNCTION_22_1();
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_25E03BB70()
{
  OUTLINED_FUNCTION_21_0();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  if (v2 + 88 * v1 > v0 && v0 + 88 * v1 > v2)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03BC24()
{
  OUTLINED_FUNCTION_21_0();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_23();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03BCC4(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_1();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  sub_25E03E218();
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03BD70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    sub_25E03E5FC(0, &qword_26A6D43B8, MEMORY[0x263F8D488]);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03BE88(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03BF6C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14();
  if (v4 + 16 * v3 > v2 && v2 + 16 * v3 > v4)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  sub_25E03EAD8(0, (unint64_t *)&qword_26A6D42E8, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03C048(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    sub_25E03EAD8(0, &qword_26A6D43A0, MEMORY[0x263F8D980], MEMORY[0x263F8D488]);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C168(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_15_1();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  sub_25E03E530(0, (unint64_t *)&qword_26A6D4390);
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03C224(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C308()
{
  OUTLINED_FUNCTION_21_0();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  if (v2 + 80 * v1 > v0 && v0 + 80 * v1 > v2)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03C3B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C49C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + (a2 << 6) > a1 ? (BOOL v3 = a1 + (a2 << 6) > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C57C(uint64_t a1, uint64_t a2)
{
  return sub_25E03C594(a1, a2);
}

uint64_t sub_25E03C594(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14();
  if (v4 + 24 * v3 > v2 && v2 + 24 * v3 > v4)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  v5(0);
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03C654()
{
  return sub_25E03C660();
}

uint64_t sub_25E03C660()
{
  OUTLINED_FUNCTION_21_0();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_23();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_25E03C6F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C7D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 56 * a2 > a1 ? (BOOL v3 = a1 + 56 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_25E03C8C0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14();
  if (v4 + 8 * v3 > v2 && v2 + 8 * v3 > v4)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

void *sub_25E03C988(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 8 * a2);
}

uint64_t sub_25E03CA34(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_3();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_14();
  uint64_t v6 = *(void *)(*(void *)(v5(0) - 8) + 72) * v2;
  unint64_t v7 = v3 + v6;
  unint64_t v8 = v4 + v6;
  if (v7 > v4 && v8 > v3)
  {
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_5_4();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_8();

  return swift_arrayInitWithCopy();
}

void sub_25E03CB0C(char a1, uint64_t a2, char a3)
{
  sub_25E03CE2C(a1, a2, a3, *v3);
  *unint64_t v3 = v4;
}

void sub_25E03CB2C(char a1, uint64_t a2, char a3)
{
  sub_25E03D65C(a1, a2, a3, *v3, &qword_26A6D42F0, MEMORY[0x263F8D310], (void (*)(uint64_t, uint64_t, void *))sub_25E03B3CC, (void (*)(uint64_t, uint64_t, void *))sub_25E03BC24);
  *unint64_t v3 = v4;
}

uint64_t sub_25E03CB84(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03CF70(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

void sub_25E03CBA4(char a1, uint64_t a2, char a3)
{
  sub_25E03D27C(a1, a2, a3, *v3, (void (*)(void))sub_25E03E680, (void (*)(char *, uint64_t, char *))sub_25E03BD70);
  *unint64_t v3 = v4;
}

char *sub_25E03CBEC(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D074(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

uint64_t sub_25E03CC0C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D180(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

void sub_25E03CC2C(char a1, uint64_t a2, char a3)
{
  sub_25E03D27C(a1, a2, a3, *v3, (void (*)(void))sub_25E03E580, (void (*)(char *, uint64_t, char *))sub_25E03C048);
  *unint64_t v3 = v4;
}

char *sub_25E03CC74(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D348(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_25E03CC94(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D44C(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_25E03CCB4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D558(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

void sub_25E03CCD4(char a1, uint64_t a2, char a3)
{
  sub_25E03D65C(a1, a2, a3, *v3, &qword_26A6D4340, MEMORY[0x263F06F78], (void (*)(uint64_t, uint64_t, void *))sub_25E03B848, (void (*)(uint64_t, uint64_t, void *))sub_25E03C6F8);
  *unint64_t v3 = v4;
}

char *sub_25E03CD2C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_25E03D748(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

void sub_25E03CD4C(char a1, uint64_t a2, char a3)
{
  sub_25E03D854(a1, a2, a3, *v3, &qword_26A6D4338, MEMORY[0x263F8D120]);
  *unint64_t v3 = v4;
}

void sub_25E03CD7C(char a1, uint64_t a2, char a3)
{
  sub_25E03D938(a1, a2, a3, *v3, &qword_26A6D4300, MEMORY[0x263F8DD08]);
  *unint64_t v3 = v4;
}

void sub_25E03CDAC(char a1, uint64_t a2, char a3)
{
  sub_25E03D854(a1, a2, a3, *v3, &qword_26A6D42F8, (uint64_t)&type metadata for SQLColumnName);
  *unint64_t v3 = v4;
}

void sub_25E03CDDC(char a1, uint64_t a2, char a3)
{
  sub_25E03D938(a1, a2, a3, *v3, &qword_26A6D42E0, MEMORY[0x263F8D6C8]);
  *unint64_t v3 = v4;
}

size_t sub_25E03CE0C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_25E03DBB4(a1, a2, a3, *v3);
  *unint64_t v3 = result;
  return result;
}

void sub_25E03CE2C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    sub_25E03E2FC(0, &qword_26A6D4320, (void (*)(uint64_t))sub_25E03E284);
    uint64_t v11 = swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    sub_25E03B978(v13, v9, (char *)(v11 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C594((uint64_t)v13, v9);
  }
  swift_release();
}

void sub_25E03CF34(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_25E03CF70(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03E2FC(0, &qword_26A6D4318, (void (*)(uint64_t))sub_25E03E218);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  size_t v12 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B428(v12, v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03BCC4((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

char *sub_25E03D074(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03EAD8(0, &qword_26A6D43C0, (uint64_t)&type metadata for MarkdownTable.Header, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B524(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03BE88((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_25E03D180(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03E5FC(0, &qword_26A6D43A8, MEMORY[0x263F8E0F8]);
    uint64_t v10 = swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  size_t v12 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B3CC(v12, v8, (char *)(v10 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03BF6C((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_25E03D27C(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(void), void (*a6)(char *, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_16();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v9 = a2;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (v13)
  {
    a5(0);
    uint64_t v14 = (char *)OUTLINED_FUNCTION_24_0();
    _swift_stdlib_malloc_size(v14);
    OUTLINED_FUNCTION_27();
    *((void *)v14 + 2) = v12;
    *((void *)v14 + 3) = v15;
  }
  else
  {
    uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v16 = v14 + 32;
  int64_t v17 = (char *)(a4 + 32);
  if (a1)
  {
    sub_25E03B628(v17, v12, v16);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a6(v17, v12, v16);
  }
  swift_release();
}

char *sub_25E03D348(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03EAD8(0, &qword_26A6D42D0, (uint64_t)&type metadata for SQLDynamicValue, MEMORY[0x263F8E0F8]);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B628(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C224((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_25E03D44C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03EAD8(0, &qword_26A6D4388, (uint64_t)&type metadata for SQLDatabase.IndexInfo, MEMORY[0x263F8E0F8]);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B978(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C3B8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_25E03D558(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03EAD8(0, &qword_26A6D4380, (uint64_t)&type metadata for SQLDatabase.IndexColumnInfo, MEMORY[0x263F8E0F8]);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B750(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C49C((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_25E03D65C(char a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, void *), void (*a8)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_16();
      if (v13)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v12 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v12;
  }
  if (v16)
  {
    sub_25E03EAD8(0, a5, a6, MEMORY[0x263F8E0F8]);
    int64_t v17 = (void *)OUTLINED_FUNCTION_24_0();
    _swift_stdlib_malloc_size(v17);
    OUTLINED_FUNCTION_26();
    v17[2] = v15;
    v17[3] = v18;
  }
  else
  {
    int64_t v17 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v19 = v17 + 4;
  uint64_t v20 = a4 + 32;
  if (a1)
  {
    a7(v20, v15, v19);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a8(v20, v15, v19);
  }
  swift_release();
}

char *sub_25E03D748(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E03EAD8(0, &qword_26A6D4330, (uint64_t)&type metadata for Data.HexLine, MEMORY[0x263F8E0F8]);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    char v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  char v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E03B8DC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C7D8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_25E03D854(char a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_16();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v9 = a2;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (v13)
  {
    sub_25E03EAD8(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v14 = OUTLINED_FUNCTION_24_0();
    _swift_stdlib_malloc_size((const void *)v14);
    OUTLINED_FUNCTION_26();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v15;
  }
  else
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  if (a1)
  {
    sub_25E03B3CC((char *)(a4 + 32), v12, (char *)(v14 + 32));
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C660();
  }
  swift_release();
}

void sub_25E03D938(char a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_16();
      if (v9)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (v12)
  {
    sub_25E03EAD8(0, a5, a6, MEMORY[0x263F8E0F8]);
    uint64_t v13 = (char *)OUTLINED_FUNCTION_24_0();
    _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_27();
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = v14;
  }
  else
  {
    uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v15 = v13 + 32;
  uint64_t v16 = (char *)(a4 + 32);
  if (a1)
  {
    sub_25E03B628(v16, v11, v15);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03C988(v16, v11, v15);
  }
  swift_release();
}

void sub_25E03DA0C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16();
      if (v7)
      {
LABEL_24:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (!v10)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25E03E2FC(0, &qword_26A6D4328, (void (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask);
  uint64_t v11 = type metadata accessor for ActorQueue.QueuedTask();
  OUTLINED_FUNCTION_7(v11);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v13)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v17 - v15 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_23;
  }
  v16[2] = v9;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v13);
LABEL_18:
  uint64_t v19 = *(void *)(type metadata accessor for ActorQueue.QueuedTask() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = a4 + v20;
  if (a1)
  {
    sub_25E03BA6C(v21, v9, (unint64_t)v16 + v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03CA34(v21, v9);
  }
  swift_release();
}

size_t sub_25E03DBB4(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_25E03E2FC(0, &qword_26A6D42D8, MEMORY[0x263F06338]);
  uint64_t v10 = *(void *)(sub_25E0DAC30() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_25E0DAC30() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = a4 + v16;
  if (v5)
  {
    sub_25E03BA6C(v17, v8, (unint64_t)v13 + v16, MEMORY[0x263F06338]);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E03CA34(v17, v8);
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_25E03DD94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  swift_retain();
  sub_25E03DDF4(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_25E03DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_25E0DB3C0();
    sub_25E0DB3C0();
    uint64_t v5 = vars8;
  }
  return sub_25E0DB3C0();
}

uint64_t sub_25E03DE44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  swift_release();
  sub_25E03DEA4(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_25E03DEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_25E03DEF0()
{
  unint64_t result = qword_26A6D4298;
  if (!qword_26A6D4298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4298);
  }
  return result;
}

uint64_t sub_25E03DF3C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_25E03DF54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x2611CF770);
  }
  return result;
}

unint64_t sub_25E03E00C()
{
  unint64_t result = qword_26A6D42A8;
  if (!qword_26A6D42A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D42A8);
  }
  return result;
}

unint64_t sub_25E03E058()
{
  unint64_t result = qword_26A6D42B0;
  if (!qword_26A6D42B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D42B0);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for sqlite3_vtab_cursor(uint64_t a1)
{
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s10ConnectionC6LimitsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s10ConnectionC6LimitsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for sqlite3_vtab(uint64_t a1)
{
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t sub_25E03E188(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E03E1A8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 96) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_info(uint64_t a1)
{
}

void sub_25E03E218()
{
  if (!qword_26A6D4308)
  {
    sub_25E03E284();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26A6D4308);
    }
  }
}

void sub_25E03E284()
{
  if (!qword_26A6D4310)
  {
    _s9StatementCMa();
    unint64_t v0 = type metadata accessor for LRUDictionary.Container();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4310);
    }
  }
}

void sub_25E03E2FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25E0DC2E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25E03E350(uint64_t a1)
{
}

uint64_t sub_25E03E370()
{
  uint64_t v0 = qword_26A6D4358;
  if (!qword_26A6D4358)
  {
    unint64_t v1 = type metadata accessor for SQLDatabase.Results();
    uint64_t v0 = v1;
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26A6D4358);
    }
  }
  return v0;
}

void sub_25E03E428(uint64_t a1)
{
}

void sub_25E03E448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_25E03E370();
    uint64_t v7 = sub_25E03EC5C((unint64_t *)&qword_26A6D4360, (void (*)(uint64_t))sub_25E03E370);
    unint64_t v8 = a3(a1, v6, &type metadata for SQLDatabase.TableColumnInfo, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25E03E4EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_25E03E530(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_25E03E580()
{
  if (!qword_26A6D4398)
  {
    sub_25E03EAD8(255, &qword_26A6D43A0, MEMORY[0x263F8D980], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4398);
    }
  }
}

void sub_25E03E5FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_25E03EAD8(255, (unint64_t *)&qword_26A6D42E8, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_25E03E680()
{
  if (!qword_26A6D43B0)
  {
    sub_25E03E5FC(255, &qword_26A6D43B8, MEMORY[0x263F8D488]);
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D43B0);
    }
  }
}

void sub_25E03E6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1)
  {
    swift_release();
    swift_release();
  }
  else if (!(a6 >> 6))
  {
    swift_release();
    sub_25E03DEA4(a2, a3, a4, a5, a6 & 1);
  }
}

uint64_t sub_25E03E7AC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25E03E808(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

uint64_t _s10ThreadInfoVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void *__swift_memcpy192_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_25E03E8AC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E03E900(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for sqlite3_module(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void type metadata accessor for sqlite3_index_constraint_usage(uint64_t a1)
{
}

uint64_t sub_25E03E9E0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E03EA00(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_orderby(uint64_t a1)
{
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_25E03EA64(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E03EA84(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for sqlite3_index_constraint(uint64_t a1)
{
}

void sub_25E03EAD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_25E03EB24()
{
  return sub_25E03EC5C(&qword_26A6D43F0, type metadata accessor for URLResourceKey);
}

uint64_t sub_25E03EB6C()
{
  return sub_25E03EC5C(&qword_26A6D43F8, type metadata accessor for URLResourceKey);
}

uint64_t sub_25E03EBB4()
{
  return sub_25E03EC5C(&qword_26A6D4400, type metadata accessor for URLResourceKey);
}

void sub_25E03EBFC()
{
  if (!qword_26A6D4408)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26A6D4408);
    }
  }
}

uint64_t sub_25E03EC5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E03ECA4()
{
  return nullsub_1();
}

void *OUTLINED_FUNCTION_2_0@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_18()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return v0;
}

void *OUTLINED_FUNCTION_25_0@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_28()
{
  return 0;
}

uint64_t Device.Family.isHomePod.getter()
{
  return OUTLINED_FUNCTION_0_0(24);
}

uint64_t static Device.Family.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  unint64_t v4 = *a1 >> 62;
  if (!v4)
  {
    if (!(v3 >> 62))
    {
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v3 + 16);
      goto LABEL_7;
    }
LABEL_25:
    sub_25E03EFC0(v3);
    sub_25E03EFC0(v2);
    sub_25E03EFDC(v2);
    sub_25E03EFDC(v3);
    char v7 = 0;
    return v7 & 1;
  }
  if (v4 == 1)
  {
    if (v3 >> 62 == 1)
    {
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v6 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
LABEL_7:
      uint64_t v15 = v6;
      uint64_t v16 = v5;
      sub_25E03EFC0(v3);
      sub_25E03EFC0(v2);
      char v7 = static Device.Family.== infix(_:_:)(&v16, &v15);
      sub_25E03EFDC(v2);
      sub_25E03EFDC(v3);
      return v7 & 1;
    }
    goto LABEL_25;
  }
  switch(__ROR8__(v2, 3) ^ 0x1000000000000000)
  {
    case 1:
      OUTLINED_FUNCTION_2_1();
      if (v3 != v9) {
        goto LABEL_25;
      }
      sub_25E03EFDC(v2);
      unint64_t v8 = 0x8000000000000008;
      goto LABEL_24;
    case 2:
      OUTLINED_FUNCTION_2_1();
      unint64_t v11 = v10 + 8;
      goto LABEL_22;
    case 3:
      if (v3 != 0x8000000000000018) {
        goto LABEL_25;
      }
      sub_25E03EFDC(*a1);
      unint64_t v8 = 0x8000000000000018;
      goto LABEL_24;
    case 4:
      OUTLINED_FUNCTION_2_1();
      unint64_t v11 = v12 + 24;
      goto LABEL_22;
    case 5:
      if (v3 != 0x8000000000000028) {
        goto LABEL_25;
      }
      sub_25E03EFDC(*a1);
      unint64_t v8 = 0x8000000000000028;
      goto LABEL_24;
    case 6:
      OUTLINED_FUNCTION_2_1();
      unint64_t v11 = v13 + 40;
LABEL_22:
      if (v3 != v11) {
        goto LABEL_25;
      }
      sub_25E03EFDC(v2);
      unint64_t v8 = v11;
LABEL_24:
      sub_25E03EFDC(v8);
      char v7 = 1;
      break;
    case 7:
      if (v3 != 0x8000000000000038) {
        goto LABEL_25;
      }
      sub_25E03EFDC(*a1);
      unint64_t v8 = 0x8000000000000038;
      goto LABEL_24;
    default:
      if (v3 != 0x8000000000000000) {
        goto LABEL_25;
      }
      sub_25E03EFDC(*a1);
      unint64_t v8 = 0x8000000000000000;
      goto LABEL_24;
  }
  return v7 & 1;
}

unint64_t sub_25E03EFC0(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_25E03EFDC(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

uint64_t Device.Family.isAppleTV.getter()
{
  return OUTLINED_FUNCTION_0_0(16);
}

uint64_t Device.Family.isiPhone.getter()
{
  return sub_25E03F028(0x8000000000000000);
}

uint64_t Device.Family.isiPad.getter()
{
  return OUTLINED_FUNCTION_0_0(8);
}

uint64_t Device.Family.isAppleWatch.getter()
{
  return OUTLINED_FUNCTION_0_0(32);
}

uint64_t Device.Family.isVision.getter()
{
  return OUTLINED_FUNCTION_0_0(40);
}

uint64_t Device.Family.isMac.getter()
{
  return OUTLINED_FUNCTION_0_0(48);
}

uint64_t sub_25E03F028(unint64_t a1)
{
  unint64_t v2 = *v1;
  unint64_t v3 = *v1 >> 62;
  if (!v3) {
    goto LABEL_4;
  }
  if (v3 == 1)
  {
    v2 &= 0x3FFFFFFFFFFFFFFFuLL;
LABEL_4:
    unint64_t v2 = *(void *)(v2 + 16);
  }
  unint64_t v5 = a1;
  unint64_t v6 = v2;
  return static Device.Family.== infix(_:_:)(&v6, &v5) & 1;
}

BOOL Device.Family.isSimulator.getter()
{
  return *v0 >> 62 == 1;
}

BOOL Device.Family.isVirtualized.getter()
{
  return *v0 >> 62 == 0;
}

void sub_25E03F09C()
{
}

void sub_25E03F0A8(unint64_t *a1@<X8>)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    unint64_t v3 = v2;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if ((deviceClassNumber - 1) > 0xA) {
      unint64_t v5 = 0x8000000000000038;
    }
    else {
      unint64_t v5 = qword_25E0DD758[deviceClassNumber - 1];
    }
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

id sub_25E03F11C()
{
  return sub_25E03F128(&qword_26A6DDCC8);
}

id sub_25E03F128@<X0>(uint64_t *a1@<X8>)
{
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v3 = result;
  int isSimulator = MobileGestalt_get_isSimulator();

  if (!isSimulator)
  {
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      unint64_t v8 = result;
      int isVirtualDevice = MobileGestalt_get_isVirtualDevice();

      if (isVirtualDevice)
      {
        uint64_t v7 = swift_allocObject();
        if (qword_26A6D4200 != -1)
        {
          uint64_t v10 = v7;
          swift_once();
          uint64_t v7 = v10;
        }
        unint64_t v6 = qword_26A6DDCC0;
        *(void *)(v7 + 16) = qword_26A6DDCC0;
      }
      else
      {
        if (qword_26A6D4200 != -1) {
          swift_once();
        }
        uint64_t v7 = qword_26A6DDCC0;
        unint64_t v6 = qword_26A6DDCC0;
      }
      goto LABEL_14;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v5 = swift_allocObject();
  if (qword_26A6D4200 != -1) {
    swift_once();
  }
  unint64_t v6 = qword_26A6DDCC0;
  *(void *)(v5 + 16) = qword_26A6DDCC0;
  uint64_t v7 = v5 | 0x4000000000000000;
LABEL_14:
  *a1 = v7;

  return (id)sub_25E03EFC0(v6);
}

uint64_t Device.Family.hash(into:)(uint64_t a1)
{
  if ((*v1 >> 62) > 1) {
    return sub_25E0DC4E0();
  }
  sub_25E0DC4E0();
  return Device.Family.hash(into:)(a1);
}

uint64_t Device.Family.hashValue.getter()
{
  v2[9] = *v0;
  sub_25E0DC4D0();
  Device.Family.hash(into:)((uint64_t)v2);
  return sub_25E0DC500();
}

uint64_t sub_25E03F408()
{
  v2[9] = *v0;
  sub_25E0DC4D0();
  Device.Family.hash(into:)((uint64_t)v2);
  return sub_25E0DC500();
}

unint64_t Device.family.getter@<X0>(void *a1@<X8>)
{
  if (qword_26A6D4208 != -1) {
    swift_once();
  }
  unint64_t v2 = qword_26A6DDCC8;
  *a1 = qword_26A6DDCC8;

  return sub_25E03EFC0(v2);
}

id Device.supports4KVideo.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BC90]);
}

id Device.supportsCarPlay.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCA8]);
}

id Device.supportsCarPlay2.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCB0]);
}

id Device.hasDynamicIsland.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCB8]);
}

id Device.hasNeuralEngine.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCC8]);
}

id Device.hasBattery.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCD0]);
}

id Device.hasCellularDataCapability.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BC88]);
}

id Device.hasWAPICapability.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BD00]);
}

uint64_t Device.hasInternalUI.getter()
{
  return os_variant_has_internal_ui();
}

uint64_t Device.hasInternalDiagnostics.getter()
{
  return os_variant_has_internal_diagnostics();
}

uint64_t Device.isInternalOS.getter()
{
  return os_variant_has_internal_content();
}

void Device.nvram.getter()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = (id)MobileGestalt_copy_nVRAMDictionary_obj();

    if (v2)
    {
      uint64_t v3 = sub_25E0DB390();

      sub_25E03F674(v3);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_25E03F674(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_25E03FFF0();
    id v2 = (void *)sub_25E0DC1A0();
  }
  else
  {
    id v2 = (void *)MEMORY[0x263F8EE80];
  }
  sub_25E058CE0(v39, a1);
  uint64_t v3 = v39[0];
  int64_t v4 = v39[3];
  uint64_t v28 = v39[1];
  int64_t v29 = (unint64_t)(v39[2] + 64) >> 6;
  unint64_t v5 = v39[4];
  unint64_t v6 = &__src[40];
  uint64_t v7 = &__dst[40];
  unint64_t v8 = &v33;
  unint64_t result = sub_25E0DB3C0();
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v30 = (v5 - 1) & v5;
        unint64_t v10 = __clz(__rbit64(v5)) | (v4 << 6);
      }
      else
      {
        int64_t v11 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_31;
        }
        if (v11 >= v29) {
          goto LABEL_28;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v11);
        int64_t v13 = v4 + 1;
        if (!v12)
        {
          int64_t v13 = v4 + 2;
          if (v4 + 2 >= v29) {
            goto LABEL_28;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v4 + 3;
            if (v4 + 3 >= v29) {
              goto LABEL_28;
            }
            unint64_t v12 = *(void *)(v28 + 8 * v13);
            if (!v12)
            {
              int64_t v13 = v4 + 4;
              if (v4 + 4 >= v29) {
                goto LABEL_28;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              if (!v12)
              {
                int64_t v13 = v4 + 5;
                if (v4 + 5 >= v29) {
                  goto LABEL_28;
                }
                unint64_t v12 = *(void *)(v28 + 8 * v13);
                if (!v12)
                {
                  int64_t v14 = v4 + 6;
                  while (v14 < v29)
                  {
                    unint64_t v12 = *(void *)(v28 + 8 * v14++);
                    if (v12)
                    {
                      int64_t v13 = v14 - 1;
                      goto LABEL_22;
                    }
                  }
LABEL_28:
                  sub_25E040118();
                  return (unint64_t)v2;
                }
              }
            }
          }
        }
LABEL_22:
        uint64_t v30 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
        int64_t v4 = v13;
      }
      sub_25E040050(*(void *)(v3 + 48) + 40 * v10, (uint64_t)__src);
      sub_25E0400AC(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v6);
      memcpy(__dst, __src, sizeof(__dst));
      swift_dynamicCast();
      sub_25E040108(v7, v8);
      sub_25E040108(v8, v35);
      sub_25E040108(v35, v36);
      sub_25E040108(v36, &v34);
      unint64_t result = sub_25E0BB0AC();
      unint64_t v15 = result;
      if ((v16 & 1) == 0) {
        break;
      }
      unint64_t v17 = v8;
      uint64_t v18 = v4;
      uint64_t v19 = v3;
      unint64_t v20 = v7;
      unint64_t v21 = v6;
      v22 = (void *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      void *v22 = v31;
      v22[1] = v32;
      unint64_t v6 = v21;
      uint64_t v7 = v20;
      uint64_t v3 = v19;
      int64_t v4 = v18;
      unint64_t v8 = v17;
      v23 = (_OWORD *)(v2[7] + 32 * v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      unint64_t result = (unint64_t)sub_25E040108(&v34, v23);
      unint64_t v5 = v30;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v24 = (void *)(v2[6] + 16 * result);
    *uint64_t v24 = v31;
    v24[1] = v32;
    unint64_t result = (unint64_t)sub_25E040108(&v34, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v25 = v2[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_30;
    }
    v2[2] = v27;
    unint64_t v5 = v30;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

id Device.isLocked.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCF0]);
}

id Device.isStoreDemo.getter()
{
  return sub_25E03FA04(MEMORY[0x263F8BCF8]);
}

id sub_25E03FA04(uint64_t (*a1)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void Device.osBuildVersion.getter()
{
}

uint64_t Device.isInternalCarry.getter()
{
  if (os_variant_has_internal_content()
    && (id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]),
        (id v1 = sub_25E03FD1C(0x6C7070612E6D6F63, 0xEC00000061642E65)) != 0))
  {
    id v2 = v1;
    uint64_t v3 = (void *)sub_25E0DB4D0();
    id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (!v4)
    {
      int64_t v11 = (void *)sub_25E0DB4D0();
      id v9 = objc_msgSend(v2, sel_stringForKey_, v11);

      if (v9)
      {
        sub_25E0DB500();

        sub_25E0DB560();
        swift_bridgeObjectRelease();
        unint64_t v12 = sub_25E03FD80();
        uint64_t v19 = OUTLINED_FUNCTION_1_1(v12, MEMORY[0x263F8D310], v13, v14, v15, v16, v17, v18, 0x7972726163);
        if (v19)
        {
          swift_bridgeObjectRelease();

          LOBYTE(v9) = 1;
          return v9 & 1;
        }
        LOBYTE(v9) = OUTLINED_FUNCTION_1_1(v19, MEMORY[0x263F8D310], v20, v21, v22, v23, v24, v25, 0x756F62616B6C6177);
        swift_bridgeObjectRelease();
      }

      return v9 & 1;
    }
    uint64_t v5 = sub_25E0DB500();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    LOBYTE(v9) = v8 == 0;
  }
  else
  {
    LOBYTE(v9) = 0;
  }
  return v9 & 1;
}

void Device.uniqueID.getter()
{
}

void Device.macAddress.getter()
{
}

void sub_25E03FCA0(uint64_t (*a1)(void))
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = (id)a1();

    if (v4)
    {
      sub_25E0DB500();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_25E03FD1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_25E0DB4D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

unint64_t sub_25E03FD80()
{
  unint64_t result = qword_26A6D4420;
  if (!qword_26A6D4420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4420);
  }
  return result;
}

unint64_t sub_25E03FDD0()
{
  unint64_t result = qword_26A6D4428;
  if (!qword_26A6D4428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4428);
  }
  return result;
}

ValueMetadata *type metadata accessor for Device()
{
  return &type metadata for Device;
}

unint64_t *initializeBufferWithCopyOfBuffer for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_25E03EFC0(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for Device.Family(unint64_t *a1)
{
  return sub_25E03EFDC(*a1);
}

unint64_t *assignWithCopy for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_25E03EFC0(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_25E03EFDC(v4);
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for Device.Family(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_25E03EFDC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Device.Family(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for Device.Family(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_25E03FF88(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_25E03FFA4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_25E03FFB4(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for Device.Family()
{
  return &type metadata for Device.Family;
}

void sub_25E03FFF0()
{
  if (!qword_26A6D4430)
  {
    unint64_t v0 = sub_25E0DC1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4430);
    }
  }
}

uint64_t sub_25E040050(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25E0400AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_25E040108(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_25E040118()
{
  return swift_release();
}

uint64_t sub_25E040120()
{
  sub_25E03EFDC(*(void *)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t SQLDynamicValue.description.getter()
{
  swift_retain();
  SQLDynamicValue.nativeValue.getter((sqlite3_int64 *)&v2);
  swift_release();
  sub_25E03DF3C(&v2, (uint64_t)v3);
  sub_25E03DF54((uint64_t)v3, (uint64_t)&v2);
  sub_25E040684();
  uint64_t v0 = sub_25E0DB550();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v0;
}

sqlite3_value *sub_25E04024C(const sqlite3_value *a1)
{
  unint64_t result = sqlite3_value_dup(a1);
  if (result)
  {
    *(void *)(v1 + 16) = result;
    return (sqlite3_value *)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E040274()
{
  sqlite3_value_free(*(sqlite3_value **)(v0 + 16));

  return swift_deallocClassInstance();
}

BOOL sub_25E0402AC(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_25E0402B8()
{
  return sub_25E0DC4E0();
}

uint64_t sub_25E0402E4()
{
  return sub_25E0DC500();
}

uint64_t sub_25E040328()
{
  return sub_25E0402E4();
}

uint64_t sub_25E04034C()
{
  return sub_25E0402B8();
}

uint64_t sub_25E040370()
{
  return sub_25E0DC500();
}

BOOL sub_25E0403B4(uint64_t *a1, uint64_t *a2)
{
  return sub_25E0402AC(*a1, *a2);
}

uint64_t SQLDynamicValue.value.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t SQLDynamicValue.datatype.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sqlite3_value_type(*(sqlite3_value **)(*(void *)v1 + 16));
  if ((result - 1) > 4) {
    __break(1u);
  }
  else {
    *a1 = 0x4030201uLL >> (8 * (result - 1));
  }
  return result;
}

void SQLDynamicValue.nativeValue.getter(sqlite3_int64 *a1@<X8>)
{
  uint64_t v4 = *v1;
  switch(sqlite3_value_type(*(sqlite3_value **)(*v1 + 16)))
  {
    case 1:
      a1[3] = MEMORY[0x263F8D6C8];
      a1[4] = (sqlite3_int64)&protocol witness table for Int;
      *a1 = sqlite3_value_int64(*(sqlite3_value **)(v4 + 16));
      return;
    case 2:
      a1[3] = MEMORY[0x263F8D5C8];
      a1[4] = (sqlite3_int64)&protocol witness table for Float;
      float v5 = sqlite3_value_double(*(sqlite3_value **)(v4 + 16));
      *(float *)a1 = v5;
      return;
    case 3:
      a1[3] = MEMORY[0x263F8D310];
      a1[4] = (sqlite3_int64)&protocol witness table for String;
      unint64_t v6 = *(sqlite3_value **)(v4 + 16);
      swift_retain();
      unint64_t v7 = sqlite3_value_text(v6);
      sqlite3_value_bytes(v6);
      uint64_t v8 = sub_25E08ADB8((uint64_t)v7);
      goto LABEL_8;
    case 4:
      a1[3] = MEMORY[0x263F06F78];
      a1[4] = sub_25E03DEF0();
      int64_t v11 = *(sqlite3_value **)(v4 + 16);
      swift_retain();
      unint64_t v12 = sqlite3_value_blob(v11);
      int v13 = sqlite3_value_bytes(v11);
      uint64_t v8 = sub_25E08C9C0((uint64_t)v12, v13);
LABEL_8:
      uint64_t v14 = v8;
      sqlite3_int64 v15 = v9;
      swift_release();
      if (v2) {
        goto LABEL_9;
      }
      *a1 = v14;
      a1[1] = v15;
      break;
    case 5:
      a1[3] = (sqlite3_int64)&type metadata for SQLNull;
      a1[4] = sub_25E03E058();
      SQLNull.init(raw:)(*(Swift::OpaquePointer *)(v4 + 16));
      if (!v10) {
        return;
      }
LABEL_9:
      __swift_deallocate_boxed_opaque_existential_1((uint64_t)a1);
      break;
    default:
      __break(1u);
      JUMPOUT(0x25E0405BCLL);
  }
}

uint64_t sub_25E0405D0(uint64_t a1)
{
  sub_25E04062C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25E04062C()
{
  if (!qword_26A6D4438)
  {
    sub_25E040684();
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4438);
    }
  }
}

unint64_t sub_25E040684()
{
  unint64_t result = qword_26A6D42A0;
  if (!qword_26A6D42A0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D42A0);
  }
  return result;
}

void static SQLDynamicValue.dataType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

sqlite3_value *SQLDynamicValue.init(raw:)()
{
  OUTLINED_FUNCTION_1_2();
  swift_allocObject();
  unint64_t result = OUTLINED_FUNCTION_0_1();
  void *v0 = result;
  return result;
}

uint64_t SQLDynamicValue.hash(into:)()
{
  return sub_25E0DC4E0();
}

BOOL static SQLDynamicValue.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDynamicValue.hashValue.getter()
{
  return sub_25E0DC500();
}

sqlite3_value *sub_25E0407B4()
{
  return SQLDynamicValue.init(raw:)();
}

uint64_t SQLDynamicValue.debugSQL.getter()
{
  SQLDynamicValue.nativeValue.getter(v3);
  uint64_t v1 = v4;
  uint64_t v0 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t))(*(void *)(v0 + 8) + 16))(v1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

sqlite3_value *SQLDynamicValue.init(functionArgument:)()
{
  OUTLINED_FUNCTION_1_2();
  swift_allocObject();
  unint64_t result = OUTLINED_FUNCTION_0_1();
  void *v0 = result;
  return result;
}

sqlite3_value *sub_25E0408C4()
{
  return SQLDynamicValue.init(functionArgument:)();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLDynamicValue.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_value((sqlite3_context *)a1._rawValue, *(sqlite3_value **)(*(void *)v1 + 16));
}

void sub_25E040910(Swift::OpaquePointer a1)
{
}

sqlite3_stmt *SQLDynamicValue.init(statement:index:)@<X0>(uint64_t iCol@<X1>, sqlite3_stmt *result@<X0>, sqlite3_stmt **a3@<X8>)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (iCol > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (sqlite3_column_value(result, iCol))
  {
    type metadata accessor for SQLDynamicValue.Box();
    swift_allocObject();
    unint64_t result = OUTLINED_FUNCTION_0_1();
    *a3 = result;
  }
  else
  {
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v4 = 0xD000000000000022;
    v4[1] = 0x800000025E0E3A00;
    return (sqlite3_stmt *)swift_willThrow();
  }
  return result;
}

sqlite3_stmt *sub_25E040A4C@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X8>)
{
  return SQLDynamicValue.init(statement:index:)(a2, a1, a3);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLDynamicValue.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  if (sqlite3_bind_value((sqlite3_stmt *)to._rawValue, index, *(const sqlite3_value **)(*(void *)v2 + 16)))
  {
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v3 = 0xD00000000000001ELL;
    v3[1] = 0x800000025E0E3A30;
    swift_willThrow();
  }
}

void sub_25E040B68(Swift::OpaquePointer a1, Swift::Int a2)
{
}

uint64_t type metadata accessor for SQLDynamicValue.Box()
{
  return self;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_25E040BE8(uint64_t a1)
{
  unint64_t result = sub_25E040C10();
  *(void *)(a1 + 32) = result;
  return result;
}

unint64_t sub_25E040C10()
{
  unint64_t result = qword_26A6D4440;
  if (!qword_26A6D4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4440);
  }
  return result;
}

unint64_t sub_25E040C60()
{
  unint64_t result = qword_26A6D4448;
  if (!qword_26A6D4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4448);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLDynamicValue()
{
  return &type metadata for SQLDynamicValue;
}

unint64_t sub_25E040CC0()
{
  unint64_t result = qword_26A6D4450;
  if (!qword_26A6D4450)
  {
    type metadata accessor for SQLDynamicValue.Box();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4450);
  }
  return result;
}

uint64_t SQLDatabase.results(dynamicValues:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(unsigned char *)(v3 + 64) = *(unsigned char *)(a2 + 32);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E040D3C, v2);
}

uint64_t sub_25E040D3C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t result = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (result)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_104(v2, *(void *)(v0 + 16));
    OUTLINED_FUNCTION_28_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_15();
    return v4(v3, v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25E040DC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E04A1F0;
  SQLExecution.execute(dynamicOnce:)();
}

uint64_t sub_25E040E6C(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 128);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 176) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E040F1C;
  return SQLDatabase.Transaction.results(dynamicValues:)(v1 + 80, v1 + 128);
}

uint64_t sub_25E040F1C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E040FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_14_0();
  v10[8] = sub_25E049840;
  v10[9] = 0;
  swift_retain();
  OUTLINED_FUNCTION_49();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_20_0();
  v10[29] = v11;
  *uint64_t v11 = v10;
  v11[1] = sub_25E0410B0;
  OUTLINED_FUNCTION_75();
  return v12(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_25E0410B0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 248) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E0411A4()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E0411AC()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_109_0();
  OUTLINED_FUNCTION_15();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E04121C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_69();
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_25E04128C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E041300(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 128);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 176) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E0413B0;
  return SQLDatabase.results(dynamicValues:)(v1 + 80, v1 + 128);
}

uint64_t sub_25E0413B0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E041490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_14_0();
  v10[8] = sub_25E049840;
  v10[9] = 0;
  swift_retain();
  OUTLINED_FUNCTION_49();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_20_0();
  v10[29] = v11;
  *uint64_t v11 = v10;
  v11[1] = sub_25E041544;
  OUTLINED_FUNCTION_75();
  return v12(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_25E041544()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 248) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E041638()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_69();
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_25E0416A8(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  sub_25E03E7AC(a1, v2 + 80);
  long long v3 = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v2 + 160) = v3;
  *(unsigned char *)(v2 + 113) = *(unsigned char *)(v2 + 112);
  return MEMORY[0x270FA2498](sub_25E041724, v1, 0);
}

uint64_t sub_25E041724()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_retain();
  sub_25E04A150(v1);
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E04178C()
{
  OUTLINED_FUNCTION_17();
  long long v1 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 144);
  char v2 = *(unsigned char *)(v0 + 113);
  uint64_t v3 = *(void *)(v0 + 128);
  *(void *)(v0 + 16) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 40) = v1;
  *(unsigned char *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_25E049840;
  *(void *)(v0 + 72) = 0;
  swift_retain();
  sub_25E04A150(v3);
  uint64_t v4 = (void *)OUTLINED_FUNCTION_20_0();
  *(void *)(v0 + 176) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25E04185C;
  return v6();
}

uint64_t sub_25E04185C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 184) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 192) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E041950()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_15();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0419C4()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 120) = *(void *)(v0 + 184);
  sub_25E04986C();
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E041A44()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

void SQLExecution.execute(dynamicOnce:)()
{
  OUTLINED_FUNCTION_25_1();
  v1[8] = OUTLINED_FUNCTION_101(v2);
  char v4 = *(unsigned char *)(v3 + 32);
  *(_OWORD *)(v0 + 144) = v5;
  *(unsigned char *)(v0 + 160) = v4;
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_64(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25E0413B0;
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_75();
  __asm { BRAA            X5, X16 }
}

void sub_25E041BAC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E04A1F0;
  SQLExecution.execute(dynamicAll:)();
}

uint64_t sub_25E041C58(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 112);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 152) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E041D08;
  return SQLDatabase.Transaction.results(dynamicValues:)(v1 + 64, v1 + 112);
}

uint64_t sub_25E041D08()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *long long v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E041DE8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_18_0();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E041E78;
  return v3();
}

uint64_t sub_25E041E78()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 176) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 184) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E041F6C()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E041F74()
{
  OUTLINED_FUNCTION_12();
  sub_25E03DE44(v0 + 16);
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(void *)(v0 + 184);
  return v1(v2);
}

uint64_t sub_25E041FD4()
{
  OUTLINED_FUNCTION_12();
  sub_25E03DE44(v0 + 16);
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E042030(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 112);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 152) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E0420E0;
  return SQLDatabase.results(dynamicValues:)(v1 + 64, v1 + 112);
}

uint64_t sub_25E0420E0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0421C0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_50();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_18_0();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E042250;
  return v3();
}

uint64_t sub_25E042250()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 176) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 184) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E042344(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v1;
  sub_25E03E7AC(a1, v2 + 64);
  long long v3 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v2 + 136) = v3;
  *(unsigned char *)(v2 + 57) = *(unsigned char *)(v2 + 96);
  return MEMORY[0x270FA2498](sub_25E0423C4, v1, 0);
}

uint64_t sub_25E0423C4()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(v0 + 104);
  *(void *)(v0 + 16) = *(void *)(v0 + 112);
  char v2 = *(unsigned char *)(v0 + 57);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 136);
  *(unsigned char *)(v0 + 56) = v2;
  swift_retain();
  sub_25E04A150(v1);
  long long v3 = (void *)OUTLINED_FUNCTION_20_0();
  *(void *)(v0 + 152) = v3;
  *long long v3 = v0;
  v3[1] = sub_25E042484;
  return v5();
}

uint64_t sub_25E042484()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 160) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 168) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E042578()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_15();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0425E0()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

void SQLExecution.execute(dynamicAll:)()
{
  OUTLINED_FUNCTION_25_1();
  v1[7] = OUTLINED_FUNCTION_101(v2);
  char v4 = *(unsigned char *)(v3 + 32);
  *(_OWORD *)(v0 + 128) = v5;
  *(unsigned char *)(v0 + 144) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_25E0420E0;
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_75();
  __asm { BRAA            X5, X16 }
}

uint64_t sub_25E042740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v23;
  void *v23 = v14;
  v23[1] = sub_25E04A1EC;
  return SQLExecution.execute<A>(once:)(a1, a2, a3, a6, a4, a7, a5, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t SQLExecution.execute<A>(once:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_74();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  *(void *)(v14 + 240) = v21;
  *(void *)(v14 + 248) = v22;
  *(void *)(v14 + 224) = v23;
  *(void *)(v14 + 232) = v17;
  uint64_t v24 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  if (v17 == 1)
  {
    uint64_t TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    uint64_t v26 = OUTLINED_FUNCTION_71();
    if (v18)
    {
      uint64_t v27 = (void *)v26;
      uint64_t v28 = v18;
      do
      {
        uint64_t v29 = *v24++;
        *v27++ = v29;
        --v28;
      }
      while (v28);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  *(void *)(v14 + 256) = TupleTypeMetadata;
  sub_25E0DBCF0();
  uint64_t v30 = OUTLINED_FUNCTION_71();
  long long v31 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)(v14 + 176) = *(_OWORD *)v20;
  *(void *)(v14 + 264) = v30;
  char v32 = *(unsigned char *)(v20 + 32);
  *(_OWORD *)(v14 + 192) = v31;
  *(unsigned char *)(v14 + 208) = v32;
  OUTLINED_FUNCTION_88(v30, v16);
  uint64_t v47 = (char *)v34 + *v34;
  uint64_t v48 = v33;
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v14 + 272) = v35;
  *uint64_t v35 = v14;
  v35[1] = sub_25E0429F0;
  OUTLINED_FUNCTION_87();
  return v44(v36, v37, v38, v39, v40, v41, v42, v43, a9, v47, v48, a12, a13, a14);
}

uint64_t sub_25E0429F0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *long long v5 = v4;
  *(void *)(v6 + 280) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E042AD0()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 288) = v1;
  *(void *)(v0 + 296) = v2;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  *(void *)(v0 + 304) = v3;
  *(void *)(v0 + 312) = v4;
  uint64_t v5 = *(void *)(v0 + 112);
  *(void *)(v0 + 320) = v5;
  char v6 = *(unsigned char *)(v0 + 120);
  *(void *)(v0 + 128) = v1;
  *(unsigned char *)(v0 + 121) = v6;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 152) = v4;
  *(void *)(v0 + 160) = v5;
  *(unsigned char *)(v0 + 168) = v6;
  uint64_t v7 = type metadata accessor for SQLDatabase.Results();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25E06548C(v7, WitnessTable, v0 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v9;
  type metadata accessor for SQLDatabase.AsyncResultsIterator();
  swift_getWitnessTable();
  *uint64_t v9 = v0;
  v9[1] = sub_25E042C28;
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA1E90](v10, v11, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_25E042C28()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25E042D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_111();
  uint64_t v12 = *(void *)(v10 + 256);
  uint64_t v11 = *(void *)(v10 + 264);
  swift_release();
  OUTLINED_FUNCTION_6();
  sub_25E03E6F4(*(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 48), *(unsigned char *)(v10 + 56));
  swift_release();
  uint64_t v13 = 1;
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) != 1)
  {
    (*(void (**)(void, void))(*(void *)(*(void *)(v10 + 256) - 8) + 32))(*(void *)(v10 + 224), *(void *)(v10 + 264));
    uint64_t v13 = 0;
  }
  __swift_storeEnumTagSinglePayload(*(void *)(v10 + 224), v13, 1, *(void *)(v10 + 256));
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_7_0();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10);
}

uint64_t sub_25E042E00()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E042E5C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_111();
  swift_release();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E042ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v12 + 16) = v19;
  *uint64_t v19 = v12;
  v19[1] = sub_25E04A1F0;
  return SQLExecution.execute<A>(all:)(a1, a2, a5, a3, a6, a4, v20, v21, a9, a10, a11, a12);
}

uint64_t SQLExecution.execute<A>(all:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  v13[7] = OUTLINED_FUNCTION_63(v14);
  *(void *)(v12 + 160) = v15;
  *(void *)(v12 + 168) = v16;
  *(void *)(v12 + 152) = v17;
  char v19 = *(unsigned char *)(v18 + 32);
  *(_OWORD *)(v12 + 128) = v20;
  *(unsigned char *)(v12 + 144) = v19;
  OUTLINED_FUNCTION_88(v18, v21);
  uint64_t v38 = (char *)v23 + *v23;
  uint64_t v39 = v22;
  uint64_t v24 = swift_task_alloc();
  uint64_t v25 = (void *)OUTLINED_FUNCTION_64(v24);
  *uint64_t v25 = v26;
  v25[1] = sub_25E0430AC;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_20();
  return v35(v27, v28, v29, v30, v31, v32, v33, v34, v38, v39, a11, a12);
}

uint64_t sub_25E0430AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E04318C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 192) = v1;
  *(void *)(v0 + 200) = v2;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v0 + 208) = v3;
  *(void *)(v0 + 216) = v4;
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v0 + 224) = v5;
  char v6 = *(unsigned char *)(v0 + 56);
  *(unsigned char *)(v0 + 57) = v6;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v3;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = v5;
  *(unsigned char *)(v0 + 104) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v7;
  type metadata accessor for SQLDatabase.Results();
  swift_getWitnessTable();
  *uint64_t v7 = v0;
  v7[1] = sub_25E04329C;
  OUTLINED_FUNCTION_15();
  return AsyncSequence.collect()(v8, v9);
}

uint64_t sub_25E04329C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *char v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 240) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 248) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E043390()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_109_0();
  OUTLINED_FUNCTION_15();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0433F4()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t SQLExecution.execute<A, each B>(once:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_74();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  *(void *)(v21 + 88) = v26;
  *(void *)(v21 + 96) = v27;
  *(void *)(v21 + 72) = v28;
  *(void *)(v21 + 80) = v22;
  uint64_t v29 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFELL);
  *(void *)(v21 + 56) = v30;
  *(void *)(v21 + 64) = v31;
  if (v22 == 1)
  {
    uint64_t TupleTypeMetadata = *v29;
  }
  else
  {
    uint64_t v33 = OUTLINED_FUNCTION_71();
    if (v23)
    {
      uint64_t v34 = (void *)v33;
      uint64_t v35 = v23;
      do
      {
        uint64_t v36 = *v29++;
        *v34++ = v36;
        --v35;
      }
      while (v35);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  *(void *)(v21 + 104) = TupleTypeMetadata;
  *(void *)(v21 + 112) = *(void *)(TupleTypeMetadata - 8);
  *(void *)(v21 + 120) = swift_task_alloc();
  *(void *)(v21 + 128) = swift_task_alloc();
  *(void *)(v21 + 136) = swift_task_alloc();
  uint64_t v37 = sub_25E0DBCF0();
  *(void *)(v21 + 144) = v37;
  *(void *)(v21 + 152) = *(void *)(v37 - 8);
  *(void *)(v21 + 160) = swift_task_alloc();
  uint64_t v38 = swift_task_alloc();
  __n128 v39 = *(__n128 *)(v25 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)v25;
  *(void *)(v21 + 168) = v38;
  OUTLINED_FUNCTION_84(*(unsigned char *)(v25 + 32), v39);
  uint64_t v40 = swift_task_alloc();
  uint64_t v41 = (void *)OUTLINED_FUNCTION_64(v40);
  *uint64_t v41 = v42;
  v41[1] = sub_25E0436C4;
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_87();
  return v51(v43, v44, v45, v46, v47, v48, v49, v50, a21 + 40, a10, a11, a12);
}

uint64_t sub_25E0436C4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0437A4()
{
  OUTLINED_FUNCTION_72();
  uint64_t v22 = v1;
  OUTLINED_FUNCTION_25_1();
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[13];
  (*(void (**)(uint64_t, void, void))(v0[19] + 16))(v2, v0[21], v0[18]);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) != 1)
  {
    uint64_t v11 = v0[10];
    (*(void (**)(void, void, void))(v0[14] + 32))(v0[17], v0[20], v0[13]);
    v0[24] = OUTLINED_FUNCTION_71();
    uint64_t v12 = OUTLINED_FUNCTION_77();
    v13(v12);
    if (v11)
    {
      do
      {
        OUTLINED_FUNCTION_46();
        uint64_t v14 = OUTLINED_FUNCTION_67();
        v15(v14);
        OUTLINED_FUNCTION_106();
      }
      while (!v16);
    }
    uint64_t v17 = swift_task_alloc();
    uint64_t v18 = (void *)OUTLINED_FUNCTION_76(v17);
    *uint64_t v18 = v19;
    v18[1] = sub_25E043A14;
    OUTLINED_FUNCTION_75();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[7];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0[19] + 8);
  v8(v0[21], v5);
  v8(v4, v5);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v9();
}

uint64_t sub_25E043A14()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v3[26] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = v3[14];
    uint64_t v8 = *(void (**)(void))(v7 + 8);
    v3[27] = v8;
    v3[28] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    OUTLINED_FUNCTION_42_0();
    v8();
    OUTLINED_FUNCTION_42_0();
    v8();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E043B28()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  (*(void (**)(void, void))(v0 + 216))(*(void *)(v0 + 136), *(void *)(v0 + 104));
  uint64_t v3 = OUTLINED_FUNCTION_89();
  v4(v3);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v5();
}

uint64_t sub_25E043C08()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E043C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_22();
  uint64_t v13 = *(void (**)(void))(*(void *)(v12 + 112) + 8);
  OUTLINED_FUNCTION_92();
  v13();
  uint64_t v14 = OUTLINED_FUNCTION_89();
  v15(v14);
  OUTLINED_FUNCTION_92();
  v13();
  OUTLINED_FUNCTION_92();
  v13();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_29();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12);
}

uint64_t SQLExecution.execute<A, each B>(all:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_94();
  OUTLINED_FUNCTION_74();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  *(void *)(v12 + 104) = v19;
  *(void *)(v12 + 112) = v20;
  *(void *)(v12 + 88) = v21;
  *(void *)(v12 + 96) = v15;
  *(void *)(v12 + 80) = v22;
  uint64_t v23 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFELL);
  *(void *)(v12 + 120) = OUTLINED_FUNCTION_71();
  if (v16 == 1)
  {
    uint64_t TupleTypeMetadata = *v23;
  }
  else
  {
    uint64_t v25 = OUTLINED_FUNCTION_71();
    if (v16)
    {
      uint64_t v26 = (void *)v25;
      uint64_t v27 = v16;
      do
      {
        uint64_t v28 = *v23++;
        *v26++ = v28;
        --v27;
      }
      while (v27);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  *(void *)(v12 + 128) = TupleTypeMetadata;
  uint64_t v29 = *(void *)(TupleTypeMetadata - 8);
  *(void *)(v12 + 136) = v29;
  *(void *)(v12 + 144) = *(void *)(v29 + 64);
  *(void *)(v12 + 152) = swift_task_alloc();
  *(void *)(v12 + 160) = swift_task_alloc();
  uint64_t v30 = swift_task_alloc();
  __n128 v31 = *(__n128 *)(v18 + 16);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v18;
  *(void *)(v12 + 168) = v30;
  OUTLINED_FUNCTION_84(*(unsigned char *)(v18 + 32), v31);
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v12 + 176) = v32;
  *uint64_t v32 = v12;
  v32[1] = sub_25E043FA0;
  OUTLINED_FUNCTION_87();
  return v40(v33, v34, v35, v36, v37, v38, v39, v40, v14 + 48, a10, a11, a12);
}

uint64_t sub_25E043FA0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 184) = v4;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_25E044084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  uint64_t v15 = v12[23];
  uint64_t v16 = v12[16];
  v12[7] = sub_25E0DB8C0();
  sub_25E0DB3C0();
  uint64_t v17 = sub_25E0DB840();
  swift_bridgeObjectRelease();
  v12[8] = v17;
  if (v17 == MEMORY[0x2611CDE30](v15, v16))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_97();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_20();
    return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
  }
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_78();
  if (v13)
  {
    (*(void (**)(void, unint64_t, void))(v12[17] + 16))(v12[21], v12[23]+ ((*(unsigned __int8 *)(v12[17] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12[17] + 80))+ *(void *)(v12[17] + 72) * v17, v12[16]);
LABEL_7:
    OUTLINED_FUNCTION_57();
    MEMORY[0x2611CDE40](v12 + 8, v17, v13);
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_task_alloc();
    uint64_t v28 = OUTLINED_FUNCTION_62(v27);
    v29(v28);
    if (v14)
    {
      do
      {
        OUTLINED_FUNCTION_46();
        uint64_t v30 = OUTLINED_FUNCTION_67();
        v31(v30);
        OUTLINED_FUNCTION_105();
      }
      while (!v32);
    }
    a10 = v12[10] + *(int *)v12[10];
    uint64_t v33 = (void *)swift_task_alloc();
    v12[26] = v33;
    *uint64_t v33 = v12;
    v33[1] = sub_25E0442FC;
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_68();
    return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
  }
  uint64_t v34 = v12[18];
  uint64_t result = sub_25E0DBF00();
  if (v34 == 8)
  {
    uint64_t v35 = OUTLINED_FUNCTION_60(result);
    v36(v35);
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0442FC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v3[27] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v3[19];
    uint64_t v7 = v3[20];
    uint64_t v10 = v3 + 16;
    uint64_t v9 = v3[16];
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10[1] + 8);
    v11(v7, v9);
    v11(v8, v9);
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_25E044424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  uint64_t v15 = v12[23];
  uint64_t v16 = v12[16];
  sub_25E0DB940();
  sub_25E0DB900();
  uint64_t v17 = v12[8];
  if (v17 == MEMORY[0x2611CDE30](v15, v16))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_97();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_20();
    return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_99();
  OUTLINED_FUNCTION_78();
  if (v13)
  {
    (*(void (**)(void, unint64_t, void))(v12[17] + 16))(v12[21], v12[23]+ ((*(unsigned __int8 *)(v12[17] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12[17] + 80))+ *(void *)(v12[17] + 72) * v17, v12[16]);
LABEL_7:
    OUTLINED_FUNCTION_57();
    MEMORY[0x2611CDE40](v12 + 8, v17, v13);
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_task_alloc();
    uint64_t v28 = OUTLINED_FUNCTION_62(v27);
    v29(v28);
    if (v14)
    {
      do
      {
        OUTLINED_FUNCTION_46();
        uint64_t v30 = OUTLINED_FUNCTION_67();
        v31(v30);
        OUTLINED_FUNCTION_105();
      }
      while (!v32);
    }
    a10 = v12[10] + *(int *)v12[10];
    uint64_t v33 = (void *)swift_task_alloc();
    v12[26] = v33;
    *uint64_t v33 = v12;
    v33[1] = sub_25E0442FC;
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_68();
    return v20(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
  }
  uint64_t v34 = v12[18];
  uint64_t result = sub_25E0DBF00();
  if (v34 == 8)
  {
    uint64_t v35 = OUTLINED_FUNCTION_60(result);
    v36(v35);
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E044698()
{
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E04471C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void (**)(void))(*(void *)(v0 + 136) + 8);
  OUTLINED_FUNCTION_42_0();
  v1();
  OUTLINED_FUNCTION_42_0();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t SQLExecution.results<A, each B>(for:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)v21;
  *(void *)(v20 + 160) = a19;
  *(void *)(v20 + 168) = a20;
  *(void *)(v20 + 144) = v23;
  *(void *)(v20 + 152) = v24;
  *(void *)(v20 + 128) = v25;
  *(void *)(v20 + 136) = v26;
  *(void *)(v20 + 112) = v27;
  *(void *)(v20 + 120) = v28;
  *(void *)(v20 + 104) = v29;
  char v30 = *(unsigned char *)(v21 + 32);
  *(_OWORD *)(v20 + 80) = v22;
  *(unsigned char *)(v20 + 96) = v30;
  OUTLINED_FUNCTION_88(v29, a19);
  uint64_t v31 = swift_task_alloc();
  char v32 = (void *)OUTLINED_FUNCTION_64(v31);
  *char v32 = v33;
  v32[1] = sub_25E0448F4;
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_20();
  return v42(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10);
}

uint64_t sub_25E0448F4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0449D4()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  char v6 = *(unsigned char *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 16);
  long long v12 = *(_OWORD *)(v0 + 24);
  long long v13 = *(_OWORD *)(v0 + 40);
  char v14 = v6;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v1;
  long long v10 = *(_OWORD *)(v0 + 152);
  *(void *)(v7 + 32) = swift_allocateMetadataPack();
  *(_OWORD *)(v7 + 40) = v10;
  *(void *)(v7 + 56) = swift_allocateWitnessTablePack();
  *(void *)(v7 + 64) = v5;
  *(void *)(v7 + 72) = v2;
  sub_25E063DE4((uint64_t)&v11, (uint64_t)&unk_26A6D44A8, v7, v4);
  swift_retain();
  OUTLINED_FUNCTION_17_0();
  return v8();
}

uint64_t sub_25E044B08()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_25E044B20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a5;
  v7[6] = a7;
  v7[3] = a3;
  v7[4] = a4;
  long long v10 = (uint64_t *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  v7[2] = a1;
  if (a5 == 1)
  {
    uint64_t TupleTypeMetadata = *v10;
  }
  else
  {
    uint64_t v12 = swift_task_alloc();
    if (a5)
    {
      long long v13 = v10;
      char v14 = (void *)v12;
      uint64_t v15 = a5;
      do
      {
        uint64_t v16 = *v13++;
        *v14++ = v16;
        --v15;
      }
      while (v15);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v7[7] = TupleTypeMetadata;
  v7[8] = *(void *)(TupleTypeMetadata - 8);
  v7[9] = swift_task_alloc();
  v7[10] = swift_task_alloc();
  uint64_t v17 = swift_task_alloc();
  v7[11] = v17;
  if (a5)
  {
    uint64_t v18 = v17;
    uint64_t v19 = (int *)(TupleTypeMetadata + 32);
    uint64_t v20 = a5;
    do
    {
      if (a5 == 1) {
        int v21 = 0;
      }
      else {
        int v21 = *v19;
      }
      uint64_t v23 = *v10++;
      uint64_t v22 = v23;
      uint64_t v24 = *a2++;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18 + v21, v24);
      v19 += 4;
      --v20;
    }
    while (v20);
  }
  return MEMORY[0x270FA2498](sub_25E044CEC, 0, 0);
}

uint64_t sub_25E044CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_25_1();
  uint64_t v10 = v9[5];
  v9[12] = OUTLINED_FUNCTION_71();
  uint64_t v11 = OUTLINED_FUNCTION_77();
  v12(v11);
  if (v10)
  {
    do
    {
      OUTLINED_FUNCTION_46();
      uint64_t v13 = OUTLINED_FUNCTION_67();
      v14(v13);
      OUTLINED_FUNCTION_106();
    }
    while (!v15);
  }
  uint64_t v26 = v9[3] + *(int *)v9[3];
  uint64_t v16 = (void *)swift_task_alloc();
  v9[13] = v16;
  *uint64_t v16 = v9;
  v16[1] = sub_25E044E54;
  OUTLINED_FUNCTION_75();
  return v19(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t sub_25E044E54()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *char v6 = v5;
  v3[14] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v7 = v3[8];
    uint64_t v8 = *(void (**)(void))(v7 + 8);
    v3[15] = v8;
    v3[16] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    OUTLINED_FUNCTION_42_0();
    v8();
    OUTLINED_FUNCTION_42_0();
    v8();
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E044F68()
{
  OUTLINED_FUNCTION_17();
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 88), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E044FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 + 64) + 8);
  OUTLINED_FUNCTION_86();
  v11();
  OUTLINED_FUNCTION_86();
  v11();
  OUTLINED_FUNCTION_86();
  v11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_0();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t SQLExecution.execute<A>(once:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_40_0(v13, v14);
  uint64_t v28 = *(void *)(v15 + 40) + **(int **)(v15 + 40);
  uint64_t v29 = v15 + 40;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v12 + 56) = v16;
  *uint64_t v16 = v12;
  v16[1] = sub_25E045198;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_20();
  return v25(v17, v18, v19, v20, v21, v22, v23, v24, v28, v29, a11, a12);
}

uint64_t sub_25E045198()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E045294()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void SQLExecution.execute<A>(all:of:)()
{
  OUTLINED_FUNCTION_22();
  v1[1] = OUTLINED_FUNCTION_63(v2);
  OUTLINED_FUNCTION_84(*(unsigned char *)(v3 + 32), v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E0453BC;
  OUTLINED_FUNCTION_68();
  __asm { BRAA            X7, X16 }
}

uint64_t sub_25E0453BC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v12(v3);
  }
}

uint64_t SQLExecution.results<A>(for:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_40_0(v13, v14);
  OUTLINED_FUNCTION_88(v15, v16);
  uint64_t v31 = (char *)v18 + *v18;
  uint64_t v32 = v17;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v12 + 56) = v19;
  *uint64_t v19 = v12;
  v19[1] = sub_25E0455AC;
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_20();
  return v28(v20, v21, v22, v23, v24, v25, v26, v27, v31, v32, a11, a12);
}

uint64_t sub_25E0455AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t SQLDatabase.Transaction.execute(_:)(uint64_t a1)
{
  *(void *)(v2 + 56) = v1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 80) = v3;
  *(unsigned char *)(v2 + 49) = *(unsigned char *)(a1 + 32);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0456D4, v1);
}

uint64_t sub_25E0456D4()
{
  OUTLINED_FUNCTION_17();
  unsigned __int8 v1 = *(unsigned char *)(v0 + 49);
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 56) + 128);
  __n128 v2 = *(__n128 *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  OUTLINED_FUNCTION_84(v1, v2);
  swift_retain();
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *long long v3 = v0;
  v3[1] = sub_25E045790;
  OUTLINED_FUNCTION_98();
  return sub_25E0458B8();
}

uint64_t sub_25E045790()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 56);
    return MEMORY[0x270FA2498](sub_25E03A7E0, v7, 0);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v8();
  }
}

uint64_t sub_25E0458B8()
{
  OUTLINED_FUNCTION_17();
  *(void *)(v1 + 56) = v0;
  sub_25E03E7AC(v2, v1 + 16);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_20_0();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25E045974;
  return v5();
}

uint64_t sub_25E045974()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 56);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v9 = sub_25E045A84;
  }
  else {
    uint64_t v9 = sub_25E045A6C;
  }
  return MEMORY[0x270FA2498](v9, v5, 0);
}

uint64_t sub_25E045A6C()
{
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E045A84()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLDatabase.Transaction.results(dynamicValues:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(unsigned char *)(v3 + 64) = *(unsigned char *)(a2 + 32);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E045ACC, v2);
}

uint64_t sub_25E045ACC()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_91();
  uint64_t v6 = *(void *)(v3 + 16);
  *(void *)uint64_t v6 = *(void *)(*(void *)(v3 + 24) + 128);
  *(void *)(v6 + 8) = v5;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v0;
  *(unsigned char *)(v6 + 40) = v1;
  swift_retain();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_15();
  return v8(v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t SQLDatabase.Transaction.results<each A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_58(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E045B6C, v5);
}

uint64_t sub_25E045B6C()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_93(*(void *)(v0 + 16), v3, v4, v5, v6, v7, v8);
  swift_retain();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E045C00(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25E04A1EC;
  return SQLDatabase.Transaction.execute(_:)(a1);
}

uint64_t sub_25E045C98(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4630 + dword_26A6D4630);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E04A208;
  return v4(v1 + 16);
}

uint64_t sub_25E045D50(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4628 + dword_26A6D4628);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E04A208;
  return v4(v1 + 16);
}

uint64_t sub_25E045E08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25E04A1EC;
  return SQLDatabase.Transaction.results(dynamicValues:)(a1, a2);
}

uint64_t sub_25E045EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_25E04A1EC;
  return SQLDatabase.Transaction.results<each A>(for:)(a1, a2, a3, a4, a5);
}

uint64_t SQLDatabase.execute(_:)(uint64_t a1)
{
  *(void *)(v2 + 56) = v1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 80) = v3;
  *(unsigned char *)(v2 + 49) = *(unsigned char *)(a1 + 32);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E045FAC, v1);
}

void sub_25E045FAC()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  *(void *)(v0 + 96) = v1;
  if (v1)
  {
    unsigned __int8 v2 = *(unsigned char *)(v0 + 49);
    __n128 v3 = *(__n128 *)(v0 + 80);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
    OUTLINED_FUNCTION_84(v2, v3);
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25E04607C;
    OUTLINED_FUNCTION_98();
    sub_25E0458B8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25E04607C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 56);
    return MEMORY[0x270FA2498](sub_25E04A1D8, v7, 0);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v8();
  }
}

uint64_t SQLDatabase.results<each A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_58(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0461C8, v5);
}

void sub_25E0461C8()
{
  OUTLINED_FUNCTION_74();
  uint64_t v11 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (v1)
  {
    char v2 = *(unsigned char *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 16);
    v9[0] = *(void *)(v0 + 56);
    uint64_t v6 = v9[0];
    v9[1] = v5;
    v9[2] = v4;
    v9[3] = v3;
    char v10 = v2;
    sub_25E063E0C(v1, (uint64_t)v9, v7);
    swift_retain();
    sub_25E03DDF4(v6, v5, v4, v3, v2);
    OUTLINED_FUNCTION_17_0();
    v8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25E046298()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  uint64_t v3 = OUTLINED_FUNCTION_98();
  return SQLDatabase.execute(_:)(v3);
}

uint64_t sub_25E046324(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4620 + dword_26A6D4620);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E04A208;
  return v4(v1 + 16);
}

uint64_t sub_25E0463DC(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4618 + dword_26A6D4618);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E04A208;
  return v4(v1 + 16);
}

uint64_t sub_25E046494(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25E04A1EC;
  return SQLDatabase.results(dynamicValues:)(a1, a2);
}

uint64_t sub_25E046540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_25E04A1EC;
  return SQLDatabase.results<each A>(for:)(a1, a2, a3, a4, a5);
}

uint64_t sub_25E04660C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 96) = a2;
  *(void *)(v3 + 104) = a3;
  return MEMORY[0x270FA2498](sub_25E046628, a2, 0);
}

const char *sub_25E046628()
{
  OUTLINED_FUNCTION_22();
  uint64_t v26 = v0;
  for (uint64_t i = sub_25E04E484(); ; uint64_t i = sub_25E04E484())
  {
    sub_25E0BF968(i, (uint64_t)&v24);
    if (v25 != 1 && (v25 != 14 || v24 != 16)) {
      break;
    }
  }
  uint64_t v3 = (sqlite3 **)(*(void *)(v0 + 96) + 136);
  swift_beginAccess();
  uint64_t v4 = sqlite3_extended_errcode(*v3);
  uint64_t result = sqlite3_errstr(i);
  if (result)
  {
    uint64_t v6 = sub_25E0DB640();
    uint64_t v8 = v7;
    uint64_t result = sqlite3_errmsg(*v3);
    if (result)
    {
      uint64_t v9 = sub_25E0DB640();
      uint64_t v11 = v10;
      sub_25E04A188();
      uint64_t v12 = (void *)swift_allocError();
      uint64_t v14 = v13;
      sub_25E0BF968(v4, (uint64_t)&v24);
      int v15 = v24;
      char v16 = v25;
      *(_DWORD *)uint64_t v14 = v4;
      *(_DWORD *)(v14 + 4) = v15;
      *(unsigned char *)(v14 + 8) = v16;
      *(void *)(v14 + 16) = v6;
      *(void *)(v14 + 24) = v8;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      swift_willThrow();
      *(void *)(v0 + 88) = v12;
      id v17 = v12;
      sub_25E04986C();
      OUTLINED_FUNCTION_89();
      if (!swift_dynamicCast()) {
        goto LABEL_14;
      }
      int v18 = *(_DWORD *)(v0 + 20);
      char v19 = *(unsigned char *)(v0 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v22 = v18;
      char v23 = v19;
      int v24 = 17;
      char v25 = 14;
      if (static SQLError.Code.== infix(_:_:)(&v22, &v24))
      {
        MEMORY[0x2611CF510](v12);
        MEMORY[0x2611CF510](*(void *)(v0 + 88));
        OUTLINED_FUNCTION_17_0();
      }
      else
      {
LABEL_14:
        MEMORY[0x2611CF510](*(void *)(v0 + 88));
        OUTLINED_FUNCTION_9();
      }
      OUTLINED_FUNCTION_68();
      __asm { BRAA            X1, X16 }
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E046834(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v4;
  *(unsigned char *)(v3 + 64) = *(unsigned char *)(a2 + 32);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E046860, v2);
}

uint64_t sub_25E046860()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_104(*(void *)(v0 + 24), *(void *)(v0 + 16));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_15();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25E0468C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_58(a1, a2, a3, a4, a5);
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0468EC, v5);
}

uint64_t sub_25E0468EC()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_93(*(void *)(v0 + 16), v3, v4, v5, v6, v7, v8);
  swift_retain();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E04697C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  OUTLINED_FUNCTION_98();
  return sub_25E0458B8();
}

uint64_t sub_25E046A08(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4610 + dword_26A6D4610);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E04A208;
  return v4(v1 + 16);
}

uint64_t sub_25E046AC0(uint64_t a1)
{
  sub_25E03E7AC(a1, v1 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D4608 + dword_26A6D4608);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_25E046B78;
  return v4(v1 + 16);
}

uint64_t sub_25E046B78()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_70();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_25E046C48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25E04A1EC;
  return sub_25E046834(a1, a2);
}

uint64_t sub_25E046CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char v23 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v23;
  void *v23 = v14;
  v23[1] = sub_25E046DD4;
  return SQLExecution.execute<A>(once:)(a1, a2, a3, a6, a4, a7, a5, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_25E046DD4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E046E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  char v19 = (void *)swift_task_alloc();
  *(void *)(v12 + 16) = v19;
  *char v19 = v12;
  v19[1] = sub_25E046F6C;
  return SQLExecution.execute<A>(all:)(a1, a2, a5, a3, a6, a4, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_25E046F6C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_70();
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_25E04703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_25E04A1EC;
  return sub_25E0468C8(a1, a2, a3, a4, a5);
}

uint64_t sub_25E047108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = *((unsigned char *)v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = sub_25E049840;
  *(void *)(a1 + 56) = 0;
  swift_retain();
  uint64_t v8 = OUTLINED_FUNCTION_89();

  return sub_25E03DDF4(v8, v9, v5, v6, v7);
}

uint64_t sub_25E04718C()
{
  *(void *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0471A8, 0);
}

uint64_t sub_25E0471A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_4();
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_26_0();
      swift_retain();
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = (void *)OUTLINED_FUNCTION_82(v12);
      *uint64_t v13 = v14;
      v13[1] = sub_25E0473D0;
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_7_0();
      return v18(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
    }
    else
    {
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_7_0();
      return v30(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10);
    }
  }
  else
  {
    OUTLINED_FUNCTION_13_0(v10);
    OUTLINED_FUNCTION_27_0();
    uint64_t v24 = swift_task_alloc();
    uint64_t v25 = (void *)OUTLINED_FUNCTION_81_0(v24);
    *uint64_t v25 = v26;
    v25[1] = sub_25E0472F0;
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E0472F0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_85(v5);
  if (!v0) {
    OUTLINED_FUNCTION_39();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E0473D0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 192) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 224) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

#error "25E04753C: call analysis failed (funcsize=38)"

uint64_t sub_25E047564()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 208) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 216) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E047658()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0476BC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_59();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25E047724()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_59();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E047784()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_25E0477F0()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_41();
  sub_25E04986C();
  if ((OUTLINED_FUNCTION_53() & 1) != 0
    && (OUTLINED_FUNCTION_36_0(),
        uint64_t v1 = swift_bridgeObjectRelease(),
        (OUTLINED_FUNCTION_10_0(v1, v2, v3, v4, v5, v6, v7, v8, v14, *(int *)v15, v15[4], *(int *)v16, v16[4]) & 1) != 0))
  {
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_56();
    sub_25E0DB3C0();
    uint64_t v9 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](*(void *)(v0 + 104));
    OUTLINED_FUNCTION_9();
    return v12();
  }
}

uint64_t sub_25E0478DC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_79(v1[29], v1[30]);
  v1[31] = v0;
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E047964()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_96();
  swift_release();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_33();
  uint64_t v0 = OUTLINED_FUNCTION_107();
  return v1(v0);
}

uint64_t sub_25E0479C8()
{
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  MEMORY[0x2611CF510](*(void *)(v0 + 104));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E047A40()
{
  *(void *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E047A5C, 0);
}

uint64_t sub_25E047A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_4();
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_26_0();
      swift_retain();
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = (void *)OUTLINED_FUNCTION_82(v12);
      *uint64_t v13 = v14;
      v13[1] = sub_25E047C84;
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_7_0();
    }
    else
    {
      OUTLINED_FUNCTION_51();
      OUTLINED_FUNCTION_7_0();
    }
    return v18(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_13_0(v10);
    OUTLINED_FUNCTION_27_0();
    uint64_t v23 = swift_task_alloc();
    uint64_t v24 = (void *)OUTLINED_FUNCTION_81_0(v23);
    *uint64_t v24 = v25;
    v24[1] = sub_25E047BA4;
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E047BA4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_85(v5);
  if (!v0) {
    OUTLINED_FUNCTION_39();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E047C84()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 99) = v3;
    *(void *)(v7 + 224) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

#error "25E047DF8: call analysis failed (funcsize=38)"

uint64_t sub_25E047E20()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 98) = v3;
    *(void *)(v7 + 216) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E047F1C()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_41();
  sub_25E04986C();
  if ((OUTLINED_FUNCTION_53() & 1) != 0
    && (OUTLINED_FUNCTION_36_0(),
        uint64_t v1 = swift_bridgeObjectRelease(),
        (OUTLINED_FUNCTION_10_0(v1, v2, v3, v4, v5, v6, v7, v8, v14, *(int *)v15, v15[4], *(int *)v16, v16[4]) & 1) != 0))
  {
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_56();
    sub_25E0DB3C0();
    uint64_t v9 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](*(void *)(v0 + 104));
    OUTLINED_FUNCTION_9();
    return v12();
  }
}

uint64_t sub_25E048008()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_79(v1[29], v1[30]);
  v1[31] = v0;
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E048090()
{
  *(void *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0480AC, 0);
}

uint64_t sub_25E0480AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_4();
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_26_0();
      swift_retain();
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = (void *)OUTLINED_FUNCTION_82(v12);
      *uint64_t v13 = v14;
      v13[1] = sub_25E0482D4;
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_7_0();
    }
    else
    {
      OUTLINED_FUNCTION_51();
      OUTLINED_FUNCTION_7_0();
    }
    return v18(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
  }
  else
  {
    OUTLINED_FUNCTION_13_0(v10);
    OUTLINED_FUNCTION_27_0();
    uint64_t v23 = swift_task_alloc();
    uint64_t v24 = (void *)OUTLINED_FUNCTION_81_0(v23);
    *uint64_t v24 = v25;
    v24[1] = sub_25E0481F4;
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E0481F4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_85(v5);
  if (!v0) {
    OUTLINED_FUNCTION_39();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E0482D4()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 99) = v3;
    *(void *)(v7 + 224) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

#error "25E048448: call analysis failed (funcsize=38)"

uint64_t sub_25E048470()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 98) = v3;
    *(void *)(v7 + 216) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E04856C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_59();
  swift_release();
  OUTLINED_FUNCTION_102();
  return v0();
}

uint64_t sub_25E0485D0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_102();
  return v0();
}

uint64_t sub_25E048638()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_41();
  sub_25E04986C();
  if ((OUTLINED_FUNCTION_53() & 1) != 0
    && (OUTLINED_FUNCTION_36_0(),
        uint64_t v1 = swift_bridgeObjectRelease(),
        (OUTLINED_FUNCTION_10_0(v1, v2, v3, v4, v5, v6, v7, v8, v14, *(int *)v15, v15[4], *(int *)v16, v16[4]) & 1) != 0))
  {
    OUTLINED_FUNCTION_95();
    OUTLINED_FUNCTION_56();
    sub_25E0DB3C0();
    uint64_t v9 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](*(void *)(v0 + 104));
    OUTLINED_FUNCTION_9();
    return v12();
  }
}

uint64_t sub_25E048724()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_79(v1[29], v1[30]);
  v1[31] = v0;
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E0487AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_96();
  swift_release();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_33();
  uint64_t v0 = OUTLINED_FUNCTION_51();
  return v1(v0);
}

uint64_t sub_25E048810()
{
  *(void *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E04882C, 0);
}

uint64_t sub_25E04882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_4();
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_26_0();
      swift_retain();
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = (void *)OUTLINED_FUNCTION_82(v12);
      *uint64_t v13 = v14;
      v13[1] = sub_25E048A54;
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_7_0();
      return v18(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
    }
    else
    {
      OUTLINED_FUNCTION_66();
      OUTLINED_FUNCTION_7_0();
      return v33(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10);
    }
  }
  else
  {
    OUTLINED_FUNCTION_13_0(v10);
    OUTLINED_FUNCTION_27_0();
    uint64_t v24 = swift_task_alloc();
    uint64_t v25 = (void *)OUTLINED_FUNCTION_81_0(v24);
    *uint64_t v25 = v26;
    v25[1] = sub_25E048974;
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E048974()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_85(v5);
  if (!v0) {
    OUTLINED_FUNCTION_39();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E048A54()
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_3();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v14 = v13;
  *(void *)(v11 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v11 + 99) = v3;
    *(void *)(v11 + 240) = v5;
    *(void *)(v11 + 248) = v7;
    *(void *)(v11 + 256) = v9;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA2498](v15, v16, v17);
}

#error "25E048BD4: call analysis failed (funcsize=38)"

uint64_t sub_25E048BFC()
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_3();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v12 = v11;
  uint64_t v13 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v14 = v13;
  *(void *)(v11 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v11 + 98) = v3;
    *(void *)(v11 + 216) = v5;
    *(void *)(v11 + 224) = v7;
    *(void *)(v11 + 232) = v9;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA2498](v15, v16, v17);
}

uint64_t sub_25E048D04()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_59();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 98);
  return v4(v1, v2, v3, v5);
}

uint64_t sub_25E048D74()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 99);
  return v4(v1, v2, v3, v5);
}

uint64_t sub_25E048DE8()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_41();
  sub_25E04986C();
  if ((OUTLINED_FUNCTION_53() & 1) != 0
    && (OUTLINED_FUNCTION_36_0(),
        uint64_t v2 = swift_bridgeObjectRelease(),
        (OUTLINED_FUNCTION_10_0(v2, v3, v4, v5, v6, v7, v8, v9, v15, *(int *)v16, v16[4], *(int *)v17, v17[4]) & 1) != 0))
  {
    OUTLINED_FUNCTION_95();
    v1[33] = *(void *)(v0 + 16);
    v1[34] = *(void *)(v0 + 24);
    sub_25E0DB3C0();
    uint64_t v10 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  else
  {
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](v1[13]);
    OUTLINED_FUNCTION_9();
    return v13();
  }
}

uint64_t sub_25E048EE4()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_79(v1[33], v1[34]);
  v1[35] = v0;
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E048F6C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_96();
  swift_release();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_33();
  uint64_t v0 = OUTLINED_FUNCTION_66();
  return v1(v0);
}

uint64_t sub_25E048FD0()
{
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  MEMORY[0x2611CF510](*(void *)(v0 + 104));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E049048()
{
  *(void *)(v1 + 112) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E049064, 0);
}

uint64_t sub_25E049064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_4();
  if (v11)
  {
    if (v11 == 1)
    {
      OUTLINED_FUNCTION_26_0();
      swift_retain();
      uint64_t v12 = swift_task_alloc();
      uint64_t v13 = (void *)OUTLINED_FUNCTION_82(v12);
      *uint64_t v13 = v14;
      v13[1] = sub_25E04928C;
      OUTLINED_FUNCTION_24_1();
      OUTLINED_FUNCTION_7_0();
      return v18(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
    }
    else
    {
      OUTLINED_FUNCTION_110();
      OUTLINED_FUNCTION_7_0();
      return v30(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10);
    }
  }
  else
  {
    OUTLINED_FUNCTION_13_0(v10);
    OUTLINED_FUNCTION_27_0();
    uint64_t v24 = swift_task_alloc();
    uint64_t v25 = (void *)OUTLINED_FUNCTION_81_0(v24);
    *uint64_t v25 = v26;
    v25[1] = sub_25E0491AC;
    OUTLINED_FUNCTION_80();
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E0491AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_85(v5);
  if (!v0) {
    OUTLINED_FUNCTION_39();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E04928C()
{
  OUTLINED_FUNCTION_17();
  char v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 192) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 99) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

#error "25E0493F8: call analysis failed (funcsize=38)"

uint64_t sub_25E049420()
{
  OUTLINED_FUNCTION_17();
  char v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 208) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 98) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E049514()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_59();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 98);
  return v1(v2);
}

uint64_t sub_25E049578()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 99);
  return v1(v2);
}

uint64_t sub_25E0495E0()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_41();
  sub_25E04986C();
  if ((OUTLINED_FUNCTION_53() & 1) != 0
    && (OUTLINED_FUNCTION_36_0(),
        uint64_t v2 = swift_bridgeObjectRelease(),
        (OUTLINED_FUNCTION_10_0(v2, v3, v4, v5, v6, v7, v8, v9, v15, *(int *)v16, v16[4], *(int *)v17, v17[4]) & 1) != 0))
  {
    OUTLINED_FUNCTION_95();
    v1[27] = *(void *)(v0 + 16);
    v1[28] = *(void *)(v0 + 24);
    sub_25E0DB3C0();
    uint64_t v10 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  else
  {
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](v1[13]);
    OUTLINED_FUNCTION_9();
    return v13();
  }
}

uint64_t sub_25E0496DC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_79(v1[27], v1[28]);
  v1[29] = v0;
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_25E049764()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_96();
  swift_release();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_33();
  uint64_t v0 = OUTLINED_FUNCTION_110();
  return v1(v0);
}

uint64_t sub_25E0497C8()
{
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  MEMORY[0x2611CF510](*(void *)(v0 + 104));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E049840@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25E0653F0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_25E04986C()
{
  unint64_t result = qword_26B384A08;
  if (!qword_26B384A08)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B384A08);
  }
  return result;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25E049914()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25E04994C()
{
  OUTLINED_FUNCTION_22();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  OUTLINED_FUNCTION_29();
  return sub_25E044B20(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t dispatch thunk of SQLExecution.execute(_:)()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_65();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  uint64_t v3 = OUTLINED_FUNCTION_48_0();
  return v4(v3);
}

uint64_t dispatch thunk of SQLExecution.execute(dynamicOnce:)()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_65();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A210;
  uint64_t v3 = OUTLINED_FUNCTION_48_0();
  return v4(v3);
}

uint64_t dispatch thunk of SQLExecution.execute(dynamicAll:)()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_65();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E049CC8;
  uint64_t v3 = OUTLINED_FUNCTION_48_0();
  return v4(v3);
}

uint64_t sub_25E049CC8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_3();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

void dispatch thunk of SQLExecution.results(dynamicValues:)()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_75();
  __asm { BRAA            X5, X16 }
}

uint64_t dispatch thunk of SQLExecution.execute<A>(once:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_61();
  uint64_t v27 = *(void *)(v12 + 40) + **(int **)(v12 + 40);
  uint64_t v28 = v12 + 40;
  uint64_t v13 = swift_task_alloc();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_45_0(v13);
  *uint64_t v14 = v15;
  v14[1] = sub_25E046DD4;
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_20();
  return v24(v16, v17, v18, v19, v20, v21, v22, v23, v27, v28, a11, a12);
}

void dispatch thunk of SQLExecution.execute<A>(all:)()
{
  OUTLINED_FUNCTION_22();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_45_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A210;
  OUTLINED_FUNCTION_68();
  __asm { BRAA            X7, X16 }
}

uint64_t dispatch thunk of SQLExecution.results<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_88(v12, v13);
  uint64_t v30 = (char *)v15 + *v15;
  uint64_t v31 = v14;
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_45_0(v16);
  *uint64_t v17 = v18;
  v17[1] = sub_25E04A1EC;
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_20();
  return v27(v19, v20, v21, v22, v23, v24, v25, v26, v30, v31, a11, a12);
}

uint64_t sub_25E04A150(uint64_t a1)
{
  return a1;
}

unint64_t sub_25E04A188()
{
  unint64_t result = qword_26A6D4660;
  if (!qword_26A6D4660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4660);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_0@<X0>(char a1@<W8>)
{
  *(void *)(v3 + 64) = v1;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 80) = v4;
  *(void *)(v3 + 88) = v5;
  *(unsigned char *)(v3 + 96) = a1 & 1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_19_0()
{
  sub_25E03E6F4(v0, v1, v2, v3, v4, v5);
}

void OUTLINED_FUNCTION_23_0()
{
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = v1;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 40) = 64;
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return sub_25E03DDF4(v0, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return sub_25E03DDF4(v4, v3, v2, v0, v1);
}

void OUTLINED_FUNCTION_33()
{
  *(void *)(v0 + 32) = 0;
  *(_OWORD *)uint64_t v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(unsigned char *)(v0 + 40) = 0x80;
  JUMPOUT(0x2611CF510);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37()
{
  return sub_25E03DEA4(v3, v2, v0, v1, v4);
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_39()
{
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  char v6 = *(unsigned char *)(v0 + 97) & 1;
  return sub_25E03DEA4(v4, v5, v2, v3, v6);
}

__n128 OUTLINED_FUNCTION_40_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a2;
  char v5 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 48) = v5;
  return result;
}

id OUTLINED_FUNCTION_41()
{
  uint64_t v2 = *(void **)(v0 + 192);
  *(void *)(v0 + 104) = v2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_45_0(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

void OUTLINED_FUNCTION_47()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 40);
  sub_25E03E6F4(v2, v3, v4, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49()
{
  return sub_25E03DDF4(v4, v0, v1, v2, v3);
}

__n128 OUTLINED_FUNCTION_50()
{
  long long v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v1;
  __n128 result = *(__n128 *)(v0 + 89);
  *(__n128 *)(v0 + 41) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_51()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return a9;
}

uint64_t OUTLINED_FUNCTION_56()
{
  *(void *)(v1 + 232) = *(void *)(v0 + 16);
  uint64_t result = *(void *)(v0 + 24);
  *(void *)(v1 + 240) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_57()
{
  return sub_25E0DB3C0();
}

__n128 OUTLINED_FUNCTION_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __n128 result = *(__n128 *)a2;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)a2;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a1;
  *(_OWORD *)(v6 + 72) = v8;
  *(unsigned char *)(v6 + 88) = *(unsigned char *)(a2 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_59()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_60(uint64_t a1)
{
  uint64_t result = *(void *)(v1 + 168);
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_62(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
  return v2;
}

__n128 OUTLINED_FUNCTION_63(uint64_t a1)
{
  return *(__n128 *)a1;
}

uint64_t OUTLINED_FUNCTION_64(uint64_t result)
{
  *(void *)(v1 + 176) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_66()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_67()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_69()
{
  *(void *)(v0 + 168) = *(void *)(v0 + 240);
  return sub_25E04986C();
}

uint64_t OUTLINED_FUNCTION_71()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_73()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_76(uint64_t result)
{
  *(void *)(v1 + 200) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_77()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78()
{
  return sub_25E0DB880();
}

uint64_t OUTLINED_FUNCTION_79(uint64_t a1, uint64_t a2)
{
  return sub_25E050F18(a1, a2);
}

uint64_t OUTLINED_FUNCTION_80()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_81_0(uint64_t result)
{
  *(void *)(v1 + 160) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_82(uint64_t result)
{
  *(void *)(v1 + 184) = result;
  return result;
}

void OUTLINED_FUNCTION_84(unsigned __int8 a1@<W8>, __n128 a2@<Q1>)
{
  v2[2] = a2;
  v2[3].n128_u8[0] = a1;
}

uint64_t OUTLINED_FUNCTION_85(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
  *(void *)(v1 + 176) = v2;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_88(uint64_t a1, uint64_t a2)
{
  return a2 + 56;
}

uint64_t OUTLINED_FUNCTION_89()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_90()
{
  return *(void *)(v0 + 120);
}

double OUTLINED_FUNCTION_93@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  a3 = v11;
  a4 = v10;
  a5 = v9;
  a6 = v7;
  a7 = v8;
  *(void *)&double result = sub_25E063E0C(v12, (uint64_t)&a3, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_95()
{
  JUMPOUT(0x2611CF510);
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_97()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_98()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_99()
{
  return sub_25E0DB8E0();
}

uint64_t OUTLINED_FUNCTION_100()
{
  return swift_release();
}

__n128 OUTLINED_FUNCTION_101(uint64_t a1)
{
  return *(__n128 *)a1;
}

uint64_t OUTLINED_FUNCTION_103()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v2;
  *(unsigned char *)(a2 + 40) = v3;
  return swift_retain();
}

void OUTLINED_FUNCTION_105()
{
  *(void *)(v2 + 8 * v1) = v0;
}

void OUTLINED_FUNCTION_106()
{
  *(void *)(v2 + 8 * v1) = v0;
}

uint64_t OUTLINED_FUNCTION_107()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_108()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_109_0()
{
  return *(void *)(v0 + 248);
}

uint64_t OUTLINED_FUNCTION_110()
{
  return 2;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return *(void *)(v0 + 288);
}

uint64_t NSProcessInfo.isDebugging.getter()
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  memset(v3, 0, sizeof(v3));
  uint64_t v4 = 0;
  int v5 = 0;
  uint64_t v12 = 0;
  int v13 = 0;
  uint64_t v14 = 0;
  int v15 = 0;
  uint64_t v19 = 0;
  int v20 = 0;
  uint64_t v32 = 0;
  __int16 v33 = 0;
  uint64_t v45 = 0;
  int v38 = 0;
  sub_25E04C64C(0, &qword_26A6D4668);
  long long v6 = 0u;
  long long v7 = 0u;
  int v8 = 0;
  long long v9 = 0u;
  long long v10 = 0u;
  int v11 = 0;
  uint64_t v16 = 0;
  long long v17 = 0u;
  long long v21 = 0u;
  memset(v22, 0, sizeof(v22));
  long long v23 = 0u;
  int v18 = 0;
  int v24 = 0;
  long long v30 = 0u;
  memset(v31, 0, sizeof(v31));
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v25 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v39 = 0u;
  uint64_t v40 = 0;
  int v41 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  __int16 v44 = 0;
  long long v46 = 0u;
  uint64_t v47 = 0;
  __int16 v48 = 0;
  long long v49 = 0u;
  long long v50 = 0u;
  uint64_t v0 = (int *)swift_allocObject();
  *((void *)v0 + 4) = 0xE00000001;
  v0[10] = 1;
  v0[11] = getpid();
  size_t v2 = 648;
  sysctl(v0 + 8, 4u, v3, &v2, 0, 0);
  swift_setDeallocating();
  swift_deallocClassInstance();
  return (*(_DWORD *)&v3[32] >> 11) & 1;
}

double static NSProcessInfo.kernelBootTime.getter()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  int v5 = 0;
  size_t v3 = 16;
  uint64_t v4 = 0;
  int v0 = sysctlbyname("kern.boottime", &v4, &v3, 0, 0);
  double result = 0.0;
  if (v0) {
    BOOL v2 = 0;
  }
  else {
    BOOL v2 = v3 == 16;
  }
  if (v2 && v5 >= 1) {
    return (double)v5 / 1000000.0 + (double)v4;
  }
  return result;
}

uint64_t KernelError.code.getter()
{
  return *v0;
}

uint64_t KernelError.code.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*KernelError.code.modify())(void)
{
  return nullsub_1;
}

uint64_t KernelError.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_25E0DB3C0();
  return v1;
}

uint64_t KernelError.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*KernelError.message.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.currentPriority.getter()
{
  return *v0;
}

uint64_t NSThread.ThreadInfo.currentPriority.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.currentPriority.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.priority.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t NSThread.ThreadInfo.priority.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.priority.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.maximumPriority.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t NSThread.ThreadInfo.maximumPriority.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*NSThread.ThreadInfo.maximumPriority.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.ThreadInfo.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25E0DB3C0();
  return v1;
}

uint64_t NSThread.ThreadInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NSThread.ThreadInfo.name.modify())(void)
{
  return nullsub_1;
}

uint64_t NSThread.info.getter@<X0>(uint64_t a1@<X8>)
{
  kern_return_t v5;
  kern_return_t v6;
  uint64_t v7;
  uint64_t result;
  _OWORD *v9;
  long long v10;
  long long v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  int v17;
  integer_t thread_info_out[4];
  long long v19;
  long long v20;
  long long v21;
  long long v22;
  long long v23;
  long long v24;
  mach_msg_type_number_t thread_info_outCnt[6];
  uint64_t v26;
  uint64_t v27;

  long long v27 = *MEMORY[0x263EF8340];
  sub_25E0DC530();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v2);
  long long v23 = 0u;
  int v24 = 0u;
  long long v21 = 0u;
  uint64_t v22 = 0u;
  uint64_t v19 = 0u;
  int v20 = 0u;
  *(_OWORD *)thread_info_out = 0u;
  thread_info_outCnt[0] = 28;
  size_t v3 = pthread_self();
  thread_inspect_t v4 = pthread_mach_thread_np(v3);
  int v5 = thread_info(v4, 5u, thread_info_out, thread_info_outCnt);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_25E04B188();
    swift_allocError();
    *(_DWORD *)long long v7 = v6;
    *(void *)(v7 + 8) = 0xD00000000000001BLL;
    *(void *)(v7 + 16) = 0x800000025E0E3AC0;
    return swift_willThrow();
  }
  else
  {
    long long v26 = sub_25E04B1D4();
    long long v9 = (_OWORD *)swift_allocObject();
    *(void *)thread_info_outCnt = v9;
    long long v10 = v22;
    v9[1] = v21;
    v9[2] = v10;
    int v11 = v24;
    v9[3] = v23;
    void v9[4] = v11;
    sub_25E0DC510();
    sub_25E0DC520();
    uint64_t v12 = sub_25E04B35C();
    swift_release();
    int v13 = sub_25E04B3F4(v12);
    int v15 = v14;
    OUTLINED_FUNCTION_7_1();
    uint64_t result = v16();
    long long v17 = HIDWORD(v20);
    *(void *)a1 = *(void *)((char *)&v20 + 4);
    *(_DWORD *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v15;
  }
  return result;
}

unint64_t sub_25E04B188()
{
  unint64_t result = qword_26A6D4670;
  if (!qword_26A6D4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4670);
  }
  return result;
}

uint64_t sub_25E04B1D4()
{
  uint64_t v0 = qword_26A6D4678;
  if (!qword_26A6D4678)
  {
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v0 = TupleTypeMetadata;
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26A6D4678);
    }
  }
  return v0;
}

uint64_t sub_25E04B2C0()
{
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_25E04B2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25E0400AC(a3, (uint64_t)v5);
  swift_dynamicCast();
  return v4;
}

uint64_t sub_25E04B320@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25E04B2D0(*a1, a1[1], (uint64_t)(a1 + 2));
  *a2 = result;
  return result;
}

uint64_t sub_25E04B35C()
{
  uint64_t v1 = sub_25E0DC0B0();
  if (v0)
  {
    sub_25E04986C();
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t sub_25E04B3F4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = result;
    int v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
    {
LABEL_6:
      uint64_t v7 = sub_25E0DB5C0();
      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v4 = 0;
    uint64_t v5 = v1 - 1;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v2 + 33 + v4++)) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t waitForDebugger(for:)()
{
  OUTLINED_FUNCTION_12();
  v0[9] = v1;
  v0[10] = v2;
  uint64_t v3 = sub_25E0DB9A0();
  v0[11] = v3;
  OUTLINED_FUNCTION_7(v3);
  v0[12] = v4;
  v0[13] = OUTLINED_FUNCTION_71();
  uint64_t v5 = sub_25E0DB210();
  v0[14] = v5;
  OUTLINED_FUNCTION_7(v5);
  v0[15] = v6;
  v0[16] = OUTLINED_FUNCTION_71();
  uint64_t v7 = sub_25E0DB230();
  v0[17] = v7;
  OUTLINED_FUNCTION_7(v7);
  v0[18] = v8;
  v0[19] = OUTLINED_FUNCTION_71();
  sub_25E04CD0C(0, &qword_26A6D4688, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  v0[20] = OUTLINED_FUNCTION_71();
  uint64_t v9 = sub_25E0DC070();
  v0[21] = v9;
  OUTLINED_FUNCTION_7(v9);
  v0[22] = v10;
  v0[23] = *(void *)(v11 + 64);
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  uint64_t v12 = sub_25E0DC090();
  v0[26] = v12;
  OUTLINED_FUNCTION_7(v12);
  v0[27] = v13;
  v0[28] = *(void *)(v14 + 64);
  v0[29] = swift_task_alloc();
  v0[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E04B65C, 0, 0);
}

uint64_t sub_25E04B65C()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[24];
  uint64_t v31 = v1;
  uint64_t v32 = v0[23];
  uint64_t v7 = v0[21];
  uint64_t v8 = v0[22];
  uint64_t v9 = v0[20];
  uint64_t v33 = v0[28];
  uint64_t v34 = v0[9];
  uint64_t v36 = v0[10];
  sub_25E0DC080();
  sub_25E0DC030();
  uint64_t v10 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (v32 + *(unsigned __int8 *)(v3 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v13 + v11, v6, v7);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v13 + v12, v31, v4);
  uint64_t v14 = (void *)(v13 + ((v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v14 = v34;
  v14[1] = v36;
  uint64_t v15 = sub_25E04C534();
  v0[31] = v15;
  LODWORD(v9) = isatty(0);
  sub_25E04C64C(0, (unint64_t *)&qword_26A6D46A0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_25E0DD9C0;
  *(void *)(v16 + 56) = MEMORY[0x263F8D310];
  if (v9 == 1)
  {
    uint64_t v18 = v0[18];
    uint64_t v17 = v0[19];
    uint64_t v19 = v0[16];
    uint64_t v20 = v0[15];
    uint64_t v35 = v0[14];
    uint64_t v37 = v0[17];
    *(void *)(v16 + 32) = 0x1000000000000028;
    *(void *)(v16 + 40) = 0x800000025E0E3B00;
    sub_25E0DC4C0();
    swift_bridgeObjectRelease();
    long long v21 = (FILE *)sub_25E0DB1E0();
    fflush(v21);
    uint64_t v22 = (void (__cdecl *)(int))sub_25E0DB200();
    long long v23 = signal(2, v22);
    sub_25E04C694();
    uint64_t v24 = sub_25E0DBC80();
    swift_getObjectType();
    v0[6] = sub_25E04C840;
    v0[7] = v15;
    v0[2] = MEMORY[0x263EF8330];
    v0[3] = 1107296256;
    v0[4] = sub_25E04C848;
    v0[5] = &block_descriptor;
    long long v25 = _Block_copy(v0 + 2);
    swift_unknownObjectRetain();
    swift_retain();
    sub_25E0DB220();
    sub_25E04C8A4();
    sub_25E0DBC90();
    _Block_release(v25);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v35);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v37);
    swift_release();
    swift_unknownObjectRetain();
    sub_25E0DBCB0();
    swift_unknownObjectRelease();
  }
  else
  {
    *(void *)(v16 + 32) = 0x1000000000000017;
    *(void *)(v16 + 40) = 0x800000025E0E3AE0;
    sub_25E0DC4C0();
    swift_bridgeObjectRelease();
    long long v23 = 0;
    uint64_t v24 = 0;
  }
  v0[32] = v23;
  v0[33] = v24;
  long long v26 = (void *)swift_task_alloc();
  v0[34] = v26;
  unint64_t v27 = sub_25E04986C();
  v0[35] = v27;
  *long long v26 = v0;
  v26[1] = sub_25E04BABC;
  uint64_t v28 = MEMORY[0x263F8EE60] + 8;
  uint64_t v29 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FA8](v27, v15, v28, v27, v29);
}

uint64_t sub_25E04BABC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_25E04BD14;
  }
  else {
    uint64_t v7 = sub_25E04BBA0;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_25E04BBA0()
{
  if (*(void *)(v0 + 264))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DBCA0();
    swift_unknownObjectRelease();
  }
  if (isatty(0) == 1)
  {
    uint64_t v1 = *(void (__cdecl **)(int))(v0 + 256);
    if (!v1) {
      uint64_t v1 = (void (__cdecl *)(int))sub_25E0DB1F0();
    }
    signal(2, v1);
    sub_25E04C64C(0, (unint64_t *)&qword_26A6D46A0);
    uint64_t v2 = (__n128 *)swift_allocObject();
    OUTLINED_FUNCTION_3_0(v2, MEMORY[0x263F8D310], (__n128)xmmword_25E0DD9C0);
    swift_bridgeObjectRelease();
    uint64_t v3 = (FILE *)sub_25E0DB1E0();
    fflush(v3);
  }
  OUTLINED_FUNCTION_2_2();
  uint64_t v4 = OUTLINED_FUNCTION_10_1();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_9_2();
  v7(v6);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v8();
}

uint64_t sub_25E04BD14()
{
  v0[8] = v0[36];
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    MEMORY[0x2611CF510](v0[8]);
    if (v0[33])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_25E0DBCA0();
      swift_unknownObjectRelease();
    }
    if (isatty(0) == 1)
    {
      uint64_t v1 = (void (__cdecl *)(int))v0[32];
      if (!v1) {
        uint64_t v1 = (void (__cdecl *)(int))sub_25E0DB1F0();
      }
      signal(2, v1);
      sub_25E04C64C(0, (unint64_t *)&qword_26A6D46A0);
      uint64_t v2 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_3_0(v2, MEMORY[0x263F8D310], (__n128)xmmword_25E0DD9C0);
      swift_bridgeObjectRelease();
      uint64_t v3 = (FILE *)sub_25E0DB1E0();
      fflush(v3);
    }
    OUTLINED_FUNCTION_2_2();
    uint64_t v4 = OUTLINED_FUNCTION_10_1();
    v5(v4);
    uint64_t v6 = OUTLINED_FUNCTION_9_2();
    v7(v6);
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    return v8();
  }
  else
  {
    uint64_t result = MEMORY[0x2611CF510](v0[8]);
    __break(1u);
  }
  return result;
}

uint64_t sub_25E04BEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = sub_25E0DC070();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  v7[8] = swift_task_alloc();
  v7[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E04BFB0, 0, 0);
}

uint64_t sub_25E04BFB0()
{
  OUTLINED_FUNCTION_12_2();
  sub_25E0DC060();
  uint64_t v2 = OUTLINED_FUNCTION_4_5();
  ((void (*)(uint64_t))v1)(v2);
  if ((OUTLINED_FUNCTION_19_1() & 1) == 0
    || (id v3 = objc_msgSend(self, sel_processInfo),
        char v4 = NSProcessInfo.isDebugging.getter(),
        v3,
        (v4 & 1) != 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_11_1();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_1();
  v1();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25E04C104;
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_11_1();
  return MEMORY[0x270FA2170]();
}

uint64_t sub_25E04C104()
{
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  *char v4 = *v1;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 80))(*(void *)(v2 + 64), *(void *)(v2 + 48));
  if (v0) {
    uint64_t v5 = sub_25E04C270;
  }
  else {
    uint64_t v5 = sub_25E04BFB0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_25E04C270()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E04C2D4()
{
  uint64_t v1 = sub_25E0DC070();
  OUTLINED_FUNCTION_1();
  uint64_t v3 = v2;
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v7 = *(void *)(v6 + 64);
  sub_25E0DC090();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = v4 | v12 | 7;
  unint64_t v14 = ((*(void *)(v11 + 64) + ((v5 + v7 + v12) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v1);
  OUTLINED_FUNCTION_7_1();
  v15();

  return MEMORY[0x270FA0238](v0, v14, v13);
}

uint64_t sub_25E04C3E4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_25E0DC070();
  OUTLINED_FUNCTION_7(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = sub_25E0DC090();
  OUTLINED_FUNCTION_7(v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = (v7 + v9 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = v1 + v7;
  uint64_t v19 = v1 + v15;
  uint64_t v20 = (uint64_t *)(v1 + ((*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  long long v23 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v23;
  void *v23 = v3;
  v23[1] = sub_25E046DD4;
  return sub_25E04BEDC(a1, v16, v17, v18, v19, v21, v22);
}

uint64_t sub_25E04C534()
{
  uint64_t v2 = OUTLINED_FUNCTION_15_2();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_25E04CC30(v1);
  }
  else
  {
    sub_25E0DBA00();
    OUTLINED_FUNCTION_13_1();
    uint64_t v3 = OUTLINED_FUNCTION_18_1();
    v4(v3);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DB960();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_25E04C64C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_25E0DC2E0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_25E04C694()
{
  unint64_t result = qword_26A6D46A8;
  if (!qword_26A6D46A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D46A8);
  }
  return result;
}

uint64_t sub_25E04C6D4()
{
  uint64_t v2 = OUTLINED_FUNCTION_15_2();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_25E04CC30(v1);
  }
  else
  {
    sub_25E0DBA00();
    OUTLINED_FUNCTION_13_1();
    uint64_t v3 = OUTLINED_FUNCTION_18_1();
    v4(v3);
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DB960();
    swift_unknownObjectRelease();
  }
  type metadata accessor for SQLDatabase(0);
  return swift_task_create();
}

uint64_t sub_25E04C7EC()
{
  sub_25E04986C();

  return sub_25E0DBAC0();
}

uint64_t sub_25E04C840()
{
  return sub_25E04C7EC();
}

uint64_t sub_25E04C848(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25E04C8A4()
{
  return sub_25E0DBE20();
}

uint64_t destroy for KernelError()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15SonicFoundation11KernelErrorVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  sub_25E0DB3C0();
  return a1;
}

uint64_t assignWithCopy for KernelError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KernelError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KernelError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KernelError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KernelError()
{
  return &type metadata for KernelError;
}

uint64_t _s10ThreadInfoVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s10ThreadInfoVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  sub_25E0DB3C0();
  return a1;
}

uint64_t _s10ThreadInfoVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s10ThreadInfoVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10ThreadInfoVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10ThreadInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSThread.ThreadInfo()
{
  return &type metadata for NSThread.ThreadInfo;
}

uint64_t sub_25E04CC30(uint64_t a1)
{
  sub_25E04CD0C(0, &qword_26A6D4688, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25E04CCBC()
{
  unint64_t result = qword_26A6D46B0;
  if (!qword_26A6D46B0)
  {
    sub_25E0DB210();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D46B0);
  }
  return result;
}

void sub_25E04CD0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_25E04CD70()
{
  unint64_t result = qword_26A6D46C0;
  if (!qword_26A6D46C0)
  {
    sub_25E04CD0C(255, &qword_26A6D46B8, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D46C0);
  }
  return result;
}

void *sub_25E04CDF0@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (v2) {
    return (void *)swift_allocError();
  }
  *a2 = v5;
  return result;
}

void *sub_25E04CE58@<X0>(unsigned char *a1@<X8>)
{
  return sub_25E04CDF0(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return sub_25E0DC030();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return sub_25E0DBA10();
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return MEMORY[0x270F9FFA8](v0, v3, v2, v1);
}

Swift::String_optional __swiftcall String.init(fourChar:)(Swift::UInt32 fourChar)
{
  unsigned int v1 = bswap32(fourChar);
  sub_25E04CFD4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E0DDA50;
  if ((v1 & 0x80) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(unsigned char *)(inited + 32) = v1;
  if ((v1 & 0x8000) != 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(unsigned char *)(inited + 33) = BYTE1(v1);
  if ((v1 & 0x800000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(unsigned char *)(inited + 34) = BYTE2(v1);
  if ((v1 & 0x80000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(unsigned char *)(inited + 35) = HIBYTE(v1);
  *(unsigned char *)(inited + 36) = 0;
  uint64_t inited = sub_25E04B3F4(inited);
LABEL_10:
  result.value._object = v3;
  result.value._countAndFlagsBits = inited;
  return result;
}

void sub_25E04CFD4()
{
  if (!qword_26A6D46C8)
  {
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D46C8);
    }
  }
}

unint64_t String.fourChar.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E0DB540();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_25E0DB5F0() > 4
    || (v16[0] = a1,
        v16[1] = a2,
        sub_25E0DB530(),
        sub_25E03FD80(),
        uint64_t v8 = sub_25E0DBD90(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        !v8))
  {
    unint64_t v14 = 0;
    unsigned __int8 v13 = 1;
    goto LABEL_10;
  }
  if (*(void *)(v8 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    int v9 = *(char *)(v8 + 35);
    if ((v9 & 0x80000000) == 0)
    {
      int v10 = *(char *)(v8 + 34);
      if ((v10 & 0x80000000) == 0)
      {
        int v11 = *(char *)(v8 + 33);
        if ((v11 & 0x80000000) == 0)
        {
          int v12 = *(char *)(v8 + 32);
          swift_bridgeObjectRelease();
          if ((v12 & 0x80000000) == 0)
          {
            unsigned __int8 v13 = 0;
            unint64_t v14 = v9 | ((unint64_t)v10 << 8) | ((unint64_t)v11 << 16) | ((unint64_t)v12 << 24);
LABEL_10:
            LOBYTE(v16[0]) = v13;
            return v14 | ((unint64_t)v13 << 32);
          }
        }
      }
    }
  }
  unint64_t result = sub_25E0DC130();
  __break(1u);
  return result;
}

BOOL static String.PaddingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t String.PaddingMode.hash(into:)()
{
  return sub_25E0DC4E0();
}

uint64_t String.PaddingMode.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E04D288()
{
  return sub_25E0DC500();
}

uint64_t String.pad(_:to:with:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = *a1;
  uint64_t result = sub_25E0DB5F0();
  uint64_t v11 = a2 - result;
  BOOL v12 = __OFSUB__(a2, result);
  if (v9)
  {
    if (!v12)
    {
      uint64_t v13 = v11 & ~(v11 >> 63);
      sub_25E0DB3C0();
      MEMORY[0x2611CDBF0](a3, a4, v13);
      uint64_t v15 = a5;
      sub_25E0DB3C0();
      sub_25E0DB630();
LABEL_9:
      swift_bridgeObjectRelease();
      return v15;
    }
    __break(1u);
  }
  else if (!v12)
  {
    uint64_t v14 = v11 & ~(v11 >> 63);
    sub_25E0DB3C0();
    uint64_t v15 = MEMORY[0x2611CDBF0](a3, a4, v14);
    sub_25E0DB3C0();
    sub_25E0DB630();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

BOOL static String.TruncationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t String.TruncationMode.hash(into:)()
{
  return sub_25E0DC4E0();
}

uint64_t String.TruncationMode.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t String.truncated(_:to:indicator:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int v10 = *a1;
  if (sub_25E0DB5F0() <= a2)
  {
    sub_25E0DB3C0();
    return a5;
  }
  if (!v10)
  {
    sub_25E0DB3C0();
    uint64_t v16 = sub_25E0DB5F0();
    BOOL v17 = __OFSUB__(a2, v16);
    uint64_t result = a2 - v16;
    if (!v17)
    {
      sub_25E04D68C(result, a5, a6);
      sub_25E04D8C8();
      sub_25E0DB3C0();
      sub_25E0DB620();
      swift_bridgeObjectRelease();
      return a3;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v10 == 1)
  {
    uint64_t result = sub_25E0DB5F0();
    if (!__OFSUB__(a2, result))
    {
      uint64_t v12 = ((a2 - result) / 2) & ~(((a2 - result) / 2) >> 63);
      sub_25E0DB3C0();
      uint64_t v13 = sub_25E04D744(v12);
      uint64_t v14 = MEMORY[0x2611CDAB0](v13);
      swift_bridgeObjectRelease();
      sub_25E0DB3C0();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      sub_25E0DB3C0();
      unint64_t v15 = sub_25E04D68C(v12, a5, a6);
      MEMORY[0x2611CDAB0](v15);
      swift_bridgeObjectRelease();
      sub_25E0DB3C0();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    __break(1u);
    goto LABEL_13;
  }
  sub_25E0DB3C0();
  uint64_t v18 = sub_25E0DB5F0();
  BOOL v17 = __OFSUB__(a2, v18);
  uint64_t result = a2 - v18;
  if (!v17)
  {
    sub_25E04D744(result);
    a5 = sub_25E04D7E4();
    swift_bridgeObjectRelease();
    return a5;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_25E04D68C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t result = sub_25E0DB600();
    if (v4) {
      uint64_t result = 15;
    }
    if (4 * v3 >= result >> 14)
    {
      sub_25E0DB710();
      OUTLINED_FUNCTION_0_2();
      return OUTLINED_FUNCTION_1_3();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E04D744(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25E0DB600();
    sub_25E0DB710();
    OUTLINED_FUNCTION_0_2();
    return OUTLINED_FUNCTION_1_3();
  }
  return result;
}

uint64_t sub_25E04D7E4()
{
  uint64_t v0 = sub_25E0DB5F0();
  uint64_t v1 = sub_25E0DBD10();
  BOOL v2 = __OFADD__(v0, v1);
  uint64_t result = v0 + v1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2611CDAD0](result);
    sub_25E04D8C8();
    sub_25E0DB620();
    sub_25E0DB620();
    return 0;
  }
  return result;
}

unint64_t sub_25E04D8C8()
{
  unint64_t result = qword_26A6D46D0;
  if (!qword_26A6D46D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D46D0);
  }
  return result;
}

unint64_t sub_25E04D918()
{
  unint64_t result = qword_26A6D46D8;
  if (!qword_26A6D46D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D46D8);
  }
  return result;
}

unint64_t sub_25E04D968()
{
  unint64_t result = qword_26A6D46E0[0];
  if (!qword_26A6D46E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D46E0);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s11PaddingModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s11PaddingModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E04DB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25E04DB3C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25E04DB44(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for String.PaddingMode()
{
  return &type metadata for String.PaddingMode;
}

uint64_t _s14TruncationModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14TruncationModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E04DCB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_25E04DCDC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for String.TruncationMode()
{
  return &type metadata for String.TruncationMode;
}

uint64_t sub_25E04DCF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25E04E474(v3);
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = 0;
  return result;
}

uint64_t LRUDictionary.Iterator.next()@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v39 = a1[2];
  uint64_t v40 = v2;
  uint64_t v38 = v2;
  uint64_t v41 = v2;
  uint64_t v42 = v3;
  uint64_t v4 = type metadata accessor for LRUDictionary.Container();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v34 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v33 - v9;
  uint64_t v11 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - v12;
  OUTLINED_FUNCTION_0_3();
  uint64_t v33 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v35 = (char *)&v33 - v16;
  OUTLINED_FUNCTION_0_3();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_25E0DB0E0();
  sub_25E0DB0D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v34);
    uint64_t v20 = swift_getTupleTypeMetadata2();
    uint64_t v21 = v36;
    uint64_t v22 = 1;
  }
  else
  {
    uint64_t v37 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    long long v23 = &v13[*(int *)(v11 + 48)];
    uint64_t v24 = *(void (**)(void))(v18 + 32);
    OUTLINED_FUNCTION_1_4();
    v24();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v25(v23, v37, v4);
    long long v26 = &v13[*(int *)(v11 + 48)];
    OUTLINED_FUNCTION_1_4();
    v24();
    unint64_t v27 = v35;
    v25(v35, v26, v4);
    uint64_t v28 = v38;
    uint64_t v29 = swift_getTupleTypeMetadata2();
    uint64_t v30 = v36;
    uint64_t v31 = v36 + *(int *)(v29 + 48);
    OUTLINED_FUNCTION_1_4();
    v24();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v31, v27, v28);
    uint64_t v21 = v30;
    uint64_t v22 = 0;
    uint64_t v20 = v29;
  }
  return __swift_storeEnumTagSinglePayload(v21, v22, 1, v20);
}

uint64_t LRUDictionary.underestimatedCount.getter()
{
  return sub_25E0DBFE0();
}

uint64_t LRUDictionary.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 64);
  v12[0] = *(void *)v1;
  v12[1] = v3;
  v12[2] = v4;
  v12[3] = v5;
  v12[4] = v7;
  v12[5] = v6;
  char v13 = v8;
  uint64_t v14 = v9;
  char v15 = v10;
  sub_25E04E23C(v12[0]);
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_25E04DCF4(v12, a1);
}

uint64_t sub_25E04E1A8@<X0>(uint64_t *a1@<X8>)
{
  LRUDictionary.makeIterator()(a1);
  sub_25E04E474(*v1);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_25E04E208()
{
  return 2;
}

uint64_t sub_25E04E218()
{
  return sub_25E0DB780();
}

uint64_t sub_25E04E23C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25E04E24C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E04E268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_25E04E270()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_25E04E2B4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25E04E304(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

uint64_t sub_25E04E384(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t sub_25E04E3DC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E04E41C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LRUDictionary.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E04E474(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25E04E484()
{
  _s10ConnectionCMa();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  if (*(_DWORD *)(v0 + 88) != 101)
  {
    OUTLINED_FUNCTION_24();
    uint64_t v1 = sqlite3_step(*(sqlite3_stmt **)(v0 + 48));
    *(_DWORD *)(v0 + 88) = v1;
    if (v1 != 101) {
      return v1;
    }
  }
  if (!*(void *)(v0 + 56)) {
    return 101;
  }
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_25E04E484(v2);
  swift_release();
  return v3;
}

uint64_t sub_25E04E59C()
{
  sub_25E0541A8(0, &qword_26A6D4808, 255, (uint64_t (*)(uint64_t))sub_25E05420C, MEMORY[0x263F8F838]);
  swift_allocObject();
  uint64_t result = sub_25E0DC630();
  qword_26A6DDCD0 = result;
  return result;
}

uint64_t sub_25E04E620(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v6;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = 0;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = v13;
  *(_DWORD *)(v5 + 88) = 0;
  *(void *)(v5 + 80) = a1;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  uint64_t v14 = sub_25E0DB580();
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(void *)(v14 + 16);
  swift_retain();
  sub_25E0DB3C0();
  sub_25E0DB3C0();
  sub_25E04E71C(v15, v16, a1, v5, a2, a3, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    swift_release();
  }
  swift_release();
  return v5;
}

uint64_t sub_25E04E71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v40 = a8;
  uint64_t v38 = a7;
  v43[1] = *MEMORY[0x263EF8340];
  uint64_t v15 = sub_25E0DAC10();
  uint64_t v39 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v43[0] = 0;
    swift_retain();
    sub_25E08E478(a3, a1, a1, a2, a4, v43);
    if (v8)
    {
      swift_beginAccess();
      sqlite3_finalize(*(sqlite3_stmt **)(a4 + 48));
      return swift_willThrow();
    }
    else
    {
      uint64_t v37 = a3;
      if (v43[0])
      {
        uint64_t v19 = v43[0] - a1;
        if (v19 < sub_25E0DB5F0())
        {
          sub_25E0DB3C0();
          uint64_t v20 = sub_25E04D744(v19);
          uint64_t v21 = MEMORY[0x2611CDAB0](v20);
          uint64_t v35 = v22;
          uint64_t v36 = v21;
          swift_bridgeObjectRelease();
          uint64_t v23 = v35;
          *(void *)(a4 + 32) = v36;
          *(void *)(a4 + 40) = v23;
          swift_bridgeObjectRelease();
          if (__OFSUB__(a2, v19)) {
            __break(1u);
          }
          sub_25E0DB3C0();
          unint64_t v24 = sub_25E04D68C(a2 - v19, a5, a6);
          uint64_t v25 = MEMORY[0x2611CDAB0](v24);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          uint64_t v41 = v25;
          uint64_t v42 = v27;
          sub_25E0DAC00();
          sub_25E03FD80();
          uint64_t v28 = sub_25E0DBD70();
          unint64_t v30 = v29;
          (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v15);
          swift_bridgeObjectRelease();
          uint64_t v31 = HIBYTE(v30) & 0xF;
          if ((v30 & 0x2000000000000000) == 0) {
            uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
          }
          uint64_t v32 = v40;
          uint64_t v33 = v37;
          if (v31)
          {
            _s9StatementCMa();
            swift_allocObject();
            swift_retain();
            sub_25E0DB3C0();
            *(void *)(a4 + 56) = sub_25E04E620(v33, v28, v30, v38, v32);
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
      swift_beginAccess();
      uint64_t result = sqlite3_bind_parameter_count(*(sqlite3_stmt **)(a4 + 48));
      *(void *)(a4 + 64) = (int)result;
    }
  }
  else
  {
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

sqlite3 *sub_25E04EA70(sqlite3 *result, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, const char **a6)
{
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    int v6 = a4;
    if (a4 <= 0x7FFFFFFF)
    {
      uint64_t v9 = result;
      char v10 = (sqlite3_stmt **)(a5 + 48);
      OUTLINED_FUNCTION_23_1();
      uint64_t v11 = sqlite3_prepare_v3(v9, a2, v6, 1u, v10, a6);
      swift_endAccess();
      return (sqlite3 *)v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E04EB18(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = sub_25E0DAC10();
  OUTLINED_FUNCTION_1();
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v43 = *(void *)(a2 + 24);
  int v37 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  uint64_t v34 = v13;
  if (v37)
  {
    if (!v12)
    {
      __break(1u);
      goto LABEL_13;
    }
    sub_25E0DB3C0();
    uint64_t v14 = v11;
    uint64_t v15 = v12;
  }
  else
  {
    sub_25E0DB3C0();
    uint64_t v14 = v10;
    uint64_t v15 = v11;
  }
  uint64_t v38 = v14;
  uint64_t v39 = v15;
  char v16 = v37;
  sub_25E03DDF4(v10, v11, v12, v43, v37);
  uint64_t v35 = a1;
  swift_retain();
  sub_25E0DAC00();
  sub_25E03FD80();
  uint64_t v17 = sub_25E0DBD70();
  unint64_t v30 = v18;
  uint64_t v31 = v17;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v34 + 8);
  v19(v9, v36);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    sub_25E0DB3C0();
    uint64_t v20 = v10;
    uint64_t v21 = v11;
    goto LABEL_9;
  }
  if (!v12)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_25E0DB3C0();
  uint64_t v20 = v11;
  uint64_t v21 = v12;
LABEL_9:
  uint64_t v38 = v20;
  uint64_t v39 = v21;
  sub_25E0DAC00();
  uint64_t v22 = sub_25E0DBD70();
  uint64_t v24 = v23;
  v19(v9, v36);
  swift_bridgeObjectRelease();
  uint64_t v25 = v43;
  char v26 = v37;
  sub_25E03DEA4(v10, v11, v12, v43, v37);
  swift_allocObject();
  uint64_t v27 = v33;
  uint64_t v28 = sub_25E04E620(v35, v31, v30, v22, v24);
  if (!v27)
  {
    uint64_t v38 = v10;
    uint64_t v39 = v11;
    uint64_t v40 = v12;
    uint64_t v41 = v25;
    char v42 = v26;
    swift_retain();
    sub_25E04EDD8((uint64_t)&v38);
    swift_release();
  }
  swift_release();
  OUTLINED_FUNCTION_34_0();
  return v28;
}

uint64_t sub_25E04EDD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  int v2 = *(unsigned __int8 *)(a1 + 32);
  _s10ConnectionCMa();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  sub_25E04F4C0();
  if (v2 == 1) {
    sub_25E0DB3C0();
  }
  else {
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  sub_25E04F598(v1, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E04EED0()
{
  OUTLINED_FUNCTION_29_0();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  swift_beginAccess();
  uint64_t v1 = *(sqlite3_stmt **)(v0 + 48);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = sqlite3_finalize(v1);
  *(void *)(v0 + 48) = 0;
  if (*(void *)(v0 + 56))
  {
    uint64_t v3 = swift_retain();
    sub_25E04EED0(v3);
    swift_release();
  }
  return v2;
}

uint64_t sub_25E04EFB8()
{
  sub_25E0DB3C0();
  char v1 = sub_25E0DB6B0();
  swift_bridgeObjectRelease();
  if (v1) {
    return 0;
  }
  sub_25E0DB3C0();
  char v2 = sub_25E0DB6B0();
  swift_bridgeObjectRelease();
  if (v2) {
    return 0;
  }
  if (*(void *)(v0 + 56))
  {
    uint64_t v4 = swift_retain();
    sub_25E04EFB8(v4);
    swift_release();
  }
  return 1;
}

uint64_t sub_25E04F074()
{
  uint64_t result = OUTLINED_FUNCTION_14_1();
  if (*(void *)(v0 + 48))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = *(void *)(v0 + 56);
    *(void *)(v0 + 56) = 0;
    if (v2)
    {
      do
      {
        if (!swift_isUniquelyReferenced_native()) {
          break;
        }
        uint64_t v3 = *(void *)(v2 + 56);
        swift_retain();
        swift_release();
        uint64_t v2 = v3;
      }
      while (v3);
    }
    swift_release();
    return v0;
  }
  return result;
}

uint64_t sub_25E04F114()
{
  sub_25E04F074();

  return swift_deallocClassInstance();
}

uint64_t _s9StatementCMa()
{
  return self;
}

uint64_t sub_25E04F16C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = *((unsigned char *)a2 + 16);
  long long v12 = *a2;
  char v13 = v9;
  uint64_t result = sub_25E04F224((uint64_t)&v12, a3);
  if (!v6)
  {
    uint64_t v11 = result;
    swift_beginAccess();
    uint64_t result = *(void *)(v5 + 48);
    if (result) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(result, v11, a4, a5);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25E04F224(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)result;
  if (*(unsigned char *)(result + 16) == 1)
  {
    swift_beginAccess();
    uint64_t v4 = *(sqlite3_stmt **)(v2 + 48);
    uint64_t v5 = sub_25E0DB580();
    int v6 = sqlite3_bind_parameter_index(v4, (const char *)(v5 + 32));
    swift_release();
    if (v6 > 0) {
      return v6;
    }
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    strcpy((char *)v11, "Position name ");
    HIBYTE(v11[1]) = -18;
    sub_25E0DB630();
    sub_25E0DB630();
    uint64_t v9 = v11[0];
    unint64_t v8 = v11[1];
    goto LABEL_9;
  }
  BOOL v7 = __OFADD__(v3, a2);
  v3 += a2;
  if (!v7)
  {
    if (v3 < 1)
    {
      sub_25E05410C();
      swift_allocError();
      *uint64_t v10 = 0xD00000000000004ELL;
      unint64_t v8 = 0x800000025E0E3D40;
      goto LABEL_11;
    }
    if (*(void *)(v2 + 64) >= v3) {
      return v3;
    }
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    v11[2] = 0x6E6F697469736F50;
    v11[3] = 0xEF207865646E6920;
    v11[0] = v3;
    uint64_t v3 = MEMORY[0x263F8D738];
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    v11[0] = *(void *)(v2 + 64);
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0x6E6F697469736F50;
    unint64_t v8 = 0xEF207865646E6920;
LABEL_9:
    sub_25E05410C();
    swift_allocError();
    *uint64_t v10 = v9;
LABEL_11:
    v10[1] = v8;
    swift_willThrow();
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t sub_25E04F4A4()
{
  return 0xD000000000000025;
}

uint64_t sub_25E04F4C0()
{
  OUTLINED_FUNCTION_29_0();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  *(void *)(v0 + 72) = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = swift_retain();
    sub_25E04F4C0(v1);
    swift_release();
  }
  OUTLINED_FUNCTION_14_1();
  return sqlite3_clear_bindings(*(sqlite3_stmt **)(v0 + 48));
}

uint64_t sub_25E04F598(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v4 = a1;
  v2[9] = a1;
  sub_25E0DB3C0();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v4 + 16);
  if (v22)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v4 + 32;
    uint64_t v21 = v6;
    sub_25E0DB3C0();
    uint64_t v8 = 0;
    while (1)
    {
      sub_25E054004(v7, (uint64_t)v30);
      if (v8 == v2[8])
      {
        sub_25E054060((uint64_t)v30);
        uint64_t v4 = v21;
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      sub_25E054004((uint64_t)v30, (uint64_t)&v23);
      long long v9 = v23;
      char v10 = v24;
      if (v26 == 1) {
        swift_release();
      }
      sub_25E03DF3C(v25, (uint64_t)v27);
      uint64_t v11 = v28;
      uint64_t v12 = v29;
      char v13 = __swift_project_boxed_opaque_existential_1(v27, v28);
      long long v23 = v9;
      char v24 = v10;
      sub_25E04F16C((uint64_t)v13, &v23, v31, v11, v12);
      sub_25E054060((uint64_t)v30);
      if (v3) {
        break;
      }
      ++v8;
      sub_25E0540B4(v9, *((uint64_t *)&v9 + 1), v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      v7 += 88;
      if (v22 == v8)
      {
        uint64_t v4 = v21;
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v8 = v22;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_25E0540B4(v9, *((uint64_t *)&v9 + 1), v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    uint64_t v8 = 0;
LABEL_11:
    if (v2[7])
    {
      uint64_t v14 = sub_25E04F79C(v8, v4);
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      unint64_t v20 = v19;
      sub_25E0DB3C0();
      swift_retain();
      sub_25E04F7D0(v14, v16, v18, v20);
      sub_25E04F598();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_25E04F79C(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E04F7D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ((a4 & 1) == 0) {
    goto LABEL_2;
  }
  sub_25E0DC3E0();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_25E0A88A4(a1, a2, a3, a4);
    uint64_t v9 = v8;
    goto LABEL_9;
  }
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
LABEL_9:
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_25E04F8B8()
{
  uint64_t v4 = 0;
  OUTLINED_FUNCTION_14_1();
  uint64_t result = (uint64_t)sqlite3_expanded_sql(*(sqlite3_stmt **)(v0 + 48));
  if (result)
  {
    uint64_t result = sub_25E0DB4C0();
    if (v2) {
      uint64_t v4 = result;
    }
    else {
      uint64_t result = 0;
    }
    if (*(void *)(v0 + 56))
    {
      uint64_t v3 = swift_retain();
      sub_25E04F8B8(v3);
      sub_25E0DB630();
      swift_release();
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E04F954()
{
  return sub_25E04F9DC((uint64_t)sub_25E04F4A4, 232, (uint64_t (*)(uint64_t))sub_25E04F954, MEMORY[0x263F8C7A8]);
}

uint64_t sub_25E04F998()
{
  return sub_25E04F9DC((uint64_t)sub_25E04F4A4, 240, (uint64_t (*)(uint64_t))sub_25E04F998, MEMORY[0x263F8C7B0]);
}

uint64_t sub_25E04F9DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), int (*a4)(void))
{
  _s10ConnectionCMa();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  if (*(_DWORD *)(v4 + 88) == 101 && *(void *)(v4 + 56))
  {
    uint64_t v7 = swift_retain();
    uint64_t v8 = a3(v7);
    swift_release();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_14_1();
    return a4(*(void *)(v4 + 48));
  }
}

uint64_t sub_25E04FAE0(uint64_t a1)
{
  _s10ConnectionCMa();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  if (*(_DWORD *)(v1 + 88) == 101 && *(void *)(v1 + 56))
  {
    swift_retain();
    uint64_t v3 = sub_25E04FAE0(a1);
    swift_release();
    return v3;
  }
  uint64_t result = OUTLINED_FUNCTION_14_1();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = (uint64_t)sqlite3_column_name(*(sqlite3_stmt **)(v1 + 48), a1);
  if (result) {
    return sub_25E0DB640();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25E04FC08()
{
  OUTLINED_FUNCTION_29_0();
  sub_25E053FBC(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  OUTLINED_FUNCTION_9_3();
  sub_25E0DB970();
  *(_DWORD *)(v0 + 88) = 0;
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = swift_retain();
    sub_25E04FC08(v1);
    swift_release();
  }
  OUTLINED_FUNCTION_14_1();
  return sqlite3_reset(*(sqlite3_stmt **)(v0 + 48));
}

sqlite3_stmt *sub_25E04FCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X8>)
{
  if (*(_DWORD *)(a1 + 88) == 101 && *(void *)(a1 + 56))
  {
    uint64_t v6 = swift_retain();
    sub_25E04FCD0(v6, a2);
    return (sqlite3_stmt *)swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    uint64_t result = *(sqlite3_stmt **)(a1 + 48);
    if (result) {
      return SQLDynamicValue.init(statement:index:)(a2, result, a3);
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25E04FD80(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(v3 + 88) == 101 && *(void *)(v3 + 56))
  {
    swift_retain();
    sub_25E04FD80(a1, a2, a3);
    return swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    uint64_t result = *(void *)(v3 + 48);
    if (result) {
      return a1();
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25E04FE44()
{
  return sub_25E04F8B8();
}

uint64_t sub_25E04FE68()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
LABEL_12:
    OUTLINED_FUNCTION_24();
    uint64_t v9 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v9 + 64);
    uint64_t v11 = v9 + 64;
    uint64_t v10 = v12;
    uint64_t v13 = 1 << *(unsigned char *)(*(void *)(v0 + 216) + 32);
    uint64_t v14 = -1;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    uint64_t v15 = v14 & v10;
    int64_t v16 = (unint64_t)(v13 + 63) >> 6;
    uint64_t result = sub_25E0DB3C0();
    int64_t v17 = 0;
    if (!v15) {
      goto LABEL_16;
    }
LABEL_15:
    for (v15 &= v15 - 1; ; uint64_t v15 = (v19 - 1) & v19)
    {
      swift_retain();
      uint64_t v21 = sub_25E04EED0();
      int v22 = v21;
      sub_25E0BF968(v21, (uint64_t)&v49);
      if (v50 != 1 && (v50 != 14 || v49 != 16)) {
        break;
      }
      uint64_t result = swift_release();
      if (v15) {
        goto LABEL_15;
      }
LABEL_16:
      int64_t v18 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_49;
      }
      if (v18 >= v16)
      {
LABEL_47:
        swift_release();
        uint64_t v45 = *(void *)(v0 + 200);
        char v46 = *(unsigned char *)(v0 + 208);
        OUTLINED_FUNCTION_23_1();
        *(void *)(v0 + 200) = 0;
        *(unsigned char *)(v0 + 208) = 0;
        sub_25E08F238();
        *(void *)(v0 + 200) = v45;
        *(unsigned char *)(v0 + 208) = v46;
        sub_25E08F238();
        swift_endAccess();
        OUTLINED_FUNCTION_23_1();
        sub_25E053F08();
        sub_25E0DB3E0();
        return swift_endAccess();
      }
      uint64_t v19 = *(void *)(v11 + 8 * v18);
      ++v17;
      if (!v19)
      {
        int64_t v17 = v18 + 1;
        if (v18 + 1 >= v16) {
          goto LABEL_47;
        }
        uint64_t v19 = *(void *)(v11 + 8 * v17);
        if (!v19)
        {
          int64_t v17 = v18 + 2;
          if (v18 + 2 >= v16) {
            goto LABEL_47;
          }
          uint64_t v19 = *(void *)(v11 + 8 * v17);
          if (!v19)
          {
            int64_t v17 = v18 + 3;
            if (v18 + 3 >= v16) {
              goto LABEL_47;
            }
            uint64_t v19 = *(void *)(v11 + 8 * v17);
            if (!v19)
            {
              int64_t v20 = v18 + 4;
              if (v20 >= v16) {
                goto LABEL_47;
              }
              uint64_t v19 = *(void *)(v11 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  int64_t v17 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_50;
                  }
                  if (v17 >= v16) {
                    goto LABEL_47;
                  }
                  uint64_t v19 = *(void *)(v11 + 8 * v17);
                  ++v20;
                  if (v19) {
                    goto LABEL_31;
                  }
                }
              }
              int64_t v17 = v20;
            }
          }
        }
      }
LABEL_31:
      ;
    }
    OUTLINED_FUNCTION_24();
    uint64_t v24 = sqlite3_extended_errcode(*(sqlite3 **)(v0 + 136));
    uint64_t result = (uint64_t)sqlite3_errstr(v22);
    if (!result) {
      goto LABEL_51;
    }
    uint64_t v25 = sub_25E0DB640();
    uint64_t v27 = v26;
    uint64_t result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v0 + 136));
    if (!result) {
      goto LABEL_52;
    }
    uint64_t v28 = sub_25E0DB640();
    uint64_t v30 = v29;
    sub_25E04A188();
    swift_allocError();
    uint64_t v32 = v31;
    sub_25E0BF968(v24, (uint64_t)&v53);
    int v33 = v53;
    char v34 = v54;
    *(_DWORD *)uint64_t v32 = v24;
    *(_DWORD *)(v32 + 4) = v33;
    *(unsigned char *)(v32 + 8) = v34;
    *(void *)(v32 + 16) = v25;
    *(void *)(v32 + 24) = v27;
    *(void *)(v32 + 32) = v28;
    *(void *)(v32 + 40) = v30;
    swift_willThrow();
LABEL_46:
    swift_release();
    return swift_release();
  }
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  unint64_t v4 = 0;
  uint64_t v5 = 32;
  while (1)
  {
    if (v4 >= *(void *)(v1 + 16))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    swift_retain();
    uint64_t v6 = sub_25E04EED0();
    int v7 = v6;
    sub_25E0BF968(v6, (uint64_t)&v51);
    if (v52 != 1 && (v52 != 14 || v51 != 16)) {
      break;
    }
    ++v4;
    uint64_t result = swift_release();
    v5 += 24;
    if (v2 == v4)
    {
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_12;
    }
  }
  OUTLINED_FUNCTION_24();
  uint64_t v35 = sqlite3_extended_errcode(*(sqlite3 **)(v0 + 136));
  uint64_t result = (uint64_t)sqlite3_errstr(v7);
  if (!result)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v36 = sub_25E0DB640();
  uint64_t v47 = v37;
  uint64_t v48 = v36;
  uint64_t result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v0 + 136));
  if (result)
  {
    uint64_t v38 = sub_25E0DB640();
    uint64_t v40 = v39;
    sub_25E04A188();
    swift_allocError();
    uint64_t v42 = v41;
    sub_25E0BF968(v35, (uint64_t)&v49);
    int v43 = v49;
    char v44 = v50;
    *(_DWORD *)uint64_t v42 = v35;
    *(_DWORD *)(v42 + 4) = v43;
    *(unsigned char *)(v42 + 8) = v44;
    *(void *)(v42 + 16) = v48;
    *(void *)(v42 + 24) = v47;
    *(void *)(v42 + 32) = v38;
    *(void *)(v42 + 40) = v40;
    swift_willThrow();
    swift_release();
    swift_release();
    goto LABEL_46;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_25E0502BC()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  *(void *)(v1 + 200) = v0;
  uint64_t v4 = sub_25E0DAC10();
  *(void *)(v1 + 208) = v4;
  *(void *)(v1 + 216) = *(void *)(v4 - 8);
  *(void *)(v1 + 224) = swift_task_alloc();
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)v3;
  *(_OWORD *)(v1 + 248) = v5;
  *(unsigned char *)(v1 + 97) = *(unsigned char *)(v3 + 32);
  return MEMORY[0x270FA2498](sub_25E050390, v0, 0);
}

void sub_25E050390()
{
  uint64_t v75 = v0;
  if (*(unsigned char *)(v0 + 97))
  {
    uint64_t v1 = *(void *)(v0 + 248);
    if (!v1)
    {
      __break(1u);
      goto LABEL_32;
    }
    sub_25E0DB3C0();
    uint64_t v2 = *(void *)(v0 + 240);
    uint64_t v3 = v1;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 240);
    sub_25E0DB3C0();
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v3 = v4;
  }
  uint64_t v6 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v71 = *(void *)(v0 + 208);
  *(void *)(v0 + 152) = v2;
  *(void *)(v0 + 160) = v3;
  uint64_t v7 = OUTLINED_FUNCTION_36_1();
  sub_25E03DDF4(v7, v8, v9, v10, v11);
  sub_25E0DAC00();
  sub_25E03FD80();
  uint64_t v12 = sub_25E0DBD70();
  uint64_t v14 = v13;
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v69(v5, v71);
  swift_bridgeObjectRelease();
  uint64_t v15 = OUTLINED_FUNCTION_36_1();
  sub_25E03DEA4(v15, v16, v17, v18, v19);
  swift_beginAccess();
  unint64_t v20 = sub_25E050C3C(v12, v14);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    uint64_t v25 = *(void *)(v0 + 200);
    swift_endAccess();
    uint64_t v26 = MEMORY[0x2611CF880](v25 + 120);
    *(void *)(v0 + 264) = v26;
    *(void *)(v0 + 272) = *(void *)(v25 + 128);
    if (v26)
    {
      if (*(unsigned char *)(v0 + 97) == 1) {
        uint64_t v27 = sub_25E0DB3C0();
      }
      else {
        uint64_t v27 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 280) = v27;
      uint64_t v54 = *(void *)(v27 + 16);
      *(void *)(v0 + 288) = v54;
      if (v54)
      {
        uint64_t v55 = 0;
        do
        {
          OUTLINED_FUNCTION_38_0(v55);
          if (*(unsigned char *)(v0 + 96))
          {
            OUTLINED_FUNCTION_6_3();
            v65 = (void *)swift_task_alloc();
            *(void *)(v0 + 312) = v65;
            void *v65 = v0;
            v65[1] = sub_25E050910;
            OUTLINED_FUNCTION_35_0();
            __asm { BRAA            X2, X16 }
          }
          sub_25E054060(v0 + 16);
          OUTLINED_FUNCTION_37_0();
        }
        while (!v56);
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    char v57 = *(unsigned char *)(v0 + 97);
    uint64_t v59 = *(void *)(v0 + 248);
    uint64_t v58 = *(void *)(v0 + 256);
    uint64_t v61 = *(void *)(v0 + 232);
    uint64_t v60 = *(void *)(v0 + 240);
    _s9StatementCMa();
    *(void *)&long long v72 = v61;
    *((void *)&v72 + 1) = v60;
    *(void *)&long long v73 = v59;
    *((void *)&v73 + 1) = v58;
    char v74 = v57;
    sub_25E03DDF4(v61, v60, v59, v58, v57);
    uint64_t v62 = swift_retain();
    sub_25E04EB18(v62, (uint64_t)&v72);
LABEL_25:
    swift_task_dealloc();
    OUTLINED_FUNCTION_70();
    OUTLINED_FUNCTION_35_0();
    __asm { BRAA            X2, X16 }
  }
  char v21 = *(unsigned char *)(v0 + 97);
  swift_endAccess();
  if ((v21 & 1) == 0)
  {
    uint64_t v28 = *(void *)(v0 + 240);
    sub_25E0DB3C0();
    uint64_t v23 = *(void *)(v0 + 232);
    uint64_t v24 = v28;
    goto LABEL_13;
  }
  uint64_t v22 = *(void *)(v0 + 248);
  if (v22)
  {
    sub_25E0DB3C0();
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v24 = v22;
LABEL_13:
    uint64_t v29 = *(void *)(v0 + 224);
    uint64_t v30 = *(void *)(v0 + 200);
    uint64_t v68 = *(void *)(v0 + 208);
    *(void *)(v0 + 168) = v23;
    *(void *)(v0 + 176) = v24;
    uint64_t v31 = OUTLINED_FUNCTION_31();
    sub_25E03DDF4(v31, v32, v33, v34, v35);
    sub_25E0DAC00();
    uint64_t v70 = sub_25E0DBD70();
    uint64_t v37 = v36;
    v69(v29, v68);
    swift_bridgeObjectRelease();
    uint64_t v38 = OUTLINED_FUNCTION_31();
    sub_25E03DEA4(v38, v39, v40, v41, v42);
    swift_beginAccess();
    uint64_t v43 = *(void *)(v30 + 160);
    uint64_t v44 = *(void *)(v30 + 168);
    *(void *)(v0 + 184) = v70;
    *(void *)(v0 + 192) = v37;
    uint64_t v45 = (void *)swift_task_alloc();
    v45[2] = v43;
    v45[3] = v44;
    v45[4] = v0 + 184;
    swift_retain();
    sub_25E0DB3C0();
    swift_retain();
    char v46 = sub_25E08EDB0((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_25E0540C4, (uint64_t)v45, v44);
    char v48 = v47;
    uint64_t v50 = v49;
    swift_release();
    swift_release();
    swift_task_dealloc();
    if (v48)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_25E05320C((int64_t)v46, v50);
      swift_bridgeObjectRelease();
      sub_25E0533CC((unint64_t)v46);
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v51 = *(void *)(v0 + 200);
    sub_25E08F238();
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_25E09228C(v51, sub_25E0540E4);
    char v52 = *(unsigned char *)(v0 + 97);
    long long v53 = *(_OWORD *)(v0 + 248);
    long long v72 = *(_OWORD *)(v0 + 232);
    long long v73 = v53;
    char v74 = v52;
    sub_25E04EDD8((uint64_t)&v72);
    goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_25E050910()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_32_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(void *)(v3 + 200);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_25E050BCC;
    uint64_t v9 = v7;
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 200);
    uint64_t v8 = sub_25E050A00;
  }
  return MEMORY[0x270FA2498](v8, v9, 0);
}

uint64_t sub_25E050A00()
{
  uint64_t v21 = v0;
  swift_release();
  uint64_t v1 = *(void *)(v0 + 320);
  OUTLINED_FUNCTION_37_0();
  if (v3)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    char v4 = *(unsigned char *)(v0 + 97);
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    _s9StatementCMa();
    v19[0] = v8;
    v19[1] = v7;
    v19[2] = v6;
    v19[3] = v5;
    char v20 = v4;
    sub_25E03DDF4(v8, v7, v6, v5, v4);
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_25E04EB18(v9, (uint64_t)v19);
    swift_task_dealloc();
    OUTLINED_FUNCTION_70();
    if (!v1) {
      uint64_t v11 = v10;
    }
    return v12(v11);
  }
  else
  {
    while (1)
    {
      OUTLINED_FUNCTION_38_0(v2);
      if (*(unsigned char *)(v0 + 96)) {
        break;
      }
      sub_25E054060(v0 + 16);
      OUTLINED_FUNCTION_37_0();
      if (v3) {
        goto LABEL_5;
      }
    }
    OUTLINED_FUNCTION_6_3();
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))((char *)v13 + *v13);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_25E050910;
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v15 = *(void *)(v0 + 272);
    return v18(v16, v15);
  }
}

uint64_t sub_25E050BCC()
{
  OUTLINED_FUNCTION_12();
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

unint64_t sub_25E050C3C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_25E052958(a1, a2, v2[2], v2[3], v2[4]);
  sub_25E0529DC(a1, a2);
  return v5;
}

void *sub_25E050C88(uint64_t a1)
{
  sub_25E0B07D0(0, 15, 0xD000000000000040, 0x800000025E0E3CD0);
  sub_25E053F70();
  sub_25E053FBC((unint64_t *)&qword_26A6D47F0, (void (*)(uint64_t))sub_25E053F70);
  v1[2] = sub_25E0DB6F0();
  v1[3] = v3;
  v1[4] = a1;
  return v1;
}

void *sub_25E050D44()
{
  sub_25E0541A8(0, &qword_26A6D4688, 255, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v10 - v2;
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v7 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v4;
  v8[5] = v6;
  v8[6] = v5;
  sub_25E0DB3C0();
  swift_retain();
  sub_25E04C534();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_25E050E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return MEMORY[0x270FA2498](sub_25E050E9C, a4, 0);
}

uint64_t sub_25E050E9C()
{
  sub_25E050F18(*(void *)(v0 + 24), *(void *)(v0 + 32));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E050F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 216);
  if (!*(void *)(v7 + 16)) {
    return swift_endAccess();
  }
  sub_25E0DB3C0();
  unint64_t v8 = sub_25E0BB110();
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  if ((sub_25E04EFB8() & 1) == 0) {
    goto LABEL_9;
  }
  sub_25E09228C(v4, sub_25E0543C4);
  if (v3) {
    return swift_release();
  }
  uint64_t v11 = *(void *)(v10 + 32);
  uint64_t v12 = *(void *)(v10 + 40);
  OUTLINED_FUNCTION_23_1();
  sub_25E0DB3C0();
  unint64_t v13 = sub_25E050C3C(v11, v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v13)
  {
    uint64_t v15 = *(void *)(v10 + 40);
    uint64_t v25 = *(void *)(v10 + 32);
    OUTLINED_FUNCTION_23_1();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = swift_retain();
    sub_25E052B74(v16, 0, 1, v25, v15);
    sub_25E0529DC(v25, v15);
    sub_25E08F238();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    sub_25E09228C(v4, sub_25E0543AC);
    if (v3) {
      return swift_release();
    }
  }
  OUTLINED_FUNCTION_23_1();
  sub_25E0DB3C0();
  sub_25E0AB930(a1, a2, v17, v18, v19, v20, v21, v22, v23, v24);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_25E05115C()
{
  sub_25E050D44();

  return swift_deallocClassInstance();
}

uint64_t _s14StatementTokenCMa()
{
  return self;
}

unint64_t sub_25E0511B8()
{
  unint64_t result = qword_26A6D4768;
  if (!qword_26A6D4768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4768);
  }
  return result;
}

uint64_t sub_25E051204@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return sub_25E0DB3C0();
}

uint64_t sub_25E051214()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25E05125C()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *char v9 = v1;
  v9[1] = sub_25E051320;
  return sub_25E050E78(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25E051320()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E0513E0()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v1 + 80) = v0;
  char v3 = *(unsigned char *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 48) = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 88) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_25E051488;
  return sub_25E0502BC();
}

uint64_t sub_25E051488(uint64_t a1)
{
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_32_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v2;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 96) = v1;
  swift_task_dealloc();
  if (!v1) {
    *(void *)(v5 + 104) = a1;
  }
  OUTLINED_FUNCTION_40();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E05157C()
{
  OUTLINED_FUNCTION_8_0();
  _s14StatementTokenCMa();
  swift_allocObject();
  uint64_t v0 = swift_retain();
  uint64_t v1 = sub_25E050C88(v0);
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  swift_beginAccess();
  sub_25E0DB3C0();
  uint64_t v4 = swift_retain();
  sub_25E0ABDD4(v4, v2, v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_70();
  return v5(v1);
}

uint64_t sub_25E051668()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E051684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0516A0, a2);
}

uint64_t sub_25E0516A0()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_28_1();
  uint64_t v1 = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_20_1(v1);
  if (v0)
  {
    swift_endAccess();
    uint64_t v2 = swift_task_alloc();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_33_0(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_25E05179C;
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return sub_25E052DFC(v5, v6, v7);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v10, v11);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v13(v12, v13, v14, v15, v16, v17, v18, v19);
  }
}

uint64_t sub_25E05179C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_18_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 88) = v3;
  }
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E05189C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(void *)(v0 + 88);
  return v1(v2);
}

uint64_t sub_25E0518FC()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E051958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E051974, a2);
}

uint64_t sub_25E051974()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_28_1();
  uint64_t v1 = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_20_1(v1);
  if (v0)
  {
    swift_endAccess();
    uint64_t v2 = swift_task_alloc();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_33_0(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_25E051A70;
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return sub_25E052EF8(v5, v6, v7);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v10, v11);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v13(v12, v13, v14, v15, v16, v17, v18, v19);
  }
}

uint64_t sub_25E051A70()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_10_2();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v7 = v6;
  *uint64_t v7 = *v2;
  *(void *)(v6 + 80) = v1;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v4 + 48);
  if (v1)
  {
    uint64_t v9 = sub_25E0543E0;
  }
  else
  {
    *(unsigned char *)(v6 + 96) = v0;
    *(void *)(v6 + 88) = v3;
    uint64_t v9 = sub_25E0543A8;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

uint64_t sub_25E051B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E051B98, a2);
}

uint64_t sub_25E051B98()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_28_1();
  uint64_t v1 = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_20_1(v1);
  if (v0)
  {
    swift_endAccess();
    uint64_t v2 = swift_task_alloc();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_33_0(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_25E051C94;
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return sub_25E052EF8(v5, v6, v7);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v10, v11);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v13(v12, v13, v14, v15, v16, v17, v18, v19);
  }
}

uint64_t sub_25E051C94()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_10_2();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v7 = v6;
  *uint64_t v7 = *v2;
  *(void *)(v6 + 80) = v1;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v4 + 48);
  if (v1)
  {
    uint64_t v9 = sub_25E0518FC;
  }
  else
  {
    *(unsigned char *)(v6 + 96) = v0;
    *(void *)(v6 + 88) = v3;
    uint64_t v9 = sub_25E051DA0;
  }
  return MEMORY[0x270FA2498](v9, v8, 0);
}

uint64_t sub_25E051DA0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(unsigned char *)(v0 + 96) & 1;
  return v1(v2, v3);
}

uint64_t sub_25E051E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E051E28, a2);
}

uint64_t sub_25E051E28()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_28_1();
  uint64_t v1 = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_20_1(v1);
  if (v0)
  {
    swift_endAccess();
    uint64_t v2 = swift_task_alloc();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_33_0(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_25E051F24;
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return sub_25E052FEC(v5, v6, v7);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v10, v11);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v13(v12, v13, v14, v15, v16, v17, v18, v19);
  }
}

uint64_t sub_25E051F24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v10 = *v5;
  uint64_t v11 = *v5;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v12 = v11;
  *uint64_t v12 = *v5;
  *(void *)(v11 + 80) = v4;
  swift_task_dealloc();
  uint64_t v13 = *(void *)(v10 + 48);
  if (v4)
  {
    uint64_t v14 = sub_25E0518FC;
  }
  else
  {
    *(unsigned char *)(v11 + 112) = a4;
    *(void *)(v11 + 88) = a3;
    *(void *)(v11 + 96) = a2;
    *(void *)(v11 + 104) = a1;
    uint64_t v14 = sub_25E052074;
  }
  return MEMORY[0x270FA2498](v14, v13, 0);
}

uint64_t sub_25E052074()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 112);
  return v1(v2, v3, v4, v5);
}

uint64_t sub_25E0520E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0520FC, a2);
}

uint64_t sub_25E0520FC()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_28_1();
  uint64_t v1 = OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_20_1(v1);
  if (v0)
  {
    swift_endAccess();
    uint64_t v2 = swift_task_alloc();
    uint64_t v3 = (void *)OUTLINED_FUNCTION_33_0(v2);
    *uint64_t v3 = v4;
    v3[1] = sub_25E0521F8;
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_16_1();
    return sub_25E0530F4(v5, v6, v7);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v10, v11);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v13(v12, v13, v14, v15, v16, v17, v18, v19);
  }
}

uint64_t sub_25E0521F8()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  OUTLINED_FUNCTION_18_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 88) = v3;
  }
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0522F8()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(unsigned __int8 *)(v0 + 88);
  return v1(v2);
}

uint64_t sub_25E052358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E05237C, v4);
}

uint64_t sub_25E05237C()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 216);
  sub_25E0DB3C0();
  uint64_t v6 = sub_25E055578(v3, v4, v5);
  v0[10] = v6;
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_endAccess();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[11] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_25E052510;
    OUTLINED_FUNCTION_16_1();
    return v11(v8, v9, v10, v11, v12, v13, v14, v15);
  }
  else
  {
    swift_endAccess();
    sub_25E052DB0();
    uint64_t v17 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_15_3(v17, v18);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_16_1();
    return v20(v19, v20, v21, v22, v23, v24, v25, v26);
  }
}

uint64_t sub_25E052510()
{
  OUTLINED_FUNCTION_32_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E052630()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E05268C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0526E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25E03E7AC(a3, (uint64_t)v21);
  uint64_t v7 = sub_25E0DAC10();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_25E04EFB8() & 1) == 0) {
    return sub_25E09228C(a2, sub_25E054158);
  }
  uint64_t result = sub_25E09228C(a2, sub_25E054180);
  if (!v3)
  {
    uint64_t result = sub_25E03E7AC(a3, (uint64_t)&v22);
    if (v25)
    {
      uint64_t v14 = v24;
      if (!v24)
      {
        __break(1u);
        return result;
      }
      uint64_t v15 = v23;
    }
    else
    {
      uint64_t v15 = v22;
      uint64_t v14 = v23;
    }
    sub_25E0DB3C0();
    v20[0] = v14;
    v20[1] = v15;
    v20[2] = v14;
    sub_25E03E808(a3, (void (*)(void, void, void, void, void))sub_25E03DDF4);
    sub_25E0DAC00();
    sub_25E03FD80();
    uint64_t v26 = sub_25E0DBD70();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    swift_bridgeObjectRelease();
    sub_25E03E808(a3, (void (*)(void, void, void, void, void))sub_25E03DEA4);
    OUTLINED_FUNCTION_23_1();
    swift_retain();
    sub_25E0DB3C0();
    uint64_t v18 = a1;
    uint64_t v19 = v26;
    sub_25E052B74(v18, 0, 1, v26, v17);
    sub_25E0529DC(v19, v17);
    sub_25E08F238();
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E05292C()
{
  return sub_25E04EED0();
}

unint64_t sub_25E052958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[0] = a1;
  v10[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  void v9[4] = v10;
  uint64_t v6 = sub_25E08EDB0((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_25E054390, (uint64_t)v9, a4);
  if (v7) {
    return 0;
  }
  else {
    return sub_25E05B6C8((unint64_t)v6, a5);
  }
}

void sub_25E0529DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  v25[0] = a1;
  v25[1] = a2;
  v24[2] = v7;
  v24[3] = v6;
  v24[4] = v25;
  uint64_t v8 = sub_25E08EDB0((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_25E054390, (uint64_t)v24, v6);
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = (unint64_t)v8;
    sub_25E05320C((int64_t)v8, v9);
    swift_bridgeObjectRelease();
    sub_25E0533CC(v11);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    int v17 = v16 & 1;
    char v18 = sub_25E0536C8(a1, a2, 0);
    unint64_t v20 = v19;
    uint64_t v21 = v2[4];
    if (v18)
    {
      if (*(void *)(v21 + 16) < v19)
      {
        __break(1u);
      }
      else if ((v19 & 0x8000000000000000) == 0)
      {
        sub_25E093664(v19, v19, v13, v15, v17);
        return;
      }
      __break(1u);
      goto LABEL_14;
    }
    sub_25E05B6C8(v19, v3[4]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25E0CA7A8(v21);
      uint64_t v21 = v22;
    }
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    if (v20 >= *(void *)(v21 + 16))
    {
LABEL_15:
      __break(1u);
      return;
    }
    uint64_t v23 = v21 + 24 * v20;
    swift_retain();
    swift_release();
    *(void *)(v23 + 32) = v13;
    *(void *)(v23 + 40) = v15;
    *(unsigned char *)(v23 + 48) = v17 != 0;
    swift_release();
    swift_release();
    v3[4] = v21;
  }
}

uint64_t sub_25E052B74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *v5;
  uint64_t v10 = v5[1];
  v31[0] = a4;
  v31[1] = a5;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v30 = v31;
  swift_retain();
  swift_retain();
  unint64_t v12 = (unint64_t)sub_25E08EDB0((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_25E054390, (uint64_t)v27, v10);
  char v14 = v13;
  unint64_t v16 = v15;
  swift_release();
  swift_release();
  if (v14)
  {
    if (a1)
    {
      swift_retain();
      sub_25E0926C0(a4, a5);
      uint64_t v23 = v5[2];
      v5 += 2;
      uint64_t v22 = v23;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_25E03CB0C(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = *v5;
      }
      unint64_t v16 = *(void *)(v22 + 16);
      unint64_t v18 = *(void *)(v22 + 24);
      uint64_t v17 = v16 + 1;
      if (v16 < v18 >> 1) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (a1)
    {
      uint64_t v17 = v5[2];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E0CA7A8(v17);
        uint64_t v17 = v19;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v18 = *(void *)(v17 + 16);
        if (v12 < v18)
        {
          unint64_t v20 = v17 + 24 * v12;
          swift_retain();
          swift_release();
          *(void *)(v20 + 32) = a1;
          *(void *)(v20 + 40) = a2;
          *(unsigned char *)(v20 + 48) = a3 & 1;
          swift_release_n();
          uint64_t result = swift_bridgeObjectRelease();
          v5[2] = v17;
          return result;
        }
      }
      __break(1u);
LABEL_18:
      sub_25E03CB0C(v18 > 1, v17, 1);
      uint64_t v22 = *v5;
LABEL_12:
      *(void *)(v22 + 16) = v17;
      uint64_t v25 = v22 + 24 * v16;
      *(void *)(v25 + 32) = a1;
      *(void *)(v25 + 40) = a2;
      *(unsigned char *)(v25 + 48) = a3 & 1;
      swift_release_n();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v5 = v22;
      return result;
    }
    sub_25E05320C(v12, v16);
    swift_bridgeObjectRelease();
    sub_25E0533CC(v12);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

unint64_t sub_25E052DB0()
{
  unint64_t result = qword_26A6D4790;
  if (!qword_26A6D4790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A6D4790);
  }
  return result;
}

uint64_t sub_25E052DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  sqlite3_int64 v3[3] = a1;
  return MEMORY[0x270FA2498](sub_25E052E24, a1, 0);
}

uint64_t sub_25E052E24()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  sub_25E09228C(*(void *)(v0 + 24), sub_25E0531F0);
  OUTLINED_FUNCTION_27_1();
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  v1(v2);
  swift_release();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_15();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E052EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return MEMORY[0x270FA2498](sub_25E052F20, a1, 0);
}

uint64_t sub_25E052F20()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  sub_25E09228C(*(void *)(v0 + 32), sub_25E0531F0);
  OUTLINED_FUNCTION_27_1();
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  v1(v2);
  swift_release();
  OUTLINED_FUNCTION_26_1();
  OUTLINED_FUNCTION_15();
  return v6(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E052FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return MEMORY[0x270FA2498](sub_25E053014, a1, 0);
}

uint64_t sub_25E053014()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  sub_25E09228C(*(void *)(v0 + 48), sub_25E0531F0);
  OUTLINED_FUNCTION_27_1();
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  v1(v2);
  swift_release();
  OUTLINED_FUNCTION_15();
  return v8(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E0530F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sqlite3_int64 v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25E05311C, a1, 0);
}

uint64_t sub_25E05311C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  sub_25E09228C(*(void *)(v0 + 16), sub_25E0531F0);
  OUTLINED_FUNCTION_27_1();
  uint64_t v2 = OUTLINED_FUNCTION_8_2();
  v1(v2);
  swift_release();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_15();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E0531F0()
{
  return sub_25E067B98();
}

void sub_25E05320C(int64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = v2 + 1;
  uint64_t v6 = *(void *)(v2[1] + 16);
  uint64_t v7 = *v3;
  if (!*v3)
  {
    if (v6)
    {
      sub_25E053460(a1);
      return;
    }
    goto LABEL_12;
  }
  swift_beginAccess();
  if ((*(void *)(v7 + 16) & 0x3FLL) == (*(void *)(v7 + 24) & 0x3FLL))
  {
    if (!v6) {
      goto LABEL_12;
    }
  }
  else if (v6 <= sub_25E0DB030())
  {
LABEL_12:
    sub_25E053460(a1);
    uint64_t v11 = *v5;
    if (v7)
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(v7 + 24) & 0x3FLL;
    }
    else
    {
      uint64_t v12 = 0;
    }
    unint64_t v13 = *(void *)(v11 + 16);
    if (v12 || v13 >= 0x10)
    {
      uint64_t v14 = MEMORY[0x2611CD570](v13);
      sub_25E092C80(v14, v12);
    }
    else
    {
      swift_release();
      *uint64_t v3 = 0;
    }
    return;
  }
  sub_25E09281C();
  uint64_t v9 = *v3;
  if (*v3)
  {
    swift_retain();
    sub_25E0534E8(a2, (void *)(v9 + 16), v9 + 32, (uint64_t)v3);
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (a1 + 1 >= a1)
    {
      uint64_t v10 = v3[1];
      swift_retain();
      sub_25E0928D0(a1, a1 + 1, v10, (void *)(v9 + 16));
      swift_release();
      swift_release();
      sub_25E053460(a1);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_25E0533CC(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25E0CA7A8(v3);
    uint64_t v3 = v4;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    sub_25E03B3C8((char *)(v3 + 24 * a1 + 56), v5 - 1 - a1, (char *)(v3 + 24 * a1 + 32));
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
  }
}

void sub_25E053460(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25E0CA7BC(v3);
    uint64_t v3 = v4;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    sub_25E03B3CC((char *)(v3 + 16 * a1 + 48), v5 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
  }
}

unint64_t sub_25E0534E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v17 = sub_25E0DAFC0();
  sub_25E0DB010();
  if (v17)
  {
    uint64_t v7 = a1;
    uint64_t v8 = sub_25E0DAFD0();
    while (1)
    {
      unint64_t result = sub_25E0DAFF0();
      if (v10)
      {
LABEL_26:
        __break(1u);
        return result;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (result >= *(void *)(*(void *)(a4 + 8) + 16)) {
        goto LABEL_24;
      }
      sub_25E0DC4D0();
      sub_25E0DB3C0();
      sub_25E0DB5E0();
      uint64_t v11 = sub_25E0DC500();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v12 = 1 << *a2;
      if (__OFSUB__(v12, 1)) {
        goto LABEL_25;
      }
      uint64_t v13 = (v12 - 1) & v11;
      if (v6 >= v8)
      {
        if (v13 >= v8 && v6 >= v13)
        {
LABEL_18:
          sub_25E0DAFF0();
          sub_25E0DAFE0();
          uint64_t v6 = v7;
        }
      }
      else if (v13 >= v8 || v6 >= v13)
      {
        goto LABEL_18;
      }
      sub_25E0DB010();
      uint64_t v7 = a1;
    }
  }

  return sub_25E0DAFE0();
}

uint64_t sub_25E0536C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  v14[0] = a1;
  v14[1] = a2;
  v13[2] = v8;
  v13[3] = v7;
  v13[4] = v14;
  sub_25E08EDB0((void *(*)(uint64_t *__return_ptr, uint64_t, void))sub_25E054390, (uint64_t)v13, v7);
  char v11 = v10;
  if (v10) {
    sub_25E053768(a1, a2, a3, v9);
  }
  return v11 & 1;
}

uint64_t sub_25E053768(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  uint64_t v9 = v4 + 1;
  int64_t v10 = *(void *)(v4[1] + 16);
  int64_t v11 = *v5;
  if (*v5)
  {
    swift_beginAccess();
    unint64_t result = MEMORY[0x2611CD540](*(void *)(v11 + 16) & 0x3FLL);
    if (v10 >= result) {
      goto LABEL_11;
    }
    unint64_t result = sub_25E09281C();
    int64_t v10 = *v5;
    if (!*v5)
    {
LABEL_26:
      __break(1u);
      return result;
    }
    swift_retain();
    int64_t v11 = 0;
    sub_25E053930((void *)(v10 + 16), v10 + 32, a4, a3, (uint64_t)v5);
    unint64_t result = swift_release();
    if (*(void *)(v5[1] + 16) < a3) {
      goto LABEL_23;
    }
    if ((a3 & 0x8000000000000000) == 0)
    {
LABEL_10:
      sub_25E0DB3C0();
      return sub_25E0937A0(a3, a3, v8, a2);
    }
    __break(1u);
  }
  if ((unint64_t)v10 < 0xF)
  {
    if (v10 >= a3)
    {
      if ((a3 & 0x8000000000000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_11:
  if (v10 < a3)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (a3 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_25E0DB3C0();
  sub_25E0937A0(a3, a3, v8, a2);
  uint64_t v13 = *v9;
  if (v11)
  {
    swift_beginAccess();
    uint64_t v14 = *(void *)(v11 + 24) & 0x3FLL;
  }
  else
  {
    uint64_t v14 = 0;
  }
  unint64_t v15 = *(void *)(v13 + 16);
  if (v14 || v15 >= 0x10)
  {
    uint64_t v16 = MEMORY[0x2611CD570](v15);
    return sub_25E092C80(v16, v14);
  }
  else
  {
    unint64_t result = swift_release();
    *unint64_t v5 = 0;
  }
  return result;
}

uint64_t sub_25E053930(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25E0DAFE0();
}

uint64_t sub_25E0539B8(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v4 = result;
  unint64_t v5 = *(void *)(a2 + 16);
  if (result >= (uint64_t)(v5 >> 1))
  {
    if (MEMORY[0x2611CD540](*a3 & 0x3FLL) / 3 >= (uint64_t)(v5 + ~result))
    {
      unint64_t result = sub_25E092E64(v4, a2);
      if (v17 == v18 >> 1)
      {
LABEL_32:
        return swift_unknownObjectRelease();
      }
      uint64_t v19 = v17;
      int64_t v20 = v18 >> 1;
      uint64_t v21 = a3;
      unint64_t v31 = v18 >> 1;
      while (v19 < v20)
      {
        sub_25E0DC4D0();
        sub_25E0DB3C0();
        sub_25E0DB5E0();
        unint64_t result = sub_25E0DC500();
        if (__OFSUB__(1 << *v21, 1)) {
          goto LABEL_58;
        }
        if (sub_25E0DAFC0())
        {
          while (1)
          {
            uint64_t v22 = sub_25E0DAFF0();
            if ((v23 & 1) == 0 && v22 == v4) {
              break;
            }
            sub_25E0DB010();
          }
        }
        unint64_t result = sub_25E0DAFF0();
        if (v24) {
          goto LABEL_65;
        }
        BOOL v7 = __OFADD__(result++, 1);
        uint64_t v21 = a3;
        if (v7) {
          goto LABEL_59;
        }
        sub_25E0DB000();
        unint64_t result = swift_bridgeObjectRelease();
        BOOL v7 = __OFADD__(v4++, 1);
        if (v7) {
          goto LABEL_60;
        }
        ++v19;
        int64_t v20 = v31;
        if (v19 == v31) {
          goto LABEL_32;
        }
      }
      goto LABEL_57;
    }
    sub_25E0DAFC0();
    uint64_t v15 = sub_25E0DAFF0();
    if ((v16 & 1) != 0 || v15 < v4) {
      return sub_25E0DB010();
    }
    BOOL v7 = __OFADD__(v15, 1);
    unint64_t result = v15 + 1;
    if (!v7)
    {
      sub_25E0DB000();
      return sub_25E0DB010();
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v6 = 1 << *a3;
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t v8 = v6 - 1;
  if (v7)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v9 = *a3 & 0x3FLL;
  uint64_t v10 = a3[1];
  if (v10 >= -64) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v8;
  }
  uint64_t v12 = v11 + (v10 >> 6) + 1;
  if (v12 < v8) {
    uint64_t v8 = 0;
  }
  a3[1] = a3[1] & 0x3FLL | ((v12 - v8) << 6);
  unint64_t result = MEMORY[0x2611CD540](v9);
  if (result / 3 < v4)
  {
    sub_25E0DAFC0();
    uint64_t v13 = sub_25E0DAFF0();
    if ((v14 & 1) != 0 || v13 > v4) {
      return sub_25E0DB010();
    }
    BOOL v7 = __OFSUB__(v13, 1);
    unint64_t result = v13 - 1;
    if (!v7)
    {
      sub_25E0DB000();
      return sub_25E0DB010();
    }
    goto LABEL_56;
  }
  if (v4 < 0)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v5 >= v4)
  {
    if (v4)
    {
      unint64_t result = swift_retain();
      uint64_t v25 = 0;
      uint64_t v26 = 1;
      uint64_t v27 = a3;
      uint64_t v32 = v4;
      do
      {
        if (v25 == v4)
        {
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        sub_25E0DC4D0();
        sub_25E0DB3C0();
        sub_25E0DB5E0();
        unint64_t result = sub_25E0DC500();
        if (__OFSUB__(1 << *v27, 1)) {
          goto LABEL_53;
        }
        if (sub_25E0DAFC0())
        {
          while (1)
          {
            uint64_t v28 = sub_25E0DAFF0();
            if ((v29 & 1) == 0 && v28 == v26) {
              break;
            }
            sub_25E0DB010();
          }
        }
        unint64_t result = sub_25E0DAFF0();
        if (v30) {
          goto LABEL_64;
        }
        BOOL v7 = __OFSUB__(result--, 1);
        uint64_t v4 = v32;
        uint64_t v27 = a3;
        if (v7) {
          goto LABEL_54;
        }
        ++v25;
        sub_25E0DB000();
        unint64_t result = swift_bridgeObjectRelease();
        ++v26;
      }
      while (v25 != v32);
      return swift_release();
    }
    return result;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

void sub_25E053F08()
{
  if (!qword_26A6D47A0)
  {
    _s9StatementCMa();
    sub_25E0511B8();
    unint64_t v0 = sub_25E0DB3F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D47A0);
    }
  }
}

void sub_25E053F70()
{
  if (!qword_26A6D47E8)
  {
    unint64_t v0 = sub_25E0DB940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D47E8);
    }
  }
}

uint64_t sub_25E053FBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E054004(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25E054060(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E0540B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E0540C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25E093A90(a1, a2, *(void *)(v3 + 16), *(uint64_t **)(v3 + 32), a3);
}

uint64_t sub_25E0540E4()
{
  return sub_25E04F4C0();
}

unint64_t sub_25E05410C()
{
  unint64_t result = qword_26A6D47F8;
  if (!qword_26A6D47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A6D47F8);
  }
  return result;
}

uint64_t sub_25E054158()
{
  return sub_25E04EED0();
}

uint64_t sub_25E054180()
{
  return sub_25E04FC08();
}

void sub_25E0541A8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_25E05420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *initializeBufferWithCopyOfBuffer for NanoID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_25E0DB3C0();
  return a1;
}

uint64_t _s15ConnectionErrorOwxx()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for NanoID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for NanoID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NanoID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NanoID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25E054378()
{
  return 0;
}

ValueMetadata *_s15ConnectionErrorOMa()
{
  return &_s15ConnectionErrorON;
}

uint64_t sub_25E054390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25E0540C4(a1, a2, a3);
}

uint64_t sub_25E0543AC()
{
  return sub_25E054158();
}

uint64_t sub_25E0543C4()
{
  return sub_25E054180();
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return *(void *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_15_3(uint64_t a1, void *a2)
{
  *a2 = v2;
  a2[1] = v3;
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return sub_25E055578(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_20_1(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return _s10ConnectionCMa();
}

uint64_t OUTLINED_FUNCTION_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return sub_25E03DEA4(v0, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 + 296) = a1;
  uint64_t v5 = *(void *)(v3 + 280) + a1 * v1 + 32;
  return sub_25E054004(v5, v2);
}

uint64_t Box.value.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_5_5();
  uint64_t v4 = v1 + *(void *)(v3 + 88);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_3_1();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t Box.value.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_5_5();
  uint64_t v4 = v1 + *(void *)(v3 + 88);
  swift_beginAccess();
  OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_3_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*Box.value.modify())()
{
  return j__swift_endAccess;
}

uint64_t Box.__allocating_init(value:)(uint64_t a1)
{
  return sub_25E054F44(a1, (void (*)(uint64_t))Box.init(value:));
}

uint64_t Box.init(value:)()
{
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_3_1();
  (*(void (**)(void))(v1 + 32))();
  return v0;
}

uint64_t Box.__allocating_init<A>(from:)()
{
  OUTLINED_FUNCTION_4_6();
  uint64_t v1 = swift_allocObject();
  Box.init<A>(from:)(v0);
  return v1;
}

uint64_t Box.init<A>(from:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(*(void *)v1 + 80);
  OUTLINED_FUNCTION_0_5();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v14[-v10 - 8];
  sub_25E03DF54(v9, (uint64_t)v14);
  sub_25E0DBB60();
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v2) {
    swift_deallocPartialClassInstance();
  }
  else {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + *(void *)(*(void *)v3 + 88), v11, v5);
  }
  return v3;
}

uint64_t Box.deinit()
{
  OUTLINED_FUNCTION_2_3();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(v0 + *(void *)(v1 + 88));
  return v0;
}

uint64_t Box.__deallocating_deinit()
{
  Box.deinit();

  return swift_deallocClassInstance();
}

uint64_t Box<A>.encode(to:)()
{
  OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_2_3();
  uint64_t v2 = *(void *)(v1 + 80);
  OUTLINED_FUNCTION_1_5();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v9 = v0 + *(void *)(v8 + 88);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v9, v2);
  sub_25E0DB430();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_25E054B68()
{
  return Box<A>.encode(to:)();
}

uint64_t sub_25E054B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Box.__allocating_init<A>(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t Box<A>.hash(into:)()
{
  OUTLINED_FUNCTION_2_3();
  uint64_t v2 = *(void *)(v1 + 80);
  OUTLINED_FUNCTION_1_5();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v9 = v0 + *(void *)(v8 + 88);
  OUTLINED_FUNCTION_24();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v9, v2);
  sub_25E0DB450();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t Box<A>.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E054D08()
{
  return Box<A>.hashValue.getter();
}

uint64_t sub_25E054D30()
{
  return Box<A>.hash(into:)();
}

uint64_t sub_25E054D58()
{
  return sub_25E0DC500();
}

uint64_t static Box<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_0_5();
  uint64_t v6 = v5;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = &v20[-v12];
  uint64_t v14 = v11 + *(void *)(*(void *)v11 + 88);
  OUTLINED_FUNCTION_24();
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v15(v13, v14, v4);
  uint64_t v16 = a2 + *(void *)(*(void *)a2 + 88);
  OUTLINED_FUNCTION_24();
  v15(v10, v16, v4);
  char v17 = sub_25E0DB4B0();
  unint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v18(v10, v4);
  v18(v13, v4);
  return v17 & 1;
}

uint64_t sub_25E054F1C(uint64_t *a1, uint64_t *a2)
{
  return static Box<A>.== infix(_:_:)(*a1, *a2);
}

uint64_t ActorBox.__allocating_init(value:)(uint64_t a1)
{
  return sub_25E054F44(a1, (void (*)(uint64_t))ActorBox.init(value:));
}

uint64_t sub_25E054F44(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t ActorBox.init(value:)()
{
  swift_defaultActor_initialize();
  OUTLINED_FUNCTION_3_1();
  (*(void (**)(void))(v1 + 32))();
  return v0;
}

uint64_t ActorBox.withValue<A>(_:)()
{
  OUTLINED_FUNCTION_4_6();
  uint64_t v2 = v0 + *(void *)(*(void *)v0 + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t ActorBox.deinit()
{
  OUTLINED_FUNCTION_2_3();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(v0 + *(void *)(v1 + 96));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActorBox.__deallocating_deinit()
{
  ActorBox.deinit();

  return MEMORY[0x270FA2418](v0);
}

uint64_t ActorBox.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25E055154()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E05519C()
{
  return ActorBox.unownedExecutor.getter();
}

uint64_t sub_25E0551BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Box()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Box(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Box);
}

uint64_t dispatch thunk of Box.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Box.__allocating_init<A>(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_25E0552BC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ActorBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ActorBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ActorBox);
}

uint64_t dispatch thunk of ActorBox.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_25E0553B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  char v24 = a3;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_25E03CB2C(0, v3, 0);
    uint64_t v4 = v28;
    uint64_t v6 = (void **)(a1 + 32);
    do
    {
      uint64_t v7 = *v6;
      swift_getErrorValue();
      uint64_t v25 = &v23;
      uint64_t v8 = v26;
      uint64_t v9 = v27;
      OUTLINED_FUNCTION_8_3();
      uint64_t v11 = v10;
      MEMORY[0x270FA5388](v12);
      uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v14);
      id v15 = v7;
      uint64_t v16 = v24(v8, v9);
      uint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
      MEMORY[0x2611CF510](v7);
      uint64_t v28 = v4;
      unint64_t v20 = *(void *)(v4 + 16);
      unint64_t v19 = *(void *)(v4 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_25E03CB2C(v19 > 1, v20 + 1, 1);
        uint64_t v4 = v28;
      }
      *(void *)(v4 + 16) = v20 + 1;
      uint64_t v21 = v4 + 16 * v20;
      *(void *)(v21 + 32) = v16;
      *(void *)(v21 + 40) = v18;
      ++v6;
      --v3;
    }
    while (v3);
  }
  return v4;
}

double sub_25E055560@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  return sub_25E0555F0(a1, (uint64_t (*)(void))sub_25E0BB0AC, a2);
}

uint64_t sub_25E055578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E055670(a1, a2, a3, (void (*)(void))sub_25E0BB110);
}

uint64_t sub_25E055590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_25E0BB0AC(), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

double sub_25E0555D8@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  return sub_25E0555F0(a1, (uint64_t (*)(void))sub_25E073F74, a2);
}

double sub_25E0555F0@<D0>(uint64_t a1@<X2>, uint64_t (*a2)(void)@<X3>, _OWORD *a3@<X8>)
{
  if (*(void *)(a1 + 16) && (uint64_t v5 = a2(), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a1 + 56) + 32 * v5;
    sub_25E0400AC(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_25E055658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E055670(a1, a2, a3, (void (*)(void))sub_25E0BB0AC);
}

uint64_t sub_25E055670(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (*(void *)(a3 + 16) && (a4(), (v4 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t Error.encodedOnionDescription.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_18_3();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_17_2();
  v8();
  uint64_t v9 = OUTLINED_FUNCTION_31_0();
  if (v9)
  {
    uint64_t v1 = v9;
    uint64_t v10 = OUTLINED_FUNCTION_22_2();
    v11(v10);
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_12_4();
    OUTLINED_FUNCTION_29_1(v12, v13);
    OUTLINED_FUNCTION_25_3();
    v14();
  }
  id v15 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v1);
  if (qword_26A6D4218 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_26A6D4928;
  id v17 = objc_msgSend(v15, sel_domain);
  uint64_t v18 = sub_25E0DB500();
  uint64_t v20 = v19;

  sub_25E055590(v18, v20, v16);
  swift_bridgeObjectRelease();
  uint64_t v34 = 40;
  unint64_t v35 = 0xE100000000000000;
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  id v33 = objc_msgSend(v15, sel_code);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  uint64_t v21 = &v36;
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_2();
  v22();
  uint64_t v23 = OUTLINED_FUNCTION_31_0();
  if (v23)
  {
    uint64_t v21 = (uint64_t *)v23;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  }
  else
  {
    uint64_t v24 = OUTLINED_FUNCTION_12_4();
    uint64_t v26 = OUTLINED_FUNCTION_29_1(v24, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v26, v2, a1);
  }
  uint64_t v27 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v21);
  id v28 = objc_msgSend(v27, sel_underlyingErrors);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  uint64_t v29 = sub_25E0DB830();

  uint64_t v30 = sub_25E0553B0(v29, (uint64_t)v32, (uint64_t (*)(uint64_t, uint64_t))Error.encodedOnionDescription.getter);
  swift_bridgeObjectRelease();
  uint64_t v34 = v30;
  sub_25E059C08(0, (unint64_t *)&qword_26A6D4930, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_25E056704();
  OUTLINED_FUNCTION_21_2();
  swift_bridgeObjectRelease();
  sub_25E0DB630();

  swift_bridgeObjectRelease();
  return v36;
}

uint64_t Error.onionDescription.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_18_3();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_20_2();
  uint64_t v8 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_17_2();
  v8();
  uint64_t v9 = OUTLINED_FUNCTION_31_0();
  if (v9)
  {
    uint64_t v1 = v9;
    uint64_t v10 = OUTLINED_FUNCTION_22_2();
    v11(v10);
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_12_4();
    OUTLINED_FUNCTION_29_1(v12, v13);
    OUTLINED_FUNCTION_25_3();
    v14();
  }
  id v15 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v1);
  uint64_t v29 = 40;
  unint64_t v30 = 0xE100000000000000;
  id v16 = objc_msgSend(v15, sel_domain);
  sub_25E0DB500();

  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  id v28 = objc_msgSend(v15, sel_code);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  id v17 = &v31;
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_2();
  v8();
  uint64_t v18 = OUTLINED_FUNCTION_31_0();
  if (v18)
  {
    id v17 = (uint64_t *)v18;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  }
  else
  {
    uint64_t v19 = OUTLINED_FUNCTION_12_4();
    uint64_t v21 = OUTLINED_FUNCTION_29_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v21, v2, a1);
  }
  uint64_t v22 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v17);
  id v23 = objc_msgSend(v22, sel_underlyingErrors);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  uint64_t v24 = sub_25E0DB830();

  uint64_t v25 = sub_25E0553B0(v24, (uint64_t)v27, (uint64_t (*)(uint64_t, uint64_t))Error.onionDescription.getter);
  swift_bridgeObjectRelease();
  uint64_t v29 = v25;
  sub_25E059C08(0, (unint64_t *)&qword_26A6D4930, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_25E056704();
  OUTLINED_FUNCTION_21_2();
  swift_bridgeObjectRelease();
  sub_25E0DB630();

  swift_bridgeObjectRelease();
  return v31;
}

uint64_t static SonicErrorOnion.decodeOnionPairs(_:)(uint64_t a1, unint64_t a2)
{
  if ((sub_25E0DB6B0() & 1) == 0) {
    return MEMORY[0x263F8EE78];
  }
  char v4 = sub_25E0DB6C0();
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    sub_25E0DB3C0();
    unint64_t v6 = sub_25E0560FC(1uLL, a1, a2);
    *(void *)uint64_t v54 = sub_25E0561D0(1, v6, v7);
    *(void *)&v54[8] = v8;
    *(void *)&v54[16] = v9;
    uint64_t v55 = v10;
    unint64_t v53 = 0xE200000000000000;
    sub_25E056778();
    unint64_t v11 = sub_25E0567C4();
    OUTLINED_FUNCTION_27_2(v11, v12, v13, MEMORY[0x263F8D980], MEMORY[0x263F8D310], v14, v15, MEMORY[0x263F8D138], v43, v46, v48, v50, 41);
    uint64_t v16 = sub_25E0DBBA0();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v51 = v5;
      sub_25E03CC2C(0, v17, 0);
      uint64_t v26 = v5;
      uint64_t v44 = v16;
      uint64_t v27 = (uint64_t *)(v16 + 56);
      do
      {
        uint64_t v28 = *(v27 - 1);
        uint64_t v29 = *v27;
        *(_OWORD *)uint64_t v54 = *(_OWORD *)(v27 - 3);
        *(void *)&v54[16] = v28;
        uint64_t v55 = v29;
        unint64_t v53 = 0xE200000000000000;
        OUTLINED_FUNCTION_27_2(v18, v19, v20, v21, v22, v23, v24, v25, v44, v47, v49, v51, 44);
        uint64_t v18 = sub_25E0DBBA0();
        uint64_t v30 = v18;
        uint64_t v51 = v26;
        unint64_t v32 = *(void *)(v26 + 16);
        unint64_t v31 = *(void *)(v26 + 24);
        if (v32 >= v31 >> 1) {
          sub_25E03CC2C(v31 > 1, v32 + 1, 1);
        }
        *(void *)(v26 + 16) = v32 + 1;
        *(void *)(v26 + 8 * v32 + 32) = v30;
        v27 += 4;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = MEMORY[0x263F8EE78];
    }
    uint64_t v33 = *(void *)(v26 + 16);
    if (v33)
    {
      sub_25E0DB3C0();
      uint64_t v34 = 0;
      uint64_t v5 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v52 = *(void *)(v26 + 8 * v34 + 32);
        sub_25E0562B8((uint64_t)&v52, v54);
        if (*(void *)&v54[8] != 1)
        {
          long long v45 = *(_OWORD *)&v54[8];
          uint64_t v35 = *(void *)v54;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25E056DE0(0, *(void *)(v5 + 16) + 1, 1, v5, (uint64_t)&unk_26A6D49C8, (uint64_t)sub_25E059B78, (void (*)(void, uint64_t, char *, uint64_t))sub_25E057BC8, (void (*)(uint64_t, uint64_t, char *))sub_25E03B5C4);
            uint64_t v5 = v40;
          }
          unint64_t v37 = *(void *)(v5 + 16);
          unint64_t v36 = *(void *)(v5 + 24);
          long long v38 = v45;
          if (v37 >= v36 >> 1)
          {
            sub_25E056DE0(v36 > 1, v37 + 1, 1, v5, (uint64_t)&unk_26A6D49C8, (uint64_t)sub_25E059B78, (void (*)(void, uint64_t, char *, uint64_t))sub_25E057BC8, (void (*)(uint64_t, uint64_t, char *))sub_25E03B5C4);
            long long v38 = v45;
            uint64_t v5 = v41;
          }
          *(void *)(v5 + 16) = v37 + 1;
          uint64_t v39 = v5 + 24 * v37;
          *(void *)(v39 + 32) = v35;
          *(_OWORD *)(v39 + 40) = v38;
        }
        ++v34;
      }
      while (v33 != v34);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
    }
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_25E0560FC(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    double result = sub_25E0DB600();
    if (v6) {
      double result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_25E0DB710();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0561D0(uint64_t result, unint64_t a2, unint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  double result = sub_25E0DBD10();
  if (__OFSUB__(result, v5))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  double result = sub_25E0DBD00();
  if (v6) {
    unint64_t v7 = a3;
  }
  else {
    unint64_t v7 = result;
  }
  if (v7 >> 14 >= a2 >> 14)
  {
    uint64_t v8 = sub_25E0DBD30();
    swift_bridgeObjectRelease();
    return v8;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_25E0562B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v4 = v3[4];
    unint64_t v5 = v3[5];
    unint64_t v7 = v3[6];
    unint64_t v6 = v3[7];
    sub_25E0DB3C0();
  }
  else
  {
    uint64_t v4 = MEMORY[0x2611CE240](0, 0xE000000000000000);
    unint64_t v5 = v8;
    unint64_t v7 = v9;
    unint64_t v6 = v10;
  }
  if ((v5 ^ v4) < 0x4000) {
    goto LABEL_42;
  }
  uint64_t v11 = sub_25E0595DC(v4, v5, v7, v6, 10);
  if ((v12 & 0x100) != 0)
  {
    uint64_t v13 = sub_25E058D70(v4, v5, v7, v6, 10);
    char v17 = v16;
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v13 = (unsigned __int8 *)v11;
    char v14 = v12;
    uint64_t result = swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_43;
    }
  }
  unint64_t v18 = sub_25E0565D4((uint64_t)v3);
  if (!v21) {
    unint64_t v18 = MEMORY[0x2611CE240](0, 0xE000000000000000);
  }
  uint64_t v22 = v18;
  uint64_t v23 = v19;
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  if ((v19 ^ v18) < 0x4000)
  {
LABEL_42:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v26 = sub_25E0595DC(v18, v19, v20, v21, 10);
  if ((v27 & 0x100) == 0)
  {
    uint64_t v28 = (unsigned __int8 *)v26;
    char v29 = v27;
    uint64_t result = swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_43;
    }
LABEL_16:
    if (qword_26A6D4218 != -1) {
      swift_once();
    }
    sub_25E058CE4(qword_26A6D4928, v46);
    uint64_t v32 = v46[0];
    uint64_t v33 = v46[1];
    int64_t v34 = v46[3];
    unint64_t v35 = v46[4];
    int64_t v36 = (unint64_t)(v46[2] + 64) >> 6;
    sub_25E0DB3C0();
    while (1)
    {
      if (v35)
      {
        unint64_t v37 = __clz(__rbit64(v35));
        v35 &= v35 - 1;
        unint64_t v38 = v37 | (v34 << 6);
      }
      else
      {
        int64_t v39 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        if (v39 >= v36) {
          goto LABEL_39;
        }
        unint64_t v40 = *(void *)(v33 + 8 * v39);
        int64_t v41 = v34 + 1;
        if (!v40)
        {
          int64_t v41 = v34 + 2;
          if (v34 + 2 >= v36) {
            goto LABEL_39;
          }
          unint64_t v40 = *(void *)(v33 + 8 * v41);
          if (!v40)
          {
            int64_t v41 = v34 + 3;
            if (v34 + 3 >= v36) {
              goto LABEL_39;
            }
            unint64_t v40 = *(void *)(v33 + 8 * v41);
            if (!v40)
            {
              int64_t v41 = v34 + 4;
              if (v34 + 4 >= v36) {
                goto LABEL_39;
              }
              unint64_t v40 = *(void *)(v33 + 8 * v41);
              if (!v40)
              {
                int64_t v41 = v34 + 5;
                if (v34 + 5 >= v36) {
                  goto LABEL_39;
                }
                unint64_t v40 = *(void *)(v33 + 8 * v41);
                if (!v40)
                {
                  int64_t v42 = v34 + 6;
                  while (v42 < v36)
                  {
                    unint64_t v40 = *(void *)(v33 + 8 * v42++);
                    if (v40)
                    {
                      int64_t v41 = v42 - 1;
                      goto LABEL_36;
                    }
                  }
LABEL_39:
                  uint64_t result = swift_release();
                  *a2 = 0;
                  a2[1] = 0;
LABEL_40:
                  a2[2] = v28;
                  return result;
                }
              }
            }
          }
        }
LABEL_36:
        unint64_t v35 = (v40 - 1) & v40;
        unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
        int64_t v34 = v41;
      }
      if (*(unsigned __int8 **)(*(void *)(v32 + 56) + 8 * v38) == v13)
      {
        uint64_t v43 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v38);
        uint64_t v45 = *v43;
        uint64_t v44 = v43[1];
        sub_25E0DB3C0();
        uint64_t result = swift_release();
        *a2 = v45;
        a2[1] = v44;
        goto LABEL_40;
      }
    }
  }
  uint64_t v28 = sub_25E058D70(v22, v23, v24, v25, 10);
  char v31 = v30;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v31 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_43:
  *(_OWORD *)a2 = xmmword_25E0DDED0;
  a2[2] = 0;
  return result;
}

uint64_t sub_25E0565D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 32 * v1);
  sub_25E0DB3C0();
  return v2;
}

uint64_t sub_25E056638()
{
  uint64_t result = sub_25E0DB3A0();
  qword_26A6D4928 = result;
  return result;
}

uint64_t sub_25E056678()
{
  return sub_25E05669C();
}

uint64_t sub_25E05669C()
{
  id v1 = objc_msgSend(v0, sel_underlyingErrors);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  uint64_t v2 = sub_25E0DB830();

  return v2;
}

unint64_t sub_25E056704()
{
  unint64_t result = qword_26A6D4938;
  if (!qword_26A6D4938)
  {
    sub_25E059C08(255, (unint64_t *)&qword_26A6D4930, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4938);
  }
  return result;
}

unint64_t sub_25E056778()
{
  unint64_t result = qword_26A6D4940;
  if (!qword_26A6D4940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4940);
  }
  return result;
}

unint64_t sub_25E0567C4()
{
  unint64_t result = qword_26A6D4948;
  if (!qword_26A6D4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4948);
  }
  return result;
}

void sub_25E056810()
{
}

void sub_25E056838()
{
  OUTLINED_FUNCTION_9_4();
  if (v3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_16();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v2)
  {
    sub_25E059C08(0, (unint64_t *)&qword_26A6D4990, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    unint64_t v6 = (void *)swift_allocObject();
    size_t v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    unint64_t v8 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B4C4(v8, v9, v10);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_4_7();
    sub_25E0579A0(v11, v12, v13, v14);
  }
}

void sub_25E056908()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E058C3C(0, &qword_26A6D49D8);
    char v5 = (const void *)OUTLINED_FUNCTION_24_0();
    size_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_10_3((uint64_t)(v6 - 32) / 8);
  }
  if (v0)
  {
    size_t v7 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B5C0(v7, v8, v9);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_4_7();
    sub_25E057A90(v10, v11, v12, v13);
  }
}

void sub_25E0569E0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_25E056A10()
{
  OUTLINED_FUNCTION_9_4();
  if (v4)
  {
    OUTLINED_FUNCTION_9_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v3)
  {
    sub_25E058C8C(0, &qword_26A6D49B0, (void (*)(uint64_t))sub_25E059AFC);
    size_t v7 = (char *)OUTLINED_FUNCTION_24_0();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_10_3((uint64_t)(v8 - 32) / 8);
  }
  else
  {
    size_t v7 = (char *)MEMORY[0x263F8EE78];
  }
  if (v1)
  {
    size_t v9 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B5C0(v9, v10, v11);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    sub_25E058B1C(0, v2, v7 + 32, v0);
  }
}

void sub_25E056AE0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_25E056AF8(char a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v9 != v10)
    {
      OUTLINED_FUNCTION_16();
      if (v9)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v8 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v8;
  }
  if (v12)
  {
    sub_25E058BF0(0, &qword_26A6D4950);
    uint64_t v13 = (void *)OUTLINED_FUNCTION_24_0();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 8);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  if (a1)
  {
    a5(a4 + 32, v11, v15);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    sub_25E0587A0(0, v11, v15, a4);
  }
}

void sub_25E056BE8()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E059C08(0, (unint64_t *)&qword_26A6D49A8, (uint64_t)&type metadata for SQL.Interpolation.Token, MEMORY[0x263F8E0F8]);
    char v5 = (void *)OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_4(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B688(v6, v7, v8);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_4_7();
    sub_25E057CE4(v9, v10, v11, v12);
  }
}

void sub_25E056CAC()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E059C08(0, &qword_26A6D49A0, (uint64_t)&unk_270AEE180, MEMORY[0x263F8E0F8]);
    char v5 = (void *)OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_4(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B6E8(v6, v7, v8);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_4_7();
    sub_25E057DE4(v9, v10, v11, v12);
  }
}

void sub_25E056D70()
{
}

void sub_25E056D98(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_25E056DE0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void, uint64_t, char *, uint64_t), void (*a8)(uint64_t, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_16();
      if (v14)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_23_2();
  if (v9)
  {
    sub_25E058C8C(0, v16, v17);
    unint64_t v18 = (char *)swift_allocObject();
    size_t v19 = _swift_stdlib_malloc_size(v18);
    OUTLINED_FUNCTION_30_0(v19);
  }
  else
  {
    unint64_t v18 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v20 = v18 + 32;
  if (a1)
  {
    a8(a4 + 32, v8, v20);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    a7(0, v8, v20, a4);
  }
}

void sub_25E056EC4()
{
}

void sub_25E056EEC()
{
  OUTLINED_FUNCTION_28_2();
  if (v6)
  {
    OUTLINED_FUNCTION_9_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_23_2();
  if (v5)
  {
    sub_25E059C08(0, v9, v1, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_30_0(v11);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  if (v3)
  {
    v2(v0 + 32, v4, v10 + 32);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_32_1();
    sub_25E058000(v12, v13, v14, v15);
  }
}

void sub_25E056FCC()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E058C3C(0, &qword_26A6D49F8);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_4(v5);
  }
  if (v0)
  {
    uint64_t v6 = OUTLINED_FUNCTION_11_2();
    sub_25E03B7E4(v6);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_4_7();
    sub_25E0580CC(v7, v8, v9, v10);
  }
}

void sub_25E057098()
{
}

void sub_25E0570C0()
{
  OUTLINED_FUNCTION_28_2();
  if (v6)
  {
    OUTLINED_FUNCTION_9_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_16();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_23_2();
  if (v5)
  {
    sub_25E059C08(0, v9, v1, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (void *)OUTLINED_FUNCTION_24_0();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v4;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v3)
  {
    v2(v0 + 32, v4, v10 + 4);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_32_1();
    sub_25E05820C(v12, v13, v14, v15);
  }
}

void sub_25E05719C()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E058C8C(0, &qword_26A6D4980, (void (*)(uint64_t))sub_25E058D1C);
    uint64_t v5 = (const void *)OUTLINED_FUNCTION_24_0();
    size_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_10_3((uint64_t)(v6 - 32) / 16);
  }
  if (v0)
  {
    char v7 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B3CC(v7, v8, v9);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_4_7();
    sub_25E0582D0(v10, v11, v12, v13);
  }
}

void sub_25E057264()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E059C08(0, &qword_26A6D42F0, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
    uint64_t v5 = (const void *)OUTLINED_FUNCTION_24_0();
    size_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_10_3((uint64_t)(v6 - 32) / 16);
  }
  if (v0)
  {
    char v7 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B3CC(v7, v8, v9);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_4_7();
    sub_25E0583C4(v10, v11, v12, v13);
  }
}

void sub_25E057334()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E059C08(0, &qword_26A6D4970, (uint64_t)&type metadata for SQLIndexOrderingTerm, MEMORY[0x263F8E0F8]);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_4(v5);
  }
  if (v0)
  {
    size_t v6 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B3C8(v6, v7, v8);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_4_7();
    sub_25E0584BC(v9, v10, v11, v12);
  }
}

void sub_25E0573F8()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E059C08(0, &qword_26A6D4978, (uint64_t)&type metadata for SQLIndexConstraint, MEMORY[0x263F8E0F8]);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_6_4(v5);
  }
  if (v0)
  {
    size_t v6 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B9D8(v6, v7, v8);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_4_7();
    sub_25E0585BC(v9, v10, v11, v12);
  }
}

void sub_25E0574BC(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_25E0574EC(char a1, uint64_t a2, char a3, uint64_t a4, void *a5, unint64_t *a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v13 != v14)
    {
      OUTLINED_FUNCTION_16();
      if (v13)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v12 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v12;
  }
  if (v16)
  {
    sub_25E058BF0(0, a5);
    char v17 = (void *)swift_allocObject();
    size_t v18 = _swift_stdlib_malloc_size(v17);
    v17[2] = v15;
    v17[3] = 2 * ((uint64_t)(v18 - 32) / 40);
  }
  else
  {
    char v17 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v19 = (unint64_t)(v17 + 4);
  if (a1)
  {
    a8(a4 + 32, v15, v19);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    sub_25E0586BC(0, v15, v19, a4, a6);
  }
}

uint64_t sub_25E0575F0()
{
  OUTLINED_FUNCTION_9_4();
  if (v3)
  {
    OUTLINED_FUNCTION_9_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16();
      if (v5)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  else
  {
    uint64_t v4 = v2;
  }
  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    uint64_t v12 = (const void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  sub_25E058C8C(0, &qword_26A6D4968, (void (*)(uint64_t))type metadata accessor for SQLDatabase.AttachedLocation);
  uint64_t v9 = *(void *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (const void *)swift_allocObject();
  size_t v13 = _swift_stdlib_malloc_size(v12);
  if (!v10 || (v13 - v11 == 0x8000000000000000 ? (BOOL v14 = v10 == -1) : (BOOL v14 = 0), v14))
  {
LABEL_23:
    OUTLINED_FUNCTION_0();
    uint64_t result = sub_25E0DC130();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_10_3((uint64_t)(v13 - v11) / v10);
LABEL_18:
  uint64_t v15 = *(void *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  if (v1)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    sub_25E03BA3C(v0 + v16, v7, (unint64_t)v12 + v16);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_4_7();
    sub_25E058884(v17, v18, v19, v20);
  }
  return (uint64_t)v12;
}

void sub_25E0577F0()
{
  OUTLINED_FUNCTION_9_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_16();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v1)
  {
    sub_25E058C3C(0, &qword_26A6D43A8);
    char v5 = (const void *)OUTLINED_FUNCTION_24_0();
    size_t v6 = _swift_stdlib_malloc_size(v5);
    OUTLINED_FUNCTION_10_3((uint64_t)(v6 - 32) / 16);
  }
  if (v0)
  {
    uint64_t v7 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B3CC(v7, v8, v9);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_4_7();
    sub_25E0589E4(v10, v11, v12, v13);
  }
}

void sub_25E0578C8()
{
  OUTLINED_FUNCTION_9_4();
  if (v4)
  {
    OUTLINED_FUNCTION_9_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_16();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10();
    }
  }
  OUTLINED_FUNCTION_3_2();
  if (v3)
  {
    sub_25E059C08(0, &qword_26A6D42E0, MEMORY[0x263F8D6C8], MEMORY[0x263F8E0F8]);
    uint64_t v7 = (char *)OUTLINED_FUNCTION_24_0();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_10_3((uint64_t)(v8 - 32) / 8);
  }
  else
  {
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  }
  if (v1)
  {
    uint64_t v9 = (char *)OUTLINED_FUNCTION_11_2();
    sub_25E03B5C0(v9, v10, v11);
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    sub_25E058B1C(0, v2, v7 + 32, v0);
  }
}

char *sub_25E0579A0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E057A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_25E059C08(0, &qword_26A6D49E0, (uint64_t)&type metadata for SQLDynamicValue, MEMORY[0x263F8D488]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E057BC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_25E059B78();
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E057CE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E057DE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E057EE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_25E03EBFC();
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E058000(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 48 * a1 + 32;
  unint64_t v6 = a3 + 48 * v4;
  if (v5 >= v6 || v5 + 48 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_5_4();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_4_3();
  __break(1u);
  return result;
}

uint64_t sub_25E0580CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_25E059C08(0, (unint64_t *)&qword_26A6D4A00, (uint64_t)&type metadata for SQLVirtualTableIndexResults.ConstraintUsage, MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E05820C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 16 * a1 + 32;
  unint64_t v6 = a3 + 16 * v4;
  if (v5 >= v6 || v5 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_5_4();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_4_3();
  __break(1u);
  return result;
}

char *sub_25E0582D0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E0583C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E0584BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E0585BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E0586BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    sub_25E03E530(0, a5);
    OUTLINED_FUNCTION_26_2();
    swift_bridgeObjectRelease();
    return v7;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_5_4();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_4_3();
  __break(1u);
  return result;
}

uint64_t sub_25E0587A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 8 * a1 + 32;
  unint64_t v6 = a3 + 8 * v4;
  if (v5 >= v6 || v5 + 8 * v4 <= a3)
  {
    sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
    OUTLINED_FUNCTION_26_2();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_5_4();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_4_3();
  __break(1u);
  return result;
}

uint64_t sub_25E058884(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E0589E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_25E059C08(0, (unint64_t *)&qword_26A6D42E8, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

char *sub_25E058B1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0();
    OUTLINED_FUNCTION_6_0();
    goto LABEL_11;
  }
  unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
  unint64_t v6 = &__dst[8 * v4];
  if (v5 >= v6 || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_5_4();
LABEL_11:
  uint64_t result = (char *)OUTLINED_FUNCTION_4_3();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SonicErrorOnion()
{
  return &type metadata for SonicErrorOnion;
}

void sub_25E058BF0(uint64_t a1, void *a2)
{
  if (!*a2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_24_2();
    sub_25E03E530(v3, v4);
    unint64_t v5 = sub_25E0DC2E0();
    if (!v6) {
      atomic_store(v5, v2);
    }
  }
}

void sub_25E058C3C(uint64_t a1, void *a2)
{
  if (!*a2)
  {
    uint64_t v3 = OUTLINED_FUNCTION_24_2();
    sub_25E059C08(v3, v4, v5, v6);
    unint64_t v7 = sub_25E0DC2E0();
    if (!v8) {
      atomic_store(v7, v2);
    }
  }
}

void sub_25E058C8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25E0DC2E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_25E058CE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_25E058D1C()
{
  if (!qword_26A6D4988)
  {
    unint64_t v0 = sub_25E0DBC50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4988);
    }
  }
}

unsigned __int8 *sub_25E058D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_25E04D8C8();
  sub_25E0DB3C0();
  uint64_t v7 = sub_25E0DB700();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_25E0590E0();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_25E0DBF70();
  }
LABEL_7:
  uint64_t v13 = sub_25E058E64(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_25E058E64(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          unint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0590E0()
{
  unint64_t v0 = sub_25E05914C();
  uint64_t v4 = sub_25E059180(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25E05914C()
{
  return sub_25E0DB710();
}

uint64_t sub_25E059180(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_25E0592D8(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_25E0A83AC(v9, 0);
      unint64_t v12 = sub_25E0593D8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_25E0DB3C0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_25E0DBF70();
LABEL_4:
        JUMPOUT(0x2611CDAF0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2611CDAF0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2611CDAF0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_25E0592D8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_25E0A8434(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_25E0A8434(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return sub_25E0DB680();
}

unint64_t sub_25E0593D8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_25E0A8434(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_25E0DB690();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_25E0DBF70();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_25E0A8434(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_25E0DB660();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_25E0595DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    uint64_t v12 = HIBYTE(a4) & 0xF;
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v15;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v11 = (void *)sub_25E0DBF70();
  }
  uint64_t result = sub_25E0596B8((uint64_t)v11, v12, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v16 = v14 & 1;
LABEL_8:
    LOBYTE(v15[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_25E0596B8(uint64_t result, uint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v11 = a3;
  uint64_t v12 = result;
  uint64_t v13 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v13) = 1;
  }
  uint64_t v14 = 4 << v13;
  unint64_t v15 = a3 & 0xC;
  unint64_t v16 = a3;
  if (v15 == 4 << v13)
  {
    uint64_t result = sub_25E0A8434(a3, a5, a6);
    unint64_t v16 = result;
  }
  uint64_t v17 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x1000000000000000) != 0)
  {
    unint64_t v19 = a5 & 0xFFFFFFFFFFFFLL;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v19 = HIBYTE(a6) & 0xF;
    }
    if (v19 < v16 >> 16) {
      goto LABEL_96;
    }
    uint64_t result = sub_25E0DB680();
    uint64_t v18 = result;
    uint64_t v17 = HIBYTE(a6) & 0xF;
  }
  else
  {
    uint64_t v18 = v16 >> 16;
  }
  if (v15 == v14)
  {
    uint64_t v20 = v17;
    uint64_t result = sub_25E0A8434(v11, a5, a6);
    uint64_t v17 = v20;
    unint64_t v11 = result;
  }
  if ((a4 & 0xC) == v14)
  {
    unint64_t v21 = a4;
    uint64_t v22 = v17;
    uint64_t result = sub_25E0A8434(v21, a5, a6);
    uint64_t v17 = v22;
    a4 = result;
    if ((a6 & 0x1000000000000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
LABEL_11:
    uint64_t result = (a4 >> 16) - (v11 >> 16);
    goto LABEL_22;
  }
  unint64_t v23 = a5 & 0xFFFFFFFFFFFFLL;
  if ((a6 & 0x2000000000000000) != 0) {
    unint64_t v23 = v17;
  }
  if (v23 < v11 >> 16) {
    goto LABEL_92;
  }
  if (v23 < a4 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t result = sub_25E0DB680();
LABEL_22:
  uint64_t v24 = v18 + result;
  if (__OFADD__(v18, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v24 < v18)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unsigned __int8 v25 = (unsigned __int8 *)(v12 + v18);
  if (!v12) {
    unsigned __int8 v25 = 0;
  }
  int v26 = *v25;
  if (v26 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v37 = a7 + 48;
        unsigned __int8 v38 = a7 + 55;
        unsigned __int8 v39 = a7 + 87;
        if (a7 > 10)
        {
          unsigned __int8 v37 = 58;
        }
        else
        {
          unsigned __int8 v39 = 97;
          unsigned __int8 v38 = 65;
        }
        if (v25)
        {
          uint64_t v30 = 0;
          unint64_t v40 = v25 + 1;
          uint64_t v41 = result - 1;
          do
          {
            unsigned int v42 = *v40;
            if (v42 < 0x30 || v42 >= v37)
            {
              if (v42 < 0x41 || v42 >= v38)
              {
                uint64_t v35 = 0;
                if (v42 < 0x61 || v42 >= v39) {
                  return v35;
                }
                char v43 = -87;
              }
              else
              {
                char v43 = -55;
              }
            }
            else
            {
              char v43 = -48;
            }
            uint64_t v44 = v30 * a7;
            if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63) {
              return 0;
            }
            uint64_t v30 = v44 + (v42 + v43);
            if (__OFADD__(v44, (v42 + v43))) {
              return 0;
            }
            ++v40;
            --v41;
          }
          while (v41);
          return v30;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v26 != 45)
  {
    if (v24 != v18)
    {
      unsigned __int8 v45 = a7 + 48;
      unsigned __int8 v46 = a7 + 55;
      unsigned __int8 v47 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v45 = 58;
      }
      else
      {
        unsigned __int8 v47 = 97;
        unsigned __int8 v46 = 65;
      }
      if (v25)
      {
        uint64_t v48 = 0;
        do
        {
          unsigned int v49 = *v25;
          if (v49 < 0x30 || v49 >= v45)
          {
            if (v49 < 0x41 || v49 >= v46)
            {
              uint64_t v35 = 0;
              if (v49 < 0x61 || v49 >= v47) {
                return v35;
              }
              char v50 = -87;
            }
            else
            {
              char v50 = -55;
            }
          }
          else
          {
            char v50 = -48;
          }
          uint64_t v51 = v48 * a7;
          if ((unsigned __int128)(v48 * (__int128)a7) >> 64 != (v48 * a7) >> 63) {
            return 0;
          }
          uint64_t v48 = v51 + (v49 + v50);
          if (__OFADD__(v51, (v49 + v50))) {
            return 0;
          }
          ++v25;
          --result;
        }
        while (result);
        return v51 + (v49 + v50);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v27 = a7 + 48;
      unsigned __int8 v28 = a7 + 55;
      unsigned __int8 v29 = a7 + 87;
      if (a7 > 10)
      {
        unsigned __int8 v27 = 58;
      }
      else
      {
        unsigned __int8 v29 = 97;
        unsigned __int8 v28 = 65;
      }
      if (v25)
      {
        uint64_t v30 = 0;
        char v31 = v25 + 1;
        uint64_t v32 = result - 1;
        while (1)
        {
          unsigned int v33 = *v31;
          if (v33 < 0x30 || v33 >= v27)
          {
            if (v33 < 0x41 || v33 >= v28)
            {
              uint64_t v35 = 0;
              if (v33 < 0x61 || v33 >= v29) {
                return v35;
              }
              char v34 = -87;
            }
            else
            {
              char v34 = -55;
            }
          }
          else
          {
            char v34 = -48;
          }
          uint64_t v36 = v30 * a7;
          if ((unsigned __int128)(v30 * (__int128)a7) >> 64 != (v30 * a7) >> 63) {
            return 0;
          }
          uint64_t v30 = v36 - (v33 + v34);
          if (__OFSUB__(v36, (v33 + v34))) {
            return 0;
          }
          ++v31;
          if (!--v32) {
            return v30;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

void sub_25E059AFC()
{
  if (!qword_26A6D49B8)
  {
    sub_25E03E530(255, (unint64_t *)&qword_26B384A08);
    unint64_t v0 = sub_25E0DBB10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D49B8);
    }
  }
}

void sub_25E059B78()
{
  if (!qword_26A6D49D0)
  {
    sub_25E059C08(255, (unint64_t *)&qword_26A6D42E8, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26A6D49D0);
    }
  }
}

void sub_25E059C08(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_20_2()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return sub_25E0DB480();
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_arrayInitWithCopy();
}

char *OUTLINED_FUNCTION_27_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t OUTLINED_FUNCTION_29_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_30_0(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_25E0DC340();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return 0;
}

uint64_t Mergeable.merge(other:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16);
  v8(a1, v4, a4);
  v8(a2, a3, a4);

  return __swift_storeEnumTagSinglePayload(a2, 0, 1, a4);
}

uint64_t Array<A>.merged()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E0DBCF0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v10 - v7;
  uint64_t v11 = a1;
  sub_25E0DB940();
  swift_getWitnessTable();
  if (sub_25E0DBC20()) {
    return sub_25E0DB8C0();
  }
  uint64_t v11 = a1;
  sub_25E0DB3C0();
  uint64_t v13 = sub_25E0DB190();
  uint64_t v12 = sub_25E0DB8C0();
  MEMORY[0x2611CDE10](a1, a2);
  sub_25E0DB890();
  OUTLINED_FUNCTION_24();
  sub_25E0DB180();
  uint64_t v10 = v13;
  swift_getWitnessTable();
  if (sub_25E0DBC20())
  {
LABEL_6:
    swift_release();
    OUTLINED_FUNCTION_24();
    return v12;
  }
  else
  {
    while (1)
    {
      swift_beginAccess();
      sub_25E0DB170();
      swift_endAccess();
      uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, a2);
      if (result == 1) {
        break;
      }
      sub_25E05A0E8((uint64_t)v8, (uint64_t)&v13, (uint64_t)&v12, a2, a3);
      (*(void (**)(char *, uint64_t))(*(void *)(a2 - 8) + 8))(v8, a2);
      uint64_t v10 = v13;
      swift_getWitnessTable();
      if (sub_25E0DBC20()) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25E05A0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a3;
  uint64_t v61 = a2;
  uint64_t v7 = sub_25E0DBCF0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v54 = (char *)&v46 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  unsigned int v49 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v48 = (char *)&v46 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v63 = (char *)&v46 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v62 = (char *)&v46 - v24;
  MEMORY[0x270FA5388](v23);
  unsigned __int8 v25 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v16 += 16;
  uint64_t v60 = (char *)&v46 - v26;
  uint64_t v58 = v25;
  ((void (*)(char *))v25)((char *)&v46 - v26);
  uint64_t v65 = sub_25E0DB8C0();
  uint64_t v52 = a5 + 8;
  uint64_t v53 = v16 + 16;
  uint64_t v59 = v16;
  unsigned __int8 v27 = (void (**)(char *, uint64_t))(v16 - 8);
  char v50 = v15;
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v56 = a5;
  char v57 = (void (**)(char *, uint64_t))(v8 + 8);
  unsigned __int8 v47 = (void (**)(char *, uint64_t))(v16 - 8);
  unsigned __int8 v28 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  unsigned __int8 v29 = v54;
  uint64_t v30 = v58;
  while (1)
  {
    swift_beginAccess();
    sub_25E0DB180();
    sub_25E0DB170();
    swift_endAccess();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, a4) == 1) {
      break;
    }
    uint64_t v31 = v7;
    uint64_t v32 = *v28;
    unsigned int v33 = v62;
    (*v28)(v62, v15, a4);
    char v34 = v63;
    uint64_t v35 = v33;
    uint64_t v36 = v60;
    (*(void (**)(char *, char *, char *, uint64_t))(v56 + 8))(v63, v29, v35, a4);
    unsigned __int8 v37 = *v27;
    (*v27)(v36, a4);
    v30(v36, v34, a4);
    uint64_t v38 = (uint64_t)v55;
    (*v51)(v55, v29, v31);
    if (__swift_getEnumTagSinglePayload(v38, 1, a4) == 1)
    {
      uint64_t v39 = v38;
      unint64_t v40 = *v57;
      (*v57)(v29, v31);
      v37(v63, a4);
      v37(v62, a4);
      v40((char *)v39, v31);
    }
    else
    {
      uint64_t v41 = v48;
      v32(v48, (char *)v38, a4);
      v30(v49, v41, a4);
      sub_25E0DB940();
      sub_25E0DB900();
      unsigned int v42 = v41;
      char v43 = v63;
      unsigned __int8 v27 = v47;
      v37(v42, a4);
      (*v57)(v29, v31);
      v37(v43, a4);
      v37(v62, a4);
    }
    uint64_t v7 = v31;
    unint64_t v15 = v50;
  }
  (*v57)(v15, v7);
  uint64_t v44 = v60;
  v58(v49, v60, a4);
  swift_beginAccess();
  sub_25E0DB940();
  sub_25E0DB900();
  swift_endAccess();
  uint64_t v64 = v65;
  swift_beginAccess();
  swift_getWitnessTable();
  sub_25E0DB150();
  swift_endAccess();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))*v27)(v44, a4);
}

uint64_t Array<A>.merging(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = sub_25E0DB8B0();
  swift_bridgeObjectRelease();
  uint64_t v7 = Array<A>.merged()(v6, v5, a3);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v3 = v7;
  return result;
}

uint64_t Array<A>.merge()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Array<A>.merged()(*v2, *(void *)(a1 + 16), a2);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = v3;
  return result;
}

uint64_t Array<A>.merged()(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_25E05C1F8(0, &qword_26A6D4A10, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F331B8]);
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = sub_25E05BE94();
    uint64_t v5 = OUTLINED_FUNCTION_3_3(v4);
    sub_25E05B718((uint64_t)v5, v6, v2, a1);
  }
  else
  {
    sub_25E0DB3C0();
    uint64_t v3 = *(void *)sub_25E0DB140();
    swift_retain();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (void *)v3;
  uint64_t v22 = MEMORY[0x263F8EE78];
  while (1)
  {
    swift_beginAccess();
    if ((uint64_t)v23[3] < 1)
    {
      uint64_t v18 = 0;
      long long v16 = 0u;
      long long v17 = 0u;
      goto LABEL_14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_25E05B8E4();
    }
    uint64_t v7 = v23;
    uint64_t result = sub_25E03DF3C((long long *)&v7[5 * v7[4] + 5], (uint64_t)&v16);
    uint64_t v9 = v7[4];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    uint64_t v12 = v7[3];
    if (v11 >= v7[2]) {
      uint64_t v11 = 0;
    }
    v7[4] = v11;
    if (__OFSUB__(v12, 1)) {
      goto LABEL_18;
    }
    v7[3] = v12 - 1;
LABEL_14:
    swift_endAccess();
    if (!*((void *)&v17 + 1))
    {
      swift_release();
      sub_25E05B800((uint64_t)&v16);
      OUTLINED_FUNCTION_24();
      return v22;
    }
    sub_25E03DF3C(&v16, (uint64_t)v19);
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    unint64_t v15 = __swift_project_boxed_opaque_existential_1(v19, v20);
    sub_25E05A928((uint64_t)v15, (uint64_t *)&v23, (uint64_t)&v22, v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E05A928(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25E05B668(a4, a4);
  uint64_t v9 = *(void *)(a4 - 8);
  swift_allocObject();
  sub_25E0DB870();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, a1, a4);
  sub_25E0DB940();
  swift_beginAccess();
  sub_25E05C1F8(0, &qword_26A6D4A20, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F331F8]);
  sub_25E05C25C();
  swift_retain();
  sub_25E0DB740();
  swift_release();
  uint64_t v11 = sub_25E0DB8B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = sub_25E05BF6C((uint64_t (*)(unsigned char *))sub_25E05C2DC);
  uint64_t result = *a2;
  uint64_t v14 = *(void *)(*a2 + 24);
  if (v14 < v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v12 < 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_25E05B8E4();
  }
  sub_25E0CCF28(v12, v14, *a2 + 16, *a2 + 40);
  swift_endAccess();
  Array<A>.merged()(v11, a4, a5);
  swift_bridgeObjectRelease();
  sub_25E05B88C();
  uint64_t v15 = sub_25E0DC0C0();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_25E05AFA0(v15);
  return swift_endAccess();
}

uint64_t sub_25E05ABD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25E03DF54(a1, (uint64_t)v7);
  sub_25E05B88C();
  int v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_25E05AC50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  unint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_25E03DF54(v4, (uint64_t)v10);
  sub_25E05B88C();
  uint64_t v7 = swift_dynamicCast();
  if (v7) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  }
  return v7;
}

uint64_t sub_25E05AD48(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 16);
  if (*v1 >> 62)
  {
    sub_25E0DB3C0();
    uint64_t v3 = sub_25E0DC190();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = v3 + v2;
  if (__OFADD__(v3, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v5;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v4 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_12;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    sub_25E0DB3C0();
    sub_25E0DC190();
    swift_bridgeObjectRelease();
  }
  sub_25E0DB3C0();
  OUTLINED_FUNCTION_2_4();
  *uint64_t v1 = MEMORY[0x2611CE440]();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_6();
LABEL_12:
  uint64_t v9 = *(void *)(v8 + 16);
  unint64_t v10 = (*(void *)(v8 + 24) >> 1) - v9;
  uint64_t v11 = sub_25E0A73C0(&v27, v8 + 8 * v9 + 32, v10);
  if ((uint64_t)v11 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((uint64_t)v11 >= 1)
  {
    OUTLINED_FUNCTION_0_6();
    uint64_t v13 = *(void *)(v12 + 16);
    BOOL v14 = __OFADD__(v13, v11);
    uint64_t v15 = (char *)v11 + v13;
    if (v14)
    {
      __break(1u);
      goto LABEL_34;
    }
    *(void *)(v12 + 16) = v15;
  }
  if (v11 != (unint64_t *)v10) {
    goto LABEL_17;
  }
LABEL_23:
  OUTLINED_FUNCTION_0_6();
  uint64_t v7 = *(void *)(v17 + 16);
  uint64_t v18 = sub_25E05B5D4();
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v19 = v18;
  while (1)
  {
    OUTLINED_FUNCTION_0_6();
    if (v7 + 1 > *(void *)(v20 + 24) >> 1)
    {
      sub_25E0DB8A0();
      OUTLINED_FUNCTION_0_6();
    }
    unint64_t v21 = *(void *)(v20 + 24);
    if (v7 < (uint64_t)(v21 >> 1)) {
      break;
    }
LABEL_32:
    *(void *)(v20 + 16) = v7;
  }
  uint64_t v22 = v21 >> 1;
  uint64_t v23 = v20 + 32;
  while (1)
  {
    *(void *)(v23 + 8 * v7++) = v19;
    uint64_t v24 = sub_25E05B5D4();
    if (!v24) {
      break;
    }
    uint64_t v19 = v24;
    if (v7 >= v22)
    {
      OUTLINED_FUNCTION_0_6();
      goto LABEL_32;
    }
  }
LABEL_34:
  OUTLINED_FUNCTION_0_6();
  *(void *)(v25 + 16) = v7;
LABEL_17:
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = swift_release();

  return MEMORY[0x270F9DBB8](v16);
}

void sub_25E05AFA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      uint64_t v8 = v4 + v2;
    }
    else {
      uint64_t v8 = v4;
    }
    sub_25E0569E0(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    uint64_t v3 = v9;
  }
  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_25E03C168(a1 + 32, v2);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v10 = *(void *)(v3 + 16);
  BOOL v11 = __OFADD__(v10, v2);
  uint64_t v12 = v10 + v2;
  if (!v11)
  {
    *(void *)(v3 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_25E05B080(uint64_t a1)
{
}

void sub_25E05B0AC()
{
  OUTLINED_FUNCTION_8_4();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_4();
    sub_25E056D98(v7, v8, v9, v10);
    uint64_t v1 = v11;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_1_6();
  if (v12 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = OUTLINED_FUNCTION_4_8();
  sub_25E03C57C(v13, v14);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  OUTLINED_FUNCTION_7_4();
  if (!v5)
  {
    *(void *)(v1 + 16) = v15;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_25E05B164(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(*v4 + 16);
  if (__OFADD__(v9, v7))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!OUTLINED_FUNCTION_5_6() || (uint64_t v10 = *(void *)(v8 + 24) >> 1, v10 < v9 + v7))
  {
    OUTLINED_FUNCTION_2_4();
    sub_25E057098();
    uint64_t v8 = v11;
    uint64_t v10 = *(void *)(v11 + 24) >> 1;
  }
  if (v6 == v5)
  {
    if (v7 <= 0)
    {
LABEL_13:
      swift_unknownObjectRelease();
      *uint64_t v4 = v8;
      return;
    }
    __break(1u);
  }
  if (v10 - *(void *)(v8 + 16) < v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_25E03C654();
  if (v7 <= 0) {
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_7_4();
  if (!v13)
  {
    *(void *)(v8 + 16) = v12;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
}

void sub_25E05B258(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *v2;
  uint64_t v7 = *(void *)(*v2 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_5_6() || v7 + v5 > *(void *)(v6 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_4();
    uint64_t v6 = v4();
  }
  if (!*(void *)(v1 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_1_6();
  if (v8 != v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = OUTLINED_FUNCTION_4_8();
  v3(v10);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    return;
  }
  OUTLINED_FUNCTION_7_4();
  if (!v9)
  {
    *(void *)(v6 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_25E05B320()
{
  OUTLINED_FUNCTION_8_4();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = v4;
  if (!swift_isUniquelyReferenced_nonNull_native() || v3 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_2_4();
    sub_25E056BE8();
    uint64_t v1 = v7;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_1_6();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_4_8();
  sub_25E03C308();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    void *v0 = v1;
    return;
  }
  OUTLINED_FUNCTION_7_4();
  if (!v5)
  {
    *(void *)(v1 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t Array<A>.merging(contentsOf:)()
{
  uint64_t v1 = v0;
  v21[0] = *v0;
  uint64_t v2 = sub_25E0DB3C0();
  sub_25E05AFA0(v2);
  unint64_t v3 = *(void *)(v21[0] + 16);
  if (v3)
  {
    sub_25E05C1F8(0, &qword_26A6D4A10, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F331B8]);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = sub_25E05BE94();
    uint64_t v6 = OUTLINED_FUNCTION_3_3(v5);
    sub_25E05B718((uint64_t)v6, v7, v3, v21[0]);
  }
  else
  {
    sub_25E0DB3C0();
    uint64_t v4 = *(void *)sub_25E0DB140();
    swift_retain();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = (void *)v4;
  uint64_t v24 = MEMORY[0x263F8EE78];
  while (1)
  {
    swift_beginAccess();
    if ((uint64_t)v25[3] < 1)
    {
      uint64_t v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
      goto LABEL_14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_25E05B8E4();
    }
    char v8 = v25;
    uint64_t result = sub_25E03DF3C((long long *)&v8[5 * v8[4] + 5], (uint64_t)&v18);
    uint64_t v10 = v8[4];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    uint64_t v13 = v8[3];
    if (v12 >= v8[2]) {
      uint64_t v12 = 0;
    }
    v8[4] = v12;
    if (__OFSUB__(v13, 1)) {
      goto LABEL_18;
    }
    v8[3] = v13 - 1;
LABEL_14:
    swift_endAccess();
    if (!*((void *)&v19 + 1))
    {
      swift_release();
      sub_25E05B800((uint64_t)&v18);
      OUTLINED_FUNCTION_24();
      uint64_t v17 = v24;
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v1 = v17;
      return result;
    }
    sub_25E03DF3C(&v18, (uint64_t)v21);
    uint64_t v14 = v22;
    uint64_t v15 = v23;
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(v21, v22);
    sub_25E05A928((uint64_t)v16, (uint64_t *)&v25, (uint64_t)&v24, v14, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E05B5D4()
{
  void (*v10)(uint64_t *__return_ptr, void *);
  uint64_t v11;
  void v12[2];
  char v13;

  uint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  unint64_t v3 = *(void *)(v2 + 16);
  if (v1 == v3) {
    return 0;
  }
  if (v1 >= v3)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v1 + 1;
    uint64_t v6 = v2 + 24 * v1;
    char v7 = *(unsigned char *)(v6 + 48);
    uint64_t v9 = *(void *)(v6 + 32);
    uint64_t v8 = *(void *)(v6 + 40);
    v0[3] = v5;
    uint64_t v10 = (void (*)(uint64_t *__return_ptr, void *))v0[4];
    v12[0] = v9;
    v12[1] = v8;
    uint64_t v13 = v7;
    swift_retain();
    v10(&v11, v12);
    swift_release();
    return v11;
  }
  return result;
}

void sub_25E05B668(uint64_t a1, uint64_t a2)
{
  if (dynamic_cast_existential_0_class_conditional(a2))
  {
    sub_25E05C32C();
  }
  else
  {
    sub_25E0DC2E0();
  }
}

unint64_t sub_25E05B6C8(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_25E05B718(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4)
{
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(a4 + 16);
  if (!v6)
  {
LABEL_9:
    *(void *)(v5 + 8) = a3;
    return result;
  }
  if (v6 > a3) {
    goto LABEL_11;
  }
  if (a4 + 32 >= a2 + 40 * v6 || a4 + 32 + 40 * v6 <= a2)
  {
    sub_25E05B88C();
    uint64_t result = swift_arrayInitWithCopy();
    goto LABEL_9;
  }
LABEL_12:
  uint64_t result = sub_25E0DC1C0();
  __break(1u);
  return result;
}

uint64_t sub_25E05B800(uint64_t a1)
{
  sub_25E05C1F8(0, &qword_26A6D4A08, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25E05B88C()
{
  unint64_t result = qword_26A6D4390;
  if (!qword_26A6D4390)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D4390);
  }
  return result;
}

uint64_t sub_25E05B8E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_25E05C1F8(0, &qword_26A6D4A10, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F331B8]);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_25E05BAC8(v4 + 16, v4 + 40, v2, v1 + 40);
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v4;
  return result;
}

uint64_t sub_25E05B9AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for ActorQueue.QueuedTask();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  sub_25E05C1F8(0, &qword_26A6D4A18, (uint64_t (*)(uint64_t))type metadata accessor for ActorQueue.QueuedTask, MEMORY[0x263F331B8]);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_25E05BC40(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_25E05BAC8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      unint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  if (v9 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v11 = a4 + 40 * v4;
  unint64_t v12 = a2 + 40 * v4;
  if (v11 < v12 + 40 * v9 && v12 < v11 + 40 * v9) {
    goto LABEL_29;
  }
  sub_25E05B88C();
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 40 * v8 <= v10 || v10 + 40 * v8 <= a2)
      {
        sub_25E05B88C();
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_25E0DC1C0();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_25E05BC40(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t result = type metadata accessor for ActorQueue.QueuedTask();
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  uint64_t v13 = *(void *)(*(void *)(result - 8) + 72);
  if (v11 < 1) {
    goto LABEL_14;
  }
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v14 = a4 + v13 * v4;
  unint64_t v15 = a2 + v13 * v4;
  if (v14 < v15 + v13 * v11 && v15 < v14 + v13 * v11) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v10 >= 1)
  {
    if (v12)
    {
      if (a2 + v13 * v10 <= v12 || v12 + v13 * v10 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = sub_25E0DC1C0();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

void *sub_25E05BDD4@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = result[2];
  uint64_t v5 = *result - v4;
  if (__OFSUB__(*result, v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = result[1];
    uint64_t v8 = type metadata accessor for ActorQueue.QueuedTask();
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t result = (void *)(v8 - 8);
    uint64_t v9 = v10;
    if (v5 >= v7)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = v7;
LABEL_6:
      *(void *)a3 = a2 + *(void *)(v9 + 72) * v4;
      *(void *)(a3 + 8) = v13;
      *(void *)(a3 + 16) = v11;
      *(void *)(a3 + 24) = v12;
      *(unsigned char *)(a3 + 32) = v5 >= v7;
      return result;
    }
    uint64_t v12 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v13 = v5;
      uint64_t v11 = a2;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E05BE94()
{
  return (uint64_t)(_swift_stdlib_malloc_size(v0) - 40) / 40;
}

uint64_t dispatch thunk of Mergeable.merge(other:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_25E05BED0()
{
  size_t v1 = _swift_stdlib_malloc_size(v0);
  uint64_t v2 = type metadata accessor for ActorQueue.QueuedTask();
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t result = v2 - 8;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 72);
  if (v6)
  {
    int64_t v7 = v1 - ((v5 + 40) & ~v5);
    if (v6 != -1 || v7 != 0x8000000000000000) {
      return v7 / v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E05BF6C(uint64_t (*a1)(unsigned char *))
{
  uint64_t v3 = v2;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = *(void *)(*v1 + 24);
  if (v5)
  {
    uint64_t v6 = v1;
    uint64_t result = swift_retain();
    uint64_t v9 = 0;
    while (1)
    {
      if (v9 >= v5)
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v10 = v4[4];
      if (v9 + v10 >= v4[2]) {
        uint64_t v11 = v4[2];
      }
      else {
        uint64_t v11 = 0;
      }
      sub_25E03DF54((uint64_t)&v4[5 * v9 + 5 + 5 * (v10 - v11)], (uint64_t)v31);
      sub_25E03DF3C(v31, (uint64_t)v30);
      char v12 = a1(v30);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if (v3)
      {
        swift_release();
        return v9;
      }
      if (v12) {
        break;
      }
      ++v9;
      uint64_t v5 = v4[3];
      if (v9 == v5)
      {
        swift_release();
        return *(void *)(*v6 + 24);
      }
    }
    uint64_t result = swift_release();
    uint64_t v13 = *v6;
    uint64_t v14 = *(void *)(*v6 + 24);
    if (v14 - 1 == v9) {
      return v9;
    }
    uint64_t v15 = v9 + 1;
    while (v15 < v14)
    {
      uint64_t v16 = *(void *)(v13 + 32);
      if (v15 + v16 >= *(void *)(v13 + 16)) {
        uint64_t v17 = *(void *)(v13 + 16);
      }
      else {
        uint64_t v17 = 0;
      }
      sub_25E03DF54(v13 + 40 * (v15 + v16 - v17) + 40, (uint64_t)v31);
      sub_25E03DF3C(v31, (uint64_t)v30);
      char v18 = a1(v30);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if ((v18 & 1) == 0)
      {
        if (v9 < 0) {
          goto LABEL_39;
        }
        uint64_t result = *v6;
        uint64_t v19 = *(void *)(*v6 + 24);
        if (v9 >= v19) {
          goto LABEL_40;
        }
        if (v15 >= v19) {
          goto LABEL_41;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0) {
          uint64_t result = sub_25E05B8E4();
        }
        uint64_t v20 = *(void *)(*v6 + 32);
        uint64_t v21 = *(void *)(*v6 + 16);
        if (v20 + v9 >= v21) {
          uint64_t v22 = *(void *)(*v6 + 16);
        }
        else {
          uint64_t v22 = 0;
        }
        uint64_t v23 = v20 + v9 - v22;
        if (v15 + v20 < v21) {
          uint64_t v21 = 0;
        }
        uint64_t v24 = v15 + v20 - v21;
        if (v24 != v23)
        {
          uint64_t v25 = *v6 + 40;
          uint64_t v26 = v25 + 40 * v23;
          uint64_t v27 = v25 + 40 * v24;
          sub_25E03DF3C((long long *)v26, (uint64_t)v31);
          uint64_t v28 = *(void *)(v27 + 32);
          long long v29 = *(_OWORD *)(v27 + 16);
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
          *(_OWORD *)(v26 + 16) = v29;
          *(void *)(v26 + 32) = v28;
          uint64_t result = sub_25E03DF3C(v31, v27);
        }
        ++v9;
      }
      ++v15;
      uint64_t v13 = *v6;
      uint64_t v14 = *(void *)(*v6 + 24);
      if (v15 == v14) {
        return v9;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t sub_25E05C1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E05ABD8(a1, *(void *)(v2 + 16), a2);
}

void sub_25E05C1F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_25E05C25C()
{
  unint64_t result = qword_26A6D4A28;
  if (!qword_26A6D4A28)
  {
    sub_25E05C1F8(255, &qword_26A6D4A20, (uint64_t (*)(uint64_t))sub_25E05B88C, MEMORY[0x263F331F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4A28);
  }
  return result;
}

uint64_t sub_25E05C2DC(uint64_t a1)
{
  return sub_25E05AC50(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

void sub_25E05C32C()
{
  if (!qword_26A6D4A30)
  {
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, &qword_26A6D4A30);
    }
  }
}

void LRUDictionary.init(maximumCount:maximumCost:)(uint64_t a1, char a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  v14.n128_u64[0] = a5;
  v14.n128_u64[1] = a6;
  char v9 = a2 & 1;
  unint64_t v15 = a6;
  v16.n128_u64[0] = a7;
  char v10 = a4 & 1;
  type metadata accessor for LRUDictionary.Container();
  swift_getTupleTypeMetadata2();
  sub_25E0DB8C0();
  uint64_t v11 = sub_25E0DB0A0();
  sub_25E060E48(v11, v12, v13, a3, v10, a1, v9, 0, (uint64_t)&v14, 0);
  OUTLINED_FUNCTION_0_7(v15, v16, v14);
}

void LRUDictionary.init<A>(uniqueKeysWithValues:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
}

{
  sub_25E05CC8C(a1, a2, a3, a4, a5, a6, (uint64_t)sub_25E05D030, (void (*)(char *, char *))sub_25E05D090);
}

uint64_t sub_25E05C4B4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  type metadata accessor for LRUDictionary.Container();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_25E05C588(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v56 = a4;
  char v57 = a1;
  uint64_t v58 = a2;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v41 = (char *)v40 - v17;
  uint64_t v18 = sub_25E0DBCF0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  v40[1] = (char *)v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v26);
  char v50 = (char *)v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v30 = (char *)v40 - v29;
  uint64_t v31 = sub_25E0DB730();
  uint64_t v60 = sub_25E0DB360();
  uint64_t v56 = sub_25E0DC010();
  sub_25E0DBFA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v50, v48, v52);
  uint64_t result = sub_25E0DB720();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    unsigned int v33 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_25E0DBD40();
      uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v33)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v33)(v23, AssociatedTypeWitness);
      sub_25E0DBFF0();
      if (!--v31)
      {
        uint64_t v34 = v54;
        uint64_t v35 = (uint64_t)v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v34 = v54;
  uint64_t v35 = (uint64_t)v51;
LABEL_9:
  sub_25E0DBD40();
  if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v36 = (uint64_t)v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
    return v60;
  }
  else
  {
    unsigned __int8 v37 = *(char **)(v34 + 32);
    uint64_t v54 = v34 + 32;
    uint64_t v55 = v37;
    uint64_t v38 = (void (**)(char *, uint64_t))(v34 + 8);
    uint64_t v39 = v41;
    uint64_t v36 = (uint64_t)v51;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v55)(v39, v36, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_25E0DBFF0();
      sub_25E0DBD40();
      if (__swift_getEnumTagSinglePayload(v36, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v59);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

void sub_25E05CC8C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, char *))
{
  unint64_t v26 = a2;
  unint64_t v27 = a3;
  uint64_t v28 = a4;
  unint64_t v29 = a5;
  uint64_t v30 = a6;
  unint64_t v18 = a2;
  unint64_t v19 = a3;
  uint64_t v20 = a4;
  unint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = a7;
  uint64_t v24 = &v25;
  v31.n128_u64[0] = a2;
  v31.n128_u64[1] = a3;
  unint64_t v32 = a3;
  v33.n128_u64[0] = a5;
  type metadata accessor for LRUDictionary.Container();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v31.n128_u64[0] = sub_25E05C588(a8, (uint64_t)v17, a4, TupleTypeMetadata2, MEMORY[0x263F8E628], a6, MEMORY[0x263F8E658], v13);
  sub_25E0DB940();
  swift_getWitnessTable();
  uint64_t v14 = sub_25E0DB0B0();
  sub_25E060E48(v14, v15, v16, 0, 1, 0, 1, 0, (uint64_t)&v31, 0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
  OUTLINED_FUNCTION_0_7(v32, v33, v31);
}

uint64_t sub_25E05CE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v14, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a4, a6);
  return sub_25E060FB0((uint64_t)v12, 0, 1, a6, a2);
}

uint64_t sub_25E05CF58@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  type metadata accessor for LRUDictionary.Container();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a3, a3 + *(int *)(TupleTypeMetadata2 + 48), a1, v6);
}

uint64_t sub_25E05D034(uint64_t a1, uint64_t a2)
{
  return sub_25E05D0BC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, uint64_t))sub_25E05C4B4);
}

uint64_t sub_25E05D060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E05CE30(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_25E05D090(uint64_t a1, uint64_t a2)
{
  return sub_25E05D0BC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, uint64_t))sub_25E05CF58);
}

uint64_t sub_25E05D0BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[7], v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a2);
}

uint64_t sub_25E05D0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25E0DBA10();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_25E04CC30(a1);
  }
  else
  {
    sub_25E0DBA00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DB960();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static Task<>.retrying(priority:count:delay:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  sub_25E05D328();
  uint64_t v13 = OUTLINED_FUNCTION_23_3(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E05D380(a1, (uint64_t)v15);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = a5;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 48) = a3;
  *(void *)(v16 + 56) = a4;
  *(double *)(v16 + 64) = a6;
  swift_retain();
  return sub_25E05D0FC((uint64_t)v15, (uint64_t)&unk_26A6D4A40, v16);
}

void sub_25E05D328()
{
  if (!qword_26A6D4688)
  {
    sub_25E0DBA10();
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, &qword_26A6D4688);
    }
  }
}

uint64_t sub_25E05D380(uint64_t a1, uint64_t a2)
{
  sub_25E05D328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E05D3E4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(double *)(v7 + 48) = a2;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = a7;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a5;
  return MEMORY[0x270FA2498](sub_25E05D40C, 0, 0);
}

void sub_25E05D40C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[3];
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v1)
    {
      uint64_t v2 = (int *)v0[4];
      v0[7] = 0;
      uint64_t v6 = (void (*)(uint64_t))((char *)v2 + *v2);
      uint64_t v3 = (void *)swift_task_alloc();
      v0[8] = v3;
      *uint64_t v3 = v0;
      uint64_t v4 = sub_25E05D5B4;
    }
    else
    {
      sub_25E0DBAF0();
      uint64_t v6 = (void (*)(uint64_t))(v0[4] + *(int *)v0[4]);
      uint64_t v3 = (void *)swift_task_alloc();
      v0[10] = v3;
      *uint64_t v3 = v0;
      uint64_t v4 = sub_25E05D6AC;
    }
    v3[1] = v4;
    uint64_t v5 = v0[2];
    v6(v5);
  }
}

uint64_t sub_25E05D5B4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E05D6AC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E05D76C()
{
  OUTLINED_FUNCTION_12();
  double v2 = *(double *)(v0 + 48) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270FA1FF0](v1);
  }
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25E05D848;
  unint64_t v1 = (unint64_t)v2;
  return MEMORY[0x270FA1FF0](v1);
}

uint64_t sub_25E05D848()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E05D924()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[7] + 1;
  uint64_t result = MEMORY[0x2611CF510](v0[9]);
  if (v2 == v1)
  {
    uint64_t v4 = v0[12];
    sub_25E0DBAF0();
    if (v4)
    {
      uint64_t v5 = (uint64_t (*)(void))v0[1];
      return v5();
    }
    uint64_t v10 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[10] = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_25E05D6AC;
  }
  else
  {
    uint64_t v6 = v0[7] + 1;
    v0[7] = v6;
    if (v6 == v0[3])
    {
      __break(1u);
      return result;
    }
    uint64_t v10 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    *uint64_t v7 = v0;
    uint64_t v8 = sub_25E05D5B4;
  }
  v7[1] = v8;
  uint64_t v9 = v0[2];
  return v10(v9);
}

uint64_t sub_25E05DAF0()
{
  OUTLINED_FUNCTION_12();
  MEMORY[0x2611CF510](*(void *)(v0 + 72));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E05DB4C()
{
  return objectdestroyTm(72);
}

uint64_t sub_25E05DB54(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = *((void *)v1 + 3);
  uint64_t v5 = *((void *)v1 + 5);
  uint64_t v6 = *((void *)v1 + 6);
  uint64_t v7 = *((void *)v1 + 7);
  double v8 = v1[8];
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_5(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_25E060658;
  return sub_25E05D3E4(a1, v8, v3, v4, v5, v6, v7);
}

uint64_t static Task<>.delayed(by:priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  sub_25E05D328();
  uint64_t v12 = OUTLINED_FUNCTION_23_3(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_17_3();
  sub_25E05D380(a1, v5);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a4;
  *(double *)(v13 + 40) = a5;
  *(void *)(v13 + 48) = a2;
  *(void *)(v13 + 56) = a3;
  swift_retain();
  return sub_25E05D0FC(v5, (uint64_t)&unk_26A6D4A50, v13);
}

uint64_t sub_25E05DD0C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a6;
  *(double *)(v6 + 24) = a2;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25E05DD34, 0, 0);
}

uint64_t sub_25E05DD34()
{
  OUTLINED_FUNCTION_12();
  double v2 = OUTLINED_FUNCTION_24_3(*(double *)(v0 + 24), 1000000000.0);
  if (v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270FA1FF0](v1);
  }
  unint64_t v4 = (unint64_t)v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E05DE04;
  unint64_t v1 = v4;
  return MEMORY[0x270FA1FF0](v1);
}

uint64_t sub_25E05DE04()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  char v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *unint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_9();
    return v7();
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(uint64_t))(v3[4] + *(int *)v3[4]);
    uint64_t v9 = (void *)swift_task_alloc();
    v3[7] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_25E05DF78;
    uint64_t v10 = v3[2];
    return v11(v10);
  }
}

uint64_t sub_25E05DF78()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *double v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E05E038()
{
  return objectdestroyTm(64);
}

uint64_t objectdestroyTm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_25E05E08C()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_22_3();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = (void *)OUTLINED_FUNCTION_5(v3);
  *unint64_t v4 = v5;
  v4[1] = sub_25E060658;
  double v9 = OUTLINED_FUNCTION_16_2();
  return sub_25E05DD0C(v6, v9, v7, v8, v2, v1);
}

uint64_t static Task<>.timeout(by:priority:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  sub_25E05D328();
  uint64_t v11 = OUTLINED_FUNCTION_23_3(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E05D380(a1, (uint64_t)v13);
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = 0;
  void v14[3] = 0;
  v14[4] = a4;
  v14[5] = a2;
  v14[6] = a3;
  swift_retain();
  uint64_t v15 = sub_25E05D0FC((uint64_t)v13, (uint64_t)&unk_26A6D4A60, (uint64_t)v14);
  sub_25E05D380(a1, (uint64_t)v13);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = a4;
  *(double *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = v15;
  swift_retain();
  uint64_t v17 = sub_25E05D0FC((uint64_t)v13, (uint64_t)&unk_26A6D4A70, v16);
  sub_25E05D380(a1, (uint64_t)v13);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = a4;
  v18[5] = v15;
  v18[6] = v17;
  return sub_25E05D0FC((uint64_t)v13, (uint64_t)&unk_26A6D4A80, (uint64_t)v18);
}

uint64_t sub_25E05E2DC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_25E051320;
  return v8(a1);
}

uint64_t sub_25E05E3BC()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E060658;
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return v4(v3);
}

uint64_t sub_25E05E468(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  return MEMORY[0x270FA2498](sub_25E05E48C, 0, 0);
}

uint64_t sub_25E05E48C()
{
  OUTLINED_FUNCTION_12();
  double v2 = OUTLINED_FUNCTION_24_3(*(double *)(v0 + 16), 1000000000.0);
  if (v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270FA1FF0](v1);
  }
  unint64_t v4 = (unint64_t)v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E05E55C;
  unint64_t v1 = v4;
  return MEMORY[0x270FA1FF0](v1);
}

uint64_t sub_25E05E55C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_5_2();
  *char v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E05E654()
{
  OUTLINED_FUNCTION_17();
  sub_25E04986C();
  sub_25E0DBAC0();
  sub_25E0DB9A0();
  sub_25E060608();
  swift_allocError();
  sub_25E0DB370();
  swift_willThrow();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_15_4();

  return MEMORY[0x270FA0238](v0, v1, v2);
}

uint64_t sub_25E05E744()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_22_3();
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = (void *)OUTLINED_FUNCTION_5(v3);
  *unint64_t v4 = v5;
  v4[1] = sub_25E060658;
  double v9 = OUTLINED_FUNCTION_16_2();
  return sub_25E05E468(v9, v6, v7, v8, v2, v1);
}

uint64_t sub_25E05E7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v10 = (void *)swift_task_alloc();
  v6[4] = v10;
  unint64_t v11 = sub_25E04986C();
  v6[5] = v11;
  *uint64_t v10 = v6;
  v10[1] = sub_25E05E8B8;
  uint64_t v12 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FA8](a1, a4, a6, v11, v12);
}

uint64_t sub_25E05E8B8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E05E9B0()
{
  OUTLINED_FUNCTION_12();
  sub_25E0DBAC0();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E05EA14()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v0 = OUTLINED_FUNCTION_15_4();

  return MEMORY[0x270FA0238](v0, v1, v2);
}

uint64_t sub_25E05EA54()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E060658;
  uint64_t v3 = OUTLINED_FUNCTION_8_5();
  return sub_25E05E7E8(v3, v4, v5, v6, v7, v8);
}

uint64_t Task<>.wait(timeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_25E05EB04(a1, a2, a3, a4);
}

{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  dispatch_semaphore_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  uint64_t v20 = a4;
  uint64_t v22 = a1;
  unint64_t v21 = sub_25E0DBCF0();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v9 = (char *)&v20 - v8;
  sub_25E05D328();
  unint64_t v11 = OUTLINED_FUNCTION_23_3(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_17_3();
  uint64_t v12 = dispatch_semaphore_create(0);
  type metadata accessor for _OpaqueResult();
  uint64_t v13 = sub_25E05EE20();
  uint64_t v14 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  v15[3] = 0;
  v15[4] = v12;
  unsigned char v15[5] = v13;
  v15[6] = a2;
  uint64_t v16 = v12;
  swift_retain_n();
  uint64_t v17 = v16;
  swift_retain();
  sub_25E05F89C(v4, (uint64_t)&unk_26A6D4A90, (uint64_t)v15, a3);

  swift_release();
  swift_release();
  if (sub_25E0DBCC0())
  {
    sub_25E05FA04();
    swift_allocError();
    swift_willThrow();

    return swift_release();
  }
  else
  {
    uint64_t v18 = (char *)v13 + *(void *)(*v13 + 104);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v18, v21);
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, a3);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      swift_release();

      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v20, v9, a3);
    }
  }
  return result;
}

uint64_t sub_25E05EB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v22 = a4;
  uint64_t v6 = sub_25E0DBCF0();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  sub_25E05D328();
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  sub_25E04986C();
  type metadata accessor for _OpaqueResult();
  uint64_t v13 = sub_25E05EE20();
  uint64_t v14 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  v15[3] = 0;
  v15[4] = v12;
  unsigned char v15[5] = v13;
  v15[6] = a2;
  uint64_t v16 = v12;
  swift_retain_n();
  uint64_t v17 = v16;
  swift_retain();
  sub_25E05D0FC((uint64_t)v11, (uint64_t)&unk_26A6D4B48, (uint64_t)v15);

  swift_release();
  swift_release();
  if (sub_25E0DBCC0())
  {
    sub_25E05FA04();
    swift_allocError();
    goto LABEL_5;
  }
  uint64_t v18 = *(void **)((char *)v13 + *(void *)(*v13 + 112));
  if (v18)
  {
    id v19 = v18;
LABEL_5:
    swift_willThrow();

    return swift_release();
  }
  unint64_t v21 = (char *)v13 + *(void *)(*v13 + 104);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v8, v21, v24);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, a3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a3 - 8) + 32))(v22, v8, a3);
  }
  return result;
}

uint64_t *sub_25E05EE20()
{
  return sub_25E060200();
}

uint64_t sub_25E05EE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  v6[6] = a4;
  v6[7] = a5;
  v6[5] = a1;
  uint64_t v8 = *a5;
  uint64_t v9 = *(void *)(*a5 + 80);
  v6[8] = v9;
  uint64_t v10 = sub_25E0DBCF0();
  v6[9] = v10;
  v6[10] = *(void *)(v10 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v11 = swift_task_alloc();
  v6[12] = v11;
  dispatch_semaphore_t v12 = (void *)swift_task_alloc();
  v6[13] = v12;
  uint64_t v13 = *(void *)(v8 + 88);
  *dispatch_semaphore_t v12 = v6;
  v12[1] = sub_25E05EFC0;
  uint64_t v14 = MEMORY[0x263F8E4E0];
  return MEMORY[0x270FA1FA8](v11, a6, v9, v13, v14);
}

uint64_t sub_25E05EFC0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E05F09C()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_19_3();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  v3(v2);
  swift_endAccess();
  uint64_t v4 = OUTLINED_FUNCTION_14_2();
  v5(v4);
  uint64_t result = __swift_getEnumTagSinglePayload(v0, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_13_4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, v0);
    sub_25E0DBCD0();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    return v9();
  }
  return result;
}

uint64_t sub_25E05F184()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(*(void *)v2 + 112);
  uint64_t v4 = *(void *)(v2 + v3);
  *(void *)(v2 + v3) = v1;
  id v5 = v1;
  MEMORY[0x2611CF510](v4);
  swift_willThrow();
  sub_25E0DBCD0();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v6();
}

uint64_t type metadata accessor for _OpaqueResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E05F510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a4;
  v6[7] = a5;
  v6[5] = a1;
  uint64_t v8 = *(void *)(*(void *)a5 + 80);
  v6[8] = v8;
  uint64_t v9 = sub_25E0DBCF0();
  v6[9] = v9;
  v6[10] = *(void *)(v9 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  v6[12] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v6[13] = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_25E05F650;
  return MEMORY[0x270FA1FD0](v10, a6, v8);
}

uint64_t sub_25E05F650()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_25E05F718()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_19_3();
  uint64_t v2 = OUTLINED_FUNCTION_11_3();
  v3(v2);
  swift_endAccess();
  uint64_t v4 = OUTLINED_FUNCTION_14_2();
  v5(v4);
  uint64_t result = __swift_getEnumTagSinglePayload(v0, 1, v1);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_13_4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v7, v0);
    sub_25E0DBCD0();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    return v9();
  }
  return result;
}

uint64_t sub_25E05F804()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E051320;
  uint64_t v3 = OUTLINED_FUNCTION_9_0();
  return sub_25E05F510(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25E05F89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25E0DBA10();
  if (__swift_getEnumTagSinglePayload(a1, 1, v8) == 1)
  {
    sub_25E04CC30(a1);
  }
  else
  {
    sub_25E0DBA00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DB960();
    swift_unknownObjectRelease();
  }
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a2;
  void v9[4] = a3;
  return swift_task_create();
}

unint64_t sub_25E05FA04()
{
  unint64_t result = qword_26A6D4A98;
  if (!qword_26A6D4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4A98);
  }
  return result;
}

uint64_t Result<>.init(catching:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  v0[2] = v3;
  sub_25E04986C();
  uint64_t v4 = sub_25E0DC540();
  v0[3] = v4;
  v0[4] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v0[5] = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_25E05FBAC;
  return v8(v5);
}

uint64_t sub_25E05FBAC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E05FC88()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v5();
}

uint64_t sub_25E05FD1C()
{
  OUTLINED_FUNCTION_12();
  **(void **)(v0 + 16) = *(void *)(v0 + 56);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t static TaskUnsafeTimeout.== infix(_:_:)()
{
  return 1;
}

uint64_t TaskUnsafeTimeout.hash(into:)()
{
  return sub_25E0DC4E0();
}

uint64_t TaskUnsafeTimeout.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E05FDFC()
{
  return TaskUnsafeTimeout.hashValue.getter();
}

uint64_t sub_25E05FE14()
{
  return TaskUnsafeTimeout.hash(into:)();
}

uint64_t sub_25E05FE2C()
{
  return sub_25E0DC500();
}

unint64_t sub_25E05FE70()
{
  unint64_t result = qword_26A6D4AA8[0];
  if (!qword_26A6D4AA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D4AA8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TaskUnsafeTimeout(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for TaskUnsafeTimeout(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25E05FFACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskUnsafeTimeout()
{
  return &type metadata for TaskUnsafeTimeout;
}

uint64_t sub_25E05FFE4()
{
  uint64_t result = sub_25E0DBCF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_25E0DBCF0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_25E0600B8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_25E0DBCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v4 = sub_25E0DBCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_25E0601AC()
{
  sub_25E0600B8();

  return swift_deallocClassInstance();
}

uint64_t *sub_25E060200()
{
  uint64_t v1 = *v0;
  __swift_storeEnumTagSinglePayload((uint64_t)v0 + *(void *)(*v0 + 104), 1, 1, *(void *)(*v0 + 80));
  __swift_storeEnumTagSinglePayload((uint64_t)v0 + *(void *)(*v0 + 112), 1, 1, *(void *)(v1 + 88));
  return v0;
}

uint64_t sub_25E060294(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_25E060370;
  return v6(a1);
}

uint64_t sub_25E060370()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v3();
}

uint64_t sub_25E060430()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25E060468()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_5(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_25E060658;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26A6D4B30 + dword_26A6D4B30);
  return v7(v2, v3);
}

uint64_t objectdestroy_19Tm()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  uint64_t v1 = OUTLINED_FUNCTION_15_4();

  return MEMORY[0x270FA0238](v1, v2, v3);
}

uint64_t sub_25E060570()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E051320;
  uint64_t v3 = OUTLINED_FUNCTION_9_0();
  return sub_25E05EE54(v3, v4, v5, v6, v7, v8);
}

unint64_t sub_25E060608()
{
  unint64_t result = qword_26A6D4B50[0];
  if (!qword_26A6D4B50[0])
  {
    sub_25E0DB9A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D4B50);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return __swift_storeEnumTagSinglePayload(*(void *)(v0 + 96), 0, 1, *(void *)(v0 + 64));
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return *(void *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_23_3(uint64_t a1)
{
  return a1 - 8;
}

double OUTLINED_FUNCTION_24_3(double a1, double a2)
{
  return a1 * a2;
}

void LRUDictionary.init(dictionaryLiteral:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9 = a1;
  swift_getTupleTypeMetadata2();
  uint64_t v7 = sub_25E0DB940();
  uint64_t WitnessTable = swift_getWitnessTable();
  LRUDictionary.init<A>(uniqueKeysWithValues:)((uint64_t)&v9, a2, a3, v7, a4, WitnessTable);
}

void sub_25E0607C0(uint64_t a1, unint64_t *a2)
{
}

uint64_t LRUDictionary.values.getter(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  long long v12 = *(_OWORD *)(v1 + 24);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v8 = a1[2];
  *(void *)&long long v9 = v3;
  *((void *)&v9 + 1) = v3;
  uint64_t v10 = v4;
  uint64_t v11 = v2;
  type metadata accessor for LRUDictionary.Container();
  uint64_t v5 = sub_25E0DB0C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x2611CDCB0](&v8, v5, WitnessTable);
  uint64_t v11 = v8;
  long long v12 = v9;
  swift_getKeyPath();
  sub_25E0DBEA0();
  swift_getWitnessTable();
  sub_25E0DC1D0();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t LRUDictionary.maximumCount.setter(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(v3 + 56) = a1;
  *(unsigned char *)(v3 + 64) = a2 & 1;
  return OUTLINED_FUNCTION_8_6(a1, a2, a3);
}

void LRUDictionary.subscript.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = v0;
  v15[0] = v2;
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  void v15[2] = v3[2];
  v15[3] = v4;
  v15[4] = v4;
  unsigned char v15[5] = v5;
  uint64_t v6 = type metadata accessor for LRUDictionary.Container();
  uint64_t v7 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)v15 - v11;
  v15[1] = v1;
  uint64_t v13 = v15[0];
  sub_25E0DB120();
  uint64_t v14 = 1;
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v6))
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(v13, v12, v4);
    uint64_t v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  __swift_storeEnumTagSinglePayload(v13, v14, 1, v4);
  LRUDictionary.poke(_:)();
  OUTLINED_FUNCTION_1_8();
}

{
  sub_25E0DC140();
  __break(1u);
}

void LRUDictionary.subscript.setter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v44 = v0;
  uint64_t v45 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  uint64_t v49 = v6[2];
  uint64_t v50 = v7;
  uint64_t v51 = v7;
  uint64_t v52 = v8;
  uint64_t v42 = v8;
  uint64_t v43 = v6;
  uint64_t v41 = type metadata accessor for LRUDictionary.Container();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_10_4();
  uint64_t v48 = v49;
  OUTLINED_FUNCTION_0_3();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_5_3();
  uint64_t v47 = v14 - v13;
  uint64_t v15 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v37 - v19;
  OUTLINED_FUNCTION_0_3();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_6_6();
  MEMORY[0x270FA5388](v24);
  unint64_t v26 = (char *)&v37 - v25;
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v46 = v5;
  v27(v20, v5, v15);
  uint64_t v28 = (void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
    uint64_t v29 = v45;
    (*v28)(v47, v45, v48);
    __swift_storeEnumTagSinglePayload(v2, 1, 1, v41);
    sub_25E0DB110();
    sub_25E0DB130();
    uint64_t v30 = v43;
  }
  else
  {
    __n128 v31 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    uint64_t v38 = v26;
    v31(v26, v20, v7);
    unint64_t v32 = *v28;
    uint64_t v33 = v45;
    uint64_t v39 = v17;
    v32(v47, v45, v48);
    OUTLINED_FUNCTION_9_5();
    v34();
    uint64_t v35 = v1;
    uint64_t v29 = v33;
    uint64_t v40 = v15;
    sub_25E060FB0(v35, 0, 1, v7, v2);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v41);
    sub_25E0DB110();
    uint64_t v17 = v39;
    sub_25E0DB130();
    uint64_t v36 = v43;
    LRUDictionary.poke(_:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v38, v7);
    uint64_t v30 = v36;
    uint64_t v15 = v40;
  }
  sub_25E061064(v30);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v48);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v46, v15);
  OUTLINED_FUNCTION_1_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_2();
  uint64_t v28 = v1;
  uint64_t v29 = v0;
  uint64_t v3 = v2;
  uint64_t v30 = v4;
  uint64_t v6 = *(void *)(v5 + 24);
  OUTLINED_FUNCTION_0_3();
  uint64_t v8 = v7;
  unint64_t v26 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11 - v10;
  unint64_t v27 = v13;
  uint64_t v15 = v13[4];
  __n128 v31 = v13[2];
  uint64_t v14 = v31;
  unint64_t v32 = v6;
  uint64_t v33 = v6;
  uint64_t v34 = v15;
  uint64_t v16 = type metadata accessor for LRUDictionary.Container();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v25 - v18;
  OUTLINED_FUNCTION_0_3();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_9_5();
  v23();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v30, v6);
  sub_25E060FB0(v12, v28, 0, v6, (uint64_t)v19);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v16);
  sub_25E0DB110();
  sub_25E0DB130();
  uint64_t v24 = v27;
  LRUDictionary.poke(_:)();
  sub_25E061064(v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v14);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v6);
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_25E060E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  type metadata accessor for LRUDictionary.Container();
  swift_getTupleTypeMetadata2();
  sub_25E0DB8C0();
  sub_25E0DB0A0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(unsigned char *)(a9 + 48) = a5 & 1;
  *(void *)(a9 + 56) = a6;
  *(unsigned char *)(a9 + 64) = a7 & 1;
  *(void *)a9 = a8;
  *(void *)(a9 + 8) = a10;
  uint64_t v14 = (void *)type metadata accessor for LRUDictionary();
  sub_25E061064(v14);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25E060FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for LRUDictionary.Container();
  uint64_t v9 = a5 + *(int *)(result + 52);
  *(void *)uint64_t v9 = a2;
  *(unsigned char *)(v9 + 8) = a3 & 1;
  return result;
}

uint64_t sub_25E061064(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  *(void *)&long long v112 = a1[2];
  uint64_t v4 = v112;
  *((void *)&v112 + 1) = v5;
  uint64_t v113 = v5;
  uint64_t v114 = v6;
  uint64_t v7 = (int *)type metadata accessor for LRUDictionary.Container();
  uint64_t v89 = *((void *)v7 - 1);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v108 = (char *)v83 - v9;
  v105 = (int *)v5;
  uint64_t v87 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v8);
  v104 = (char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = v4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v106 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  v101 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v103 = (char *)v83 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v102 = (char *)v83 - v17;
  uint64_t v86 = v18;
  uint64_t result = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v83 - v20;
  char v22 = *((unsigned char *)v2 + 64);
  uint64_t v110 = result;
  if ((v22 & 1) == 0)
  {
    uint64_t v23 = v2[7];
    uint64_t v24 = v2[4];
    uint64_t result = sub_25E0DBFE0();
    if (v23 < result)
    {
      uint64_t v25 = sub_25E0DBFE0();
      BOOL v26 = __OFSUB__(v25, v23);
      uint64_t v27 = v25 - v23;
      if (v26) {
        goto LABEL_43;
      }
      uint64_t v28 = (int *)*v2;
      if (*v2)
      {
        v99 = v21;
        uint64_t v84 = (uint64_t)v3;
        uint64_t v29 = (void (*)(char *, char *))v2[1];
        uint64_t v30 = v2[2];
        v85 = v2;
        uint64_t v31 = v2[3];
        *(void *)&long long v112 = v30;
        *((void *)&v112 + 1) = v31;
        uint64_t v113 = v24;
        v109 = v28;
        v100 = v29;
        sub_25E04E23C((uint64_t)v28);
        uint64_t v88 = v6;
        sub_25E0DB110();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_getWitnessTable();
        v83[1] = v27;
        uint64_t v32 = sub_25E0DB7D0();
        uint64_t v33 = sub_25E0DB840();
        *(void *)&long long v112 = v33;
        if (v33 != MEMORY[0x2611CDE30](v32, TupleTypeMetadata2))
        {
          v98 = &v99[*(int *)(TupleTypeMetadata2 + 48)];
          v97 = (void (**)(char *, void *, uint64_t))(v106 + 16);
          v96 = (void (**)(char *, char *, int *))(v107 - 8);
          v95 = (void (**)(char *, char *, int *))(v89 + 32);
          v94 = (void (**)(char *, char *, int *))(v89 + 16);
          v93 = (void (**)(char *, char *, uint64_t))(v87 + 16);
          v92 = (void (**)(char *, int *))(v89 + 8);
          v91 = (void (**)(char *, uint64_t))(v87 + 8);
          v90 = (void (**)(char *, uint64_t))(v106 + 8);
          uint64_t v58 = v107;
          uint64_t v59 = v103;
          uint64_t v60 = v105;
          do
          {
            char v61 = sub_25E0DB8E0();
            sub_25E0DB880();
            if (v61)
            {
              uint64_t v62 = v99;
              (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v99, v32+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v33, TupleTypeMetadata2);
            }
            else
            {
              uint64_t result = sub_25E0DBF00();
              if (v86 != 8)
              {
                __break(1u);
LABEL_47:
                __break(1u);
                return result;
              }
              v111[0] = result;
              uint64_t v62 = v99;
              (*v97)(v99, v111, TupleTypeMetadata2);
              swift_unknownObjectRelease();
            }
            sub_25E0DB3C0();
            MEMORY[0x2611CDE40](&v112, v32, TupleTypeMetadata2);
            swift_bridgeObjectRelease();
            uint64_t v63 = *(int *)(TupleTypeMetadata2 + 48);
            uint64_t v64 = v102;
            uint64_t v65 = &v102[v63];
            uint64_t v66 = *(void *)(v58 - 8);
            (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v102, v62, v58);
            (*v95)(v65, v98, v7);
            uint64_t v67 = &v59[*(int *)(v110 + 48)];
            (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v59, v64, v58);
            (*v94)(v67, v65, v7);
            uint64_t v68 = v104;
            (*v93)(v104, v67, (uint64_t)v60);
            (*v92)(v67, v7);
            ((void (*)(char *, char *))v109)(v64, v68);
            (*v91)(v68, (uint64_t)v60);
            uint64_t v69 = v64;
            TupleTypeMetadata2 = v110;
            (*v90)(v69, v110);
            (*(void (**)(char *, uint64_t))(v66 + 8))(v59, v58);
            uint64_t v33 = v112;
          }
          while (v33 != MEMORY[0x2611CDE30](v32, TupleTypeMetadata2));
        }
        swift_bridgeObjectRelease();
        sub_25E04E474((uint64_t)v109);
        uint64_t v6 = v88;
        uint64_t v2 = v85;
        uint64_t v3 = (void *)v84;
      }
      sub_25E0DB110();
      uint64_t result = sub_25E0DB070();
    }
  }
  if (v2[6]) {
    return result;
  }
  uint64_t v34 = (uint64_t)v3;
  uint64_t v35 = v2[2];
  v90 = (void (**)(char *, uint64_t))(v2 + 2);
  uint64_t v36 = v2[3];
  uint64_t v38 = v2[4];
  uint64_t v37 = v2[5];
  uint64_t v39 = v2[7];
  char v40 = *((unsigned char *)v2 + 64);
  long long v112 = *(_OWORD *)v2;
  uint64_t v113 = v35;
  uint64_t v114 = v36;
  uint64_t v115 = v38;
  uint64_t v116 = v37;
  char v117 = 0;
  uint64_t v118 = v39;
  char v119 = v40;
  uint64_t result = LRUDictionary.totalCost.getter(v34);
  if (v37 >= result) {
    return result;
  }
  v85 = v2;
  uint64_t v88 = v6;
  uint64_t v41 = result - v37;
  if (__OFSUB__(result, v37)) {
    goto LABEL_44;
  }
  v111[0] = v35;
  v111[1] = v36;
  v111[2] = v38;
  sub_25E0DB0C0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_getWitnessTable();
  sub_25E0DB460();
  long long v42 = v112;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v43 = sub_25E0DBFE0();
  swift_release();
  swift_release();
  swift_release();
  v109 = v7;
  if (!v43) {
    goto LABEL_45;
  }
  v99 = (char *)*((void *)&v42 + 1);
  v100 = (void (*)(char *, char *))v42;
  uint64_t v44 = 0;
  uint64_t v45 = v108;
  uint64_t v46 = &v108[v7[13]];
  uint64_t v47 = (void (**)(char *, int *))(v89 + 8);
  uint64_t v84 = v43;
  while (1)
  {
    BOOL v26 = __OFSUB__(v43--, 1);
    if (v26) {
      break;
    }
    sub_25E0DC020();
    if (__OFADD__(v44, 1)) {
      goto LABEL_41;
    }
    uint64_t v48 = *(void *)v46;
    uint64_t v49 = v45;
    char v50 = v46[8];
    (*v47)(v49, v7);
    if ((v50 & 1) == 0)
    {
      BOOL v26 = __OFSUB__(v41, v48);
      v41 -= v48;
      if (v26) {
        goto LABEL_42;
      }
    }
    uint64_t v45 = v108;
    if (v41 < 1)
    {
      uint64_t v51 = v44 + 1;
      goto LABEL_21;
    }
    ++v44;
    uint64_t v7 = v109;
    if (!v43)
    {
      uint64_t v51 = v84;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t v51 = 0;
LABEL_21:
  swift_release();
  swift_release();
  swift_release();
  uint64_t v52 = *v85;
  if (*v85)
  {
    uint64_t v53 = (char *)v85[1];
    uint64_t v54 = v85[3];
    uint64_t v55 = v85[4];
    *(void *)&long long v112 = v85[2];
    *((void *)&v112 + 1) = v54;
    uint64_t v113 = v55;
    v108 = v53;
    sub_25E04E23C(v52);
    sub_25E0DB110();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_getWitnessTable();
    uint64_t v84 = v51;
    uint64_t v56 = sub_25E0DB7D0();
    uint64_t v57 = sub_25E0DB840();
    *(void *)&long long v112 = v57;
    if (v57 != MEMORY[0x2611CDE30](v56, TupleTypeMetadata2))
    {
      v99 = &v101[*(int *)(TupleTypeMetadata2 + 48)];
      v98 = (char *)(v106 + 16);
      v97 = (void (**)(char *, void *, uint64_t))(v107 - 8);
      v96 = (void (**)(char *, char *, int *))(v89 + 32);
      v95 = (void (**)(char *, char *, int *))(v89 + 16);
      v94 = (void (**)(char *, char *, int *))(v87 + 16);
      v93 = (void (**)(char *, char *, uint64_t))(v89 + 8);
      v92 = (void (**)(char *, int *))(v87 + 8);
      v91 = (void (**)(char *, uint64_t))(v106 + 8);
      v100 = (void (*)(char *, char *))v52;
      uint64_t v70 = v107;
      long long v72 = v103;
      uint64_t v71 = v104;
      do
      {
        char v73 = sub_25E0DB8E0();
        sub_25E0DB880();
        if (v73)
        {
          char v74 = v101;
          (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v101, v56+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v57, TupleTypeMetadata2);
        }
        else
        {
          uint64_t result = sub_25E0DBF00();
          char v74 = v101;
          if (v86 != 8) {
            goto LABEL_47;
          }
          v111[0] = result;
          (*(void (**)(char *, void *, uint64_t))v98)(v101, v111, TupleTypeMetadata2);
          swift_unknownObjectRelease();
        }
        sub_25E0DB3C0();
        MEMORY[0x2611CDE40](&v112, v56, TupleTypeMetadata2);
        swift_bridgeObjectRelease();
        uint64_t v75 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v76 = v102;
        long long v77 = &v102[v75];
        uint64_t v78 = *(void *)(v70 - 8);
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v102, v74, v70);
        uint64_t v79 = v109;
        (*v96)(v77, v99, v109);
        uint64_t v80 = &v72[*(int *)(v110 + 48)];
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v72, v76, v70);
        (*v95)(v80, v77, v79);
        v81 = v105;
        (*v94)(v71, v80, v105);
        ((void (*)(char *, int *))*v93)(v80, v79);
        uint64_t v52 = (uint64_t)v100;
        v100(v76, v71);
        (*v92)(v71, v81);
        v82 = v76;
        TupleTypeMetadata2 = v110;
        (*v91)(v82, v110);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v72, v70);
        uint64_t v57 = v112;
      }
      while (v57 != MEMORY[0x2611CDE30](v56, TupleTypeMetadata2));
    }
    swift_bridgeObjectRelease();
    sub_25E04E474(v52);
  }
  sub_25E0DB110();
  return sub_25E0DB070();
}

uint64_t LRUDictionary.Container.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2);
}

uint64_t LRUDictionary.Container.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 32) - 8) + 40))(v2, a1);
}

uint64_t (*LRUDictionary.Container.value.modify())(void)
{
  return nullsub_1;
}

uint64_t LRUDictionary.Container.cost.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 52));
}

uint64_t LRUDictionary.Container.cost.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + *(int *)(a3 + 52);
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*LRUDictionary.Container.cost.modify())(void)
{
  return nullsub_1;
}

uint64_t LRUDictionary.maximumCost.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t LRUDictionary.maximumCost.setter(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(v3 + 40) = a1;
  *(unsigned char *)(v3 + 48) = a2 & 1;
  return OUTLINED_FUNCTION_8_6(a1, a2, a3);
}

void **(*LRUDictionary.maximumCost.modify(void *a1, uint64_t a2))(void **result, char a2)
{
  *a1 = a2;
  a1[1] = v2;
  return sub_25E061EF8;
}

void **sub_25E061EF8(void **result, char a2)
{
  if ((a2 & 1) == 0) {
    return (void **)sub_25E061064(*result);
  }
  return result;
}

uint64_t LRUDictionary.maximumCount.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_25E061F30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  uint64_t v8 = type metadata accessor for LRUDictionary();
  return a5(v6, v7, v8);
}

uint64_t (*LRUDictionary.maximumCount.modify(void *a1, uint64_t a2))()
{
  *a1 = a2;
  a1[1] = v2;
  return sub_25E063980;
}

uint64_t LRUDictionary.totalCost.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  type metadata accessor for LRUDictionary.Container();
  sub_25E0DB0C0();
  swift_getWitnessTable();
  sub_25E0DB7C0();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_25E0620C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t result = type metadata accessor for LRUDictionary.Container();
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(result + 52));
  if (*((unsigned char *)v7 + 8)) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = *v7;
  }
  BOOL v9 = __OFADD__(v5, v8);
  uint64_t v10 = v5 + v8;
  if (v9) {
    __break(1u);
  }
  else {
    *a3 = v10;
  }
  return result;
}

void LRUDictionary.cost(for:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  v14[0] = v2[2];
  v14[1] = v3;
  void v14[2] = v3;
  void v14[3] = v4;
  uint64_t v5 = OUTLINED_FUNCTION_12_5();
  OUTLINED_FUNCTION_0_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v14 - v9;
  OUTLINED_FUNCTION_0_3();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_10_4();
  sub_25E0DB120();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v0) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v1, v10, v0);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v0);
  }
  OUTLINED_FUNCTION_1_8();
}

uint64_t LRUDictionary.keys.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  swift_retain();

  return swift_retain();
}

uint64_t type metadata accessor for LRUDictionary.Container()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25E062304()
{
  return swift_getAtKeyPath();
}

void LRUDictionary.poke(_:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v5 = v3[2];
  uint64_t v4 = v3[3];
  uint64_t v6 = v3[4];
  v18[1] = v7;
  v18[2] = v5;
  v18[3] = v4;
  v18[4] = v4;
  v18[5] = v6;
  uint64_t v8 = OUTLINED_FUNCTION_12_5();
  OUTLINED_FUNCTION_0_3();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_6_6();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v18 - v13;
  OUTLINED_FUNCTION_0_3();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_10_4();
  sub_25E0DB110();
  sub_25E0DB080();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v0) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v8);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v2, v14, v0);
    sub_25E0DB090();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v0);
  }
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_25E0624B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25E0620C0(a1, a2, a3);
}

void LRUDictionary.subscript.modify()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = malloc(0x50uLL);
  *uint64_t v4 = v5;
  *uint64_t v5 = v2;
  v5[1] = v0;
  uint64_t v6 = sub_25E0DBCF0();
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  uint64_t v10 = *(void *)(v2 + 16);
  v5[5] = v9;
  v5[6] = v10;
  OUTLINED_FUNCTION_0_3();
  uint64_t v12 = v11;
  v5[7] = v11;
  size_t v14 = *(void *)(v13 + 64);
  v5[8] = malloc(v14);
  v5[9] = malloc(v14);
  (*(void (**)(void))(v12 + 16))();
  LRUDictionary.subscript.getter();
  OUTLINED_FUNCTION_1_8();
}

{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_5_3();
  (*(void (**)(void))(v1 + 16))();
  LRUDictionary.subscript.getter();
}

void sub_25E062610(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  uint64_t v4 = *(void **)(*(void *)a1 + 72);
  if (a2)
  {
    uint64_t v5 = v2[7];
    uint64_t v11 = v2[6];
    uint64_t v7 = (void *)v2[4];
    uint64_t v6 = (void *)v2[5];
    uint64_t v8 = v2[2];
    uint64_t v9 = v2[3];
    OUTLINED_FUNCTION_9_5();
    v10();
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v11);
    LRUDictionary.subscript.setter();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    uint64_t v7 = (void *)v2[4];
    uint64_t v6 = (void *)v2[5];
    LRUDictionary.subscript.setter();
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);

  free(v2);
}

void LRUDictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_2();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = *(void *)(v26 + 24);
  uint64_t v28 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v30 = v29;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&a9 - v32;
  LRUDictionary.subscript.getter();
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v27) == 1)
  {
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v33, v28);
    v23(v34);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v33, v27);
    LRUDictionary.poke(_:)();
  }
  OUTLINED_FUNCTION_1_8();
}

void sub_25E062894()
{
}

void sub_25E0628A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 24);
  uint64_t v6 = *(void *)(a4 + a3 - 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v14 - v9;
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v11, v13, v5);
  swift_getTupleTypeMetadata2();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  type metadata accessor for LRUDictionary();
  LRUDictionary.subscript.setter();
}

uint64_t LRUDictionary.isEmpty.getter()
{
  return sub_25E0DBC20() & 1;
}

uint64_t LRUDictionary.count.getter()
{
  return sub_25E0DBFE0();
}

void sub_25E062DA8(uint64_t a1@<X8>)
{
}

uint64_t sub_25E062DB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E061F30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))LRUDictionary.maximumCost.setter);
}

void sub_25E062DE8(uint64_t a1@<X8>)
{
}

uint64_t sub_25E062DF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E061F30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))LRUDictionary.maximumCount.setter);
}

uint64_t sub_25E062E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_25E062E40(void *a1)
{
  if (*a1) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_25E062E94(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_25E062F20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*(void *)a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 16) = a2[2];
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  uint64_t v7 = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v8;
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t sub_25E063010(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*(void *)a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  swift_release();
LABEL_8:
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  *(void *)(a1 + 32) = a2[4];
  swift_release();
  *(void *)(a1 + 40) = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLVirtualTableIndexResults(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLVirtualTableIndexResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LRUDictionary()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E063170()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E063208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v11 = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = *(void *)v10;
    *(unsigned char *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_25E063308(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 32) - 8) + 8))();
}

uint64_t sub_25E063334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25E0633B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25E06343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25E0634C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25E063544(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 32);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v7 = (a2 - v5 + 255) >> (8 * v6);
    if (v6 < 4) {
      unsigned int v8 = v7 + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v8 < 0x100) {
      unsigned int v9 = 1;
    }
    if (v8 >= 2) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    switch(v10)
    {
      case 1:
        int v11 = a1[v6];
        if (!a1[v6]) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v11 = *(unsigned __int16 *)&a1[v6];
        if (*(_WORD *)&a1[v6]) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25E063664);
      case 4:
        int v11 = *(_DWORD *)&a1[v6];
        if (!v11) {
          break;
        }
LABEL_18:
        int v12 = (v11 - 1) << (8 * v6);
        if (v6 >= 4) {
          int v12 = 0;
        }
        if (((*(_DWORD *)(*(void *)(v4 - 8) + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v13 = *a1;
        }
        else {
          int v13 = *(_DWORD *)a1;
        }
        return v5 + (v13 | v12) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  else {
    return 0;
  }
}

void sub_25E063678(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 32);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v9 = 8 * v8;
  if (v7 >= a3)
  {
    int v13 = 0;
  }
  else
  {
    unsigned int v10 = (a3 - v7 + 255) >> v9;
    if (v8 <= 3) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
  }
  if (v7 < a2)
  {
    unsigned int v14 = (~v7 + a2) >> v9;
    if (v8 < 4) {
      int v15 = v14 + 1;
    }
    else {
      int v15 = 1;
    }
    if (v8 >= 4) {
      int v16 = ~v7 + a2;
    }
    else {
      int v16 = (~(_BYTE)v7 + a2);
    }
    bzero(a1, v8);
    if (v8 == 1) {
      *a1 = v16;
    }
    else {
      *(_DWORD *)a1 = v16;
    }
    switch(v13)
    {
      case 1:
        a1[v8] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v15;
        return;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v8] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_38:
      __break(1u);
      JUMPOUT(0x25E063838);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_25E063860()
{
  sub_25E0DAFB0();

  return swift_getWitnessTable();
}

uint64_t sub_25E0638AC()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return 24;
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  type metadata accessor for LRUDictionary.Container();
  return sub_25E0DBCF0();
}

uint64_t SQLDatabase.DynamicResults.columnNames.getter()
{
  OUTLINED_FUNCTION_12();
  long long v2 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 41) = *(_OWORD *)((char *)v0 + 25);
  sub_25E03DD94(v1 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25E063A70;
  return sub_25E03ADFC();
}

uint64_t sub_25E063A70()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = v4 + 16;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *size_t v8 = v7;
  swift_task_dealloc();
  sub_25E03DE44(v6);
  OUTLINED_FUNCTION_70();
  if (!v0) {
    uint64_t v9 = v3;
  }
  return v10(v9);
}

void *sub_25E063B50(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - (void)result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_19;
  }
  if (v4)
  {
    uint64_t v7 = (uint64_t)result;
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = sub_25E03CC74(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v8 = v14;
    uint64_t v9 = v7;
    while (a2 != v9)
    {
      uint64_t result = sub_25E04FCD0(a3, v9, &v13);
      if (v3)
      {
        swift_release();
        swift_release();
        return (void *)v8;
      }
      unsigned int v10 = v13;
      uint64_t v14 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        uint64_t result = sub_25E03CC74((char *)(v11 > 1), v12 + 1, 1);
        uint64_t v8 = v14;
      }
      *(void *)(v8 + 16) = v12 + 1;
      *(void *)(v8 + 8 * v12 + 32) = v10;
      if (a2 < v7) {
        goto LABEL_17;
      }
      if (v9 >= a2) {
        goto LABEL_18;
      }
      if (a2 == ++v9)
      {
        swift_release();
        return (void *)v8;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  return (void *)MEMORY[0x263F8EE78];
}

void sub_25E063CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v2)
  {
LABEL_9:
    swift_release();
    return;
  }
  uint64_t v4 = a1;
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25E03CB2C(0, v2 & ~(v2 >> 63), 0);
  if (a2 >= v4 && (v2 & 0x8000000000000000) == 0)
  {
    while (a2 != v4)
    {
      uint64_t v5 = sub_25E04FAE0(v4);
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_25E03CB2C(v8 > 1, v9 + 1, 1);
      }
      *(void *)(v11 + 16) = v9 + 1;
      uint64_t v10 = v11 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v7;
      if (a2 == ++v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  __break(1u);
}

__n128 sub_25E063DE4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 40);
  *(void *)a4 = *(void *)a1;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a4 + 24) = result;
  *(unsigned char *)(a4 + 40) = v4;
  *(void *)(a4 + 48) = a2;
  *(void *)(a4 + 56) = a3;
  return result;
}

__n128 sub_25E063E0C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a2 + 32);
  *(void *)a3 = a1;
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 24) = v5;
  *(unsigned char *)(a3 + 40) = v3;
  return result;
}

uint64_t sub_25E063E28()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  v1[16] = v4;
  v1[17] = v0;
  v1[14] = v2;
  v1[15] = v5;
  sub_25E03E7AC(v2, (uint64_t)(v1 + 2));
  sub_25E03E7AC(v3, (uint64_t)(v1 + 7));
  uint64_t v6 = (void *)swift_task_alloc();
  v1[18] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_25E063EE4;
  return sub_25E0502BC();
}

uint64_t sub_25E063EE4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[19] = v5;
  v3[20] = v0;
  swift_task_dealloc();
  uint64_t v6 = v3[17];
  if (v0) {
    uint64_t v7 = sub_25E0642A4;
  }
  else {
    uint64_t v7 = sub_25E063FD0;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_25E063FD0()
{
  OUTLINED_FUNCTION_25_1();
  if (qword_26A6D4210 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  *(void *)(v0 + 104) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 168) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v3;
  uint64_t v5 = sub_25E068FC0(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v6;
  sub_25E069008(0, (unint64_t *)&qword_26A6D4930);
  *uint64_t v6 = v0;
  v6[1] = sub_25E064194;
  return MEMORY[0x270FA23C8](v0 + 96, v0 + 104, &unk_26A6D4F60, v4, v2, v5, 0xD00000000000002BLL, 0x800000025E0E3C70);
}

uint64_t sub_25E064194()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 136);
  if (v0) {
    uint64_t v8 = sub_25E064320;
  }
  else {
    uint64_t v8 = sub_25E0642C0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_25E0642A4()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0642C0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_70();
  return v0();
}

uint64_t sub_25E064320()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E06437C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  v1[16] = v4;
  v1[17] = v0;
  v1[14] = v2;
  v1[15] = v5;
  v1[13] = v6;
  sub_25E03E7AC(v2, (uint64_t)(v1 + 2));
  sub_25E03E7AC(v3, (uint64_t)(v1 + 7));
  uint64_t v7 = (void *)swift_task_alloc();
  v1[18] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_25E06443C;
  return sub_25E0502BC();
}

uint64_t sub_25E06443C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[19] = v5;
  v3[20] = v0;
  swift_task_dealloc();
  uint64_t v6 = v3[17];
  if (v0) {
    uint64_t v7 = sub_25E0642A4;
  }
  else {
    uint64_t v7 = sub_25E064528;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_25E064528()
{
  OUTLINED_FUNCTION_25_1();
  if (qword_26A6D4210 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  *(void *)(v0 + 96) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 168) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v3;
  sub_25E068FC0(&qword_26A6D4770, (void (*)(uint64_t))_s10ConnectionCMa);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E0646D0;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA23C8](v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_25E0646D0()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v3 + 136);
  if (v0) {
    uint64_t v8 = sub_25E064320;
  }
  else {
    uint64_t v8 = sub_25E0647E0;
  }
  return MEMORY[0x270FA2498](v8, v7, 0);
}

uint64_t sub_25E0647E0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E064838(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a3;
  uint64_t v10 = (int *)((char *)a1 + *a1);
  uint64_t v8 = (void *)swift_task_alloc();
  v5[13] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_25E064938;
  return ((uint64_t (*)(void *, uint64_t, uint64_t))v10)(v5 + 8, a3, a4);
}

uint64_t sub_25E064938()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 80);
  if (v0) {
    uint64_t v6 = sub_25E064BAC;
  }
  else {
    uint64_t v6 = sub_25E064A38;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

#error "25E064AB4: call analysis failed (funcsize=90)"

#error "25E064C08: call analysis failed (funcsize=70)"

uint64_t sub_25E064CD0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v9 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[12] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_25E064DC0;
  return v9();
}

uint64_t sub_25E064DC0()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 72);
  if (v0) {
    uint64_t v6 = sub_25E064FF8;
  }
  else {
    uint64_t v6 = sub_25E064EC0;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

#error "25E064F30: call analysis failed (funcsize=75)"

#error "25E065054: call analysis failed (funcsize=70)"

uint64_t sub_25E06511C(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return MEMORY[0x270FA2498](sub_25E065140, 0, 0);
}

uint64_t sub_25E065140()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  v0[15] = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
  sub_25E03E7AC((uint64_t)(v0 + 7), (uint64_t)(v0 + 2));
  uint64_t v5 = (char *)&dword_26A6D4F50 + dword_26A6D4F50;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25E065270;
  return ((uint64_t (*)(void *, void *, void))v5)(v0 + 2, &unk_26A6D4F48, 0);
}

uint64_t sub_25E065270()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = v4 + 16;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v9 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    sub_25E068D3C(v6);
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v10, v11, v12);
  }
  else
  {
    sub_25E068D3C(v6);
    OUTLINED_FUNCTION_70();
    return v13(v3);
  }
}

uint64_t sub_25E0653B0()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0653CC()
{
  return swift_retain();
}

uint64_t sub_25E0653D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return sub_25E03DDF4(v2, v3, v4, v5, v6);
}

uint64_t sub_25E0653F0(uint64_t a1)
{
  uint64_t result = sub_25E04F998();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    swift_retain();
    return (uint64_t)sub_25E063B50(0, v3, a1);
  }
  return result;
}

uint64_t sub_25E065448@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[1];
  long long v4 = *v1;
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 9) = *(long long *)((char *)v1 + 25);
  sub_25E047108(a1);
  return sub_25E03DE44((uint64_t)&v4);
}

double sub_25E06548C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, v3, a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)&double result = sub_25E06772C((uint64_t)v9, AssociatedTypeWitness, a1, a2, a3).n128_u64[0];
  return result;
}

uint64_t SQLDatabase.Results.columnNames.getter()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  char v4 = *(unsigned char *)(v0 + 40);
  *(void *)(v1 + 16) = *(void *)v0;
  *(_OWORD *)(v1 + 24) = *(_OWORD *)(v0 + 8);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v1 + 56) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v5 = v1;
  v5[1] = sub_25E065648;
  return sub_25E06511C(v3, WitnessTable);
}

uint64_t sub_25E065648()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    OUTLINED_FUNCTION_70();
    return v12(v3);
  }
}

void sub_25E06574C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v30 = a1;
  uint64_t v31 = a5;
  uint64_t v10 = sub_25E04F998();
  uint64_t v29 = v10;
  uint64_t v33 = 0;
  if (a2)
  {
    uint64_t v11 = 0;
    uint64_t v12 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
    uint64_t v13 = 16;
    uint64_t v27 = 8 * a2;
    unint64_t v28 = a4 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = a4;
    uint64_t v26 = a4;
    do
    {
      uint64_t v32 = v6;
      uint64_t v15 = v12[v11];
      if (a2 == 1)
      {
        uint64_t TupleTypeMetadata = *v12;
      }
      else
      {
        MEMORY[0x270FA5388](v10);
        uint64_t v18 = 0;
        do
        {
          *(uint64_t *)((char *)&v25 + 8 * v18 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0)) = v12[v18];
          ++v18;
        }
        while (a2 != v18);
        uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
        uint64_t v14 = v26;
      }
      uint64_t v19 = v32;
      sub_25E0659E4(v15, &v33, v29, v30, a2, a3, v15, v14);
      uint64_t v6 = v19;
      if (v19)
      {
        if (v11)
        {
          uint64_t v21 = (int *)(TupleTypeMetadata + v13);
          do
          {
            if (a2 == 1) {
              int v22 = 0;
            }
            else {
              int v22 = *v21;
            }
            (*(void (**)(uint64_t))(*(void *)(v12[v11 - 1] - 8) + 8))(v31 + v22);
            v21 -= 4;
            --v11;
          }
          while (v11);
        }
        return;
      }
      ++v11;
      v13 += 16;
    }
    while (v11 != a2);
    if (a2 == 1)
    {
      uint64_t v20 = *v12;
      goto LABEL_23;
    }
    MEMORY[0x270FA5388](v10);
    uint64_t v24 = 0;
    do
    {
      *(uint64_t *)((char *)&v25 + 8 * v24 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0)) = v12[v24];
      ++v24;
    }
    while (a2 != v24);
  }
  else
  {
    MEMORY[0x270FA5388](v10);
  }
  uint64_t v20 = swift_getTupleTypeMetadata();
LABEL_23:
  __swift_storeEnumTagSinglePayload(v31, 0, 1, v20);
}

void sub_25E0659E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = OUTLINED_FUNCTION_19_4();
  if (*a2 >= a3)
  {
LABEL_7:
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_25E0DBE80();
    uint64_t v29 = v31;
    unint64_t v30 = v32;
    sub_25E0DB630();
    OUTLINED_FUNCTION_19_4();
    uint64_t v25 = *a2;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v25 = a7;
    swift_getMetatypeMetadata();
    sub_25E0DB550();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v25 = a3;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v21 = v29;
    unint64_t v22 = v30;
    sub_25E03E00C();
    swift_allocError();
    uint64_t *v23 = v21;
    v23[1] = v22;
    swift_willThrow();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_27_3();
    if (!v20) {
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_10;
  }
  MEMORY[0x270FA5388](v15);
  v24[2] = a5;
  v24[3] = a6;
  v24[4] = a7;
  v24[5] = a8;
  void v24[6] = v16;
  v24[7] = a2;
  sub_25E04FD80((uint64_t (*)(void))sub_25E068C44, (uint64_t)v24, a7);
  if (v8)
  {
    uint64_t v33 = v8;
    id v17 = v8;
    sub_25E04986C();
    if (!swift_dynamicCast()) {
      goto LABEL_13;
    }
    MEMORY[0x2611CF510](v8);
    OUTLINED_FUNCTION_19_4();
    sub_25E04FAE0(*a2);
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    sub_25E0DBE80();
    uint64_t v27 = v29;
    unint64_t v28 = v30;
    sub_25E0DB630();
    OUTLINED_FUNCTION_19_4();
    uint64_t v26 = *a2;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v26 = a7;
    swift_getMetatypeMetadata();
    sub_25E0DB550();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    a7 = v27;
    a3 = v28;
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v18 = a7;
    v18[1] = a3;
    swift_willThrow();
    MEMORY[0x2611CF510](v33);
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_27_3();
    if (!v20) {
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_7;
  }
LABEL_10:
  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_27_3();
  if (!v20) {
    goto LABEL_14;
  }
  __break(1u);
LABEL_13:
  MEMORY[0x2611CF510](v33);
  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_27_3();
  if (!v20)
  {
LABEL_14:
    *a2 = v19;
    return;
  }
  __break(1u);
}

uint64_t sub_25E065E10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a7 + 8))(a1, *a2, a5, a7);
}

void sub_25E065E9C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_25E065EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25E06548C(a1, WitnessTable, a2);
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void *)(v2 + 32);
  char v10 = *(unsigned char *)(v2 + 40);
  swift_release();

  return sub_25E03DEA4(v6, v7, v8, v9, v10);
}

uint64_t SQLDatabase.TransformedResults.AsyncIterator.next()()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v4;
  uint64_t v5 = *(void *)(v2 + 16);
  v1[5] = v5;
  if (v5 == 1)
  {
    uint64_t TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    uint64_t v7 = swift_task_alloc();
    if (v5)
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 32) & 0xFFFFFFFFFFFFFFFELL);
      uint64_t v9 = (void *)v7;
      uint64_t v10 = v5;
      do
      {
        uint64_t v11 = *v8++;
        *v9++ = v11;
        --v10;
      }
      while (v10);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v1[6] = TupleTypeMetadata;
  uint64_t v12 = sub_25E0DBCF0();
  v1[7] = v12;
  v1[8] = *(void *)(v12 - 8);
  uint64_t v13 = swift_task_alloc();
  v1[9] = v13;
  OUTLINED_FUNCTION_0_3();
  v1[10] = v14;
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t v15 = (void *)swift_task_alloc();
  v1[14] = v15;
  uint64_t v16 = type metadata accessor for SQLDatabase.AsyncResultsIterator();
  *uint64_t v15 = v1;
  v15[1] = sub_25E066148;
  return SQLDatabase.AsyncResultsIterator.next()(v13, v16);
}

uint64_t sub_25E066148()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E066228()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[2];
    uint64_t v4 = v0[3];
    (*(void (**)(uint64_t, void))(v0[8] + 8))(v1, v0[7]);
    __swift_storeEnumTagSinglePayload(v3, 1, 1, *(void *)(v4 + 24));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    return v5();
  }
  else
  {
    uint64_t v7 = v0[13];
    uint64_t v9 = v0[10];
    uint64_t v8 = v0[11];
    uint64_t v10 = v0[4];
    uint64_t v11 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7, v1, v2);
    uint64_t v12 = *(int **)(v10 + 112);
    uint64_t v13 = swift_task_alloc();
    v0[16] = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v2);
    if (v11)
    {
      uint64_t v14 = 0;
      unint64_t v15 = *(void *)(v0[3] + 32) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = 32;
      do
      {
        uint64_t v17 = v0[5];
        uint64_t v18 = v0[12];
        if (v17 == 1)
        {
          LODWORD(v19) = 0;
        }
        else
        {
          uint64_t v19 = *(int *)(v0[6] + v16);
          v18 += v19;
        }
        (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v15 + 8 * v14) - 8) + 16))(v18, v0[11] + (int)v19);
        *(void *)(v13 + 8 * v14++) = v18;
        v16 += 16;
      }
      while (v14 != v17);
    }
    unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v12 + *v12);
    char v20 = (void *)swift_task_alloc();
    v0[17] = v20;
    void *v20 = v0;
    v20[1] = sub_25E0664B8;
    uint64_t v21 = v0[2];
    return v22(v21, v13);
  }
}

uint64_t sub_25E0664B8()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v3[18] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v8 = v3[11];
    uint64_t v7 = v3[12];
    uint64_t v9 = v3[10];
    uint64_t v10 = v3[6];
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v3[19] = v11;
    v3[20] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v7, v10);
    v11(v8, v10);
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_25E0665E8()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 104), *(void *)(v0 + 48));
  __swift_storeEnumTagSinglePayload(v1, 0, 1, *(void *)(v2 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v3();
}

uint64_t sub_25E06669C()
{
  OUTLINED_FUNCTION_17();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E066720()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void (**)(void))(*(void *)(v0 + 80) + 8);
  OUTLINED_FUNCTION_21_3();
  v1();
  OUTLINED_FUNCTION_21_3();
  v1();
  OUTLINED_FUNCTION_21_3();
  v1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v2();
}

uint64_t SQLDatabase.AsyncResultsIterator.next()(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E066810()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = *(void *)(v0 + 128);
  *(void *)(v0 + 136) = *(void *)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  *(void *)(v0 + 144) = v2;
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v0 + 152) = v3;
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = *(void *)(v1 + 32);
  *(void *)(v0 + 168) = v5;
  unsigned int v6 = *(unsigned __int8 *)(v1 + 40);
  *(unsigned char *)(v0 + 97) = v6;
  if (v6 >> 6)
  {
    if (v6 >> 6 != 1)
    {
      __swift_storeEnumTagSinglePayload(*(void *)(v0 + 112), 1, 1, *(void *)(*(void *)(v0 + 120) + 16));
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_7_0();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 200) = v8;
    uint64_t v9 = *(void *)(v7 + 16);
    *(void *)(v0 + 208) = v9;
    *(void *)(v8 + 16) = v9;
    *(void *)(v8 + 24) = v1;
    swift_retain();
    swift_retain();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v10;
    sub_25E0DBCF0();
    *uint64_t v10 = v0;
    v10[1] = sub_25E066B34;
    OUTLINED_FUNCTION_7_0();
    return sub_25E052358(v11, v12, v13, v14);
  }
  else
  {
    *(void *)(v0 + 64) = v2;
    char v17 = v6 & 1;
    *(void *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = v4;
    *(void *)(v0 + 88) = v5;
    *(unsigned char *)(v0 + 96) = v6 & 1;
    swift_retain();
    sub_25E03DDF4(v2, v3, v4, v5, v17);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_25E066A3C;
    OUTLINED_FUNCTION_7_0();
    return sub_25E0513E0();
  }
}

uint64_t sub_25E066A3C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 184) = v5;
  *(void *)(v3 + 192) = v0;
  swift_task_dealloc();
  if (!v0) {
    sub_25E03DEA4(*(void *)(v3 + 144), *(void *)(v3 + 152), *(void *)(v3 + 160), *(void *)(v3 + 168), *(unsigned char *)(v3 + 97) & 1);
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_25E066B34()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E066C1C()
{
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  unsigned __int8 v9 = *(unsigned char *)(v3 + 40);
  swift_retain();
  swift_retain();
  sub_25E03E6F4(v4, v5, v6, v7, v8, v9);
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 8) = v1;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 16) = 0;
  *(unsigned char *)(v3 + 40) = 64;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[29] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_25E066D2C;
  uint64_t v11 = v0[15];
  uint64_t v12 = v0[14];
  return SQLDatabase.AsyncResultsIterator.next()(v12, v11);
}

uint64_t sub_25E066D2C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 240) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E066E0C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E066E70()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E066ED0()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  char v5 = *(unsigned char *)(v0 + 97) & 1;
  swift_release();
  sub_25E03DEA4(v4, v3, v1, v2, v5);
  OUTLINED_FUNCTION_9();
  return v6();
}

uint64_t sub_25E066F64()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E066FCC()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  swift_task_dealloc();
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  sub_25E04986C();
  if (!OUTLINED_FUNCTION_12_6()) {
    goto LABEL_6;
  }
  int v3 = *(_DWORD *)(v0 + 20);
  char v4 = *(unsigned char *)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v9 = v3;
  char v10 = v4;
  int v11 = 17;
  char v12 = 14;
  if (static SQLError.Code.== infix(_:_:)(&v9, &v11))
  {
    uint64_t v5 = *(void *)(v0 + 144);
    MEMORY[0x2611CF510](*(void *)(v0 + 224));
    *(void *)(v0 + 248) = *(void *)(v5 + 16);
    *(void *)(v0 + 256) = *(void *)(v5 + 24);
    uint64_t v6 = *(void *)(v0 + 136);
    sub_25E0DB3C0();
    return MEMORY[0x270FA2498](sub_25E067124, v6, 0);
  }
  else
  {
LABEL_6:
    swift_release();
    swift_release();
    MEMORY[0x2611CF510](*(void *)(v0 + 104));
    OUTLINED_FUNCTION_9();
    return v7();
  }
}

uint64_t sub_25E067124()
{
  OUTLINED_FUNCTION_17();
  sub_25E050F18(v0[31], v0[32]);
  v0[33] = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0671B4()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  swift_release();
  swift_release();
  sub_25E03E6F4(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
  *(void *)(v2 + 32) = 0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(unsigned char *)(v2 + 40) = 0x80;
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v1);
  MEMORY[0x2611CF510](v0[13]);
  OUTLINED_FUNCTION_17_0();
  return v4();
}

uint64_t sub_25E06726C()
{
  OUTLINED_FUNCTION_12();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  MEMORY[0x2611CF510](*(void *)(v0 + 104));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t type metadata accessor for SQLDatabase.AsyncResultsIterator()
{
  return __swift_instantiateGenericMetadata();
}

__n128 sub_25E0672FC@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 40);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v7;
  *(void *)(a3 + 32) = v3;
  *(unsigned char *)(a3 + 40) = v4;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(a1 + 48);
  *(void *)(a3 + 64) = v5;
  *(_OWORD *)(a3 + 72) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)(a2 + 3);
  *(unsigned char *)(a3 + 104) = v6;
  __n128 result = *((__n128 *)a2 + 3);
  *(__n128 *)(a3 + 112) = result;
  return result;
}

uint64_t sub_25E067348()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E046DD4;
  return SQLDatabase.TransformedResults.AsyncIterator.next()();
}

uint64_t sub_25E0673F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_25E0674D0;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16, v12, v13);
}

uint64_t sub_25E0674D0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    **(void **)(v3 + 24) = *(void *)(v3 + 16);
  }
  OUTLINED_FUNCTION_9();
  return v7();
}

uint64_t SQLDatabase.TransformedResults.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v25 = *(void *)v1;
  uint64_t v26 = v2;
  uint64_t v27 = v3;
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  char v30 = v6;
  uint64_t v9 = type metadata accessor for SQLDatabase.Results();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_25E06548C(v9, WitnessTable, (uint64_t)v31);
  v21[0] = v31[0];
  v21[1] = v31[1];
  uint64_t v22 = v32;
  char v23 = v33;
  long long v24 = v34;
  v17[0] = v25;
  v17[1] = v2;
  v17[2] = v3;
  v17[3] = v4;
  v17[4] = v5;
  char v18 = v6;
  uint64_t v19 = v8;
  uint64_t v20 = v7;
  sub_25E0672FC((uint64_t)v21, v17, a1);
  swift_retain();
  uint64_t v11 = OUTLINED_FUNCTION_28_3();
  sub_25E03DDF4(v11, v12, v13, v14, v6);
  return swift_retain();
}

uint64_t sub_25E0676B8@<X0>(uint64_t a1@<X8>)
{
  SQLDatabase.TransformedResults.makeAsyncIterator()(a1);
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  swift_release();
  sub_25E03DEA4(v2, v3, v4, v5, v6);

  return swift_release();
}

__n128 sub_25E06772C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  (*(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v17, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  __n128 v16 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  char v13 = v20;
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a2;
  void v14[3] = a3;
  void v14[4] = a4;
  v14[5] = a3;
  *(void *)a5 = v10;
  __n128 result = v16;
  *(__n128 *)(a5 + 8) = v16;
  *(void *)(a5 + 24) = v11;
  *(void *)(a5 + 32) = v12;
  *(unsigned char *)(a5 + 40) = v13;
  *(void *)(a5 + 48) = sub_25E069114;
  *(void *)(a5 + 56) = v14;
  return result;
}

uint64_t sub_25E067840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_25E067860, a2, 0);
}

uint64_t sub_25E067860()
{
  OUTLINED_FUNCTION_8_0();
  sub_25E09228C(v0[3], sub_25E068D24);
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void (**)(uint64_t))(v0[5] + 48);
  swift_retain();
  v2(v1);
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v4();
}

uint64_t sub_25E067924()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_5(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_25E04A1EC;
  return sub_25E067840(v6, v4, v2, v7);
}

uint64_t type metadata accessor for SQLDatabase.Results()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25E0679F4(uint64_t a1)
{
  unint64_t result = sub_25E067A1C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E067A1C()
{
  unint64_t result = qword_26A6D4C90;
  if (!qword_26A6D4C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4C90);
  }
  return result;
}

uint64_t sub_25E067A68()
{
  return sub_25E068FC0(&qword_26A6D4C98, (void (*)(uint64_t))sub_25E067AB0);
}

void sub_25E067AB0()
{
  if (!qword_26A6D4CA0[0])
  {
    sub_25E069008(255, &qword_26A6D49E0);
    unint64_t v0 = type metadata accessor for SQLDatabase.AsyncResultsIterator();
    if (!v1) {
      atomic_store(v0, qword_26A6D4CA0);
    }
  }
}

uint64_t sub_25E067B18(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25E067B54()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E067B70()
{
  return MEMORY[0x263F8E4E0];
}

uint64_t sub_25E067B7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E067B98()
{
  return sub_25E04E484();
}

uint64_t sub_25E067BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25E04A1EC;
  return SQLDatabase.AsyncResultsIterator.next()(a1, a2);
}

uint64_t sub_25E067C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 32) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_25E06914C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v6 + 16, v12, v13);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SQLDatabase.DynamicResults()
{
  return &type metadata for SQLDatabase.DynamicResults;
}

uint64_t _s14DynamicResultsVwxx_0(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);

  return sub_25E03DEA4(v2, v3, v4, v5, v6);
}

uint64_t _s14DynamicResultsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_retain();
  sub_25E03DDF4(v3, v4, v5, v6, v7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t _s14DynamicResultsVwca_0(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  uint64_t v8 = OUTLINED_FUNCTION_28_3();
  sub_25E03DDF4(v8, v9, v10, v11, (char)v2);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  char v16 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_25E03DEA4(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14DynamicResultsVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v4;
  sub_25E03DEA4(v5, v6, v7, v8, v9);
  return a1;
}

uint64_t _s14DynamicResultsVwet_0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E067F58(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25E067FA4(uint64_t a1)
{
  swift_release();
  sub_25E03DEA4(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

  return swift_release();
}

uint64_t sub_25E067FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  swift_retain();
  sub_25E03DDF4(v4, v5, v6, v7, v8);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_retain();
  return a1;
}

uint64_t sub_25E068078(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_25E03DDF4(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  sub_25E03DEA4(v9, v10, v11, v12, v13);
  uint64_t v14 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v14;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_25E06813C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v4;
  sub_25E03DEA4(v5, v6, v7, v8, v9);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_25E0681AC(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E0681EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SQLDatabase.TransformedResults()
{
  return swift_getGenericMetadata();
}

void sub_25E068254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 >> 6 == 1)
  {
    swift_retain();
    swift_retain();
  }
  else if (!(a6 >> 6))
  {
    char v10 = a6 & 1;
    swift_retain();
    sub_25E03DDF4(a2, a3, a4, a5, v10);
  }
}

uint64_t sub_25E068310(uint64_t a1)
{
  sub_25E03E6F4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  sub_25E03DEA4(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));

  return swift_release();
}

uint64_t sub_25E068378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  char v15 = *(unsigned char *)(a2 + 104);
  swift_retain();
  swift_retain();
  sub_25E03DDF4(v11, v12, v13, v14, v15);
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v15;
  uint64_t v16 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v16;
  swift_retain();
  return a1;
}

uint64_t sub_25E06844C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  sub_25E03E6F4(v10, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v16;
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v17 = *(void *)(a2 + 72);
  uint64_t v18 = *(void *)(a2 + 80);
  uint64_t v19 = *(void *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 96);
  LOBYTE(v8) = *(unsigned char *)(a2 + 104);
  sub_25E03DDF4(v17, v18, v19, v20, v8);
  uint64_t v21 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 88);
  uint64_t v24 = *(void *)(a1 + 96);
  char v25 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 72) = v17;
  *(void *)(a1 + 80) = v18;
  *(void *)(a1 + 88) = v19;
  *(void *)(a1 + 96) = v20;
  *(unsigned char *)(a1 + 104) = v8;
  sub_25E03DEA4(v21, v22, v23, v24, v25);
  uint64_t v26 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v26;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy128_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_25E06856C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v4;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_25E03E6F4(v6, v7, v8, v9, v10, v12);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  char v13 = *(unsigned char *)(a2 + 104);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a1 + 96);
  char v18 = *(unsigned char *)(a1 + 104);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = v13;
  sub_25E03DEA4(v14, v15, v16, v17, v18);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t sub_25E068618(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E068658(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SQLDatabase.TransformedResults.AsyncIterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25E0686D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_25E0686D8(uint64_t a1)
{
  sub_25E03E6F4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));

  return swift_release();
}

uint64_t sub_25E068720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v5, v6, v7, v8, v9);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_retain();
  return a1;
}

uint64_t sub_25E0687A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  sub_25E03E6F4(v10, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25E068850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v4;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_25E03E6F4(v6, v7, v8, v9, v10, v12);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_25E0688B4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E0688F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_25E068944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

void sub_25E06894C(uint64_t a1)
{
}

uint64_t sub_25E068964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t sub_25E0689DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 40);
  sub_25E068254(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_25E03E6F4(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t sub_25E068A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_25E03E6F4(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_25E068ABC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFE && *(unsigned char *)(a1 + 41))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16381;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 40) >> 6) | (4
                                                  * ((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7 | (((*(unsigned __int8 *)(a1 + 40) >> 1) & 0x1F) << 7)))) ^ 0x3FFF;
      if (v2 >= 0x3FFD) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_25E068B28(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 16382;
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(void *)__n128 result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(unsigned char *)(result + 40) = (v3 >> 6) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_25E068BB0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(void *)a1 >> 3) + 2;
  }
}

uint64_t sub_25E068BD4(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0x3Fu;
  return result;
}

uint64_t sub_25E068BE4(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 40) & 1 | ((_BYTE)a2 << 6);
    *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
    *(unsigned char *)(result + 40) = v2;
  }
  else
  {
    *(void *)__n128 result = 8 * (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(unsigned char *)(result + 40) = 0x80;
  }
  return result;
}

uint64_t _s20AsyncResultsIteratorV12ResultsStateOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E068C44(uint64_t a1)
{
  return sub_25E065E10(a1, *(void **)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_25E068C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a3;
  return MEMORY[0x270FA2498](sub_25E068C84, a2, 0);
}

uint64_t sub_25E068C84()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t result = sub_25E04F954();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void **)(v0 + 24);
    swift_retain();
    sub_25E063CB0(0, v2);
    *uint64_t v3 = v4;
    OUTLINED_FUNCTION_17_0();
    return v5();
  }
  return result;
}

uint64_t sub_25E068D24()
{
  return sub_25E04E484();
}

uint64_t sub_25E068D3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E068D74(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_25E068E3C;
  return sub_25E064838(a2, a3, a4, a5, a6);
}

uint64_t sub_25E068E3C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

void sub_25E068F1C()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E046DD4;
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_7_0();
  __asm { BR              X6 }
}

uint64_t sub_25E068FC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25E069008(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_25E0DB940();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_25E069050()
{
  return sub_25E05292C();
}

uint64_t sub_25E06906C()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_6_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E04A1EC;
  uint64_t v3 = OUTLINED_FUNCTION_9_0();
  return sub_25E064CD0(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_25E069104()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25E069114(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 + 32) + 32))(a1, *(void *)(v1 + 24));
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_25_4()
{
  JUMPOUT(0x2611CF510);
}

void OUTLINED_FUNCTION_26_3()
{
  JUMPOUT(0x2611CF510);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t NanoID.nativeValue.getter(uint64_t a1)
{
  return a1;
}

_UNKNOWN **sub_25E069278()
{
  return &protocol witness table for String;
}

Swift::String *sub_25E069284@<X0>(Swift::String *result@<X0>, SonicFoundation::NanoID *a2@<X8>)
{
  if (!v2)
  {
    SonicFoundation::NanoID v4 = NanoID.init(nativeValue:)(*result);
    uint64_t result = (Swift::String *)v4.nanoIDString._countAndFlagsBits;
    *a2 = v4;
  }
  return result;
}

uint64_t sub_25E0692C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NanoID.nativeValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t LRUDictionary.description.getter(void *a1)
{
  uint64_t v3 = a1[3];
  OUTLINED_FUNCTION_0_3();
  uint64_t v50 = v4;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v6 + 16);
  OUTLINED_FUNCTION_0_3();
  uint64_t v49 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v51 = v14;
  uint64_t v52 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  char v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v41 - v19;
  uint64_t v21 = *(void (**)(void, void, void))v1;
  unint64_t v22 = *(void *)(v1 + 8);
  uint64_t v24 = *(void *)(v1 + 16);
  uint64_t v23 = *(void (**)(void, void, void))(v1 + 24);
  char v25 = *(void (**)(void, void, void))(v1 + 32);
  uint64_t v26 = *(void *)(v1 + 40);
  int v27 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v28 = *(void *)(v1 + 56);
  int v29 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  uint64_t v47 = v21;
  uint64_t v54 = v21;
  unint64_t v55 = v22;
  uint64_t v56 = v24;
  uint64_t v57 = v23;
  uint64_t v46 = v23;
  uint64_t v45 = v25;
  uint64_t v58 = v25;
  uint64_t v59 = v26;
  uint64_t v44 = v26;
  int v43 = v27;
  char v60 = v27;
  uint64_t v42 = v28;
  uint64_t v61 = v28;
  v41[3] = v29;
  char v62 = v29;
  uint64_t v48 = a1;
  if ((LRUDictionary.isEmpty.getter() & 1) == 0)
  {
    sub_25E0DB630();
    uint64_t v54 = v47;
    unint64_t v55 = v22;
    uint64_t v56 = v24;
    uint64_t v57 = v46;
    uint64_t v58 = v45;
    uint64_t v59 = v44;
    char v60 = v43;
    uint64_t v61 = v42;
    OUTLINED_FUNCTION_7_7((uint64_t)&v65 + 4);
    LRUDictionary.makeIterator()(v30);
    uint64_t v48 = (void *)type metadata accessor for LRUDictionary.Iterator();
    LRUDictionary.Iterator.next()(v48, (uint64_t)v18);
    uint64_t v31 = v52 + 32;
    uint64_t v47 = *(void (**)(void, void, void))(v52 + 32);
    v47(v20, v18, v51);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, TupleTypeMetadata2) != 1)
    {
      uint64_t v52 = v31;
      uint64_t v33 = v49 + 32;
      uint64_t v34 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v46 = *(void (**)(void, void, void))(v49 + 32);
      v46(v13, v20, v9);
      uint64_t v35 = *(void (**)(void, void, void))(v50 + 32);
      uint64_t v36 = (void (**)(char *, uint64_t))(v50 + 8);
      uint64_t v49 = v33;
      v50 += 32;
      uint64_t v37 = (void (**)(char *, uint64_t))(v33 - 24);
      uint64_t v45 = v35;
      v35(v8, &v20[v34], v3);
      while (1)
      {
        uint64_t v54 = 0;
        unint64_t v55 = 0xE000000000000000;
        sub_25E0DC350();
        sub_25E0DB630();
        sub_25E0DC350();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        (*v36)(v8, v3);
        (*v37)(v13, v9);
        LRUDictionary.Iterator.next()(v48, (uint64_t)v18);
        OUTLINED_FUNCTION_2_5();
        v38();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, TupleTypeMetadata2) == 1) {
          break;
        }
        OUTLINED_FUNCTION_2_5();
        v39();
        OUTLINED_FUNCTION_2_5();
        v40();
        OUTLINED_FUNCTION_4_9();
      }
    }
    swift_release();
    swift_release();
    swift_release();
  }
  sub_25E0DB630();
  return v63;
}

uint64_t LRUDictionary.debugDescription.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  OUTLINED_FUNCTION_0_3();
  *(void *)&long long v80 = v3;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5_7();
  uint64_t v81 = v5;
  uint64_t v79 = v6;
  uint64_t v7 = *(void *)(v6 + 16);
  OUTLINED_FUNCTION_0_3();
  uint64_t v62 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_5_7();
  uint64_t v56 = v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v68 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v76 = v11;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v67 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)&v56 - v15;
  uint64_t v75 = *v1;
  uint64_t v78 = v1[1];
  uint64_t v74 = v1[2];
  uint64_t v16 = v1[4];
  uint64_t v73 = v1[3];
  uint64_t v17 = v1[5];
  int v18 = *((unsigned __int8 *)v1 + 48);
  uint64_t v19 = v1[7];
  int v20 = *((unsigned __int8 *)v1 + 64);
  v84[0] = 0;
  v84[1] = 0xE000000000000000;
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  strcpy((char *)v84, "LRUDictionary<");
  HIBYTE(v84[1]) = -18;
  sub_25E0DC650();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_9();
  sub_25E0DC650();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  v91[0] = v84[0];
  v91[1] = v84[1];
  if ((v20 & 1) == 0)
  {
    v84[0] = 0;
    v84[1] = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_6(0xEE00203A746E756FLL);
    uint64_t v83 = v19;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_9();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
  }
  int v77 = v20;
  uint64_t v70 = v19;
  uint64_t v72 = v16;
  int v71 = v18;
  if ((v18 & 1) == 0)
  {
    v84[0] = 0;
    v84[1] = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_6(0xED0000203A74736FLL);
    uint64_t v83 = v17;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_4_9();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v75;
  v84[0] = v75;
  v84[1] = v78;
  uint64_t v22 = v74;
  uint64_t v23 = v73;
  uint64_t v85 = v74;
  uint64_t v86 = v73;
  uint64_t v24 = v72;
  uint64_t v87 = v72;
  uint64_t v88 = v17;
  char v25 = v71;
  char v89 = v71;
  uint64_t v26 = v70;
  uint64_t v90 = v70;
  OUTLINED_FUNCTION_6_7();
  if ((LRUDictionary.isEmpty.getter() & 1) == 0)
  {
    sub_25E0DB630();
    v84[0] = v21;
    v84[1] = v78;
    uint64_t v85 = v22;
    uint64_t v86 = v23;
    uint64_t v87 = v24;
    uint64_t v88 = v17;
    uint64_t v65 = v17;
    char v89 = v25;
    uint64_t v90 = v26;
    OUTLINED_FUNCTION_7_7((uint64_t)&v92 + 4);
    LRUDictionary.makeIterator()(v27);
    uint64_t v28 = (void *)type metadata accessor for LRUDictionary.Iterator();
    int v29 = &v83;
    uint64_t v30 = v67;
    unint64_t v64 = v28;
    LRUDictionary.Iterator.next()(v28, v67);
    uint64_t v31 = *(void (**)(void, void, void))(v76 + 32);
    uint64_t v32 = (uint64_t)v66;
    v76 += 32;
    uint64_t v63 = v31;
    v31(v66, v30, v68);
    uint64_t v33 = TupleTypeMetadata2;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, TupleTypeMetadata2);
    uint64_t v35 = v56;
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v37 = v62 + 32;
      uint64_t v38 = *(int *)(v33 + 48);
      uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32);
      v58(v56, v32, v7);
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32);
      uint64_t v62 = v37 - 16;
      uint64_t v61 = v80 + 16;
      uint64_t v60 = v80 + 8;
      uint64_t v59 = v37 - 24;
      uint64_t v57 = v39;
      v39(v81, v32 + v38, v2);
      sub_25E069F90();
      long long v80 = xmmword_25E0DD9C0;
      for (uint64_t i = v65; ; uint64_t i = v65)
      {
        uint64_t v41 = swift_allocObject();
        uint64_t v42 = (uint64_t *)OUTLINED_FUNCTION_9_7(v41);
        v29[7] = v7;
        __swift_allocate_boxed_opaque_existential_0(v42);
        OUTLINED_FUNCTION_8_8();
        v43();
        OUTLINED_FUNCTION_1_10();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        v84[0] = v75;
        v84[1] = v78;
        uint64_t v85 = v74;
        uint64_t v86 = v73;
        uint64_t v87 = v72;
        uint64_t v88 = i;
        char v89 = v71;
        uint64_t v90 = v70;
        OUTLINED_FUNCTION_6_7();
        LRUDictionary.cost(for:)();
        if ((v45 & 1) == 0)
        {
          v84[0] = 9256;
          v84[1] = 0xE200000000000000;
          uint64_t v82 = v44;
          sub_25E0DC2D0();
          sub_25E0DB630();
          swift_bridgeObjectRelease();
          sub_25E0DB630();
          sub_25E0DB630();
          uint64_t v35 = v56;
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = swift_allocObject();
        uint64_t v47 = (uint64_t *)OUTLINED_FUNCTION_9_7(v46);
        v91[7] = v2;
        __swift_allocate_boxed_opaque_existential_0(v47);
        OUTLINED_FUNCTION_8_8();
        uint64_t v48 = v81;
        v49();
        OUTLINED_FUNCTION_1_10();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_8_8();
        v50(v48, v2);
        OUTLINED_FUNCTION_8_8();
        v51(v35, v7);
        LRUDictionary.Iterator.next()(v64, v67);
        uint64_t v52 = (uint64_t)v66;
        OUTLINED_FUNCTION_2_5();
        v53();
        uint64_t v54 = TupleTypeMetadata2;
        if (__swift_getEnumTagSinglePayload(v52, 1, TupleTypeMetadata2) == 1) {
          break;
        }
        uint64_t v55 = v52 + *(int *)(v54 + 48);
        v58(v35, v52, v7);
        v57(v81, v55, v2);
        int v29 = v91;
        OUTLINED_FUNCTION_4_9();
      }
    }
    swift_release();
    swift_release();
    swift_release();
  }
  sub_25E0DB630();
  sub_25E0DB630();
  return v91[0];
}

void sub_25E069F90()
{
  if (!qword_26A6D46A0)
  {
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D46A0);
    }
  }
}

void OUTLINED_FUNCTION_7_7(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 - 112) = *(_DWORD *)(a1 - 256);
}

uint64_t sub_25E06A008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_25E0DB2B0();
  uint64_t v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }

  return __swift_storeEnumTagSinglePayload(a2, v7, 1, v6);
}

uint64_t static Symbols.name(for:)(int a1)
{
  sub_25E06A2D8();
  MEMORY[0x270FA5388](v2 - 8);
  OUTLINED_FUNCTION_5_3();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_25E0DB320();
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11 - v10;
  sub_25E0DB2F0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_2_6();
  sub_25E0DB2E0();
  *(_DWORD *)(swift_allocObject() + 16) = a1;
  sub_25E0DB2C0();
  swift_release();
  sub_25E0DB310();
  uint64_t v14 = sub_25E0DB300();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  sub_25E06A008(v14, v5);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_25E0DB2B0();
  if (__swift_getEnumTagSinglePayload(v5, 1, v15) == 1)
  {
    uint64_t v16 = OUTLINED_FUNCTION_3_7();
    v17(v16);
    sub_25E06A450(v5);
    return 0;
  }
  else
  {
    uint64_t v18 = sub_25E0DB2A0();
    uint64_t v19 = OUTLINED_FUNCTION_3_7();
    v20(v19);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
  }
  return v18;
}

void sub_25E06A2D8()
{
  if (!qword_26A6D4F88)
  {
    sub_25E0DB2B0();
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4F88);
    }
  }
}

uint64_t sub_25E06A330(uint64_t a1, int a2)
{
  uint64_t v4 = sub_25E0DB340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (_DWORD *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v7 = a2;
  (*(void (**)(_DWORD *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F66070], v4);
  LOBYTE(a2) = MEMORY[0x2611CD850](a1, v7);
  (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v7, v4);
  return a2 & 1;
}

uint64_t sub_25E06A438()
{
  return MEMORY[0x270FA0238](v0, 20, 7);
}

uint64_t sub_25E06A448(uint64_t a1)
{
  return sub_25E06A330(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_25E06A450(uint64_t a1)
{
  sub_25E06A2D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static Symbols.scalar(for:)(uint64_t a1, uint64_t a2)
{
  sub_25E06A2D8();
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_5_3();
  uint64_t v7 = v6 - v5;
  sub_25E0DB340();
  OUTLINED_FUNCTION_1();
  uint64_t v28 = v9;
  uint64_t v29 = v8;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_2_6();
  uint64_t v10 = sub_25E0DB320();
  OUTLINED_FUNCTION_1();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_5_3();
  uint64_t v16 = v15 - v14;
  sub_25E0DB2F0();
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_5_3();
  sub_25E0DB2E0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  sub_25E0DB3C0();
  sub_25E0DB2D0();
  swift_release();
  sub_25E0DB310();
  uint64_t v19 = sub_25E0DB300();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  sub_25E06A008(v19, v7);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_25E0DB2B0();
  if (__swift_getEnumTagSinglePayload(v7, 1, v20) == 1)
  {
    uint64_t v21 = OUTLINED_FUNCTION_4_10();
    v22(v21);
    sub_25E06A450(v7);
LABEL_6:
    uint64_t v26 = 0;
    unsigned __int8 v25 = 1;
    return v26 | ((unint64_t)v25 << 32);
  }
  sub_25E0DB290();
  uint64_t v23 = OUTLINED_FUNCTION_4_10();
  v24(v23);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v7, v20);
  if ((*(unsigned int (**)(unsigned int *, uint64_t))(v28 + 88))(v2, v29) != *MEMORY[0x263F66070])
  {
    (*(void (**)(unsigned int *, uint64_t))(v28 + 8))(v2, v29);
    goto LABEL_6;
  }
  (*(void (**)(unsigned int *, uint64_t))(v28 + 96))(v2, v29);
  unsigned __int8 v25 = 0;
  uint64_t v26 = *v2;
  return v26 | ((unint64_t)v25 << 32);
}

uint64_t sub_25E06A79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_25E0DB2A0() == a2 && v4 == a3) {
    char v6 = 1;
  }
  else {
    char v6 = sub_25E0DC380();
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_25E06A80C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E06A844(uint64_t a1)
{
  return sub_25E06A79C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for Symbols()
{
  return &type metadata for Symbols;
}

uint64_t ActorSemaphore.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ActorSemaphore.init(value:)(a1);
  return v2;
}

uint64_t ActorSemaphore.init(value:)(uint64_t a1)
{
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v1 + 120) = MEMORY[0x263F8EE78];
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 112) = a1;
    return v1;
  }
  return result;
}

uint64_t ActorSemaphore.wait()()
{
  *(void *)(v1 + 104) = v0;
  return MEMORY[0x270FA2498](sub_25E06A918, v0, 0);
}

uint64_t sub_25E06A918(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 104);
  uint64_t v5 = *(void *)(v4 + 112);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  *(void *)(v4 + 112) = v7;
  if (v7 < 0)
  {
    sub_25E06AC00();
    swift_getObjectType();
    uint64_t v10 = sub_25E0DB960();
    uint64_t v12 = v11;
    a1 = sub_25E06A9EC;
    a2 = v10;
    a3 = v12;
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v3 + 8);
  return v8();
}

uint64_t sub_25E06A9EC()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = v0[13];
  v0[2] = v0;
  v0[3] = sub_25E06AAF8;
  uint64_t v3 = swift_continuation_init();
  swift_beginAccess();
  sub_25E06AE70((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25E056A10);
  uint64_t v4 = *(void *)(*(void *)(v2 + 120) + 16);
  sub_25E06AF2C(v4, (uint64_t (*)(BOOL))sub_25E056A10);
  uint64_t v5 = *(void *)(v2 + 120);
  *(void *)(v5 + 16) = v4 + 1;
  *(void *)(v5 + 8 * v4 + 32) = v3;
  swift_endAccess();
  return MEMORY[0x270FA23F0](v1);
}

uint64_t sub_25E06AAF8()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48)) {
    swift_willThrow();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

unint64_t sub_25E06AC00()
{
  unint64_t result = qword_26A6D4F98;
  if (!qword_26A6D4F98)
  {
    type metadata accessor for ActorSemaphore();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4F98);
  }
  return result;
}

uint64_t type metadata accessor for ActorSemaphore()
{
  return self;
}

Swift::Void __swiftcall ActorSemaphore.signal()()
{
  uint64_t v1 = *(void *)(v0 + 112);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 112) = v3;
    swift_beginAccess();
    if (*(void *)(*(void *)(v0 + 120) + 16))
    {
      sub_25E06AF74();
      if (!v4) {
        sub_25E06AD94(*(void *)(*(void *)(v0 + 120) + 16) - 1);
      }
      swift_endAccess();
      swift_continuation_throwingResume();
    }
    else
    {
      swift_endAccess();
    }
  }
}

uint64_t ActorSemaphore.deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ActorSemaphore.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t ActorSemaphore.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25E06AD78()
{
  return ActorSemaphore.unownedExecutor.getter();
}

void sub_25E06AD94(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25E0C2A54();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_25E03B5C0((char *)(v3 + 8 * a1 + 40), v4 - 1 - a1, (char *)(v3 + 8 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    *uint64_t v1 = v3;
  }
}

uint64_t sub_25E06AE10()
{
  return sub_25E06AE70((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25E056BE8);
}

uint64_t sub_25E06AE28()
{
  return sub_25E06AE70((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25E0574BC);
}

uint64_t sub_25E06AE40()
{
  return sub_25E06AE70((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25E056AE0);
}

uint64_t sub_25E06AE58()
{
  return sub_25E06AE70((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_25E0575F0);
}

uint64_t sub_25E06AE70(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_25E06AECC(uint64_t a1)
{
  return sub_25E06AF2C(a1, (uint64_t (*)(BOOL))sub_25E056BE8);
}

uint64_t sub_25E06AEE4(uint64_t a1)
{
  return sub_25E06AF2C(a1, (uint64_t (*)(BOOL))sub_25E0574BC);
}

uint64_t sub_25E06AEFC(uint64_t a1)
{
  return sub_25E06AF2C(a1, (uint64_t (*)(BOOL))sub_25E056AE0);
}

uint64_t sub_25E06AF14(uint64_t a1)
{
  return sub_25E06AF2C(a1, (uint64_t (*)(BOOL))sub_25E0575F0);
}

uint64_t sub_25E06AF2C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

void sub_25E06AF74()
{
  uint64_t v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25E0C2A54();
    uint64_t v1 = v3;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    *(void *)(v1 + 16) = v2 - 1;
    uint64_t *v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t method lookup function for ActorSemaphore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ActorSemaphore);
}

uint64_t dispatch thunk of ActorSemaphore.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t URL.setXAttribute<A>(for:value:)(uint64_t a1, uint64_t a2)
{
  sub_25E0DABF0();
  swift_allocObject();
  sub_25E0DABE0();
  uint64_t v6 = sub_25E0DABD0();
  if (!v3)
  {
    uint64_t v8 = v6;
    unint64_t v9 = v7;
    v20[2] = v2;
    v20[3] = a1;
    void v20[4] = a2;
    v20[5] = MEMORY[0x270FA5388](v6);
    v20[6] = v10;
    switch(v10 >> 62)
    {
      case 1uLL:
        if (v8 >> 32 < (int)v8)
        {
          __break(1u);
          swift_release();
          swift_release();
          __break(1u);
          sub_25E06B99C(v8, v9);
          __break(1u);
          JUMPOUT(0x25E06B278);
        }
        swift_retain();
        unsigned int v18 = sub_25E06B8EC((int)v8, v8 >> 32, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_25E06B458);
        int v17 = v18;
        sub_25E06B99C(v8, v9);
        break;
      case 2uLL:
        uint64_t v14 = *(void *)(v8 + 16);
        uint64_t v15 = *(void *)(v8 + 24);
        swift_retain();
        swift_retain();
        unsigned int v16 = sub_25E06B8EC(v14, v15, (void *(*)(uint64_t *__return_ptr, void *, char *))sub_25E06B458);
        int v17 = v16;
        swift_release();
        swift_release();
        break;
      case 3uLL:
        uint64_t v13 = 0;
        uint64_t v12 = 0;
        uint64_t v11 = 0;
        goto LABEL_7;
      default:
        uint64_t v11 = BYTE6(v9);
        uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
        uint64_t v13 = v8;
LABEL_7:
        int v17 = sub_25E06B9F4(v13, v12, (void *(*)(unsigned int *__return_ptr, uint64_t *, char *))sub_25E06B458, (uint64_t)v20, v11);
        break;
    }
    if (v17)
    {
      sub_25E0D42C8(v17);
      swift_willThrow();
    }
    sub_25E06B99C(v8, v9);
  }
  return swift_release();
}

uint64_t sub_25E06B288@<X0>(const void *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, _DWORD *a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a3;
  uint64_t v30 = a1;
  uint64_t v24 = a6;
  uint64_t v7 = sub_25E0DB540();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_25E0DAE50();
  uint64_t v29 = v11;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v12 = sub_25E0DBD90();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  swift_bridgeObjectRelease();
  uint64_t v28 = a2;
  uint64_t v29 = v27;
  sub_25E0DB530();
  uint64_t v14 = sub_25E0DBD90();
  uint64_t v15 = v30;
  uint64_t v16 = v14;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v13)(v10, v7);
  if (v15)
  {
    size_t v18 = sub_25E0DAF10();
    if (v12) {
      uint64_t v19 = (const char *)(v12 + 32);
    }
    else {
      uint64_t v19 = 0;
    }
    if (v16) {
      uint64_t v20 = (const char *)(v16 + 32);
    }
    else {
      uint64_t v20 = 0;
    }
    int v21 = setxattr(v19, v20, v15, v18, 0, 2);
    swift_bridgeObjectRelease();
    uint64_t v22 = swift_bridgeObjectRelease();
    if (v21) {
      uint64_t result = MEMORY[0x2611CD6F0](v22);
    }
    else {
      uint64_t result = 0;
    }
    *uint64_t v24 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E06B458@<X0>(const void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_25E06B288(a1, v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t URL.xAttribute<A>(_:for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v5 = sub_25E0DB540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = sub_25E0DAE50();
  uint64_t v27 = v7;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v8 = sub_25E0DBD90();
  uint64_t v9 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v10 = OUTLINED_FUNCTION_0_8();
  v9(v10);
  swift_bridgeObjectRelease();
  uint64_t v26 = a1;
  uint64_t v27 = v28;
  sub_25E0DB3C0();
  sub_25E0DB530();
  uint64_t v11 = sub_25E0DBD90();
  uint64_t v12 = OUTLINED_FUNCTION_0_8();
  v9(v12);
  if (v8) {
    uint64_t v13 = (const char *)(v8 + 32);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v11) {
    uint64_t v14 = (const char *)(v11 + 32);
  }
  else {
    uint64_t v14 = 0;
  }
  ssize_t v15 = getxattr(v13, v14, 0, 0, 0, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 < 0)
  {
    uint64_t v19 = swift_bridgeObjectRelease();
    int v20 = MEMORY[0x2611CD6F0](v19);
    if (v20 == 93)
    {
      return __swift_storeEnumTagSinglePayload(a4, 1, 1, a3);
    }
    else
    {
      sub_25E0D42C8(v20);
      return swift_willThrow();
    }
  }
  else if (v15)
  {
    uint64_t v26 = MEMORY[0x2611CD420](v15);
    uint64_t v27 = v16;
    sub_25E0DB3C0();
    int v17 = sub_25E06BAD4(&v26, v8, a1, v28, v15);
    if (v17)
    {
      sub_25E0D42C8(v17);
      swift_willThrow();
      return sub_25E06B99C(v26, v27);
    }
    else
    {
      sub_25E0DABC0();
      swift_allocObject();
      sub_25E0DABB0();
      uint64_t v21 = v26;
      unint64_t v22 = v27;
      sub_25E06BF20(v26, v27);
      sub_25E0DABA0();
      sub_25E06B99C(v21, v22);
      sub_25E06B99C(v21, v22);
      uint64_t result = swift_release();
      if (!v25) {
        return __swift_storeEnumTagSinglePayload(a4, 0, 1, a3);
      }
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload(a4, 1, 1, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E06B76C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, size_t a5@<X5>, _DWORD *a6@<X8>)
{
  uint64_t v12 = sub_25E0DB540();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  ssize_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = a3;
  v21[1] = a4;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v16 = sub_25E0DBD90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (a1)
  {
    if (a2) {
      size_t v18 = (const char *)(a2 + 32);
    }
    else {
      size_t v18 = 0;
    }
    if (v16) {
      uint64_t v19 = (const char *)(v16 + 32);
    }
    else {
      uint64_t v19 = 0;
    }
    ssize_t v20 = getxattr(v18, v19, a1, a5, 0, 1);
    uint64_t result = swift_bridgeObjectRelease();
    if (v20 < 0)
    {
      uint64_t result = MEMORY[0x2611CD6F0](result);
      goto LABEL_12;
    }
    if (v20 == a5)
    {
      uint64_t result = 0;
LABEL_12:
      *a6 = result;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25E06B8EC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, void *, char *))
{
  uint64_t result = (void *)sub_25E0DAD20();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = (void *)sub_25E0DAD50();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    uint64_t v8 = (void *)((char *)v8 + a1 - (void)result);
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_25E0DAD40();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = (char *)v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t result = a3(&v15, v8, v14);
  if (!v3) {
    return (void *)v15;
  }
  return result;
}

uint64_t sub_25E06B99C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_25E06B9F4(uint64_t a1, uint64_t a2, void *(*a3)(unsigned int *__return_ptr, uint64_t *, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v8 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  uint64_t result = a3(&v7, &v8, (char *)&v8 + a5);
  if (!v5) {
    return (void *)v7;
  }
  return result;
}

unint64_t sub_25E06BAD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t v6 = v5;
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v13 = *a1;
  unint64_t v12 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  switch(v12 >> 62)
  {
    case 1uLL:
      uint64_t v25 = a3;
      uint64_t v15 = v12 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_25E0DE4F0;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v16 = v13 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_15;
      }
      if (v16 < (int)v13) {
        goto LABEL_19;
      }
      if (sub_25E0DAD20() && __OFSUB__((int)v13, sub_25E0DAD50())) {
        goto LABEL_20;
      }
      sub_25E0DAD60();
      swift_allocObject();
      uint64_t v23 = sub_25E0DAD00();
      swift_release();
      uint64_t v15 = v23;
LABEL_15:
      if (v16 < (int)v13)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      sub_25E0DB3C0();
      sub_25E0DB3C0();
      unint64_t v12 = sub_25E06BF78((int)v13, v13 >> 32, v15, a2, v25, a4, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *a1 = v13;
      a1[1] = v15 | 0x4000000000000000;
LABEL_17:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return v12;
    case 2uLL:
      *(void *)&long long v26 = v13;
      *((void *)&v26 + 1) = v12 & 0x3FFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_25E0DAEB0();
      uint64_t v17 = a3;
      unint64_t v12 = a5;
      uint64_t v18 = *((void *)&v26 + 1);
      uint64_t v20 = *(void *)(v26 + 16);
      uint64_t v19 = *(void *)(v26 + 24);
      sub_25E0DB3C0();
      sub_25E0DB3C0();
      uint64_t v21 = sub_25E06BF78(v20, v19, *((uint64_t *)&v26 + 1), a2, v17, a4, a5);
      if (!v6) {
        unint64_t v12 = v21;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *a1 = v26;
      a1[1] = v18 | 0x8000000000000000;
      goto LABEL_17;
    case 3uLL:
      *(void *)((char *)&v26 + 7) = 0;
      *(void *)&long long v26 = 0;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v22 = sub_25E06C06C(&v26, 0, a2, a3, a4, a5);
      if (!v5) {
        unint64_t v12 = v22;
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    default:
      *(void *)&long long v26 = v13;
      WORD4(v26) = v12;
      BYTE10(v26) = BYTE2(v12);
      BYTE11(v26) = BYTE3(v12);
      BYTE12(v26) = BYTE4(v12);
      BYTE13(v26) = BYTE5(v12);
      BYTE14(v26) = BYTE6(v12);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v12 = sub_25E06C06C(&v26, BYTE6(v12), a2, a3, a4, a5);
      swift_bridgeObjectRelease();
      unint64_t v14 = DWORD2(v26) | ((unint64_t)BYTE12(v26) << 32) | ((unint64_t)BYTE13(v26) << 40) | ((unint64_t)BYTE14(v26) << 48);
      *a1 = v26;
      a1[1] = v14;
      goto LABEL_17;
  }
}

uint64_t sub_25E06BF20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_25E06BF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, size_t a7)
{
  uint64_t result = sub_25E0DAD20();
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v14 = result;
  uint64_t result = sub_25E0DAD50();
  uint64_t v15 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFSUB__(a2, a1))
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  sub_25E0DAD40();
  sub_25E06B76C((void *)(v14 + v15), a4, a5, a6, a7, &v17);
  swift_bridgeObjectRelease();
  if (!v16) {
    a4 = v17;
  }
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_25E06C06C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v7 = a3;
  sub_25E06B76C(a1, a3, a4, a5, a6, &v9);
  swift_bridgeObjectRelease();
  if (!v6) {
    uint64_t v7 = v9;
  }
  swift_bridgeObjectRelease();
  return v7;
}

__n128 Arc4Random.init()@<Q0>(uint64_t a1@<X8>)
{
  sub_25E0DAD60();
  swift_allocObject();
  unint64_t v5 = 0x1000000000;
  unint64_t v6 = sub_25E0DAD30() | 0x4000000000000000;
  sub_25E06CD04((uint64_t *)&v5);
  Arc4Random.init(seed:)(v5, v6, (uint64_t)&v3);
  __n128 result = v4;
  *(_WORD *)a1 = v3;
  *(__n128 *)(a1 + 8) = result;
  return result;
}

double Arc4Random.init(seed:)@<D0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25E0DAD60();
  swift_allocObject();
  uint64_t v6 = 0;
  *(void *)&long long v8 = 0x10000000000;
  *((void *)&v8 + 1) = sub_25E0DAD30() | 0x4000000000000000;
  do
  {
    sub_25E0DAED0();
    ++v6;
  }
  while (v6 != 256);
  Arc4Random.addRandomness(using:)(a1, a2);
  Arc4Random.drop(count:)(3072);
  sub_25E06B99C(a1, a2);
  *(_WORD *)a3 = 0;
  double result = *(double *)&v8;
  *(_OWORD *)(a3 + 8) = v8;
  return result;
}

uint64_t Arc4Random.addRandomness(using:)(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t v55 = *MEMORY[0x263EF8340];
  unsigned __int8 v5 = *v2 - 1;
  unint64_t v42 = a2 >> 62;
  unint64_t v36 = HIDWORD(a1);
  unint64_t v45 = BYTE6(a2);
  uint64_t v39 = (int)a1;
  uint64_t v38 = (uint64_t)a1 >> 32;
  unint64_t v43 = a2 >> 62;
  int v6 = v2[1];
  BOOL v7 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v40 = v7;
  int64_t v41 = HIDWORD(a1) - (int)a1;
  unint64_t v34 = a1 >> 16;
  unint64_t v35 = a1 >> 8;
  while (2)
  {
    uint64_t v8 = v4++;
    ++v5;
    uint64_t v10 = *(void *)(v44 + 8);
    unint64_t v9 = *(void *)(v44 + 16);
    switch(v9 >> 62)
    {
      case 1uLL:
        if (v5 >= v10 >> 32 || (int)v10 > (uint64_t)v5) {
          goto LABEL_48;
        }
        uint64_t v13 = sub_25E0DAD20();
        if (!v13) {
          goto LABEL_62;
        }
        uint64_t v14 = v13;
        uint64_t v15 = sub_25E0DAD50();
        uint64_t v16 = v5 - v15;
        if (!__OFSUB__(v5, v15)) {
          goto LABEL_21;
        }
        goto LABEL_50;
      case 2uLL:
        if (*(void *)(v10 + 16) > (uint64_t)v5) {
          goto LABEL_49;
        }
        if (*(void *)(v10 + 24) <= (uint64_t)v5) {
          goto LABEL_51;
        }
        uint64_t v17 = sub_25E0DAD20();
        if (!v17) {
          goto LABEL_63;
        }
        uint64_t v14 = v17;
        uint64_t v18 = sub_25E0DAD50();
        uint64_t v16 = v5 - v18;
        if (__OFSUB__(v5, v18)) {
          goto LABEL_52;
        }
LABEL_21:
        int v11 = *(unsigned __int8 *)(v14 + v16);
        goto LABEL_22;
      case 3uLL:
        goto LABEL_61;
      default:
        if (v5 >= (unint64_t)BYTE6(v9))
        {
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
        }
        __int16 v46 = *(void *)(v44 + 8);
        char v47 = BYTE2(v10);
        char v48 = BYTE3(v10);
        char v49 = BYTE4(v10);
        char v50 = BYTE5(v10);
        char v51 = BYTE6(v10);
        char v52 = HIBYTE(v10);
        LOWORD(v53) = v9;
        BYTE2(v53) = BYTE2(v9);
        HIBYTE(v53) = BYTE3(v9);
        LOBYTE(v54) = BYTE4(v9);
        HIBYTE(v54) = BYTE5(v9);
        int v11 = *((unsigned __int8 *)&v46 + v5);
LABEL_22:
        int64_t v19 = v45;
        switch(v43)
        {
          case 1uLL:
            int64_t v19 = v41;
            if (v40) {
              goto LABEL_53;
            }
            goto LABEL_26;
          case 2uLL:
            uint64_t v21 = *(void *)(a1 + 16);
            uint64_t v20 = *(void *)(a1 + 24);
            BOOL v22 = __OFSUB__(v20, v21);
            int64_t v19 = v20 - v21;
            if (!v22) {
              goto LABEL_26;
            }
            goto LABEL_54;
          case 3uLL:
            goto LABEL_64;
          default:
LABEL_26:
            if (!v19) {
              goto LABEL_64;
            }
            uint64_t v23 = v8 % v19;
            if (v42)
            {
              if (v42 == 1)
              {
                if (v23 < v39 || v23 >= v38) {
                  goto LABEL_55;
                }
                uint64_t v25 = sub_25E0DAD20();
                if (!v25) {
                  goto LABEL_65;
                }
                uint64_t v26 = v25;
                uint64_t v27 = sub_25E0DAD50();
                uint64_t v28 = v23 - v27;
                if (__OFSUB__(v23, v27)) {
                  goto LABEL_58;
                }
              }
              else
              {
                if (v23 < *(void *)(a1 + 16)) {
                  goto LABEL_57;
                }
                if (v23 >= *(void *)(a1 + 24)) {
                  goto LABEL_59;
                }
                uint64_t v30 = sub_25E0DAD20();
                if (!v30) {
                  goto LABEL_66;
                }
                uint64_t v26 = v30;
                uint64_t v31 = sub_25E0DAD50();
                uint64_t v28 = v23 - v31;
                if (__OFSUB__(v23, v31)) {
                  goto LABEL_60;
                }
              }
              int v29 = *(unsigned __int8 *)(v26 + v28);
            }
            else
            {
              if (v23 >= v45) {
                goto LABEL_56;
              }
              LOBYTE(v46) = a1;
              HIBYTE(v46) = v35;
              char v47 = v34;
              char v48 = BYTE3(a1);
              char v49 = v36;
              char v50 = BYTE5(a1);
              char v51 = BYTE6(a1);
              char v52 = HIBYTE(a1);
              int v53 = a2;
              __int16 v54 = WORD2(a2);
              int v29 = *((unsigned __int8 *)&v46 + v23);
            }
            char v32 = v11 + v6;
            v6 += v11 + v29;
            uint64_t result = sub_25E06C934(v5, (v32 + v29));
            if (v4 != 256) {
              continue;
            }
            *(unsigned char *)uint64_t v44 = v5;
            *(unsigned char *)(v44 + 1) = v5;
            return result;
        }
    }
  }
}

Swift::Void __swiftcall Arc4Random.drop(count:)(Swift::Int count)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  if (count < 0) {
    goto LABEL_48;
  }
  Swift::Int v2 = count;
  if (!count) {
    return;
  }
  __int16 v3 = v1;
  int v4 = *v1;
  int v5 = v1[1];
  while (2)
  {
    if (!v2)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
    }
    uint64_t v6 = ++v4;
    uint64_t v8 = *((void *)v3 + 1);
    unint64_t v7 = *((void *)v3 + 2);
    switch(v7 >> 62)
    {
      case 1uLL:
        int v23 = v4;
        unint64_t v9 = v3;
        uint64_t v10 = (int)v8;
        uint64_t v11 = v8 >> 32;
        if (v11 <= v6 || v10 > v6) {
          goto LABEL_37;
        }
        uint64_t v13 = sub_25E0DAD20();
        if (!v13) {
          goto LABEL_50;
        }
        uint64_t v14 = v13;
        uint64_t v15 = sub_25E0DAD50();
        if (__OFSUB__(v6, v15)) {
          goto LABEL_40;
        }
        int v16 = *(unsigned __int8 *)(v14 + v6 - v15);
        uint64_t v17 = (v16 + v5);
        if (v10 > v17 || v11 <= v17) {
          goto LABEL_42;
        }
        if (!sub_25E0DAD20()) {
          goto LABEL_51;
        }
        if (__OFSUB__(v17, sub_25E0DAD50())) {
          goto LABEL_44;
        }
        __int16 v3 = v9;
        v5 += v16;
        int v4 = v23;
        goto LABEL_32;
      case 2uLL:
        if (*(void *)(v8 + 16) > (uint64_t)v4) {
          goto LABEL_38;
        }
        if (*(void *)(v8 + 24) <= (uint64_t)v4) {
          goto LABEL_41;
        }
        uint64_t v19 = sub_25E0DAD20();
        if (!v19) {
          goto LABEL_52;
        }
        uint64_t v20 = v19;
        uint64_t v21 = sub_25E0DAD50();
        if (__OFSUB__(v4, v21)) {
          goto LABEL_43;
        }
        int v22 = *(unsigned __int8 *)(v20 + v4 - v21);
        if (*(void *)(v8 + 16) > (uint64_t)(v22 + v5)) {
          goto LABEL_45;
        }
        if (*(void *)(v8 + 24) <= (uint64_t)(v22 + v5)) {
          goto LABEL_46;
        }
        if (!sub_25E0DAD20()) {
          goto LABEL_53;
        }
        if (__OFSUB__((v22 + v5), sub_25E0DAD50())) {
          goto LABEL_47;
        }
        v5 += v22;
LABEL_32:
        sub_25E0DAED0();
        sub_25E0DAED0();
        if (--v2) {
          continue;
        }
        v3[1] = v5;
        *__int16 v3 = v4;
        break;
      case 3uLL:
        goto LABEL_49;
      default:
        if (BYTE6(v7) <= (unint64_t)v4) {
          goto LABEL_36;
        }
        LOWORD(v24) = *((void *)v3 + 1);
        BYTE2(v24) = BYTE2(v8);
        BYTE3(v24) = BYTE3(v8);
        BYTE4(v24) = BYTE4(v8);
        BYTE5(v24) = BYTE5(v8);
        BYTE6(v24) = BYTE6(v8);
        HIBYTE(v24) = HIBYTE(v8);
        __int16 v25 = v7;
        char v26 = BYTE2(v7);
        char v27 = BYTE3(v7);
        char v28 = BYTE4(v7);
        char v29 = BYTE5(v7);
        v5 += *((unsigned __int8 *)&v24 + v4);
        if (BYTE6(v7) <= (unint64_t)v5) {
          goto LABEL_39;
        }
        uint64_t v24 = v8;
        __int16 v25 = v7;
        char v26 = BYTE2(v7);
        char v27 = BYTE3(v7);
        char v28 = BYTE4(v7);
        char v29 = BYTE5(v7);
        goto LABEL_32;
    }
    break;
  }
}

uint64_t sub_25E06C934(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return result;
  }
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  uint64_t v6 = result;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)v4;
      uint64_t v8 = v4 >> 32;
      if (v8 <= result || v7 > result) {
        goto LABEL_34;
      }
      if (sub_25E0DAD20())
      {
        if (__OFSUB__(v6, sub_25E0DAD50()))
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if (v8 <= a2 || v7 > a2) {
          goto LABEL_39;
        }
        uint64_t v11 = sub_25E0DAD20();
        if (v11)
        {
          uint64_t v4 = v11;
          if (!__OFSUB__(a2, sub_25E0DAD50())) {
            goto LABEL_30;
          }
          __break(1u);
LABEL_22:
          if (*(void *)(v4 + 16) <= v6)
          {
            if (*(void *)(v4 + 24) > v6)
            {
              if (sub_25E0DAD20())
              {
                if (__OFSUB__(v6, sub_25E0DAD50()))
                {
LABEL_40:
                  __break(1u);
                  goto LABEL_41;
                }
                if (*(void *)(v4 + 16) > a2)
                {
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
                if (*(void *)(v4 + 24) <= a2)
                {
LABEL_42:
                  __break(1u);
LABEL_43:
                  __break(1u);
                }
                if (sub_25E0DAD20())
                {
                  if (__OFSUB__(a2, sub_25E0DAD50())) {
                    goto LABEL_43;
                  }
                  goto LABEL_30;
                }
LABEL_48:
                __break(1u);
                JUMPOUT(0x25E06CBFCLL);
              }
LABEL_47:
              __break(1u);
              goto LABEL_48;
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          goto LABEL_35;
        }
      }
      else
      {
LABEL_45:
        __break(1u);
      }
      __break(1u);
      goto LABEL_47;
    case 2uLL:
      goto LABEL_22;
    case 3uLL:
      __break(1u);
      goto LABEL_45;
    default:
      if (BYTE6(v3) <= result)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      if (BYTE6(v3) <= a2)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_30:
      sub_25E0DAED0();
      return sub_25E0DAED0();
  }
}

Swift::UInt64 __swiftcall Arc4Random.next()()
{
  uint64_t v1 = 0;
  Swift::UInt64 v7 = 0;
  unsigned __int8 v2 = *v0;
  int v3 = v0[1];
  do
  {
    v3 += OUTLINED_FUNCTION_0_9(++v2);
    OUTLINED_FUNCTION_0_9(v3);
    sub_25E0DAED0();
    sub_25E0DAED0();
    char v4 = OUTLINED_FUNCTION_0_9(v2);
    char v5 = OUTLINED_FUNCTION_0_9(v3);
    *((unsigned char *)&v7 + v1++) = OUTLINED_FUNCTION_0_9((v5 + v4));
  }
  while (v1 != 8);
  v0[1] = v3;
  unsigned __int8 *v0 = v2;
  return v7;
}

double sub_25E06CCF4@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Arc4Random.init(seed:)(*a1, a1[1], a2);
}

uint64_t sub_25E06CD04(uint64_t *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v6 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_25E0DE4F0;
      uint64_t v7 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_11;
      }
      if (v7 < (int)v2) {
        goto LABEL_16;
      }
      if (sub_25E0DAD20() && __OFSUB__((int)v2, sub_25E0DAD50())) {
        goto LABEL_17;
      }
      sub_25E0DAD60();
      swift_allocObject();
      uint64_t v9 = sub_25E0DAD00();
      swift_release();
      uint64_t v6 = v9;
LABEL_11:
      if (v7 < (int)v2)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      uint64_t result = sub_25E06CFA8((int)v2);
      unint64_t v8 = v6 | 0x4000000000000000;
      *a1 = v2;
LABEL_13:
      a1[1] = v8;
      return result;
    case 2uLL:
      *(void *)&long long bytes = *a1;
      *((void *)&bytes + 1) = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_25E0DAEB0();
      uint64_t result = sub_25E06CFA8(*(void *)(bytes + 16));
      unint64_t v8 = *((void *)&bytes + 1) | 0x8000000000000000;
      *a1 = bytes;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&bytes + 7) = 0;
      *(void *)&long long bytes = 0;
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 0x10uLL, &bytes);
    default:
      LOWORD(bytes) = *a1;
      BYTE2(bytes) = BYTE2(v2);
      BYTE3(bytes) = BYTE3(v2);
      BYTE4(bytes) = BYTE4(v2);
      BYTE5(bytes) = BYTE5(v2);
      BYTE6(bytes) = BYTE6(v2);
      BYTE7(bytes) = HIBYTE(v2);
      WORD4(bytes) = v1;
      BYTE10(bytes) = BYTE2(v1);
      BYTE11(bytes) = BYTE3(v1);
      BYTE12(bytes) = BYTE4(v1);
      BYTE13(bytes) = BYTE5(v1);
      BYTE14(bytes) = BYTE6(v1);
      uint64_t result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 0x10uLL, &bytes);
      unint64_t v5 = DWORD2(bytes) | ((unint64_t)BYTE12(bytes) << 32) | ((unint64_t)BYTE13(bytes) << 40) | ((unint64_t)BYTE14(bytes) << 48);
      *a1 = bytes;
      a1[1] = v5;
      return result;
  }
}

uint64_t sub_25E06CFA8(uint64_t a1)
{
  uint64_t result = sub_25E0DAD20();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t result = sub_25E0DAD50();
    if (!__OFSUB__(a1, result))
    {
      char v4 = (void *)(v3 + a1 - result);
      sub_25E0DAD40();
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 0x10uLL, v4);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_25E06D01C(uint64_t a1)
{
  unint64_t result = sub_25E06D044();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E06D044()
{
  unint64_t result = qword_26A6D4FA0;
  if (!qword_26A6D4FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4FA0);
  }
  return result;
}

uint64_t dispatch thunk of RandomNumberSeedable.init(seed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for Arc4Random(uint64_t a1)
{
  return sub_25E06B99C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s15SonicFoundation10Arc4RandomVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_25E06BF20(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for Arc4Random(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_25E06BF20(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_25E06B99C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Arc4Random(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_25E06B99C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Arc4Random(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for Arc4Random(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Arc4Random()
{
  return &type metadata for Arc4Random;
}

uint64_t AsyncSequence.collect()(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E06D26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v12 = v10[4];
  uint64_t v11 = v10[5];
  swift_getAssociatedTypeWitness();
  v10[3] = sub_25E0DB360();
  uint64_t v13 = swift_task_alloc();
  v10[7] = v13;
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  uint64_t v14 = (void *)swift_task_alloc();
  v10[8] = v14;
  sub_25E0DB940();
  *uint64_t v14 = v10;
  v14[1] = sub_25E06D388;
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA20A8](v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t sub_25E06D388()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E06D46C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_25E06D488()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E06D4E4(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_5_7();
  uint64_t v35 = v11;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_34_1();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_48_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v32 = v15;
  uint64_t v33 = v14;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_20_3(v16, v27);
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_25E0DBBB0();
  if (!v18) {
    return sub_25E0DB8C0();
  }
  uint64_t v19 = v18;
  uint64_t v38 = sub_25E0DB360();
  sub_25E0DC010();
  sub_25E0DBFA0();
  uint64_t result = sub_25E0DBB90();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    while (1)
    {
      uint64_t v21 = (void (*)(unsigned char *, void))sub_25E0DBC30();
      OUTLINED_FUNCTION_55_0();
      v22();
      v21(v37, 0);
      a1(v8, v35);
      if (v36) {
        break;
      }
      uint64_t v36 = 0;
      OUTLINED_FUNCTION_14_4();
      v23();
      sub_25E0DBFF0();
      sub_25E0DBBF0();
      if (!--v19)
      {
        OUTLINED_FUNCTION_13_5();
        v24();
        sub_25E0DBE30();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v28, v33);
        return v38;
      }
    }
    OUTLINED_FUNCTION_14_4();
    v25();
    OUTLINED_FUNCTION_14_4();
    v26();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(a8, v35, a5);
  }
  return result;
}

void RandomAccessCollection<>.chunkRanges(by:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v90 = v5;
  uint64_t v7 = *(void *)(*(void *)(v6 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_48_1();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_54();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_20_3(v10, v66[0]);
  MEMORY[0x270FA5388](v11);
  uint64_t v73 = (char *)v66 - v12;
  OUTLINED_FUNCTION_48_1();
  uint64_t v76 = v13;
  uint64_t v14 = sub_25E0DBC50();
  OUTLINED_FUNCTION_0_3();
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_42();
  uint64_t v72 = v17;
  MEMORY[0x270FA5388](v18);
  int v71 = (char *)v66 - v19;
  OUTLINED_FUNCTION_48_1();
  uint64_t v20 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v20);
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_35_1();
  uint64_t v89 = v22;
  OUTLINED_FUNCTION_0_3();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_42();
  uint64_t v75 = v26;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v74 = (char *)v66 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)v66 - v31;
  MEMORY[0x270FA5388](v30);
  int v77 = (char *)v66 - v33;
  OUTLINED_FUNCTION_41_0();
  uint64_t v87 = (void (*)(void))sub_25E0DBF60();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_35_1();
  uint64_t v86 = v35;
  OUTLINED_FUNCTION_41_0();
  uint64_t v83 = sub_25E0DC200();
  OUTLINED_FUNCTION_0_3();
  v66[2] = v36;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_35_1();
  uint64_t v82 = v38;
  uint64_t v85 = v2;
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v40 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v40);
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v41);
  unint64_t v43 = (char *)v66 - v42;
  OUTLINED_FUNCTION_0_3();
  v66[3] = v44;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_35_1();
  uint64_t v84 = v46;
  uint64_t v78 = v14;
  uint64_t v92 = sub_25E0DB360();
  uint64_t v80 = v4;
  uint64_t v81 = v0;
  char v47 = v90;
  uint64_t v79 = v7;
  uint64_t v48 = sub_25E0DBBB0();
  if (!v47)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v49 = v48 == 0x8000000000000000 && (void (**)(void))((char *)v47 + 1) == 0;
  if (v49) {
    goto LABEL_15;
  }
  uint64_t v70 = sub_25E0DB940();
  sub_25E0DB890();
  v91 = v47;
  swift_getAssociatedConformanceWitness();
  sub_25E07036C();
  sub_25E0DBB80();
  OUTLINED_FUNCTION_9_8((uint64_t)v43, 1, v39);
  if (!v49)
  {
    v66[1] = v39;
    OUTLINED_FUNCTION_13_5();
    v50();
    char v51 = v77;
    sub_25E0DBB90();
    sub_25E0DBBE0();
    sub_25E0DC550();
    uint64_t v52 = AssociatedTypeWitness;
    int v53 = v24[1];
    OUTLINED_FUNCTION_36_2();
    v53();
    __int16 v54 = v53;
    OUTLINED_FUNCTION_36_2();
    v53();
    sub_25E0DBF50();
    uint64_t v55 = v89;
    sub_25E0DC1F0();
    OUTLINED_FUNCTION_9_8(v55, 1, v52);
    if (v49)
    {
LABEL_12:
      OUTLINED_FUNCTION_14_4();
      v64();
      OUTLINED_FUNCTION_14_4();
      v65();
      OUTLINED_FUNCTION_1_8();
      return;
    }
    uint64_t v87 = v24[4];
    uint64_t v68 = v24 + 2;
    v67 += 4;
    uint64_t v69 = v32;
    uint64_t v90 = v24 + 1;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v87)(v51, v89, v52);
      uint64_t v56 = v74;
      sub_25E0DBD60();
      uint64_t v57 = v75;
      sub_25E0DBBE0();
      sub_25E0DC410();
      ((void (*)(uint64_t, uint64_t))v54)(v57, v52);
      ((void (*)(char *, uint64_t))v54)(v56, v52);
      if ((sub_25E0DB4A0() & 1) == 0) {
        break;
      }
      uint64_t v58 = &v73[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v59 = *v68;
      OUTLINED_FUNCTION_37_1();
      v59();
      uint64_t v86 = v58;
      uint64_t v60 = v87;
      ((void (*)(char *, char *, uint64_t))v87)(v58, v32, v52);
      OUTLINED_FUNCTION_37_1();
      v59();
      OUTLINED_FUNCTION_37_1();
      v59();
      uint64_t v61 = v72;
      OUTLINED_FUNCTION_23_4();
      v60();
      OUTLINED_FUNCTION_17_4();
      v54();
      OUTLINED_FUNCTION_23_4();
      v60();
      OUTLINED_FUNCTION_23_4();
      v60();
      uint64_t v62 = v78;
      uint64_t v63 = v89;
      OUTLINED_FUNCTION_23_4();
      v60();
      uint64_t v32 = v69;
      OUTLINED_FUNCTION_36_2();
      v54();
      (*v67)(v71, v61, v62);
      sub_25E0DB900();
      char v51 = v77;
      OUTLINED_FUNCTION_36_2();
      v54();
      sub_25E0DC1F0();
      OUTLINED_FUNCTION_9_8(v63, 1, v52);
      if (v49) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

void Sequence.chunked(by:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v32 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v28 - v10;
  OUTLINED_FUNCTION_0_3();
  v28[3] = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_5_7();
  void v28[2] = v14;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v17);
  sub_25E0DB940();
  uint64_t v36 = sub_25E0DB360();
  uint64_t v29 = v0;
  uint64_t v30 = v2;
  uint64_t v18 = sub_25E0DB730();
  if (!v4)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  BOOL v19 = v18 == 0x8000000000000000 && v4 == -1;
  if (v19) {
    goto LABEL_17;
  }
  v28[1] = v16;
  uint64_t v31 = sub_25E0DB940();
  sub_25E0DB890();
  uint64_t v35 = sub_25E0DB360();
  uint64_t v20 = v4;
  sub_25E0DB890();
  OUTLINED_FUNCTION_55_0();
  v21();
  sub_25E0DB720();
  swift_getAssociatedConformanceWitness();
  sub_25E0DBD40();
  OUTLINED_FUNCTION_9_8((uint64_t)v11, 1, AssociatedTypeWitness);
  if (!v19)
  {
    uint64_t v22 = *(void (**)(void))(v32 + 32);
    v32 += 32;
    do
    {
      OUTLINED_FUNCTION_13_5();
      v22();
      sub_25E0DB900();
      uint64_t v23 = v35;
      uint64_t v24 = sub_25E0DB3C0();
      uint64_t v25 = MEMORY[0x2611CDE10](v24, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      if (v25 == v20)
      {
        uint64_t v34 = v23;
        sub_25E0DB3C0();
        sub_25E0DB900();
        sub_25E0DB930();
      }
      sub_25E0DBD40();
      OUTLINED_FUNCTION_9_8((uint64_t)v11, 1, AssociatedTypeWitness);
    }
    while (!v19);
  }
  OUTLINED_FUNCTION_14_4();
  v26();
  uint64_t v27 = v35;
  uint64_t v34 = v35;
  swift_getWitnessTable();
  if (sub_25E0DBC20())
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = v27;
    sub_25E0DB900();
  }
  OUTLINED_FUNCTION_1_8();
}

void Sequence.async.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = v9 - v8;
  swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v0, v4);
  sub_25E0DB720();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v4;
  v12[3] = v2;
  v12[4] = v11;
  swift_getAssociatedTypeWitness();
  sub_25E0DBA90();
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_25E06E54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[5] = a1;
  v4[8] = swift_getAssociatedTypeWitness();
  v4[9] = swift_projectBox();
  return MEMORY[0x270FA2498](sub_25E06E5E8, 0, 0);
}

uint64_t sub_25E06E5E8()
{
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_25E0DBD40();
  swift_endAccess();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t Sequence.asyncMap<A>(_:)()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_47_0(v1, v2, v3, v4, v5);
  v0[9] = OUTLINED_FUNCTION_71();
  v0[10] = OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_0_3();
  v0[11] = v6;
  v0[12] = OUTLINED_FUNCTION_71();
  uint64_t v7 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v7);
  v0[13] = OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_0_3();
  v0[14] = v8;
  v0[15] = OUTLINED_FUNCTION_71();
  uint64_t v9 = OUTLINED_FUNCTION_8_9();
  v0[16] = v9;
  OUTLINED_FUNCTION_7(v9);
  v0[17] = v10;
  v0[18] = OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E06E7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v12 = sub_25E0DB8C0();
  uint64_t v13 = OUTLINED_FUNCTION_15_5(v12);
  v14(v13);
  OUTLINED_FUNCTION_46_0();
  uint64_t v15 = *(int **)(v10 + 144);
  uint64_t v16 = *(void *)(v11 + 88);
  OUTLINED_FUNCTION_50_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_5_8(v16);
  if (v17)
  {
    uint64_t v18 = OUTLINED_FUNCTION_12_7();
    v19(v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_7_0();
  }
  else
  {
    OUTLINED_FUNCTION_10_5();
    v20();
    a9 = (char *)v15 + *v15;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v10 + 152) = v21;
    *uint64_t v21 = v10;
    v21[1] = sub_25E06E9A4;
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_7_0();
  }
  return v24(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

uint64_t sub_25E06E9A4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E06EA88()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  sub_25E0DB940();
  sub_25E0DB900();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (int *)v0[18];
  uint64_t v5 = v0[13];
  OUTLINED_FUNCTION_50_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_5_8(v5);
  if (v6)
  {
    uint64_t v7 = OUTLINED_FUNCTION_12_7();
    v8(v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = OUTLINED_FUNCTION_52_0();
  }
  else
  {
    OUTLINED_FUNCTION_10_5();
    v10();
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[19] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25E06E9A4;
    uint64_t v12 = OUTLINED_FUNCTION_51_0();
    uint64_t v9 = v14;
  }
  return v9(v12);
}

uint64_t sub_25E06EC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v12 = v10[17];
  uint64_t v11 = v10[18];
  uint64_t v13 = v10[16];
  OUTLINED_FUNCTION_17_4();
  v14();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_7_0();
  return v16(v15, v16, v17, v18, v19, v20, v21, v22, a9, a10);
}

uint64_t Sequence.asyncCompactMap<A>(_:)()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_47_0(v3, v4, v5, v1, v6);
  uint64_t v7 = sub_25E0DBCF0();
  v0[9] = v7;
  OUTLINED_FUNCTION_7(v7);
  v0[10] = v8;
  v0[11] = OUTLINED_FUNCTION_71();
  v0[12] = *(void *)(v2 - 8);
  v0[13] = swift_task_alloc();
  v0[14] = swift_task_alloc();
  v0[15] = OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_0_3();
  v0[16] = v9;
  v0[17] = OUTLINED_FUNCTION_71();
  uint64_t v10 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v10);
  v0[18] = OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_0_3();
  v0[19] = v11;
  v0[20] = OUTLINED_FUNCTION_71();
  uint64_t v12 = OUTLINED_FUNCTION_8_9();
  v0[21] = v12;
  OUTLINED_FUNCTION_7(v12);
  v0[22] = v13;
  v0[23] = OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v14, v15, v16);
}

uint64_t sub_25E06EEEC()
{
  uint64_t v2 = sub_25E0DB8C0();
  uint64_t v3 = OUTLINED_FUNCTION_15_5(v2);
  v4(v3);
  OUTLINED_FUNCTION_46_0();
  uint64_t v5 = *(int **)(v0 + 184);
  uint64_t v6 = *(void *)(v1 + 128);
  OUTLINED_FUNCTION_50_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_5_8(v6);
  if (v7)
  {
    uint64_t v8 = OUTLINED_FUNCTION_12_7();
    v9(v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = OUTLINED_FUNCTION_53_0();
  }
  else
  {
    OUTLINED_FUNCTION_10_5();
    v11();
    uint64_t v15 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_25E06F0D8;
    uint64_t v13 = OUTLINED_FUNCTION_49_0();
    uint64_t v10 = v15;
  }
  return v10(v13);
}

uint64_t sub_25E06F0D8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void sub_25E06F1BC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[6];
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[9];
    uint64_t v3 = v0[10];
    uint64_t v5 = OUTLINED_FUNCTION_45_1();
    v6(v5);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  }
  else
  {
    uint64_t v8 = v0[13];
    uint64_t v7 = v0[14];
    uint64_t v9 = v0[12];
    OUTLINED_FUNCTION_13_5();
    v10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v2);
    sub_25E0DB940();
    sub_25E0DB900();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v2);
    uint64_t v11 = OUTLINED_FUNCTION_45_1();
    v12(v11);
  }
  uint64_t v13 = v0[18];
  OUTLINED_FUNCTION_50_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_24_4();
  OUTLINED_FUNCTION_5_8(v13);
  if (!v14)
  {
    OUTLINED_FUNCTION_10_5();
    v19();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[24] = v20;
    void *v20 = v0;
    v20[1] = sub_25E06F0D8;
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_29();
    __asm { BRAA            X2, X16 }
  }
  uint64_t v15 = OUTLINED_FUNCTION_12_7();
  v16(v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_29();
  __asm { BRAA            X2, X16 }
}

void sub_25E06F448()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[21];
  OUTLINED_FUNCTION_17_4();
  v4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_29();
  __asm { BRAA            X1, X16 }
}

uint64_t Collection.nonEmpty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_25E0DBBD0())
  {
    uint64_t v4 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_55_0();
    v5();
    uint64_t v4 = 0;
  }

  return __swift_storeEnumTagSinglePayload(a2, v4, 1, a1);
}

void Collection<>.transposed()()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v29 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_35_1();
  void v28[2] = v10;
  uint64_t v11 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v28 - v15;
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_34_1();
  uint64_t v30 = v0;
  sub_25E0DBC10();
  OUTLINED_FUNCTION_9_8((uint64_t)v16, 1, AssociatedTypeWitness);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    swift_getAssociatedTypeWitness();
    sub_25E0DB940();
    sub_25E0DB8C0();
  }
  else
  {
    OUTLINED_FUNCTION_13_5();
    v19();
    uint64_t v20 = sub_25E0DBBC0();
    v28[1] = v28;
    MEMORY[0x270FA5388](v20);
    v28[-4] = v4;
    v28[-3] = v2;
    uint64_t v21 = v30;
    v28[-2] = v29;
    v28[-1] = v21;
    swift_getAssociatedTypeWitness();
    uint64_t v22 = sub_25E0DB940();
    uint64_t v23 = v32;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_25E06D4E4((void (*)(uint64_t, uint64_t))sub_25E0707EC, (uint64_t)&v28[-6], v23, v22, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v25);
    OUTLINED_FUNCTION_14_4();
    v26();
    OUTLINED_FUNCTION_36_2();
    v27();
  }
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_25E06F8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  void v11[5] = a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = sub_25E06D4E4((void (*)(uint64_t, uint64_t))sub_25E070810, (uint64_t)v11, a2, AssociatedTypeWitness, MEMORY[0x263F8E628], a3, MEMORY[0x263F8E658], v9);
  *a5 = result;
  return result;
}

uint64_t sub_25E06F9A8@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = (uint64_t (*)(uint64_t *, void))sub_25E0DBC30();
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, v4, AssociatedTypeWitness);
  return v2(&v7, 0);
}

uint64_t Array.mutateEach(by:)()
{
  OUTLINED_FUNCTION_12();
  v1[7] = v2;
  v1[8] = v0;
  v1[5] = v3;
  v1[6] = v4;
  v1[9] = *(void *)(v2 + 16);
  OUTLINED_FUNCTION_0_3();
  v1[10] = v5;
  v1[11] = *(void *)(v6 + 64);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E06FB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v13 = (uint64_t *)v10[8];
  uint64_t v14 = (void *)v10[9];
  void v10[2] = sub_25E0DB8C0();
  uint64_t v15 = *v13;
  v10[15] = v15;
  MEMORY[0x2611CDE10](v15, v14);
  sub_25E0DB890();
  sub_25E0DB3C0();
  uint64_t v16 = sub_25E0DB840();
  v10[3] = v16;
  if (v16 == MEMORY[0x2611CDE30](v15, v14))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_1();
    *uint64_t v14 = v10[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_7_0();
    return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
  }
  sub_25E0DB8E0();
  OUTLINED_FUNCTION_78();
  if (v11)
  {
    (*(void (**)(void, unint64_t, void))(v10[10] + 16))(v10[14], v10[15]+ ((*(unsigned __int8 *)(v10[10] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10[10] + 80))+ *(void *)(v10[10] + 72) * v16, v10[9]);
    goto LABEL_7;
  }
  uint64_t v29 = v10[11];
  uint64_t result = sub_25E0DBF00();
  if (v29 == 8)
  {
    uint64_t v30 = OUTLINED_FUNCTION_16_4(result);
    MEMORY[8](v30);
    swift_unknownObjectRelease();
LABEL_7:
    OUTLINED_FUNCTION_30_2();
    MEMORY[0x2611CDE40](v10 + 3, v16, v11);
    swift_bridgeObjectRelease();
    uint64_t v26 = OUTLINED_FUNCTION_29_2();
    v27(v26);
    a9 = (char *)v12 + *v12;
    uint64_t v28 = (void *)swift_task_alloc();
    v10[17] = v28;
    void *v28 = v10;
    v28[1] = sub_25E06FD9C;
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_7_0();
    return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E06FD9C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E06FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10)
{
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_25_1();
  uint64_t v11 = v10[15];
  uint64_t v13 = (void *)v10[12];
  uint64_t v12 = v10[13];
  uint64_t v14 = v10[9];
  uint64_t v15 = v10[10];
  uint64_t v16 = (int *)v10[7];
  OUTLINED_FUNCTION_55_0();
  v17();
  sub_25E0DB900();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  uint64_t v18 = v10[3];
  if (v18 == MEMORY[0x2611CDE30](v11, v14))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_44_1();
    *uint64_t v13 = v10[2];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_7_0();
    return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
  }
  sub_25E0DB8E0();
  OUTLINED_FUNCTION_78();
  if (v14)
  {
    (*(void (**)(void, unint64_t, void))(v10[10] + 16))(v10[14], v10[15]+ ((*(unsigned __int8 *)(v10[10] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10[10] + 80))+ *(void *)(v10[10] + 72) * v18, v10[9]);
    goto LABEL_7;
  }
  uint64_t v31 = v10[11];
  uint64_t result = sub_25E0DBF00();
  if (v31 == 8)
  {
    uint64_t v32 = OUTLINED_FUNCTION_16_4(result);
    MEMORY[8](v32);
    swift_unknownObjectRelease();
LABEL_7:
    OUTLINED_FUNCTION_30_2();
    MEMORY[0x2611CDE40](v10 + 3, v18, v14);
    swift_bridgeObjectRelease();
    uint64_t v28 = OUTLINED_FUNCTION_29_2();
    v29(v28);
    a9 = (char *)v16 + *v16;
    uint64_t v30 = (void *)swift_task_alloc();
    v10[17] = v30;
    void *v30 = v10;
    v30[1] = sub_25E06FD9C;
    OUTLINED_FUNCTION_39_1();
    OUTLINED_FUNCTION_7_0();
    return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0700BC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_17_4();
  v0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E07014C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[4] = AssociatedTypeWitness;
  v2[5] = *(void *)(AssociatedTypeWitness - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E070224, 0, 0);
}

uint64_t sub_25E070224()
{
  OUTLINED_FUNCTION_17();
  (*(void (**)(void, void, void))(v0[5] + 16))(v0[6], v0[3], v0[4]);
  sub_25E0DB940();
  sub_25E0DB900();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E0702C0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E051320;
  return sub_25E07014C(v4, v2);
}

unint64_t sub_25E07036C()
{
  unint64_t result = qword_26A6D4FC0;
  if (!qword_26A6D4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A6D4FC0);
  }
  return result;
}

uint64_t sub_25E0703B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25E0703F0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_25E051320;
  return sub_25E06E54C(v3, v6, v4, v5);
}

void Dictionary.subscript.getter()
{
  OUTLINED_FUNCTION_2();
  uint64_t v47 = v1;
  uint64_t v48 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v50 = v7;
  uint64_t v51 = v8;
  uint64_t v45 = v9;
  uint64_t v46 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v43 = v10;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v42 - v12;
  OUTLINED_FUNCTION_0_3();
  uint64_t v42 = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_5_3();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_23_3(v19);
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_0_3();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_5_3();
  uint64_t v26 = v25 - v24;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v44 = v28;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v42 - v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v50, v4);
  sub_25E0DB720();
  swift_getAssociatedConformanceWitness();
  BOOL v49 = v31;
  uint64_t v50 = AssociatedTypeWitness;
  sub_25E0DBD40();
  OUTLINED_FUNCTION_5_8(v0);
  if (v32)
  {
LABEL_7:
    OUTLINED_FUNCTION_14_4();
    v37();
    uint64_t v41 = 1;
    uint64_t v40 = v45;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
    uint64_t v34 = (void (**)(uint64_t, uint64_t))(v42 + 8);
    uint64_t v35 = (void (**)(char *, uint64_t))(v43 + 8);
    while (1)
    {
      v33(v18, v0, v6);
      uint64_t v36 = v51;
      MEMORY[0x2611CD930](v18, v47, v6, v51, v48);
      (*v34)(v18, v6);
      OUTLINED_FUNCTION_9_8((uint64_t)v13, 1, v36);
      if (!v32) {
        break;
      }
      (*v35)(v13, v46);
      sub_25E0DBD40();
      OUTLINED_FUNCTION_5_8(v0);
      if (v32) {
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_14_4();
    v38();
    OUTLINED_FUNCTION_54();
    uint64_t v40 = v45;
    (*(void (**)(uint64_t, char *))(v39 + 32))(v45, v13);
    uint64_t v41 = 0;
  }
  __swift_storeEnumTagSinglePayload(v40, v41, 1, v51);
  OUTLINED_FUNCTION_1_8();
}

uint64_t sub_25E0707EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E06F8C4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_25E070810@<X0>(uint64_t a1@<X8>)
{
  return sub_25E06F9A8(a1);
}

uint64_t OUTLINED_FUNCTION_12_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_5(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  return v1;
}

void OUTLINED_FUNCTION_20_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return sub_25E0DBD40();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  *(void *)(v1 + 128) = v0;
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return *(void *)(v0 + 104);
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return sub_25E0DB720();
}

uint64_t OUTLINED_FUNCTION_47_0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = result;
  v6[4] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return *(void *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return *(void *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return *(void *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return v0;
}

uint64_t sub_25E070A3C()
{
  OUTLINED_FUNCTION_43_0();
  if (*(void *)(v2 + 24))
  {
    sub_25E040108((_OWORD *)v2, v10);
    sub_25E0ABE20(v10, v1, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25E07305C(v2);
    sub_25E0ABA24(v1, v0, v4, v5, v6, v7, v8, v9, *(uint64_t *)&v10[0], *((uint64_t *)&v10[0] + 1));
    swift_bridgeObjectRelease();
    return sub_25E07305C((uint64_t)v10);
  }
}

uint64_t sub_25E070ABC()
{
  OUTLINED_FUNCTION_43_0();
  if (*(unsigned char *)(v2 + 8))
  {
    sub_25E074840(v2);
    sub_25E0ABB3C((uint64_t)v4);
    swift_bridgeObjectRelease();
    return sub_25E074840((uint64_t)v4);
  }
  else
  {
    sub_25E074998(v2, (uint64_t)v4);
    sub_25E0ABE6C(v4, v1, v0);
    return swift_bridgeObjectRelease();
  }
}

uint64_t wrappingErrors<A, B>(in:_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_1_5();
  uint64_t v10 = v9;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t result = v16(v13);
  if (v6)
  {
    a1(result);
    sub_25E0748CC(0, &qword_26A6D4950, (uint64_t (*)(uint64_t))sub_25E04986C, MEMORY[0x263F8E0F8]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_25E0DD9C0;
    *(void *)(v18 + 32) = v6;
    OUTLINED_FUNCTION_15_0();
    v19();
    type metadata accessor for _WrappingError();
    swift_getWitnessTable();
    swift_allocError();
    OUTLINED_FUNCTION_33_1();
    _WrappingError.init(error:underlyingErrors:)(v20, v21, v22, v23);
    id v24 = v6;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, a6);
    swift_willThrow();
    return MEMORY[0x2611CF510](v6);
  }
  return result;
}

uint64_t Error.withUnderlyingErrors(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_17_3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v2, a2);
  type metadata accessor for _WrappingError();
  swift_getWitnessTable();
  uint64_t v8 = OUTLINED_FUNCTION_25_2();
  _WrappingError.init(error:underlyingErrors:)(v3, a1, a2, v9);
  sub_25E0DB3C0();
  return v8;
}

uint64_t wrappingErrors<A, B>(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = a7;
  v8[5] = a8;
  v8[2] = a2;
  v8[3] = a3;
  v8[6] = *(void *)(a7 - 8);
  v8[7] = swift_task_alloc();
  v8[8] = swift_task_alloc();
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[9] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_25E070F64;
  return v13(a1);
}

uint64_t sub_25E070F64()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_25E0710AC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_25E0710AC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  sub_25E0748CC(0, &qword_26A6D4950, (uint64_t (*)(uint64_t))sub_25E04986C, MEMORY[0x263F8E0F8]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E0DD9C0;
  *(void *)(v6 + 32) = v1;
  OUTLINED_FUNCTION_15_0();
  v7();
  type metadata accessor for _WrappingError();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_25_2();
  _WrappingError.init(error:underlyingErrors:)(v2, v6, v5, v8);
  id v9 = v1;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_willThrow();
  MEMORY[0x2611CF510](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t _WrappingError.init(error:underlyingErrors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  OUTLINED_FUNCTION_33_1();
  uint64_t result = type metadata accessor for _WrappingError();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for _WrappingError()
{
  return __swift_instantiateGenericMetadata();
}

Swift::Bool __swiftcall Error.contains(domain:)(Swift::String domain)
{
  Error.unwrap(firstDomain:)();
  if (v1) {
    MEMORY[0x2611CF510](v1);
  }
  return OUTLINED_FUNCTION_42_1();
}

void Error.unwrap(firstDomain:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_0_3();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_23_5();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v32 - v11;
  if (sub_25E0DC470() == v6 && v13 == v4)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    OUTLINED_FUNCTION_15_0();
    v19();
    OUTLINED_FUNCTION_35_2();
    if (sub_25E0DC340())
    {
      uint64_t v20 = OUTLINED_FUNCTION_35_2();
      v21(v20);
    }
    else
    {
      OUTLINED_FUNCTION_25_2();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22, v12, v2);
    }
    goto LABEL_18;
  }
  char v15 = sub_25E0DC380();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_15_0();
  v16();
  uint64_t v17 = OUTLINED_FUNCTION_27_4();
  if (v17)
  {
    uint64_t v18 = v17;
    (*(void (**)(void *, uint64_t))(v8 + 8))(v0, v2);
  }
  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 32))(v23, v0, v2);
  }
  id v24 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v18);
  id v25 = objc_msgSend(v24, sel_underlyingErrors);
  sub_25E04986C();
  uint64_t v26 = sub_25E0DB830();

  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      OUTLINED_FUNCTION_26_4();
      id v29 = v0;
      uint64_t v30 = OUTLINED_FUNCTION_39_2();
      uint64_t v31 = Error.unwrap(firstDomain:)(v30);
      MEMORY[0x2611CF510](v0);
      if (v31) {
        break;
      }
    }
  }

  swift_bridgeObjectRelease();
LABEL_18:
  OUTLINED_FUNCTION_1_8();
}

Swift::Bool __swiftcall Error.contains(domain:code:)(Swift::String domain, Swift::Int code)
{
  Error.unwrap(firstDomain:code:)();
  if (v2) {
    MEMORY[0x2611CF510](v2);
  }
  return OUTLINED_FUNCTION_42_1();
}

void Error.unwrap(firstDomain:code:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_43_0();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_0_3();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_42();
  uint64_t v53 = v11;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v52 = (char *)&v51 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v54 = *(void *)(v9 + 16);
  uint64_t v55 = v17;
  OUTLINED_FUNCTION_20_4();
  v18();
  OUTLINED_FUNCTION_37_2();
  uint64_t v19 = sub_25E0DC340();
  id v56 = v3;
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = OUTLINED_FUNCTION_37_2();
    v22(v21);
  }
  else
  {
    uint64_t v20 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23, v16, v5);
  }
  id v24 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v20);
  id v25 = objc_msgSend(v24, sel_domain);
  uint64_t v26 = sub_25E0DB500();
  uint64_t v28 = v27;

  if (v26 == v7 && v28 == v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = sub_25E0DC380();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {

      goto LABEL_14;
    }
  }
  id v31 = objc_msgSend(v24, sel_code);

  if (v31 == v0)
  {
    uint64_t v32 = v52;
    OUTLINED_FUNCTION_20_4();
    v33();
    if (sub_25E0DC340())
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v32, v5);
    }
    else
    {
      OUTLINED_FUNCTION_25_2();
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v50, v32, v5);
    }
    goto LABEL_26;
  }
LABEL_14:
  uint64_t v34 = v53;
  OUTLINED_FUNCTION_20_4();
  v35();
  OUTLINED_FUNCTION_37_2();
  uint64_t v36 = sub_25E0DC340();
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = OUTLINED_FUNCTION_37_2();
    v39(v38);
  }
  else
  {
    uint64_t v37 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v40, v34, v5);
  }
  uint64_t v41 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v37);
  id v42 = objc_msgSend(v41, sel_underlyingErrors);
  sub_25E04986C();
  uint64_t v43 = sub_25E0DB830();

  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    id v56 = v41;
    uint64_t v45 = 0;
    while (1)
    {
      uint64_t v46 = *(void **)(v43 + 8 * v45 + 32);
      swift_getErrorValue();
      id v47 = v46;
      uint64_t v48 = OUTLINED_FUNCTION_22_4();
      uint64_t v49 = Error.unwrap(firstDomain:code:)(v48);
      MEMORY[0x2611CF510](v46);
      if (v49) {
        break;
      }
      if (v44 == ++v45)
      {

        goto LABEL_23;
      }
    }

    swift_bridgeObjectRelease();
  }
  else
  {

LABEL_23:
    swift_bridgeObjectRelease();
  }
LABEL_26:
  OUTLINED_FUNCTION_1_8();
}

BOOL Error.contains<A>(any:)()
{
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_15_0();
  v2();
  uint64_t v3 = OUTLINED_FUNCTION_27_4();
  if (v3)
  {
    uint64_t v0 = v3;
    OUTLINED_FUNCTION_17_5();
    v4();
  }
  else
  {
    uint64_t v5 = OUTLINED_FUNCTION_25_2();
    uint64_t v7 = OUTLINED_FUNCTION_19_5(v5, v6);
    v8(v7);
  }
  uint64_t v9 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v0);
  id v10 = objc_msgSend(v9, sel_domain);
  sub_25E0DB500();

  objc_msgSend(v9, sel_code);
  Error.unwrap(firstDomain:code:)();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  if (v12) {
    MEMORY[0x2611CF510](v12);
  }
  return OUTLINED_FUNCTION_42_1();
}

BOOL Error.contains(where:)()
{
  Error.unwrap(where:)();
  if (v0) {
    MEMORY[0x2611CF510](v0);
  }
  return OUTLINED_FUNCTION_42_1();
}

void Error.unwrap(where:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_3();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_42();
  v40[1] = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v40 - v12;
  uint64_t v14 = *(void (**)(void))(v7 + 16);
  void v40[2] = v15;
  OUTLINED_FUNCTION_20_4();
  v14();
  uint64_t v16 = sub_25E0DC340();
  v40[3] = v1;
  if (v16)
  {
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v3);
  }
  else
  {
    uint64_t v17 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18, v13, v3);
  }
  uint64_t v19 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v17);
  uint64_t v20 = v5(v19);

  if (v20)
  {
    OUTLINED_FUNCTION_20_4();
    v14();
    OUTLINED_FUNCTION_35_2();
    if (sub_25E0DC340())
    {
      OUTLINED_FUNCTION_17_5();
      v21();
    }
    else
    {
      uint64_t v24 = OUTLINED_FUNCTION_25_2();
      uint64_t v26 = OUTLINED_FUNCTION_21_4(v24, v25);
      v27(v26);
    }
  }
  else
  {
    OUTLINED_FUNCTION_20_4();
    v14();
    OUTLINED_FUNCTION_35_2();
    uint64_t v22 = sub_25E0DC340();
    if (v22)
    {
      uint64_t v20 = v22;
      OUTLINED_FUNCTION_17_5();
      v23();
    }
    else
    {
      uint64_t v28 = OUTLINED_FUNCTION_25_2();
      uint64_t v30 = OUTLINED_FUNCTION_21_4(v28, v29);
      v31(v30);
    }
    uint64_t v32 = (void *)sub_25E0DADB0();
    MEMORY[0x2611CF510](v20);
    id v33 = objc_msgSend(v32, sel_underlyingErrors);
    sub_25E04986C();
    uint64_t v34 = sub_25E0DB830();

    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      for (uint64_t i = 0; i != v35; ++i)
      {
        OUTLINED_FUNCTION_26_4();
        uint64_t v37 = v14;
        uint64_t v38 = OUTLINED_FUNCTION_39_2();
        uint64_t v39 = Error.unwrap(where:)(v38);
        MEMORY[0x2611CF510](v14);
        if (v39) {
          break;
        }
      }
    }

    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1_8();
}

void Error.firstValueForUserInfoKey(_:)()
{
  OUTLINED_FUNCTION_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_15_0();
  v8();
  uint64_t v9 = sub_25E0DC340();
  uint64_t v26 = v4;
  if (v9)
  {
    uint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v2);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v11, v0, v2);
  }
  uint64_t v12 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v10);
  id v13 = objc_msgSend(v12, sel_userInfo);
  uint64_t v14 = sub_25E0DB390();

  sub_25E0DB3C0();
  OUTLINED_FUNCTION_22_4();
  sub_25E0555D8(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1))
  {

LABEL_6:
    sub_25E040108(&v28, v30);
    sub_25E040108(v30, v26);
  }
  else
  {
    sub_25E07305C((uint64_t)&v28);
    id v16 = objc_msgSend(v12, sel_underlyingErrors);
    sub_25E04986C();
    uint64_t v17 = sub_25E0DB830();

    for (i = v17; *(void *)(i + 16); uint64_t v17 = i)
    {
      *(void *)&v30[0] = *(void *)(v17 + 32);
      id v18 = *(id *)&v30[0];
      sub_25E0730D4();
      if ((swift_dynamicCast() & 1) == 0) {
        break;
      }
      uint64_t v19 = (void *)v28;
      id v20 = objc_msgSend((id)v28, sel_userInfo);
      uint64_t v21 = sub_25E0DB390();

      if (*(void *)(v21 + 16))
      {
        sub_25E0DB3C0();
        OUTLINED_FUNCTION_22_4();
        unint64_t v22 = sub_25E073F74();
        if (v23)
        {
          sub_25E0400AC(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v28);
        }
        else
        {
          long long v28 = 0u;
          long long v29 = 0u;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v28 = 0u;
        long long v29 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v29 + 1))
      {

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      sub_25E07305C((uint64_t)&v28);
      if (!*(void *)(i + 16))
      {
        __break(1u);
        return;
      }
      sub_25E073D1C(0, 1);
      id v24 = objc_msgSend(v19, sel_underlyingErrors);
      uint64_t v25 = sub_25E0DB830();

      sub_25E05B080(v25);
    }

    swift_bridgeObjectRelease();
    *uint64_t v26 = 0u;
    v26[1] = 0u;
  }
  OUTLINED_FUNCTION_1_8();
}

void Error.unwrap<A>(first:)()
{
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_34_2(v2, v3, v4, v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v47 = OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_0_3();
  uint64_t v45 = v10;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_35_1();
  uint64_t v50 = v12;
  OUTLINED_FUNCTION_0_3();
  uint64_t v46 = v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  uint64_t v44 = (char *)&v42 - v15;
  OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_0_3();
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)&v42 - v19;
  OUTLINED_FUNCTION_0_3();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_23_5();
  MEMORY[0x270FA5388](v24);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v43((char *)&v42 - v25, v7, v0);
  OUTLINED_FUNCTION_36();
  uint64_t v26 = sub_25E0DC340();
  uint64_t v51 = v9;
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = OUTLINED_FUNCTION_36();
    v29(v28);
  }
  else
  {
    uint64_t v27 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_33_1();
    v30();
  }
  id v31 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v27);
  id v32 = objc_msgSend(v31, sel_domain);
  sub_25E0DB500();

  objc_msgSend(v31, sel_code);
  Error.unwrap(firstDomain:code:)();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();

  if (!v34)
  {
    uint64_t v34 = 1;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_45_2();
  sub_25E04986C();
  if (!OUTLINED_FUNCTION_18_5())
  {
    OUTLINED_FUNCTION_13_6();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v49);
    OUTLINED_FUNCTION_44_2();
    uint64_t v38 = v50;
    if (OUTLINED_FUNCTION_32_3())
    {
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_14_5();
      v39();
      uint64_t v36 = v51;
      uint64_t v40 = OUTLINED_FUNCTION_16_5();
      ((void (*)(uint64_t))v43)(v40);
      OUTLINED_FUNCTION_40_1();
      v41();
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_29_3();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v47);
LABEL_12:
    uint64_t v36 = v51;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_7_8((uint64_t)v20);
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v35(v1, v20, v0);
  uint64_t v36 = v51;
  uint64_t v37 = OUTLINED_FUNCTION_16_5();
  ((void (*)(uint64_t))v35)(v37);
LABEL_10:
  uint64_t v34 = 0;
LABEL_13:
  __swift_storeEnumTagSinglePayload(v36, v34, 1, v0);
  OUTLINED_FUNCTION_1_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(void);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_34_2(v1, v2, v3, v4);
  uint64_t v34 = v5;
  uint64_t v30 = OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_0_3();
  uint64_t v28 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_35_1();
  id v32 = v8;
  OUTLINED_FUNCTION_0_3();
  long long v29 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  uint64_t v27 = (char *)&v27 - v11;
  uint64_t v12 = OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_0_3();
  id v31 = v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - v15;
  OUTLINED_FUNCTION_0_3();
  uint64_t v33 = v17;
  MEMORY[0x270FA5388](v18);
  sub_25E0DAC40();
  sub_25E0DAC60();
  Error.unwrap(firstDomain:code:)();
  id v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20)
  {
    id v20 = 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_45_2();
  sub_25E04986C();
  if (!swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v12);
    OUTLINED_FUNCTION_44_2();
    uint64_t v22 = v32;
    if (swift_dynamicCast())
    {
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_14_5();
      v23();
      uint64_t v24 = OUTLINED_FUNCTION_12_8();
      v25(v24);
      OUTLINED_FUNCTION_40_1();
      v26();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_28_4();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v22, v30);
LABEL_9:
    uint64_t v22 = v34;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_7_8((uint64_t)v16);
  uint64_t v21 = *(void (**)(void))(v33 + 32);
  OUTLINED_FUNCTION_6_8();
  v21();
  uint64_t v22 = v34;
  OUTLINED_FUNCTION_6_8();
  v21();
LABEL_7:
  id v20 = 0;
LABEL_10:
  __swift_storeEnumTagSinglePayload(v22, v20, 1, v0);
  OUTLINED_FUNCTION_1_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  void (*v22)(void);
  void (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_43_0();
  uint64_t v30 = v1;
  uint64_t v27 = OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_0_3();
  uint64_t v25 = v2;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_35_1();
  uint64_t v28 = v4;
  OUTLINED_FUNCTION_0_3();
  uint64_t v26 = v5;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_35_1();
  uint64_t v24 = v7;
  uint64_t v8 = OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_0_3();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - v12;
  OUTLINED_FUNCTION_0_3();
  long long v29 = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_8_10();
  id v31 = v0;
  swift_getMetatypeMetadata();
  sub_25E0DB570();
  Error.unwrap(firstDomain:)();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v17 = 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_45_2();
  sub_25E04986C();
  if (!OUTLINED_FUNCTION_18_5())
  {
    OUTLINED_FUNCTION_13_6();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
    OUTLINED_FUNCTION_44_2();
    id v20 = v28;
    if (OUTLINED_FUNCTION_32_3())
    {
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_14_5();
      v21();
      uint64_t v19 = v30;
      OUTLINED_FUNCTION_16_5();
      OUTLINED_FUNCTION_55_0();
      v22();
      OUTLINED_FUNCTION_40_1();
      v23();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_29_3();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v20, v27);
LABEL_9:
    uint64_t v19 = v30;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_7_8((uint64_t)v13);
  uint64_t v18 = *(void (**)(void))(v29 + 32);
  OUTLINED_FUNCTION_6_8();
  v18();
  uint64_t v19 = v30;
  OUTLINED_FUNCTION_6_8();
  v18();
LABEL_7:
  uint64_t v17 = 0;
LABEL_10:
  __swift_storeEnumTagSinglePayload(v19, v17, 1, v0);
  OUTLINED_FUNCTION_1_8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  void (*v22)(void);
  uint64_t v23;
  void (*v24)(uint64_t);
  void (*v25)(void);
  void v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_2();
  id v32 = v0;
  uint64_t v33 = v1;
  uint64_t v3 = v2;
  long long v29 = OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_0_3();
  uint64_t v27 = v4;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_35_1();
  uint64_t v30 = v6;
  OUTLINED_FUNCTION_0_3();
  uint64_t v28 = v7;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_35_1();
  v26[1] = v9;
  uint64_t v10 = OUTLINED_FUNCTION_11_5();
  OUTLINED_FUNCTION_0_3();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v26 - v14;
  OUTLINED_FUNCTION_0_3();
  id v31 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_17_3();
  sub_25E0DAC40();
  Error.unwrap(firstDomain:)();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!v19)
  {
    uint64_t v19 = 1;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_45_2();
  sub_25E04986C();
  if (!swift_dynamicCast())
  {
    OUTLINED_FUNCTION_13_6();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    OUTLINED_FUNCTION_44_2();
    uint64_t v21 = v30;
    if (swift_dynamicCast())
    {
      OUTLINED_FUNCTION_38_1();
      OUTLINED_FUNCTION_41_1();
      OUTLINED_FUNCTION_14_5();
      v22();
      uint64_t v23 = OUTLINED_FUNCTION_12_8();
      v24(v23);
      OUTLINED_FUNCTION_40_1();
      v25();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_28_4();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v29);
LABEL_9:
    uint64_t v21 = v33;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_7_8((uint64_t)v15);
  id v20 = *(void (**)(void))(v31 + 32);
  OUTLINED_FUNCTION_6_8();
  v20();
  uint64_t v21 = v33;
  OUTLINED_FUNCTION_6_8();
  v20();
LABEL_7:
  uint64_t v19 = 0;
LABEL_10:
  __swift_storeEnumTagSinglePayload(v21, v19, 1, v3);
  OUTLINED_FUNCTION_1_8();
}

Swift::Bool __swiftcall Error._is(domain:)(Swift::String domain)
{
  object = domain._object;
  if (sub_25E0DC470() == domain._countAndFlagsBits && v2 == object) {
    char v4 = 1;
  }
  else {
    char v4 = sub_25E0DC380();
  }
  swift_bridgeObjectRelease();
  return v4 & 1;
}

Swift::Bool __swiftcall Error._is(domain:code:)(Swift::String domain, Swift::Int code)
{
  object = domain._object;
  uint64_t countAndFlagsBits = domain._countAndFlagsBits;
  OUTLINED_FUNCTION_1_5();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_55_0();
  v7();
  uint64_t v8 = OUTLINED_FUNCTION_27_4();
  if (v8)
  {
    uint64_t v2 = v8;
    OUTLINED_FUNCTION_17_5();
    v9();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_25_2();
    uint64_t v12 = OUTLINED_FUNCTION_19_5(v10, v11);
    v13(v12);
  }
  uint64_t v14 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v2);
  id v15 = objc_msgSend(v14, sel_domain);
  uint64_t v16 = sub_25E0DB500();
  uint64_t v18 = v17;

  if (v16 == countAndFlagsBits && v18 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = sub_25E0DC380();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {

      return 0;
    }
  }
  id v22 = objc_msgSend(v14, sel_code);

  return v22 == (id)code;
}

uint64_t Error._is(query:)(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_1_5();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_55_0();
  v10();
  OUTLINED_FUNCTION_22_4();
  uint64_t v11 = sub_25E0DC340();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = OUTLINED_FUNCTION_22_4();
    v14(v13);
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_25_2();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v9, a3);
  }
  uint64_t v16 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v12);
  char v17 = a1(v16);

  return v17 & 1;
}

uint64_t sub_25E07305C(uint64_t a1)
{
  sub_25E073FE8(0, qword_26B384A10, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_25E0730D4()
{
  unint64_t result = qword_26B3849F8;
  if (!qword_26B3849F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B3849F8);
  }
  return result;
}

uint64_t sub_25E073114(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v2;
  uint64_t v5 = v10;
  swift_getWitnessTable();
  type metadata accessor for _WrappingError();
  swift_getWitnessTable();
  uint64_t v6 = swift_allocError();
  _WrappingError.init(error:underlyingErrors:)((uint64_t)&v10, a1, a2, v7);
  id v8 = v5;
  sub_25E0DB3C0();
  return v6;
}

uint64_t _WrappingError.error.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _WrappingError.error.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*_WrappingError.error.modify())(void)
{
  return nullsub_1;
}

uint64_t _WrappingError.underlyingErrors.getter()
{
  return sub_25E0DB3C0();
}

uint64_t _WrappingError.underlyingErrors.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*_WrappingError.underlyingErrors.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_25E0732D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2670](a1, WitnessTable);
}

uint64_t sub_25E07332C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2668](a1, WitnessTable);
}

uint64_t sub_25E073380()
{
  return sub_25E0DB3C0();
}

uint64_t sub_25E07338C(uint64_t a1, uint64_t a2)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  swift_getWitnessTable();
  type metadata accessor for _WrappingError();
  swift_getWitnessTable();
  uint64_t v7 = swift_allocError();
  _WrappingError.init(error:underlyingErrors:)((uint64_t)v5, a1, a2, v8);
  sub_25E0DB3C0();
  return v7;
}

uint64_t _WrappingError.description.getter()
{
  sub_25E0DBE80();
  sub_25E0DC350();
  sub_25E0DB630();
  unint64_t v0 = sub_25E04986C();
  uint64_t v1 = sub_25E0DB3C0();
  MEMORY[0x2611CDD70](v1, v0);
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _WrappingError.debugDescription.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v14 = sub_25E0DC650();
  sub_25E0DB630();
  sub_25E073FE8(0, (unint64_t *)&qword_26A6D46A0, MEMORY[0x263F8E0F8]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25E0DD9C0;
  *(void *)(v4 + 56) = *(void *)(a1 + 16);
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 + 32));
  OUTLINED_FUNCTION_55_0();
  uint64_t v6 = v5();
  OUTLINED_FUNCTION_9_9(v6, v7);
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_25E0DD9C0;
  uint64_t v9 = *(void *)(v2 + *(int *)(a1 + 36));
  sub_25E0748CC(0, &qword_26A6D4FF8, (uint64_t (*)(uint64_t))sub_25E04986C, MEMORY[0x263F8D488]);
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 32) = v9;
  uint64_t v11 = sub_25E0DB3C0();
  OUTLINED_FUNCTION_9_9(v11, v12);
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  return v14;
}

uint64_t static _WrappingError.errorDomain.getter()
{
  return sub_25E0DB570();
}

id _WrappingError.errorCode.getter()
{
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_15_0();
  v1();
  OUTLINED_FUNCTION_36();
  uint64_t v2 = sub_25E0DC340();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = OUTLINED_FUNCTION_36();
    v5(v4);
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_33_1();
    v6();
  }
  uint64_t v7 = (void *)sub_25E0DADB0();
  MEMORY[0x2611CF510](v3);
  id v8 = objc_msgSend(v7, sel_code);

  return v8;
}

uint64_t _WrappingError.errorUserInfo.getter(uint64_t a1)
{
  sub_25E0748CC(0, (unint64_t *)&qword_26A6D5000, (uint64_t (*)(uint64_t))sub_25E07403C, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
  *(void *)(inited + 32) = sub_25E0DB500();
  *(void *)(inited + 40) = v4;
  uint64_t v5 = *(void *)(v1 + *(int *)(a1 + 36));
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_25E0DB3C0();
    sub_25E0DBFB0();
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = v8 + 1;
      uint64_t v10 = *(void **)(v5 + 8 * v8 + 32);
      id v11 = v10;
      sub_25E0DADB0();
      MEMORY[0x2611CF510](v10);
      sub_25E0DBF80();
      sub_25E0DBFC0();
      sub_25E0DBFD0();
      sub_25E0DBF90();
      uint64_t v8 = v9;
    }
    while (v6 != v9);
    uint64_t v7 = v14;
    swift_bridgeObjectRelease();
  }
  sub_25E0748CC(0, (unint64_t *)&qword_26B3849F0, (uint64_t (*)(uint64_t))sub_25E0730D4, MEMORY[0x263F8D488]);
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 48) = v7;
  return sub_25E0DB3A0();
}

uint64_t sub_25E073A54()
{
  return static _WrappingError.errorDomain.getter();
}

uint64_t static _WrappingError<>.errorDomain.getter()
{
  return sub_25E0DAC40();
}

uint64_t _WrappingError<>.errorCode.getter()
{
  return sub_25E0DAC60();
}

uint64_t _WrappingError<>.errorUserInfo.getter(uint64_t a1)
{
  uint64_t v10 = sub_25E0DAC50();
  sub_25E0DB500();
  sub_25E070A3C();
  sub_25E0DB500();
  uint64_t v3 = *(void *)(v1 + *(int *)(a1 + 36));
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_25E0DB3C0();
    sub_25E0DBFB0();
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v5 + 1;
      uint64_t v7 = *(void **)(v3 + 8 * v5 + 32);
      id v8 = v7;
      sub_25E0DADB0();
      MEMORY[0x2611CF510](v7);
      sub_25E0DBF80();
      sub_25E0DBFC0();
      sub_25E0DBFD0();
      sub_25E0DBF90();
      uint64_t v5 = v6;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
  }
  sub_25E0748CC(0, (unint64_t *)&qword_26B3849F0, (uint64_t (*)(uint64_t))sub_25E0730D4, MEMORY[0x263F8D488]);
  sub_25E070A3C();
  return v10;
}

void sub_25E073C2C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_25E056838();
    uint64_t v4 = v10;
    if (!v8)
    {
LABEL_14:
      *uint64_t v2 = v4;
      return;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_20;
  }
  sub_25E03B4C4((char *)(v4 + 32 + a2), v11 - a2, (char *)(v4 + 32 + a1));
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_25E073D1C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_25E056AE0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
  }
  BOOL v13 = (char *)(v4 + 32 + 8 * v6);
  sub_25E04986C();
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v14 = *(void *)(v4 + 16);
  if (__OFSUB__(v14, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_25E03B5C0((char *)(v4 + 32 + 8 * a2), v14 - a2, v13);
  uint64_t v15 = *(void *)(v4 + 16);
  BOOL v16 = __OFADD__(v15, v8);
  uint64_t v17 = v15 - v7;
  if (!v16)
  {
    *(void *)(v4 + 16) = v17;
LABEL_16:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E073E20(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v8))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v7 > *(void *)(v4 + 24) >> 1) {
    uint64_t v4 = sub_25E0575F0();
  }
  uint64_t v9 = *(void *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  unint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * v6;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  if (__OFSUB__(v13, a2)) {
    goto LABEL_19;
  }
  uint64_t result = sub_25E03BA3C(v10 + v11 * a2, v13 - a2, v12);
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 - v7;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_13:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_25E073F74()
{
  sub_25E0DC4D0();
  sub_25E0DB5E0();
  sub_25E0DC500();
  uint64_t v0 = OUTLINED_FUNCTION_22_4();

  return sub_25E0749FC(v0, v1, v2);
}

void sub_25E073FE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE58] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25E07403C()
{
  if (!qword_26A6D5008[0])
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_26A6D5008);
    }
  }
}

uint64_t sub_25E07409C()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of _WrappingErrorProtocol.underlyingErrors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _WrappingErrorProtocol.withUnderlyingErrors(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_25E0740E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25E0740E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E074184(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    sub_25E0DB3C0();
  }
  return v4;
}

uint64_t sub_25E074280(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25E0742F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  sub_25E0DB3C0();
  return a1;
}

uint64_t sub_25E074370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0743FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_25E074478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0744FC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25E074638);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_25E07464C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x25E074818);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_25E074840(uint64_t a1)
{
  sub_25E0748CC(0, &qword_26A6D5090, (uint64_t (*)(uint64_t))sub_25E074930, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25E0748CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25E074930()
{
  if (!qword_26A6D5098)
  {
    type metadata accessor for NoPurgeAssertion(255);
    unint64_t v0 = type metadata accessor for WeakCache.WeakRef();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5098);
    }
  }
}

uint64_t sub_25E074998(uint64_t a1, uint64_t a2)
{
  sub_25E074930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_25E0749FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_25E0DC380() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned int v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_25E0DC380() & 1) == 0);
    }
  }
  return v6;
}

void OUTLINED_FUNCTION_7_8(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
  JUMPOUT(0x2611CF510);
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_19_5(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_22_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return swift_getErrorValue();
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return sub_25E0DC340();
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_34_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 - 112) = a4;
  *(void *)(v5 - 104) = v4;
  *(void *)(v5 - 120) = a2;
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_42_1()
{
  return v0 != 0;
}

void OUTLINED_FUNCTION_44_2()
{
  *(void *)(v1 - 88) = v0;
}

id OUTLINED_FUNCTION_45_2()
{
  *(void *)(v1 - 88) = v0;
  return v0;
}

uint64_t sub_25E074D64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_25E03CC94(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (char *)(a1 + 58);
    do
    {
      uint64_t v5 = *(void *)(v4 - 18);
      uint64_t v6 = *(void *)(v4 - 10);
      char v7 = *(v4 - 2);
      char v12 = *v4;
      char v13 = *(v4 - 1);
      unint64_t v8 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      sub_25E0DB3C0();
      if (v8 >= v9 >> 1) {
        sub_25E03CC94((char *)(v9 > 1), v8 + 1, 1);
      }
      *(void *)(v14 + 16) = v8 + 1;
      uint64_t v10 = v14 + 24 * v8;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v6;
      *(unsigned char *)(v10 + 48) = v7;
      *(unsigned char *)(v10 + 49) = v13;
      *(unsigned char *)(v10 + 50) = v12;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E074E74(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_25E03CCB4(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 2);
      uint64_t v6 = v4[1];
      uint64_t v15 = *v4;
      uint64_t v16 = *(v4 - 1);
      char v14 = *((unsigned char *)v4 + 16);
      uint64_t v7 = v4[4];
      uint64_t v13 = v4[3];
      char v8 = *((unsigned char *)v4 + 40);
      unint64_t v9 = *(void *)(v17 + 16);
      unint64_t v10 = *(void *)(v17 + 24);
      sub_25E0DB3C0();
      sub_25E0DB3C0();
      if (v9 >= v10 >> 1) {
        sub_25E03CCB4((char *)(v10 > 1), v9 + 1, 1);
      }
      *(void *)(v17 + 16) = v9 + 1;
      uint64_t v11 = v17 + (v9 << 6);
      *(void *)(v11 + 32) = v5;
      *(void *)(v11 + 40) = v16;
      *(void *)(v11 + 48) = v15;
      *(void *)(v11 + 56) = v6;
      *(unsigned char *)(v11 + 64) = v14;
      *(void *)(v11 + 72) = v13;
      *(void *)(v11 + 80) = v7;
      v4 += 8;
      *(unsigned char *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E074FA0(uint64_t a1)
{
  return 1000000000000000 * a1;
}

unint64_t SQLDatabase.AutoVacuumMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 3;
  if (result < 3) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t SQLDatabase.AutoVacuumMode.rawValue.getter()
{
  return *v0;
}

BOOL sub_25E074FF0(char *a1, char *a2)
{
  return sub_25E082010(*a1, *a2);
}

uint64_t sub_25E074FFC()
{
  return sub_25E0D900C(*v0);
}

uint64_t sub_25E075004()
{
  return sub_25E099764();
}

uint64_t sub_25E07500C(uint64_t a1)
{
  return sub_25E0D9520(a1, *v1);
}

unint64_t sub_25E075014@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SQLDatabase.AutoVacuumMode.init(rawValue:)(*a1, a2);
}

uint64_t sub_25E07501C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SQLDatabase.AutoVacuumMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t SQLDatabase.IndexInfo.indexName.getter()
{
  return OUTLINED_FUNCTION_111_0();
}

uint64_t SQLDatabase.IndexInfo.indexName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.indexName.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexInfo.isUnique.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SQLDatabase.IndexInfo.isUnique.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.isUnique.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexInfo.IndexType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25E0DC210();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t SQLDatabase.IndexInfo.IndexType.rawValue.getter()
{
  uint64_t v1 = 117;
  if (*v0 != 1) {
    uint64_t v1 = 27504;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 99;
  }
}

uint64_t sub_25E07518C(unsigned __int8 *a1, char *a2)
{
  return sub_25E082068(*a1, *a2);
}

uint64_t sub_25E075198()
{
  return sub_25E0D9010();
}

uint64_t sub_25E0751A0()
{
  return sub_25E0D9304();
}

uint64_t sub_25E0751A8()
{
  return sub_25E0D9614();
}

uint64_t sub_25E0751B0@<X0>(char *a1@<X8>)
{
  return SQLDatabase.IndexInfo.IndexType.init(rawValue:)(a1);
}

uint64_t sub_25E0751BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SQLDatabase.IndexInfo.IndexType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void SQLDatabase.IndexInfo.indexType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *SQLDatabase.IndexInfo.indexType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.indexType.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexInfo.isPartial.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t SQLDatabase.IndexInfo.isPartial.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 18) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexInfo.isPartial.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.rank.getter()
{
  return *(void *)v0;
}

uint64_t SQLDatabase.IndexColumnInfo.rank.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.rank.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.tableRank.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SQLDatabase.IndexColumnInfo.tableRank.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.tableRank.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.name.getter()
{
  return OUTLINED_FUNCTION_111_0();
}

uint64_t SQLDatabase.IndexColumnInfo.name.setter()
{
  OUTLINED_FUNCTION_84_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.name.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.isReversed.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SQLDatabase.IndexColumnInfo.isReversed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.isReversed.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.collator.getter()
{
  return OUTLINED_FUNCTION_111_0();
}

uint64_t SQLDatabase.IndexColumnInfo.collator.setter()
{
  OUTLINED_FUNCTION_84_0();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.collator.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.IndexColumnInfo.isKeyColumn.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t SQLDatabase.IndexColumnInfo.isKeyColumn.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*SQLDatabase.IndexColumnInfo.isKeyColumn.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.name.getter()
{
  return OUTLINED_FUNCTION_111_0();
}

uint64_t SQLDatabase.TableColumnInfo.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.name.modify())(void)
{
  return nullsub_1;
}

void SQLDatabase.TableColumnInfo.type.getter(unsigned char *a1@<X8>)
{
}

unsigned char *SQLDatabase.TableColumnInfo.type.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.type.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.isNotNull.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SQLDatabase.TableColumnInfo.isNotNull.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.isNotNull.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.defaultValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_retain();
}

uint64_t SQLDatabase.TableColumnInfo.defaultValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.defaultValue.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.primaryKeyComponentIndex.modify())(void)
{
  return nullsub_1;
}

unint64_t SQLDatabase.TableColumnInfo.ColumnType.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 4;
  if (result < 4) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_25E075598(uint64_t a1)
{
  return sub_25E0DAB9C(a1, *v1);
}

unint64_t sub_25E0755A0@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return SQLDatabase.TableColumnInfo.ColumnType.init(rawValue:)(*a1, a2);
}

void SQLDatabase.TableColumnInfo.columnType.getter(unsigned char *a1@<X8>)
{
}

unsigned char *SQLDatabase.TableColumnInfo.columnType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*SQLDatabase.TableColumnInfo.columnType.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLExecution.applicationID.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(21);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA application_id");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_91_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_78_0(v12);
  *(void *)(v9 + 72) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 80) = &protocol witness table for Int;
  *uint64_t v13 = v14;
  v13[1] = sub_25E0756E0;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E0756E0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0757C0()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_25E0757E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SQLExecution.applicationID(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E075814);
}

void sub_25E075814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v22 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_48_2();
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_100_0(22);
  *(void *)(v21 + 8) = 0x800000025E0E3F80;
  *(unsigned char *)(v21 + 72) = 0;
  OUTLINED_FUNCTION_53_1();
  if (v25)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v24 = v44;
  }
  uint64_t v26 = v21 + 160;
  uint64_t v27 = v19[38];
  OUTLINED_FUNCTION_45_3();
  v19[37] = v27;
  uint64_t v28 = sub_25E0DC2D0();
  OUTLINED_FUNCTION_57_0(v28, v29);
  if (v25)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v24 = v45;
  }
  *(void *)(v24 + 16) = v18;
  OUTLINED_FUNCTION_37_3(v24 + 80 * v21);
  OUTLINED_FUNCTION_60_0();
  if (v25)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v24 = v46;
  }
  *(void *)(v24 + 16) = v18;
  OUTLINED_FUNCTION_30_3(v24 + 80 * v20);
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_112();
  if (v24)
  {
    OUTLINED_FUNCTION_59_0();
  }
  else
  {
    uint64_t v22 = a14;
    if (!a14)
    {
      __break(1u);
      return;
    }
    uint64_t v26 = a13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  v19[45] = v30;
  v19[46] = a15;
  v19[43] = v26;
  v19[44] = v22;
  OUTLINED_FUNCTION_16_6(v19[40], v30);
  uint64_t v47 = (char *)v32 + *v32;
  uint64_t v48 = v31;
  uint64_t v33 = OUTLINED_FUNCTION_56_0();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_106_0(v33);
  *uint64_t v34 = v35;
  v34[1] = sub_25E0759F0;
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_8_7();
  v40(v36, v37, v38, v39, v40, v41, v42, v43, a9, v47, v48, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E0759F0()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 384) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t SQLExecution.autoVacuumMode.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  v9[9] = v10;
  OUTLINED_FUNCTION_24_5(18);
  OUTLINED_FUNCTION_42_2(v11, (uint64_t)"PRAGMA auto_vacuum");
  uint64_t v27 = (char *)v12 + *v12;
  uint64_t v13 = OUTLINED_FUNCTION_76_0();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_99_0(v13);
  v9[7] = &type metadata for SQLDatabase.AutoVacuumMode;
  v9[8] = &protocol witness table for SQLDatabase.AutoVacuumMode;
  *uint64_t v14 = v15;
  v14[1] = sub_25E075C70;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v24(v16, v17, v18, v19, v20, v21, v22, v23, a9, v27);
}

uint64_t sub_25E075C70()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E075D50()
{
  int v1 = *(unsigned __int8 *)(v0 + 49);
  if (v1 == 3) {
    LOBYTE(v1) = 0;
  }
  **(unsigned char **)(v0 + 72) = v1;
  return OUTLINED_FUNCTION_27_5();
}

uint64_t SQLExecution.autoVacuumMode(_:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 352) = a3;
  *(void *)(v4 + 360) = v3;
  *(void *)(v4 + 344) = a2;
  *(unsigned char *)(v4 + 89) = *a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E075D8C);
}

void sub_25E075D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v19 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_48_2();
  uint64_t v21 = v20;
  *(void *)(v18 + 16) = 0xD000000000000013;
  uint64_t v22 = v18 + 336;
  *(void *)(v18 + 24) = 0x800000025E0E3FC0;
  *(unsigned char *)(v18 + 88) = 0;
  OUTLINED_FUNCTION_53_1();
  if (v23)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v21 = v41;
  }
  uint64_t v24 = v18 + 176;
  uint64_t v25 = *(unsigned __int8 *)(v18 + 89);
  OUTLINED_FUNCTION_45_3();
  *(void *)(v18 + 336) = v25;
  uint64_t v26 = sub_25E0DC2D0();
  OUTLINED_FUNCTION_57_0(v26, v27);
  if (v23)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v21 = v42;
  }
  *(void *)(v21 + 16) = v22;
  OUTLINED_FUNCTION_37_3(v21 + 80 * (v18 + 16));
  OUTLINED_FUNCTION_60_0();
  if (v23)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v21 = v43;
  }
  *(void *)(v21 + 16) = v22;
  OUTLINED_FUNCTION_30_3(v21 + 80 * (v18 + 96));
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_103_0();
  *(void *)(v18 + 368) = v21;
  if (v21)
  {
    OUTLINED_FUNCTION_59_0();
  }
  else
  {
    uint64_t v19 = a14;
    if (!a14)
    {
      __break(1u);
      return;
    }
    uint64_t v24 = a13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  OUTLINED_FUNCTION_95_0();
  *(void *)(v18 + 392) = v28;
  *(void *)(v18 + 400) = v22;
  *(void *)(v18 + 376) = v24;
  *(void *)(v18 + 384) = v19;
  uint64_t v29 = OUTLINED_FUNCTION_16_6(*(void *)(v18 + 352), v28);
  *(void *)(v18 + 408) = v30;
  *(void *)(v18 + 416) = v29 & 0xFFFFFFFFFFFFLL | 0xBDC6000000000000;
  uint64_t v44 = (char *)v30 + *v30;
  uint64_t v45 = v31;
  id v32 = (void *)OUTLINED_FUNCTION_56_0();
  *(void *)(v18 + 424) = v32;
  *id v32 = v18;
  v32[1] = sub_25E075F7C;
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_8_7();
  v37(v33, v34, v35, v36, v37, v38, v39, v40, a9, v44, v45, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E075F7C()
{
  OUTLINED_FUNCTION_39_0();
  uint64_t v18 = v2;
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v4 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_16_1();
    return MEMORY[0x270FA2498](v8, v9, v10);
  }
  else
  {
    uint64_t v12 = *(int **)(v4 + 408);
    OUTLINED_FUNCTION_101_0();
    *(void *)(v4 + 296) = 0x4D5555434156;
    *(void *)(v4 + 304) = 0xE600000000000000;
    *(void *)(v4 + 312) = 0;
    *(void *)(v4 + 320) = 0;
    *(unsigned char *)(v4 + 328) = 0;
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v4 + 440) = v13;
    *uint64_t v13 = v6;
    v13[1] = sub_25E07612C;
    uint64_t v14 = *(void *)(v4 + 352);
    uint64_t v15 = *(void *)(v4 + 344);
    return v17(v4 + 296, v15, v14);
  }
}

uint64_t sub_25E07612C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E076228()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E076230()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t SQLExecution.automaticIndexing.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(22);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA automatic_index");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E07633C;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E07633C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07641C()
{
  return OUTLINED_FUNCTION_80_0((*(unsigned char *)(v0 + 49) == 2) | (*(unsigned char *)(v0 + 49) & 1), v0 + 8, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t SQLExecution.automaticIndexing(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07645C);
}

#error "25E0764F0: call analysis failed (funcsize=99)"

uint64_t sub_25E0765F8()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t SQLExecution.busyTimeout.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(19);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA busy_timeout");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_91_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_78_0(v12);
  *(void *)(v9 + 72) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 80) = &protocol witness table for Int;
  *uint64_t v13 = v14;
  v13[1] = sub_25E076874;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E076874()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E076954()
{
  OUTLINED_FUNCTION_12();
  if (*(unsigned char *)(v0 + 64)) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  uint64_t v2 = sub_25E074FA0(v1);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t SQLExecution.busyTimeout(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[40] = a4;
  v5[41] = v4;
  v5[38] = a2;
  v5[39] = a3;
  v5[37] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E0769E0);
}

void sub_25E0769E0()
{
  OUTLINED_FUNCTION_32_2();
  OUTLINED_FUNCTION_12_0();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_18_6(20);
  *(void *)(v2 + 8) = 0x800000025E0E4040;
  *(unsigned char *)(v2 + 72) = 0;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 >= *(void *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v4 = v16;
  }
  *(void *)(v4 + 16) = v6 + 1;
  OUTLINED_FUNCTION_37_3(v4 + 80 * v6);
  sub_25E0DC5C0();
  sub_25E0DC5C0();
  *(void *)(v0 + 96) = sub_25E0DBB40();
  *(void *)(v0 + 104) = v7;
  *(unsigned char *)(v0 + 168) = 0;
  if (*(void *)(v4 + 16) >= *(void *)(v4 + 24) >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v4 = v17;
  }
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_11_6();
  if (v8)
  {
    OUTLINED_FUNCTION_8_11();
    uint64_t v4 = v18;
  }
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_50_1();
  OUTLINED_FUNCTION_112();
  if (v2 == -160)
  {
    uint64_t v4 = v21;
    if (!v21)
    {
      __break(1u);
      return;
    }
    uint64_t v1 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  else
  {
    OUTLINED_FUNCTION_69_0();
  }
  *(void *)(v0 + 360) = v9;
  *(void *)(v0 + 368) = v22;
  *(void *)(v0 + 344) = v1;
  *(void *)(v0 + 352) = v4;
  OUTLINED_FUNCTION_16_6(*(void *)(v0 + 320), v9);
  uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = OUTLINED_FUNCTION_56_0();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_106_0(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_25E076C1C;
  uint64_t v14 = *(void *)(v0 + 320);
  uint64_t v15 = *(void *)(v0 + 312);
  v19(v4, v15, v14);
}

uint64_t sub_25E076C1C()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 384) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t SQLExecution.cacheSize.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  v9[11] = v10;
  OUTLINED_FUNCTION_24_5(17);
  OUTLINED_FUNCTION_42_2(v11, (uint64_t)"PRAGMA cache_size");
  uint64_t v25 = (char *)v12 + *v12;
  uint64_t v13 = (void *)OUTLINED_FUNCTION_91_0();
  v9[12] = v13;
  v9[9] = MEMORY[0x263F8D6C8];
  v9[10] = &protocol witness table for Int;
  *uint64_t v13 = v9;
  v13[1] = sub_25E076EA8;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v22(v14, v15, v16, v17, v18, v19, v20, v21, a9, v25);
}

uint64_t sub_25E076EA8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E076F88()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v0 + 64))
  {
    uint64_t v1 = 0;
LABEL_4:
    char v2 = 0;
LABEL_5:
    uint64_t v3 = *(void *)(v0 + 88);
    *(void *)uint64_t v3 = v1;
    *(unsigned char *)(v3 + 8) = v2;
    return OUTLINED_FUNCTION_27_5();
  }
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_4;
  }
  if (v1 != 0x8000000000000000)
  {
    uint64_t v1 = -v1;
    char v2 = 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E076FD4()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.cacheSize(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a2;
  *(void *)(v4 + 312) = a3;
  uint64_t v5 = *a1;
  *(void *)(v4 + 320) = v3;
  *(void *)(v4 + 328) = v5;
  *(unsigned char *)(v4 + 89) = *((unsigned char *)a1 + 8);
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E077018);
}

void sub_25E077018()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_48_2();
  uint64_t v3 = v2;
  *(void *)(v0 + 16) = 0xD000000000000012;
  *(void *)(v0 + 24) = 0x800000025E0E4080;
  *(unsigned char *)(v0 + 88) = 0;
  unint64_t v4 = *(void *)(v2 + 16);
  if (v4 >= *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v3 = v19;
  }
  uint64_t v5 = *(unsigned __int8 *)(v0 + 89);
  *(void *)(v3 + 16) = v4 + 1;
  sub_25E07DE30(v0 + 16, v3 + 80 * v4 + 32);
  uint64_t v6 = *(void *)(v0 + 328);
  if (v5 == 1)
  {
    BOOL v7 = __OFSUB__(0, v6);
    uint64_t v6 = -v6;
    if (v7)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
  }
  uint64_t v8 = v0 + 296;
  *(void *)(v0 + 296) = v6;
  uint64_t v9 = sub_25E0DC2D0();
  OUTLINED_FUNCTION_57_0(v9, v10);
  if (v11)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v3 = v20;
  }
  *(void *)(v3 + 16) = v8;
  OUTLINED_FUNCTION_37_3(v3 + 80 * v5);
  OUTLINED_FUNCTION_60_0();
  if (v11)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v3 = v21;
  }
  *(void *)(v3 + 16) = v8;
  OUTLINED_FUNCTION_30_3(v3 + 80 * (v0 + 96));
  sub_25E0D6330();
  OUTLINED_FUNCTION_112();
  if (!v3) {
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_69_0();
  *(void *)(v0 + 360) = v12;
  *(void *)(v0 + 368) = v1;
  *(void *)(v0 + 344) = v0 + 176;
  *(void *)(v0 + 352) = v1;
  OUTLINED_FUNCTION_16_6(*(void *)(v0 + 312), v12);
  uint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)v13 + *v13);
  uint64_t v14 = OUTLINED_FUNCTION_56_0();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_106_0(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_25E0759F0;
  uint64_t v17 = *(void *)(v0 + 312);
  uint64_t v18 = *(void *)(v0 + 304);
  v22(v1, v18, v17);
}

uint64_t SQLExecution.caseSensitiveLike(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E077280);
}

#error "25E077314: call analysis failed (funcsize=99)"

uint64_t SQLExecution.cellSizeCheck.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(22);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA cell_size_check");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077520;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E077520()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E077600()
{
  return OUTLINED_FUNCTION_80_0(*(unsigned char *)(v0 + 49) & 1, v0 + 8, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_25E077614()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t SQLExecution.checkpointUsesFullFsync.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(27);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA checkpoint_fullfsync");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077730;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E077730()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t SQLExecution.checkpointUsesFullFsync(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E077830);
}

#error "25E0778C4: call analysis failed (funcsize=99)"

uint64_t SQLExecution.collations.getter()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_24_5(21);
  OUTLINED_FUNCTION_65_0(v1, (uint64_t)"PRAGMA collation_list");
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  v0[7] = MEMORY[0x263F8D310];
  v0[8] = &protocol witness table for String;
  *uint64_t v2 = v0;
  v2[1] = sub_25E077AD8;
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_16_1();
  return v10(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E077AD8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_66_0();
    return v11(v10);
  }
}

uint64_t sub_25E077BD8()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.compileOptions.getter()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_24_5(22);
  OUTLINED_FUNCTION_65_0(v1, (uint64_t)"PRAGMA compile_options");
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  v0[7] = MEMORY[0x263F8D310];
  v0[8] = &protocol witness table for String;
  *uint64_t v2 = v0;
  v2[1] = sub_25E077D00;
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_16_1();
  return v10(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_25E077D00()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_66_0();
    return v11(v10);
  }
}

uint64_t SQLExecution.checkForeignKeys(in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[45] = a4;
  v5[46] = v4;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E077E20);
}

#error "25E077EE4: call analysis failed (funcsize=164)"

uint64_t sub_25E0780CC()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 424) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_25E078244()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E078340()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E078348()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t SQLExecution.foreignKeyConstraint(in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E078370);
}

#error "25E0783EC: call analysis failed (funcsize=100)"

uint64_t sub_25E07850C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_34_3();
    uint64_t v10 = OUTLINED_FUNCTION_86_0();
    return v11(v10);
  }
}

uint64_t SQLExecution.foreignKeyConstraintsEnforced.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(19);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA foreign_keys");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077730;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t SQLExecution.foreignKeyConstraintsEnforced(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E078744);
}

#error "25E0787D8: call analysis failed (funcsize=99)"

uint64_t SQLExecution.unusedPageCount.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(21);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA freelist_count");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_91_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_78_0(v12);
  *(void *)(v9 + 72) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 80) = &protocol witness table for Int;
  *uint64_t v13 = v14;
  v13[1] = sub_25E0789E4;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E0789E4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t SQLExecution.usesFullFSync.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(16);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA fullfsync");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077730;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t SQLExecution.useFullFSync(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E078BE4);
}

#error "25E078C78: call analysis failed (funcsize=99)"

uint64_t SQLExecution.ignoreCheckConstraints(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E078DA0);
}

#error "25E078E34: call analysis failed (funcsize=99)"

uint64_t SQLExecution.incrementalVacuum(pages:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 360) = a4;
  *(void *)(v5 + 368) = v4;
  *(unsigned char *)(v5 + 89) = a2;
  *(void *)(v5 + 344) = a1;
  *(void *)(v5 + 352) = a3;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E078F5C);
}

#error "25E079040: call analysis failed (funcsize=168)"

uint64_t SQLExecution.keyColumns(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E079230);
}

#error "25E0792B8: call analysis failed (funcsize=103)"

uint64_t sub_25E0793D8()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v3 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_34_3();
    uint64_t v10 = OUTLINED_FUNCTION_86_0();
    return v11(v10);
  }
}

uint64_t sub_25E0794EC()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.indexes(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[51] = a4;
  v5[52] = v4;
  v5[49] = a2;
  v5[50] = a3;
  v5[48] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E079528);
}

void sub_25E079528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v23 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_12_0();
  uint64_t v25 = v24;
  OUTLINED_FUNCTION_18_6(18);
  OUTLINED_FUNCTION_25_5((uint64_t)"PRAGMA index_list(");
  if (v26)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v25 = v46;
  }
  OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_46_1();
  if (v21 >= v22 >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v25 = v47;
  }
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_11_6();
  if (v26)
  {
    OUTLINED_FUNCTION_8_11();
    uint64_t v25 = v48;
  }
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_103_0();
  *(void *)(v18 + 424) = v20 + 160;
  if (v20 == -160)
  {
    uint64_t v25 = a14;
    if (!a14)
    {
      __break(1u);
      return;
    }
    uint64_t v19 = a13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  else
  {
    OUTLINED_FUNCTION_59_0();
  }
  OUTLINED_FUNCTION_95_0();
  *(void *)(v18 + 448) = v27;
  *(void *)(v18 + 456) = v23;
  *(void *)(v18 + 432) = v19;
  *(void *)(v18 + 440) = v25;
  uint64_t v28 = *(void *)(v18 + 408);
  *(void *)(v18 + 336) = v19;
  *(void *)(v18 + 344) = v25;
  *(void *)(v18 + 352) = v27;
  *(void *)(v18 + 360) = v23;
  *(unsigned char *)(v18 + 368) = v29;
  OUTLINED_FUNCTION_67_0(v30, v28);
  uint64_t v49 = (char *)v32 + *v32;
  uint64_t v50 = v31;
  uint64_t v33 = (void *)OUTLINED_FUNCTION_83_0();
  uint64_t v34 = MEMORY[0x263F8D310];
  uint64_t v35 = MEMORY[0x263F8D4F8];
  *(void *)(v18 + 464) = v33;
  *(void *)(v18 + 304) = v34;
  *(void *)(v18 + 312) = v35;
  *(void *)(v18 + 320) = &type metadata for SQLDatabase.IndexInfo.IndexType;
  *(void *)(v18 + 328) = v35;
  *(void *)(v18 + 256) = &protocol witness table for Int;
  *(void *)(v18 + 264) = &protocol witness table for String;
  *(void *)(v18 + 272) = &protocol witness table for Bool;
  *(void *)(v18 + 280) = &protocol witness table for SQLDatabase.IndexInfo.IndexType;
  uint64_t v36 = MEMORY[0x263F8D6C8];
  *(void *)(v18 + 288) = &protocol witness table for Bool;
  *(void *)(v18 + 296) = v36;
  *uint64_t v33 = v18;
  v33[1] = sub_25E079748;
  OUTLINED_FUNCTION_8_7();
  v44(v37, v38, v39, v40, v41, v42, v43, v44, a9, v49, v50, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E079748()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_70_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *uint64_t v6 = *v2;
  *(void *)(v5 + 472) = v0;
  swift_task_dealloc();
  uint64_t v7 = v3[57];
  uint64_t v8 = v3[56];
  uint64_t v9 = v3[55];
  uint64_t v10 = v3[54];
  char v11 = v3[53] != 0;
  if (!v0) {
    *(void *)(v5 + 480) = v1;
  }
  sub_25E03DEA4(v10, v9, v8, v7, v11);
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v12, v13, v14);
}

uint64_t sub_25E0798B4()
{
  OUTLINED_FUNCTION_17();
  sub_25E074D64(*(void *)(v0 + 480));
  swift_bridgeObjectRelease();
  uint64_t v1 = OUTLINED_FUNCTION_107_0();
  return v2(v1);
}

uint64_t sub_25E079928()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.columnInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[53] = a4;
  v5[54] = v4;
  v5[51] = a2;
  v5[52] = a3;
  v5[50] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E079964);
}

void sub_25E079964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v23 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_12_0();
  uint64_t v25 = v24;
  OUTLINED_FUNCTION_18_6(19);
  OUTLINED_FUNCTION_25_5((uint64_t)"PRAGMA index_xinfo(");
  if (v26)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v25 = v46;
  }
  OUTLINED_FUNCTION_33_2();
  OUTLINED_FUNCTION_46_1();
  if (v21 >= v22 >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v25 = v47;
  }
  OUTLINED_FUNCTION_14_6();
  OUTLINED_FUNCTION_11_6();
  if (v26)
  {
    OUTLINED_FUNCTION_8_11();
    uint64_t v25 = v48;
  }
  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_103_0();
  *(void *)(v18 + 440) = v20 + 160;
  if (v20 == -160)
  {
    uint64_t v25 = a14;
    if (!a14)
    {
      __break(1u);
      return;
    }
    uint64_t v19 = a13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  else
  {
    OUTLINED_FUNCTION_59_0();
  }
  OUTLINED_FUNCTION_95_0();
  *(void *)(v18 + 464) = v27;
  *(void *)(v18 + 472) = v23;
  *(void *)(v18 + 448) = v19;
  *(void *)(v18 + 456) = v25;
  uint64_t v28 = *(void *)(v18 + 424);
  *(void *)(v18 + 352) = v19;
  *(void *)(v18 + 360) = v25;
  *(void *)(v18 + 368) = v27;
  *(void *)(v18 + 376) = v23;
  *(unsigned char *)(v18 + 384) = v29;
  OUTLINED_FUNCTION_67_0(v30, v28);
  uint64_t v49 = (char *)v32 + *v32;
  uint64_t v50 = v31;
  uint64_t v33 = (void *)OUTLINED_FUNCTION_83_0();
  *(void *)(v18 + 480) = v33;
  uint64_t v34 = MEMORY[0x263F8D6C8];
  *(void *)(v18 + 304) = MEMORY[0x263F8D6C8];
  *(void *)(v18 + 312) = v34;
  sub_25E07DE8C();
  uint64_t v35 = MEMORY[0x263F8D4F8];
  *(void *)(v18 + 320) = v36;
  *(void *)(v18 + 328) = v35;
  *(void *)(v18 + 336) = MEMORY[0x263F8D310];
  *(void *)(v18 + 344) = v35;
  *(void *)(v18 + 256) = &protocol witness table for Int;
  *(void *)(v18 + 264) = &protocol witness table for Int;
  *(void *)(v18 + 272) = sub_25E07DED8();
  *(void *)(v18 + 280) = &protocol witness table for Bool;
  *(void *)(v18 + 288) = &protocol witness table for String;
  *(void *)(v18 + 296) = &protocol witness table for Bool;
  *uint64_t v33 = v18;
  v33[1] = sub_25E079B88;
  OUTLINED_FUNCTION_8_7();
  v44(v37, v38, v39, v40, v41, v42, v43, v44, a9, v49, v50, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E079B88()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = (void *)*v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = (void *)*v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  *(void *)(v8 + 488) = v7;
  *(void *)(v8 + 496) = v0;
  swift_task_dealloc();
  sub_25E03DEA4(v2[56], v2[57], v2[58], v2[59], v2[55] != 0);
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E079D0C()
{
  OUTLINED_FUNCTION_8_0();
  if (*(void *)(*(void *)(v0 + 488) + 16))
  {
    sub_25E074E74(*(void *)(v0 + 488));
    swift_bridgeObjectRelease();
    uint64_t v1 = OUTLINED_FUNCTION_107_0();
    return v2(v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v4 = 0xD00000000000001BLL;
    v4[1] = 0x800000025E0E4330;
    swift_willThrow();
    OUTLINED_FUNCTION_9();
    return v5();
  }
}

uint64_t sub_25E079E40()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t SQLExecution.integrityCheck(maximumAllowedErrors:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 392) = a4;
  *(void *)(v5 + 400) = v4;
  *(unsigned char *)(v5 + 89) = a2;
  *(void *)(v5 + 376) = a1;
  *(void *)(v5 + 384) = a3;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E079E68);
}

uint64_t sub_25E079E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  if (*(unsigned char *)(v18 + 89))
  {
    uint64_t v33 = *(void *)(v18 + 392);
    *(void *)(v18 + 256) = 0xD000000000000016;
    *(void *)(v18 + 264) = 0x800000025E0E4350;
    *(void *)(v18 + 272) = 0;
    *(void *)(v18 + 280) = 0;
    *(unsigned char *)(v18 + 288) = 0;
    OUTLINED_FUNCTION_67_0(v19, v33);
    uint64_t v55 = (char *)v35 + *v35;
    uint64_t v56 = v34;
    uint64_t v36 = (void *)OUTLINED_FUNCTION_83_0();
    uint64_t v37 = MEMORY[0x263F8D310];
    *(void *)(v18 + 464) = v36;
    *(void *)(v18 + 344) = &protocol witness table for String;
    *(void *)(v18 + 352) = v37;
    *uint64_t v36 = v18;
    v36[1] = sub_25E07A2C0;
    OUTLINED_FUNCTION_89_0();
  }
  else
  {
    uint64_t v20 = v18 + 16;
    uint64_t v21 = v18 + 336;
    uint64_t v22 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_48_2();
    uint64_t v24 = v23;
    *(void *)(v18 + 176) = 0xD000000000000017;
    *(void *)(v18 + 184) = 0x800000025E0E4370;
    *(unsigned char *)(v18 + 248) = 0;
    OUTLINED_FUNCTION_53_1();
    if (v25)
    {
      OUTLINED_FUNCTION_38_2();
      uint64_t v24 = v52;
    }
    uint64_t v26 = *(void *)(v18 + 376);
    OUTLINED_FUNCTION_45_3();
    *(void *)(v18 + 336) = v26;
    uint64_t v27 = sub_25E0DC2D0();
    OUTLINED_FUNCTION_105_0(v27, v28);
    if (v25)
    {
      OUTLINED_FUNCTION_15_6();
      uint64_t v24 = v53;
    }
    *(void *)(v24 + 16) = v21;
    OUTLINED_FUNCTION_30_3(v24 + 80 * (v18 + 176));
    OUTLINED_FUNCTION_96_0();
    if (v25)
    {
      OUTLINED_FUNCTION_15_6();
      uint64_t v24 = v54;
    }
    *(void *)(v24 + 16) = v21;
    OUTLINED_FUNCTION_37_3(v24 + 80 * v20);
    uint64_t result = OUTLINED_FUNCTION_72_0();
    uint64_t v30 = *(void *)(a15 + 16);
    *(void *)(v18 + 408) = v30;
    if (v30)
    {
      OUTLINED_FUNCTION_59_0();
    }
    else
    {
      uint64_t v22 = a14;
      if (!a14)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = a13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_3();
    }
    *(void *)(v18 + 432) = v32;
    *(void *)(v18 + 440) = a15;
    *(void *)(v18 + 416) = v20;
    *(void *)(v18 + 424) = v22;
    uint64_t v38 = *(void *)(v18 + 392);
    *(void *)(v18 + 296) = v20;
    *(void *)(v18 + 304) = v22;
    *(void *)(v18 + 312) = v32;
    *(void *)(v18 + 320) = a15;
    *(unsigned char *)(v18 + 328) = v30 != 0;
    OUTLINED_FUNCTION_67_0(v31, v38);
    uint64_t v55 = (char *)v40 + *v40;
    uint64_t v56 = v39;
    uint64_t v41 = (void *)OUTLINED_FUNCTION_113();
    uint64_t v42 = MEMORY[0x263F8D310];
    *(void *)(v18 + 448) = v41;
    *(void *)(v18 + 360) = v42;
    *(void *)(v18 + 368) = &protocol witness table for String;
    *uint64_t v41 = v18;
    v41[1] = sub_25E07A13C;
    OUTLINED_FUNCTION_88_0();
  }
  OUTLINED_FUNCTION_8_7();
  return v50(v43, v44, v45, v46, v47, v48, v49, v50, a9, v55, v56, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E07A13C()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_97_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_7_0();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07A2C0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 472) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_66_0();
    return v11(v10);
  }
}

uint64_t SQLExecution.partialIntegrityCheck(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07A3E0);
}

#error "25E07A468: call analysis failed (funcsize=103)"

uint64_t SQLExecution.journalMode.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  v9[9] = v10;
  OUTLINED_FUNCTION_24_5(19);
  OUTLINED_FUNCTION_42_2(v11, (uint64_t)"PRAGMA journal_mode");
  uint64_t v27 = (char *)v12 + *v12;
  uint64_t v13 = OUTLINED_FUNCTION_76_0();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_99_0(v13);
  v9[7] = &type metadata for SQLDatabase.Options.JournalMode;
  v9[8] = &protocol witness table for SQLDatabase.Options.JournalMode;
  *uint64_t v14 = v15;
  v14[1] = sub_25E07A690;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v24(v16, v17, v18, v19, v20, v21, v22, v23, a9, v27);
}

uint64_t sub_25E07A690()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07A770()
{
  int v1 = *(unsigned __int8 *)(v0 + 49);
  if (v1 == 6) {
    LOBYTE(v1) = 0;
  }
  **(unsigned char **)(v0 + 72) = v1;
  return OUTLINED_FUNCTION_27_5();
}

uint64_t sub_25E07A788()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.journalMode(_:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = *a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07A7C8);
}

#error "25E07A8EC: call analysis failed (funcsize=122)"

uint64_t sub_25E07AA04()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_25E07AB7C()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.lockingMode.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  v9[9] = v10;
  OUTLINED_FUNCTION_24_5(19);
  OUTLINED_FUNCTION_42_2(v11, (uint64_t)"PRAGMA locking_mode");
  uint64_t v27 = (char *)v12 + *v12;
  uint64_t v13 = OUTLINED_FUNCTION_76_0();
  uint64_t v14 = (void *)OUTLINED_FUNCTION_99_0(v13);
  v9[7] = &type metadata for SQLDatabase.Options.LockingMode;
  v9[8] = &protocol witness table for SQLDatabase.Options.LockingMode;
  *uint64_t v14 = v15;
  v14[1] = sub_25E07ACA0;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v24(v16, v17, v18, v19, v20, v21, v22, v23, a9, v27);
}

uint64_t sub_25E07ACA0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07AD80()
{
  **(unsigned char **)(v0 + 72) = *(unsigned char *)(v0 + 49) & 1;
  return OUTLINED_FUNCTION_27_5();
}

uint64_t SQLExecution.lockingMode(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[43] = a5;
  v6[44] = v5;
  v6[41] = a3;
  v6[42] = a4;
  v6[39] = a1;
  v6[40] = a2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07ADB4);
}

uint64_t sub_25E07ADB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v19 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_12_0();
  uint64_t v21 = v20;
  *(void *)(v18 + 96) = 0x20414D47415250;
  *(void *)(v18 + 104) = 0xE700000000000000;
  *(unsigned char *)(v18 + 168) = 0;
  OUTLINED_FUNCTION_47_1();
  if (v22)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v21 = v42;
  }
  uint64_t v24 = *(void *)(v18 + 320);
  uint64_t v23 = *(void *)(v18 + 328);
  OUTLINED_FUNCTION_102_0();
  *(void *)(v18 + 176) = v24;
  *(void *)(v18 + 184) = v23;
  *(unsigned char *)(v18 + 248) = 0;
  unint64_t v25 = *(void *)(v21 + 16);
  unint64_t v26 = *(void *)(v21 + 24);
  sub_25E0DB3C0();
  if (v25 >= v26 >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v21 = v43;
  }
  *(void *)(v21 + 16) = v25 + 1;
  OUTLINED_FUNCTION_37_3(v21 + 80 * v25);
  strcpy((char *)(v18 + 16), ".locking_mode");
  *(_WORD *)(v18 + 30) = -4864;
  *(unsigned char *)(v18 + 88) = 0;
  unint64_t v27 = *(void *)(v21 + 16);
  if (v27 >= *(void *)(v21 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v21 = v44;
  }
  *(void *)(v21 + 16) = v27 + 1;
  OUTLINED_FUNCTION_30_3(v21 + 80 * v27);
  uint64_t result = sub_25E0D6330();
  uint64_t v29 = *(void *)(v19 + 16);
  *(void *)(v18 + 360) = v29;
  if (v29)
  {
    *(void *)(v18 + 384) = 0;
    *(void *)(v18 + 392) = v19;
    *(void *)(v18 + 368) = v21;
    *(void *)(v18 + 376) = 0;
    uint64_t v30 = *(void *)(v18 + 344);
    *(void *)(v18 + 256) = v21;
    *(void *)(v18 + 264) = 0;
    *(void *)(v18 + 272) = 0;
    *(void *)(v18 + 280) = v19;
    *(unsigned char *)(v18 + 288) = v29 != 0;
    uint64_t v45 = *(void *)(v30 + 40) + **(int **)(v30 + 40);
    uint64_t v46 = v30 + 40;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v18 + 400) = v31;
    *(void *)(v18 + 296) = &protocol witness table for SQLDatabase.Options.LockingMode;
    *(void *)(v18 + 304) = &type metadata for SQLDatabase.Options.LockingMode;
    *uint64_t v31 = v18;
    v31[1] = sub_25E07B04C;
    OUTLINED_FUNCTION_8_7();
    return v40(v32, v33, v34, v35, v36, v37, v38, v39, a9, v45, v46, v21, 0, 0, v19, a16, a17, a18);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E07B04C()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 408) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07B1A4()
{
  **(unsigned char **)(v0 + 312) = *(unsigned char *)(v0 + 89) & 1;
  return OUTLINED_FUNCTION_27_5();
}

uint64_t sub_25E07B1B8()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.lockingMode(_:for:)(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 768) = v5;
  *(void *)(v6 + 760) = a5;
  *(void *)(v6 + 752) = a4;
  *(void *)(v6 + 744) = a3;
  *(void *)(v6 + 736) = a2;
  *(unsigned char *)(v6 + 89) = *a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07B204);
}

void sub_25E07B204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_14_3();
  a25 = v28;
  a26 = v29;
  OUTLINED_FUNCTION_32_2();
  a24 = v27;
  uint64_t v30 = *(void *)(v27 + 744);
  if (!v30)
  {
    uint64_t v45 = MEMORY[0x263F8EE78];
    sub_25E056BE8();
    uint64_t v47 = v46;
    *(void *)(v27 + 16) = 0xD000000000000016;
    *(void *)(v27 + 24) = 0x800000025E0E43F0;
    *(unsigned char *)(v27 + 88) = 0;
    OUTLINED_FUNCTION_47_1();
    if (v33)
    {
      OUTLINED_FUNCTION_6_9();
      uint64_t v47 = v84;
    }
    unint64_t v48 = v27 + 176;
    int v49 = *(unsigned __int8 *)(v27 + 89);
    OUTLINED_FUNCTION_33_2();
    uint64_t v50 = 0x564953554C435845;
    if (v49)
    {
      unint64_t v51 = 0xE900000000000045;
    }
    else
    {
      uint64_t v50 = 0x4C414D524F4ELL;
      unint64_t v51 = 0xE600000000000000;
    }
    *(void *)(v27 + 96) = v50;
    *(void *)(v27 + 104) = v51;
    *(unsigned char *)(v27 + 168) = 0;
    unint64_t v52 = *(void *)(v47 + 16);
    unint64_t v53 = *(void *)(v47 + 24);
    sub_25E0DB3C0();
    if (v52 >= v53 >> 1)
    {
      OUTLINED_FUNCTION_6_9();
      uint64_t v47 = v85;
    }
    *(void *)(v47 + 16) = v52 + 1;
    OUTLINED_FUNCTION_44_3(v47 + 80 * v52);
    swift_bridgeObjectRelease();
    *(void *)(v27 + 176) = 0;
    *(void *)(v27 + 184) = 0xE000000000000000;
    *(unsigned char *)(v27 + 248) = 0;
    unint64_t v54 = *(void *)(v47 + 16);
    unint64_t v55 = v54 + 1;
    if (v54 >= *(void *)(v47 + 24) >> 1)
    {
      OUTLINED_FUNCTION_9_10();
      uint64_t v47 = v86;
    }
    unint64_t v56 = *(void *)(v27 + 736);
    *(void *)(v47 + 16) = v55;
    OUTLINED_FUNCTION_30_3(v47 + 80 * v54);
    a12 = v47;
    a13 = v56;
    a14 = 0;
    a15 = v45;
    sub_25E0D6330();
    OUTLINED_FUNCTION_103_0();
    *(void *)(v27 + 832) = v55;
    if (v54 == -1)
    {
      uint64_t v47 = a14;
      if (!a14) {
        goto LABEL_38;
      }
      unint64_t v48 = a13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_3();
    }
    else
    {
      OUTLINED_FUNCTION_59_0();
    }
    OUTLINED_FUNCTION_95_0();
    *(void *)(v27 + 864) = &a12;
    *(void *)(v27 + 856) = v65;
    *(void *)(v27 + 848) = v47;
    *(void *)(v27 + 840) = v48;
    uint64_t v66 = *(void *)(v27 + 760);
    *(void *)(v27 + 656) = v48;
    *(void *)(v27 + 664) = v47;
    *(void *)(v27 + 672) = v65;
    *(void *)(v27 + 680) = &a12;
    *(unsigned char *)(v27 + 688) = v67;
    OUTLINED_FUNCTION_41_2(v68, v66);
    uint64_t v87 = (char *)v70 + *v70;
    uint64_t v88 = v69;
    uint64_t v63 = (void *)swift_task_alloc();
    *(void *)(v27 + 872) = v63;
    *uint64_t v63 = v27;
    unint64_t v64 = sub_25E07B8BC;
    goto LABEL_34;
  }
  sub_25E056BE8();
  OUTLINED_FUNCTION_92_0();
  *(void *)(v27 + 336) = v31;
  *(void *)(v27 + 344) = v32;
  *(unsigned char *)(v27 + 408) = 0;
  OUTLINED_FUNCTION_53_1();
  if (v33)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v26 = v79;
  }
  uint64_t v34 = *(void *)(v27 + 736);
  OUTLINED_FUNCTION_79_0();
  *(void *)(v27 + 416) = v34;
  *(void *)(v27 + 424) = v30;
  *(unsigned char *)(v27 + 488) = 0;
  unint64_t v35 = *(void *)(v26 + 16);
  unint64_t v36 = *(void *)(v26 + 24);
  sub_25E0DB3C0();
  if (v35 >= v36 >> 1)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v26 = v80;
  }
  *(void *)(v26 + 16) = v35 + 1;
  OUTLINED_FUNCTION_44_3(v26 + 80 * v35);
  *(void *)(v27 + 496) = 0xD000000000000010;
  *(void *)(v27 + 504) = 0x800000025E0E4410;
  *(unsigned char *)(v27 + 568) = 0;
  unint64_t v37 = *(void *)(v26 + 16);
  if (v37 >= *(void *)(v26 + 24) >> 1)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v26 = v81;
  }
  int v38 = *(unsigned __int8 *)(v27 + 89);
  *(void *)(v26 + 16) = v37 + 1;
  OUTLINED_FUNCTION_37_3(v26 + 80 * v37);
  uint64_t v39 = 0x564953554C435845;
  if (v38)
  {
    unint64_t v40 = 0xE900000000000045;
  }
  else
  {
    uint64_t v39 = 0x4C414D524F4ELL;
    unint64_t v40 = 0xE600000000000000;
  }
  *(void *)(v27 + 576) = v39;
  *(void *)(v27 + 584) = v40;
  *(unsigned char *)(v27 + 648) = 0;
  unint64_t v41 = *(void *)(v26 + 16);
  unint64_t v42 = *(void *)(v26 + 24);
  sub_25E0DB3C0();
  if (v41 >= v42 >> 1)
  {
    OUTLINED_FUNCTION_6_9();
    uint64_t v26 = v82;
  }
  *(void *)(v26 + 16) = v41 + 1;
  OUTLINED_FUNCTION_30_3(v26 + 80 * v41);
  swift_bridgeObjectRelease();
  *(void *)(v27 + 256) = 0;
  *(void *)(v27 + 264) = 0xE000000000000000;
  *(unsigned char *)(v27 + 328) = 0;
  unint64_t v43 = *(void *)(v26 + 16);
  unint64_t v44 = v43 + 1;
  if (v43 >= *(void *)(v26 + 24) >> 1)
  {
    OUTLINED_FUNCTION_8_11();
    uint64_t v26 = v83;
  }
  *(void *)(v26 + 16) = v44;
  OUTLINED_FUNCTION_44_3(v26 + 80 * v43);
  a12 = v26;
  a13 = 0;
  a14 = 0;
  a15 = MEMORY[0x263F8EE78];
  sub_25E0D6330();
  OUTLINED_FUNCTION_103_0();
  *(void *)(v27 + 776) = v27 + 256;
  if (v27 == -256)
  {
    uint64_t v26 = a14;
    if (a14)
    {
      unint64_t v44 = a13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_3();
      goto LABEL_30;
    }
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_59_0();
LABEL_30:
  OUTLINED_FUNCTION_95_0();
  *(void *)(v27 + 808) = &a12;
  *(void *)(v27 + 800) = v57;
  *(void *)(v27 + 792) = v26;
  *(void *)(v27 + 784) = v44;
  uint64_t v58 = *(void *)(v27 + 760);
  *(void *)(v27 + 696) = v44;
  *(void *)(v27 + 704) = v26;
  *(void *)(v27 + 712) = v57;
  *(void *)(v27 + 720) = &a12;
  *(unsigned char *)(v27 + 728) = v59;
  OUTLINED_FUNCTION_41_2(v60, v58);
  uint64_t v87 = (char *)v62 + *v62;
  uint64_t v88 = v61;
  uint64_t v63 = (void *)swift_task_alloc();
  *(void *)(v27 + 816) = v63;
  *uint64_t v63 = v27;
  unint64_t v64 = sub_25E07B744;
LABEL_34:
  v63[1] = v64;
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_8_7();
  v75(v71, v72, v73, v74, v75, v76, v77, v78, a9, v87, v88, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E07B744()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 824) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_25E07B8BC()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 880) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_25E07BA34()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E07BA3C()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t SQLExecution.optimize(database:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[45] = a4;
  v5[46] = v4;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07BA64);
}

#error "25E07BB20: call analysis failed (funcsize=159)"

uint64_t sub_25E07BCF8()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 424) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_26_5();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    return v12(v11, v12, v13, v14, v15, v16, v17, v18);
  }
}

uint64_t sub_25E07BE70()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t SQLExecution.pragmas.getter()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(18);
  OUTLINED_FUNCTION_65_0(v1, (uint64_t)"PRAGMA pragma_list");
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  v0[7] = MEMORY[0x263F8D310];
  v0[8] = &protocol witness table for String;
  *uint64_t v2 = v0;
  v2[1] = sub_25E077D00;
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_16_1();
  return v10(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t SQLExecution.queryOnly.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(17);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA query_only");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077730;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t SQLExecution.queryOnly(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07C194);
}

#error "25E07C228: call analysis failed (funcsize=99)"

uint64_t SQLExecution.quickCheck(maximumAllowedErrors:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 392) = a4;
  *(void *)(v5 + 400) = v4;
  *(unsigned char *)(v5 + 89) = a2;
  *(void *)(v5 + 376) = a1;
  *(void *)(v5 + 384) = a3;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07C350);
}

uint64_t sub_25E07C350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  if (*(unsigned char *)(v18 + 89))
  {
    uint64_t v33 = *(void *)(v18 + 392);
    *(void *)(v18 + 256) = 0xD000000000000012;
    *(void *)(v18 + 264) = 0x800000025E0E4490;
    *(void *)(v18 + 272) = 0;
    *(void *)(v18 + 280) = 0;
    *(unsigned char *)(v18 + 288) = 0;
    OUTLINED_FUNCTION_67_0(v19, v33);
    unint64_t v55 = (char *)v35 + *v35;
    uint64_t v56 = v34;
    unint64_t v36 = (void *)OUTLINED_FUNCTION_83_0();
    uint64_t v37 = MEMORY[0x263F8D310];
    *(void *)(v18 + 464) = v36;
    *(void *)(v18 + 344) = &protocol witness table for String;
    *(void *)(v18 + 352) = v37;
    *unint64_t v36 = v18;
    v36[1] = sub_25E07C7A8;
    OUTLINED_FUNCTION_89_0();
  }
  else
  {
    uint64_t v20 = v18 + 16;
    uint64_t v21 = v18 + 336;
    uint64_t v22 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_48_2();
    uint64_t v24 = v23;
    *(void *)(v18 + 176) = 0xD000000000000013;
    *(void *)(v18 + 184) = 0x800000025E0E44B0;
    *(unsigned char *)(v18 + 248) = 0;
    OUTLINED_FUNCTION_53_1();
    if (v25)
    {
      OUTLINED_FUNCTION_38_2();
      uint64_t v24 = v52;
    }
    uint64_t v26 = *(void *)(v18 + 376);
    OUTLINED_FUNCTION_45_3();
    *(void *)(v18 + 336) = v26;
    uint64_t v27 = sub_25E0DC2D0();
    OUTLINED_FUNCTION_105_0(v27, v28);
    if (v25)
    {
      OUTLINED_FUNCTION_15_6();
      uint64_t v24 = v53;
    }
    *(void *)(v24 + 16) = v21;
    OUTLINED_FUNCTION_30_3(v24 + 80 * (v18 + 176));
    OUTLINED_FUNCTION_96_0();
    if (v25)
    {
      OUTLINED_FUNCTION_15_6();
      uint64_t v24 = v54;
    }
    *(void *)(v24 + 16) = v21;
    OUTLINED_FUNCTION_37_3(v24 + 80 * v20);
    uint64_t result = OUTLINED_FUNCTION_72_0();
    uint64_t v30 = *(void *)(a15 + 16);
    *(void *)(v18 + 408) = v30;
    if (v30)
    {
      OUTLINED_FUNCTION_59_0();
    }
    else
    {
      uint64_t v22 = a14;
      if (!a14)
      {
        __break(1u);
        return result;
      }
      uint64_t v20 = a13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_3();
    }
    *(void *)(v18 + 432) = v32;
    *(void *)(v18 + 440) = a15;
    *(void *)(v18 + 416) = v20;
    *(void *)(v18 + 424) = v22;
    uint64_t v38 = *(void *)(v18 + 392);
    *(void *)(v18 + 296) = v20;
    *(void *)(v18 + 304) = v22;
    *(void *)(v18 + 312) = v32;
    *(void *)(v18 + 320) = a15;
    *(unsigned char *)(v18 + 328) = v30 != 0;
    OUTLINED_FUNCTION_67_0(v31, v38);
    unint64_t v55 = (char *)v40 + *v40;
    uint64_t v56 = v39;
    unint64_t v41 = (void *)OUTLINED_FUNCTION_113();
    uint64_t v42 = MEMORY[0x263F8D310];
    *(void *)(v18 + 448) = v41;
    *(void *)(v18 + 360) = v42;
    *(void *)(v18 + 368) = &protocol witness table for String;
    *unint64_t v41 = v18;
    v41[1] = sub_25E07C624;
    OUTLINED_FUNCTION_88_0();
  }
  OUTLINED_FUNCTION_8_7();
  return v50(v43, v44, v45, v46, v47, v48, v49, v50, a9, v55, v56, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E07C624()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 456) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_97_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_7_0();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_7_0();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07C7A8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 472) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_66_0();
    return v11(v10);
  }
}

uint64_t sub_25E07C8A8()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E07C8B0()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t SQLExecution.partialQuickCheck(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07C8D8);
}

#error "25E07C960: call analysis failed (funcsize=103)"

uint64_t SQLExecution.recursiveTriggers.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(25);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA recursive_triggers");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_76_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_64_0(v12);
  *(void *)(v9 + 56) = MEMORY[0x263F8D4F8];
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *uint64_t v13 = v14;
  v13[1] = sub_25E077730;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t SQLExecution.recursiveTriggers(enabled:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 304) = a3;
  *(void *)(v4 + 312) = v3;
  *(void *)(v4 + 296) = a2;
  *(unsigned char *)(v4 + 89) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07CBA0);
}

#error "25E07CC34: call analysis failed (funcsize=99)"

uint64_t SQLExecution.schemaVersion.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(21);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA schema_version");
  uint64_t v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_91_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_78_0(v12);
  *(void *)(v9 + 72) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 80) = &protocol witness table for Int;
  *uint64_t v13 = v14;
  v13[1] = sub_25E0789E4;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t SQLExecution.shrinkMemory()()
{
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_24_5(20);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = 0x800000025E0E4530;
  *(unsigned char *)(v0 + 48) = 0;
  OUTLINED_FUNCTION_41_2(v1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25E07CF4C;
  OUTLINED_FUNCTION_16_1();
  return v8(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_25E07CF4C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E07D048()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLExecution.columns(for:)()
{
  OUTLINED_FUNCTION_12();
  v1[67] = v0;
  v1[66] = v2;
  v1[65] = v3;
  v1[63] = v4;
  v1[64] = v5;
  sub_25E03E350(0);
  v1[68] = v6;
  v1[69] = *(void *)(v6 - 8);
  v1[70] = swift_task_alloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07D128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_74_0();
  uint64_t v13 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_12_0();
  uint64_t v15 = v14;
  *(void *)(v12 + 16) = 0xD000000000000013;
  *(void *)(v12 + 24) = 0x800000025E0E4550;
  *(unsigned char *)(v12 + 88) = 0;
  OUTLINED_FUNCTION_47_1();
  if (v16)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v15 = v33;
  }
  uint64_t v18 = *(void *)(v12 + 504);
  uint64_t v17 = *(void *)(v12 + 512);
  OUTLINED_FUNCTION_102_0();
  *(void *)(v12 + 96) = v18;
  *(void *)(v12 + 104) = v17;
  *(unsigned char *)(v12 + 168) = 0;
  unint64_t v19 = *(void *)(v15 + 16);
  unint64_t v20 = *(void *)(v15 + 24);
  sub_25E0DB3C0();
  if (v19 >= v20 >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v15 = v34;
  }
  *(void *)(v15 + 16) = v19 + 1;
  OUTLINED_FUNCTION_37_3(v15 + 80 * v19);
  *(void *)(v12 + 176) = 41;
  *(void *)(v12 + 184) = 0xE100000000000000;
  *(unsigned char *)(v12 + 248) = 0;
  unint64_t v21 = *(void *)(v15 + 16);
  if (v21 >= *(void *)(v15 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v15 = v35;
  }
  *(void *)(v15 + 16) = v21 + 1;
  OUTLINED_FUNCTION_30_3(v15 + 80 * v21);
  uint64_t v36 = v15;
  uint64_t result = sub_25E0D6330();
  uint64_t v23 = *(void *)(v13 + 16);
  *(void *)(v12 + 568) = v23;
  if (v23)
  {
    OUTLINED_FUNCTION_95_0();
    *(void *)(v12 + 600) = v13;
    *(void *)(v12 + 592) = v24;
    *(void *)(v12 + 584) = 0;
    *(void *)(v12 + 576) = v36;
    *(void *)(v12 + 464) = v36;
    *(void *)(v12 + 472) = 0;
    *(void *)(v12 + 480) = v24;
    *(void *)(v12 + 488) = v13;
    *(unsigned char *)(v12 + 496) = v25;
    uint64_t v27 = (void *)swift_task_alloc();
    uint64_t v28 = MEMORY[0x263F8D6C8];
    *(void *)(v12 + 608) = v27;
    uint64_t v29 = MEMORY[0x263F8D310];
    uint64_t v30 = MEMORY[0x263F8D4F8];
    *(void *)(v12 + 320) = MEMORY[0x263F8D310];
    *(void *)(v12 + 328) = v29;
    *(void *)(v12 + 336) = v30;
    *(void *)(v12 + 344) = &type metadata for SQLDynamicValue;
    *(void *)(v12 + 256) = &protocol witness table for Int;
    *(void *)(v12 + 264) = &protocol witness table for String;
    *(void *)(v12 + 272) = &protocol witness table for String;
    *(void *)(v12 + 280) = &protocol witness table for Bool;
    *(void *)(v12 + 352) = v28;
    *(void *)(v12 + 360) = v28;
    *(void *)(v12 + 288) = &protocol witness table for SQLDynamicValue;
    *(void *)(v12 + 296) = &protocol witness table for Int;
    *(void *)(v12 + 304) = &protocol witness table for Int;
    *(void *)(v12 + 312) = v28;
    *uint64_t v27 = v12;
    v27[1] = sub_25E07D3CC;
    uint64_t v31 = *(void *)(v12 + 528);
    uint64_t v32 = *(void *)(v12 + 520);
    return SQLExecution.results<A>(for:of:)(v12 + 416, v12 + 464, 7, v32, v12 + 312, v31, v12 + 256, v26, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E07D3CC()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 616) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

void sub_25E07D524()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 424);
  *(void *)(v0 + 624) = v1;
  *(void *)(v0 + 632) = v2;
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 440);
  *(void *)(v0 + 640) = v3;
  *(void *)(v0 + 648) = v4;
  uint64_t v5 = *(void *)(v0 + 448);
  *(void *)(v0 + 656) = v5;
  char v6 = *(unsigned char *)(v0 + 456);
  *(unsigned char *)(v0 + 89) = v6;
  *(void *)(v0 + 368) = v1;
  *(void *)(v0 + 376) = v2;
  *(void *)(v0 + 384) = v3;
  *(void *)(v0 + 392) = v4;
  *(void *)(v0 + 400) = v5;
  *(unsigned char *)(v0 + 408) = v6;
  swift_retain();
  sub_25E03DDF4(v2, v3, v4, v5, v6);
  sub_25E03E370();
  sub_25E07DF40();
  sub_25E0DC0E0();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_25E07D678;
  OUTLINED_FUNCTION_7_0();
  __asm { BR              X0 }
}

uint64_t sub_25E07D678()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_70_0();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *char v6 = v5;
  *char v6 = *v2;
  *(void *)(v5 + 672) = v0;
  swift_task_dealloc();
  uint64_t v7 = v3[70];
  uint64_t v8 = v3[69];
  uint64_t v9 = v3[68];
  if (!v0) {
    *(void *)(v5 + 680) = v1;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v10, v11, v12);
}

uint64_t sub_25E07D7CC()
{
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_93_0();
  swift_release();
  OUTLINED_FUNCTION_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_26_5();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E07D848()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E07D8A4()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_93_0();
  swift_release();
  OUTLINED_FUNCTION_6();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E07D91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(v2 + 80) = *(unsigned char *)(a2 + 40);
  *(void *)(v2 + 56) = *(void *)(a2 + 48);
  *(_OWORD *)(v2 + 64) = *(_OWORD *)(a2 + 56);
  return MEMORY[0x270FA2498](sub_25E07D964, 0, 0);
}

uint64_t sub_25E07D964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  OUTLINED_FUNCTION_39_0();
  a18 = v20;
  a19 = v21;
  OUTLINED_FUNCTION_8_0();
  a17 = v19;
  unint64_t v22 = *(void *)(v19 + 72);
  uint64_t v23 = *(void *)(v19 + 48);
  uint64_t v24 = *(void *)(v19 + 40);
  sub_25E0DB3C0();
  sub_25E0DB3C0();
  sub_25E0898BC(v24, v23, &a13);
  char v25 = a13;
  swift_retain();
  if (v22 >= 4) {
    char v26 = 0;
  }
  else {
    char v26 = v22;
  }
  uint64_t v28 = *(void *)(v19 + 56);
  uint64_t v27 = *(void *)(v19 + 64);
  char v29 = *(unsigned char *)(v19 + 80);
  uint64_t v30 = *(void *)(v19 + 32);
  uint64_t v31 = *(void *)(v19 + 16);
  *(void *)uint64_t v31 = *(void *)(v19 + 24);
  *(void *)(v31 + 8) = v30;
  *(unsigned char *)(v31 + 16) = v25;
  *(unsigned char *)(v31 + 17) = v29;
  *(void *)(v31 + 24) = v28;
  *(void *)(v31 + 32) = v27 & ~(v27 >> 63);
  *(unsigned char *)(v31 + 40) = v27 < 1;
  *(unsigned char *)(v31 + 41) = v26;
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_16_1();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39);
}

uint64_t SQLExecution.userVersion.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_24_5(19);
  OUTLINED_FUNCTION_7_9(v10, (uint64_t)"PRAGMA user_version");
  char v26 = (char *)v11 + *v11;
  uint64_t v12 = OUTLINED_FUNCTION_91_0();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_78_0(v12);
  *(void *)(v9 + 72) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 80) = &protocol witness table for Int;
  *uint64_t v13 = v14;
  v13[1] = sub_25E07DB30;
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_75();
  return v23(v15, v16, v17, v18, v19, v20, v21, v22, a9, v26);
}

uint64_t sub_25E07DB30()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E07DC10()
{
  if (*(unsigned char *)(v0 + 64)) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t SQLExecution.userVersion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[40] = a3;
  v4[41] = v3;
  v4[38] = a1;
  v4[39] = a2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E07DC54);
}

void sub_25E07DC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_14_3();
  OUTLINED_FUNCTION_32_2();
  uint64_t v22 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_48_2();
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_100_0(20);
  *(void *)(v21 + 8) = 0x800000025E0E4590;
  *(unsigned char *)(v21 + 72) = 0;
  OUTLINED_FUNCTION_53_1();
  if (v25)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v24 = v44;
  }
  uint64_t v26 = v21 + 160;
  uint64_t v27 = v19[38];
  OUTLINED_FUNCTION_45_3();
  v19[37] = v27;
  uint64_t v28 = sub_25E0DC2D0();
  OUTLINED_FUNCTION_57_0(v28, v29);
  if (v25)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v24 = v45;
  }
  *(void *)(v24 + 16) = v18;
  OUTLINED_FUNCTION_37_3(v24 + 80 * v21);
  OUTLINED_FUNCTION_60_0();
  if (v25)
  {
    OUTLINED_FUNCTION_15_6();
    uint64_t v24 = v46;
  }
  *(void *)(v24 + 16) = v18;
  OUTLINED_FUNCTION_30_3(v24 + 80 * v20);
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_112();
  if (v24)
  {
    OUTLINED_FUNCTION_59_0();
  }
  else
  {
    uint64_t v22 = a14;
    if (!a14)
    {
      __break(1u);
      return;
    }
    uint64_t v26 = a13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_36_3();
  }
  v19[45] = v30;
  v19[46] = a15;
  v19[43] = v26;
  v19[44] = v22;
  OUTLINED_FUNCTION_16_6(v19[40], v30);
  uint64_t v47 = (char *)v32 + *v32;
  uint64_t v48 = v31;
  uint64_t v33 = OUTLINED_FUNCTION_56_0();
  uint64_t v34 = (void *)OUTLINED_FUNCTION_106_0(v33);
  *uint64_t v34 = v35;
  v34[1] = sub_25E076C1C;
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_8_7();
  v40(v36, v37, v38, v39, v40, v41, v42, v43, a9, v47, v48, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_25E07DE30(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_25E07DE8C()
{
  if (!qword_26A6D42E8)
  {
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D42E8);
    }
  }
}

unint64_t sub_25E07DED8()
{
  unint64_t result = qword_26A6D5180;
  if (!qword_26A6D5180)
  {
    sub_25E07DE8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5180);
  }
  return result;
}

unint64_t sub_25E07DF40()
{
  unint64_t result = qword_26A6D4360;
  if (!qword_26A6D4360)
  {
    sub_25E03E370();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D4360);
  }
  return result;
}

unint64_t sub_25E07DF94()
{
  unint64_t result = qword_26A6D5230;
  if (!qword_26A6D5230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5230);
  }
  return result;
}

_UNKNOWN **sub_25E07DFE0()
{
  return &protocol witness table for Int;
}

unint64_t sub_25E07DFF0()
{
  unint64_t result = qword_26A6D5238;
  if (!qword_26A6D5238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5238);
  }
  return result;
}

unint64_t sub_25E07E040()
{
  unint64_t result = qword_26A6D5240[0];
  if (!qword_26A6D5240[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D5240);
  }
  return result;
}

void type metadata accessor for SQLDatabase.AutoVacuumMode()
{
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t _s9CacheSizeOwet(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s9CacheSizeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25E07E138(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_25E07E140(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for SQLDatabase.CacheSize()
{
}

uint64_t sub_25E07E15C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  sub_25E0DB3C0();
  return a1;
}

uint64_t _s9IndexInfoVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s9IndexInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

uint64_t _s9IndexInfoVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 19))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IndexInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 19) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.IndexInfo()
{
}

unsigned char *_s14AutoVacuumModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E07E3C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.IndexInfo.IndexType()
{
}

uint64_t _s15IndexColumnInfoVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s15IndexColumnInfoVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  sub_25E0DB3C0();
  sub_25E0DB3C0();
  return a1;
}

uint64_t _s15IndexColumnInfoVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15IndexColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s15IndexColumnInfoVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15IndexColumnInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.IndexColumnInfo()
{
}

uint64_t _s15TableColumnInfoVwxx()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s15TableColumnInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  sub_25E0DB3C0();
  swift_retain();
  return a1;
}

uint64_t _s15TableColumnInfoVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s15TableColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t _s15TableColumnInfoVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 42))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15TableColumnInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.TableColumnInfo()
{
}

uint64_t _s15TableColumnInfoV10ColumnTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s15TableColumnInfoV10ColumnTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E07E9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.TableColumnInfo.ColumnType()
{
}

uint64_t OUTLINED_FUNCTION_7_9@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(v2 + 48) = 0;
  return a1 + 40;
}

void OUTLINED_FUNCTION_15_6()
{
  sub_25E056BE8();
}

void OUTLINED_FUNCTION_18_6(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_19_6()
{
  *(unsigned char *)(v0 + 248) = 0;
}

void OUTLINED_FUNCTION_23_6(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v1 + 72) = 0;
}

void OUTLINED_FUNCTION_24_5(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_25_5(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v1 + 72) = 0;
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_3@<X0>(uint64_t a1@<X8>)
{
  return sub_25E07DE30(v1, a1 + 32);
}

void OUTLINED_FUNCTION_32_4(uint64_t a1@<X8>)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 168) = 0;
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[46];
  char v6 = v0[44] != 0;
  return sub_25E03DEA4(v4, v5, v2, v3, v6);
}

uint64_t OUTLINED_FUNCTION_37_3@<X0>(uint64_t a1@<X8>)
{
  return sub_25E07DE30(v1, a1 + 32);
}

void OUTLINED_FUNCTION_38_2()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_41_2(uint64_t a1, uint64_t a2)
{
  return a2 + 8;
}

uint64_t OUTLINED_FUNCTION_42_2@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(v2 + 48) = 0;
  return a1 + 40;
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_3@<X0>(uint64_t a1@<X8>)
{
  return sub_25E07DE30(v1, a1 + 32);
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v1;
  *(unsigned char *)(v0 + 168) = 0;
  return sub_25E0DB3C0();
}

void OUTLINED_FUNCTION_48_2()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_25E0D6330();
}

void OUTLINED_FUNCTION_55_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v14 + 320) = *(void *)(a14 + 16);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_57_0(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 96) = result;
  *(void *)(v2 + 104) = a2;
  *(unsigned char *)(v2 + 168) = 0;
  return result;
}

void OUTLINED_FUNCTION_60_0()
{
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0xE000000000000000;
  *(unsigned char *)(v0 + 248) = 0;
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return sub_25E0D6330();
}

uint64_t OUTLINED_FUNCTION_64_0(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_65_0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 24) = (a2 - 32) | 0x8000000000000000;
  *(unsigned char *)(v2 + 48) = 0;
  return a1 + 48;
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_67_0(uint64_t a1, uint64_t a2)
{
  return a2 + 48;
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return sub_25E0D6330();
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_77_0(uint64_t result)
{
  *(void *)(v1 + 360) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_78_0(uint64_t result)
{
  *(void *)(v1 + 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  *(void *)(v0 + 16) = v2;
  return sub_25E07DE30(v1, v0 + 80 * v3 + 32);
}

uint64_t OUTLINED_FUNCTION_80_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return v0;
}

void OUTLINED_FUNCTION_87_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v15 + 352) = *(void *)(a15 + 16);
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  *(unsigned char *)(v0 + 168) = 0;
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return *(void *)(v0 + 624);
}

void OUTLINED_FUNCTION_96_0()
{
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0xE000000000000000;
  *(unsigned char *)(v0 + 168) = 0;
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return sub_25E03DEA4(v3, v2, v1, v0, v4);
}

uint64_t OUTLINED_FUNCTION_99_0(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

void OUTLINED_FUNCTION_100_0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_101_0()
{
  uint64_t v2 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[47];
  uint64_t v5 = v0[48];
  char v6 = v0[46] != 0;
  return sub_25E03DEA4(v4, v5, v2, v3, v6);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  *(void *)(v1 + 16) = v2;
  return sub_25E07DE30(v0, v1 + 80 * v3 + 32);
}

void OUTLINED_FUNCTION_104_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v15 + 376) = *(void *)(a15 + 16);
}

uint64_t OUTLINED_FUNCTION_105_0(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v2 + 88) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_106_0(uint64_t result)
{
  *(void *)(v1 + 376) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return v0;
}

void OUTLINED_FUNCTION_112()
{
  *(void *)(v1 + 336) = *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_113()
{
  return swift_task_alloc();
}

void OUTLINED_FUNCTION_114()
{
  *(unsigned char *)(v0 + 248) = 0;
}

void *sub_25E07F1A0()
{
  return &unk_270AF09E8;
}

void *sub_25E07F1AC()
{
  return &unk_270AF0A20;
}

void *sub_25E07F1B8()
{
  return &unk_270AF0A58;
}

void *sub_25E07F1C4()
{
  return &unk_270AF0A90;
}

void *sub_25E07F1D0()
{
  return &unk_270AF0AC8;
}

void *sub_25E07F1DC()
{
  return &unk_270AF0B00;
}

void *sub_25E07F1E8()
{
  return &unk_270AF0B38;
}

void *sub_25E07F1F4()
{
  return &unk_270AF0B70;
}

void *sub_25E07F200()
{
  return &unk_270AF0BA8;
}

void *sub_25E07F20C()
{
  return &unk_270AF0BE0;
}

void *sub_25E07F218()
{
  return &unk_270AF0C18;
}

uint64_t static _SQLBindableElement<>.columns()(uint64_t a1, uint64_t a2)
{
  sub_25E07F2B0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25E0DD9C0;
  *(void *)(v4 + 32) = 0x746E656D656C65;
  *(void *)(v4 + 40) = 0xE700000000000000;
  (*(void (**)(uint64_t))(*(void *)(a2 + 24) + 32))(a1);
  return v4;
}

void sub_25E07F2B0()
{
  if (!qword_26A6D49E8)
  {
    sub_25E03EBFC();
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D49E8);
    }
  }
}

uint64_t sub_25E07F308()
{
  OUTLINED_FUNCTION_10_8();
  return sub_25E07F328(v0, v1, v2, v3) & 1;
}

uint64_t sub_25E07F328(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_value *a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v7 = 0;
    for (uint64_t i = (void *)(sub_25E0DB3C0() + 40); ; i += 2)
    {
      BOOL v9 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v9 && (sub_25E0DC380() & 1) == 0) {
        break;
      }
      uint64_t v10 = *(const sqlite3_value **)(a2 + 8 * v7);
      if (!v10)
      {
        sub_25E0DBE80();
        swift_bridgeObjectRelease();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *uint64_t v13 = 0xD00000000000002ALL;
        v13[1] = 0x800000025E0E4650;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v12 & 1;
      }
      type metadata accessor for SQLDynamicValue.Box();
      swift_allocObject();
      uint64_t v11 = sub_25E04024C(v10);
      swift_release();
      if (v11 != a4)
      {
        swift_bridgeObjectRelease();
        char v12 = 0;
        return v12 & 1;
      }
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  else
  {
    char v12 = 1;
    return v12 & 1;
  }
  return result;
}

uint64_t sub_25E07F5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = (void *)(sub_25E0DB3C0() + 40);
  while (1)
  {
    BOOL v6 = *(v5 - 1) == 0x746E656D656C65 && *v5 == 0xE700000000000000;
    if (!v6 && (sub_25E0DC380() & 1) == 0) {
      break;
    }
    uint64_t v7 = *(sqlite3_value **)(a2 + 8 * v4);
    if (!v7)
    {
      sub_25E0DBE80();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD00000000000002ALL;
      unint64_t v11 = 0x800000025E0E4650;
      sub_25E0DC2D0();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      sub_25E0DB630();
LABEL_14:
      sub_25E0DB630();
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v8 = v10;
      v8[1] = v11;
      swift_willThrow();
LABEL_15:
      swift_bridgeObjectRelease();
      return 1;
    }
    if (sqlite3_value_type(*(sqlite3_value **)(a2 + 8 * v4)) != 5)
    {
      sub_25E0DBE80();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD00000000000001ELL;
      unint64_t v11 = 0x800000025E0E38A0;
      sqlite3_value_type(v7);
      sub_25E0DC2D0();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    ++v4;
    v5 += 2;
    if (v2 == v4) {
      goto LABEL_15;
    }
  }
  sub_25E0DB3C0();
  sub_25E0DBE80();
  sub_25E0DB630();
  sub_25E0DC0D0();
  uint64_t result = sub_25E0DC140();
  __break(1u);
  return result;
}

uint64_t sub_25E07F8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v70 = *MEMORY[0x263EF8340];
  uint64_t v66 = *(void *)(a1 + 16);
  if (!v66)
  {
    char v51 = 1;
    return v51 & 1;
  }
  int64_t v8 = 0x746E656D656C65;
  unint64_t v65 = a5 >> 62;
  unint64_t v58 = HIDWORD(a4);
  uint64_t v63 = HIDWORD(a4) - (int)a4;
  BOOL v9 = __OFSUB__(HIDWORD(a4), a4);
  BOOL v62 = v9;
  uint64_t v61 = BYTE6(a5);
  uint64_t v59 = a5 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v56 = a4 >> 32;
  uint64_t v57 = (int)a4;
  uint64_t v10 = 0;
  unint64_t v11 = (unint64_t *)(sub_25E0DB3C0() + 40);
  uint64_t v64 = a2;
  while (2)
  {
    uint64_t v12 = *(v11 - 1);
    unint64_t v13 = *v11;
    BOOL v14 = v12 == 0x746E656D656C65 && v13 == 0xE700000000000000;
    if (!v14 && (sub_25E0DC380() & 1) == 0) {
      goto LABEL_107;
    }
    uint64_t v15 = *(sqlite3_value **)(a2 + 8 * v10);
    if (!v15)
    {
      *(void *)&long long __dst = 0;
      *((void *)&__dst + 1) = 0xE000000000000000;
      sub_25E0DBE80();
      swift_bridgeObjectRelease();
      *(void *)&long long __dst = 0xD00000000000002ALL;
      *((void *)&__dst + 1) = 0x800000025E0E4650;
      uint64_t __s2 = v10;
      sub_25E0DC2D0();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      sub_25E0DB630();
      sub_25E0DB630();
      unint64_t v52 = *((void *)&__dst + 1);
      uint64_t v53 = __dst;
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v54 = v53;
      goto LABEL_89;
    }
    uint64_t v16 = sqlite3_value_blob(*(sqlite3_value **)(a2 + 8 * v10));
    unsigned int v17 = sqlite3_value_bytes(v15);
    if ((int)v17 >= 1)
    {
      if (v16)
      {
        unsigned int v18 = v17;
        uint64_t v19 = v17;
        if (v17 < 0xF)
        {
          *(void *)((char *)&__dst + 6) = 0;
          *(void *)&long long __dst = 0;
          BYTE14(__dst) = v17;
          memcpy(&__dst, v16, v17);
          uint64_t v12 = __dst;
          unint64_t v13 = DWORD2(__dst) | ((unint64_t)BYTE12(__dst) << 32) | ((unint64_t)BYTE13(__dst) << 40) | ((unint64_t)BYTE14(__dst) << 48);
        }
        else
        {
          sub_25E0DAD60();
          swift_allocObject();
          if (v18 >= 0x7FFFFFFF)
          {
            uint64_t v20 = sub_25E0DAD10();
            sub_25E0DAEC0();
            uint64_t v12 = swift_allocObject();
            *(_OWORD *)(v12 + 16) = xmmword_25E0DD410;
            unint64_t v13 = v20 | 0x8000000000000000;
          }
          else
          {
            uint64_t v12 = v19 << 32;
            unint64_t v13 = sub_25E0DAD10() | 0x4000000000000000;
          }
        }
        goto LABEL_20;
      }
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v54 = 0xD00000000000002BLL;
      unint64_t v52 = 0x800000025E0E4680;
LABEL_89:
      v54[1] = v52;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return v51 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = 0xC000000000000000;
LABEL_20:
    ++v10;
    v11 += 2;
    uint64_t v21 = 0;
    switch((int)v65)
    {
      case 1:
        uint64_t v21 = v63;
        if (v62) {
          goto LABEL_92;
        }
        break;
      case 2:
        uint64_t v23 = *(void *)(a4 + 16);
        uint64_t v22 = *(void *)(a4 + 24);
        uint64_t v21 = v22 - v23;
        if (!__OFSUB__(v22, v23)) {
          break;
        }
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      case 3:
        break;
      default:
        uint64_t v21 = v61;
        break;
    }
    unint64_t v24 = v13 >> 62;
    switch(v13 >> 62)
    {
      case 1uLL:
        LODWORD(v25) = HIDWORD(v12) - v12;
        if (__OFSUB__(HIDWORD(v12), v12)) {
          goto LABEL_93;
        }
        uint64_t v25 = (int)v25;
LABEL_34:
        if (v21 == v25)
        {
          if (v21 < 1)
          {
LABEL_45:
            sub_25E06B99C(v12, v13);
          }
          else
          {
            int64_t v8 = v12 >> 32;
            switch((int)v65)
            {
              case 1:
                if (v56 < v57) {
                  goto LABEL_95;
                }
                sub_25E06BF20(v12, v13);
                sub_25E06BF20(v12, v13);
                sub_25E06BF20(v12, v13);
                int64_t v8 = a5;
                sub_25E06BF20(a4, a5);
                BOOL v39 = sub_25E0860E4(v57, v56, v59, v12, v13);
                if (v5) {
                  goto LABEL_109;
                }
                BOOL v40 = v39;
                sub_25E06B99C(a4, a5);
                sub_25E06B99C(v12, v13);
                sub_25E06B99C(v12, v13);
                sub_25E06B99C(v12, v13);
                a2 = v64;
                int64_t v8 = 0x746E656D656C65;
                if (!v40) {
                  goto LABEL_87;
                }
                break;
              case 2:
                uint64_t v32 = *(void *)(a4 + 16);
                uint64_t v33 = *(void *)(a4 + 24);
                sub_25E06BF20(v12, v13);
                sub_25E06BF20(v12, v13);
                sub_25E06BF20(v12, v13);
                swift_retain();
                swift_retain();
                BOOL v34 = sub_25E0860E4(v32, v33, v59, v12, v13);
                a2 = v64;
                int64_t v8 = 0x746E656D656C65;
                if (v5) {
                  goto LABEL_108;
                }
                BOOL v35 = v34;
                swift_release();
                swift_release();
                sub_25E06B99C(v12, v13);
                sub_25E06B99C(v12, v13);
                sub_25E06B99C(v12, v13);
                if (!v35) {
                  goto LABEL_87;
                }
                break;
              case 3:
                *(void *)((char *)&__dst + 6) = 0;
                *(void *)&long long __dst = 0;
                if (!v24) {
                  goto LABEL_64;
                }
                if (v24 == 1)
                {
                  if (v8 < (int)v12)
                  {
LABEL_96:
                    __break(1u);
LABEL_97:
                    __break(1u);
LABEL_98:
                    __break(1u);
LABEL_99:
                    __break(1u);
LABEL_100:
                    __break(1u);
LABEL_101:
                    __break(1u);
LABEL_102:
                    __break(1u);
LABEL_103:
                    __break(1u);
                  }
                  sub_25E06BF20(v12, v13);
                  uint64_t v29 = (char *)sub_25E0DAD20();
                  if (v29)
                  {
                    uint64_t v36 = sub_25E0DAD50();
                    if (__OFSUB__((int)v12, v36)) {
                      goto LABEL_102;
                    }
                    v29 += (int)v12 - v36;
                  }
                  uint64_t v31 = sub_25E0DAD40();
                  if (!v29) {
                    goto LABEL_106;
                  }
LABEL_56:
                  if (v31 >= v8 - (int)v12) {
                    size_t v37 = v8 - (int)v12;
                  }
                  else {
                    size_t v37 = v31;
                  }
                  int v38 = memcmp(&__dst, v29, v37);
                  sub_25E06B99C(v12, v13);
LABEL_65:
                  sub_25E06B99C(v12, v13);
                  a2 = v64;
                  int64_t v8 = 0x746E656D656C65;
                  if (v38) {
                    goto LABEL_87;
                  }
                }
                else
                {
                  uint64_t v41 = *(void *)(v12 + 16);
                  uint64_t v42 = *(void *)(v12 + 24);
                  sub_25E06BF20(v12, v13);
                  swift_retain();
                  swift_retain();
                  uint64_t v43 = (char *)sub_25E0DAD20();
                  if (v43)
                  {
                    uint64_t v44 = sub_25E0DAD50();
                    if (__OFSUB__(v41, v44)) {
                      goto LABEL_100;
                    }
                    v43 += v41 - v44;
                  }
                  BOOL v28 = __OFSUB__(v42, v41);
                  int64_t v8 = v42 - v41;
                  if (v28) {
                    goto LABEL_98;
                  }
                  uint64_t v45 = sub_25E0DAD40();
                  a2 = v64;
                  if (!v43)
                  {
                    __break(1u);
LABEL_104:
                    __break(1u);
LABEL_105:
                    __break(1u);
LABEL_106:
                    __break(1u);
LABEL_107:
                    *(void *)&long long __dst = 0;
                    *((void *)&__dst + 1) = 0xE000000000000000;
                    sub_25E0DB3C0();
                    sub_25E0DBE80();
                    sub_25E0DB630();
                    uint64_t __s2 = v12;
                    unint64_t v68 = v13;
                    sub_25E0DC0D0();
                    sub_25E0DC140();
                    __break(1u);
LABEL_108:
                    sub_25E06B99C(v12, v13);
                    sub_25E06B99C(v12, v13);
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_109:
                    sub_25E06B99C(v12, v13);
                    sub_25E06B99C(v12, v13);
                    sub_25E06B99C(a4, v8);
                    __break(1u);
                    JUMPOUT(0x25E0802CCLL);
                  }
LABEL_78:
                  if (v45 >= v8) {
                    size_t v49 = v8;
                  }
                  else {
                    size_t v49 = v45;
                  }
                  int v50 = memcmp(&__dst, v43, v49);
                  swift_release();
                  swift_release();
                  sub_25E06B99C(v12, v13);
                  sub_25E06B99C(v12, v13);
                  int64_t v8 = 0x746E656D656C65;
                  if (v50) {
                    goto LABEL_87;
                  }
                }
                break;
              default:
                LOWORD(__dst) = a4;
                BYTE2(__dst) = BYTE2(a4);
                BYTE3(__dst) = BYTE3(a4);
                BYTE4(__dst) = v58;
                BYTE5(__dst) = BYTE5(a4);
                BYTE6(__dst) = BYTE6(a4);
                BYTE7(__dst) = HIBYTE(a4);
                DWORD2(__dst) = a5;
                WORD6(__dst) = WORD2(a5);
                if (!v24)
                {
LABEL_64:
                  uint64_t __s2 = v12;
                  LOWORD(v68) = v13;
                  BYTE2(v68) = BYTE2(v13);
                  BYTE3(v68) = BYTE3(v13);
                  BYTE4(v68) = BYTE4(v13);
                  BYTE5(v68) = BYTE5(v13);
                  int v38 = memcmp(&__dst, &__s2, BYTE6(v13));
                  goto LABEL_65;
                }
                if (v24 == 1)
                {
                  if (v8 < (int)v12) {
                    goto LABEL_97;
                  }
                  sub_25E06BF20(v12, v13);
                  uint64_t v29 = (char *)sub_25E0DAD20();
                  if (v29)
                  {
                    uint64_t v30 = sub_25E0DAD50();
                    if (__OFSUB__((int)v12, v30)) {
                      goto LABEL_103;
                    }
                    v29 += (int)v12 - v30;
                  }
                  uint64_t v31 = sub_25E0DAD40();
                  if (!v29) {
                    goto LABEL_105;
                  }
                  goto LABEL_56;
                }
                uint64_t v46 = *(void *)(v12 + 16);
                uint64_t v47 = *(void *)(v12 + 24);
                sub_25E06BF20(v12, v13);
                swift_retain();
                swift_retain();
                uint64_t v43 = (char *)sub_25E0DAD20();
                if (v43)
                {
                  uint64_t v48 = sub_25E0DAD50();
                  if (__OFSUB__(v46, v48)) {
                    goto LABEL_101;
                  }
                  v43 += v46 - v48;
                }
                BOOL v28 = __OFSUB__(v47, v46);
                int64_t v8 = v47 - v46;
                if (v28) {
                  goto LABEL_99;
                }
                uint64_t v45 = sub_25E0DAD40();
                a2 = v64;
                if (!v43) {
                  goto LABEL_104;
                }
                goto LABEL_78;
            }
          }
          if (v66 == v10)
          {
            swift_bridgeObjectRelease();
            char v51 = 1;
            return v51 & 1;
          }
          continue;
        }
LABEL_86:
        sub_25E06B99C(v12, v13);
LABEL_87:
        swift_bridgeObjectRelease();
        char v51 = 0;
        return v51 & 1;
      case 2uLL:
        uint64_t v27 = *(void *)(v12 + 16);
        uint64_t v26 = *(void *)(v12 + 24);
        BOOL v28 = __OFSUB__(v26, v27);
        uint64_t v25 = v26 - v27;
        if (!v28) {
          goto LABEL_34;
        }
        goto LABEL_94;
      case 3uLL:
        if (v21) {
          goto LABEL_86;
        }
        goto LABEL_45;
      default:
        uint64_t v25 = BYTE6(v13);
        goto LABEL_34;
    }
  }
}

uint64_t sub_25E0802FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v9 = 0;
    for (uint64_t i = (void *)(sub_25E0DB3C0() + 40); ; i += 2)
    {
      BOOL v11 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v11 && (sub_25E0DC380() & 1) == 0) {
        break;
      }
      uint64_t v12 = *(sqlite3_value **)(a2 + 8 * v9);
      if (!v12)
      {
        sub_25E0DBE80();
        swift_bridgeObjectRelease();
        unint64_t v22 = 0xD00000000000002ALL;
        unint64_t v23 = 0x800000025E0E4650;
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        sub_25E0DB630();
        goto LABEL_24;
      }
      unint64_t v13 = sqlite3_value_text(*(sqlite3_value **)(a2 + 8 * v9));
      sqlite3_value_bytes(v12);
      if (!v13)
      {
        sub_25E03E00C();
        swift_allocError();
        *unsigned int v18 = 0xD00000000000002DLL;
        unint64_t v19 = 0x800000025E0E3850;
        goto LABEL_25;
      }
      uint64_t v14 = sub_25E0DB4C0();
      if (!v15)
      {
        unint64_t v22 = 0;
        unint64_t v23 = 0xE000000000000000;
        sub_25E0DBE80();
        sub_25E0DB630();
        sub_25E0DC0D0();
LABEL_24:
        unint64_t v19 = v23;
        sub_25E03E00C();
        swift_allocError();
        *unsigned int v18 = v22;
LABEL_25:
        v18[1] = v19;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v20 & 1;
      }
      if (v14 == a4 && v15 == a5)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = sub_25E0DC380();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          char v20 = 0;
          return v20 & 1;
        }
      }
      if (v5 == ++v9)
      {
        swift_bridgeObjectRelease();
        char v20 = 1;
        return v20 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  else
  {
    char v20 = 1;
    return v20 & 1;
  }
  return result;
}

uint64_t sub_25E080694(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v7 = 0;
    for (uint64_t i = (void *)(sub_25E0DB3C0() + 40); ; i += 2)
    {
      BOOL v9 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v9 && (sub_25E0DC380() & 1) == 0) {
        break;
      }
      uint64_t v10 = *(sqlite3_value **)(a2 + 8 * v7);
      if (!v10)
      {
        sub_25E0DBE80();
        swift_bridgeObjectRelease();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *uint64_t v12 = 0xD00000000000002ALL;
        v12[1] = 0x800000025E0E4650;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      if ((((sqlite3_value_int(v10) == 0) ^ a4) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        char v11 = 0;
        return v11 & 1;
      }
      if (v4 == ++v7)
      {
        swift_bridgeObjectRelease();
        char v11 = 1;
        return v11 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  else
  {
    char v11 = 1;
    return v11 & 1;
  }
  return result;
}

uint64_t sub_25E08091C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    for (uint64_t i = (void *)(sub_25E0DB3C0() + 40); ; i += 2)
    {
      BOOL v8 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v8 && (sub_25E0DC380() & 1) == 0) {
        break;
      }
      BOOL v9 = *(sqlite3_value **)(a2 + 8 * v6);
      if (!v9)
      {
        sub_25E0DBE80();
        swift_bridgeObjectRelease();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *char v11 = 0xD00000000000002ALL;
        v11[1] = 0x800000025E0E4650;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
      if (sqlite3_value_double(v9) != a3)
      {
        swift_bridgeObjectRelease();
        char v10 = 0;
        return v10 & 1;
      }
      if (v3 == ++v6)
      {
        swift_bridgeObjectRelease();
        char v10 = 1;
        return v10 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  else
  {
    char v10 = 1;
    return v10 & 1;
  }
  return result;
}

uint64_t sub_25E080BA8(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v6 = 0;
    for (uint64_t i = (void *)(sub_25E0DB3C0() + 40); ; i += 2)
    {
      BOOL v8 = *(i - 1) == 0x746E656D656C65 && *i == 0xE700000000000000;
      if (!v8 && (sub_25E0DC380() & 1) == 0) {
        break;
      }
      BOOL v9 = *(sqlite3_value **)(a2 + 8 * v6);
      if (!v9)
      {
        sub_25E0DBE80();
        swift_bridgeObjectRelease();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        sub_25E0DB630();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *uint64_t v12 = 0xD00000000000002ALL;
        v12[1] = 0x800000025E0E4650;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      float v10 = sqlite3_value_double(v9);
      if (v10 != a3)
      {
        swift_bridgeObjectRelease();
        char v11 = 0;
        return v11 & 1;
      }
      if (v3 == ++v6)
      {
        swift_bridgeObjectRelease();
        char v11 = 1;
        return v11 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  else
  {
    char v11 = 1;
    return v11 & 1;
  }
  return result;
}

uint64_t sub_25E080E38(uint64_t a1)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_32_5(v8);
    while (1)
    {
      BOOL v9 = *(v2 - 1) == v3 && *v2 == v1;
      if (!v9 && (OUTLINED_FUNCTION_5_0() & 1) == 0) {
        break;
      }
      float v10 = *(sqlite3_value **)(v5 + 8 * v6);
      if (!v10)
      {
        OUTLINED_FUNCTION_29_4();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_20_5();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28_6();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *uint64_t v12 = v14;
        v12[1] = v15;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v11 & 1;
      }
      if (sqlite3_value_int64(v10) != v4)
      {
        swift_bridgeObjectRelease();
        char v11 = 0;
        return v11 & 1;
      }
      ++v6;
      v2 += 2;
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        char v11 = 1;
        return v11 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_26_6();
    sub_25E0DC0D0();
    OUTLINED_FUNCTION_23_7();
    uint64_t result = OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  else
  {
    char v11 = 1;
    return v11 & 1;
  }
  return result;
}

uint64_t sub_25E081014(uint64_t a1)
{
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_32_5(v8);
    while (1)
    {
      BOOL v9 = *(v2 - 1) == v3 && *v2 == v1;
      if (!v9 && (OUTLINED_FUNCTION_5_0() & 1) == 0) {
        break;
      }
      float v10 = *(sqlite3_value **)(v5 + 8 * v6);
      if (!v10)
      {
        OUTLINED_FUNCTION_29_4();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_20_5();
        sub_25E0DC2D0();
        sub_25E0DB630();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_28_6();
        sub_25E0DB630();
        sub_25E03E00C();
        swift_allocError();
        *unint64_t v13 = v15;
        v13[1] = v16;
        swift_willThrow();
        swift_bridgeObjectRelease();
        return v12 & 1;
      }
      sqlite3_int64 v11 = sqlite3_value_int64(v10);
      if (v11 < 0)
      {
        sub_25E0DC130();
        __break(1u);
        break;
      }
      if (v11 != v4)
      {
        swift_bridgeObjectRelease();
        char v12 = 0;
        return v12 & 1;
      }
      ++v6;
      v2 += 2;
      if (v7 == v6)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
    }
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_26_6();
    sub_25E0DC0D0();
    OUTLINED_FUNCTION_23_7();
    uint64_t result = OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  else
  {
    char v12 = 1;
    return v12 & 1;
  }
  return result;
}

void _SQLBindableElement<>.filter(columns:arguments:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  sqlite3_int64 v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v7 + 16);
  if (v12)
  {
    long long v25 = *v8;
    unint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v14 = 0;
    uint64_t v23 = sub_25E0DB3C0();
    uint64_t v24 = v12 - 1;
    uint64_t v15 = (uint64_t *)(v23 + 40);
    while (1)
    {
      uint64_t v16 = v3;
      uint64_t v18 = *(v15 - 1);
      uint64_t v17 = *v15;
      OUTLINED_FUNCTION_14_7();
      BOOL v20 = v18 == v19 && v17 == 0xE700000000000000;
      if (!v20 && (OUTLINED_FUNCTION_5_0() & 1) == 0) {
        break;
      }
      uint64_t v3 = v16;
      uint64_t v21 = *(void *)(*(void *)(v16 + 24) + 8);
      long long v28 = v25;
      SQLTableFunctionCursorArguments.subscript.getter(v14, v5, v5, v21);
      if (!v1)
      {
        char v22 = sub_25E0DB4B0();
        (*v13)(v11, v5);
        if (v22)
        {
          v15 += 2;
          BOOL v20 = v24 == v14++;
          if (!v20) {
            continue;
          }
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    *(void *)&long long v28 = 0;
    *((void *)&v28 + 1) = 0xE000000000000000;
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_40_3();
    uint64_t v26 = v18;
    uint64_t v27 = v17;
    sub_25E0DC0D0();
    OUTLINED_FUNCTION_23_7();
    OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  else
  {
LABEL_15:
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_4_1();
  }
}

uint64_t sub_25E08146C()
{
  OUTLINED_FUNCTION_9_11();
  return sub_25E081498(v3, v0, v1, v2);
}

uint64_t sub_25E081498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  BOOL v6 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (sub_25E0DC380() & 1) != 0)
  {
    a4[3] = &type metadata for SQLDynamicValue;
    a4[4] = &protocol witness table for SQLDynamicValue;
    *a4 = a3;
    return swift_retain();
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0815E4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v4 || (uint64_t result = sub_25E0DC380(), (result & 1) != 0))
  {
    *(void *)(a3 + 24) = &type metadata for SQLNull;
    *(void *)(a3 + 32) = &protocol witness table for SQLNull;
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E081714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  BOOL v8 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v8 || (sub_25E0DC380() & 1) != 0)
  {
    a5[3] = MEMORY[0x263F06F78];
    a5[4] = (uint64_t)&protocol witness table for Data;
    *a5 = a3;
    a5[1] = a4;
    return sub_25E06BF20(a3, a4);
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E081870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  BOOL v8 = a1 == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v8 || (sub_25E0DC380() & 1) != 0)
  {
    a5[3] = MEMORY[0x263F8D310];
    a5[4] = &protocol witness table for String;
    *a5 = a3;
    a5[1] = a4;
    return sub_25E0DB3C0();
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0819C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  BOOL v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (uint64_t result = sub_25E0DC380(), (result & 1) != 0))
  {
    *(void *)(a4 + 24) = MEMORY[0x263F8D4F8];
    *(void *)(a4 + 32) = &protocol witness table for Bool;
    *(unsigned char *)a4 = a3 & 1;
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E081B04@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  BOOL v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (uint64_t result = sub_25E0DC380(), (result & 1) != 0))
  {
    *(void *)(a3 + 24) = MEMORY[0x263F8D538];
    *(void *)(a3 + 32) = &protocol witness table for Double;
    *(double *)a3 = a4;
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E081C44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float a4@<S0>)
{
  BOOL v6 = result == 0x746E656D656C65 && a2 == 0xE700000000000000;
  if (v6 || (uint64_t result = sub_25E0DC380(), (result & 1) != 0))
  {
    *(void *)(a3 + 24) = MEMORY[0x263F8D5C8];
    *(void *)(a3 + 32) = &protocol witness table for Float;
    *(float *)a3 = a4;
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = sub_25E0DC140();
    __break(1u);
  }
  return result;
}

void sub_25E081D84(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  OUTLINED_FUNCTION_14_7();
  BOOL v11 = v9 == v10 && v8 == 0xE700000000000000;
  if (v11 || (OUTLINED_FUNCTION_5_0() & 1) != 0)
  {
    a4[3] = a2;
    a4[4] = a3;
    *a4 = a1;
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_25_6();
    sub_25E0DC0D0();
    OUTLINED_FUNCTION_37_4();
    OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
}

uint64_t _SQLBindableElement<>.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  OUTLINED_FUNCTION_14_7();
  BOOL v9 = *v7 == v8 && v7[1] == 0xE700000000000000;
  if (v9 || (OUTLINED_FUNCTION_5_0() & 1) != 0)
  {
    a3[3] = a1;
    a3[4] = *(void *)(*(void *)(a2 + 24) + 16);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
    BOOL v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16);
    return v11(boxed_opaque_existential_0, v3, a1);
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_25_6();
    sub_25E0DC0D0();
    OUTLINED_FUNCTION_37_4();
    uint64_t result = OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E081F98()
{
  uint64_t v0 = sub_25E0DB500();
  uint64_t v2 = v1;
  if (v0 == sub_25E0DB500() && v2 == v3) {
    OUTLINED_FUNCTION_30_4();
  }
  else {
    LOBYTE(v0) = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

BOOL sub_25E082010(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_25E082020(char a1, char a2)
{
  return qword_25E0DEDC0[a1] == qword_25E0DEDC0[a2];
}

BOOL sub_25E082044(char a1, char a2)
{
  return qword_25E0DEE48[a1] == qword_25E0DEE48[a2];
}

uint64_t sub_25E082068(unsigned __int8 a1, char a2)
{
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 117;
    }
    else {
      uint64_t v4 = 27504;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xE100000000000000;
    }
    else {
      unint64_t v5 = 0xE200000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE100000000000000;
    uint64_t v4 = 99;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v6 = 117;
    }
    else {
      uint64_t v6 = 27504;
    }
    if (a2 == 1) {
      unint64_t v7 = 0xE100000000000000;
    }
    else {
      unint64_t v7 = 0xE200000000000000;
    }
  }
  else
  {
    unint64_t v7 = 0xE100000000000000;
    uint64_t v6 = 99;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_30_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25E08211C(char a1, char a2)
{
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 0x564953554C435845;
  }
  else {
    uint64_t v4 = 0x4C414D524F4ELL;
  }
  if (v3) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE900000000000045;
  }
  if (a2) {
    uint64_t v6 = 0x564953554C435845;
  }
  else {
    uint64_t v6 = 0x4C414D524F4ELL;
  }
  if (a2) {
    unint64_t v7 = 0xE900000000000045;
  }
  else {
    unint64_t v7 = 0xE600000000000000;
  }
  if (v4 == v6 && v5 == v7) {
    OUTLINED_FUNCTION_30_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25E0821B0(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x4554454C4544;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x4554454C4544;
  switch(v5)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      uint64_t v6 = 0x455441434E555254;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x54534953524550;
      break;
    case 3:
      uint64_t v6 = 0x59524F4D454DLL;
      break;
    case 4:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 4997463;
      break;
    case 5:
      unint64_t v4 = 0xE300000000000000;
      uint64_t v6 = 4605519;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v3 = 0x455441434E555254;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x54534953524550;
      break;
    case 3:
      uint64_t v3 = 0x59524F4D454DLL;
      break;
    case 4:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 4997463;
      break;
    case 5:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v3 = 4605519;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    OUTLINED_FUNCTION_30_4();
  }
  else {
    char v2 = OUTLINED_FUNCTION_15_7();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_25E082354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25E0DC380();
  }
}

uint64_t sub_25E082370(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_25E0823B0(a1);
  return v2;
}

uint64_t sub_25E0823B0(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 88), a1);
  return v1;
}

void sub_25E082424(void *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_25E082438()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_25E0824A8()
{
  sub_25E082438();

  return swift_deallocClassInstance();
}

const char *sub_25E082500()
{
  return "com.apple.sonic.reference-box";
}

void sub_25E082514(void *a1@<X8>)
{
}

uint64_t sub_25E08252C()
{
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  sub_25E0DC650();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E03FD80();
  sub_25E0DBD80();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_11();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_11();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_1_11();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25E08269C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a2 + 16))();
  sub_25E05B0AC();
  return v3;
}

uint64_t sub_25E0826F0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = *a1;
  memset(v46, 0, 41);
  uint64_t v5 = *(void *)(sub_25E08269C(a2, a3) + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_25E082B64((uint64_t)v46, v5);
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    sub_25E0DB3C0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
LABEL_49:
      sub_25E0C2A68();
      uint64_t v6 = v35;
    }
    unint64_t v8 = 0;
    unint64_t v9 = v4 + 32;
    uint64_t v39 = v6 + 40;
    uint64_t v40 = v6;
    uint64_t v37 = v7;
    unint64_t v38 = v4;
    while (1)
    {
      if (v8 >= *(void *)(v4 + 16))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      uint64_t v10 = (uint64_t *)(v9 + 40 * v8);
      if (!*((unsigned char *)v10 + 16))
      {
        uint64_t v12 = *v10;
        uint64_t v11 = v10[1];
        uint64_t v14 = v10[3];
        uint64_t v13 = v10[4];
        uint64_t v47 = v14;
        uint64_t v44 = v13;
        if (*(unsigned char *)(v9 + 40 * v8 + 17) != 1)
        {
          sub_25E0DB3C0();
          sub_25E0DBE80();
          OUTLINED_FUNCTION_24_6();
          sub_25E0DB630();
          sub_25E0DC0D0();
          uint64_t result = OUTLINED_FUNCTION_2_7();
          __break(1u);
          return result;
        }
        unint64_t v15 = v9;
        sub_25E0DB3C0();
        uint64_t v16 = sub_25E08269C(a2, a3);
        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
          unint64_t v4 = 0;
          uint64_t v18 = (void *)(v16 + 40);
          uint64_t v7 = v39;
          while (1)
          {
            BOOL v19 = *(v18 - 1) == v12 && *v18 == v11;
            if (v19 || (sub_25E0DC380() & 1) != 0) {
              break;
            }
            ++v4;
            v7 += 48;
            v18 += 3;
            if (v17 == v4)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v6 = v40;
              goto LABEL_18;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v6 = v40;
          if (v4 >= *(void *)(v40 + 16)) {
            goto LABEL_48;
          }
          *(void *)(v7 - 8) = v12;
          *(void *)uint64_t v7 = v11;
          *(void *)(v7 + 8) = 256;
          *(void *)(v7 + 16) = v47;
          *(void *)(v7 + 24) = v44;
          *(unsigned char *)(v7 + 32) = 1;
          swift_bridgeObjectRelease();
LABEL_18:
          uint64_t v7 = v37;
          unint64_t v4 = v38;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        unint64_t v9 = v15;
      }
      if (++v8 == v7)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v20 = *(void *)(v6 + 16);
  if (v20)
  {
    uint64_t v21 = (void *)(v6 + 40);
    while (1)
    {
      if (*v21)
      {
        BOOL v22 = *(v21 - 1) == 0x7463656C6C6F635FLL && *v21 == 0xEB000000006E6F69;
        if (v22 || (sub_25E0DC380() & 1) != 0) {
          break;
        }
      }
      v21 += 6;
      if (!--v20) {
        goto LABEL_32;
      }
    }
    uint64_t v47 = *(void *)(v6 + 16);
    if (v47)
    {
      unsigned int v43 = 0;
      unint64_t v24 = 0;
      uint64_t v25 = v6 + 40;
      uint64_t v26 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v27 = *(void *)v25;
        if (*(void *)v25)
        {
          uint64_t v28 = *(void *)(v25 - 8);
          long long v45 = *(_OWORD *)(v25 + 16);
          char v29 = *(unsigned char *)(v25 + 32);
          uint64_t v30 = *(void *)(v25 + 8);
          if (v24 < 0x20) {
            v43 |= 1 << v24;
          }
          sub_25E0DB3C0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25E056EC4();
            uint64_t v26 = v33;
          }
          unint64_t v31 = *(void *)(v26 + 16);
          if (v31 >= *(void *)(v26 + 24) >> 1)
          {
            sub_25E056EC4();
            uint64_t v26 = v34;
          }
          *(void *)(v26 + 16) = v31 + 1;
          uint64_t v32 = v26 + 48 * v31;
          *(void *)(v32 + 32) = v28;
          *(void *)(v32 + 40) = v27;
          *(unsigned char *)(v32 + 48) = v30;
          *(unsigned char *)(v32 + 49) = BYTE1(v30) & 1;
          *(_OWORD *)(v32 + 56) = v45;
          *(unsigned char *)(v32 + 72) = v29 & 1;
        }
        ++v24;
        v25 += 48;
      }
      while (v47 != v24);
    }
    else
    {
      unsigned int v43 = 0;
      uint64_t v26 = MEMORY[0x263F8EE78];
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = v43;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = v26;
    *(_OWORD *)(a4 + 32) = xmmword_25E0DEA80;
    *(_OWORD *)(a4 + 48) = xmmword_25E0DEA90;
    *(unsigned char *)(a4 + 64) = 0;
  }
  else
  {
LABEL_32:
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(a4 + 64) = 0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_25E082B64(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_25E0DC130();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_25E0864DC();
      uint64_t v4 = sub_25E0DB8D0();
      *(void *)(v4 + 16) = a2;
      sub_25E086478(a1, v4 + 32);
      if (a2 != 1)
      {
        sub_25E086478(a1, v4 + 80);
        uint64_t v5 = a2 - 2;
        if (a2 != 2)
        {
          uint64_t v6 = v4 + 128;
          do
          {
            sub_25E086528(a1);
            sub_25E086478(a1, v6);
            v6 += 48;
            --v5;
          }
          while (v5);
        }
        sub_25E086528(a1);
      }
    }
    else
    {
      sub_25E086554(a1);
      return MEMORY[0x263F8EE78];
    }
    return v4;
  }
  return result;
}

void sub_25E082C70(void *a1@<X8>)
{
  unint64_t v2 = v1[1];
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v2 == v3)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *v1 + 16 * v2;
    uint64_t v6 = *(void *)(v4 + 32);
    uint64_t v5 = *(void *)(v4 + 40);
    v1[1] = v2 + 1;
    uint64_t v7 = v1[2];
    if (!__OFADD__(v7, 1))
    {
      v1[2] = v7 + 1;
      *a1 = v7;
      a1[1] = v6;
      a1[2] = v5;
      sub_25E0DB3C0();
      return;
    }
  }
  __break(1u);
}

void sub_25E082CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v74 = v10;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unsigned int v75 = v17;
  uint64_t v69 = v18;
  uint64_t v19 = *(void *)(*(void *)(v11 + 8) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v20);
  uint64_t v66 = (char *)v63 - v21;
  OUTLINED_FUNCTION_19_7();
  uint64_t v65 = sub_25E0DC180();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v22);
  v63[1] = (char *)v63 - v23;
  OUTLINED_FUNCTION_19_7();
  uint64_t v67 = v19;
  sub_25E0DC170();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v24);
  uint64_t v64 = (char *)v63 - v25;
  OUTLINED_FUNCTION_0_3();
  uint64_t v71 = v26;
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_42();
  v63[0] = v28;
  MEMORY[0x270FA5388](v29);
  uint64_t v70 = (char *)v63 - v30;
  uint64_t v31 = 0;
  unint64_t v32 = 0;
  uint64_t v33 = *v16;
  unint64_t v72 = v16[1];
  uint64_t v73 = v33;
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v35 = v12;
  do
  {
    if ((v75 >> v32))
    {
      uint64_t v36 = sub_25E08269C(v14, v12);
      if (v32 >= *(void *)(v36 + 16))
      {
        __break(1u);
        return;
      }
      uint64_t v37 = v14;
      uint64_t v39 = *(void *)(v36 + v31 + 32);
      uint64_t v38 = *(void *)(v36 + v31 + 40);
      sub_25E0DB3C0();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E057098();
        uint64_t v34 = v42;
      }
      unint64_t v40 = *(void *)(v34 + 16);
      if (v40 >= *(void *)(v34 + 24) >> 1)
      {
        sub_25E057098();
        uint64_t v34 = v43;
      }
      *(void *)(v34 + 16) = v40 + 1;
      uint64_t v41 = v34 + 16 * v40;
      *(void *)(v41 + 32) = v39;
      *(void *)(v41 + 40) = v38;
      uint64_t v12 = v35;
      uint64_t v14 = v37;
    }
    ++v32;
    v31 += 24;
  }
  while (v32 != 32);
  uint64_t v44 = sub_25E0831F0(0x7463656C6C6F635FLL, 0xEB000000006E6F69, v34);
  if (v45)
  {
    swift_bridgeObjectRelease();
    uint64_t v76 = 0;
    unint64_t v77 = 0xE000000000000000;
    sub_25E0DBE80();
    OUTLINED_FUNCTION_24_6();
    sub_25E0DB630();
    OUTLINED_FUNCTION_19_7();
    _s15CollectionTableVMa();
    sub_25E0DC650();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_24_6();
    sub_25E0DB630();
    uint64_t v51 = v76;
    unint64_t v52 = v77;
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v53 = v51;
    v53[1] = v52;
    swift_willThrow();
  }
  else
  {
    uint64_t v46 = v44;
    OUTLINED_FUNCTION_19_7();
    uint64_t v47 = _s12ReferenceBoxCMa();
    unint64_t v49 = v72;
    uint64_t v48 = v73;
    uint64_t v76 = v73;
    unint64_t v77 = v72;
    uint64_t v50 = v74;
    SQLTableFunctionCursorArguments.subscript.getter(v46, v47, v47, (uint64_t)&off_270AF1280);
    if (v50)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = v70;
      uint64_t v55 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, a10 + *(void *)(*(void *)a10 + 88), v14);
      if (*(void *)(v34 + 16) < 2uLL)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v76 = v48;
        unint64_t v77 = v49;
        uint64_t v56 = v63[0];
        (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v12 + 24))(v34, &v76, v14, v12);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v54, v56, v14);
      }
      MEMORY[0x2611CDC70](v14, v67);
      uint64_t v57 = (uint64_t)v64;
      sub_25E0DC150();
      swift_release();
      OUTLINED_FUNCTION_7_1();
      v58();
      uint64_t v59 = (uint64_t)v66;
      OUTLINED_FUNCTION_34_4();
      __swift_storeEnumTagSinglePayload(v60, v61, v62, AssociatedTypeWitness);
      sub_25E08327C(v57, v59, 0, 1, v69);
    }
  }
  OUTLINED_FUNCTION_4_1();
}

uint64_t sub_25E0831F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (void *)(a3 + 40); ; i += 2)
  {
    BOOL v8 = *(i - 1) == a1 && *i == a2;
    if (v8 || (sub_25E0DC380() & 1) != 0) {
      break;
    }
    if (v3 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_25E08327C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_25E0DC170();
  OUTLINED_FUNCTION_6_1();
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(a5, a1);
  uint64_t v11 = _s15CollectionTableV6CursorVMa();
  uint64_t v12 = a5 + *(int *)(v11 + 36);
  swift_getAssociatedTypeWitness();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_6_1();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, a2);
  uint64_t v15 = a5 + *(int *)(v11 + 40);
  *(void *)uint64_t v15 = a3;
  *(unsigned char *)(v15 + 8) = a4 & 1;
  return result;
}

void sub_25E083398()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v41 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  v40[0] = v5;
  v40[1] = v4;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (void *)((char *)v40 - v7);
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_6_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v40 - v10);
  OUTLINED_FUNCTION_0_3();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_19_7();
  sub_25E0DC170();
  sub_25E0DC160();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, TupleTypeMetadata2) == 1)
  {
    OUTLINED_FUNCTION_14_4();
    v17(v15, v16);
    uint64_t v18 = v41;
    sub_25E0DBCF0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_14_4();
    v21(v19, v20);
    OUTLINED_FUNCTION_34_4();
    __swift_storeEnumTagSinglePayload(v22, v23, v24, AssociatedTypeWitness);
    uint64_t v25 = v0 + *(int *)(v18 + 40);
    *(void *)uint64_t v25 = 0;
    *(unsigned char *)(v25 + 8) = 1;
  }
  else
  {
    *uint64_t v11 = *v8;
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v13 + 32);
    OUTLINED_FUNCTION_21_5();
    v26(v27, v28);
    uint64_t v29 = *v11;
    OUTLINED_FUNCTION_21_5();
    v26(v30, v31);
    uint64_t v32 = v41;
    uint64_t v33 = v0 + *(int *)(v41 + 40);
    *(void *)uint64_t v33 = v29;
    *(unsigned char *)(v33 + 8) = 0;
    uint64_t v34 = v0 + *(int *)(v32 + 36);
    sub_25E0DBCF0();
    OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_14_4();
    v37(v35, v36);
    OUTLINED_FUNCTION_21_5();
    v26(v38, v39);
    __swift_storeEnumTagSinglePayload(v34, 0, 1, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_4_1();
}

void sub_25E083674()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v29 = v0;
  uint64_t v30 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v28 = *(void *)(v3 + 24);
  v27[1] = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v27 - v13;
  OUTLINED_FUNCTION_0_3();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v27 - v18;
  uint64_t v21 = *v6;
  uint64_t v20 = v6[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v29 + *(int *)(v4 + 36), v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
  {
    OUTLINED_FUNCTION_7_1();
    v22();
    uint64_t v23 = v30;
    *(void *)(v30 + 24) = &type metadata for SQLNull;
    *(void *)(v23 + 32) = &protocol witness table for SQLNull;
  }
  else
  {
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, AssociatedTypeWitness);
    v31[0] = v21;
    v31[1] = v20;
    (*(void (**)(long long *__return_ptr, void *, char *))(v28 + 32))(&v32, v31, v19);
    uint64_t v25 = OUTLINED_FUNCTION_22_5();
    v26(v25);
    if (!v1) {
      sub_25E03DF3C(&v32, v24);
    }
  }
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

void sub_25E08386C()
{
}

void sub_25E083890()
{
}

uint64_t sub_25E0838A8(uint64_t a1)
{
  return sub_25E08269C(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

void *sub_25E0838B4()
{
  return &unk_270AF0E30;
}

uint64_t sub_25E0838C0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25E0826F0(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

void sub_25E0838E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25E082CC4(a1, a2, a3, a4, *(void *)(a5 + 16), *(void *)(a5 + 24), a7, a8, vars0, vars8);
}

uint64_t static Collection<>.columns()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void Collection<>.filter(columns:arguments:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  v17[1] = v10;
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  (*(void (**)(char *, uint64_t))(v16 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  v17[4] = v7;
  uint64_t v17[5] = v5;
  v17[6] = v3;
  v17[7] = v9;
  v17[8] = v15;
  v17[9] = v14;
  sub_25E0DB7B0();
  if (!v1)
  {
    swift_getAssociatedTypeWitness();
    sub_25E0DB940();
    swift_dynamicCast();
  }
  OUTLINED_FUNCTION_4_1();
}

uint64_t sub_25E083A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v12[0] = a3;
  v12[1] = a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(a7 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v9(a2, v12, AssociatedTypeWitness, a7) & 1;
}

uint64_t static Collection<>.result(of:from:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v7(v10, AssociatedTypeWitness, a5);
}

uint64_t sub_25E083BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return static Collection<>.columns()(a1, WitnessTable, v3);
}

void sub_25E083C18()
{
}

uint64_t sub_25E083C98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return static Collection<>.result(of:from:)(a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25E083D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return static Collection<>.columns()(a1, WitnessTable, v3);
}

void sub_25E083D68()
{
}

uint64_t sub_25E083DE8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  uint64_t WitnessTable = swift_getWitnessTable();
  return static Collection<>.result(of:from:)(a1, a2, a3, WitnessTable, v7);
}

uint64_t static Dictionary<>.columns()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_25E07F2B0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E0DEAA0;
  *(void *)(v9 + 32) = 7955819;
  *(void *)(v9 + 40) = 0xE300000000000000;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a1, a3);
  *(void *)(v9 + 56) = 0x65756C6176;
  *(void *)(v9 + 64) = 0xE500000000000000;
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a2, a5);
  return v9;
}

void Dictionary<>.filter(columns:arguments:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v65 = v1;
  uint64_t v59 = v2;
  uint64_t v68 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  v56[2] = v8;
  uint64_t v10 = v9;
  uint64_t v62 = v11;
  uint64_t v67 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_42();
  uint64_t v63 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v56 - v17;
  OUTLINED_FUNCTION_19_7();
  uint64_t v19 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v21 = v20;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v64 = *v10;
  uint64_t v26 = v10[1];
  uint64_t v69 = (char *)v56 - v27;
  uint64_t v70 = v26;
  OUTLINED_FUNCTION_34_4();
  uint64_t v57 = v7;
  __swift_storeEnumTagSinglePayload(v28, v29, v30, v7);
  uint64_t v66 = v18;
  OUTLINED_FUNCTION_34_4();
  uint64_t v58 = v5;
  __swift_storeEnumTagSinglePayload(v31, v32, v33, v5);
  uint64_t v34 = v62;
  uint64_t v71 = *(void **)(v62 + 16);
  uint64_t v60 = v21;
  if (v71)
  {
    v56[1] = v13;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v13 + 40);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v21 + 40);
    uint64_t v36 = 0;
    uint64_t v37 = (uint64_t *)(sub_25E0DB3C0() + 40);
    while (1)
    {
      uint64_t v38 = *(v37 - 1);
      uint64_t v39 = *v37;
      BOOL v40 = v38 == 7955819 && v39 == 0xE300000000000000;
      if (v40 || (sub_25E0DC380() & 1) != 0)
      {
        uint64_t v72 = *(void *)(v68 + 8);
        swift_getWitnessTable();
        OUTLINED_FUNCTION_33_3();
        SQLTableFunctionCursorArguments.subscript.getter(v36, v19, v19, v41);
        if (v0) {
          goto LABEL_21;
        }
        (*v35)(v69, v25, v19);
      }
      else
      {
        BOOL v42 = v38 == 0x65756C6176 && v39 == 0xE500000000000000;
        if (v42 || (OUTLINED_FUNCTION_31_2(), (sub_25E0DC380() & 1) != 0))
        {
          uint64_t v43 = v67;
          swift_getWitnessTable();
          OUTLINED_FUNCTION_33_3();
          uint64_t v44 = v63;
          SQLTableFunctionCursorArguments.subscript.getter(v36, v43, v43, v45);
          if (v0)
          {
LABEL_21:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_14_4();
            v54();
            OUTLINED_FUNCTION_14_4();
            v55();
            goto LABEL_22;
          }
          (*v61)(v66, v44, v43);
        }
      }
      ++v36;
      v37 += 2;
      if (v71 == (void *)v36)
      {
        uint64_t v34 = swift_bridgeObjectRelease();
        uint64_t v46 = v58;
        uint64_t v47 = v59;
        uint64_t v48 = v57;
        goto LABEL_20;
      }
    }
  }
  uint64_t v48 = v57;
  uint64_t v46 = v58;
  uint64_t v47 = v59;
LABEL_20:
  uint64_t v71 = v56;
  MEMORY[0x270FA5388](v34);
  v56[-8] = v48;
  v56[-7] = v46;
  unint64_t v49 = v69;
  v56[-6] = v68;
  v56[-5] = v47;
  uint64_t v50 = v66;
  v56[-4] = v65;
  v56[-3] = v51;
  v56[-2] = v49;
  v56[-1] = v50;
  sub_25E0DB3C0();
  sub_25E0DB3D0();
  OUTLINED_FUNCTION_7_1();
  v52();
  OUTLINED_FUNCTION_14_4();
  v53();
LABEL_22:
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

BOOL sub_25E084364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a1;
  uint64_t v35 = a8;
  uint64_t v36 = a4;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v10 = sub_25E0DBCF0();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v37 = (char *)&v33 - v12;
  uint64_t v44 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25E0DBCF0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v24 = (char *)&v33 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v33 - v23, v41, a5);
  uint64_t v41 = TupleTypeMetadata2;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(&v24[*(int *)(TupleTypeMetadata2 + 48)], v42, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v43, v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, a5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, a5);
    char v25 = sub_25E0DB4B0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a5);
    if ((v25 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v41);
      return 0;
    }
  }
  uint64_t v27 = (uint64_t)v37;
  uint64_t v26 = v38;
  uint64_t v28 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v36, v39);
  if (__swift_getEnumTagSinglePayload(v27, 1, a6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v41);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    return 1;
  }
  uint64_t v29 = v44;
  uint64_t v30 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v34, v27, a6);
  char v31 = sub_25E0DB4B0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, a6);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v41);
  return (v31 & 1) != 0;
}

void static Dictionary<>.result(of:from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v48 = v1;
  uint64_t v49 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v56 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v54 = v11;
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_3();
  uint64_t v55 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_42();
  uint64_t v53 = v14;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = *v10;
  uint64_t v20 = v10[1];
  uint64_t v57 = v16;
  uint64_t v21 = (char *)&v48 + *(int *)(v16 + 48) - v17;
  OUTLINED_FUNCTION_8_12();
  uint64_t v23 = v22 + 16;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v51 = v22;
  v50(v18, v8, v5);
  OUTLINED_FUNCTION_8_12();
  uint64_t v25 = v24;
  uint64_t v26 = *(void (**)(uint64_t))(v24 + 16);
  unint64_t v52 = v21;
  uint64_t v27 = v21;
  uint64_t v28 = v26;
  uint64_t v29 = v56;
  uint64_t v56 = v3;
  uint64_t v30 = v3;
  uint64_t v31 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v27, v29, v30);
  BOOL v32 = v19 == 7955819 && v20 == 0xE300000000000000;
  if (v32 || (uint64_t v20 = v19, (sub_25E0DC380() & 1) != 0))
  {
    uint64_t v33 = OUTLINED_FUNCTION_7_10();
    v34(v33);
    uint64_t v35 = OUTLINED_FUNCTION_18_7();
    v28(v35);
    uint64_t v36 = *(void *)(v49 + 16);
    uint64_t v37 = v54;
    v54[3] = v5;
    v37[4] = v36;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v51 + 32))(boxed_opaque_existential_0, v20, v5);
    OUTLINED_FUNCTION_14_4();
    v39();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v23);
LABEL_13:
    OUTLINED_FUNCTION_4_1();
    return;
  }
  BOOL v40 = v19 == 0x65756C6176 && v31 == 0xE500000000000000;
  if (v40 || (OUTLINED_FUNCTION_31_2(), (sub_25E0DC380() & 1) != 0))
  {
    uint64_t v41 = OUTLINED_FUNCTION_7_10();
    v42(v41);
    uint64_t v43 = OUTLINED_FUNCTION_18_7();
    v28(v43);
    uint64_t v44 = *(void *)(v48 + 16);
    uint64_t v45 = v54;
    v54[3] = v23;
    v45[4] = v44;
    uint64_t v46 = __swift_allocate_boxed_opaque_existential_0(v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 32))(v46, v19, v23);
    OUTLINED_FUNCTION_14_4();
    v47();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v19, v5);
    goto LABEL_13;
  }
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  sub_25E0DB3C0();
  sub_25E0DBE80();
  OUTLINED_FUNCTION_40_3();
  uint64_t v58 = v19;
  uint64_t v59 = v31;
  sub_25E0DC0D0();
  OUTLINED_FUNCTION_2_7();
  __break(1u);
}

uint64_t sub_25E084B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Dictionary<>.columns()(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 - 8), a4, *(void *)(a2 - 16));
}

void sub_25E084B78(void *a1@<X8>)
{
  Dictionary<>.filter(columns:arguments:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_25E084BC8()
{
}

uint64_t SQLBindPair.columnName.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_25E0DB3C0();
}

uint64_t SQLBindPair.keyPath.getter()
{
  return swift_retain();
}

void *SQLBindPair.init(name:keyPath:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

uint64_t SQLBindPair.column.getter(void *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *a1 = v2;
  a1[1] = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 32);
  sub_25E0DB3C0();
  return v6(AssociatedTypeWitness, v5);
}

uint64_t static SQLBindElement.columns()(uint64_t a1, uint64_t a2)
{
  v11[11] = (*(uint64_t (**)(void))(a2 + 16))();
  void v11[6] = a1;
  v11[7] = a2;
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = swift_getKeyPath();
  v11[9] = a1;
  swift_getExtendedExistentialTypeMetadata();
  uint64_t v4 = sub_25E0DB940();
  sub_25E03EBFC();
  uint64_t v6 = v5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_25E06D4E4((void (*)(uint64_t, uint64_t))sub_25E085CC0, (uint64_t)v11, v4, v6, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_25E084E64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t result = (*(uint64_t (**)(void *, char *, uint64_t, uint64_t))(v4 + 56))(v9, &v8, v3, v4);
  uint64_t v6 = v9[1];
  char v7 = v8;
  *(void *)a2 = v9[0];
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7;
  return result;
}

void SQLBindElement.filter(columns:arguments:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v22 = *v8;
  uint64_t v23 = v0;
  uint64_t v21 = v8[1];
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v4, v2);
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v33 = v7;
  sub_25E0DB3C0();
  sub_25E082C70(v29);
  uint64_t v10 = v30;
  if (v30)
  {
    uint64_t v11 = v29[0];
    while (1)
    {
      uint64_t v25 = &v20;
      MEMORY[0x270FA5388](v9);
      *(&v20 - 4) = v5;
      *(&v20 - 3) = v3;
      uint64_t v13 = v12;
      uint64_t v18 = v12;
      uint64_t v19 = v10;
      uint64_t v26 = v5;
      swift_getExtendedExistentialTypeMetadata();
      sub_25E0DB940();
      swift_getWitnessTable();
      sub_25E0DB7A0();
      if (!v28) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_25E03DF3C(&v27, (uint64_t)v29);
      uint64_t v14 = v31;
      uint64_t v15 = v32;
      uint64_t v16 = __swift_project_boxed_opaque_existential_1(v29, v31);
      char v17 = sub_25E085194((uint64_t)v16, v22, v21, v11, v23, v5, v14, v3, v15);
      if (v1 || (v17 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        goto LABEL_9;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      sub_25E082C70(v29);
      uint64_t v11 = v29[0];
      uint64_t v10 = v30;
      if (!v30) {
        goto LABEL_7;
      }
    }
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_25E0DBE80();
    OUTLINED_FUNCTION_24_6();
    sub_25E0DB630();
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v10;
    sub_25E0DC0D0();
    LODWORD(v19) = 0;
    uint64_t v18 = 310;
    OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_4_1();
  }
}

uint64_t sub_25E085194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v24[1] = a1;
  v24[2] = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v24 - v17;
  uint64_t v19 = *(void *)(swift_getAssociatedConformanceWitness() + 24);
  v26[0] = a2;
  v26[1] = a3;
  uint64_t v20 = v26;
  uint64_t v21 = v26[3];
  SQLTableFunctionCursorArguments.subscript.getter(a4, AssociatedTypeWitness, AssociatedTypeWitness, v19);
  if (!v21)
  {
    (*(void (**)(uint64_t, uint64_t))(a9 + 48))(a7, a9);
    swift_getAtKeyPath();
    swift_release();
    swift_getAssociatedConformanceWitness();
    LOBYTE(v20) = sub_25E0DB4B0();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v25 + 8);
    v22(v16, AssociatedTypeWitness);
    v22(v18, AssociatedTypeWitness);
  }
  return v20 & 1;
}

uint64_t SQLBindElement.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  swift_getExtendedExistentialTypeMetadata();
  sub_25E0DB940();
  swift_getWitnessTable();
  sub_25E0DB7A0();
  swift_bridgeObjectRelease();
  if (v8)
  {
    sub_25E03DF3C(&v7, (uint64_t)&v9);
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    __swift_project_boxed_opaque_existential_1(&v9, v10);
    sub_25E085650(v4, v5, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  }
  else
  {
    sub_25E0DB3C0();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_24_6();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t result = OUTLINED_FUNCTION_2_7();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E08559C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 40))(v10, v5, v6);
  if (v10[0] == a2 && v10[1] == a3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25E0DC380();
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_25E085650@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  a3[3] = swift_getAssociatedTypeWitness();
  a3[4] = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  __swift_allocate_boxed_opaque_existential_0(a3);
  swift_getAtKeyPath();

  return swift_release();
}

uint64_t sub_25E08572C(uint64_t a1, uint64_t *a2)
{
  return sub_25E07F5E4(a1, *a2) & 1;
}

uint64_t sub_25E085750()
{
  OUTLINED_FUNCTION_35_4();
  return sub_25E0815E4(v2, v0, v1);
}

uint64_t sub_25E085780(uint64_t a1, uint64_t *a2)
{
  return sub_25E080694(a1, *a2, a2[1], *v2) & 1;
}

uint64_t sub_25E0857A8()
{
  OUTLINED_FUNCTION_35_4();
  return sub_25E0819C8(v3, v1, *v0, v2);
}

uint64_t sub_25E0857DC()
{
  OUTLINED_FUNCTION_10_8();
  return sub_25E080E38(v0) & 1;
}

void sub_25E085808()
{
  OUTLINED_FUNCTION_9_11();
  sub_25E081D84(v0, MEMORY[0x263F8D6C8], (uint64_t)&protocol witness table for Int, v1);
}

uint64_t sub_25E085848()
{
  OUTLINED_FUNCTION_10_8();
  return sub_25E080E38(v0) & 1;
}

void sub_25E085878()
{
  OUTLINED_FUNCTION_9_11();
  sub_25E081D84(v0, MEMORY[0x263F8E5C0], (uint64_t)&protocol witness table for Int64, v1);
}

uint64_t sub_25E0858B8()
{
  OUTLINED_FUNCTION_10_8();
  return sub_25E081014(v0) & 1;
}

void sub_25E0858E4()
{
  OUTLINED_FUNCTION_9_11();
  sub_25E081D84(v0, MEMORY[0x263F8D9D0], (uint64_t)&protocol witness table for UInt, v1);
}

uint64_t sub_25E085924()
{
  OUTLINED_FUNCTION_10_8();
  return sub_25E081014(v0) & 1;
}

void sub_25E085954()
{
  OUTLINED_FUNCTION_9_11();
  sub_25E081D84(v0, MEMORY[0x263F8E970], (uint64_t)&protocol witness table for UInt64, v1);
}

uint64_t sub_25E085994(uint64_t a1, uint64_t *a2)
{
  return sub_25E08091C(a1, *a2, *v2) & 1;
}

uint64_t sub_25E0859BC()
{
  OUTLINED_FUNCTION_35_4();
  return sub_25E081B04(v3, v1, v2, *v0);
}

uint64_t sub_25E0859F0(uint64_t a1, uint64_t *a2)
{
  return sub_25E080BA8(a1, *a2, *v2) & 1;
}

uint64_t sub_25E085A18()
{
  OUTLINED_FUNCTION_35_4();
  return sub_25E081C44(v3, v1, v2, *v0);
}

uint64_t sub_25E085A4C(uint64_t a1, uint64_t *a2)
{
  return sub_25E0802FC(a1, *a2, a2[1], *v2, v2[1]) & 1;
}

uint64_t sub_25E085A74(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_36_4(a1);
  return sub_25E081870(v1, v2, v3, v4, v5);
}

uint64_t sub_25E085A9C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return static _SQLBindableElement<>.columns()(a1, WitnessTable);
}

uint64_t sub_25E085AF8()
{
  swift_getWitnessTable();
  _SQLBindableElement<>.filter(columns:arguments:)();
  return v0 & 1;
}

uint64_t sub_25E085B78@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return _SQLBindableElement<>.subscript.getter(a1, WitnessTable, a2);
}

uint64_t sub_25E085BF4(uint64_t a1, uint64_t *a2)
{
  return sub_25E07F8CC(a1, *a2, a2[1], *(void *)v2, *(void *)(v2 + 8)) & 1;
}

uint64_t sub_25E085C1C(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_36_4(a1);
  return sub_25E081714(v1, v2, v3, v4, v5);
}

uint64_t sub_25E085C44(uint64_t a1)
{
  return sub_25E083A9C(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]) & 1;
}

BOOL sub_25E085C6C(uint64_t a1, uint64_t a2)
{
  return sub_25E084364(a1, a2, v2[8], v2[9], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_25E085CA8()
{
  return 16;
}

__n128 sub_25E085CB4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_25E085CC0()
{
  return swift_getAtKeyPath();
}

uint64_t sub_25E085CEC(void *a1)
{
  return sub_25E08559C(a1, *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

uint64_t sub_25E085D10(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25E085D4C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25E085D88(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25E085DC4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_25E085DCC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t _s12ReferenceBoxCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of static SQLBindableCollection.columns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SQLBindableCollection.filter(columns:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static SQLBindableCollection.result(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static _SQLBindableElement.columns()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _SQLBindableElement.filter(columns:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))() & 1;
}

uint64_t dispatch thunk of _SQLBindableElement.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static _SQLBindableDictionaryElement.dataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _SQLBindPair.columnName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of _SQLBindPair.keyPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of _SQLBindPair.column.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_25E085F0C()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_25E085F48(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_25E0DB3C0();
  swift_retain();
  return a1;
}

void *sub_25E085F88(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_25E085FF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NanoID.Configuration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NanoID.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SQLBindPair()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of static SQLBindElement.bindableValues()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

BOOL sub_25E0860E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = (char *)sub_25E0DAD20();
  if (v10)
  {
    uint64_t v11 = sub_25E0DAD50();
    if (__OFSUB__(a1, v11)) {
      goto LABEL_16;
    }
    v10 += a1 - v11;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    swift_release();
    swift_release();
    __break(1u);
LABEL_19:
    sub_25E06B99C(a4, a5);
    __break(1u);
    JUMPOUT(0x25E0862A8);
  }
  sub_25E0DAD40();
  switch(a5 >> 62)
  {
    case 1uLL:
      if (a4 >> 32 < (int)a4) {
        goto LABEL_17;
      }
      swift_retain();
      char v18 = sub_25E0862B8((int)a4, a4 >> 32, a5 & 0x3FFFFFFFFFFFFFFFLL, v10);
      if (v5) {
        goto LABEL_19;
      }
      BOOL v17 = v18;
      sub_25E06B99C(a4, a5);
LABEL_14:
      sub_25E06B99C(a4, a5);
      return v17;
    case 2uLL:
      uint64_t v14 = *(void *)(a4 + 16);
      uint64_t v15 = *(void *)(a4 + 24);
      swift_retain();
      swift_retain();
      char v16 = sub_25E0862B8(v14, v15, a5 & 0x3FFFFFFFFFFFFFFFLL, v10);
      if (v5) {
        goto LABEL_18;
      }
      BOOL v17 = v16;
      swift_release();
      swift_release();
      goto LABEL_14;
    case 3uLL:
      uint64_t v13 = 0;
      uint64_t v12 = 0;
      goto LABEL_10;
    default:
      uint64_t v12 = a5 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v13 = a4;
LABEL_10:
      BOOL v17 = sub_25E086358(v13, v12, v10);
      goto LABEL_14;
  }
}

uint64_t sub_25E0862B8(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = sub_25E0DAD20();
  char v8 = (char *)result;
  if (result)
  {
    uint64_t result = sub_25E0DAD50();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = sub_25E0DAD40();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

BOOL sub_25E086358(uint64_t a1, uint64_t a2, void *__s1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t __s2 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  if (!__s1) {
    __break(1u);
  }
  return memcmp(__s1, &__s2, BYTE6(a2)) == 0;
}

uint64_t _s15CollectionTableVMa()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_25E086454()
{
  return &off_270AEC7D8;
}

uint64_t _s15CollectionTableV6CursorVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E086478(uint64_t a1, uint64_t a2)
{
  sub_25E0864DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_25E0864DC()
{
  if (!qword_26A6D4A00)
  {
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4A00);
    }
  }
}

uint64_t sub_25E086528(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E086554(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E086580()
{
  uint64_t result = sub_25E0DC170();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_25E0DBCF0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_25E086690(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  unint64_t v11 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + v9 + 8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(v8 + 64);
  }
  else {
    size_t v12 = *(void *)(v8 + 64) + 1;
  }
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v14 = (*(_DWORD *)(v5 + 80) | v9) & 0x100000;
  if (v13 > 7 || v14 != 0 || ((v12 + (v11 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v18 = v7;
    uint64_t v19 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v11) & v19);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v18))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v19), v20, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)a1 + v11) & v19, v20, v18);
      __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v11) & v19, 0, 1, v18);
    }
    unint64_t v22 = ((unint64_t)v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = *(void *)v22;
    unint64_t v24 = ((((unint64_t)a1 + v11) & v19) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v22 + 8);
    *(void *)unint64_t v24 = v23;
  }
  return a1;
}

uint64_t sub_25E0868FC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  unint64_t v4 = (*(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v5 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v9 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v5);
  }
  return result;
}

uint64_t sub_25E086A54(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  *(void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 8;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  unsigned int v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    uint64_t v17 = v9 + 16;
    v18(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 68);
    size_t v15 = *(void *)(v17 + 48);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (uint64_t)v12 + v19 + 7;
  unint64_t v21 = ((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_25E086C18(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  *(void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 8;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  unsigned int v13 = (const void *)((v11 + a2) & ~v10);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (v7)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v12, v13, v17);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v18 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v19 = (uint64_t)v12 + v18 + 7;
  unint64_t v20 = ((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  return a1;
}

uint64_t sub_25E086E48(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  *(void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 8;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  unsigned int v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    int v14 = *(_DWORD *)(v9 + 84);
    size_t v15 = *(void *)(v9 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v12, v13, v16);
  }
  else
  {
    uint64_t v18 = *(void (**)(void *, const void *, uint64_t))(v9 + 32);
    uint64_t v17 = v9 + 32;
    v18(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    int v14 = *(_DWORD *)(v17 + 52);
    size_t v15 = *(void *)(v17 + 32);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = (uint64_t)v12 + v19 + 7;
  unint64_t v21 = ((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t sub_25E08700C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  *(void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 + v10 + 8;
  size_t v12 = (void *)((v11 + a1) & ~v10);
  unsigned int v13 = (const void *)((v11 + a2) & ~v10);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (v7)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    int v15 = *(_DWORD *)(v9 + 84);
    size_t v16 = *(void *)(v9 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v12, v13, v17);
LABEL_12:
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v18 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v19 = (uint64_t)v12 + v18 + 7;
  unint64_t v20 = ((unint64_t)v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v21 = *(unsigned char *)(v20 + 8);
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  return a1;
}

uint64_t sub_25E08723C(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = v6;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v13 = 7;
  }
  else {
    uint64_t v13 = 8;
  }
  if (!a2) {
    return 0;
  }
  unint64_t v14 = ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  if (v11 < a2)
  {
    unint64_t v15 = ((v13 + *(void *)(*(void *)(v7 - 8) + 64) + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v15 < 4) {
      unsigned int v16 = ((a2 - v11 + 255) >> (8 * v15)) + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = a1[v15];
        if (!a1[v15]) {
          break;
        }
        goto LABEL_27;
      case 2:
        int v19 = *(unsigned __int16 *)&a1[v15];
        if (*(_WORD *)&a1[v15]) {
          goto LABEL_27;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25E0874C4);
      case 4:
        int v19 = *(_DWORD *)&a1[v15];
        if (!v19) {
          break;
        }
LABEL_27:
        int v20 = (v19 - 1) << (8 * v15);
        if (v15 >= 4) {
          int v20 = 0;
        }
        if (v15 == 1) {
          int v21 = *a1;
        }
        else {
          int v21 = *(_DWORD *)a1;
        }
        return v11 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (!v11) {
    return 0;
  }
  if (v6 >= v10)
  {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v6, AssociatedTypeWitness);
  }
  else
  {
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((unint64_t)&a1[v14] & ~v12, v9, v7);
    if (EnumTagSinglePayload >= 2) {
      return EnumTagSinglePayload - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_25E0874D8(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  int v10 = 0;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12) {
    unsigned int v13 = v12 - 1;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v13 <= v8) {
    unsigned int v14 = v8;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  if (v12) {
    size_t v17 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    size_t v17 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  size_t v18 = ((v17 + ((v15 + v16) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v19 = 8 * v18;
  if (v14 < a3)
  {
    if (v18 <= 3) {
      unsigned int v20 = ((a3 - v14 + 255) >> v19) + 1;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v10 = v21;
    }
    else {
      int v10 = 0;
    }
  }
  if (v14 < a2)
  {
    unsigned int v22 = ~v14 + a2;
    unsigned int v23 = v22 >> v19;
    unsigned int v24 = (~(_BYTE)v14 + a2);
    if (v18 < 4) {
      int v25 = v23 + 1;
    }
    else {
      int v25 = 1;
    }
    if (v18 >= 4) {
      unsigned int v26 = v22;
    }
    else {
      unsigned int v26 = v24;
    }
    bzero(a1, v18);
    if (v18 == 1) {
      *a1 = v26;
    }
    else {
      *(_DWORD *)a1 = v26;
    }
    switch(v10)
    {
      case 1:
        a1[v18] = v25;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v25;
        return;
      case 3:
        goto LABEL_66;
      case 4:
        *(_DWORD *)&a1[v18] = v25;
        return;
      default:
        return;
    }
  }
  switch(v10)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_66:
      __break(1u);
      JUMPOUT(0x25E087854);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      if (v8 < v13)
      {
        a1 = (unsigned char *)((unint64_t)&a1[v15 + v16] & ~v16);
        if (v13 < a2)
        {
          if (v17 <= 3) {
            int v27 = ~(-1 << (8 * v17));
          }
          else {
            int v27 = -1;
          }
          if (v17)
          {
            int v28 = v27 & (~v13 + a2);
            if (v17 <= 3) {
              int v29 = v17;
            }
            else {
              int v29 = 4;
            }
            bzero(a1, v17);
            switch(v29)
            {
              case 2:
                *(_WORD *)a1 = v28;
                break;
              case 3:
                *(_WORD *)a1 = v28;
                a1[2] = BYTE2(v28);
                break;
              case 4:
                goto LABEL_53;
              default:
                *a1 = v28;
                break;
            }
          }
          return;
        }
        uint64_t v30 = (a2 + 1);
        uint64_t v31 = (uint64_t)a1;
        goto LABEL_60;
      }
      if (v8 >= a2)
      {
        uint64_t v31 = (uint64_t)a1;
        uint64_t v30 = a2;
        uint64_t v12 = v8;
        uint64_t v9 = AssociatedTypeWitness;
LABEL_60:
        __swift_storeEnumTagSinglePayload(v31, v30, v12, v9);
        return;
      }
      if (v15)
      {
        int v28 = ~v8 + a2;
        bzero(a1, v15);
LABEL_53:
        *(_DWORD *)a1 = v28;
      }
      return;
  }
}

uint64_t sub_25E087890(void *a1)
{
  return sub_25E085CEC(a1) & 1;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return sub_25E0DC140();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  return *(void *)(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return sub_25E0DC380();
}

uint64_t OUTLINED_FUNCTION_18_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_26_6()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return sub_25E0DBE80();
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return 0x65756C6176;
}

uint64_t OUTLINED_FUNCTION_32_5(uint64_t result)
{
  *(void *)(v1 - 72) = result;
  return result;
}

void OUTLINED_FUNCTION_33_3()
{
  uint64_t v2 = *(void *)(v1 - 128);
  *(void *)(v1 - 104) = v0;
  *(void *)(v1 - 96) = v2;
}

uint64_t OUTLINED_FUNCTION_36_4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return sub_25E0DB630();
}

unint64_t sub_25E087AF8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25E087F0C(*a1, a2);
}

uint64_t sub_25E087B14@<X0>(unsigned char *a1@<X8>)
{
  sub_25E0DB3C0();
  SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v7);
  char v2 = v7;
  if (v7 == 3)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t v3 = v7;
    unint64_t v4 = v8;
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v5 = v3;
    v5[1] = v4;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v2;
  }
  return result;
}

uint64_t sub_25E087C64@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25E0DC210();
  if (!v2)
  {
    char v3 = 0;
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    char v3 = 1;
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v3;
    return result;
  }
  sub_25E0DBE80();
  sub_25E0DB630();
  sub_25E0DB630();
  sub_25E0DB630();
  sub_25E0DC0D0();
  sub_25E03E00C();
  swift_allocError();
  *uint64_t v5 = 0;
  v5[1] = 0xE000000000000000;
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E087DB8@<X0>(unsigned char *a1@<X8>)
{
  sub_25E0DB3C0();
  SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v7);
  char v2 = v7;
  if (v7 == 6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    uint64_t v3 = v7;
    unint64_t v4 = v8;
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v5 = v3;
    v5[1] = v4;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v2;
  }
  return result;
}

unint64_t sub_25E087F0C@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 3)
  {
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    sub_25E03E00C();
    swift_allocError();
    *char v2 = 0;
    v2[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void RawRepresentable<>.init(nativeValue:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v36 = v7;
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v34 = v9;
  uint64_t v35 = v8;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  uint64_t v41 = (char *)&v34 - v11;
  uint64_t v37 = v4;
  uint64_t v38 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v12);
  unsigned int v14 = (char *)&v34 - v13;
  uint64_t v15 = swift_checkMetadataState();
  OUTLINED_FUNCTION_0_3();
  uint64_t v39 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_8_13();
  MEMORY[0x270FA5388](v18);
  unsigned int v20 = (char *)&v34 - v19;
  OUTLINED_FUNCTION_15_0();
  v21();
  unsigned int v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 56);
  BOOL v40 = v20;
  v22(v14, v15, v2);
  if (v0)
  {
    OUTLINED_FUNCTION_44_4();
    v23();
  }
  else
  {
    uint64_t v24 = v39;
    OUTLINED_FUNCTION_15_0();
    v25();
    uint64_t v26 = (uint64_t)v41;
    uint64_t v27 = v38;
    sub_25E0DB7F0();
    if (__swift_getEnumTagSinglePayload(v26, 1, v27) == 1)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v35);
      OUTLINED_FUNCTION_13_7();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_11_7();
      sub_25E0DC650();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_8();
      int v28 = v40;
      sub_25E0DC350();
      uint64_t v29 = v42;
      uint64_t v30 = v43;
      sub_25E03E00C();
      OUTLINED_FUNCTION_25_2();
      *uint64_t v31 = v29;
      v31[1] = v30;
      swift_willThrow();
      OUTLINED_FUNCTION_44_4();
      v32();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v15);
    }
    else
    {
      OUTLINED_FUNCTION_44_4();
      v33();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v40, v15);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v36, v41, v27);
    }
  }
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

uint64_t sub_25E088388@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0B1CD0(*v1);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

void RawRepresentable<>.nativeValue.getter()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v1 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_16_7();
  (*(void (**)(uint64_t, uint64_t))(v1 + 64))(AssociatedTypeWitness, v1);
  uint64_t v4 = OUTLINED_FUNCTION_39_4();
  v5(v4);
  OUTLINED_FUNCTION_4_1();
}

void sub_25E08848C(sqlite3_context *a1)
{
  sub_25E088660(a1, *v1);
}

uint64_t sub_25E0884A8(Swift::OpaquePointer a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E088510(Swift::OpaquePointer a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E08857C(Swift::OpaquePointer a1)
{
  return swift_bridgeObjectRelease();
}

void sub_25E088660(sqlite3_context *a1, unsigned __int8 a2)
{
}

void RawRepresentable<>.result(for:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_16_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, AssociatedTypeWitness, v1);
  uint64_t v6 = OUTLINED_FUNCTION_39_4();
  v7(v6);
  OUTLINED_FUNCTION_4_1();
}

sqlite3_stmt *sub_25E088760@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_25E088BA4(a1, a2, a3);
}

uint64_t sub_25E088778@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_25E0DB3C0();
    SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v10);
    char v6 = v10;
    if (v10 == 3)
    {
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_25E0DBE80();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DC0D0();
      uint64_t v7 = v10;
      unint64_t v8 = v11;
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v9 = v7;
      v9[1] = v8;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v6;
    }
  }
  return result;
}

uint64_t sub_25E0888D0@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, char *a3@<X8>)
{
  uint64_t result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_25E0DB3C0();
    uint64_t v6 = sub_25E0DC210();
    swift_bridgeObjectRelease();
    if (!v6)
    {
      char v7 = 0;
      goto LABEL_6;
    }
    if (v6 == 1)
    {
      char v7 = 1;
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v7;
      return result;
    }
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    sub_25E03E00C();
    swift_allocError();
    *unint64_t v8 = 0;
    v8[1] = 0xE000000000000000;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E088A48@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = String.init(statement:index:)(a1, a2)._countAndFlagsBits;
  if (!v5)
  {
    sub_25E0DB3C0();
    SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v10);
    char v6 = v10;
    if (v10 == 6)
    {
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      sub_25E0DBE80();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DC0D0();
      uint64_t v7 = v10;
      unint64_t v8 = v11;
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v9 = v7;
      v9[1] = v8;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v6;
    }
  }
  return result;
}

sqlite3_stmt *sub_25E088BA4@<X0>(sqlite3_stmt *result@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = (sqlite3_stmt *)sqlite3_column_int64(result, a2);
  if ((unint64_t)result >= 3)
  {
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v4 = 0;
    v4[1] = 0xE000000000000000;
    return (sqlite3_stmt *)swift_willThrow();
  }
  else
  {
    *a3 = (_BYTE)result;
  }
  return result;
}

void RawRepresentable<>.init(statement:index:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v24 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_24_7();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_33_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v7, v5, AssociatedTypeWitness, v3);
  if (!v0)
  {
    OUTLINED_FUNCTION_15_0();
    v16(v15);
    sub_25E0DB7F0();
    OUTLINED_FUNCTION_18_8();
    if (v17)
    {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v8);
      OUTLINED_FUNCTION_13_7();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_59_1();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_8();
      OUTLINED_FUNCTION_57_1();
      sub_25E03E00C();
      uint64_t v18 = OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_26_7(v18, v19);
      uint64_t v22 = OUTLINED_FUNCTION_1_12();
    }
    else
    {
      uint64_t v20 = OUTLINED_FUNCTION_1_12();
      v21(v20);
      OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_32_6();
    }
    v23(v22);
  }
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_4_1();
}

sqlite3_stmt *sub_25E088F20(sqlite3_stmt *a1, uint64_t a2)
{
  return sub_25E0890F4(a1, a2, *v2);
}

uint64_t sub_25E088F3C(Swift::OpaquePointer a1, Swift::Int a2)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E088FA4(Swift::OpaquePointer a1, Swift::Int a2)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E089010(Swift::OpaquePointer a1, Swift::Int a2)
{
  return swift_bridgeObjectRelease();
}

sqlite3_stmt *sub_25E0890F4(sqlite3_stmt *result, uint64_t a2, unsigned __int8 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    return (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
  }
  __break(1u);
  return result;
}

void RawRepresentable<>.bind(to:index:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_3();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_16_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8))(v6, v4, AssociatedTypeWitness, v2);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, AssociatedTypeWitness);
  OUTLINED_FUNCTION_4_1();
}

unint64_t sub_25E08922C@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25E0896D0(a1, a2);
}

uint64_t sub_25E089244@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  uint64_t result = sub_25E08ADB8((uint64_t)v5);
  if (!v2)
  {
    sub_25E0DB3C0();
    SQLDatabase.IndexInfo.IndexType.init(rawValue:)((char *)&v11);
    char v7 = v11;
    if (v11 == 3)
    {
      uint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_25E0DBE80();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DC0D0();
      uint64_t v8 = v11;
      unint64_t v9 = v12;
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v10 = v8;
      v10[1] = v9;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
  }
  return result;
}

uint64_t sub_25E0893BC@<X0>(sqlite3_value *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  uint64_t result = sub_25E08ADB8((uint64_t)v5);
  if (!v2)
  {
    sub_25E0DB3C0();
    uint64_t v7 = sub_25E0DC210();
    swift_bridgeObjectRelease();
    if (!v7)
    {
      char v8 = 0;
      goto LABEL_6;
    }
    if (v7 == 1)
    {
      char v8 = 1;
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v8;
      return result;
    }
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    sub_25E03E00C();
    swift_allocError();
    *unint64_t v9 = 0;
    v9[1] = 0xE000000000000000;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E089554@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  uint64_t result = sub_25E08ADB8((uint64_t)v5);
  if (!v2)
  {
    sub_25E0DB3C0();
    SQLDatabase.Options.JournalMode.init(rawValue:)((char *)&v11);
    char v7 = v11;
    if (v11 == 6)
    {
      uint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_25E0DBE80();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DB630();
      sub_25E0DC0D0();
      uint64_t v8 = v11;
      unint64_t v9 = v12;
      sub_25E03E00C();
      swift_allocError();
      *uint64_t v10 = v8;
      v10[1] = v9;
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v7;
    }
  }
  return result;
}

unint64_t sub_25E0896D0@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sqlite3_value_int64(a1);
  if (result >= 3)
  {
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0DC0D0();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v4 = 0;
    v4[1] = 0xE000000000000000;
    return swift_willThrow();
  }
  else
  {
    *a2 = result;
  }
  return result;
}

void RawRepresentable<>.init(functionArgument:)()
{
}

{
  sub_25E08C5F4();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t);
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  void (*v18)(void);

  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_22_6(v1);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_35_5();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_8_13();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_33_4();
  uint64_t v5 = OUTLINED_FUNCTION_28_7();
  v6(v5);
  if (!v0)
  {
    char v7 = OUTLINED_FUNCTION_9_12();
    v8(v7);
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_18_8();
    if (v9)
    {
      uint64_t v10 = OUTLINED_FUNCTION_15_8();
      v11(v10);
      OUTLINED_FUNCTION_13_7();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_59_1();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_8();
      OUTLINED_FUNCTION_57_1();
      sub_25E03E00C();
      unint64_t v12 = OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_26_7(v12, v13);
      uint64_t v14 = OUTLINED_FUNCTION_1_12();
      v15(v14);
    }
    else
    {
      uint64_t v16 = OUTLINED_FUNCTION_1_12();
      v17(v16);
      OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_32_6();
      v18();
    }
  }
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_4_1();
}

uint64_t sub_25E08980C(uint64_t a1)
{
  OUTLINED_FUNCTION_62_0(a1);
  return sub_25E087B14(v1);
}

uint64_t sub_25E089828@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08D090((uint64_t (*)(void))sub_25E0B1BB4, a1);
}

uint64_t sub_25E089854(Swift::OpaquePointer a1)
{
  return sub_25E0884A8(a1);
}

uint64_t sub_25E089870@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_25E088778(a1, a2, a3);
}

uint64_t sub_25E089888(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_25E088F3C(a1, a2);
}

uint64_t sub_25E0898A4@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25E089244(a1, a2);
}

uint64_t sub_25E0898BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4 = a1 == 1280070990 && a2 == 0xE400000000000000;
  if (v4 || (OUTLINED_FUNCTION_17_6() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v8 = 0;
  }
  else
  {
    BOOL v9 = a1 == 0x52454745544E49 && a2 == 0xE700000000000000;
    if (v9 || (OUTLINED_FUNCTION_17_6() & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
      char v8 = 1;
    }
    else
    {
      BOOL v10 = a1 == 1279346002 && a2 == 0xE400000000000000;
      if (v10 || (OUTLINED_FUNCTION_17_6() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v8 = 2;
      }
      else
      {
        BOOL v11 = a1 == 1415071060 && a2 == 0xE400000000000000;
        if (v11 || (OUTLINED_FUNCTION_17_6() & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          char v8 = 3;
        }
        else
        {
          BOOL v12 = a1 == 1112493122 && a2 == 0xE400000000000000;
          if (v12 || (OUTLINED_FUNCTION_17_6() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            char v8 = 4;
          }
          else if (a1 == 0x4E4544444948 && a2 == 0xE600000000000000)
          {
            uint64_t result = swift_bridgeObjectRelease();
            char v8 = 5;
          }
          else
          {
            char v14 = OUTLINED_FUNCTION_17_6();
            uint64_t result = swift_bridgeObjectRelease();
            if (v14) {
              char v8 = 5;
            }
            else {
              char v8 = 6;
            }
          }
        }
      }
    }
  }
  *a3 = v8;
  return result;
}

BOOL static SQLDataType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDataType.hash(into:)()
{
  return sub_25E0DC4E0();
}

uint64_t SQLDataType.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t SQLValue<>.nativeValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t SQLValue<>.init(nativeValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
}

void SQLNull.debugSQL.getter(void *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_25E089BDC()
{
  return nullsub_1();
}

uint64_t SQLNull.description.getter()
{
  return 1280070990;
}

uint64_t sub_25E089C14()
{
  return 1280070990;
}

void static SQLNull.dataType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.init(raw:)(Swift::OpaquePointer raw)
{
  if (sqlite3_value_type((sqlite3_value *)raw._rawValue) != 5)
  {
    OUTLINED_FUNCTION_56_1();
    swift_bridgeObjectRelease();
    sqlite3_value_type((sqlite3_value *)raw._rawValue);
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_51_1();
    sub_25E03E00C();
    OUTLINED_FUNCTION_25_2();
    *uint64_t v2 = 0xD00000000000001ELL;
    v2[1] = 0x800000025E0E38A0;
    swift_willThrow();
  }
}

uint64_t static SQLNull.== infix(_:_:)()
{
  return 1;
}

uint64_t SQLNull.hashValue.getter()
{
  return sub_25E0DC500();
}

void sub_25E089D40(Swift::OpaquePointer a1)
{
}

uint64_t sub_25E089D58()
{
  return SQLNull.hashValue.getter();
}

uint64_t sub_25E089D70()
{
  return sub_25E0DC500();
}

void sub_25E089DA8(void *a1@<X8>)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.result(for:)(Swift::OpaquePointer a1)
{
}

void sub_25E089DE8(Swift::OpaquePointer a1)
{
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  int v2 = index;
  if (index > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  if (sqlite3_column_type((sqlite3_stmt *)statement._rawValue, index) != 5)
  {
    OUTLINED_FUNCTION_56_1();
    swift_bridgeObjectRelease();
    sqlite3_column_type((sqlite3_stmt *)statement._rawValue, v2);
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_51_1();
    sub_25E03E00C();
    OUTLINED_FUNCTION_25_2();
    *BOOL v4 = 0xD00000000000001ELL;
    v4[1] = 0x800000025E0E38A0;
    swift_willThrow();
  }
}

void sub_25E089EFC(Swift::OpaquePointer a1, Swift::Int a2)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SQLNull.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_null((sqlite3_stmt *)to._rawValue, index);
    return;
  }
  __break(1u);
}

void sub_25E089F5C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void static Bool.dataType.getter(unsigned char *a1@<X8>)
{
}

uint64_t Bool.debugSQL.getter@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 48;
  if (result) {
    uint64_t v2 = 49;
  }
  *a2 = v2;
  a2[1] = 0xE100000000000000;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(raw:)(Swift::OpaquePointer raw)
{
  int v1 = sqlite3_value_int((sqlite3_value *)raw._rawValue);
  return OUTLINED_FUNCTION_45_4(v1);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  int v1 = sqlite3_value_int((sqlite3_value *)functionArgument._rawValue);
  return OUTLINED_FUNCTION_45_4(v1);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_5:
    __break(1u);
    return (Swift::Bool)statement._rawValue;
  }
  int v2 = sqlite3_column_int((sqlite3_stmt *)statement._rawValue, index);
  LOBYTE(statement._rawValue) = OUTLINED_FUNCTION_45_4(v2);
  return (Swift::Bool)statement._rawValue;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_int((sqlite3_stmt *)to._rawValue, index, v2 & 1);
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Bool.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_int((sqlite3_context *)a1._rawValue, v1 & 1);
}

uint64_t sub_25E08A0A4@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25E03B020(*a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_25E08A0D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25E03B020(*v1);
  *a1 = result & 1;
  return result;
}

BOOL sub_25E08A110@<W0>(Swift::OpaquePointer a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = Bool.init(raw:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

void sub_25E08A140(Swift::OpaquePointer a1)
{
}

BOOL sub_25E08A15C@<W0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL result = Bool.init(statement:index:)(a1, a2);
  if (!v5) {
    *a3 = result;
  }
  return result;
}

void sub_25E08A18C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

uint64_t sub_25E08A1A8@<X0>(uint64_t *a1@<X8>)
{
  return Bool.debugSQL.getter(*v1, a1);
}

BOOL sub_25E08A1B4@<W0>(Swift::OpaquePointer a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = Bool.init(functionArgument:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

uint64_t Int.debugSQL.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08A638(a1);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(raw:)(Swift::OpaquePointer raw)
{
  return sqlite3_value_int64((sqlite3_value *)raw._rawValue);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return sqlite3_value_int64((sqlite3_value *)functionArgument._rawValue);
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  return (Swift::Int)sub_25E08A3F4((sqlite3_stmt *)statement._rawValue, index);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sub_25E08A454((sqlite3_stmt *)to._rawValue, index, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_int64((sqlite3_context *)a1._rawValue, v1);
}

uint64_t sub_25E08A2A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = nullsub_1(*a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_25E08A2D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

Swift::Int sub_25E08A304@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = Int.init(raw:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

void sub_25E08A330(Swift::OpaquePointer a1)
{
}

Swift::Int sub_25E08A34C@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result = Int.init(statement:index:)(a1, a2);
  if (!v5) {
    *a3 = result;
  }
  return result;
}

void sub_25E08A378(Swift::OpaquePointer a1, Swift::Int a2)
{
}

uint64_t sub_25E08A394@<X0>(uint64_t *a1@<X8>)
{
  return Int.debugSQL.getter(a1);
}

Swift::Int sub_25E08A39C@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = Int.init(functionArgument:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

uint64_t Int64.debugSQL.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08A638(a1);
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  return (Swift::Int64)sub_25E08A3F4((sqlite3_stmt *)statement._rawValue, index);
}

sqlite3_stmt *sub_25E08A3F4(sqlite3_stmt *result, uint64_t a2)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    return (sqlite3_stmt *)sqlite3_column_int64(result, a2);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sub_25E08A454((sqlite3_stmt *)to._rawValue, index, v2);
}

sqlite3_stmt *sub_25E08A454(sqlite3_stmt *result, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    return (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E08A49C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E03ECA4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_25E08A4CC@<X0>(uint64_t *a1@<X8>)
{
  return Int64.debugSQL.getter(a1);
}

uint64_t UInt.debugSQL.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08A638(a1);
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(raw:)(Swift::OpaquePointer raw)
{
  return sub_25E08A690((sqlite3_value *)raw._rawValue);
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return sub_25E08A690((sqlite3_value *)functionArgument._rawValue);
}

Swift::UInt __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  return sub_25E08A718((sqlite3_stmt *)statement._rawValue, index);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sub_25E08A7A8((sqlite3_stmt *)to._rawValue, index, v2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt.result(for:)(Swift::OpaquePointer a1)
{
  sub_25E08A810((sqlite3_context *)a1._rawValue, v1);
}

Swift::UInt sub_25E08A560@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  Swift::UInt result = UInt.init(raw:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

void sub_25E08A58C(Swift::OpaquePointer a1)
{
}

Swift::UInt sub_25E08A5A8@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::UInt *a3@<X8>)
{
  Swift::UInt result = UInt.init(statement:index:)(a1, a2);
  if (!v5) {
    *a3 = result;
  }
  return result;
}

void sub_25E08A5D4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

uint64_t sub_25E08A5F0@<X0>(uint64_t *a1@<X8>)
{
  return UInt.debugSQL.getter(a1);
}

Swift::UInt sub_25E08A5F8@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  Swift::UInt result = UInt.init(functionArgument:)(a1);
  if (!v4) {
    *a2 = result;
  }
  return result;
}

uint64_t UInt64.debugSQL.getter@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08A638(a1);
}

uint64_t sub_25E08A638@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0DC2D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(raw:)(Swift::OpaquePointer raw)
{
  return sub_25E08A690((sqlite3_value *)raw._rawValue);
}

sqlite3_int64 sub_25E08A690(sqlite3_value *a1)
{
  sqlite3_int64 result = sqlite3_value_int64(a1);
  if (result < 0)
  {
    OUTLINED_FUNCTION_7_11();
    sqlite3_int64 result = OUTLINED_FUNCTION_6_10();
    __break(1u);
  }
  return result;
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return sub_25E08A690((sqlite3_value *)functionArgument._rawValue);
}

Swift::UInt64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  return sub_25E08A718((sqlite3_stmt *)statement._rawValue, index);
}

sqlite3_int64 sub_25E08A718(sqlite3_stmt *a1, uint64_t a2)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sqlite3_int64 result = sqlite3_column_int64(a1, a2);
  if (result < 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_7_11();
    sqlite3_int64 result = OUTLINED_FUNCTION_6_10();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  sub_25E08A7A8((sqlite3_stmt *)to._rawValue, index, v2);
}

sqlite3_stmt *sub_25E08A7A8(sqlite3_stmt *result, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((a3 & 0x8000000000000000) == 0) {
    return (sqlite3_stmt *)sqlite3_bind_int64(result, a2, a3);
  }
LABEL_7:
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> UInt64.result(for:)(Swift::OpaquePointer a1)
{
  sub_25E08A810((sqlite3_context *)a1._rawValue, v1);
}

void sub_25E08A810(sqlite3_context *a1, sqlite3_int64 a2)
{
  if (a2 < 0) {
    __break(1u);
  }
  else {
    sqlite3_result_int64(a1, a2);
  }
}

uint64_t sub_25E08A840@<X0>(uint64_t *a1@<X8>)
{
  return UInt64.debugSQL.getter(a1);
}

void static Double.dataType.getter(unsigned char *a1@<X8>)
{
}

void Double.debugSQL.getter()
{
  uint64_t v0 = sub_25E0DBB50();
  OUTLINED_FUNCTION_58_0(v0, v1, v2, v3, v4, v5, v6, v7, 0, 0xE000000000000000);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(raw:)(Swift::OpaquePointer raw)
{
  return sqlite3_value_double((sqlite3_value *)raw._rawValue);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return sqlite3_value_double((sqlite3_value *)functionArgument._rawValue);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    return sqlite3_column_double((sqlite3_stmt *)statement._rawValue, index);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_double((sqlite3_stmt *)to._rawValue, index, v2);
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Double.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_double((sqlite3_context *)a1._rawValue, v1);
}

uint64_t sub_25E08A9A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = nullsub_1(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void sub_25E08A9D4(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = nullsub_1(a1);
}

void sub_25E08AA08(Swift::OpaquePointer a1@<X0>, double *a2@<X8>)
{
  double v3 = Double.init(raw:)(a1);
  if (!v4) {
    *a2 = v3;
  }
}

void sub_25E08AA34(Swift::OpaquePointer a1)
{
}

void sub_25E08AA50(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, double *a3@<X8>)
{
  double v4 = Double.init(statement:index:)(a1, a2);
  if (!v5) {
    *a3 = v4;
  }
}

void sub_25E08AA7C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_25E08AA98()
{
}

void sub_25E08AAA4(Swift::OpaquePointer a1@<X0>, double *a2@<X8>)
{
  double v3 = Double.init(functionArgument:)(a1);
  if (!v4) {
    *a2 = v3;
  }
}

void Float.debugSQL.getter()
{
  uint64_t v0 = sub_25E0DBB70();
  OUTLINED_FUNCTION_58_0(v0, v1, v2, v3, v4, v5, v6, v7, 0, 0xE000000000000000);
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(raw:)(Swift::OpaquePointer raw)
{
  return sqlite3_value_double((sqlite3_value *)raw._rawValue);
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return sqlite3_value_double((sqlite3_value *)functionArgument._rawValue);
}

Swift::Float __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    return sqlite3_column_double((sqlite3_stmt *)statement._rawValue, index);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (index <= 0x7FFFFFFF)
  {
    sqlite3_bind_double((sqlite3_stmt *)to._rawValue, index, v2);
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Float.result(for:)(Swift::OpaquePointer a1)
{
  sqlite3_result_double((sqlite3_context *)a1._rawValue, v1);
}

void sub_25E08AC38(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  double v4 = nullsub_1(a1);
  if (!v2) {
    *a2 = LODWORD(v4);
  }
}

void sub_25E08AC68(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  double v3 = nullsub_1(a1);
  *a2 = LODWORD(v3);
}

void sub_25E08AC9C(Swift::OpaquePointer a1@<X0>, float *a2@<X8>)
{
  float v3 = Float.init(raw:)(a1);
  if (!v4) {
    *a2 = v3;
  }
}

void sub_25E08ACC8(Swift::OpaquePointer a1)
{
}

void sub_25E08ACE4(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, float *a3@<X8>)
{
  float v4 = Float.init(statement:index:)(a1, a2);
  if (!v5) {
    *a3 = v4;
  }
}

void sub_25E08AD10(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_25E08AD2C()
{
}

void sub_25E08AD34(Swift::OpaquePointer a1@<X0>, float *a2@<X8>)
{
  float v3 = Float.init(functionArgument:)(a1);
  if (!v4) {
    *a2 = v3;
  }
}

void static String.dataType.getter(unsigned char *a1@<X8>)
{
}

void String.debugSQL.getter()
{
  sub_25E0DB630();
  uint64_t v0 = sub_25E0DB630();
  OUTLINED_FUNCTION_58_0(v0, v1, v2, v3, v4, v5, v6, v7, 39, 0xE100000000000000);
}

uint64_t sub_25E08ADB8(uint64_t a1)
{
  if (a1)
  {
    uint64_t result = sub_25E0DB4C0();
    if (v2) {
      return result;
    }
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC0D0();
    unint64_t v3 = 0xE000000000000000;
    sub_25E03E00C();
    OUTLINED_FUNCTION_25_2();
    *uint64_t v4 = 0;
  }
  else
  {
    sub_25E03E00C();
    OUTLINED_FUNCTION_25_2();
    *uint64_t v4 = 0xD00000000000002DLL;
    unint64_t v3 = 0x800000025E0E3850;
  }
  v4[1] = v3;
  return swift_willThrow();
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(raw:)(Swift::OpaquePointer raw)
{
  sqlite3_value_text((sqlite3_value *)raw._rawValue);
  OUTLINED_FUNCTION_61_1();
  uint64_t v2 = sub_25E08ADB8(v1);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

void sub_25E08AF08(void *a1@<X0>, void *a2@<X8>)
{
  nullsub_1(*a1);
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
}

uint64_t sub_25E08AF3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0B2098(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25E08AF70@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08B254((uint64_t (*)(void))String.init(raw:), a1);
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(statement:index:)(Swift::OpaquePointer statement, Swift::Int index)
{
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  int v2 = index;
  if (index > 0x7FFFFFFF)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  rawValue = (sqlite3_stmt *)statement._rawValue;
  uint64_t v4 = sqlite3_column_text((sqlite3_stmt *)statement._rawValue, index);
  sqlite3_column_bytes(rawValue, v2);
  statement._rawValue = (void *)sub_25E08ADB8((uint64_t)v4);
LABEL_6:
  result._object = (void *)index;
  result._uint64_t countAndFlagsBits = (uint64_t)statement._rawValue;
  return result;
}

uint64_t sub_25E08B014@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::String *a3@<X8>)
{
  Swift::String v5 = String.init(statement:index:)(a1, a2);
  uint64_t result = v5._countAndFlagsBits;
  if (!v6) {
    *a3 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  uint64_t v3 = v2;
  sub_25E0DB540();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_47_2();
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v7 = sub_25E0DBD90();
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_44_4();
  v10(v8, v9);
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (index < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (index > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *(void *)(v7 + 16);
  if (v3)
  {
    if (qword_26A6D4220 == -1)
    {
LABEL_6:
      sqlite3_bind_text64((sqlite3_stmt *)to._rawValue, index, (const char *)(v7 + 32), v3 - 1, (void (__cdecl *)(void *))qword_26A6DDCD8, 1u);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_50_2();
      return;
    }
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
LABEL_11:
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_6_10();
  __break(1u);
}

void sub_25E08B1C4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_25E08B1E0()
{
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  sqlite3_value_text((sqlite3_value *)functionArgument._rawValue);
  OUTLINED_FUNCTION_61_1();
  uint64_t v2 = sub_25E08ADB8(v1);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t sub_25E08B228@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08B254((uint64_t (*)(void))String.init(functionArgument:), a1);
}

uint64_t sub_25E08B254@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> String.result(for:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = sub_25E0DB540();
  OUTLINED_FUNCTION_0_3();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_48_3();
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v7 = sub_25E0DBD90();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  if (!v7)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_7:
    OUTLINED_FUNCTION_7_11();
    OUTLINED_FUNCTION_6_10();
    __break(1u);
    return;
  }
  if (qword_26A6D4220 != -1) {
    swift_once();
  }
  sqlite3_result_text64((sqlite3_context *)a1._rawValue, (const char *)(v7 + 32), v8 - 1, (void (__cdecl *)(void *))qword_26A6DDCD8, 1u);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50_2();
}

void sub_25E08B3E8(Swift::OpaquePointer a1)
{
}

void Optional<A>.debugSQL.getter(void *a1@<X8>)
{
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = OUTLINED_FUNCTION_5_10(v4, v14);
  v6(v5);
  OUTLINED_FUNCTION_36_5();
  if (v7)
  {
    OUTLINED_FUNCTION_42_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_5();
    v8();
    uint64_t v9 = OUTLINED_FUNCTION_55_2();
    v10(v9);
    OUTLINED_FUNCTION_12_10();
    v11();
    uint64_t v13 = v15;
    uint64_t v12 = v16;
  }
  *a1 = v13;
  a1[1] = v12;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  char v7;
  void (*v8)(void);
  uint64_t v9;
  void (*v10)(uint64_t);
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = OUTLINED_FUNCTION_5_10(v4, v14);
  v6(v5);
  OUTLINED_FUNCTION_36_5();
  if (v7)
  {
    OUTLINED_FUNCTION_42_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_5();
    v8();
    uint64_t v9 = OUTLINED_FUNCTION_55_2();
    v10(v9);
    OUTLINED_FUNCTION_12_10();
    v11();
    uint64_t v13 = v15;
    uint64_t v12 = v16;
  }
  *a1 = v13;
  a1[1] = v12;
}

void Optional<A>.bind(to:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_3_9();
  a19 = v21;
  a20 = v22;
  a10 = v23;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  OUTLINED_FUNCTION_1_5();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_49_1();
  uint64_t v32 = *(void *)(v31 + 16);
  OUTLINED_FUNCTION_1_5();
  uint64_t v34 = v33;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v20, v38);
  if (__swift_getEnumTagSinglePayload(v20, 1, v32) != 1)
  {
    OUTLINED_FUNCTION_13_5();
    v41();
    (*(void (**)(sqlite3_stmt *, uint64_t, uint64_t))(a10 + 8))(v27, v25, v32);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v32);
    goto LABEL_6;
  }
  uint64_t v39 = OUTLINED_FUNCTION_43_2();
  v40(v39);
  if (v25 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v25 <= 0x7FFFFFFF)
  {
    sqlite3_bind_null(v27, v25);
LABEL_6:
    OUTLINED_FUNCTION_27_6();
    OUTLINED_FUNCTION_4_1();
    return;
  }
  __break(1u);
}

#error "25E08B6DC: call analysis failed (funcsize=7)"

void sub_25E08B6E8(void *a1@<X8>)
{
}

void Optional<A>.init(statement:index:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_24_7();
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    return;
  }
  if (sqlite3_column_type(v9, v7) == 5)
  {
    OUTLINED_FUNCTION_19_8();
  }
  else
  {
    (*(void (**)(sqlite3_stmt *, uint64_t, uint64_t, uint64_t))(v3 + 8))(v9, v7, v5, v3);
    if (!v0)
    {
      OUTLINED_FUNCTION_25_7(v1, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v11, v1, v12);
    }
  }
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

void sub_25E08B818()
{
}

void Optional<A>.init(nativeValue:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v35 = v5;
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v30 - v9;
  uint64_t v33 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - v15;
  OUTLINED_FUNCTION_0_3();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_15_0();
  v21();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v22 = *(void (**)(uint64_t))(v13 + 8);
    uint64_t v23 = OUTLINED_FUNCTION_29_5();
    v22(v23);
    ((void (*)(char *, uint64_t))v22)(v16, v11);
    OUTLINED_FUNCTION_25_7(v35, 1);
  }
  else
  {
    OUTLINED_FUNCTION_13_5();
    v24();
    OUTLINED_FUNCTION_15_0();
    v25();
    uint64_t v26 = (uint64_t)v34;
    (*(void (**)(char *, uint64_t))(v33 + 56))(v20, v4);
    uint64_t v27 = OUTLINED_FUNCTION_29_5();
    v28(v27);
    OUTLINED_FUNCTION_12_10();
    v29();
    if (!v0)
    {
      OUTLINED_FUNCTION_25_7(v26, 0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v35, v26, v32);
    }
  }
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

void Optional<A>.init<>(nativeValue:)(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void Optional<A>.nativeValue.getter()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_0_3();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_48_3();
  uint64_t v12 = *(void *)(v11 + 16);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_15_0();
  v14();
  if (__swift_getEnumTagSinglePayload(v1, 1, v12) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v5);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v16 = 1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v7, v16, 1, AssociatedTypeWitness);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_43_2();
  OUTLINED_FUNCTION_13_5();
  v17();
  (*(void (**)(uint64_t, uint64_t))(v3 + 64))(v12, v3);
  OUTLINED_FUNCTION_44_4();
  v18();
  if (!v0)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v16 = 0;
    goto LABEL_5;
  }
LABEL_6:
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

void sub_25E08BCB0()
{
}

void sub_25E08BCD0()
{
}

uint64_t static Optional<A>.dataType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 24) + 32))();
}

void Optional<A>.init(raw:)()
{
  OUTLINED_FUNCTION_38_3();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v1);
  if (OUTLINED_FUNCTION_60_1() == 5)
  {
    OUTLINED_FUNCTION_19_8();
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_5();
    v3(v2);
    if (!v0)
    {
      uint64_t v4 = OUTLINED_FUNCTION_27_7();
      v5(v4);
    }
  }
  OUTLINED_FUNCTION_50_2();
}

void sub_25E08BDD4()
{
}

uint64_t sub_25E08BDF4(uint64_t a1, uint64_t a2)
{
  return static Optional<A>.dataType.getter(*(void *)(a1 + 16), *(void *)(a2 - 8));
}

void Optional<A>.debugSQL.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = OUTLINED_FUNCTION_5_10(v8, v16[0]);
  v10(v9);
  OUTLINED_FUNCTION_36_5();
  if (v11)
  {
    OUTLINED_FUNCTION_42_3();
  }
  else
  {
    OUTLINED_FUNCTION_30_5();
    v12();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a2 + 8) + 8))(v16, v5);
    OUTLINED_FUNCTION_12_10();
    v13();
    uint64_t v15 = v16[0];
    uint64_t v14 = v16[1];
  }
  *a3 = v15;
  a3[1] = v14;
}

void Optional<A>.init(functionArgument:)()
{
  OUTLINED_FUNCTION_38_3();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v1);
  if (OUTLINED_FUNCTION_60_1() == 5)
  {
    OUTLINED_FUNCTION_19_8();
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_37_5();
    v3(v2);
    if (!v0)
    {
      uint64_t v4 = OUTLINED_FUNCTION_27_7();
      v5(v4);
    }
  }
  OUTLINED_FUNCTION_50_2();
}

void sub_25E08BFE0()
{
}

void Optional<A>.init(functionArgument:)(sqlite3_value *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v15 - v13;
  if (sqlite3_value_type(a1) == 5)
  {
    OUTLINED_FUNCTION_19_8();
  }
  else
  {
    (*(void (**)(sqlite3_value *, uint64_t))(*(void *)(a3 + 8) + 16))(a1, a2);
    if (!v4)
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a4, v14, v9);
    }
  }
  OUTLINED_FUNCTION_50_2();
}

uint64_t Optional<A>.init(functionArgument:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  (*(void (**)(void))(*(void *)(a1 + 8) + 16))();
  if (v2)
  {
    MEMORY[0x2611CF510](v2);
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  return OUTLINED_FUNCTION_25_7(a2, v4);
}

void sub_25E08C2A0(void *a1@<X8>)
{
}

void Optional<A>.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_3_9();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  OUTLINED_FUNCTION_1_5();
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *(void *)(v34 + 16);
  OUTLINED_FUNCTION_1_5();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_49_1();
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v33, v39, v26);
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v26);
    sqlite3_result_null(v28);
  }
  else
  {
    OUTLINED_FUNCTION_43_2();
    OUTLINED_FUNCTION_13_5();
    v40();
    (*(void (**)(sqlite3_context *, uint64_t, uint64_t))(v24 + 16))(v28, v35, v24);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v20, v35);
  }
  OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_4_1();
}

#error "25E08C438: call analysis failed (funcsize=7)"

void RawRepresentable<>.init(raw:)()
{
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_22_6(v1);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_24_7();
  OUTLINED_FUNCTION_35_5();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_8_13();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_33_4();
  uint64_t v5 = OUTLINED_FUNCTION_28_7();
  v6(v5);
  if (!v0)
  {
    uint64_t v7 = OUTLINED_FUNCTION_9_12();
    v8(v7);
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_18_8();
    if (v9)
    {
      uint64_t v10 = OUTLINED_FUNCTION_15_8();
      v11(v10);
      OUTLINED_FUNCTION_13_7();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_59_1();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_8();
      OUTLINED_FUNCTION_57_1();
      sub_25E03E00C();
      uint64_t v12 = OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_26_7(v12, v13);
      uint64_t v14 = OUTLINED_FUNCTION_1_12();
      v15(v14);
    }
    else
    {
      uint64_t v16 = OUTLINED_FUNCTION_1_12();
      v17(v16);
      OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_32_6();
      v18();
    }
  }
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_4_1();
}

void sub_25E08C5F4()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_22_6(v4);
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_24_7();
  uint64_t v6 = OUTLINED_FUNCTION_35_5();
  OUTLINED_FUNCTION_0_3();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_13();
  MEMORY[0x270FA5388](v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 + 8) + 16))(v0, v6);
  if (!v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_9_12();
    v10(v9);
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_18_8();
    if (v11)
    {
      uint64_t v12 = OUTLINED_FUNCTION_15_8();
      v13(v12);
      OUTLINED_FUNCTION_13_7();
      OUTLINED_FUNCTION_41_3();
      OUTLINED_FUNCTION_11_7();
      OUTLINED_FUNCTION_59_1();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_8();
      OUTLINED_FUNCTION_57_1();
      sub_25E03E00C();
      uint64_t v14 = OUTLINED_FUNCTION_25_2();
      OUTLINED_FUNCTION_26_7(v14, v15);
      uint64_t v16 = OUTLINED_FUNCTION_1_12();
      v17(v16);
    }
    else
    {
      uint64_t v18 = OUTLINED_FUNCTION_1_12();
      v19(v18);
      OUTLINED_FUNCTION_34_5();
      OUTLINED_FUNCTION_32_6();
      v20();
    }
  }
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_4_1();
}

void static Data.dataType.getter(unsigned char *a1@<X8>)
{
}

void Data.debugSQL.getter()
{
  sub_25E0DAEE0();
  sub_25E0DB630();
  uint64_t v0 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_58_0(v0, v1, v2, v3, v4, v5, v6, v7, 0x28343665736162, 0xE700000000000000);
}

uint64_t sub_25E08C9C0(uint64_t a1, int a2)
{
  if (a2 < 1) {
    return 0;
  }
  if (a1) {
    return MEMORY[0x2611CD410](a1, a2);
  }
  sub_25E03E00C();
  OUTLINED_FUNCTION_25_2();
  *uint64_t v3 = 0xD00000000000002BLL;
  v3[1] = 0x800000025E0E4680;
  return swift_willThrow();
}

uint64_t Data.init(raw:)(sqlite3_value *a1)
{
  sqlite3_value_blob(a1);
  int v2 = OUTLINED_FUNCTION_61_1();
  return sub_25E08C9C0(v1, v2);
}

uint64_t sub_25E08CA88(uint64_t a1)
{
  uint64_t v1 = OUTLINED_FUNCTION_62_0(a1);
  return sub_25E03B018(v1, v2, v3);
}

uint64_t sub_25E08CAA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E0B2090(*(void *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_25E08CAD0@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08CB70((uint64_t (*)(void))Data.init(raw:), a1);
}

uint64_t Data.init(functionArgument:)(sqlite3_value *a1)
{
  sqlite3_value_blob(a1);
  int v2 = OUTLINED_FUNCTION_61_1();
  return sub_25E08C9C0(v1, v2);
}

uint64_t sub_25E08CB44@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08CB70((uint64_t (*)(void))Data.init(functionArgument:), a1);
}

uint64_t sub_25E08CB70@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.result(for:)(Swift::OpaquePointer a1)
{
  unint64_t v4 = v2;
  uint64_t v5 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v1 >> 32 < (int)v1)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x25E08CCD4);
      }
      OUTLINED_FUNCTION_63_1();
      OUTLINED_FUNCTION_53_2((int)v5, v5 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL);
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(v1 + 16);
      uint64_t v11 = *(void *)(v1 + 24);
      OUTLINED_FUNCTION_63_1();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_53_2(v10, v11, v4 & 0x3FFFFFFFFFFFFFFFLL);
      if (v3) {
        goto LABEL_11;
      }
      swift_release();
      swift_release();
      break;
    case 3uLL:
      uint64_t v9 = 0;
      uint64_t v8 = 0;
      uint64_t v7 = 0;
      goto LABEL_6;
    default:
      uint64_t v7 = BYTE6(v2);
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
      uint64_t v9 = v5;
LABEL_6:
      sub_25E08D684(v9, v8, v7, (sqlite3_context *)a1._rawValue, v5, v4);
      break;
  }
}

void sub_25E08CCE4(void *a1, int a2, sqlite3_context *a3, uint64_t a4, unint64_t a5)
{
  sqlite3_uint64 v7 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a4), a4))
      {
        __break(1u);
LABEL_11:
        __break(1u);
LABEL_12:
        sub_25E0DC130();
        __break(1u);
        JUMPOUT(0x25E08CE0CLL);
      }
      sqlite3_uint64 v7 = HIDWORD(a4) - (int)a4;
LABEL_6:
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_12;
      }
LABEL_7:
      if (qword_26A6D4220 != -1) {
        swift_once();
      }
      sqlite3_result_blob64(a3, a1, v7, (void (__cdecl *)(void *))qword_26A6DDCD8);
      return;
    case 2uLL:
      uint64_t v9 = *(void *)(a4 + 16);
      uint64_t v8 = *(void *)(a4 + 24);
      sqlite3_uint64 v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_7;
    default:
      sqlite3_uint64 v7 = BYTE6(a5);
      goto LABEL_7;
  }
}

void sub_25E08CE1C(Swift::OpaquePointer a1)
{
}

sqlite3_stmt *Data.init(statement:index:)(sqlite3_stmt *result, uint64_t iCol)
{
  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else
  {
    int v2 = iCol;
    if (iCol <= 0x7FFFFFFF)
    {
      uint64_t v3 = result;
      unint64_t v4 = sqlite3_column_blob(result, iCol);
      int v5 = sqlite3_column_bytes(v3, v2);
      return (sqlite3_stmt *)sub_25E08C9C0((uint64_t)v4, v5);
    }
  }
  __break(1u);
  return result;
}

sqlite3_stmt *sub_25E08CEB0@<X0>(sqlite3_stmt *a1@<X0>, uint64_t a2@<X1>, sqlite3_stmt **a3@<X8>)
{
  uint64_t result = Data.init(statement:index:)(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Data.bind(to:index:)(Swift::OpaquePointer to, Swift::Int index)
{
  unint64_t v5 = v3;
  uint64_t v6 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v2 >> 32 < (int)v2)
      {
        __break(1u);
LABEL_11:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x25E08D014);
      }
      OUTLINED_FUNCTION_63_1();
      uint64_t v14 = OUTLINED_FUNCTION_43_2();
      OUTLINED_FUNCTION_52_2(v14, v15, v5 & 0x3FFFFFFFFFFFFFFFLL);
      break;
    case 2uLL:
      uint64_t v12 = *(void *)(v2 + 16);
      uint64_t v13 = *(void *)(v2 + 24);
      OUTLINED_FUNCTION_63_1();
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_52_2(v12, v13, v5 & 0x3FFFFFFFFFFFFFFFLL);
      if (v4) {
        goto LABEL_11;
      }
      swift_release();
      swift_release();
      break;
    case 3uLL:
      uint64_t v11 = 0;
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      goto LABEL_6;
    default:
      uint64_t v9 = BYTE6(v3);
      uint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
      uint64_t v11 = v6;
LABEL_6:
      sub_25E08D548(v11, v10, v9, (sqlite3_stmt *)to._rawValue, index, v6, v3);
      break;
  }
}

void sub_25E08D024(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_25E08D040()
{
}

uint64_t sub_25E08D048(uint64_t a1)
{
  OUTLINED_FUNCTION_62_0(a1);
  return sub_25E087DB8(v1);
}

uint64_t sub_25E08D064@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E08D090((uint64_t (*)(void))sub_25E0B1C20, a1);
}

uint64_t sub_25E08D090@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result = a1(*v2);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_25E08D0C4(Swift::OpaquePointer a1)
{
  return sub_25E08857C(a1);
}

uint64_t sub_25E08D0E0@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_25E088A48(a1, a2, a3);
}

uint64_t sub_25E08D0F8(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_25E089010(a1, a2);
}

uint64_t sub_25E08D114@<X0>(sqlite3_value *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25E089554(a1, a2);
}

uint64_t sub_25E08D12C(uint64_t a1)
{
  OUTLINED_FUNCTION_62_0(a1);
  return sub_25E087C64(v1);
}

uint64_t sub_25E08D148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0B1BE8(*v1);
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_25E08D178(Swift::OpaquePointer a1)
{
  return sub_25E088510(a1);
}

uint64_t sub_25E08D194@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, char *a3@<X8>)
{
  return sub_25E0888D0(a1, a2, a3);
}

uint64_t sub_25E08D1AC(Swift::OpaquePointer a1, Swift::Int a2)
{
  return sub_25E088FA4(a1, a2);
}

uint64_t sub_25E08D1C8@<X0>(sqlite3_value *a1@<X0>, char *a2@<X8>)
{
  return sub_25E0893BC(a1, a2);
}

uint64_t sub_25E08D1E0(uint64_t a1, uint64_t a2, sqlite3_uint64 a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v13 = sub_25E0DAD20();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_25E0DAD50();
    if (__OFSUB__(a1, v15))
    {
      __break(1u);
      goto LABEL_14;
    }
    uint64_t v16 = (const void *)(v14 + a1 - v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  sub_25E0DAD40();
  if (a5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a5 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = sub_25E0DAF10();
  if ((v17 & 0x8000000000000000) == 0)
  {
    a3 = v17;
    if (qword_26A6D4220 == -1)
    {
LABEL_9:
      uint64_t v18 = sqlite3_bind_blob64(a4, a5, v16, a3, (void (__cdecl *)(void *))qword_26A6DDCD8);
      sub_25E06B99C(a6, a7);
      return v18;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
LABEL_14:
  uint64_t result = sub_25E0DC130();
  __break(1u);
  return result;
}

uint64_t sub_25E08D344(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_context *a4, uint64_t a5, unint64_t a6)
{
  uint64_t result = sub_25E0DAD20();
  uint64_t v12 = (char *)result;
  if (result)
  {
    uint64_t result = sub_25E0DAD50();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_25E0DAD40();
  if (v15 >= v14) {
    int v16 = v14;
  }
  else {
    int v16 = v15;
  }
  int v17 = v12 + v16;
  if (v12) {
    int v18 = v17;
  }
  else {
    int v18 = 0;
  }
  sub_25E08CCE4(v12, v18, a4, a5, a6);
  return sub_25E06B99C(a5, a6);
}

uint64_t sub_25E08D414(const void *a1, uint64_t a2, uint64_t a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  int v9 = a5;
  if (a5 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v7 = a7;
  uint64_t v8 = a6;
  uint64_t v11 = a4;
  uint64_t v10 = a1;
  uint64_t v13 = sub_25E0DAF10();
  if ((v13 & 0x8000000000000000) == 0)
  {
    sqlite3_uint64 v12 = v13;
    if (qword_26A6D4220 == -1)
    {
LABEL_5:
      uint64_t v14 = sqlite3_bind_blob64(v11, v9, v10, v12, (void (__cdecl *)(void *))qword_26A6DDCD8);
      sub_25E06B99C(v8, v7);
      return v14;
    }
LABEL_8:
    swift_once();
    goto LABEL_5;
  }
  uint64_t result = sub_25E0DC130();
  __break(1u);
  return result;
}

uint64_t sub_25E08D548(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_stmt *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v14 = a1;
  __int16 v15 = a2;
  char v16 = BYTE2(a2);
  char v17 = BYTE3(a2);
  char v18 = BYTE4(a2);
  char v19 = BYTE5(a2);
  sub_25E06BF20(a6, a7);
  uint64_t v12 = sub_25E08D414(&v14, (uint64_t)&v20, a3, a4, a5, a6, a7);
  sub_25E06B99C(a6, a7);
  return v12;
}

uint64_t sub_25E08D684(uint64_t a1, uint64_t a2, uint64_t a3, sqlite3_context *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v9 = a1;
  __int16 v10 = a2;
  char v11 = BYTE2(a2);
  char v12 = BYTE3(a2);
  char v13 = BYTE4(a2);
  char v14 = BYTE5(a2);
  sub_25E08CCE4(&v9, (int)&v9 + a3, a4, a5, a6);
  return sub_25E06B99C(a5, a6);
}

unint64_t sub_25E08D780()
{
  unint64_t result = qword_26A6D5448;
  if (!qword_26A6D5448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5448);
  }
  return result;
}

unint64_t sub_25E08D7D0(uint64_t a1)
{
  unint64_t result = sub_25E08D7F8();
  *(void *)(a1 + 32) = result;
  return result;
}

unint64_t sub_25E08D7F8()
{
  unint64_t result = qword_26A6D5450;
  if (!qword_26A6D5450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5450);
  }
  return result;
}

unint64_t sub_25E08D848()
{
  unint64_t result = qword_26A6D5458;
  if (!qword_26A6D5458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5458);
  }
  return result;
}

_UNKNOWN **sub_25E08D894()
{
  return &protocol witness table for Bool;
}

_UNKNOWN **sub_25E08D8A0()
{
  return &protocol witness table for Int;
}

_UNKNOWN **sub_25E08D8AC()
{
  return &protocol witness table for Int64;
}

_UNKNOWN **sub_25E08D8B8()
{
  return &protocol witness table for UInt;
}

_UNKNOWN **sub_25E08D8C4()
{
  return &protocol witness table for UInt64;
}

_UNKNOWN **sub_25E08D8D0()
{
  return &protocol witness table for Double;
}

_UNKNOWN **sub_25E08D8DC()
{
  return &protocol witness table for Float;
}

_UNKNOWN **sub_25E08D8E8()
{
  return &protocol witness table for String;
}

uint64_t sub_25E08D8F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E08D960(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_25E08DA44(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  a1[3] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[4] = result;
  return result;
}

uint64_t sub_25E08DB24(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_25E08DBDC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25E08DC30(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E08DC88(uint64_t a1)
{
  unint64_t result = sub_25E08DCB0();
  *(void *)(a1 + 32) = result;
  return result;
}

unint64_t sub_25E08DCB0()
{
  unint64_t result = qword_26A6D5460;
  if (!qword_26A6D5460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26A6D5460);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SQLDataType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SQLDataType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E08DE50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLDataType()
{
  return &type metadata for SQLDataType;
}

uint64_t dispatch thunk of _SQLNativeValue.init(raw:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

ValueMetadata *type metadata accessor for SQLNull()
{
  return &type metadata for SQLNull;
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(raw:)(Swift::OpaquePointer raw)
{
  return Int.init(raw:)(raw);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.result(for:)(Swift::OpaquePointer a1)
{
}

void sub_25E08DF04(Swift::OpaquePointer a1)
{
}

Swift::Int sub_25E08DF48@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_25E08A304(a1, a2);
}

Swift::UInt sub_25E08DF60@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  return sub_25E08A560(a1, a2);
}

Swift::UInt sub_25E08DF78@<X0>(Swift::OpaquePointer a1@<X0>, Swift::UInt *a2@<X8>)
{
  return sub_25E08A5F8(a1, a2);
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Int64.init(functionArgument:)(Swift::OpaquePointer functionArgument)
{
  return Int.init(functionArgument:)(functionArgument);
}

void sub_25E08DFA8(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_25E08DFC0(Swift::OpaquePointer a1, Swift::Int a2)
{
}

Swift::Int sub_25E08DFD8@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int *a2@<X8>)
{
  return sub_25E08A39C(a1, a2);
}

Swift::Int sub_25E08DFF0@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  return sub_25E08A34C(a1, a2, a3);
}

Swift::UInt sub_25E08E008@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, Swift::UInt *a3@<X8>)
{
  return sub_25E08A5A8(a1, a2, a3);
}

void sub_25E08E020(Swift::OpaquePointer a1)
{
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return sub_25E0DBE80();
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return sub_25E0DB7F0();
}

uint64_t OUTLINED_FUNCTION_22_6@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return sub_25E0DBCF0();
}

uint64_t OUTLINED_FUNCTION_25_7(uint64_t a1, uint64_t a2)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_26_7(uint64_t a1, void *a2)
{
  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v0);
  return v1;
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_37_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return sub_25E0DBCF0();
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return v0;
}

void OUTLINED_FUNCTION_41_3()
{
  uint64_t v1 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v1;
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_45_4(int a1)
{
  return a1 != 0;
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_52_2(uint64_t a1, uint64_t a2, sqlite3_uint64 a3)
{
  return sub_25E08D1E0(a1, a2, a3, v6, v5, v3, v4);
}

uint64_t OUTLINED_FUNCTION_53_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E08D344(a1, a2, a3, v5, v3, v4);
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return sub_25E0DBE80();
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  return sub_25E0DC350();
}

void OUTLINED_FUNCTION_58_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *__int16 v10 = a9;
  v10[1] = a10;
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return sub_25E0DC650();
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return sqlite3_value_type(v0);
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return sqlite3_value_bytes(v0);
}

uint64_t OUTLINED_FUNCTION_62_0(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return sub_25E06BF20(v0, v1);
}

#error "25E08E4E0: call analysis failed (funcsize=60)"

uint64_t sub_25E08E56C(uint64_t a1)
{
  uint64_t v3 = (sqlite3 **)(a1 + 136);
  swift_beginAccess();
  uint64_t result = *(void *)(a1 + 136);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = sub_25E0B4EE8();
  if (!v1)
  {
    int v5 = result;
    uint64_t result = sub_25E0BF968(result, (uint64_t)&v18);
    if (v19 != 1 && (v19 != 14 || v18 != 16))
    {
      uint64_t v7 = sqlite3_extended_errcode(*v3);
      uint64_t result = (uint64_t)sqlite3_errstr(v5);
      if (result)
      {
        uint64_t v8 = sub_25E0DB640();
        uint64_t v10 = v9;
        uint64_t result = (uint64_t)sqlite3_errmsg(*v3);
        if (result)
        {
          uint64_t v11 = sub_25E0DB640();
          uint64_t v13 = v12;
          sub_25E04A188();
          OUTLINED_FUNCTION_25_2();
          uint64_t v15 = v14;
          sub_25E0BF968(v7, (uint64_t)&v18);
          int v16 = v18;
          char v17 = v19;
          *(_DWORD *)uint64_t v15 = v7;
          *(_DWORD *)(v15 + 4) = v16;
          *(unsigned char *)(v15 + 8) = v17;
          *(void *)(v15 + 16) = v8;
          *(void *)(v15 + 24) = v10;
          *(void *)(v15 + 32) = v11;
          *(void *)(v15 + 40) = v13;
          return swift_willThrow();
        }
LABEL_14:
        __break(1u);
        return result;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
  }
  return result;
}

sqlite3 *sub_25E08E6A4(uint64_t a1)
{
  return sub_25E08E6E4(a1, "COMMIT TRANSACTION");
}

sqlite3 *sub_25E08E6C4(uint64_t a1)
{
  return sub_25E08E6E4(a1, "ROLLBACK TRANSACTION");
}

sqlite3 *sub_25E08E6E4(uint64_t a1, const char *a2)
{
  unint64_t v4 = (sqlite3 **)(a1 + 136);
  OUTLINED_FUNCTION_11_8();
  uint64_t result = *(sqlite3 **)(a1 + 136);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = sqlite3_exec(result, a2, 0, 0, 0);
  int v7 = v6;
  uint64_t result = (sqlite3 *)sub_25E0BF968(v6, (uint64_t)&v20);
  if (v21 != 1 && (v21 != 14 || v20 != 16))
  {
    uint64_t v9 = sqlite3_extended_errcode(*v4);
    uint64_t result = (sqlite3 *)sqlite3_errstr(v7);
    if (result)
    {
      uint64_t v10 = sub_25E0DB640();
      uint64_t v12 = v11;
      uint64_t result = (sqlite3 *)sqlite3_errmsg(*v4);
      if (result)
      {
        uint64_t v13 = sub_25E0DB640();
        uint64_t v15 = v14;
        sub_25E04A188();
        OUTLINED_FUNCTION_25_2();
        uint64_t v17 = v16;
        sub_25E0BF968(v9, (uint64_t)&v20);
        int v18 = v20;
        char v19 = v21;
        *(_DWORD *)uint64_t v17 = v9;
        *(_DWORD *)(v17 + 4) = v18;
        *(unsigned char *)(v17 + 8) = v19;
        *(void *)(v17 + 16) = v10;
        *(void *)(v17 + 24) = v12;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v15;
        return (sqlite3 *)swift_willThrow();
      }
LABEL_13:
      __break(1u);
      return result;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_25E08E80C(uint64_t a1, uint64_t a2)
{
  return sub_25E08EB9C(a1, a2, sub_25E0A9D44);
}

#error "25E08E890: call analysis failed (funcsize=56)"

uint64_t sub_25E08E91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E08ECCC(a1, a2, a3, sub_25E0B5A14);
}

uint64_t sub_25E08E948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E08E9B0(a1, a2, a3, 20, 0xD000000000000012, 0x800000025E0E48F0);
}

uint64_t sub_25E08E97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E08E9B0(a1, a2, a3, 36, 0xD000000000000022, 0x800000025E0E48C0);
}

uint64_t sub_25E08E9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = (sqlite3 **)(a1 + 136);
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(sqlite3 **)(a1 + 136);
  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  v26[0] = a5;
  v26[1] = a6;
  sub_25E0DB3C0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_25E0DB580();
  swift_bridgeObjectRelease();
  uint64_t v13 = sqlite3_exec(v11, (const char *)(v12 + 32), 0, 0, 0);
  swift_release();
  sub_25E0BF968(v13, (uint64_t)v26);
  if (BYTE4(v26[0]) == 1) {
    return swift_bridgeObjectRelease();
  }
  if (BYTE4(v26[0]) == 14 && LODWORD(v26[0]) == 16) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = sqlite3_extended_errcode(*v9);
  uint64_t result = (uint64_t)sqlite3_errstr(v13);
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v16 = sub_25E0DB640();
  uint64_t v18 = v17;
  uint64_t result = (uint64_t)sqlite3_errmsg(*v9);
  if (result)
  {
    uint64_t v19 = sub_25E0DB640();
    uint64_t v21 = v20;
    sub_25E04A188();
    OUTLINED_FUNCTION_25_2();
    uint64_t v23 = v22;
    sub_25E0BF968(v15, (uint64_t)v26);
    int v24 = v26[0];
    char v25 = BYTE4(v26[0]);
    *(_DWORD *)uint64_t v23 = v15;
    *(_DWORD *)(v23 + 4) = v24;
    *(unsigned char *)(v23 + 8) = v25;
    *(void *)(v23 + 16) = v16;
    *(void *)(v23 + 24) = v18;
    *(void *)(v23 + 32) = v19;
    *(void *)(v23 + 40) = v21;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_25E08EB70(uint64_t a1, uint64_t a2)
{
  return sub_25E08EB9C(a1, a2, sub_25E0B71C0);
}

#error "25E08EBEC: call analysis failed (funcsize=64)"

uint64_t sub_25E08ECA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E08ECCC(a1, a2, a3, sub_25E0BAEB0);
}

#error "25E08ED24: call analysis failed (funcsize=56)"

void *sub_25E08EDB0(void *(*a1)(uint64_t *__return_ptr, uint64_t, void), uint64_t a2, uint64_t a3)
{
  uint64_t result = a1(&v5, a3 + 32, *(void *)(a3 + 16));
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

__n128 sub_25E08EE04@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v10 = sub_25E08EF38(MEMORY[0x263F8EE78]);
  unint64_t v12 = v11;
  unint64_t v14 = v13;
  sub_25E08EF38(v9);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  v17.n128_u64[0] = v12;
  v17.n128_u64[1] = v14;
  sub_25E08F238();
  swift_release();
  swift_release();
  swift_release();
  __n128 result = v17;
  *(_OWORD *)a5 = 0uLL;
  *(void *)(a5 + 16) = v10;
  *(__n128 *)(a5 + 24) = v17;
  *(void *)(a5 + 40) = a3;
  *(unsigned char *)(a5 + 48) = a4 & 1;
  *(void *)(a5 + 56) = a1;
  *(unsigned char *)(a5 + 64) = a2 & 1;
  return result;
}

uint64_t sub_25E08EF38(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8EE78];
  char v25 = (void *)MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(a1 + 16);
  sub_25E092EC4(v3, 0);
  sub_25E03CB0C(0, v3, 0);
  uint64_t v4 = v2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    sub_25E0DB3C0();
    unint64_t v5 = 0;
    while (v5 < *(void *)(a1 + 16))
    {
      uint64_t v6 = a1 + 32 + 40 * v5;
      uint64_t v8 = *(void *)v6;
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t v9 = *(void *)(v6 + 24);
      uint64_t v24 = *(void *)(v6 + 16);
      char v10 = *(unsigned char *)(v6 + 32);
      uint64_t v11 = v25[2];
      if (v11)
      {
        BOOL v12 = v25[4] == v8 && v25[5] == v7;
        if (v12 || (sub_25E0DC380() & 1) != 0) {
          goto LABEL_43;
        }
        if (v11 != 1)
        {
          BOOL v13 = v25[6] == v8 && v25[7] == v7;
          if (v13 || (sub_25E0DC380() & 1) != 0) {
            goto LABEL_43;
          }
          if (v11 != 2)
          {
            BOOL v14 = v25[8] == v8 && v25[9] == v7;
            if (v14 || (sub_25E0DC380() & 1) != 0) {
              goto LABEL_43;
            }
            uint64_t v15 = v11 - 3;
            if (v15)
            {
              BOOL v19 = v25[10] == v8 && v25[11] == v7;
              if (v19 || (sub_25E0DC380() & 1) != 0) {
                goto LABEL_43;
              }
              uint64_t v20 = v25 + 13;
              while (--v15)
              {
                if (*(v20 - 1) != v8 || *v20 != v7)
                {
                  v20 += 2;
                  if ((sub_25E0DC380() & 1) == 0) {
                    continue;
                  }
                }
                goto LABEL_43;
              }
            }
          }
        }
      }
      sub_25E0DB3C0();
      swift_retain();
      sub_25E0926C0(v8, v7);
      unint64_t v17 = *(void *)(v4 + 16);
      unint64_t v16 = *(void *)(v4 + 24);
      if (v17 >= v16 >> 1) {
        sub_25E03CB0C(v16 > 1, v17 + 1, 1);
      }
      ++v5;
      *(void *)(v4 + 16) = v17 + 1;
      uint64_t v18 = v4 + 24 * v17;
      *(void *)(v18 + 32) = v24;
      *(void *)(v18 + 40) = v9;
      *(unsigned char *)(v18 + 48) = v10;
      swift_bridgeObjectRelease();
      if (v5 == v23)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    __break(1u);
LABEL_43:
    sub_25E0DB3C0();
    uint64_t result = swift_retain();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

void sub_25E08F238()
{
  if (*(unsigned char *)(v0 + 64)) {
    goto LABEL_11;
  }
  int64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = *(void *)(v2 + 16);
  if (v1 >= (uint64_t)v3) {
    goto LABEL_11;
  }
  unint64_t v4 = v3 - v1;
  if (__OFSUB__(v3, v1))
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v5 = *(void (**)(uint64_t *, uint64_t *))v0;
  if (*(void *)v0)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v7 = *(void *)(v0 + 24);
    sub_25E04E23C(*(void *)v0);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = sub_25E08F51C(v4, v6, v7, v2);
    uint64_t v8 = *(void *)(v35 + 16);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(v35 + 48);
      do
      {
        uint64_t v10 = *(v9 - 2);
        uint64_t v11 = *(v9 - 1);
        uint64_t v12 = *v9;
        v9 += 5;
        uint64_t v38 = v10;
        uint64_t v39 = v11;
        uint64_t v37 = v12;
        sub_25E0DB3C0();
        swift_retain();
        v5(&v38, &v37);
        swift_bridgeObjectRelease();
        swift_release();
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
    sub_25E04E474((uint64_t)v5);
  }
  if (v4 > v3) {
    goto LABEL_41;
  }
  sub_25E093114(v4);
  sub_25E093134(v4);
LABEL_11:
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    uint64_t v13 = *(void *)(v0 + 40);
    BOOL v14 = *(void (**)(uint64_t *, uint64_t *))v0;
    uint64_t v15 = *(void *)(v0 + 16);
    uint64_t v16 = *(void *)(v0 + 24);
    uint64_t v17 = *(void *)(v0 + 32);
    unint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = 0;
      uint64_t v20 = (unsigned char *)(v17 + 48);
      uint64_t v21 = *(void *)(v17 + 16);
      do
      {
        uint64_t v22 = *((void *)v20 - 1);
        if (*v20) {
          uint64_t v22 = 0;
        }
        BOOL v23 = __OFADD__(v19, v22);
        v19 += v22;
        if (v23)
        {
          __break(1u);
          goto LABEL_40;
        }
        v20 += 24;
        --v21;
      }
      while (v21);
      if (v13 >= v19) {
        return;
      }
      BOOL v23 = __OFSUB__(v19, v13);
      uint64_t v24 = v19 - v13;
      if (!v23)
      {
        uint64_t v25 = 0;
        uint64_t v26 = (unsigned char *)(v17 + 24 * v18 + 24);
        while (1)
        {
          if ((*v26 & 1) == 0)
          {
            uint64_t v27 = *((void *)v26 - 1);
            BOOL v23 = __OFSUB__(v24, v27);
            v24 -= v27;
            if (v23) {
              goto LABEL_44;
            }
          }
          v26 -= 24;
          unint64_t v28 = v25 + 1;
          if (v24 < 1 || v18 - 1 == v25++)
          {
            if (v14) {
              goto LABEL_32;
            }
            goto LABEL_36;
          }
        }
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return;
    }
    if (v13 < 0)
    {
      unint64_t v28 = 0;
      if (v14)
      {
LABEL_32:
        sub_25E04E23C((uint64_t)v14);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v36 = sub_25E08F51C(v28, v15, v16, v17);
        uint64_t v30 = *(void *)(v36 + 16);
        if (v30)
        {
          uint64_t v31 = (uint64_t *)(v36 + 48);
          do
          {
            uint64_t v32 = *(v31 - 2);
            uint64_t v33 = *(v31 - 1);
            uint64_t v34 = *v31;
            v31 += 5;
            uint64_t v38 = v32;
            uint64_t v39 = v33;
            uint64_t v37 = v34;
            sub_25E0DB3C0();
            swift_retain();
            v14(&v38, &v37);
            swift_bridgeObjectRelease();
            swift_release();
            --v30;
          }
          while (v30);
        }
        swift_bridgeObjectRelease();
        sub_25E04E474((uint64_t)v14);
      }
LABEL_36:
      if (v28 <= v18)
      {
        sub_25E093114(v28);
        sub_25E093134(v28);
        return;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
}

uint64_t sub_25E08F51C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < 0)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v4 = a4;
  if (!result)
  {
    swift_release();
    swift_release();
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v31 = result;
  if (v6 >= result) {
    int64_t v7 = result;
  }
  else {
    int64_t v7 = *(void *)(a4 + 16);
  }
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_25E03CB84(0, v7, 0);
  uint64_t v8 = v34;
  uint64_t v30 = v6;
  if (!v6) {
    goto LABEL_23;
  }
  swift_retain();
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = a3 + 40;
  uint64_t v12 = v31;
  uint64_t v28 = a3;
  uint64_t v29 = v4;
  uint64_t v27 = a3 + 40;
  while (2)
  {
    uint64_t v13 = (uint64_t *)(v11 + 16 * v10);
    uint64_t v14 = 24 * v10;
    while (1)
    {
      if ((unint64_t)v10 >= *(void *)(a3 + 16))
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if ((unint64_t)v10 >= *(void *)(v4 + 16)) {
        goto LABEL_35;
      }
      uint64_t v15 = *v13;
      uint64_t v32 = *(v13 - 1);
      uint64_t v17 = *(void *)(v4 + v14 + 32);
      uint64_t v16 = *(void *)(v4 + v14 + 40);
      char v18 = *(unsigned char *)(v4 + v14 + 48);
      unint64_t v19 = *(void *)(v34 + 16);
      if ((uint64_t)v19 < v12) {
        break;
      }
      sub_25E0DB3C0();
      uint64_t result = swift_retain();
      if (v9 >= v19) {
        goto LABEL_36;
      }
      uint64_t v20 = v34 + 32 + 40 * v9;
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v20 = v32;
      *(void *)(v20 + 8) = v15;
      *(void *)(v20 + 16) = v17;
      *(void *)(v20 + 24) = v16;
      ++v9;
      *(unsigned char *)(v20 + 32) = v18;
      uint64_t v12 = v31;
      if (v9 < v31)
      {
        a3 = v28;
        uint64_t v4 = v29;
        goto LABEL_20;
      }
      uint64_t v9 = 0;
      ++v10;
      v13 += 2;
      v14 += 24;
      uint64_t v4 = v29;
      a3 = v28;
      if (v10 >= v30)
      {
        swift_release();
        swift_release_n();
        goto LABEL_23;
      }
    }
    unint64_t v21 = *(void *)(v34 + 24);
    sub_25E0DB3C0();
    uint64_t result = swift_retain();
    if (v19 >= v21 >> 1) {
      uint64_t result = sub_25E03CB84(v21 > 1, v19 + 1, 1);
    }
    *(void *)(v34 + 16) = v19 + 1;
    uint64_t v22 = v34 + 40 * v19;
    *(void *)(v22 + 32) = v32;
    *(void *)(v22 + 40) = v15;
    *(void *)(v22 + 48) = v17;
    *(void *)(v22 + 56) = v16;
    *(unsigned char *)(v22 + 64) = v18;
    a3 = v28;
    uint64_t v4 = v29;
    uint64_t v12 = v31;
LABEL_20:
    ++v10;
    uint64_t v11 = v27;
    if (v10 < v30) {
      continue;
    }
    break;
  }
  swift_release();
  swift_release();
  swift_release();
  if (!v9)
  {
LABEL_23:
    swift_release();
    swift_release();
    swift_release();
    return v8;
  }
  int64_t v23 = *(void *)(v34 + 16);
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E03CB84(0, v23, 0);
  if (v23 < v9) {
    goto LABEL_38;
  }
  if ((v9 & 0x8000000000000000) == 0)
  {
    unint64_t v24 = *(void *)(v34 + 16);
    if (v24 >= v9 && v24 >= v23)
    {
      uint64_t v26 = swift_retain();
      sub_25E093004(v26, v34 + 32, v9, (2 * v23) | 1);
      swift_release();
      swift_release();
      swift_release();
      sub_25E093004(v34, v34 + 32, 0, (2 * v9) | 1);
      return v33;
    }
    goto LABEL_40;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_25E08F87C(char a1)
{
  *(void *)(v2 + 296) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  return MEMORY[0x270FA2498](sub_25E08F8A0, 0, 0);
}

#error "25E08F938: call analysis failed (funcsize=83)"

uint64_t sub_25E08FA00()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *unint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *unint64_t v5 = v4;
  *(void *)(v6 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E08FB78(char a1)
{
  *(void *)(v2 + 296) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  return MEMORY[0x270FA2498](sub_25E08FB9C, 0, 0);
}

#error "25E08FC34: call analysis failed (funcsize=83)"

uint64_t sub_25E08FCFC(char a1)
{
  *(void *)(v2 + 296) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  return MEMORY[0x270FA2498](sub_25E08FD20, 0, 0);
}

#error "25E08FE88: call analysis failed (funcsize=125)"

uint64_t sub_25E08FF68()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *unint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *unint64_t v5 = v4;
  *(void *)(v6 + 352) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0900E0()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0900FC(char a1)
{
  *(void *)(v2 + 296) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  return MEMORY[0x270FA2498](sub_25E090120, 0, 0);
}

#error "25E0901B8: call analysis failed (funcsize=83)"

void sub_25E090280()
{
  qword_26A6DDCD8 = -1;
}

uint64_t sub_25E090290()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  v1[92] = v2;
  v1[91] = v3;
  v1[93] = *(void *)(type metadata accessor for SQLDatabase.AttachedLocation() - 8);
  v1[94] = swift_task_alloc();
  swift_defaultActor_initialize();
  *(_WORD *)(v2 + 112) = 0;
  *(void *)(v2 + 128) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 136) = 0;
  sub_25E08EE04(20, 0, 0, 1, v2 + 144);
  _s9StatementCMa();
  sub_25E0511B8();
  *(void *)(v2 + 216) = sub_25E0DB3A0();
  *(void *)(v2 + 224) = 0;
  *(void *)(v2 + 232) = 0;
  *(void *)(v2 + 240) = 0;
  *(unsigned char *)(v2 + 248) = 1;
  v1[95] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_location;
  return MEMORY[0x270FA2498](sub_25E0903E0, v4, 0);
}

const char *sub_25E0903E0()
{
  OUTLINED_FUNCTION_74();
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 728);
  sub_25E0D97AC();
  uint64_t v2 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_options;
  *(void *)(v0 + 768) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_options;
  uint64_t v3 = (unsigned char *)(v1 + v2);
  char v4 = *(unsigned char *)(v1 + v2);
  char v5 = *(unsigned char *)(v1 + v2 + 4);
  int v6 = *(unsigned __int8 *)(v1 + v2 + 11);
  if ((v4 & 1) == 0)
  {
    int v7 = 1;
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (v3[1])
  {
    int v7 = 6;
    int v8 = 14;
  }
  else
  {
    int v7 = 2;
    int v8 = 10;
  }
  if (v3[2]) {
    int v7 = v8;
  }
  if (v5) {
LABEL_5:
  }
    v7 |= 0x10u;
LABEL_6:
  uint64_t v9 = *(void *)(v0 + 736);
  int v10 = (v7 | (v6 << 20)) + 0x100000;
  uint64_t v11 = sub_25E0DB580();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v12 = sqlite3_open_v2((const char *)(v11 + 32), (sqlite3 **)(v9 + 136), v10, 0);
  swift_endAccess();
  swift_release();
  uint64_t v13 = *(sqlite3 **)(v9 + 136);
  if (v12)
  {
    uint64_t v14 = sqlite3_extended_errcode(v13);
    uint64_t result = sqlite3_errstr(v12);
    if (result)
    {
      uint64_t v16 = *(void *)(v0 + 736);
      uint64_t v17 = sub_25E0DB640();
      uint64_t v19 = v18;
      uint64_t result = sqlite3_errmsg(*(sqlite3 **)(v16 + 136));
      if (result)
      {
        uint64_t v20 = *(void *)(v0 + 736);
        uint64_t v21 = sub_25E0DB640();
        uint64_t v23 = v22;
        sub_25E04A188();
        swift_allocError();
        uint64_t v25 = v24;
        sub_25E0BF968(v14, (uint64_t)&v32);
        int v26 = v32;
        char v27 = v33;
        *(_DWORD *)uint64_t v25 = v14;
        *(_DWORD *)(v25 + 4) = v26;
        *(unsigned char *)(v25 + 8) = v27;
        *(void *)(v25 + 16) = v17;
        *(void *)(v25 + 24) = v19;
        *(void *)(v25 + 32) = v21;
        *(void *)(v25 + 40) = v23;
        swift_willThrow();
        sqlite3_close_v2(*(sqlite3 **)(v20 + 136));
        swift_release();
        swift_release();
        swift_task_dealloc();
        OUTLINED_FUNCTION_9();
        return (const char *)v28();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sqlite3_extended_result_codes(v13, 1);
  *(unsigned char *)(v0 + 89) = v3[6];
  *(unsigned char *)(v0 + 90) = v3[7];
  *(unsigned char *)(v0 + 91) = v3[8];
  uint64_t v31 = (uint64_t (*)(char))((char *)&dword_26A6D5470 + dword_26A6D5470);
  char v29 = v3[9];
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 776) = v30;
  void *v30 = v0;
  v30[1] = sub_25E0906AC;
  return (const char *)v31(v29);
}

uint64_t sub_25E0906AC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *int v6 = v5;
  *(void *)(v3 + 784) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    int v10 = (void *)OUTLINED_FUNCTION_20_0();
    *(void *)(v3 + 792) = v10;
    *int v10 = v5;
    v10[1] = sub_25E0907E8;
    uint64_t v11 = OUTLINED_FUNCTION_25_8(*(unsigned __int8 *)(v3 + 89));
    return v12(v11);
  }
}

uint64_t sub_25E0907E8()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *int v6 = v5;
  *(void *)(v3 + 800) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    int v10 = (void *)OUTLINED_FUNCTION_20_0();
    *(void *)(v3 + 808) = v10;
    *int v10 = v5;
    v10[1] = sub_25E09098C;
    uint64_t v11 = OUTLINED_FUNCTION_25_8(*(unsigned __int8 *)(v3 + 90));
    return v12(v11);
  }
}

uint64_t sub_25E090924()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E09098C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *int v6 = v5;
  *(void *)(v3 + 816) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    int v10 = (void *)OUTLINED_FUNCTION_20_0();
    *(void *)(v3 + 824) = v10;
    *int v10 = v5;
    v10[1] = sub_25E090B30;
    uint64_t v11 = OUTLINED_FUNCTION_25_8(*(unsigned __int8 *)(v3 + 91));
    return v12(v11);
  }
}

uint64_t sub_25E090AC8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E090B30()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *int v6 = v5;
  *(void *)(v3 + 832) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_25E090DA4;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + 728);
    uint64_t v7 = sub_25E090C80;
  }
  return MEMORY[0x270FA2498](v7, v8, 0);
}

uint64_t sub_25E090C18()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E090C80()
{
  OUTLINED_FUNCTION_12();
  char v1 = *(unsigned char *)(*(void *)(v0 + 728) + *(void *)(v0 + 768));
  *(unsigned char *)(*(void *)(v0 + 736) + 112) = (v1 & 1) == 0;
  if (v1)
  {
    *(void *)(v0 + 536) = 0xD00000000000001DLL;
    *(void *)(v0 + 544) = 0x800000025E0E4950;
    *(unsigned char *)(v0 + 568) = 0;
    *(_OWORD *)(v0 + 552) = 0u;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 840) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_25E090E0C;
    return sub_25E0458B8();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 728);
    return MEMORY[0x270FA2498](sub_25E090F38, v4, 0);
  }
}

uint64_t sub_25E090DA4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_51_2();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E090E0C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *int v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v3 + 728);
    return MEMORY[0x270FA2498](sub_25E090F38, v9, 0);
  }
}

uint64_t sub_25E090F38()
{
  uint64_t v1 = *(void *)(v0 + 736);
  uint64_t v2 = *(void *)(v0 + 728);
  *(unsigned char *)(v1 + 113) = *(unsigned char *)(v2 + *(void *)(v0 + 768) + 3);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_25E093958;
  *(void *)(v3 + 24) = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 144);
  *(void *)(v1 + 144) = sub_25E093998;
  *(void *)(v1 + 152) = v3;
  swift_retain();
  sub_25E04E474(v4);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_attachedLocations);
  OUTLINED_FUNCTION_24();
  uint64_t v6 = *v5;
  *(void *)(v0 + 848) = *v5;
  uint64_t v7 = *(void *)(v6 + 16);
  *(void *)(v0 + 856) = v7;
  if (!v7)
  {
    *(void *)(v0 + 872) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_scalarFunctions;
    OUTLINED_FUNCTION_29();
    return MEMORY[0x270FA2498](v29, v30, v31);
  }
  uint64_t v8 = *(void *)(v0 + 752);
  uint64_t v9 = *(void *)(v0 + 744);
  int v10 = *(_DWORD *)(v9 + 80);
  *(_DWORD *)(v0 + 92) = v10;
  *(void *)(v0 + 864) = *(void *)(v9 + 72);
  *(void *)(v0 + 880) = 0;
  uint64_t v11 = v6 + ((v10 + 32) & ~(unint64_t)v10);
  sub_25E0DB3C0();
  sub_25E0939D0(v11, v8);
  sub_25E056BE8();
  uint64_t v13 = v12;
  *(void *)(v0 + 336) = 0xD000000000000010;
  *(void *)(v0 + 344) = 0x800000025E0E4970;
  *(unsigned char *)(v0 + 408) = 0;
  unint64_t v14 = *(void *)(v12 + 16);
  if (v14 >= *(void *)(v12 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v41;
  }
  *(void *)(v13 + 16) = v14 + 1;
  OUTLINED_FUNCTION_49_2();
  uint64_t v15 = sub_25E0BE344();
  *(void *)(v0 + 480) = MEMORY[0x263F8D310];
  *(void *)(v0 + 488) = &protocol witness table for String;
  *(void *)(v0 + 456) = v15;
  *(void *)(v0 + 464) = v16;
  sub_25E03DF54(v0 + 456, v0 + 176);
  *(unsigned char *)(v0 + 248) = 1;
  unint64_t v17 = *(void *)(v13 + 16);
  unint64_t v18 = *(void *)(v13 + 24);
  sub_25E0DB3C0();
  if (v17 >= v18 >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v42;
  }
  *(void *)(v13 + 16) = v17 + 1;
  OUTLINED_FUNCTION_40_4();
  sub_25E07DE30(v0 + 176, v19);
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 542327072;
  *(void *)(v0 + 24) = 0xE400000000000000;
  *(unsigned char *)(v0 + 88) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v43;
  }
  unint64_t v20 = *(void *)(v13 + 16);
  if (v20 >= *(void *)(v13 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v44;
  }
  uint64_t v21 = *(uint64_t **)(v0 + 752);
  *(void *)(v13 + 16) = v20 + 1;
  OUTLINED_FUNCTION_49_2();
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  *(void *)(v0 + 440) = MEMORY[0x263F8D310];
  *(void *)(v0 + 448) = &protocol witness table for String;
  *(void *)(v0 + 416) = v22;
  *(void *)(v0 + 424) = v23;
  sub_25E03DF54(v0 + 416, v0 + 256);
  *(unsigned char *)(v0 + 328) = 1;
  unint64_t v24 = *(void *)(v13 + 16);
  unint64_t v25 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain_n();
  if (v24 >= v25 >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v45;
  }
  *(void *)(v13 + 16) = v24 + 1;
  OUTLINED_FUNCTION_40_4();
  sub_25E07DE30(v0 + 256, v26);
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0xE000000000000000;
  *(unsigned char *)(v0 + 168) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v46;
  }
  unint64_t v27 = *(void *)(v13 + 16);
  if (v27 >= *(void *)(v13 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v13 = v47;
  }
  *(void *)(v13 + 16) = v27 + 1;
  OUTLINED_FUNCTION_40_4();
  sub_25E07DE30(v0 + 96, v28);
  *(void *)(v0 + 576) = v13;
  *(_OWORD *)(v0 + 584) = 0u;
  *(void *)(v0 + 600) = MEMORY[0x263F8EE78];
  uint64_t v29 = sub_25E0D6330();
  uint64_t v32 = *(void *)(v0 + 600);
  uint64_t v33 = *(void *)(v32 + 16);
  *(void *)(v0 + 888) = v33;
  if (!v33)
  {
    uint64_t v35 = *(void *)(v0 + 592);
    if (v35)
    {
      uint64_t v34 = *(void *)(v0 + 584);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
      uint64_t v32 = 0;
      goto LABEL_23;
    }
    __break(1u);
    return MEMORY[0x270FA2498](v29, v30, v31);
  }
  uint64_t v34 = *(void *)(v0 + 576);
  uint64_t v35 = *(void *)(v0 + 584);
  uint64_t v36 = *(void *)(v0 + 592);
LABEL_23:
  *(void *)(v0 + 920) = v32;
  *(void *)(v0 + 912) = v36;
  *(void *)(v0 + 904) = v35;
  *(void *)(v0 + 896) = v34;
  *(void *)(v0 + 496) = v34;
  *(void *)(v0 + 504) = v35;
  *(void *)(v0 + 512) = v36;
  *(void *)(v0 + 520) = v32;
  *(unsigned char *)(v0 + 528) = v33 != 0;
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 928) = v38;
  *uint64_t v38 = v0;
  v38[1] = sub_25E091958;
  OUTLINED_FUNCTION_29();
  return sub_25E0458B8();
}

uint64_t sub_25E09142C()
{
  uint64_t v55 = v0;
  uint64_t v1 = (void *)(v0[91] + v0[109]);
  OUTLINED_FUNCTION_24();
  uint64_t v2 = *v1 + 64;
  OUTLINED_FUNCTION_28_8();
  uint64_t v5 = v4 & v3;
  int64_t v7 = (unint64_t)(63 - v6) >> 6;
  uint64_t result = sub_25E0DB3C0();
  int64_t v9 = 0;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  for (v5 &= v5 - 1; ; uint64_t v5 = (v11 - 1) & v11)
  {
    uint64_t v13 = *(sqlite3 **)(v0[92] + 136);
    if (!v13) {
      goto LABEL_67;
    }
    OUTLINED_FUNCTION_48_4();
    uint64_t v14 = sub_25E0A9D44(v13);
    sub_25E0BF968(v14, (uint64_t)&v53);
    if (v54 != 1 && (v54 != 14 || v53 != 16)) {
      break;
    }
    uint64_t result = swift_release_n();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_29;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_29;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11)
      {
        int64_t v9 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_29;
        }
        uint64_t v11 = *(void *)(v2 + 8 * v9);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v7)
          {
LABEL_29:
            uint64_t v27 = v0[91];
            swift_release();
            uint64_t v28 = (void *)(v27 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions);
            OUTLINED_FUNCTION_24();
            uint64_t v29 = *v28 + 64;
            OUTLINED_FUNCTION_28_8();
            uint64_t v32 = v31 & v30;
            int64_t v34 = (unint64_t)(63 - v33) >> 6;
            uint64_t result = sub_25E0DB3C0();
            int64_t v35 = 0;
            if (!v32) {
              goto LABEL_31;
            }
LABEL_30:
            for (v32 &= v32 - 1; ; uint64_t v32 = (v37 - 1) & v37)
            {
              uint64_t v39 = *(sqlite3 **)(v0[92] + 136);
              if (!v39) {
                break;
              }
              OUTLINED_FUNCTION_48_4();
              uint64_t v40 = sub_25E0B71C0(v39);
              sub_25E0BF968(v40, (uint64_t)&v53);
              if (v54 != 1 && (v54 != 14 || v53 != 16))
              {
                uint64_t v42 = sqlite3_extended_errcode(*(sqlite3 **)(v0[92] + 136));
                uint64_t result = (uint64_t)sqlite3_errstr(v40);
                if (!result) {
                  goto LABEL_71;
                }
                uint64_t v43 = v0[92];
                uint64_t v26 = sub_25E0DB640();
                uint64_t v19 = v44;
                uint64_t result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v43 + 136));
                if (!result) {
                  goto LABEL_72;
                }
                uint64_t v20 = sub_25E0DB640();
                uint64_t v52 = v45;
                sub_25E04A188();
                swift_allocError();
                uint64_t v23 = v46;
                sub_25E0BF968(v42, (uint64_t)&v53);
                int v24 = v53;
                char v25 = v54;
                *(_DWORD *)uint64_t v23 = v42;
                goto LABEL_57;
              }
              uint64_t result = swift_release_n();
              if (v32) {
                goto LABEL_30;
              }
LABEL_31:
              int64_t v36 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                goto LABEL_64;
              }
              if (v36 >= v34)
              {
LABEL_60:
                uint64_t v48 = v0[92];
                swift_release();
                *(void *)(v48 + 128) = &off_270AED218;
                swift_unknownObjectWeakAssign();
                swift_release();
                swift_task_dealloc();
                uint64_t v49 = (uint64_t (*)(uint64_t))v0[1];
                uint64_t v50 = v0[92];
                return v49(v50);
              }
              uint64_t v37 = *(void *)(v29 + 8 * v36);
              ++v35;
              if (!v37)
              {
                int64_t v35 = v36 + 1;
                if (v36 + 1 >= v34) {
                  goto LABEL_60;
                }
                uint64_t v37 = *(void *)(v29 + 8 * v35);
                if (!v37)
                {
                  int64_t v35 = v36 + 2;
                  if (v36 + 2 >= v34) {
                    goto LABEL_60;
                  }
                  uint64_t v37 = *(void *)(v29 + 8 * v35);
                  if (!v37)
                  {
                    int64_t v38 = v36 + 3;
                    if (v38 >= v34) {
                      goto LABEL_60;
                    }
                    uint64_t v37 = *(void *)(v29 + 8 * v38);
                    if (!v37)
                    {
                      while (1)
                      {
                        int64_t v35 = v38 + 1;
                        if (__OFADD__(v38, 1)) {
                          goto LABEL_66;
                        }
                        if (v35 >= v34) {
                          goto LABEL_60;
                        }
                        uint64_t v37 = *(void *)(v29 + 8 * v35);
                        ++v38;
                        if (v37) {
                          goto LABEL_44;
                        }
                      }
                    }
                    int64_t v35 = v38;
                  }
                }
              }
LABEL_44:
              ;
            }
            goto LABEL_68;
          }
          uint64_t v11 = *(void *)(v2 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v9 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_65;
              }
              if (v9 >= v7) {
                goto LABEL_29;
              }
              uint64_t v11 = *(void *)(v2 + 8 * v9);
              ++v12;
              if (v11) {
                goto LABEL_16;
              }
            }
          }
          int64_t v9 = v12;
        }
      }
    }
LABEL_16:
    ;
  }
  uint64_t v16 = sqlite3_extended_errcode(*(sqlite3 **)(v0[92] + 136));
  uint64_t result = (uint64_t)sqlite3_errstr(v14);
  if (!result) {
    goto LABEL_69;
  }
  uint64_t v17 = v0[92];
  uint64_t v51 = sub_25E0DB640();
  uint64_t v19 = v18;
  uint64_t result = (uint64_t)sqlite3_errmsg(*(sqlite3 **)(v17 + 136));
  if (!result) {
    goto LABEL_70;
  }
  uint64_t v20 = sub_25E0DB640();
  uint64_t v52 = v21;
  sub_25E04A188();
  swift_allocError();
  uint64_t v23 = v22;
  sub_25E0BF968(v16, (uint64_t)&v53);
  int v24 = v53;
  char v25 = v54;
  *(_DWORD *)uint64_t v23 = v16;
  uint64_t v26 = v51;
LABEL_57:
  *(_DWORD *)(v23 + 4) = v24;
  *(unsigned char *)(v23 + 8) = v25;
  *(void *)(v23 + 16) = v26;
  *(void *)(v23 + 24) = v19;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = v52;
  swift_willThrow();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v47();
}

uint64_t sub_25E091958()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v10 = *(void *)(v2 + 888);
  if (v0)
  {
    uint64_t v11 = *(void *)(v3 + 752);
    swift_release();
    uint64_t v12 = swift_release();
    OUTLINED_FUNCTION_55_3(v12, v13, v14, v15, v10 != 0);
    sub_25E093A34(v11);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_29();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v18 = *(void *)(v3 + 856);
  uint64_t v19 = *(void *)(v3 + 752);
  char v20 = v10 != 0;
  uint64_t v21 = *(void *)(v3 + 880) + 1;
  OUTLINED_FUNCTION_55_3(v6, v7, v8, v9, v20);
  sub_25E093A34(v19);
  if (v21 == v18)
  {
    swift_bridgeObjectRelease();
    *(void *)(v3 + 872) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_scalarFunctions;
    OUTLINED_FUNCTION_29();
    return MEMORY[0x270FA2498](v22, v23, v24);
  }
  uint64_t v26 = *(void *)(v3 + 880) + 1;
  *(void *)(v3 + 880) = v26;
  sub_25E0939D0(*(void *)(v3 + 848)+ ((*(unsigned __int8 *)(v3 + 92) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 92))+ *(void *)(v3 + 864) * v26, *(void *)(v3 + 752));
  sub_25E056BE8();
  uint64_t v28 = v27;
  *(void *)(v3 + 336) = 0xD000000000000010;
  *(void *)(v3 + 344) = 0x800000025E0E4970;
  *(unsigned char *)(v3 + 408) = 0;
  unint64_t v29 = *(void *)(v27 + 16);
  if (v29 >= *(void *)(v27 + 24) >> 1)
  {
    sub_25E056BE8();
    uint64_t v28 = v50;
  }
  *(void *)(v28 + 16) = v29 + 1;
  sub_25E07DE30(v3 + 336, v28 + 80 * v29 + 32);
  uint64_t v30 = sub_25E0BE344();
  *(void *)(v3 + 480) = MEMORY[0x263F8D310];
  *(void *)(v3 + 488) = &protocol witness table for String;
  *(void *)(v3 + 456) = v30;
  *(void *)(v3 + 464) = v31;
  sub_25E03DF54(v3 + 456, v3 + 176);
  *(unsigned char *)(v3 + 248) = 1;
  unint64_t v32 = *(void *)(v28 + 16);
  unint64_t v33 = *(void *)(v28 + 24);
  sub_25E0DB3C0();
  if (v32 >= v33 >> 1)
  {
    OUTLINED_FUNCTION_18_9();
    uint64_t v28 = v51;
  }
  uint64_t v57 = v3 + 416;
  OUTLINED_FUNCTION_27_8();
  sub_25E07DE30(v3 + 176, v34);
  __swift_destroy_boxed_opaque_existential_1(v3 + 456);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = 542327072;
  *(void *)(v3 + 24) = 0xE400000000000000;
  *(unsigned char *)(v3 + 88) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_45_5();
    uint64_t v28 = v52;
  }
  if (*(void *)(v28 + 16) >= *(void *)(v28 + 24) >> 1)
  {
    OUTLINED_FUNCTION_18_9();
    uint64_t v28 = v53;
  }
  int64_t v35 = *(uint64_t **)(v3 + 752);
  OUTLINED_FUNCTION_27_8();
  sub_25E07DE30(v3 + 16, v36);
  uint64_t v37 = *v35;
  uint64_t v38 = v35[1];
  *(void *)(v3 + 440) = MEMORY[0x263F8D310];
  *(void *)(v3 + 448) = &protocol witness table for String;
  *(void *)(v3 + 416) = v37;
  *(void *)(v3 + 424) = v38;
  sub_25E03DF54(v57, v3 + 256);
  *(unsigned char *)(v3 + 328) = 1;
  unint64_t v39 = *(void *)(v28 + 16);
  unint64_t v40 = *(void *)(v28 + 24);
  swift_bridgeObjectRetain_n();
  if (v39 >= v40 >> 1)
  {
    OUTLINED_FUNCTION_18_9();
    uint64_t v28 = v54;
  }
  OUTLINED_FUNCTION_27_8();
  sub_25E07DE30(v3 + 256, v41);
  __swift_destroy_boxed_opaque_existential_1(v57);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 104) = 0xE000000000000000;
  *(unsigned char *)(v3 + 168) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_45_5();
    uint64_t v28 = v55;
  }
  unint64_t v42 = *(void *)(v28 + 16);
  if (v42 >= *(void *)(v28 + 24) >> 1)
  {
    OUTLINED_FUNCTION_18_9();
    uint64_t v28 = v56;
  }
  *(void *)(v28 + 16) = v42 + 1;
  sub_25E07DE30(v3 + 96, v28 + 80 * v42 + 32);
  *(void *)(v3 + 576) = v28;
  *(_OWORD *)(v3 + 584) = 0u;
  *(void *)(v3 + 600) = MEMORY[0x263F8EE78];
  sub_25E0D6330();
  uint64_t v22 = *(void *)(v3 + 600);
  uint64_t v43 = *(void *)(v22 + 16);
  *(void *)(v3 + 888) = v43;
  if (v43)
  {
    uint64_t v44 = *(void *)(v3 + 576);
    uint64_t v45 = *(void *)(v3 + 584);
    uint64_t v46 = *(void *)(v3 + 592);
  }
  else
  {
    uint64_t v45 = *(void *)(v3 + 592);
    if (!v45)
    {
      __break(1u);
      return MEMORY[0x270FA2498](v22, v23, v24);
    }
    uint64_t v44 = *(void *)(v3 + 584);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = 0;
    uint64_t v22 = 0;
  }
  *(void *)(v3 + 920) = v22;
  *(void *)(v3 + 912) = v46;
  *(void *)(v3 + 904) = v45;
  *(void *)(v3 + 896) = v44;
  *(void *)(v3 + 496) = v44;
  *(void *)(v3 + 504) = v45;
  *(void *)(v3 + 512) = v46;
  *(void *)(v3 + 520) = v22;
  *(unsigned char *)(v3 + 528) = v43 != 0;
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v3 + 928) = v47;
  *uint64_t v47 = v5;
  v47[1] = sub_25E091958;
  OUTLINED_FUNCTION_29();
  return sub_25E0458B8();
}

uint64_t sub_25E091F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25E09228C(a4, sub_25E054158);
}

uint64_t sub_25E091F8C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(sqlite3 **)(v0 + 136);
  if (!v1)
  {
LABEL_13:
    sub_25E0923C8(v0 + 120);
    sub_25E04E474(*(void *)(v0 + 144));
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    return v0;
  }
  OUTLINED_FUNCTION_24();
  uint64_t v2 = OUTLINED_FUNCTION_24();
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 176);
  MEMORY[0x270FA5388](v2);
  _s9StatementCMa();
  v15[0] = v3;
  v15[1] = v4;
  void v15[2] = v5;
  v15[3] = sub_25E093950;
  v15[4] = swift_getKeyPath();
  int v13 = *(unsigned __int8 *)(v0 + 112);
  int v14 = *(unsigned __int8 *)(v0 + 113);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v6 = sub_25E0DB3C0();
  unint64_t v7 = (unint64_t)sub_25E0A8988(v6);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t result = sub_25E05AD48((uint64_t)v15);
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v11 = swift_bridgeObjectRelease();
    if (((v14 ^ 1 | v13) & 1) == 0)
    {
      uint64_t v12 = OUTLINED_FUNCTION_63_2(v11, "PRAGMA analysis_limit=400");
      OUTLINED_FUNCTION_63_2(v12, "PRAGMA optimize");
    }
    sqlite3_close_v2(v1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  sub_25E0DB3C0();
  uint64_t v9 = sub_25E0DC190();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_10;
  }
LABEL_4:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        MEMORY[0x2611CE430](i, v7);
      }
      else {
        swift_retain();
      }
      sub_25E04EED0();
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E09222C()
{
  sub_25E091F8C();

  return MEMORY[0x270FA2418](v0);
}

uint64_t _s10ConnectionCMa()
{
  return self;
}

ValueMetadata *_s10ConnectionC6LimitsVMa()
{
  return &_s10ConnectionC6LimitsVN;
}

uint64_t sub_25E09228C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2();
  if (!v2)
  {
    int v5 = result;
    uint64_t result = sub_25E0BF968(result, (uint64_t)&v19);
    if (v20 != 1 && (v20 != 14 || v19 != 16))
    {
      unint64_t v7 = (sqlite3 **)(a1 + 136);
      OUTLINED_FUNCTION_11_8();
      uint64_t v8 = sqlite3_extended_errcode(*(sqlite3 **)(a1 + 136));
      uint64_t result = (uint64_t)sqlite3_errstr(v5);
      if (result)
      {
        uint64_t v9 = sub_25E0DB640();
        uint64_t v11 = v10;
        uint64_t result = (uint64_t)sqlite3_errmsg(*v7);
        if (result)
        {
          uint64_t v12 = sub_25E0DB640();
          uint64_t v14 = v13;
          sub_25E04A188();
          OUTLINED_FUNCTION_25_2();
          uint64_t v16 = v15;
          sub_25E0BF968(v8, (uint64_t)&v21);
          int v17 = v21;
          char v18 = v22;
          *(_DWORD *)uint64_t v16 = v8;
          *(_DWORD *)(v16 + 4) = v17;
          *(unsigned char *)(v16 + 8) = v18;
          *(void *)(v16 + 16) = v9;
          *(void *)(v16 + 24) = v11;
          *(void *)(v16 + 32) = v12;
          *(void *)(v16 + 40) = v14;
          return swift_willThrow();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_25E0923A0()
{
  return v0;
}

uint64_t sub_25E0923AC()
{
  return sub_25E0923A0();
}

uint64_t sub_25E0923C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E0923F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_25E0DC4D0();
  sub_25E0DB5E0();
  uint64_t result = sub_25E0DC500();
  if (!__OFSUB__(1 << *a4, 1))
  {
    sub_25E0DAFC0();
    uint64_t result = sub_25E0DAFF0();
    unint64_t v9 = result;
    if (v10) {
      return v9;
    }
    while ((v9 & 0x8000000000000000) == 0)
    {
      if (v9 >= *(void *)(a3 + 16)) {
        goto LABEL_13;
      }
      uint64_t v11 = (void *)(a3 + 32 + 16 * v9);
      if ((*v11 != a1 || v11[1] != a2) && (sub_25E0DC380() & 1) == 0)
      {
        sub_25E0DB010();
        uint64_t result = sub_25E0DAFF0();
        unint64_t v9 = result;
        if ((v13 & 1) == 0) {
          continue;
        }
      }
      return v9;
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E09255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_25E0DC4D0();
  sub_25E0DB5E0();
  uint64_t result = sub_25E0DC500();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    sub_25E0DAFC0();
    uint64_t v10 = sub_25E0DAFF0();
    uint64_t v11 = v10;
    if ((v12 & 1) == 0)
    {
      char v13 = (void *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if (sub_25E0DC380()) {
            break;
          }
          sub_25E0DB010();
          uint64_t v15 = sub_25E0DAFF0();
          uint64_t v11 = v15;
          if (v16) {
            break;
          }
          int v17 = (void *)(a3 + 16 * v15);
        }
        while (*v17 != a1 || v17[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

void sub_25E0926C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  uint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  sub_25E0DB3C0();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_25E03CB2C(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    sub_25E03CB2C(v10 > 1, v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  uint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  v3[1] = v7;
  unint64_t v13 = *(void *)(v7 + 16);
  uint64_t v14 = *v3;
  if (*v3)
  {
    OUTLINED_FUNCTION_24();
    if (MEMORY[0x2611CD540](*(void *)(v14 + 16) & 0x3FLL) < (uint64_t)v13)
    {
      uint64_t v15 = *(void *)(v14 + 24) & 0x3FLL;
      if (v13 <= 0xF && v15 == 0)
      {
        swift_release();
        *uint64_t v3 = 0;
        return;
      }
      goto LABEL_15;
    }
    sub_25E09281C();
    if (*v3) {
      sub_25E092868();
    }
    else {
      __break(1u);
    }
  }
  else if (v13 > 0xF)
  {
    uint64_t v15 = 0;
LABEL_15:
    uint64_t v17 = MEMORY[0x2611CD570](v13);
    sub_25E092C80(v17, v15);
  }
}

uint64_t sub_25E09281C()
{
  uint64_t result = *v0;
  if (*v0)
  {
    uint64_t result = swift_isUniquelyReferenced_native();
    if (!result)
    {
      uint64_t result = *v0;
      if (*v0)
      {
        uint64_t v2 = sub_25E0DB040();
        uint64_t result = swift_release();
        uint64_t *v0 = v2;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_25E092868()
{
  return sub_25E0DAFE0();
}

uint64_t sub_25E0928D0(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v4 >= 1)
  {
    uint64_t v7 = result;
    unint64_t v8 = *(void *)(a3 + 16);
    if ((uint64_t)(v8 - v4) / 2 <= result)
    {
      uint64_t v21 = a2;
      BOOL v22 = __OFSUB__(v8, a2);
      uint64_t v23 = v8 - a2;
      if (v22)
      {
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      if (v23 >= MEMORY[0x2611CD540](*a4 & 0x3FLL) / 3)
      {
        sub_25E0DAFC0();
        OUTLINED_FUNCTION_46_2();
        do
        {
          uint64_t v45 = OUTLINED_FUNCTION_19_9();
          if ((v46 & 1) == 0 && v45 >= v21)
          {
            BOOL v22 = __OFSUB__(v45, v4);
            uint64_t result = v45 - v4;
            if (v22) {
              goto LABEL_53;
            }
            sub_25E0DB000();
          }
          uint64_t result = sub_25E0DB010();
        }
        while (v54);
      }
      else
      {
        uint64_t result = sub_25E092E64(v21, a3);
        if (v24 != v25 >> 1)
        {
          uint64_t v26 = v24;
          uint64_t v49 = result;
          unint64_t v27 = v25 >> 1;
          if (v24 >= (uint64_t)(v25 >> 1))
          {
LABEL_63:
            __break(1u);
            return result;
          }
          do
          {
            sub_25E0DC4D0();
            sub_25E0DB3C0();
            sub_25E0DB5E0();
            uint64_t result = sub_25E0DC500();
            if (__OFSUB__(1 << *a4, 1)) {
              goto LABEL_54;
            }
            OUTLINED_FUNCTION_53_3();
            OUTLINED_FUNCTION_52_3();
            if (v28)
            {
              do
              {
                uint64_t v29 = OUTLINED_FUNCTION_37_6();
                if ((v30 & 1) == 0 && v29 == v21) {
                  break;
                }
                uint64_t v31 = sub_25E0DB010();
              }
              while (OUTLINED_FUNCTION_50_3(v31, v32, v33, v34, v35, v36, v37, v38, v47, v49, v50, v51, v52, v53));
            }
            uint64_t result = v21 - v4;
            if (__OFSUB__(v21, v4)) {
              goto LABEL_55;
            }
            sub_25E0DB000();
            uint64_t result = swift_bridgeObjectRelease();
            BOOL v22 = __OFADD__(v21++, 1);
            if (v22) {
              goto LABEL_56;
            }
          }
          while (++v26 != v27);
        }
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t result = MEMORY[0x2611CD540](*a4 & 0x3FLL);
      if (result / 3 <= v7)
      {
        sub_25E0DAFC0();
        OUTLINED_FUNCTION_46_2();
        do
        {
          uint64_t v39 = OUTLINED_FUNCTION_19_9();
          if ((v40 & 1) == 0 && v39 < v7)
          {
            BOOL v22 = __OFADD__(v39, v4);
            uint64_t result = v39 + v4;
            if (v22) {
              goto LABEL_52;
            }
            sub_25E0DB000();
          }
          uint64_t result = sub_25E0DB010();
        }
        while (v54);
      }
      else
      {
        if (v7 < 0)
        {
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (v8 < v7)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v7)
        {
          swift_retain();
          uint64_t v9 = 0;
          while (1)
          {
            sub_25E0DC4D0();
            sub_25E0DB3C0();
            sub_25E0DB5E0();
            uint64_t result = sub_25E0DC500();
            if (__OFSUB__(1 << *a4, 1)) {
              break;
            }
            OUTLINED_FUNCTION_53_3();
            OUTLINED_FUNCTION_52_3();
            if (v10)
            {
              do
              {
                uint64_t v11 = OUTLINED_FUNCTION_37_6();
                if ((v12 & 1) == 0 && v11 == v9) {
                  break;
                }
                uint64_t v13 = sub_25E0DB010();
              }
              while (OUTLINED_FUNCTION_50_3(v13, v14, v15, v16, v17, v18, v19, v20, v47, v48, v50, v51, v52, v53));
            }
            uint64_t result = v9 + v4;
            if (__OFADD__(v9, v4)) {
              goto LABEL_51;
            }
            ++v9;
            sub_25E0DB000();
            swift_bridgeObjectRelease();
            if (v9 == v7)
            {
              uint64_t result = swift_release();
              goto LABEL_38;
            }
          }
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
      }
LABEL_38:
      uint64_t v41 = a4[1];
      if (__OFSUB__(v41 >> 6, v4))
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      uint64_t v42 = 1 << *a4;
      BOOL v22 = __OFSUB__(v42, 1);
      uint64_t v43 = v42 - 1;
      if (v22)
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v44 = (v43 & (((v41 >> 6) - v4) >> 63)) + (v41 >> 6) - v4;
      if (v44 < v43) {
        uint64_t v43 = 0;
      }
      a4[1] = a4[1] & 0x3FLL | ((v44 - v43) << 6);
    }
  }
  return result;
}

uint64_t sub_25E092C80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a2 <= a1) {
    a2 = a1;
  }
  uint64_t v4 = sub_25E092CC8(v2[1], a2, 0, v3);
  uint64_t result = swift_release();
  *uint64_t v2 = v4;
  return result;
}

uint64_t sub_25E092CC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x2611CD570](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x2611CD580]();
    sub_25E092D50(a1, (void *)(v9 + 16));
  }
  return v9;
}

uint64_t sub_25E092D50(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      sub_25E0DC4D0();
      sub_25E0DB3C0();
      sub_25E0DB5E0();
      uint64_t result = sub_25E0DC500();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      uint64_t v5 = sub_25E0DAFC0();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          sub_25E0DB010();
      }
      uint64_t result = sub_25E0DB000();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_25E092E64(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t sub_25E092EC4(uint64_t result, char a2)
{
  if (result < 0) {
    goto LABEL_25;
  }
  uint64_t v3 = v2;
  uint64_t v5 = result;
  sub_25E0BB034(result);
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  if (*v2)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(v7 + 16) & 0x3FLL;
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t v9 = MEMORY[0x2611CD570](v5);
  uint64_t v10 = v9;
  if (a2) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v7 && (a2 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v7 + 24) & 0x3FLL;
  }
  if (v8 < v10)
  {
    uint64_t v12 = v10;
    return sub_25E092C80(v12, v11);
  }
  if (v11 > v10) {
    uint64_t v10 = v11;
  }
  uint64_t v12 = MEMORY[0x2611CD570](*(void *)(v6 + 16));
  if (v12 <= v10) {
    uint64_t v12 = v10;
  }
  if (v12 < v8) {
    return sub_25E092C80(v12, v11);
  }
  uint64_t result = sub_25E09281C();
  uint64_t v13 = *v3;
  if (!v13)
  {
    if (!v11) {
      return result;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t result = swift_beginAccess();
  if ((*(void *)(v13 + 24) & 0x3FLL) != v11) {
    *(void *)(v13 + 24) = *(void *)(v13 + 24) & 0xFFFFFFFFFFFFFFC0 | v11 & 0x3F;
  }
  return result;
}

void sub_25E093004(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v13 = *(void *)(v7 + 24) >> 1, v13 < v9))
  {
    if (v8 <= v9) {
      int64_t v14 = v8 + v6;
    }
    else {
      int64_t v14 = v8;
    }
    sub_25E03CB84(isUniquelyReferenced_nonNull_native, v14, 1);
    uint64_t v7 = *v4;
    int64_t v13 = *(void *)(*v4 + 24) >> 1;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
LABEL_16:
      swift_unknownObjectRelease();
      *uint64_t v4 = v7;
      return;
    }
    __break(1u);
  }
  if (v13 - *(void *)(v7 + 16) < v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_25E03BCC4(a2 + 40 * a3, v6);
  if (v6 <= 0) {
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)(v7 + 16);
  BOOL v16 = __OFADD__(v15, v6);
  uint64_t v17 = v15 + v6;
  if (!v16)
  {
    *(void *)(v7 + 16) = v17;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

unint64_t sub_25E093114(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(*(void *)(v1 + 8) + 16);
    BOOL v3 = v2 >= result;
    uint64_t result = v2 - result;
    if (v3) {
      return sub_25E0931A8(result, v2);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E093134(uint64_t result)
{
  if (!result) {
    return result;
  }
  if (result < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  uint64_t result = sub_25E0938B8(v2, -result, 0);
  if (v3)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (v2 < result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  return sub_25E093458(result, v2);
}

uint64_t sub_25E0931A8(uint64_t result, uint64_t a2)
{
  unint64_t v4 = result;
  unint64_t v5 = v2 + 1;
  uint64_t v6 = *v2;
  if (!*v2) {
    return sub_25E093564(v4, a2);
  }
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v7 <= 0) {
    return result;
  }
  int64_t v8 = v2;
  uint64_t v9 = *(void *)(v2[1] + 16);
  uint64_t v10 = v9 - v7;
  if (__OFSUB__(v9, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v9 / 2 < v10)
  {
    swift_beginAccess();
    if ((*(void *)(v6 + 16) & 0x3FLL) == (*(void *)(v6 + 24) & 0x3FLL))
    {
      if ((v10 & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
    }
    else if (v10 >= sub_25E0DB030())
    {
LABEL_8:
      uint64_t result = sub_25E09281C();
      uint64_t v11 = *v8;
      if (*v8)
      {
        swift_retain();
        sub_25E093328(v11 + 16, v11 + 32, (uint64_t)v8, v4, a2);
        swift_release();
        return sub_25E093564(v4, a2);
      }
      goto LABEL_19;
    }
  }
  sub_25E093564(v4, a2);
  uint64_t v12 = *v5;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v6 + 24) & 0x3FLL;
  if (*(void *)(v12 + 16) > 0xFuLL || v13)
  {
    uint64_t v14 = MEMORY[0x2611CD570]();
    return sub_25E092C80(v14, v13);
  }
  else
  {
    uint64_t result = swift_release();
    *int64_t v8 = 0;
  }
  return result;
}

uint64_t sub_25E093328(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(a3 + 8);
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 < a4 || (uint64_t)v8 < a5) {
    goto LABEL_16;
  }
  if (a5 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = (void *)result;
  unint64_t v12 = a5 - a4;
  if (a5 == a4) {
    return sub_25E0928D0(a4, a5, v7, v11);
  }
  if (a5 > a4)
  {
    uint64_t v19 = a5;
    swift_retain();
    uint64_t v13 = (uint64_t *)(v7 + 16 * a4 + 40);
    while (1)
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      uint64_t v16 = *(void *)(a3 + 8);
      sub_25E0DB3C0();
      uint64_t result = sub_25E0923F0(v14, v15, v16, v11);
      if (v18) {
        break;
      }
      v13 += 2;
      sub_25E0534E8(v17, v11, a2, a3);
      swift_bridgeObjectRelease();
      if (!--v12)
      {
        swift_release();
        uint64_t v7 = *(void *)(a3 + 8);
        a5 = v19;
        return sub_25E0928D0(a4, a5, v7, v11);
      }
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E093458(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_25E03CB0C(isUniquelyReferenced_nonNull_native, v11, 1);
    uint64_t v4 = *v2;
  }
  unint64_t v12 = (char *)(v4 + 32 + 24 * v6);
  sub_25E03E284();
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  if (__OFSUB__(v13, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_25E03B3C8((char *)(v4 + 32 + 24 * a2), v13 - a2, v12);
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 - v7;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_16:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E093564(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_25E03CB2C(isUniquelyReferenced_nonNull_native, v11, 1);
    uint64_t v4 = *v2;
  }
  unint64_t v12 = (char *)(v4 + 32 + 16 * v6);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v13 = *(void *)(v4 + 16);
  if (__OFSUB__(v13, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_25E03B3CC((char *)(v4 + 32 + 16 * a2), v13 - a2, v12);
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 - v7;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_16:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E093664(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = *v5;
  uint64_t v8 = *(void *)(*v5 + 16);
  if (v8 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = result;
  uint64_t v10 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v5 = v7;
  if (!isUniquelyReferenced_nonNull_native || v12 > *(void *)(v7 + 24) >> 1)
  {
    if (v8 <= v12) {
      uint64_t v16 = v8 + v11;
    }
    else {
      uint64_t v16 = v8;
    }
    sub_25E03CB0C(isUniquelyReferenced_nonNull_native, v16, 1);
    uint64_t v7 = *v5;
  }
  uint64_t v17 = v7 + 32 + 24 * v9;
  sub_25E03E284();
  uint64_t result = swift_arrayDestroy();
  if (!v11) {
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(v7 + 16);
  if (__OFSUB__(v18, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_25E03B3C8((char *)(v7 + 32 + 24 * a2), v18 - a2, (char *)(v17 + 24));
  uint64_t v19 = *(void *)(v7 + 16);
  BOOL v20 = __OFADD__(v19, v11);
  uint64_t v21 = v19 + v11;
  if (!v20)
  {
    *(void *)(v7 + 16) = v21;
LABEL_16:
    *(void *)uint64_t v17 = a3;
    *(void *)(v17 + 8) = a4;
    *(unsigned char *)(v17 + 16) = a5 & 1;
    *uint64_t v5 = v7;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E0937A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = result;
  uint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v6;
  if (!isUniquelyReferenced_nonNull_native || v11 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v11) {
      uint64_t v15 = v7 + v10;
    }
    else {
      uint64_t v15 = v7;
    }
    sub_25E03CB2C(isUniquelyReferenced_nonNull_native, v15, 1);
    uint64_t v6 = *v4;
  }
  uint64_t v16 = v6 + 32 + 16 * v8;
  uint64_t result = swift_arrayDestroy();
  if (!v10) {
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(v6 + 16);
  if (__OFSUB__(v17, a2)) {
    goto LABEL_22;
  }
  uint64_t result = (uint64_t)sub_25E03B3CC((char *)(v6 + 32 + 16 * a2), v17 - a2, (char *)(v16 + 16));
  uint64_t v18 = *(void *)(v6 + 16);
  BOOL v19 = __OFADD__(v18, v10);
  uint64_t v20 = v18 + v10;
  if (!v19)
  {
    *(void *)(v6 + 16) = v20;
LABEL_16:
    *(void *)uint64_t v16 = a3;
    *(void *)(v16 + 8) = a4;
    *uint64_t v4 = v6;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_25E0938B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_25E093904@<X0>(void *a1@<X8>)
{
  uint64_t result = swift_getAtKeyPath();
  *a1 = v3;
  return result;
}

uint64_t sub_25E093950@<X0>(void *a1@<X8>)
{
  return sub_25E093904(a1);
}

uint64_t sub_25E093958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25E091F20(a1, a2, a3, v3);
}

uint64_t sub_25E093960()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E093998(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, a1[1], *a2);
}

uint64_t sub_25E0939D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SQLDatabase.AttachedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E093A34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SQLDatabase.AttachedLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E093A90@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = (void *)result;
  uint64_t v8 = *a4;
  uint64_t v9 = a4[1];
  if (a3)
  {
    uint64_t v10 = (void *)(a3 + 16);
    swift_retain();
    uint64_t v11 = sub_25E09255C(v8, v9, (uint64_t)v6, a2, v10);
    char v13 = v12;
    uint64_t v15 = v14;
    uint64_t result = swift_release();
    char v16 = v13 & 1;
  }
  else
  {
    if (!a2) {
      goto LABEL_11;
    }
    uint64_t result = *(void *)result;
    BOOL v17 = *v6 == v8 && v6[1] == v9;
    if (v17 || (uint64_t result = OUTLINED_FUNCTION_43_3(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 0;
      goto LABEL_12;
    }
    if (a2 == 1) {
      goto LABEL_11;
    }
    uint64_t result = v6[2];
    BOOL v18 = result == v8 && v6[3] == v9;
    if (v18 || (uint64_t result = OUTLINED_FUNCTION_43_3(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 1;
      goto LABEL_12;
    }
    if (a2 == 2)
    {
LABEL_11:
      uint64_t v15 = 0;
      uint64_t v11 = 0;
      char v16 = 1;
      goto LABEL_12;
    }
    uint64_t result = v6[4];
    BOOL v19 = result == v8 && v6[5] == v9;
    if (v19 || (uint64_t result = OUTLINED_FUNCTION_43_3(), (result & 1) != 0))
    {
      uint64_t v15 = 0;
      char v16 = 0;
      uint64_t v11 = 2;
    }
    else
    {
      uint64_t v20 = v6 + 7;
      uint64_t v21 = 2;
      uint64_t v22 = 3;
      while (1)
      {
        char v16 = a2 == v22;
        if (a2 == v22)
        {
          uint64_t v15 = 0;
          uint64_t v11 = 0;
          goto LABEL_12;
        }
        uint64_t v23 = v21 + 1;
        uint64_t result = *(v20 - 1);
        if (result == v8 && *v20 == v9) {
          break;
        }
        uint64_t v25 = v23;
        uint64_t v11 = v22;
        uint64_t result = sub_25E0DC380();
        uint64_t v15 = 0;
        uint64_t v22 = v11 + 1;
        v20 += 2;
        uint64_t v21 = v25;
        if (result) {
          goto LABEL_12;
        }
      }
      uint64_t v15 = 0;
      uint64_t v11 = v23;
    }
  }
LABEL_12:
  *(void *)a5 = v11;
  *(unsigned char *)(a5 + 8) = v16;
  *(void *)(a5 + 16) = v15;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  *(_DWORD *)uint64_t v15 = v11;
  *(_DWORD *)(v15 + 4) = a9;
  *(unsigned char *)(v15 + 8) = a10;
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v13;
  *(void *)(v15 + 32) = v10;
  *(void *)(v15 + 40) = v14;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_18_9()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return sub_25E0DAFF0();
}

uint64_t OUTLINED_FUNCTION_25_8@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_27_8()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_29_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_25E0BF968(v9, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return v0;
}

void OUTLINED_FUNCTION_34_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 304) = *(void *)(a12 + 16);
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return sub_25E0DAFF0();
}

uint64_t OUTLINED_FUNCTION_43_3()
{
  return sub_25E0DC380();
}

const char *OUTLINED_FUNCTION_44_5()
{
  uint64_t v2 = *v0;
  return sqlite3_errmsg(v2);
}

void OUTLINED_FUNCTION_45_5()
{
  sub_25E056BE8();
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return sub_25E07DE30(v2, v1 + 80 * v0 + 32);
}

uint64_t OUTLINED_FUNCTION_50_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return sub_25E0DAFC0();
}

const char *OUTLINED_FUNCTION_54_2()
{
  return sqlite3_errstr(v0);
}

uint64_t OUTLINED_FUNCTION_55_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_25E03DEA4(v8, v7, v6, v5, a5);
}

uint64_t OUTLINED_FUNCTION_59_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_25E0BF968(a1, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_60_2(uint64_t result)
{
  *(void *)(v1 + 344) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_63_2(uint64_t a1, const char *a2)
{
  return sqlite3_exec(v2, a2, 0, 0, 0);
}

uint64_t sub_25E093FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator();
  *(void *)(a2 + *(int *)(v4 + 36)) = MEMORY[0x263F8EE78];
  *(_WORD *)(a2 + *(int *)(v4 + 40)) = 256;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v6(a2, a1, AssociatedTypeWitness);
}

uint64_t AsyncNullSeparatedSequence.AsyncIterator.next()()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[4] = v4;
  uint64_t v5 = *(void *)(v3 + 16);
  v1[5] = v5;
  uint64_t v6 = *(void *)(v3 + 24);
  v1[6] = v6;
  *uint64_t v4 = v1;
  v4[1] = sub_25E094110;
  uint64_t v7 = v1[3];
  return sub_25E094520(v7, v5, v6);
}

uint64_t sub_25E094110()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(_WORD *)(v2 + 56) = v4;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_9();
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_25E094214, 0, 0);
  }
}

uint64_t sub_25E094214()
{
  __int16 v1 = *(_WORD *)(v0 + 56);
  if ((v1 & 0x100) != 0)
  {
    uint64_t v13 = *(void *)(v0 + 24);
    if (!*(void *)(*(void *)(v13 + *(int *)(*(void *)(v0 + 16) + 36)) + 16))
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      goto LABEL_15;
    }
  }
  else
  {
    if ((_BYTE)v1)
    {
      uint64_t v2 = *(void *)(v0 + 24);
      uint64_t v3 = *(int *)(*(void *)(v0 + 16) + 36);
      uint64_t v4 = *(void *)(v2 + v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25E056838();
        uint64_t v4 = v17;
      }
      unint64_t v5 = *(void *)(v4 + 16);
      if (v5 >= *(void *)(v4 + 24) >> 1)
      {
        sub_25E056838();
        uint64_t v4 = v18;
      }
      char v6 = *(unsigned char *)(v0 + 56);
      *(void *)(v4 + 16) = v5 + 1;
      *(unsigned char *)(v4 + v5 + 32) = v6;
      *(void *)(v2 + v3) = v4;
      uint64_t v7 = *(void *)(v0 + 16);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 32) = v8;
      uint64_t v9 = *(void *)(v7 + 16);
      *(void *)(v0 + 40) = v9;
      uint64_t v10 = *(void *)(v7 + 24);
      *(void *)(v0 + 48) = v10;
      *uint64_t v8 = v0;
      v8[1] = sub_25E094110;
      uint64_t v11 = *(void *)(v0 + 24);
      return sub_25E094520(v11, v9, v10);
    }
    uint64_t v13 = *(void *)(v0 + 24);
  }
  uint64_t v14 = sub_25E0943C8(v13);
LABEL_15:
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v16(v14, v15);
}

uint64_t sub_25E0943C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator() + 36))
                 + 16);
  if (v2)
  {
    sub_25E0DB3C0();
    uint64_t v2 = sub_25E0DB5C0();
    swift_bridgeObjectRelease();
  }
  sub_25E094460(a1);
  return v2;
}

void sub_25E094460(uint64_t a1)
{
  __int16 v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator() + 36));
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_25E073C2C(0, *(void *)(v3 + 16));
  }
  else
  {
    if (*(void *)(v3 + 24) >= 2uLL)
    {
      sub_25E095F04();
      uint64_t v4 = (void *)swift_allocObject();
      size_t v5 = _swift_stdlib_malloc_size(v4);
      v4[2] = 0;
      v4[3] = 2 * v5 - 64;
    }
    else
    {
      uint64_t v4 = (void *)MEMORY[0x263F8EE78];
    }
    *__int16 v1 = (uint64_t)v4;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25E094520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sqlite3_int64 v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_25E094544, 0, 0);
}

uint64_t sub_25E094544()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (unsigned __int8 *)(v1 + *(int *)(type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator() + 40));
  if (v2[1])
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    size_t v5 = (void *)swift_task_alloc();
    v0[5] = v5;
    *size_t v5 = v0;
    v5[1] = sub_25E0946C0;
    return MEMORY[0x270FA1E80](v0 + 7, AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v6 = *v2;
    sub_25E094880(v1);
    uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
    return v7(v6);
  }
}

uint64_t sub_25E0946C0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *size_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_25E094820;
  }
  else {
    uint64_t v7 = sub_25E0947A4;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_25E0947A4()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  int v2 = *(unsigned __int8 *)(v0 + 57);
  sub_25E094880(*(void *)(v0 + 16));
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3(v1 | (v2 << 8));
}

uint64_t sub_25E094820()
{
  OUTLINED_FUNCTION_12();
  sub_25E094880(*(void *)(v0 + 16));
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t sub_25E094880(uint64_t a1)
{
  uint64_t result = type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator();
  *(_WORD *)(a1 + *(int *)(result + 40)) = 256;
  return result;
}

uint64_t sub_25E0948B4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  int v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *int v2 = v1;
  v2[1] = sub_25E09494C;
  return AsyncNullSeparatedSequence.AsyncIterator.next()();
}

uint64_t sub_25E09494C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v3;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v11 = *(void **)(v7 + 16);
    *uint64_t v11 = a1;
    v11[1] = a2;
  }
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

uint64_t sub_25E094A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[3] = AssociatedTypeWitness;
  v6[4] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = swift_task_alloc();
  v6[5] = v13;
  uint64_t v16 = (void *)swift_task_alloc();
  v6[6] = v16;
  *uint64_t v16 = v6;
  v16[1] = sub_25E094B8C;
  return MEMORY[0x270FA1E90](a1, a2, a3, a5, a6, v13, v14, v15);
}

uint64_t sub_25E094B8C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0) {
    (*(void (**)(void, void, void))(v3[4] + 32))(v3[2], v3[5], v3[3]);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v7();
}

uint64_t AsyncNullSeparatedSequence.makeAsyncIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0_3();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v2, v4);
  sub_25E0DBB20();
  return sub_25E093FB0((uint64_t)v12, a2);
}

uint64_t sub_25E094DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  AsyncNullSeparatedSequence.makeAsyncIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v4(v2, a1);
}

uint64_t AsyncSequence<>.nullSeparated.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v8, a1);
}

uint64_t sub_25E094EC4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_25E094F64()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E094F80()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E095010(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_25E0950C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_25E0950F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25E095144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25E095194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25E0951E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_25E095234(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_25E095380(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x25E095584);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncNullSeparatedSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E0955C4()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E09567C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 10 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
    sub_25E0DB3C0();
  }
  return a1;
}

uint64_t sub_25E09579C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);

  return swift_bridgeObjectRelease();
}

uint64_t sub_25E095830(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  sub_25E0DB3C0();
  return a1;
}

uint64_t sub_25E0958DC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_25E095994(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_25E095A3C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(v7 + 8) = *(_WORD *)(v8 + 8);
  return a1;
}

uint64_t sub_25E095AEC(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 10;
    if (v8 <= 3) {
      unsigned int v9 = ((a2 - v6 + 0xFFFF) >> (8 * v8)) + 1;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v8);
        if (*(unsigned __int16 *)((char *)a1 + v8)) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25E095C98);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v8);
        if (!v12) {
          break;
        }
LABEL_22:
        int v14 = (v12 - 1) << (8 * v8);
        if (v8 <= 3)
        {
          int v15 = *a1;
        }
        else
        {
          int v14 = 0;
          int v15 = *(_DWORD *)a1;
        }
        return v6 + (v15 | v14) + 1;
      default:
        break;
    }
  }
  if (v5 < 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, AssociatedTypeWitness);
  }
}

void sub_25E095CAC(unsigned int *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 10;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    if (v10 <= 3) {
      unsigned int v12 = ((a3 - v8 + 0xFFFF) >> v11) + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    unsigned int v16 = v15 >> v11;
    bzero(a1, v10);
    if (v10 <= 3) {
      int v17 = v16 + 1;
    }
    else {
      int v17 = 1;
    }
    if (v10 > 3) {
      *a1 = v15;
    }
    else {
      *(_WORD *)a1 = v15;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v17;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v17;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(unsigned int *)((char *)a1 + v10) = v17;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x25E095EC4);
    case 4:
      *(unsigned int *)((char *)a1 + v10) = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = (a2 - 1);
          }
          *uint64_t v18 = v19;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, AssociatedTypeWitness);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AsyncNullSeparatedSequence.AsyncIterator()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25E095F04()
{
  if (!qword_26A6D4990)
  {
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D4990);
    }
  }
}

uint64_t SQLValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(*(void *)a1 + 16);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v14, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (v4) {
    return swift_release();
  }
  uint64_t v17 = v19;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v11, v13, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 56))(v11, a2, a3);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_25E09612C@<X0>(Swift::OpaquePointer a1@<X0>, Swift::Int a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_25E096158(a1, a2);
  if (!v3)
  {
    *a3 = result;
    a3[1] = v6;
  }
  return result;
}

uint64_t sub_25E096158(Swift::OpaquePointer a1, Swift::Int a2)
{
  return String.init(statement:index:)(a1, a2)._countAndFlagsBits;
}

uint64_t SQLColumnResult<>.init(statement:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  char v11 = (char *)&v14 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 8))(a1, a2, AssociatedTypeWitness);
  if (!v4) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 56))(v11, a3, a4);
  }
  return result;
}

uint64_t SQLValueError.message.getter()
{
  uint64_t v1 = *v0;
  sub_25E0DB3C0();
  return v1;
}

uint64_t SQLValueError.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*SQLValueError.message.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLValueError.errorUserInfo.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_25E0963BC();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
  *(void *)(inited + 32) = sub_25E0DB500();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  sub_25E0DB3C0();
  return sub_25E0DB3A0();
}

void sub_25E0963BC()
{
  if (!qword_26A6D5000)
  {
    sub_25E07403C();
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5000);
    }
  }
}

uint64_t sub_25E096414(uint64_t a1)
{
  unint64_t v2 = sub_25E096524();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_25E096450(uint64_t a1)
{
  unint64_t v2 = sub_25E096524();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t dispatch thunk of SQLValue.init(nativeValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SQLValue.nativeValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of SQLColumnResult.init(statement:index:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for SQLValueError()
{
  return &type metadata for SQLValueError;
}

unint64_t sub_25E096524()
{
  unint64_t result = qword_26A6D55B0;
  if (!qword_26A6D55B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D55B0);
  }
  return result;
}

uint64_t LRUDictionary.CodingKeys.init(stringValue:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = LRUDictionary.CodingKeys.init(rawValue:)(&v3);
  *a1 = v3;
  return result;
}

uint64_t LRUDictionary.CodingKeys.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_25E0DC210();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void sub_25E096604(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t LRUDictionary.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x436D756D6978616DLL;
  }
  else {
    return 0x656761726F7473;
  }
}

uint64_t LRUDictionary.CodingKeys.stringValue.getter()
{
  return LRUDictionary.CodingKeys.rawValue.getter();
}

uint64_t sub_25E0966B4()
{
  swift_getWitnessTable();

  return sub_25E0DC3F0();
}

uint64_t sub_25E096728(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25E096794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25E096804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25E096874@<X0>(char *a1@<X8>)
{
  return LRUDictionary.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_25E096880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LRUDictionary.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25E0968AC@<X0>(unsigned char *a1@<X8>)
{
  return LRUDictionary.CodingKeys.init(stringValue:)(a1);
}

uint64_t sub_25E0968C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25E096914(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void LRUDictionary<>.encode(to:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v30 = v2;
  uint64_t v31 = v1;
  uint64_t v29 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  uint64_t v26 = v6[2];
  uint64_t v27 = v8;
  type metadata accessor for LRUDictionary.CodingKeys();
  swift_getWitnessTable();
  uint64_t v28 = sub_25E0DC2B0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v24 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v23 = *(void *)(v0 + 40);
  HIDWORD(v21) = *(unsigned __int8 *)(v0 + 48);
  uint64_t v22 = *(void *)(v0 + 56);
  char v41 = *(unsigned char *)(v0 + 64);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  long long v25 = *(_OWORD *)(v0 + 24);
  sub_25E0DC5B0();
  uint64_t v14 = v12;
  long long v40 = v25;
  uint64_t v35 = v26;
  uint64_t v36 = v7;
  uint64_t v37 = v7;
  uint64_t v38 = v27;
  uint64_t v39 = v13;
  type metadata accessor for LRUDictionary.Container();
  sub_25E0DB110();
  uint64_t v34 = v29;
  uint64_t v15 = v28;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v32 = v30;
  uint64_t v33 = WitnessTable;
  swift_getWitnessTable();
  OUTLINED_FUNCTION_8_14();
  uint64_t v17 = v31;
  sub_25E0DC290();
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v15);
  }
  else
  {
    char v18 = BYTE4(v21);
    uint64_t v20 = v23;
    uint64_t v19 = v24;
    uint64_t v35 = v22;
    LOBYTE(v36) = v41;
    LOBYTE(v39) = 1;
    sub_25E096C0C();
    sub_25E096C58();
    OUTLINED_FUNCTION_1_14();
    uint64_t v35 = v20;
    LOBYTE(v36) = v18;
    LOBYTE(v39) = 2;
    OUTLINED_FUNCTION_1_14();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v15);
  }
  OUTLINED_FUNCTION_4_1();
}

uint64_t type metadata accessor for LRUDictionary.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25E096C0C()
{
  if (!qword_26A6D55B8)
  {
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D55B8);
    }
  }
}

unint64_t sub_25E096C58()
{
  unint64_t result = qword_26A6D55C0[0];
  if (!qword_26A6D55C0[0])
  {
    sub_25E096C0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D55C0);
  }
  return result;
}

void sub_25E096CC0()
{
}

void LRUDictionary<>.init(from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v44 = v0;
  uint64_t v37 = v2;
  uint64_t v38 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v35 = v11;
  type metadata accessor for LRUDictionary.CodingKeys();
  swift_getWitnessTable();
  uint64_t v39 = OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_0_3();
  uint64_t v36 = v12;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v48 = v8;
  uint64_t v49 = v6;
  uint64_t v50 = v6;
  uint64_t v51 = v4;
  type metadata accessor for LRUDictionary.Container();
  swift_getTupleTypeMetadata2();
  sub_25E0DB8C0();
  uint64_t v16 = sub_25E0DB0A0();
  uint64_t v41 = v17;
  uint64_t v42 = v16;
  uint64_t v40 = v18;
  uint64_t v19 = v10[3];
  uint64_t v43 = v10;
  __swift_project_boxed_opaque_existential_1(v10, v19);
  OUTLINED_FUNCTION_11_9();
  uint64_t v20 = v44;
  sub_25E0DC580();
  if (!v20)
  {
    uint64_t v21 = v36;
    sub_25E0DB110();
    uint64_t v47 = v37;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v45 = v38;
    uint64_t v46 = WitnessTable;
    swift_getWitnessTable();
    uint64_t v23 = v39;
    sub_25E0DC240();
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    uint64_t v26 = v50;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v27 = OUTLINED_FUNCTION_5_11(1);
    char v29 = v28;
    uint64_t v44 = v27;
    uint64_t v30 = OUTLINED_FUNCTION_5_11(2);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v21 + 8);
    LODWORD(v42) = v32;
    v31(v15, v23);
    sub_25E04E23C(0);
    uint64_t v33 = v35;
    *uint64_t v35 = 0;
    v33[1] = 0;
    v33[2] = v24;
    v33[3] = v25;
    v33[4] = v26;
    v33[5] = v30;
    *((unsigned char *)v33 + 48) = v42 & 1;
    v33[7] = v44;
    *((unsigned char *)v33 + 64) = v29 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  sub_25E04E474(0);
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_4_1();
}

void sub_25E096FF8()
{
}

uint64_t LRUDictionary.Container.CodingKeys.init(stringValue:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = LRUDictionary.Container.CodingKeys.init(rawValue:)(&v3);
  *a1 = v3;
  return result;
}

uint64_t LRUDictionary.Container.CodingKeys.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_25E0DC210();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_25E0970BC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t LRUDictionary.Container.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 1953722211;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t LRUDictionary.Container.CodingKeys.stringValue.getter()
{
  if (*v0) {
    return 1953722211;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_25E09712C()
{
  swift_getWitnessTable();

  return sub_25E0DC3F0();
}

uint64_t sub_25E0971A0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25E09720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25E09727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25E0972EC@<X0>(char *a1@<X8>)
{
  return LRUDictionary.Container.CodingKeys.init(rawValue:)(a1);
}

uint64_t sub_25E0972F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LRUDictionary.Container.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25E097324@<X0>(unsigned char *a1@<X8>)
{
  return LRUDictionary.Container.CodingKeys.init(stringValue:)(a1);
}

uint64_t sub_25E097338(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25E09738C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void LRUDictionary.Container<>.encode(to:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v20 = v2;
  uint64_t v21 = v1;
  uint64_t v19 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  long long v7 = *(_OWORD *)(v3 + 16);
  long long v18 = *(_OWORD *)(v3 + 32);
  long long v22 = v7;
  long long v23 = v18;
  type metadata accessor for LRUDictionary.Container.CodingKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_25E0DC2B0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v18 - v12;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  uint64_t v14 = v19;
  sub_25E0DC5B0();
  LOBYTE(v22) = 0;
  uint64_t v15 = v21;
  sub_25E0DC290();
  if (!v15)
  {
    uint64_t v16 = (uint64_t *)(v14 + *(int *)(v4 + 52));
    uint64_t v17 = *v16;
    LOBYTE(v16) = *((unsigned char *)v16 + 8);
    *(void *)&long long v22 = v17;
    BYTE8(v22) = (_BYTE)v16;
    sub_25E096C0C();
    sub_25E096C58();
    OUTLINED_FUNCTION_8_14();
    sub_25E0DC290();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  OUTLINED_FUNCTION_4_1();
}

void sub_25E097578()
{
}

void LRUDictionary.Container<>.init(from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v39 = v11;
  OUTLINED_FUNCTION_0_3();
  uint64_t v41 = v13;
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v43 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  uint64_t v49 = v19;
  type metadata accessor for LRUDictionary.Container.CodingKeys();
  swift_getWitnessTable();
  uint64_t v45 = OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_0_3();
  uint64_t v40 = v20;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v21);
  long long v23 = (char *)&v38 - v22;
  uint64_t v46 = v8;
  uint64_t v47 = v6;
  uint64_t v44 = v4;
  uint64_t v48 = v4;
  uint64_t v49 = v2;
  uint64_t v24 = type metadata accessor for LRUDictionary.Container();
  OUTLINED_FUNCTION_0_3();
  uint64_t v38 = v25;
  OUTLINED_FUNCTION_4();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  char v29 = (char *)&v38 - v28;
  uint64_t v30 = (char *)&v38 + *(int *)(v27 + 52) - v28;
  *(void *)uint64_t v30 = 0;
  v30[8] = 1;
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  OUTLINED_FUNCTION_11_9();
  sub_25E0DC580();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    uint64_t v31 = v40;
    uint64_t v32 = v41;
    LOBYTE(v46) = 0;
    sub_25E0DC240();
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v43, v44);
    LOBYTE(v46) = 1;
    uint64_t v33 = sub_25E0DC220();
    uint64_t v34 = v23;
    char v36 = v35;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v45);
    *(void *)uint64_t v30 = v33;
    v30[8] = v36 & 1;
    uint64_t v37 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v39, v29, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v24);
  }
  OUTLINED_FUNCTION_4_1();
}

void sub_25E097878()
{
}

uint64_t type metadata accessor for LRUDictionary.Container.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_25E0978B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E0978D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E0978F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E09790C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E097928()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E097944()
{
  return swift_getWitnessTable();
}

unsigned char *sub_25E097960(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E097A2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_25E097A54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E097B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  return v0;
}

uint64_t sub_25E097B5C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_25E03CCD4(0, v5, 0);
    uint64_t v7 = v16;
    uint64_t v8 = a1 + 40;
    do
    {
      uint64_t v9 = sub_25E0DAF20();
      uint64_t v11 = v10;
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_25E03CCD4(v12 > 1, v13 + 1, 1);
      }
      v8 += 16;
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      --v5;
    }
    while (v5);
    sub_25E06B99C(a2, a3);
  }
  else
  {
    sub_25E06B99C(a2, a3);
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

uint64_t sub_25E097C7C(uint64_t a1, unint64_t a2)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v2 = a2 >> 62;
  uint64_t v3 = MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_51;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v25 = BYTE6(a2);
      unint64_t v24 = HIDWORD(a1);
      uint64_t v32 = MEMORY[0x263F8EE78];
      uint64_t v7 = v4 & ~(v4 >> 63);
      sub_25E03CD4C(0, v7, 0);
      uint64_t v3 = v32;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_53;
        }
        uint64_t v8 = 0;
      }
      int v28 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_44;
            }
            uint64_t v10 = sub_25E0DAD20();
            if (!v10) {
              goto LABEL_54;
            }
            uint64_t v11 = v10;
            uint64_t v12 = sub_25E0DAD50();
            uint64_t v13 = v8 - v12;
            if (__OFSUB__(v8, v12)) {
              goto LABEL_47;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_46;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_48;
            }
            uint64_t v15 = sub_25E0DAD20();
            if (!v15) {
              goto LABEL_55;
            }
            uint64_t v11 = v15;
            uint64_t v16 = sub_25E0DAD50();
            uint64_t v13 = v8 - v16;
            if (__OFSUB__(v8, v16)) {
              goto LABEL_49;
            }
          }
          unsigned int v14 = *(unsigned __int8 *)(v11 + v13);
        }
        else
        {
          if (v8 >= v25) {
            goto LABEL_45;
          }
          LODWORD(v29) = a1;
          BYTE4(v29) = v24;
          *(_WORD *)((char *)&v29 + 5) = *(_WORD *)((char *)&a1 + 5);
          HIBYTE(v29) = HIBYTE(a1);
          int v30 = a2;
          __int16 v31 = WORD2(a2);
          unsigned int v14 = *((unsigned __int8 *)&v29 + v8);
        }
        if (isprint(v14))
        {
          unint64_t v17 = 0xE100000000000000;
          uint64_t v2 = 46;
        }
        else
        {
          unsigned int v18 = ((v14 >> 6) & 0xFFFFC0FF | ((v14 & 0x3F) << 8)) + 33217;
          if ((v14 & 0x80) == 0) {
            unsigned int v18 = v14 + 1;
          }
          uint64_t v29 = (v18 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v18) >> 3)) & 7)));
          uint64_t v2 = MEMORY[0x2611CDAF0](&v29);
          unint64_t v17 = v19;
        }
        uint64_t v32 = v3;
        unint64_t v21 = *(void *)(v3 + 16);
        unint64_t v20 = *(void *)(v3 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_25E03CD4C(v20 > 1, v21 + 1, 1);
          uint64_t v3 = v32;
        }
        *(void *)(v3 + 16) = v21 + 1;
        uint64_t v22 = v3 + 16 * v21;
        *(void *)(v22 + 32) = v2;
        *(void *)(v22 + 40) = v17;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v28;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_52;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_25E09802C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_25E0DAF10();
  if (!a1) {
    goto LABEL_43;
  }
  if (v5 == 0x8000000000000000 && a1 == -1)
  {
LABEL_44:
    __break(1u);
    JUMPOUT(0x25E098258);
  }
  sub_25E05719C();
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  uint64_t v10 = a2;
  uint64_t v11 = a2 >> 32;
  uint64_t v12 = BYTE6(a3);
  int64_t v13 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      int64_t v13 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      int64_t v13 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      int64_t v13 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  char v14 = 0;
  unint64_t v15 = 0;
  BOOL v16 = 0;
  unint64_t v17 = a3 >> 62;
  while (1)
  {
    BOOL v18 = v9 >= v13;
    if (a1 > 0) {
      BOOL v18 = v13 >= v9;
    }
    if (v18) {
      break;
    }
    BOOL v16 = !__OFADD__(v13, a1);
    if (__OFADD__(v13, a1)) {
      unint64_t v15 = 0x8000000000000000;
    }
    else {
      unint64_t v15 = 0;
    }
    if (__OFADD__(v13, a1)) {
      unint64_t v19 = ((v13 + a1) >> 63) ^ 0x8000000000000000;
    }
    else {
      unint64_t v19 = v13 + a1;
    }
LABEL_28:
    if (__OFADD__(v13, a1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v20 = 0;
    switch(v17)
    {
      case 1uLL:
        uint64_t v20 = v11;
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v10 + 24);
        break;
      case 3uLL:
        break;
      default:
        uint64_t v20 = v12;
        break;
    }
    if (v20 >= v13 + a1) {
      int64_t v21 = v13 + a1;
    }
    else {
      int64_t v21 = v20;
    }
    if (v21 < v13) {
      goto LABEL_42;
    }
    unint64_t v22 = *(void *)(v8 + 16);
    if (v22 >= *(void *)(v8 + 24) >> 1)
    {
      uint64_t v27 = v12;
      uint64_t v28 = v11;
      unint64_t v26 = v15;
      sub_25E05719C();
      unint64_t v15 = v26;
      uint64_t v12 = v27;
      uint64_t v11 = v28;
      uint64_t v10 = a2;
      uint64_t v8 = v24;
    }
    *(void *)(v8 + 16) = v22 + 1;
    uint64_t v23 = v8 + 16 * v22;
    *(void *)(v23 + 32) = v13;
    *(void *)(v23 + 40) = v21;
    int64_t v13 = v19;
  }
  if ((v13 != v9) | v14 & 1) {
    return v8;
  }
  if (v16)
  {
    char v14 = 1;
    unint64_t v19 = v9;
    BOOL v16 = 1;
    goto LABEL_28;
  }
  if (v15 != 0x8000000000000000)
  {
    BOOL v16 = 0;
    char v14 = 1;
    unint64_t v19 = v9;
    goto LABEL_28;
  }
  return v8;
}

uint64_t Data.chunked(by:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_25E09802C(a1, a2, a3);
  sub_25E06BF20(a2, a3);
  uint64_t v6 = sub_25E097B5C(v5, a2, a3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Data.HexLine.offset.getter()
{
  uint64_t v1 = *v0;
  sub_25E0DB3C0();
  return v1;
}

uint64_t Data.HexLine.offset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*Data.HexLine.offset.modify())(void)
{
  return nullsub_1;
}

uint64_t Data.HexLine.hex.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_25E0DB3C0();
  return v1;
}

uint64_t Data.HexLine.hex.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

double (*Data.HexLine.hex.modify())(void)
{
  return nullsub_1;
}

uint64_t Data.HexLine.text.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_25E0DB3C0();
  return v1;
}

uint64_t Data.HexLine.text.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

double (*Data.HexLine.text.modify())(void)
{
  return nullsub_1;
}

uint64_t Data.HexLine.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[6];
  if (v2 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else if (!__OFADD__(2 * v2, 8))
  {
    sub_25E03FD80();
    sub_25E0DBDA0();
    sub_25E0DB3C0();
    sub_25E0DB630();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E0DB3C0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t Data.hexLines(bytesPerRow:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_25E09802C(a1, a2, a3);
  sub_25E06BF20(a2, a3);
  uint64_t v6 = sub_25E097B5C(v5, a2, a3);
  swift_bridgeObjectRelease();
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_25E03CD2C(0, 0, 0);
  uint64_t v7 = v32;
  uint64_t v8 = *(void *)(v6 + 16);
  sub_25E0DB3C0();
  uint64_t v26 = v8;
  if (v8)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (unint64_t *)(v6 + 40);
    do
    {
      uint64_t v12 = *(v10 - 1);
      unint64_t v11 = *v10;
      sub_25E06BF20(v12, *v10);
      sub_25E098728(v9, v12, v11, a1, v28);
      sub_25E06B99C(v12, v11);
      uint64_t v13 = v28[0];
      uint64_t v14 = v28[1];
      uint64_t v15 = v28[2];
      uint64_t v16 = v28[3];
      uint64_t v17 = v29;
      uint64_t v18 = v30;
      uint64_t v19 = v31;
      uint64_t v32 = v7;
      unint64_t v21 = *(void *)(v7 + 16);
      unint64_t v20 = *(void *)(v7 + 24);
      if (v21 >= v20 >> 1)
      {
        uint64_t v24 = v31;
        uint64_t v25 = v29;
        sub_25E03CD2C((char *)(v20 > 1), v21 + 1, 1);
        uint64_t v19 = v24;
        uint64_t v17 = v25;
        uint64_t v7 = v32;
      }
      ++v9;
      v10 += 2;
      *(void *)(v7 + 16) = v21 + 1;
      unint64_t v22 = (void *)(v7 + 56 * v21);
      v22[4] = v13;
      v22[5] = v14;
      v22[6] = v15;
      v22[7] = v16;
      v22[8] = v17;
      v22[9] = v18;
      v22[10] = v19;
    }
    while (v26 != v9);
  }
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_25E098728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v100 = *MEMORY[0x263EF8340];
  sub_25E0991EC();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_25E0DD9C0;
  if ((unsigned __int128)(a1 * (__int128)a4) >> 64 != (a1 * a4) >> 63) {
    goto LABEL_92;
  }
  uint64_t v11 = MEMORY[0x263F8D750];
  *(void *)(v10 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = a1 * a4;
  uint64_t v12 = sub_25E0DB520();
  uint64_t v78 = v13;
  uint64_t v79 = v12;
  sub_25E0DAF10();
  sub_25E05719C();
  unint64_t v14 = a3 >> 62;
  uint64_t v16 = v15;
  uint64_t v17 = 0;
  uint64_t v80 = a5;
  uint64_t v81 = a4;
  uint64_t v18 = a2 >> 32;
  unint64_t v83 = a3;
  uint64_t v19 = BYTE6(a3);
  uint64_t v20 = 0;
  uint64_t v21 = a2;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v20 = (int)a2;
      uint64_t v17 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v20 = *(void *)(a2 + 16);
      uint64_t v17 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v20 = 0;
      uint64_t v17 = BYTE6(a3);
      break;
  }
  char v22 = 0;
  unint64_t v23 = 0;
  BOOL v24 = 0;
  uint64_t v25 = v14;
  uint64_t v82 = v21;
  while (v20 < v17)
  {
    BOOL v24 = !__OFADD__(v20, 2);
    if (__OFADD__(v20, 2)) {
      unint64_t v23 = 0x8000000000000000;
    }
    else {
      unint64_t v23 = 0;
    }
    if (__OFADD__(v20, 2)) {
      uint64_t v26 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v26 = v20 + 2;
    }
LABEL_22:
    if (__OFADD__(v20, 2)) {
      goto LABEL_86;
    }
    uint64_t v27 = 0;
    switch(v25)
    {
      case 1:
        uint64_t v27 = v18;
        break;
      case 2:
        uint64_t v27 = *(void *)(v21 + 24);
        break;
      case 3:
        break;
      default:
        uint64_t v27 = v19;
        break;
    }
    if (v27 >= v20 + 2) {
      uint64_t v28 = v20 + 2;
    }
    else {
      uint64_t v28 = v27;
    }
    if (v28 < v20) {
      goto LABEL_87;
    }
    unint64_t v29 = *(void *)(v16 + 16);
    if (v29 >= *(void *)(v16 + 24) >> 1)
    {
      uint64_t v94 = v18;
      uint64_t v31 = v19;
      unint64_t v92 = v23;
      sub_25E05719C();
      unint64_t v23 = v92;
      uint64_t v19 = v31;
      uint64_t v18 = v94;
      uint64_t v16 = v32;
      uint64_t v21 = v82;
    }
    *(void *)(v16 + 16) = v29 + 1;
    uint64_t v30 = v16 + 16 * v29;
    *(void *)(v30 + 32) = v20;
    *(void *)(v30 + 40) = v28;
    uint64_t v20 = v26;
  }
  if ((v20 != v17) | v22 & 1) {
    goto LABEL_34;
  }
  if (v24)
  {
    char v22 = 1;
    uint64_t v26 = v17;
    BOOL v24 = 1;
    goto LABEL_22;
  }
  if (v23 != 0x8000000000000000)
  {
    BOOL v24 = 0;
    char v22 = 1;
    uint64_t v26 = v17;
    goto LABEL_22;
  }
LABEL_34:
  uint64_t v33 = v21;
  unint64_t v34 = v83;
  sub_25E06BF20(v21, v83);
  uint64_t v35 = sub_25E097B5C(v16, v33, v83);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
    goto LABEL_78;
  }
  uint64_t v99 = MEMORY[0x263F8EE78];
  sub_25E03CB2C(0, v36, 0);
  uint64_t v37 = 0;
  uint64_t v38 = v99;
  uint64_t v84 = v36;
  uint64_t v85 = v35 + 32;
  do
  {
    uint64_t v39 = (uint64_t *)(v85 + 16 * v37++);
    uint64_t v41 = *v39;
    unint64_t v40 = v39[1];
    uint64_t v42 = MEMORY[0x263F8EE78];
    unint64_t v43 = HIDWORD(*v39);
    switch(v40 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(v43, v41)) {
          goto LABEL_89;
        }
        uint64_t v86 = v37;
        uint64_t v87 = v38;
        uint64_t v44 = (int)v43 - (int)v41;
LABEL_42:
        sub_25E06BF20(v41, v40);
        if (!v44)
        {
LABEL_38:
          uint64_t v37 = v86;
          uint64_t v38 = v87;
          uint64_t v36 = v84;
          goto LABEL_73;
        }
LABEL_43:
        uint64_t v88 = BYTE6(v40);
        uint64_t v98 = MEMORY[0x263F8EE78];
        uint64_t v47 = v44 & ~(v44 >> 63);
        unint64_t v91 = v40 >> 62;
        sub_25E03CB2C(0, v47, 0);
        uint64_t v48 = v41;
        unint64_t v49 = v40 >> 62;
        uint64_t v42 = v98;
        uint64_t v93 = v48;
        uint64_t v89 = (int)v48;
        unint64_t v90 = v40;
        if (!(v40 >> 62))
        {
          if ((v44 & 0x8000000000000000) == 0)
          {
            uint64_t v50 = 0;
            goto LABEL_50;
          }
          goto LABEL_91;
        }
        if (v91 == 1) {
          uint64_t v50 = (int)v48;
        }
        else {
          uint64_t v50 = *(void *)(v48 + 16);
        }
        if (v44 < 0) {
          goto LABEL_88;
        }
        break;
      case 2uLL:
        uint64_t v86 = v37;
        uint64_t v87 = v38;
        uint64_t v46 = *(void *)(v41 + 16);
        uint64_t v45 = *(void *)(v41 + 24);
        uint64_t v44 = v45 - v46;
        if (!__OFSUB__(v45, v46)) {
          goto LABEL_42;
        }
        goto LABEL_90;
      case 3uLL:
        goto LABEL_73;
      default:
        uint64_t v86 = v37;
        uint64_t v87 = v38;
        uint64_t v44 = BYTE6(v40);
        if (!BYTE6(v40)) {
          goto LABEL_38;
        }
        goto LABEL_43;
    }
    do
    {
LABEL_50:
      if (!v47)
      {
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
      }
      if (v49)
      {
        if (v49 == 1)
        {
          if (v50 < v89 || v50 >= v93 >> 32) {
            goto LABEL_82;
          }
          uint64_t v52 = sub_25E0DAD20();
          if (!v52) {
            goto LABEL_93;
          }
          uint64_t v53 = v52;
          uint64_t v54 = sub_25E0DAD50();
          uint64_t v55 = v50 - v54;
          if (__OFSUB__(v50, v54)) {
            goto LABEL_84;
          }
        }
        else
        {
          if (v50 < *(void *)(v93 + 16)) {
            goto LABEL_81;
          }
          if (v50 >= *(void *)(v93 + 24)) {
            goto LABEL_83;
          }
          uint64_t v57 = sub_25E0DAD20();
          if (!v57) {
            goto LABEL_94;
          }
          uint64_t v53 = v57;
          uint64_t v58 = sub_25E0DAD50();
          uint64_t v55 = v50 - v58;
          if (__OFSUB__(v50, v58)) {
            goto LABEL_85;
          }
        }
        char v56 = *(unsigned char *)(v53 + v55);
        LODWORD(v49) = v91;
      }
      else
      {
        if (v50 >= v88) {
          goto LABEL_80;
        }
        LODWORD(v95) = v93;
        BYTE4(v95) = v43;
        *(_WORD *)((char *)&v95 + 5) = *(_WORD *)((char *)&v93 + 5);
        HIBYTE(v95) = HIBYTE(v93);
        int v96 = v90;
        __int16 v97 = WORD2(v90);
        char v56 = *((unsigned char *)&v95 + v50);
      }
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = xmmword_25E0DD9C0;
      *(void *)(v59 + 56) = MEMORY[0x263F8E778];
      *(void *)(v59 + 64) = MEMORY[0x263F8E7C0];
      *(unsigned char *)(v59 + 32) = v56;
      uint64_t v60 = sub_25E0DB520();
      uint64_t v62 = v61;
      uint64_t v98 = v42;
      unint64_t v64 = *(void *)(v42 + 16);
      unint64_t v63 = *(void *)(v42 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_25E03CB2C(v63 > 1, v64 + 1, 1);
        LODWORD(v49) = v91;
        uint64_t v42 = v98;
      }
      *(void *)(v42 + 16) = v64 + 1;
      unint64_t v65 = v42 + 16 * v64;
      *(void *)(v65 + 32) = v60;
      *(void *)(v65 + 40) = v62;
      ++v50;
      --v47;
      --v44;
    }
    while (v44);
    uint64_t v37 = v86;
    uint64_t v38 = v87;
    uint64_t v36 = v84;
    unint64_t v40 = v90;
    uint64_t v41 = v93;
LABEL_73:
    uint64_t v95 = v42;
    sub_25E069008(0, (unint64_t *)&qword_26A6D4930);
    sub_25E09929C((unint64_t *)&qword_26A6D4938, (unint64_t *)&qword_26A6D4930);
    unint64_t v66 = v40;
    uint64_t v67 = sub_25E0DB480();
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    sub_25E06B99C(v41, v66);
    uint64_t v99 = v38;
    unint64_t v71 = *(void *)(v38 + 16);
    unint64_t v70 = *(void *)(v38 + 24);
    if (v71 >= v70 >> 1)
    {
      sub_25E03CB2C(v70 > 1, v71 + 1, 1);
      uint64_t v38 = v99;
    }
    *(void *)(v38 + 16) = v71 + 1;
    unint64_t v72 = v38 + 16 * v71;
    *(void *)(v72 + 32) = v67;
    *(void *)(v72 + 40) = v69;
  }
  while (v37 != v36);
  swift_bridgeObjectRelease();
  unint64_t v34 = v83;
LABEL_78:
  uint64_t v95 = v38;
  sub_25E069008(0, (unint64_t *)&qword_26A6D4930);
  sub_25E09929C((unint64_t *)&qword_26A6D4938, (unint64_t *)&qword_26A6D4930);
  uint64_t v73 = sub_25E0DB480();
  uint64_t v75 = v74;
  swift_bridgeObjectRelease();
  uint64_t v95 = sub_25E097C7C(v82, v34);
  sub_25E069008(0, (unint64_t *)&qword_26A6D47E8);
  sub_25E09929C((unint64_t *)&qword_26A6D47F0, (unint64_t *)&qword_26A6D47E8);
  uint64_t result = sub_25E0DB6F0();
  *uint64_t v80 = v79;
  v80[1] = v78;
  v80[2] = v73;
  v80[3] = v75;
  v80[4] = result;
  v80[5] = v77;
  v80[6] = v81;
  return result;
}

uint64_t _s7HexLineVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7HexLineVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  sub_25E0DB3C0();
  sub_25E0DB3C0();
  sub_25E0DB3C0();
  return a1;
}

void *_s7HexLineVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *_s7HexLineVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t _s7HexLineVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7HexLineVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.HexLine()
{
  return &type metadata for Data.HexLine;
}

void sub_25E0991EC()
{
  if (!qword_26A6D56C8)
  {
    sub_25E099244();
    unint64_t v0 = sub_25E0DC2E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D56C8);
    }
  }
}

unint64_t sub_25E099244()
{
  unint64_t result = qword_26A6D56D0;
  if (!qword_26A6D56D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D56D0);
  }
  return result;
}

uint64_t sub_25E09929C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25E069008(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E0992E0()
{
  type metadata accessor for SonicActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_26A6D56D8 = v0;
  return result;
}

uint64_t static SonicActor.shared.getter()
{
  if (qword_26A6D4228 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static SonicActor.shared.setter(uint64_t a1)
{
  if (qword_26A6D4228 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26A6D56D8 = a1;
  return swift_release();
}

uint64_t (*static SonicActor.shared.modify())()
{
  if (qword_26A6D4228 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SonicActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SonicActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return MEMORY[0x270FA2418](v0);
}

uint64_t SonicActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_25E0994F8()
{
  return SonicActor.unownedExecutor.getter();
}

unint64_t sub_25E099518()
{
  unint64_t result = qword_26A6D56E0;
  if (!qword_26A6D56E0)
  {
    type metadata accessor for SonicActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D56E0);
  }
  return result;
}

uint64_t type metadata accessor for SonicActor()
{
  return self;
}

uint64_t sub_25E099588()
{
  return static SonicActor.shared.getter();
}

uint64_t sub_25E0995A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SonicActor();

  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t method lookup function for SonicActor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SonicActor);
}

uint64_t PerformanceTime.machAbsoluteTime.getter()
{
  return *(void *)v0;
}

uint64_t PerformanceTime.machAbsoluteTime.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

double (*PerformanceTime.machAbsoluteTime.modify())(void)
{
  return nullsub_1;
}

uint64_t PerformanceTime.machMonotonicTime.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PerformanceTime.machMonotonicTime.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*PerformanceTime.machMonotonicTime.modify())(void)
{
  return nullsub_1;
}

double PerformanceTime.wallClockTime.getter()
{
  return *(double *)(v0 + 16);
}

void PerformanceTime.wallClockTime.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

double (*PerformanceTime.wallClockTime.modify())(void)
{
  return nullsub_1;
}

double PerformanceTime.kernelBootTime.getter()
{
  return *(double *)(v0 + 24);
}

void PerformanceTime.kernelBootTime.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

double (*PerformanceTime.kernelBootTime.modify())(void)
{
  return nullsub_1;
}

void static PerformanceTime.now()(uint64_t a1@<X8>)
{
  __uint64_t v2 = clock_gettime_nsec_np(_CLOCK_UPTIME_RAW);
  __uint64_t v3 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  sub_25E0DAF40();
  uint64_t v5 = v4;
  sub_25E099718();
  double v6 = static NSProcessInfo.kernelBootTime.getter();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(double *)(a1 + 24) = v6;
}

unint64_t sub_25E099718()
{
  unint64_t result = qword_26A6D56E8;
  if (!qword_26A6D56E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D56E8);
  }
  return result;
}

uint64_t PerformanceTime.init(machAbsoluteTime:machMonotonicTime:wallClockTime:kernelBootTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  return result;
}

uint64_t sub_25E099764()
{
  return sub_25E0DC4E0();
}

uint64_t sub_25E09978C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000025E0E49D0 || (sub_25E0DC380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000025E0E49F0 || (sub_25E0DC380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x636F6C436C6C6177 && a2 == 0xED0000656D69546BLL;
    if (v5 || (sub_25E0DC380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6F426C656E72656BLL && a2 == 0xEE00656D6954746FLL)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_25E0DC380();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_25E099980()
{
  return 4;
}

uint64_t sub_25E099988()
{
  return sub_25E0DC500();
}

unint64_t sub_25E0999D0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x636F6C436C6C6177;
      break;
    case 3:
      unint64_t result = 0x6F426C656E72656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E099A80()
{
  return sub_25E099988();
}

unint64_t sub_25E099A88()
{
  return sub_25E0999D0(*v0);
}

uint64_t sub_25E099A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25E09978C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25E099AB8()
{
  return OUTLINED_FUNCTION_10_10();
}

uint64_t sub_25E099AD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25E099980();
  *a1 = result;
  return result;
}

uint64_t sub_25E099B00(uint64_t a1)
{
  unint64_t v2 = sub_25E099D2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E099B3C(uint64_t a1)
{
  unint64_t v2 = sub_25E099D2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PerformanceTime.encode(to:)(void *a1)
{
  sub_25E099F44(0, &qword_26A6D56F0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_1();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v12 - v9;
  v12[1] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E099D2C();
  sub_25E0DC5B0();
  char v16 = 0;
  sub_25E0DC2A0();
  if (!v2)
  {
    char v15 = 1;
    sub_25E0DC2A0();
    char v14 = 2;
    sub_25E0DC280();
    char v13 = 3;
    sub_25E0DC280();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

unint64_t sub_25E099D2C()
{
  unint64_t result = qword_26A6D56F8;
  if (!qword_26A6D56F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D56F8);
  }
  return result;
}

uint64_t PerformanceTime.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25E099F44(0, &qword_26A6D5700, MEMORY[0x263F8E040]);
  OUTLINED_FUNCTION_1();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E099D2C();
  sub_25E0DC580();
  if (!v2)
  {
    uint64_t v6 = sub_25E0DC250();
    uint64_t v7 = sub_25E0DC250();
    sub_25E0DC230();
    uint64_t v9 = v8;
    sub_25E0DC230();
    uint64_t v12 = v11;
    uint64_t v13 = OUTLINED_FUNCTION_1_15();
    v14(v13);
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v9;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_25E099F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_25E099D2C();
    unint64_t v7 = a3(a1, &type metadata for PerformanceTime.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_25E099FA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PerformanceTime.init(from:)(a1, a2);
}

uint64_t sub_25E099FC0(void *a1)
{
  return PerformanceTime.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for PerformanceTime(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PerformanceTime(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTime()
{
  return &type metadata for PerformanceTime;
}

unsigned char *storeEnumTagSinglePayload for PerformanceTime.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E09A100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTime.CodingKeys()
{
  return &type metadata for PerformanceTime.CodingKeys;
}

unint64_t sub_25E09A13C()
{
  unint64_t result = qword_26A6D5708;
  if (!qword_26A6D5708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5708);
  }
  return result;
}

unint64_t sub_25E09A18C()
{
  unint64_t result = qword_26A6D5710;
  if (!qword_26A6D5710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5710);
  }
  return result;
}

unint64_t sub_25E09A1DC()
{
  unint64_t result = qword_26A6D5718;
  if (!qword_26A6D5718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5718);
  }
  return result;
}

uint64_t sub_25E09A228()
{
  sub_25E09A6CC();
  uint64_t result = sub_25E0DBCE0();
  qword_26A6D5720 = result;
  return result;
}

id static OS_os_log.sonic.getter()
{
  return sub_25E09A3D0(&qword_26A6D4230, (void **)&qword_26A6D5720);
}

uint64_t sub_25E09A2B4()
{
  sub_25E09A6CC();
  uint64_t result = sub_25E0DBCE0();
  qword_26A6D5728 = result;
  return result;
}

id static OS_os_log._oversizeSonic.getter()
{
  return sub_25E09A3D0(&qword_26A6D4238, (void **)&qword_26A6D5728);
}

uint64_t sub_25E09A344()
{
  sub_25E09A6CC();
  uint64_t result = sub_25E0DBCE0();
  qword_26A6D5730 = result;
  return result;
}

id static OS_os_log.sonicPlayback.getter()
{
  return sub_25E09A3D0(&qword_26A6D4240, (void **)&qword_26A6D5730);
}

id sub_25E09A3D0(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  int v3 = *a2;

  return v3;
}

uint64_t sub_25E09A41C(uint64_t a1)
{
  return sub_25E09A520(a1, qword_26A6D5738, &qword_26A6D4230, (id *)&qword_26A6D5720);
}

uint64_t static Logger.sonic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E09A5D0(&qword_26A6D4248, (uint64_t)qword_26A6D5738, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_25E09A4A4(uint64_t a1)
{
  return sub_25E09A520(a1, qword_26A6D5750, &qword_26A6D4238, (id *)&qword_26A6D5728);
}

uint64_t static Logger._oversizeSonic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E09A5D0(&qword_26A6D4250, (uint64_t)qword_26A6D5750, a1);
}

uint64_t sub_25E09A4F4(uint64_t a1)
{
  return sub_25E09A520(a1, qword_26A6D5768, &qword_26A6D4240, (id *)&qword_26A6D5730);
}

uint64_t sub_25E09A520(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_25E0DB1B0();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_25E0DB1C0();
}

uint64_t static Logger.sonicPlayback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25E09A5D0(&qword_26A6D4258, (uint64_t)qword_26A6D5768, a1);
}

uint64_t sub_25E09A5D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_25E0DB1B0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_25E09A6CC()
{
  unint64_t result = qword_26A6D5780;
  if (!qword_26A6D5780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D5780);
  }
  return result;
}

uint64_t sub_25E09A70C(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  swift_beginAccess();
  a1(&v5, v1 + 112);
  uint64_t result = swift_endAccess();
  if (!v2) {
    return v5;
  }
  return result;
}

uint64_t sub_25E09A790()
{
  *(void *)(v0 + 16) = 0xD000000000000013;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D5CC0 + dword_26A6D5CC0);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = 0x800000025E0E4570;
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E09A864;
  return v3(v0 + 16);
}

uint64_t sub_25E09A864()
{
  OUTLINED_FUNCTION_17();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_9();
    return v8();
  }
  else
  {
    if (v3) {
      uint64_t v10 = 0;
    }
    else {
      uint64_t v10 = v5;
    }
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v11(v10);
  }
}

uint64_t sub_25E09A974(uint64_t a1)
{
  *(void *)(v2 + 304) = a1;
  *(void *)(v2 + 312) = v1;
  return MEMORY[0x270FA2498](sub_25E09A994, 0, 0);
}

uint64_t sub_25E09A994()
{
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_74_0();
  uint64_t v1 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_79_1();
  sub_25E056BE8();
  uint64_t v3 = v2;
  *(void *)(v0 + 16) = 0xD000000000000014;
  OUTLINED_FUNCTION_58_1();
  *(void *)(v0 + 24) = v4;
  *(unsigned char *)(v0 + 88) = 0;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 >= *(void *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v3 = v19;
  }
  uint64_t v7 = *(void *)(v0 + 304);
  *(void *)(v3 + 16) = v6 + 1;
  sub_25E07DE30(v0 + 16, v3 + 80 * v6 + 32);
  *(void *)(v0 + 296) = v7;
  *(void *)(v0 + 96) = sub_25E0DC2D0();
  *(void *)(v0 + 104) = v8;
  *(unsigned char *)(v0 + 168) = 0;
  unint64_t v9 = *(void *)(v3 + 16);
  if (v9 >= *(void *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v3 = v20;
  }
  *(void *)(v3 + 16) = v9 + 1;
  OUTLINED_FUNCTION_37_3(v3 + 80 * v9);
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0xE000000000000000;
  *(unsigned char *)(v0 + 248) = 0;
  unint64_t v10 = *(void *)(v3 + 16);
  if (v10 >= *(void *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v3 = v21;
  }
  *(void *)(v3 + 16) = v10 + 1;
  sub_25E07DE30(v0 + 176, v3 + 80 * v10 + 32);
  uint64_t result = sub_25E0D6330();
  uint64_t v12 = v1;
  uint64_t v13 = *(void *)(v1 + 16);
  *(void *)(v0 + 320) = v13;
  if (v13)
  {
    OUTLINED_FUNCTION_97_1();
    *(void *)(v0 + 344) = v14;
    *(void *)(v0 + 352) = v12;
    *(void *)(v0 + 328) = v3;
    *(void *)(v0 + 336) = 0;
    *(void *)(v0 + 256) = v3;
    *(void *)(v0 + 264) = 0;
    *(void *)(v0 + 272) = v14;
    *(void *)(v0 + 280) = v12;
    *(unsigned char *)(v0 + 288) = v15;
    char v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v16;
    *char v16 = v0;
    v16[1] = sub_25E09ABC4;
    OUTLINED_FUNCTION_98();
    OUTLINED_FUNCTION_36_6();
    return SQLDatabase.execute(_:)(v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E09ABC4()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 368) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t static FileCacheError.domainName.getter()
{
  return 0x68636143656C6946;
}

SonicFoundation::FileCacheError_optional __swiftcall FileCacheError.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 1;
  switch(rawValue)
  {
    case 'd':
      break;
    case 'e':
      char v2 = 2;
      break;
    case 'f':
      char v2 = 3;
      break;
    case 'g':
      char v2 = 4;
      break;
    case 'h':
      char v2 = 5;
      break;
    default:
      if (rawValue == 202) {
        char v3 = 8;
      }
      else {
        char v3 = 9;
      }
      if (rawValue == 201) {
        char v4 = 7;
      }
      else {
        char v4 = v3;
      }
      if (rawValue == 200) {
        char v2 = 6;
      }
      else {
        char v2 = v4;
      }
      if (!rawValue) {
        char v2 = 0;
      }
      break;
  }
  *uint64_t v1 = v2;
  return (SonicFoundation::FileCacheError_optional)rawValue;
}

uint64_t FileCacheError.rawValue.getter()
{
  return qword_25E0E0228[*v0];
}

BOOL sub_25E09AE10(char *a1, char *a2)
{
  return sub_25E082044(*a1, *a2);
}

uint64_t sub_25E09AE1C()
{
  return sub_25E0D9058();
}

uint64_t sub_25E09AE24()
{
  return sub_25E0D9274();
}

uint64_t sub_25E09AE2C()
{
  return sub_25E0D96E4();
}

SonicFoundation::FileCacheError_optional sub_25E09AE34(Swift::Int *a1)
{
  return FileCacheError.init(rawValue:)(*a1);
}

uint64_t sub_25E09AE3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FileCacheError.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25E09AE64()
{
  return 0x68636143656C6946;
}

void sub_25E09AE88(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FileCache.Entry.url.getter()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v0 = OUTLINED_FUNCTION_63_3();

  return v1(v0);
}

uint64_t FileCache.Entry.contentType.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for FileCache.Entry(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for FileCache.Entry(uint64_t a1)
{
  return sub_25E0A28F0(a1, (uint64_t *)&unk_26A6D5830);
}

uint64_t FileCache.Entry.pathExtension.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FileCache.Entry(0) + 24));
  sub_25E0DB3C0();
  return v1;
}

uint64_t FileCache.Entry.fileURL.getter()
{
  type metadata accessor for FileCache.Entry(0);
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v0 = OUTLINED_FUNCTION_63_3();

  return v1(v0);
}

id FileCache.Entry.isCached.getter()
{
  type metadata accessor for FileCache.Entry(0);
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_25E0DAE50();
  uint64_t v1 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2;
}

uint64_t sub_25E09B078(uint64_t a1, _DWORD *a2, unsigned char *a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  uint64_t v7 = sub_25E0DAEA0();
  *(void *)(v4 + 32) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 40) = v8;
  *(void *)(v4 + 48) = *(void *)(v8 + 64);
  *(void *)(v4 + 56) = swift_task_alloc();
  *(void *)(v4 + 64) = swift_task_alloc();
  *(_DWORD *)(v4 + 120) = *a2;
  *(unsigned char *)(v4 + 124) = *a3;
  return MEMORY[0x270FA2498](sub_25E09B170, 0, 0);
}

uint64_t sub_25E09B170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_74_0();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 + 40) + 16);
  OUTLINED_FUNCTION_86_1();
  v17();
  char v18 = sub_25E0DADD0();
  OUTLINED_FUNCTION_36();
  OUTLINED_FUNCTION_36_2();
  v19();
  if (v18)
  {
    if (qword_26A6D4260 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  LODWORD(v41) = *(_DWORD *)(v16 + 120);
  HIDWORD(v41) = *(unsigned __int8 *)(v16 + 124);
  uint64_t v20 = *(void *)(v16 + 48);
  uint64_t v21 = *(void *)(v16 + 56);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  uint64_t v24 = *(void *)(v16 + 24);
  *(void *)(v16 + 72) = qword_26A6D5788;
  swift_retain();
  uint64_t v25 = sub_25E0DAE50();
  uint64_t v43 = v26;
  uint64_t v44 = v25;
  *(void *)(v16 + 80) = v26;
  OUTLINED_FUNCTION_86_1();
  v27();
  unint64_t v28 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v16 + 88) = v29;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v29 + v28, v21, v22);
  unint64_t v30 = v29 + ((v28 + v20 + 3) & 0xFFFFFFFFFFFFFFFCLL);
  *(_DWORD *)unint64_t v30 = v41;
  *(unsigned char *)(v30 + 4) = BYTE4(v41);
  *(void *)(v29 + ((v28 + v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v24;
  uint64_t v42 = (char *)&dword_26A6D5918 + dword_26A6D5918;
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v16 + 96) = v31;
  *uint64_t v31 = v16;
  v31[1] = sub_25E09B37C;
  OUTLINED_FUNCTION_36_6();
  return v36(v32, v33, v34, v35, v36, v37, v38, v39, a9, v41, v42, v43, v44, a14, a15, a16);
}

uint64_t sub_25E09B37C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *char v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v7 + 104) = v6;
  *(void *)(v7 + 112) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

void sub_25E09B4B8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 104);
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(void (**)(uint64_t))(v0 + 8);
    v2(v1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25E09B530()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E09B594(uint64_t a1)
{
  uint64_t v74 = a1;
  uint64_t v79 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_25E0DAEA0();
  OUTLINED_FUNCTION_1();
  uint64_t v75 = v3;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_42();
  uint64_t v72 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v67 = (char *)&v66 - v7;
  sub_25E09CF0C(0);
  uint64_t v9 = OUTLINED_FUNCTION_23_3(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_42();
  uint64_t v71 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v66 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v66 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v66 - v20;
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_defaultManager);
  uint64_t v69 = type metadata accessor for FileCache.Entry(0);
  uint64_t v24 = v1 + *(int *)(v69 + 28);
  id v25 = objc_msgSend(v22, sel_defaultManager);
  uint64_t v76 = v24;
  sub_25E0DAE50();
  uint64_t v26 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  LODWORD(v24) = objc_msgSend(v25, sel_fileExistsAtPath_, v26);

  uint64_t v27 = (uint64_t)v21;
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v2);
  if (!v24) {
    goto LABEL_4;
  }
  sub_25E0DAE40();
  sub_25E0A9630((uint64_t)v21, sub_25E09CF0C);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v2);
  sub_25E0A8FDC((uint64_t)v19, (uint64_t)v21, sub_25E09CF0C);
  unint64_t v28 = (void *)sub_25E0DAE20();
  sub_25E0A7DFC((uint64_t)v21, (uint64_t)v16, sub_25E09CF0C);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v2);
  if (result != 1)
  {
    unint64_t v30 = (void *)sub_25E0DAE20();
    OUTLINED_FUNCTION_17_4();
    v31();
    id v77 = 0;
    unsigned int v32 = objc_msgSend(v23, sel_moveItemAtURL_toURL_error_, v28, v30, &v77);

    id v33 = v77;
    if (!v32)
    {
      uint64_t v53 = v33;
      sub_25E0DADC0();

      goto LABEL_17;
    }
LABEL_4:
    uint64_t v34 = v2;
    id v70 = v23;
    uint64_t v35 = v73;
    sub_25E09BE50(v23);
    if (!v35)
    {
      sub_25E0D59D8();
      uint64_t v56 = v68;
      sub_25E0A7DFC((uint64_t)v21, v68, sub_25E09CF0C);
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v56, 1, v2);
      uint64_t v58 = v70;
      if (EnumTagSinglePayload == 1)
      {
        sub_25E0A9630((uint64_t)v21, sub_25E09CF0C);

        uint64_t v27 = v56;
      }
      else
      {
        uint64_t v59 = v67;
        OUTLINED_FUNCTION_13_5();
        v60();
        uint64_t v61 = (void *)sub_25E0DAE20();
        id v77 = 0;
        unsigned int v62 = objc_msgSend(v58, sel_removeItemAtURL_error_, v61, &v77);

        if (v62)
        {
          id v63 = v77;
        }
        else
        {
          id v64 = v77;
          uint64_t v65 = sub_25E0DADC0();

          swift_willThrow();
          MEMORY[0x2611CF510](v65);
        }
        (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v2);
      }
      return sub_25E0A9630(v27, sub_25E09CF0C);
    }
    id v77 = 0;
    unint64_t v78 = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_1();
    id v77 = v37;
    unint64_t v78 = v36 | 0xEF2065766F6D0000;
    sub_25E09D130(&qword_26A6D57B0, MEMORY[0x263F06EA8]);
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    id v38 = v77;
    unint64_t v39 = v78;
    sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
    uint64_t v40 = OUTLINED_FUNCTION_62_2();
    *(_OWORD *)(v40 + 16) = xmmword_25E0DD9C0;
    *(void *)(v40 + 32) = v35;
    sub_25E09D088();
    sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
    OUTLINED_FUNCTION_41_4();
    *(unsigned char *)uint64_t v41 = 3;
    id v23 = v70;
    *(void *)(v41 + 8) = v38;
    *(void *)(v41 + 16) = v39;
    *(void *)(v41 + 24) = v40;
    swift_willThrow();
    uint64_t v42 = (void *)sub_25E0DAE20();
    id v77 = 0;
    unsigned int v43 = objc_msgSend(v23, sel_removeItemAtURL_error_, v42, &v77);

    if (v43)
    {
      id v44 = v77;
    }
    else
    {
      id v45 = v77;
      uint64_t v46 = sub_25E0DADC0();

      swift_willThrow();
      MEMORY[0x2611CF510](v46);
    }
    uint64_t v47 = v71;
    sub_25E0A7DFC((uint64_t)v21, v71, sub_25E09CF0C);
    if (__swift_getEnumTagSinglePayload(v47, 1, v34) == 1)
    {
      sub_25E0A9630(v47, sub_25E09CF0C);
    }
    else
    {
      OUTLINED_FUNCTION_13_5();
      v48();
      unint64_t v49 = (void *)sub_25E0DAE20();
      uint64_t v50 = (void *)sub_25E0DAE20();
      id v77 = 0;
      unsigned int v51 = objc_msgSend(v23, sel_moveItemAtURL_toURL_error_, v49, v50, &v77);

      if (v51)
      {
        id v52 = v77;
      }
      else
      {
        id v54 = v77;
        uint64_t v55 = sub_25E0DADC0();

        swift_willThrow();
        MEMORY[0x2611CF510](v55);
      }
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v72, v34);
    }
LABEL_17:
    swift_willThrow();

    return sub_25E0A9630(v27, sub_25E09CF0C);
  }
  __break(1u);
  return result;
}

id sub_25E09BE50(void *a1)
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_25E0DAE20();
  type metadata accessor for FileCache.Entry(0);
  uint64_t v3 = (void *)sub_25E0DAE20();
  v7[0] = 0;
  unsigned int v4 = objc_msgSend(a1, sel_moveItemAtURL_toURL_error_, v2, v3, v7);

  if (v4) {
    return v7[0];
  }
  id v6 = v7[0];
  sub_25E0DADC0();

  return (id)swift_willThrow();
}

uint64_t FileCache.didFinishWriting(entry:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E09BF58);
}

uint64_t sub_25E09BF58()
{
  OUTLINED_FUNCTION_12();
  type metadata accessor for FileCache.Entry(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E09C000;
  OUTLINED_FUNCTION_98();
  return sub_25E09C0C0();
}

uint64_t sub_25E09C000()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E09C0C0()
{
  OUTLINED_FUNCTION_12();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = sub_25E0DAF70();
  v1[5] = v3;
  OUTLINED_FUNCTION_7(v3);
  v1[6] = v4;
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_25E09C154()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_108_0();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  type metadata accessor for SQLDatabase(0);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  OUTLINED_FUNCTION_52_4();
  *uint64_t v1 = v2;
  v1[1] = sub_25E09C224;
  uint64_t v3 = OUTLINED_FUNCTION_24_8();
  return MEMORY[0x270FA1FA8](v3, v4, v5, v6, v7);
}

uint64_t sub_25E09C224()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E09C328()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = v0[10];
  v0[11] = v0[2];
  sub_25E0DAE10();
  v0[12] = v2;
  sub_25E0D4690();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    sub_25E0DAF60();
    sub_25E0DAF50();
    unint64_t v6 = v5;
    uint64_t v7 = OUTLINED_FUNCTION_100_1();
    v8(v7);
    if (qword_26A6D4268 != -1) {
      swift_once();
    }
    v0[13] = qword_26A6DDCE0;
    OUTLINED_FUNCTION_102_1((int *)&unk_26A6D5FB8);
    swift_retain();
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[14] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_25E09C4F8;
    v10.n128_u64[0] = v6;
    return v11(v10);
  }
}

uint64_t sub_25E09C4F8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *unint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E09C5E4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E09C648()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E09C6A4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t FileCache.containerURL.getter()
{
  return sub_25E09C734();
}

uint64_t FileCache.temporaryContainerURL.getter()
{
  return sub_25E09C734();
}

uint64_t sub_25E09C734()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v0 = OUTLINED_FUNCTION_63_3();

  return v1(v0);
}

void FileCache.contentType.getter(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
}

double FileCache.policy.getter@<D0>(void *a1@<X8>)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy);
  swift_beginAccess();
  double result = *v3;
  *a1 = *(void *)v3;
  return result;
}

uint64_t FileCache.policy.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t (*FileCache.policy.modify())()
{
  return j__swift_endAccess;
}

uint64_t FileCache.__allocating_init(containerURL:temporaryContainerURL:contentType:)(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_allocObject();
  FileCache.init(containerURL:temporaryContainerURL:contentType:)(a1, a2, a3);
  return v6;
}

uint64_t FileCache.init(containerURL:temporaryContainerURL:contentType:)(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = v3;
  uint64_t v73 = a2;
  OUTLINED_FUNCTION_31_3();
  uint64_t v71 = v8;
  sub_25E0DADE0();
  OUTLINED_FUNCTION_1();
  uint64_t v69 = v10;
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_5_3();
  uint64_t v13 = v12 - v11;
  sub_25E09CF0C(0);
  uint64_t v15 = OUTLINED_FUNCTION_23_3(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_5_3();
  uint64_t v72 = v17 - v16;
  uint64_t v76 = sub_25E0DAEA0();
  OUTLINED_FUNCTION_1();
  uint64_t v19 = v18;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  id v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v62 - v25;
  MEMORY[0x270FA5388](v24);
  unint64_t v28 = (char *)&v62 - v27;
  int v29 = *a3;
  *(void *)(v5 + OBJC_IVAR____TtC15SonicFoundation9FileCache_policy) = 0x40F5180000000000;
  sub_25E09CF40();
  if (v4)
  {
    unint64_t v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    unint64_t v74 = 0xD00000000000001BLL;
    unint64_t v75 = 0x800000025E0E4A30;
    sub_25E09D130(&qword_26A6D57B0, MEMORY[0x263F06EA8]);
    uint64_t v30 = v76;
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    uint64_t v31 = a1;
    unint64_t v32 = v74;
    unint64_t v33 = v75;
    sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
    uint64_t v34 = OUTLINED_FUNCTION_62_2();
    *(_OWORD *)(v34 + 16) = xmmword_25E0DD9C0;
    *(void *)(v34 + 32) = v4;
    sub_25E09D088();
    sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
    OUTLINED_FUNCTION_41_4();
    *(unsigned char *)uint64_t v35 = 1;
    *(void *)(v35 + 8) = v32;
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = v34;
    swift_willThrow();
    sub_25E0A9630(v73, sub_25E09CF0C);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v31, v30);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v66 = v28;
    uint64_t v67 = v13;
    int v63 = v29;
    uint64_t v64 = 0;
    unsigned __int16 v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    uint64_t v37 = v76;
    v36(v5 + OBJC_IVAR____TtC15SonicFoundation9FileCache_containerURL, a1, v76);
    uint64_t v38 = v72;
    sub_25E0A7DFC(v73, v72, sub_25E09CF0C);
    uint64_t v65 = a1;
    v36((uint64_t)v26, a1, v37);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v38, 1, v37);
    uint64_t v40 = v69;
    uint64_t v41 = v70;
    unsigned int v62 = v23;
    if (EnumTagSinglePayload == 1)
    {
      unint64_t v74 = 7368052;
      unint64_t v75 = 0xE300000000000000;
      uint64_t v42 = *(void (**)(uint64_t))(v69 + 104);
      uint64_t v43 = v67;
      unsigned int v68 = *MEMORY[0x263F06E50];
      v42(v67);
      sub_25E03FD80();
      id v44 = v66;
      sub_25E0DAE90();
      OUTLINED_FUNCTION_17_4();
      v46(v45);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_69_1();
      uint64_t v71 = v47;
      OUTLINED_FUNCTION_17_4();
      v49(v48);
      sub_25E0A9630(v72, sub_25E09CF0C);
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
      uint64_t v51 = v41;
    }
    else
    {
      OUTLINED_FUNCTION_69_1();
      uint64_t v52 = v76;
      uint64_t v71 = v53;
      OUTLINED_FUNCTION_17_4();
      v55(v54);
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
      uint64_t v51 = v41;
      id v44 = v66;
      v50(v66, v72, v52);
      unsigned int v68 = *MEMORY[0x263F06E50];
      uint64_t v43 = v67;
    }
    uint64_t v56 = v76;
    v50((char *)(v5 + OBJC_IVAR____TtC15SonicFoundation9FileCache_temporaryContainerURL), (uint64_t)v44, v76);
    *(_DWORD *)(v5 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType) = v63;
    unint64_t v74 = 0x62642E6568636143;
    unint64_t v75 = 0xE800000000000000;
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v43, v68, v51);
    sub_25E03FD80();
    uint64_t v57 = v65;
    sub_25E0DAE80();
    OUTLINED_FUNCTION_47_4();
    v59(v58);
    swift_bridgeObjectRelease();
    type metadata accessor for FileCache.CacheDatabase();
    uint64_t v60 = swift_allocObject();
    sub_25E0A244C();
    sub_25E0A9630(v73, sub_25E09CF0C);
    v71(v57, v56);
    *(void *)(v5 + OBJC_IVAR____TtC15SonicFoundation9FileCache_cacheDB) = v60;
  }
  return v5;
}

void sub_25E09CF0C(uint64_t a1)
{
}

id sub_25E09CF40()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_25E0DAE20();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_25E0DADC0();

  return (id)swift_willThrow();
}

void sub_25E09D030(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_25E03E530(255, a3);
    unint64_t v4 = sub_25E0DC2E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_25E09D088()
{
  if (!qword_26A6D57B8)
  {
    sub_25E09D0E4();
    unint64_t v0 = type metadata accessor for SonicError();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D57B8);
    }
  }
}

unint64_t sub_25E09D0E4()
{
  unint64_t result = qword_26A6D57C0;
  if (!qword_26A6D57C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D57C0);
  }
  return result;
}

uint64_t sub_25E09D130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FileCache.CacheDatabase()
{
  return self;
}

uint64_t FileCache.entry(for:pathExtension:purgeUrgency:)()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 24) = v5;
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 16) = v7;
  sub_25E09CF0C(0);
  OUTLINED_FUNCTION_23_3(v8);
  *(void *)(v1 + 56) = swift_task_alloc();
  uint64_t v9 = sub_25E0DAEA0();
  *(void *)(v1 + 64) = v9;
  OUTLINED_FUNCTION_7(v9);
  *(void *)(v1 + 72) = v10;
  *(void *)(v1 + 80) = swift_task_alloc();
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  *(unsigned char *)(v1 + 161) = *v3;
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E09D288()
{
  OUTLINED_FUNCTION_22();
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  sub_25E09D7C0(*(void *)(v0 + 32), *(void *)(v0 + 40), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    sub_25E0A9630(*(void *)(v0 + 56), sub_25E09CF0C);
    uint64_t v4 = type metadata accessor for FileCache.Entry(0);
    __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    return v5();
  }
  else
  {
    char v15 = *(unsigned char *)(v0 + 161);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 48);
    *(void *)(v0 + 104) = *(void *)(v7 + 32);
    *(void *)(v0 + 112) = (v7 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    OUTLINED_FUNCTION_13_5();
    v9();
    uint64_t v10 = *(void (**)(void))(v7 + 16);
    OUTLINED_FUNCTION_86_1();
    v10();
    int v11 = *(_DWORD *)(v8 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
    *(_DWORD *)(v0 + 156) = v11;
    OUTLINED_FUNCTION_86_1();
    v10();
    uint64_t v12 = *(void *)(v8 + OBJC_IVAR____TtC15SonicFoundation9FileCache_cacheDB);
    *(void *)(v0 + 120) = v12;
    type metadata accessor for NoPurgeAssertion(0);
    *(_DWORD *)(v0 + 152) = v11;
    *(unsigned char *)(v0 + 160) = v15;
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_25E09D4D0;
    uint64_t v14 = OUTLINED_FUNCTION_95_1(*(void *)(v0 + 80));
    return sub_25E09B078(v14, (_DWORD *)(v0 + 152), (unsigned char *)(v0 + 160), v12);
  }
}

uint64_t sub_25E09D4D0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  else {
    *(void *)(v5 + 144) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E09D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_74_0();
  uint64_t v17 = *(void *)(v16 + 144);
  HIDWORD(a11) = *(_DWORD *)(v16 + 156);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  uint64_t v19 = *(void *)(v16 + 88);
  uint64_t v36 = *(void *)(v16 + 80);
  uint64_t v37 = *(void *)(v16 + 96);
  uint64_t v21 = *(void *)(v16 + 64);
  uint64_t v20 = *(void *)(v16 + 72);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v35 = *(void *)(v16 + 40);
  uint64_t v23 = *(void *)(v16 + 16);
  swift_release();
  uint64_t v24 = (int *)type metadata accessor for FileCache.Entry(0);
  *(void *)(v23 + v24[8]) = v17;
  v18(v23, v19, v21);
  *(_DWORD *)(v23 + v24[5]) = HIDWORD(a11);
  uint64_t v25 = (void *)(v23 + v24[6]);
  *uint64_t v25 = v22;
  v25[1] = v35;
  v18(v23 + v24[7], v36, v21);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v37, v21);
  __swift_storeEnumTagSinglePayload(v23, 0, 1, (uint64_t)v24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_36_6();
  return v27(v26, v27, v28, v29, v30, v31, v32, v33, a9, v35, a11, v36, v37, a14, a15, a16);
}

uint64_t sub_25E09D6F8()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  uint64_t v2 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_47_4();
  v2();
  OUTLINED_FUNCTION_47_4();
  v2();
  OUTLINED_FUNCTION_47_4();
  v2();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v3();
}

uint64_t sub_25E09D7C0@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v56 = a1;
  unint64_t v57 = a2;
  uint64_t v4 = sub_25E0DADE0();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_25E0DAEA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_25E0DB280();
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25E0DB270();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25E0DB540();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E09CF0C(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.coreURL.getter((uint64_t)v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v6) == 1)
  {
    sub_25E0A9630((uint64_t)v20, sub_25E09CF0C);
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v47 = a3;
    sub_25E0DADF0();
    uint64_t v46 = v7;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
    sub_25E0DB530();
    uint64_t v22 = sub_25E0DB510();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v24 >> 60 == 15)
    {
      uint64_t v21 = 1;
      a3 = v47;
    }
    else
    {
      uint64_t v45 = v22;
      uint64_t v25 = sub_25E09D130(&qword_26A6D5930, MEMORY[0x263F047F8]);
      sub_25E0DB260();
      uint64_t v26 = v46;
      a3 = v47;
      switch(v24 >> 62)
      {
        case 1uLL:
          uint64_t v44 = v25;
          uint64_t v29 = v45;
          if (v29 >> 32 < (int)v29)
          {
            __break(1u);
            JUMPOUT(0x25E09DE4CLL);
          }
          sub_25E06BF20(v45, v24);
          sub_25E0A8D0C((int)v29, v29 >> 32);
          sub_25E0A92C8(v29, v24);
          break;
        case 2uLL:
          uint64_t v30 = v45;
          uint64_t v44 = v25;
          uint64_t v31 = *(void *)(v45 + 16);
          uint64_t v32 = *(void *)(v45 + 24);
          sub_25E0A92B4(v45, v24);
          swift_retain();
          swift_retain();
          sub_25E0A8D0C(v31, v32);
          swift_release();
          swift_release();
          sub_25E0A92C8(v30, v24);
          break;
        case 3uLL:
          sub_25E0A8DEC();
          uint64_t v28 = v45;
          goto LABEL_11;
        default:
          uint64_t v27 = v45;
          sub_25E0A8DEC();
          uint64_t v28 = v27;
LABEL_11:
          sub_25E0A92C8(v28, v24);
          break;
      }
      uint64_t v33 = v48;
      sub_25E0DB250();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
      sub_25E09FC58();
      uint64_t v35 = v34;
      uint64_t v37 = v36;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v50);
      uint64_t v38 = v52;
      uint64_t v58 = v35;
      uint64_t v59 = v37;
      uint64_t v40 = v54;
      uint64_t v39 = v55;
      (*(void (**)(char *, void, uint64_t))(v54 + 104))(v52, *MEMORY[0x263F06E50], v55);
      sub_25E03FD80();
      uint64_t v41 = v53;
      sub_25E0DAE90();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
      swift_bridgeObjectRelease();
      uint64_t v42 = HIBYTE(v57) & 0xF;
      if ((v57 & 0x2000000000000000) == 0) {
        uint64_t v42 = v56 & 0xFFFFFFFFFFFFLL;
      }
      if (v42) {
        sub_25E0DAE30();
      }
      sub_25E0A92C8(v45, v24);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a3, v41, v6);
      uint64_t v21 = 0;
    }
  }
  return __swift_storeEnumTagSinglePayload(a3, v21, 1, v6);
}

uint64_t FileCache.import(to:from:)(uint64_t a1, uint64_t a2)
{
  sqlite3_int64 v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E09DE78);
}

uint64_t sub_25E09DE78()
{
  OUTLINED_FUNCTION_22();
  sub_25E09B594(*(void *)(v0 + 24));
  type metadata accessor for FileCache.Entry(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E09E0C4;
  OUTLINED_FUNCTION_98();
  return sub_25E09C0C0();
}

uint64_t sub_25E09E0C4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E09E1BC()
{
  OUTLINED_FUNCTION_22();
  uint64_t v1 = *(void *)(v0 + 48);
  OUTLINED_FUNCTION_105_1();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_90_1();
  sub_25E09D130(&qword_26A6D57B0, MEMORY[0x263F06EA8]);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_74_1();
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
  uint64_t v2 = OUTLINED_FUNCTION_62_2();
  *(_OWORD *)(v2 + 16) = xmmword_25E0DD9C0;
  *(void *)(v2 + 32) = v1;
  sub_25E09D088();
  sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
  uint64_t v3 = OUTLINED_FUNCTION_42_5();
  *(unsigned char *)uint64_t v4 = 4;
  *(void *)(v4 + 8) = v7;
  *(void *)(v4 + 16) = v8;
  OUTLINED_FUNCTION_110_0(v3, v4);
  OUTLINED_FUNCTION_82_1();
  return v5();
}

uint64_t FileCache.temporaryDestinationURL(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_25E09E430(v2, a1, a2);
  if (v3)
  {
    sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
    uint64_t v5 = OUTLINED_FUNCTION_62_2();
    *(_OWORD *)(v5 + 16) = xmmword_25E0DD9C0;
    *(void *)(v5 + 32) = v3;
    sub_25E09D088();
    sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
    OUTLINED_FUNCTION_42_5();
    *(unsigned char *)uint64_t v6 = 1;
    return OUTLINED_FUNCTION_43_4(v6, (uint64_t)"Failed to create temporary directory)");
  }
  return result;
}

uint64_t sub_25E09E430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v24[2] = a2;
  void v24[3] = a3;
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v25 = sub_25E0DADE0();
  uint64_t v5 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_25E0DAEA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1 + OBJC_IVAR____TtC15SonicFoundation9FileCache_temporaryContainerURL, v8);
  id v12 = objc_msgSend(self, sel_defaultManager);
  uint64_t v13 = (void *)sub_25E0DAE20();
  id v26 = 0;
  unsigned __int8 v14 = objc_msgSend(v12, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v13, 1, 0, &v26);

  if (v14)
  {
    id v15 = v26;
    sub_25E0B07D0(0, 21, 0xD000000000000040, 0x800000025E0E3CD0);
    v24[1] = v3;
    id v26 = v16;
    uint64_t v17 = MEMORY[0x263F8D120];
    sub_25E0A96EC(0, (unint64_t *)&qword_26A6D47E8, MEMORY[0x263F8D120], MEMORY[0x263F8D488]);
    sub_25E0A8F84((unint64_t *)&qword_26A6D47F0, (unint64_t *)&qword_26A6D47E8, v17);
    id v26 = (id)sub_25E0DB6F0();
    uint64_t v27 = v18;
    sub_25E0DB3C0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    id v20 = v26;
    uint64_t v19 = v27;
    type metadata accessor for FileCache.Entry(0);
    sub_25E0DAE10();
    id v26 = v20;
    uint64_t v27 = v19;
    sub_25E0DB3C0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v25;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F06E50], v25);
    sub_25E03FD80();
    sub_25E0DAE90();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = v26;
    sub_25E0DADC0();

    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FileCache.clearTemporaryContainer()()
{
  id v1 = objc_msgSend(self, sel_defaultManager);
  sub_25E0DAE50();
  uint64_t v2 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  unsigned int v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  if (v3)
  {
    sub_25E09E954();
    if (v0)
    {
      sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
      uint64_t v4 = OUTLINED_FUNCTION_62_2();
      *(_OWORD *)(v4 + 16) = xmmword_25E0DD9C0;
      *(void *)(v4 + 32) = v0;
      sub_25E09D088();
      sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
      OUTLINED_FUNCTION_42_5();
      *(unsigned char *)uint64_t v5 = 2;
      OUTLINED_FUNCTION_43_4(v5, (uint64_t)"Failed to delete temporary directory)");
    }
  }
}

id sub_25E09E954()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  id v1 = (void *)sub_25E0DAE20();
  v5[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v5);

  if (v2) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_25E0DADC0();

  return (id)swift_willThrow();
}

uint64_t FileCache.numberOfBytesWritten()()
{
  *(void *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E09EA60);
}

uint64_t sub_25E09EA60()
{
  OUTLINED_FUNCTION_17();
  swift_beginAccess();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E09EB28;
  return sub_25E09ED30();
}

uint64_t sub_25E09EB28()
{
  OUTLINED_FUNCTION_12();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v7 = v6;
  *(void *)(v8 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    id v12 = *(uint64_t (**)(uint64_t))(v6 + 8);
    return v12(v3);
  }
}

uint64_t sub_25E09EC2C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(v0 + 56);
  sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
  uint64_t v2 = OUTLINED_FUNCTION_62_2();
  *(_OWORD *)(v2 + 16) = xmmword_25E0DD9C0;
  *(void *)(v2 + 32) = v1;
  sub_25E09D088();
  sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
  uint64_t v3 = OUTLINED_FUNCTION_42_5();
  *(unsigned char *)uint64_t v4 = 5;
  *(void *)(v4 + 8) = 0xD000000000000021;
  *(void *)(v4 + 16) = 0x800000025E0E4AD0;
  OUTLINED_FUNCTION_110_0(v3, v4);
  OUTLINED_FUNCTION_82_1();
  return v5();
}

uint64_t sub_25E09ED30()
{
  OUTLINED_FUNCTION_12();
  v1[4] = v0;
  v1[3] = v2;
  uint64_t v3 = sub_25E0DAF70();
  v1[5] = v3;
  OUTLINED_FUNCTION_7(v3);
  v1[6] = v4;
  v1[7] = swift_task_alloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_25E09EDC8()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_108_0();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  type metadata accessor for SQLDatabase(0);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  OUTLINED_FUNCTION_52_4();
  *uint64_t v1 = v2;
  v1[1] = sub_25E09EE98;
  uint64_t v3 = OUTLINED_FUNCTION_24_8();
  return MEMORY[0x270FA1FA8](v3, v4, v5, v6, v7);
}

uint64_t sub_25E09EE98()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E09EF90()
{
  OUTLINED_FUNCTION_25_1();
  double v1 = *(double *)(v0 + 24);
  *(void *)(v0 + 88) = *(void *)(v0 + 16);
  sub_25E0DAF60();
  sub_25E0DAF50();
  double v3 = v2;
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_36_2();
  v4();
  if (qword_26A6D4268 != -1) {
    swift_once();
  }
  *(void *)(v0 + 96) = qword_26A6DDCE0;
  OUTLINED_FUNCTION_78_1((uint64_t)&dword_26A6D5FA8);
  swift_retain();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_25E09F0CC;
  uint64_t v6 = OUTLINED_FUNCTION_36();
  v7.n128_f64[0] = v3 - v1;
  return v9(v6, v7);
}

uint64_t sub_25E09F0CC()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    *(void *)(v5 + 120) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E09F1C4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  double v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 120);
  return v1(v2);
}

uint64_t sub_25E09F234()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t FileCache.clean(markAllPurgeable:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E09F2BC);
}

uint64_t sub_25E09F2BC()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25E09F390;
  return sub_25E09F7C4((uint64_t)sub_25E0A2604, v3);
}

uint64_t sub_25E09F390()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    return v10();
  }
}

uint64_t sub_25E09F490()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E09F4EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v25 = a5;
  int v22 = a3;
  uint64_t v8 = sub_25E0DADE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_25E0DAEA0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a4;
  v24[0] = a1;
  v24[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F06E50], v8);
  sub_25E03FD80();
  sub_25E0DAE80();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v16 = objc_msgSend(self, sel_defaultManager);
  sub_25E0DAE50();
  uint64_t v17 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  LOBYTE(a4) = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

  if (a4)
  {
    if ((v22 & 1) == 0 && (v25 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return 1;
    }
    LODWORD(v24[0]) = *(_DWORD *)(v21 + OBJC_IVAR____TtC15SonicFoundation9FileCache_contentType);
    char v26 = 0;
    uint64_t v19 = v23;
    sub_25E0D5A78((int *)v24, &v26);
    if (v19) {
      MEMORY[0x2611CF510](v19);
    }
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return 0;
}

uint64_t sub_25E09F7C4(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  sqlite3_int64 v3[3] = a1;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E09F7E0);
}

uint64_t sub_25E09F7E0()
{
  OUTLINED_FUNCTION_17();
  v0[6] = *(void *)(v0[5] + 16);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  type metadata accessor for SQLDatabase(0);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  OUTLINED_FUNCTION_52_4();
  *uint64_t v1 = v2;
  v1[1] = sub_25E09F8BC;
  uint64_t v3 = OUTLINED_FUNCTION_24_8();
  return MEMORY[0x270FA1FA8](v3, v4, v5, v6, v7);
}

uint64_t sub_25E09F8BC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E09F9B4()
{
  OUTLINED_FUNCTION_17();
  v0[9] = v0[2];
  if (qword_26A6D4268 != -1) {
    swift_once();
  }
  v0[10] = qword_26A6DDCE0;
  OUTLINED_FUNCTION_102_1((int *)&unk_26A6D5F98);
  swift_retain();
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E09FAB0;
  return v3();
}

uint64_t sub_25E09FAB0()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E09FB94()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E09FBEC()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E09FBF4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

void sub_25E09FC58()
{
  uint64_t v1 = sub_25E0DB270();
  MEMORY[0x270FA5388](v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v1);
  sub_25E09D130(&qword_26A6D5938, MEMORY[0x263F045C0]);
  sub_25E0DB720();
  uint64_t v4 = v20;
  uint64_t v5 = v21;
  uint64_t v6 = *(void *)(v20 + 16);
  if (v21 == v6)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v20 = v7;
    uint64_t v8 = MEMORY[0x263F8D310];
    sub_25E0A96EC(0, (unint64_t *)&qword_26A6D4930, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_25E0A8F84((unint64_t *)&qword_26A6D4938, (unint64_t *)&qword_26A6D4930, v8);
    sub_25E0DB480();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v21 < v6)
    {
      uint64_t v7 = MEMORY[0x263F8EE78];
      long long v19 = xmmword_25E0DD9C0;
      unint64_t v9 = v21;
      while ((v5 & 0x8000000000000000) == 0)
      {
        if (v9 >= *(void *)(v4 + 16)) {
          goto LABEL_15;
        }
        char v10 = *(unsigned char *)(v4 + 32 + v9);
        sub_25E09D030(0, (unint64_t *)&qword_26A6D56C8, (unint64_t *)&qword_26A6D56D0);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = v19;
        *(void *)(v11 + 56) = MEMORY[0x263F8E778];
        *(void *)(v11 + 64) = MEMORY[0x263F8E7C0];
        *(unsigned char *)(v11 + 32) = v10;
        uint64_t v12 = sub_25E0DB520();
        uint64_t v14 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25E057264();
          uint64_t v7 = v17;
        }
        unint64_t v15 = *(void *)(v7 + 16);
        if (v15 >= *(void *)(v7 + 24) >> 1)
        {
          sub_25E057264();
          uint64_t v7 = v18;
        }
        ++v9;
        *(void *)(v7 + 16) = v15 + 1;
        uint64_t v16 = v7 + 16 * v15;
        *(void *)(v16 + 32) = v12;
        *(void *)(v16 + 40) = v14;
        if (v6 == v9) {
          goto LABEL_3;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t FileCache.deinit()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v2 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_36_2();
  v2();
  OUTLINED_FUNCTION_36_2();
  v2();
  swift_release();
  return v0;
}

uint64_t FileCache.__deallocating_deinit()
{
  FileCache.deinit();
  OUTLINED_FUNCTION_31_3();

  return swift_deallocClassInstance();
}

uint64_t sub_25E0A0018()
{
  sub_25E0A8C98(0, &qword_26A6D58F0, type metadata accessor for NoPurgeAssertion, (uint64_t (*)(uint64_t, void, uint64_t, void))type metadata accessor for WeakCache);
  swift_allocObject();
  uint64_t result = sub_25E0A6924();
  qword_26A6D5788 = result;
  return result;
}

uint64_t sub_25E0A0088(uint64_t a1, int a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v9 = sub_25E0DAEA0();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a1);
  int v17 = a2;
  unsigned __int8 v16 = a3;
  type metadata accessor for NoPurgeAssertion(0);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_25E0A0394((uint64_t)v11, &v17, &v16, a4);
  if (v4) {
    return v14;
  }
  return result;
}

uint64_t sub_25E0A01AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  return MEMORY[0x270FA2498](sub_25E0A01D4, 0, 0);
}

uint64_t sub_25E0A01D4()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[4];
  uint64_t v3 = *(void *)(v0[6] + 16);
  v0[7] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  v4[2] = v0 + 2;
  v4[3] = v2;
  v4[4] = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25E0A026C, v3, 0);
}

uint64_t sub_25E0A026C()
{
  OUTLINED_FUNCTION_17();
  *(void *)(v0 + 72) = sub_25E09A70C((void (*)(uint64_t *__return_ptr, uint64_t))sub_25E0A9144);
  *(void *)(v0 + 80) = 0;
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0A0314()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 72));
}

uint64_t sub_25E0A0330()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A0394(uint64_t a1, int *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v34 = a4;
  uint64_t v7 = sub_25E0DAEA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E05D328();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v12) = *a3;
  int v32 = *a2;
  int v33 = v12;
  id v14 = objc_msgSend(self, sel_defaultManager);
  sub_25E0DAE50();
  uint64_t v15 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  LODWORD(a3) = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if (!a3)
  {
    uint64_t v31 = v9;
    uint64_t v22 = (uint64_t)v13;
    uint64_t v23 = v10;
LABEL_6:
    uint64_t v21 = v35;
    unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v24(v35 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL, a1, v7);
    *(_DWORD *)(v21 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_contentType) = v32;
    *(unsigned char *)(v21 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_purgeUrgency) = v33;
    uint64_t v25 = v7;
    uint64_t v26 = v34;
    *(void *)(v21 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB) = v34;
    uint64_t v27 = sub_25E0DBA10();
    __swift_storeEnumTagSinglePayload(v22, 1, 1, v27);
    v24((uint64_t)v23, a1, v25);
    unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = 0;
    *((void *)v29 + 3) = 0;
    *((void *)v29 + 4) = v26;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v29[v28], v23, v25);
    swift_retain();
    sub_25E04C534();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v25);
    return v21;
  }
  uint64_t v16 = v38;
  sub_25E0D5BE8();
  if (!v16)
  {
    uint64_t v31 = v9;
    uint64_t v22 = (uint64_t)v13;
    uint64_t v23 = v10;
    uint64_t v38 = 0;
    goto LABEL_6;
  }
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  uint64_t v36 = 0x742064656C696146;
  unint64_t v37 = 0xEF206B72616D206FLL;
  sub_25E09D130(&qword_26A6D57B0, MEMORY[0x263F06EA8]);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  uint64_t v17 = v36;
  unint64_t v18 = v37;
  sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25E0DD9C0;
  *(void *)(v19 + 32) = v16;
  sub_25E09D088();
  sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
  swift_allocError();
  *(unsigned char *)uint64_t v20 = 7;
  *(void *)(v20 + 8) = v17;
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v19;
  swift_willThrow();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  type metadata accessor for NoPurgeAssertion(0);
  uint64_t v21 = v35;
  swift_deallocPartialClassInstance();
  return v21;
}

uint64_t sub_25E0A0850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_25E051320;
  return sub_25E0A08F0(a5, 0);
}

uint64_t sub_25E0A08F0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 104) = a2;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = v2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E0A090C);
}

uint64_t sub_25E0A090C()
{
  OUTLINED_FUNCTION_17();
  v0[5] = *(void *)(v0[4] + 16);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  type metadata accessor for SQLDatabase(0);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  OUTLINED_FUNCTION_52_4();
  *uint64_t v1 = v2;
  v1[1] = sub_25E0A09E8;
  uint64_t v3 = OUTLINED_FUNCTION_24_8();
  return MEMORY[0x270FA1FA8](v3, v4, v5, v6, v7);
}

uint64_t sub_25E0A09E8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A0AE0()
{
  OUTLINED_FUNCTION_8_0();
  v0[8] = v0[2];
  sub_25E0DAE10();
  v0[9] = v1;
  if (qword_26A6D4268 != -1) {
    swift_once();
  }
  v0[10] = qword_26A6DDCE0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_26A6D5F58 + dword_26A6D5F58);
  swift_retain();
  sub_25E0DB3C0();
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_25E0A0C10;
  return v4();
}

uint64_t sub_25E0A0C10()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A0CFC()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E0A0D54()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E0A0D5C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A0DCC()
{
  uint64_t v1 = sub_25E0DAEA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E05D328();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL;
  int v9 = *(_DWORD *)(v0
                 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_contentType);
  int v19 = *(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_purgeUrgency);
  int v20 = v9;
  uint64_t v21 = v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_fileURL;
  uint64_t v22 = OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC15SonicFoundationP33_B9CBA2339CBA72CBC3BAD017AFA7BBA016NoPurgeAssertion_cacheDB);
  sub_25E0DB9D0();
  uint64_t v11 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v13 = (v12 + v3 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v14 = (v12 + v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v15 + v12, v4, v1);
  unint64_t v16 = v15 + v13;
  *(_DWORD *)unint64_t v16 = v20;
  *(unsigned char *)(v16 + 4) = v19;
  *(void *)(v15 + v14) = v10;
  swift_retain();
  sub_25E0A2298((uint64_t)v7, (uint64_t)&unk_26A6D5878, v15);
  swift_release();
  sub_25E0A9630((uint64_t)v7, (void (*)(void))sub_25E05D328);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v21, v1);
  swift_release();
  return v0;
}

uint64_t sub_25E0A102C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, uint64_t a7)
{
  *(unsigned char *)(v7 + 240) = a6;
  *(_DWORD *)(v7 + 236) = a5;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a7;
  uint64_t v8 = sub_25E0DB540();
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = *(void *)(v8 - 8);
  *(void *)(v7 + 112) = swift_task_alloc();
  uint64_t v9 = sub_25E0DAEA0();
  *(void *)(v7 + 120) = v9;
  *(void *)(v7 + 128) = *(void *)(v9 - 8);
  *(void *)(v7 + 136) = swift_task_alloc();
  uint64_t v10 = MEMORY[0x263F8D310];
  sub_25E0A96EC(0, &qword_26A6D5890, MEMORY[0x263F8D310], MEMORY[0x263F8F5B8]);
  *(void *)(v7 + 144) = v11;
  *(void *)(v7 + 152) = *(void *)(v11 - 8);
  *(void *)(v7 + 160) = swift_task_alloc();
  sub_25E0A96EC(0, &qword_26A6D5898, v10, MEMORY[0x263F8F5A8]);
  *(void *)(v7 + 168) = v12;
  *(void *)(v7 + 176) = *(void *)(v12 - 8);
  *(void *)(v7 + 184) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E0A127C, 0, 0);
}

uint64_t sub_25E0A127C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_25_1();
  if (qword_26A6D4260 != -1) {
    swift_once();
  }
  sub_25E0A96EC(0, &qword_26A6D42F0, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_25E0DD9C0;
  swift_retain();
  *(void *)(v12 + 32) = sub_25E0DAE50();
  *(void *)(v12 + 40) = v13;
  sub_25E0A2170(v12);
  swift_release();
  swift_bridgeObjectRelease();
  sub_25E0DBA70();
  uint64_t v14 = OUTLINED_FUNCTION_89();
  v15(v14);
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_96_1(v16);
  *uint64_t v17 = v18;
  v17[1] = sub_25E0A1440;
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA1F68](v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12);
}

uint64_t sub_25E0A1440()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

void sub_25E0A1534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v74 = v12;
  v73[1] = *MEMORY[0x263EF8340];
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v12 + 24);
  *(void *)(v12 + 200) = v13;
  *(void *)(v12 + 208) = v14;
  if (!v14) {
    goto LABEL_8;
  }
  (*(void (**)(void, void, void))(*(void *)(v12 + 128) + 16))(*(void *)(v12 + 136), *(void *)(v12 + 80), *(void *)(v12 + 120));
  if (v13 == sub_25E0DAE50() && v14 == v15)
  {
    uint64_t v24 = *(void *)(v12 + 128);
    uint64_t v23 = *(void *)(v12 + 136);
    uint64_t v25 = *(void *)(v12 + 120);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    char v17 = sub_25E0DC380();
    swift_bridgeObjectRelease();
    uint64_t v18 = OUTLINED_FUNCTION_73_1();
    v19(v18);
    if ((v17 & 1) == 0)
    {
      __break(1u);
LABEL_8:
      OUTLINED_FUNCTION_17_4();
      v20();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_8_7();
      __asm { BRAA            X1, X16 }
    }
  }
  id v26 = objc_msgSend(self, sel_defaultManager);
  sub_25E0DAE50();
  uint64_t v27 = (void *)sub_25E0DB4D0();
  swift_bridgeObjectRelease();
  unsigned int v28 = objc_msgSend(v26, sel_fileExistsAtPath_, v27);

  if (!v28) {
    goto LABEL_23;
  }
  int v29 = *(_DWORD *)(v12 + 236);
  if (v29 < 0)
  {
    sub_25E0DC130();
    OUTLINED_FUNCTION_8_7();
    return;
  }
  *(_DWORD *)(v12 + 232) = v29 | dword_25E0E0060[*(char *)(v12 + 240)] | 0x10000;
  *(void *)(v12 + 32) = sub_25E0DAE50();
  *(void *)(v12 + 40) = v30;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v31 = sub_25E0DBD90();
  uint64_t v32 = OUTLINED_FUNCTION_73_1();
  v33(v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = v31 ? (const char *)(v31 + 32) : 0;
  int v35 = fsctl(v34, 0xC0084A44uLL, (void *)(v12 + 232), 0);
  uint64_t v36 = swift_bridgeObjectRelease();
  if (v35 && (int v37 = MEMORY[0x2611CD6F0](v36)) != 0)
  {
    uint64_t v38 = sub_25E0D42C8(v37);
    swift_willThrow();
    *(void *)(v12 + 64) = 0;
    *(void *)(v12 + 72) = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_1();
    *(void *)(v12 + 48) = v40;
    *(void *)(v12 + 56) = v39 | 0xEF206B72616D0000;
    sub_25E09D130(&qword_26A6D57B0, MEMORY[0x263F06EA8]);
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v41 = *(void *)(v12 + 48);
    uint64_t v42 = *(void *)(v12 + 56);
    sub_25E09D030(0, &qword_26A6D4950, (unint64_t *)&qword_26B384A08);
    uint64_t v43 = OUTLINED_FUNCTION_62_2();
    *(_OWORD *)(v43 + 16) = xmmword_25E0DD9C0;
    *(void *)(v43 + 32) = v38;
    sub_25E09D088();
    sub_25E09D130(&qword_26A6D57C8, (void (*)(uint64_t))sub_25E09D088);
    uint64_t v44 = (void *)swift_allocError();
    *(unsigned char *)uint64_t v45 = 8;
    *(void *)(v45 + 8) = v41;
    *(void *)(v45 + 16) = v42;
    OUTLINED_FUNCTION_110_0((uint64_t)v44, v45);
    if (qword_26A6D4248 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_25E0DB1B0();
    __swift_project_value_buffer(v46, (uint64_t)qword_26A6D5738);
    id v47 = v44;
    id v48 = v44;
    sub_25E0DB3C0();
    uint64_t v49 = sub_25E0DB1A0();
    os_log_type_t v50 = sub_25E0DBC70();
    BOOL v51 = os_log_type_enabled(v49, v50);
    unint64_t v52 = *(void *)(v12 + 208);
    if (v51)
    {
      uint64_t v53 = *(void *)(v12 + 200);
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      v73[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136446466;
      sub_25E0DB3C0();
      *(void *)(v54 + 4) = sub_25E0A7E5C(v53, v52, v73);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 12) = 2114;
      id v56 = v44;
      uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v54 + 14) = v57;
      *uint64_t v55 = v57;
      MEMORY[0x2611CF510](v44);
      MEMORY[0x2611CF510](v44);
      _os_log_impl(&dword_25E036000, v49, v50, "Failed to mark %{public}s purgeable: %{public}@", (uint8_t *)v54, 0x16u);
      sub_25E0A9688(0, &qword_26A6D58A8, (uint64_t (*)(uint64_t))sub_25E0A7F30, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_55_4();
      swift_arrayDestroy();
      OUTLINED_FUNCTION_55_4();
      OUTLINED_FUNCTION_55_4();

      MEMORY[0x2611CF510](v44);
    }
    else
    {
      MEMORY[0x2611CF510](v44);
      swift_bridgeObjectRelease_n();
      MEMORY[0x2611CF510](v44);
      MEMORY[0x2611CF510](v44);
    }
    uint64_t v62 = swift_task_alloc();
    int v63 = (void *)OUTLINED_FUNCTION_96_1(v62);
    *int v63 = v64;
    v63[1] = sub_25E0A1440;
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_8_7();
    MEMORY[0x270FA1F68](v65, v66, v67, v68, v69, v70, v71, v72, a9, a10, a11, a12);
  }
  else
  {
LABEL_23:
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v12 + 216) = v58;
    *uint64_t v58 = v12;
    v58[1] = sub_25E0A1CC0;
    OUTLINED_FUNCTION_95_1(*(void *)(v12 + 80));
    OUTLINED_FUNCTION_8_7();
    sub_25E0A08F0(v59, v60);
  }
}

uint64_t sub_25E0A1CC0()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A1DD8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_96_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E0A1440;
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA1F68]();
}

uint64_t sub_25E0A1EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21_1();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_22();
  a18 = v20;
  a10 = *MEMORY[0x263EF8340];
  uint64_t v23 = (void *)v20[28];
  if (qword_26A6D4248 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_25E0DB1B0();
  __swift_project_value_buffer(v24, (uint64_t)qword_26A6D5738);
  id v25 = v23;
  id v26 = v23;
  sub_25E0DB3C0();
  uint64_t v27 = sub_25E0DB1A0();
  os_log_type_t v28 = sub_25E0DBC70();
  BOOL v29 = os_log_type_enabled(v27, v28);
  unint64_t v30 = v20[26];
  if (v29)
  {
    uint64_t v31 = v20[25];
    uint64_t v32 = swift_slowAlloc();
    int v33 = (void *)swift_slowAlloc();
    a9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446466;
    sub_25E0DB3C0();
    *(void *)(v32 + 4) = sub_25E0A7E5C(v31, v30, &a9);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2114;
    id v34 = v23;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v32 + 14) = v35;
    *int v33 = v35;
    MEMORY[0x2611CF510](v23);
    MEMORY[0x2611CF510](v23);
    _os_log_impl(&dword_25E036000, v27, v28, "Failed to mark %{public}s purgeable: %{public}@", (uint8_t *)v32, 0x16u);
    sub_25E0A9688(0, &qword_26A6D58A8, (uint64_t (*)(uint64_t))sub_25E0A7F30, MEMORY[0x263F8D8F0]);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_55_4();
    swift_arrayDestroy();
    OUTLINED_FUNCTION_55_4();
    OUTLINED_FUNCTION_55_4();

    MEMORY[0x2611CF510](v23);
  }
  else
  {
    MEMORY[0x2611CF510](v23);
    swift_bridgeObjectRelease_n();
    MEMORY[0x2611CF510](v23);
    MEMORY[0x2611CF510](v23);
  }
  uint64_t v36 = swift_task_alloc();
  int v37 = (void *)OUTLINED_FUNCTION_96_1(v36);
  void *v37 = v38;
  v37[1] = sub_25E0A1440;
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_20();
  return MEMORY[0x270FA1F68](v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12);
}

uint64_t sub_25E0A2170(uint64_t a1)
{
  sub_25E0A96EC(0, &qword_26A6D58C0, MEMORY[0x263F8D310], MEMORY[0x263F8F588]);
  MEMORY[0x270FA5388](v3);
  uint64_t v8 = v1;
  uint64_t v9 = a1;
  (*(void (**)(unsigned char *, void))(v5 + 104))(&v7[-v4], *MEMORY[0x263F8F580]);
  return sub_25E0DBAA0();
}

uint64_t sub_25E0A2298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25E0A7BA0(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_25E0DB960();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_25E0A23A8()
{
  sub_25E0A0DCC();

  return swift_deallocClassInstance();
}

uint64_t sub_25E0A23FC()
{
  char v1 = 0;
  type metadata accessor for ActorQueue();
  swift_allocObject();
  uint64_t result = ActorQueue.init(ordering:)(&v1);
  qword_26A6DDCE0 = result;
  return result;
}

uint64_t sub_25E0A244C()
{
  uint64_t v2 = OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_1();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v7);
  sub_25E05D328();
  uint64_t v9 = OUTLINED_FUNCTION_23_3(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_5_3();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v2);
  unint64_t v14 = (v6 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  OUTLINED_FUNCTION_13_5();
  v16();
  *(void *)(v15 + v14) = 1;
  uint64_t v17 = sub_25E04C6D4();
  uint64_t v18 = OUTLINED_FUNCTION_89();
  v19(v18);
  *(void *)(v1 + 16) = v17;
  return v1;
}

uint64_t type metadata accessor for NoPurgeAssertion(uint64_t a1)
{
  return sub_25E0A28F0(a1, (uint64_t *)&unk_26A6D5860);
}

uint64_t sub_25E0A2604(uint64_t a1, uint64_t a2, int a3)
{
  return sub_25E09F4EC(a1, a2, a3, *(void *)(v3 + 16), *(unsigned __int8 *)(v3 + 24)) & 1;
}

unint64_t sub_25E0A262C()
{
  unint64_t result = qword_26A6D5808;
  if (!qword_26A6D5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5808);
  }
  return result;
}

unint64_t sub_25E0A267C()
{
  unint64_t result = qword_26A6D5810;
  if (!qword_26A6D5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5810);
  }
  return result;
}

unint64_t sub_25E0A26C8(uint64_t a1)
{
  unint64_t result = sub_25E0A26F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25E0A26F0()
{
  unint64_t result = qword_26A6D5818;
  if (!qword_26A6D5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5818);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FileCacheError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for FileCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E0A2890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileCacheError()
{
  return &type metadata for FileCacheError;
}

uint64_t sub_25E0A28C8()
{
  return type metadata accessor for FileCache(0);
}

uint64_t type metadata accessor for FileCache(uint64_t a1)
{
  return sub_25E0A28F0(a1, (uint64_t *)&unk_26A6D5820);
}

uint64_t sub_25E0A28F0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E0A2924()
{
  uint64_t result = sub_25E0DAEA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FileCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FileCache);
}

uint64_t dispatch thunk of FileCache.__allocating_init(containerURL:temporaryContainerURL:contentType:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

char *initializeBufferWithCopyOfBuffer for FileCache.Entry(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_25E0DAEA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = a3[6];
    *(_DWORD *)&a1[a3[5]] = *(_DWORD *)((char *)a2 + a3[5]);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *(void *)uint64_t v10 = *v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = a3[7];
    unint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    sub_25E0DB3C0();
    v8(v14, v15, v7);
    *(void *)&a1[a3[8]] = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for FileCache.Entry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E0DAEA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 28), v4);

  return swift_release();
}

uint64_t initializeWithCopy for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25E0DAEA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  sub_25E0DB3C0();
  v7(v13, v14, v6);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25E0DAEA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25E0DAEA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FileCache.Entry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_25E0DAEA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileCache.Entry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E0A2F5C);
}

uint64_t sub_25E0A2F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_23_9();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(v3, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(v3 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FileCache.Entry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E0A2FF8);
}

void sub_25E0A2FF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_23_9();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t sub_25E0A3084()
{
  uint64_t result = sub_25E0DAEA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FileCache.Policy()
{
  return &type metadata for FileCache.Policy;
}

uint64_t sub_25E0A3148()
{
  return type metadata accessor for NoPurgeAssertion(0);
}

uint64_t sub_25E0A3150()
{
  uint64_t result = sub_25E0DAEA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25E0A3204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  id v5[2] = a1;
  return MEMORY[0x270FA2498](sub_25E0A3228, 0, 0);
}

uint64_t sub_25E0A3228()
{
  OUTLINED_FUNCTION_8_0();
  if (qword_26A6D4268 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  v0[5] = qword_26A6DDCE0;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  OUTLINED_FUNCTION_78_1((uint64_t)&dword_26A6D5960);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25E0A3340;
  return v6(&unk_26A6D5958, v3);
}

uint64_t sub_25E0A3340()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v8 = v7;
  *(void *)(v5 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    uint64_t v12 = *(void **)(v5 + 16);
    swift_release();
    *uint64_t v12 = v3;
    swift_task_dealloc();
    OUTLINED_FUNCTION_17_0();
    return v13();
  }
}

uint64_t sub_25E0A3460()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A34C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = type metadata accessor for SQLDatabase.Location(0);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E0A355C, 0, 0);
}

uint64_t sub_25E0A355C()
{
  OUTLINED_FUNCTION_17();
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v1 = OUTLINED_FUNCTION_100_1();
  v2(v1);
  OUTLINED_FUNCTION_36();
  swift_storeEnumTagMultiPayload();
  *(_DWORD *)(v0 + 49) = 16777473;
  *(_DWORD *)(v0 + 53) = 0;
  *(_DWORD *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 60) = 2;
  type metadata accessor for SQLDatabase(0);
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_25E0A367C;
  uint64_t v4 = OUTLINED_FUNCTION_95_1(*(void *)(v0 + 96));
  return SQLDatabase.init(location:options:)(v4, (char *)(v0 + 49));
}

uint64_t sub_25E0A367C()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v8 = v7;
  v5[14] = v3;
  v5[15] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
  else
  {
    OUTLINED_FUNCTION_78_1((uint64_t)&dword_26A6D5988);
    swift_retain();
    uint64_t v12 = (void *)swift_task_alloc();
    v5[16] = v12;
    *uint64_t v12 = v7;
    v12[1] = sub_25E0A37E4;
    return v14();
  }
}

uint64_t sub_25E0A37E4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v7 + 136) = v6;
  *(void *)(v7 + 144) = v0;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_25E0A38E0()
{
  OUTLINED_FUNCTION_12();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

void sub_25E0A393C()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 136);
  if (v1 == *(void *)(v0 + 80))
  {
    OUTLINED_FUNCTION_106_1();
    OUTLINED_FUNCTION_17_0();
    v2();
  }
  else if (v1)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = 0xD000000000000129;
    OUTLINED_FUNCTION_58_1();
    *(void *)(v0 + 32) = 0;
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 24) = v3;
    *(unsigned char *)(v0 + 48) = 0;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_25E0A3A3C;
    uint64_t v5 = OUTLINED_FUNCTION_98();
    SQLDatabase.execute(_:)(v5);
  }
}

uint64_t sub_25E0A3A3C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  v3[20] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)OUTLINED_FUNCTION_20_0();
    v3[21] = (uint64_t)v10;
    *uint64_t v10 = v5;
    v10[1] = sub_25E0A3B80;
    uint64_t v11 = OUTLINED_FUNCTION_95_1(v3[10]);
    return v13(v11);
  }
}

uint64_t sub_25E0A3B80()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A3C5C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_106_1();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E0A3CB0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A3D14()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A3D78()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A3DDC(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  sub_25E0A94E8(0);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ActorQueue.QueuedTask();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_25E0A3F1C, v2, 0);
}

uint64_t sub_25E0A3F1C()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = v0[21];
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)(v1 + 120) + 24);
  uint64_t v3 = v0[21];
  if (v2 || (*(unsigned char *)(v3 + 128) & 1) != 0)
  {
    sub_25E0B07D0(0, 15, 0xD000000000000040, 0x800000025E0E3CD0);
    v0[17] = v4;
    uint64_t v5 = MEMORY[0x263F8D120];
    sub_25E0A96EC(0, (unint64_t *)&qword_26A6D47E8, MEMORY[0x263F8D120], MEMORY[0x263F8D488]);
    sub_25E0A8F84((unint64_t *)&qword_26A6D47F0, (unint64_t *)&qword_26A6D47E8, v5);
    uint64_t v6 = sub_25E0DB6F0();
    uint64_t v8 = v7;
    v0[34] = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[35] = v9;
    void v9[2] = v3;
    v9[3] = v6;
    void v9[4] = v8;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[36] = v10;
    void v10[2] = v3;
    v10[3] = v6;
    v10[4] = v8;
    sub_25E09D130(&qword_26A6D5978, (void (*)(uint64_t))type metadata accessor for ActorQueue);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[37] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_25E0A4304;
    return MEMORY[0x270FA2338]();
  }
  else
  {
    uint64_t v12 = (int *)v0[19];
    *(unsigned char *)(v3 + 128) = 1;
    uint64_t v15 = (uint64_t (*)(void *))((char *)v12 + *v12);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[32] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_25E0A4204;
    return v15(v0 + 18);
  }
}

uint64_t sub_25E0A4204()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 264) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 168);
  if (v0) {
    uint64_t v6 = sub_25E0A4AB0;
  }
  else {
    uint64_t v6 = sub_25E0A4930;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_25E0A4304()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_25E0A4440, v2, 0);
}

void sub_25E0A4440()
{
  OUTLINED_FUNCTION_17();
  if (*(unsigned char *)(v0[21] + 128) == 1)
  {
    uint64_t v2 = (void (*)(void *))(v0[19] + *(int *)v0[19]);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[38] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_25E0A452C;
    v2(v0 + 18);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25E0A452C()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 312) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v1 + 168);
  if (v0) {
    uint64_t v6 = sub_25E0A47A8;
  }
  else {
    uint64_t v6 = sub_25E0A462C;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

void sub_25E0A462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  if (*(unsigned char *)(v12[21] + 128) == 1)
  {
    OUTLINED_FUNCTION_25();
    uint64_t v13 = OUTLINED_FUNCTION_48();
    if (v14 != v15)
    {
      uint64_t v17 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_92_1();
      }
      uint64_t v16 = v12[39];
      uint64_t v13 = OUTLINED_FUNCTION_46_3(v12[25]);
      if (v16)
      {
        OUTLINED_FUNCTION_20();
        return;
      }
      uint64_t v17 = 0;
    }
    OUTLINED_FUNCTION_21(v13, v17);
    OUTLINED_FUNCTION_29_7();
    if (v18)
    {
      uint64_t v19 = v12[21];
      sub_25E0A9630(v12[25], sub_25E0A94E8);
      *(unsigned char *)(v19 + 128) = 0;
    }
    else
    {
      uint64_t v20 = v12[31];
      sub_25E0A8FDC(v12[25], v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_44();
      sub_25E0DB980();
      sub_25E0A9630(v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
    }
    OUTLINED_FUNCTION_66_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_20();
    v23(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

void sub_25E0A47A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  if (*(unsigned char *)(v13[21] + 128) == 1)
  {
    OUTLINED_FUNCTION_25();
    uint64_t v14 = OUTLINED_FUNCTION_48();
    if (v15 != v16)
    {
      uint64_t v17 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_92_1();
      }
      uint64_t v14 = OUTLINED_FUNCTION_45(v13[24]);
      if (v12)
      {
        OUTLINED_FUNCTION_20();
        return;
      }
      uint64_t v17 = 0;
    }
    OUTLINED_FUNCTION_21(v14, v17);
    OUTLINED_FUNCTION_29_7();
    if (v18)
    {
      uint64_t v19 = v13[21];
      sub_25E0A9630(v13[24], sub_25E0A94E8);
      *(unsigned char *)(v19 + 128) = 0;
    }
    else
    {
      uint64_t v20 = v13[30];
      sub_25E0A8FDC(v13[24], v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_44();
      sub_25E0DB980();
      sub_25E0A9630(v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
    }
    OUTLINED_FUNCTION_91_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_20();
    v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

void sub_25E0A4930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  if (*(unsigned char *)(v12[21] + 128))
  {
    OUTLINED_FUNCTION_25();
    uint64_t v13 = OUTLINED_FUNCTION_48();
    if (v14 != v15)
    {
      uint64_t v17 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_92_1();
      }
      uint64_t v16 = v12[33];
      uint64_t v13 = OUTLINED_FUNCTION_46_3(v12[23]);
      if (v16)
      {
        OUTLINED_FUNCTION_20();
        return;
      }
      uint64_t v17 = 0;
    }
    OUTLINED_FUNCTION_21(v13, v17);
    OUTLINED_FUNCTION_29_7();
    if (v18)
    {
      uint64_t v19 = v12[21];
      sub_25E0A9630(v12[23], sub_25E0A94E8);
      *(unsigned char *)(v19 + 128) = 0;
    }
    else
    {
      uint64_t v20 = v12[29];
      sub_25E0A8FDC(v12[23], v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_44();
      sub_25E0DB980();
      sub_25E0A9630(v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
    }
    OUTLINED_FUNCTION_66_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_20();
    v23(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

void sub_25E0A4AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_22();
  if (*(unsigned char *)(v13[21] + 128))
  {
    OUTLINED_FUNCTION_25();
    uint64_t v14 = OUTLINED_FUNCTION_48();
    if (v15 != v16)
    {
      uint64_t v17 = 1;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_92_1();
      }
      uint64_t v14 = OUTLINED_FUNCTION_45(v13[22]);
      if (v12)
      {
        OUTLINED_FUNCTION_20();
        return;
      }
      uint64_t v17 = 0;
    }
    OUTLINED_FUNCTION_21(v14, v17);
    OUTLINED_FUNCTION_29_7();
    if (v18)
    {
      uint64_t v19 = v13[21];
      sub_25E0A9630(v13[22], sub_25E0A94E8);
      *(unsigned char *)(v19 + 128) = 0;
    }
    else
    {
      uint64_t v20 = v13[28];
      sub_25E0A8FDC(v13[22], v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
      OUTLINED_FUNCTION_44();
      sub_25E0DB980();
      sub_25E0A9630(v20, (void (*)(void))type metadata accessor for ActorQueue.QueuedTask);
    }
    OUTLINED_FUNCTION_91_1();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_20();
    v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_25E0A4C2C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 1168) = a6;
  *(double *)(v6 + 1160) = a1;
  *(void *)(v6 + 1152) = a5;
  *(void *)(v6 + 1144) = a4;
  *(void *)(v6 + 1136) = a3;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E0A4C54);
}

uint64_t sub_25E0A4C54()
{
  OUTLINED_FUNCTION_74_0();
  sub_25E056BE8();
  *(void *)(v0 + 16) = 0xD000000000000050;
  OUTLINED_FUNCTION_77_1((uint64_t)"    INSERT OR REPLACE INTO entries (fileName, purgeable, timestamp)\n    VALUES (");
  OUTLINED_FUNCTION_9_10();
  uint64_t v22 = v21;
  uint64_t v1 = *(void *)(v0 + 1152);
  uint64_t v2 = *(void *)(v0 + 1144);
  *(void *)(v21 + 16) = 0xD000000000000047;
  OUTLINED_FUNCTION_27_9();
  *(void *)(v0 + 1080) = MEMORY[0x263F8D310];
  *(void *)(v0 + 1088) = &protocol witness table for String;
  *(void *)(v0 + 1056) = v2;
  *(void *)(v0 + 1064) = v1;
  OUTLINED_FUNCTION_76_1();
  *(unsigned char *)(v0 + 248) = 1;
  unint64_t v3 = *(void *)(v22 + 16);
  unint64_t v4 = *(void *)(v22 + 24);
  sub_25E0DB3C0();
  if (v3 >= v4 >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v23;
  }
  *(void *)(v22 + 16) = v3 + 1;
  OUTLINED_FUNCTION_28_9();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1056);
  *(void *)(v0 + 256) = 0x202C30202CLL;
  *(void *)(v0 + 264) = 0xE500000000000000;
  *(unsigned char *)(v0 + 328) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v22 = v24;
  }
  OUTLINED_FUNCTION_54_3();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v25;
  }
  uint64_t v6 = *(void *)(v0 + 1160);
  *(void *)(v22 + 16) = v0 + 1056;
  OUTLINED_FUNCTION_19_10();
  *(void *)(v0 + 1040) = MEMORY[0x263F8D538];
  *(void *)(v0 + 1048) = &protocol witness table for Double;
  *(void *)(v0 + 1016) = v6;
  sub_25E03DF54(v0 + 1016, v0 + 416);
  *(unsigned char *)(v0 + 488) = 1;
  OUTLINED_FUNCTION_85_0();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v26;
  }
  OUTLINED_FUNCTION_30_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + 1016);
  OUTLINED_FUNCTION_58_1();
  *(void *)(v0 + 496) = 0xD000000000000046;
  *(void *)(v0 + 504) = v7;
  *(unsigned char *)(v0 + 568) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v22 = v27;
  }
  OUTLINED_FUNCTION_53_4();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v28;
  }
  uint64_t v8 = *(void *)(v0 + 1152);
  uint64_t v9 = *(void *)(v0 + 1144);
  *(void *)(v22 + 16) = v0 + 1016;
  OUTLINED_FUNCTION_19_10();
  *(void *)(v0 + 960) = MEMORY[0x263F8D310];
  *(void *)(v0 + 968) = &protocol witness table for String;
  *(void *)(v0 + 936) = v9;
  *(void *)(v0 + 944) = v8;
  OUTLINED_FUNCTION_76_1();
  *(unsigned char *)(v0 + 728) = 1;
  unint64_t v10 = *(void *)(v22 + 16);
  unint64_t v11 = *(void *)(v22 + 24);
  sub_25E0DB3C0();
  if (v10 >= v11 >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v29;
  }
  uint64_t v12 = v0 + 896;
  *(void *)(v22 + 16) = v10 + 1;
  OUTLINED_FUNCTION_28_9();
  __swift_destroy_boxed_opaque_existential_1(v0 + 936);
  *(void *)(v0 + 736) = 8236;
  *(void *)(v0 + 744) = 0xE200000000000000;
  *(unsigned char *)(v0 + 808) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v22 = v30;
  }
  OUTLINED_FUNCTION_54_3();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v31;
  }
  uint64_t v13 = *(void *)(v0 + 1168);
  *(void *)(v22 + 16) = v0 + 936;
  OUTLINED_FUNCTION_19_10();
  *(void *)(v0 + 920) = MEMORY[0x263F8E970];
  *(void *)(v0 + 928) = &protocol witness table for UInt64;
  *(void *)(v0 + 896) = v13;
  sub_25E03DF54(v0 + 896, v0 + 816);
  *(unsigned char *)(v0 + 888) = 1;
  OUTLINED_FUNCTION_85_0();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v32;
  }
  OUTLINED_FUNCTION_30_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + 896);
  *(void *)(v0 + 576) = 8236;
  *(void *)(v0 + 584) = 0xE200000000000000;
  *(unsigned char *)(v0 + 648) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v22 = v33;
  }
  OUTLINED_FUNCTION_53_4();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v34;
  }
  uint64_t v14 = *(void *)(v0 + 1160);
  *(void *)(v22 + 16) = v12;
  OUTLINED_FUNCTION_19_10();
  *(void *)(v0 + 1000) = MEMORY[0x263F8D538];
  *(void *)(v0 + 1008) = &protocol witness table for Double;
  *(void *)(v0 + 976) = v14;
  OUTLINED_FUNCTION_76_1();
  *(unsigned char *)(v0 + 408) = 1;
  OUTLINED_FUNCTION_53_4();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v35;
  }
  *(void *)(v22 + 16) = v12;
  OUTLINED_FUNCTION_28_9();
  __swift_destroy_boxed_opaque_existential_1(v0 + 976);
  *(void *)(v0 + 96) = 15145;
  *(void *)(v0 + 104) = 0xE200000000000000;
  *(unsigned char *)(v0 + 168) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v22 = v36;
  }
  OUTLINED_FUNCTION_54_3();
  if (v5)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v22 = v37;
  }
  *(void *)(v22 + 16) = v0 + 976;
  OUTLINED_FUNCTION_27_9();
  uint64_t v38 = v22;
  uint64_t v39 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E0D6330();
  uint64_t v16 = *(void *)(v39 + 16);
  *(void *)(v0 + 1176) = v16;
  if (v16)
  {
    OUTLINED_FUNCTION_97_1();
    *(void *)(v0 + 1208) = v39;
    *(void *)(v0 + 1200) = v17;
    *(void *)(v0 + 1192) = 0;
    *(void *)(v0 + 1184) = v38;
    *(void *)(v0 + 1096) = v38;
    *(void *)(v0 + 1104) = 0;
    *(void *)(v0 + 1112) = v17;
    *(void *)(v0 + 1120) = v39;
    *(unsigned char *)(v0 + 1128) = v18;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 1216) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_25E0A51E4;
    uint64_t v20 = OUTLINED_FUNCTION_98();
    return SQLDatabase.execute(_:)(v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0A51E4()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *unint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *char v5 = v4;
  *(void *)(v6 + 1224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A535C()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A5378(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 552) = a5;
  *(void *)(v5 + 544) = a4;
  *(unsigned char *)(v5 + 89) = a3;
  *(void *)(v5 + 536) = a2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E0A539C);
}

uint64_t sub_25E0A539C()
{
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_74_0();
  sub_25E056BE8();
  *(void *)(v0 + 16) = 0xD00000000000002FLL;
  OUTLINED_FUNCTION_77_1((uint64_t)"    UPDATE OR IGNORE entries\n    SET purgeable=");
  OUTLINED_FUNCTION_9_10();
  uint64_t v16 = v15;
  char v1 = *(unsigned char *)(v0 + 89);
  *(void *)(v15 + 16) = 0xD000000000000015;
  OUTLINED_FUNCTION_27_9();
  *(void *)(v0 + 480) = MEMORY[0x263F8D4F8];
  *(void *)(v0 + 488) = &protocol witness table for Bool;
  *(unsigned char *)(v0 + 456) = v1;
  sub_25E03DF54(v0 + 456, v0 + 176);
  *(unsigned char *)(v0 + 248) = 1;
  OUTLINED_FUNCTION_85_0();
  if (v2)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v16 = v17;
  }
  OUTLINED_FUNCTION_30_6();
  __swift_destroy_boxed_opaque_existential_1(v0 + 456);
  OUTLINED_FUNCTION_58_1();
  *(void *)(v0 + 256) = 0xD000000000000014;
  *(void *)(v0 + 264) = v3;
  *(unsigned char *)(v0 + 328) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v16 = v18;
  }
  OUTLINED_FUNCTION_53_4();
  if (v2)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v16 = v19;
  }
  uint64_t v4 = *(void *)(v0 + 552);
  uint64_t v5 = *(void *)(v0 + 544);
  *(void *)(v16 + 16) = v0 + 456;
  OUTLINED_FUNCTION_19_10();
  *(void *)(v0 + 440) = MEMORY[0x263F8D310];
  *(void *)(v0 + 448) = &protocol witness table for String;
  *(void *)(v0 + 416) = v5;
  *(void *)(v0 + 424) = v4;
  OUTLINED_FUNCTION_76_1();
  *(unsigned char *)(v0 + 408) = 1;
  unint64_t v6 = *(void *)(v16 + 16);
  unint64_t v7 = *(void *)(v16 + 24);
  sub_25E0DB3C0();
  if (v6 >= v7 >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v16 = v20;
  }
  *(void *)(v16 + 16) = v6 + 1;
  OUTLINED_FUNCTION_28_9();
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  *(void *)(v0 + 96) = 59;
  *(void *)(v0 + 104) = 0xE100000000000000;
  *(unsigned char *)(v0 + 168) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v16 = v21;
  }
  OUTLINED_FUNCTION_54_3();
  if (v2)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v16 = v22;
  }
  *(void *)(v16 + 16) = v0 + 416;
  OUTLINED_FUNCTION_27_9();
  uint64_t v23 = v16;
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E0D6330();
  uint64_t v9 = *(void *)(v24 + 16);
  *(void *)(v0 + 560) = v9;
  if (v9)
  {
    OUTLINED_FUNCTION_97_1();
    *(void *)(v0 + 592) = v24;
    *(void *)(v0 + 584) = v10;
    *(void *)(v0 + 576) = 0;
    *(void *)(v0 + 568) = v23;
    *(void *)(v0 + 496) = v23;
    *(void *)(v0 + 504) = 0;
    *(void *)(v0 + 512) = v10;
    *(void *)(v0 + 520) = v24;
    *(unsigned char *)(v0 + 528) = v11;
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_25E0A56A8;
    OUTLINED_FUNCTION_98();
    OUTLINED_FUNCTION_36_6();
    return SQLDatabase.execute(_:)(v13);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0A56A8()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 608) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_4_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_26_5();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_26_5();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A5820()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A583C(uint64_t a1, uint64_t a2, double a3)
{
  *(double *)(v3 + 352) = a3;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = a2;
  return OUTLINED_FUNCTION_13((uint64_t)sub_25E0A5858);
}

uint64_t sub_25E0A5858()
{
  OUTLINED_FUNCTION_74_0();
  uint64_t v1 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_79_1();
  sub_25E056BE8();
  uint64_t v3 = v2;
  *(void *)(v0 + 16) = 0xD00000000000002DLL;
  OUTLINED_FUNCTION_58_1();
  *(void *)(v0 + 24) = v4;
  *(unsigned char *)(v0 + 88) = 0;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 >= *(void *)(v5 + 24) >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v3 = v17;
  }
  uint64_t v7 = *(void *)(v0 + 352);
  *(void *)(v3 + 16) = v6 + 1;
  OUTLINED_FUNCTION_37_3(v3 + 80 * v6);
  *(void *)(v0 + 280) = MEMORY[0x263F8D538];
  *(void *)(v0 + 288) = &protocol witness table for Double;
  *(void *)(v0 + 256) = v7;
  sub_25E03DF54(v0 + 256, v0 + 96);
  *(unsigned char *)(v0 + 168) = 1;
  unint64_t v8 = *(void *)(v3 + 16);
  if (v8 >= *(void *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v3 = v18;
  }
  *(void *)(v3 + 16) = v8 + 1;
  sub_25E07DE30(v0 + 96, v3 + 80 * v8 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  OUTLINED_FUNCTION_58_1();
  *(void *)(v0 + 176) = 0xD000000000000027;
  *(void *)(v0 + 184) = v9;
  *(unsigned char *)(v0 + 248) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_9_14();
    uint64_t v3 = v19;
  }
  unint64_t v10 = *(void *)(v3 + 16);
  if (v10 >= *(void *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_9_10();
    uint64_t v3 = v20;
  }
  *(void *)(v3 + 16) = v10 + 1;
  OUTLINED_FUNCTION_37_3(v3 + 80 * v10);
  uint64_t v21 = v3;
  uint64_t result = sub_25E0D6330();
  uint64_t v12 = *(void *)(v1 + 16);
  *(void *)(v0 + 360) = v12;
  if (v12)
  {
    OUTLINED_FUNCTION_97_1();
    *(void *)(v0 + 384) = v13;
    *(void *)(v0 + 392) = v1;
    *(void *)(v0 + 368) = v21;
    *(void *)(v0 + 376) = 0;
    *(void *)(v0 + 296) = v21;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = v13;
    *(void *)(v0 + 320) = v1;
    *(unsigned char *)(v0 + 328) = v14;
    uint64_t v22 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D5CB0 + dword_26A6D5CB0);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_25E0A5AE4;
    uint64_t v16 = OUTLINED_FUNCTION_98();
    return v22(v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0A5AE4()
{
  OUTLINED_FUNCTION_17();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *unint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_5_2();
  *unint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = OUTLINED_FUNCTION_67_1();
    sub_25E03DEA4(v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_9();
    return v16();
  }
  else
  {
    uint64_t v18 = OUTLINED_FUNCTION_67_1();
    *(unsigned char *)(v7 + 89) = v3;
    *(void *)(v7 + 408) = v5;
    sub_25E03DEA4(v18, v19, v20, v21, v22);
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v23, v24, v25);
  }
}

uint64_t sub_25E0A5C04()
{
  double v1 = *(double *)(v0 + 408);
  if (*(unsigned char *)(v0 + 89)) {
    double v1 = 0.0;
  }
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 1.84467441e19)
  {
    **(void **)(v0 + 336) = (unint64_t)v1;
    OUTLINED_FUNCTION_17_0();
    return v2();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_25E0A5C74()
{
  OUTLINED_FUNCTION_17();
  *(void *)(v0 + 544) = v1;
  *(void *)(v0 + 536) = v2;
  *(void *)(v0 + 528) = v3;
  *(void *)(v0 + 408) = 0xD000000000000027;
  *(void *)(v0 + 416) = 0x800000025E0E4E90;
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_26A6D5CA8 + dword_26A6D5CA8);
  *(void *)(v0 + 424) = 0;
  *(void *)(v0 + 432) = 0;
  *(unsigned char *)(v0 + 440) = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25E0A5D60;
  return v6();
}

uint64_t sub_25E0A5D60()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v5 = v4;
  *(void *)(v6 + 560) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0A5E3C()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  *(void *)(v0 + 568) = v1;
  *(void *)(v0 + 576) = v2;
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  *(void *)(v0 + 584) = v3;
  *(void *)(v0 + 592) = v4;
  uint64_t v5 = *(void *)(v0 + 352);
  *(void *)(v0 + 600) = v5;
  char v6 = *(unsigned char *)(v0 + 360);
  *(unsigned char *)(v0 + 89) = v6;
  *(void *)(v0 + 256) = v1;
  *(void *)(v0 + 264) = v2;
  *(void *)(v0 + 272) = v3;
  *(void *)(v0 + 280) = v4;
  *(void *)(v0 + 288) = v5;
  *(unsigned char *)(v0 + 296) = v6;
  *(void *)(v0 + 304) = sub_25E0A8F50;
  *(void *)(v0 + 312) = 0;
  swift_retain();
  uint64_t v7 = OUTLINED_FUNCTION_89();
  sub_25E03DDF4(v7, v8, v4, v5, v6);
  uint64_t v9 = (void *)OUTLINED_FUNCTION_20_0();
  *(void *)(v0 + 608) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_25E0A5F44;
  return v11();
}

uint64_t sub_25E0A5F44()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 616) = v4;
  *(void *)(v2 + 624) = v5;
  *(void *)(v2 + 632) = v6;
  *(unsigned char *)(v2 + 90) = v7;
  *(void *)(v2 + 640) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v8, v9, v10);
}

uint64_t sub_25E0A6038()
{
  uint64_t v1 = *(void *)(v0 + 624);
  if (!v1)
  {
    sub_25E03E6F4(*(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288), *(unsigned char *)(v0 + 296));
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_17_0();
LABEL_8:
    OUTLINED_FUNCTION_87();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = *(void *)(v0 + 640);
  BOOL v3 = *(double *)(v0 + 632) == 1.0 && (*(unsigned char *)(v0 + 90) & 1) == 0;
  char v4 = (*(uint64_t (**)(void, void, BOOL))(v0 + 536))(*(void *)(v0 + 616), *(void *)(v0 + 624), v3);
  if (v2)
  {
    char v5 = *(unsigned char *)(v0 + 89);
    uint64_t v6 = *(void *)(v0 + 600);
    uint64_t v7 = *(void *)(v0 + 592);
    uint64_t v8 = *(void *)(v0 + 584);
    uint64_t v9 = *(void *)(v0 + 576);
    sub_25E03E6F4(*(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 280), *(void *)(v0 + 288), *(unsigned char *)(v0 + 296));
    swift_release();
    swift_release();
    sub_25E03DEA4(v9, v8, v7, v6, v5);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)OUTLINED_FUNCTION_20_0();
    *(void *)(v0 + 608) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_25E0A5F44;
    OUTLINED_FUNCTION_87();
    __asm { BR              X0 }
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_79_1();
  sub_25E056BE8();
  uint64_t v17 = v16;
  *(void *)(v0 + 96) = 0xD000000000000023;
  *(void *)(v0 + 104) = 0x800000025E0E4EC0;
  *(unsigned char *)(v0 + 168) = 0;
  unint64_t v18 = *(void *)(v16 + 16);
  if (v18 >= *(void *)(v16 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v17 = v32;
  }
  uint64_t v19 = *(void *)(v0 + 616);
  *(void *)(v17 + 16) = v18 + 1;
  sub_25E07DE30(v0 + 96, v17 + 80 * v18 + 32);
  *(void *)(v0 + 392) = MEMORY[0x263F8D310];
  *(void *)(v0 + 400) = &protocol witness table for String;
  *(void *)(v0 + 368) = v19;
  *(void *)(v0 + 376) = v1;
  OUTLINED_FUNCTION_76_1();
  *(unsigned char *)(v0 + 248) = 1;
  unint64_t v21 = *(void *)(v17 + 16);
  unint64_t v20 = *(void *)(v17 + 24);
  sub_25E0DB3C0();
  if (v21 >= v20 >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v17 = v33;
  }
  *(void *)(v17 + 16) = v21 + 1;
  OUTLINED_FUNCTION_37_3(v17 + 80 * v21);
  __swift_destroy_boxed_opaque_existential_1(v0 + 368);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 59;
  *(void *)(v0 + 24) = 0xE100000000000000;
  *(unsigned char *)(v0 + 88) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v17 = v34;
  }
  unint64_t v22 = *(void *)(v17 + 16);
  if (v22 >= *(void *)(v17 + 24) >> 1)
  {
    OUTLINED_FUNCTION_38_2();
    uint64_t v17 = v35;
  }
  *(void *)(v17 + 16) = v22 + 1;
  sub_25E07DE30(v0 + 16, v17 + 80 * v22 + 32);
  *(void *)(v0 + 488) = v17;
  *(void *)(v0 + 496) = 0;
  *(void *)(v0 + 504) = 0;
  *(void *)(v0 + 512) = v15;
  uint64_t result = sub_25E0D6330();
  uint64_t v24 = *(void *)(v0 + 512);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v0 + 648) = v25;
  if (v25)
  {
    uint64_t v27 = *(void *)(v0 + 488);
    uint64_t v26 = *(void *)(v0 + 496);
    uint64_t v28 = *(void *)(v0 + 504);
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 504);
    if (!v26)
    {
      __break(1u);
      return result;
    }
    uint64_t v27 = *(void *)(v0 + 496);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = 0;
    uint64_t v24 = 0;
  }
  *(void *)(v0 + 680) = v24;
  *(void *)(v0 + 672) = v28;
  *(void *)(v0 + 664) = v26;
  *(void *)(v0 + 656) = v27;
  *(void *)(v0 + 448) = v27;
  *(void *)(v0 + 456) = v26;
  *(void *)(v0 + 464) = v28;
  *(void *)(v0 + 472) = v24;
  *(unsigned char *)(v0 + 480) = v25 != 0;
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v29;
  void *v29 = v0;
  v29[1] = sub_25E0A6584;
  OUTLINED_FUNCTION_87();
  return SQLDatabase.Transaction.execute(_:)(v30);
}

uint64_t sub_25E0A647C()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v0 + 520) = *(void *)(v0 + 640);
  sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0A650C()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_83_1();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A6584()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_2();
  *uint64_t v6 = v5;
  *(void *)(v3 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_51_3();
    OUTLINED_FUNCTION_19();
    return MEMORY[0x270FA2498](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_51_3();
    uint64_t v10 = (void *)OUTLINED_FUNCTION_20_0();
    *(void *)(v3 + 608) = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_25E0A5F44;
    return v12();
  }
}

uint64_t sub_25E0A66CC()
{
  return OUTLINED_FUNCTION_32();
}

uint64_t sub_25E0A66D4()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_83_1();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A674C()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_25E0A6784()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_18_10();
  v9(v8);
  swift_release();

  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_25E0A6834()
{
  OUTLINED_FUNCTION_25_1();
  uint64_t v1 = OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_7(v1);
  OUTLINED_FUNCTION_72_1();
  uint64_t v3 = v0 + v2;
  int v4 = *(_DWORD *)(v0 + v2);
  uint64_t v6 = *(void *)(v0 + v5);
  char v7 = *(unsigned char *)(v3 + 4);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_5(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_25E051320;
  uint64_t v11 = OUTLINED_FUNCTION_70_1();
  return sub_25E0A102C(v11, v12, v13, v14, v4, v7, v6);
}

uint64_t sub_25E0A6924()
{
  sub_25E0A9688(0, &qword_26A6D58F8, (uint64_t (*)(uint64_t))sub_25E0A8C64, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ActorBox);
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = MEMORY[0x263F8EE80];
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_25E0A69A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v8 = sub_25E0BB0AC(), (v9 & 1) != 0))
  {
    sub_25E0A7DFC(*(void *)(v7 + 56) + 8 * v8, (uint64_t)&v16, (void (*)(void))sub_25E074930);
    char v10 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    char v10 = 1;
  }
  char v17 = v10;
  sub_25E0A7DFC((uint64_t)&v16, (uint64_t)&v14, sub_25E0A8C30);
  if (v15)
  {
    sub_25E0A9630((uint64_t)&v14, sub_25E0A8C30);
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    sub_25E0A9630((uint64_t)&v14, (void (*)(void))sub_25E074930);
    if (Strong)
    {
LABEL_14:
      sub_25E0A9630((uint64_t)&v16, sub_25E0A8C30);
      return Strong;
    }
  }
  if (a4)
  {
    uint64_t v11 = swift_retain();
    uint64_t v12 = a4(v11);
    if (!v4)
    {
      uint64_t Strong = v12;
      if (v12)
      {
        swift_weakInit();
        char v15 = 0;
        sub_25E0DB3C0();
        sub_25E070ABC();
        sub_25E04E474((uint64_t)a4);
        goto LABEL_14;
      }
    }
    sub_25E0A9630((uint64_t)&v16, sub_25E0A8C30);
    sub_25E04E474((uint64_t)a4);
  }
  else
  {
    sub_25E0A9630((uint64_t)&v16, sub_25E0A8C30);
    return 0;
  }
  return Strong;
}

uint64_t sub_25E0A6BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25E0A96EC(0, &qword_26A6D58C8, MEMORY[0x263F8D310], MEMORY[0x263F8F590]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v18 - v9;
  sub_25E05D328();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_25E0DBA10();
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], v10, v7);
  sub_25E0DB3C0();
  swift_retain();
  sub_25E04C534();
  return swift_release();
}

uint64_t sub_25E0A6DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return MEMORY[0x270FA2498](sub_25E0A6DC8, 0, 0);
}

uint64_t sub_25E0A6DC8()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 16);
  *(void *)(v0 + 64) = v1;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25E0A6E3C, v1, 0);
}

uint64_t sub_25E0A6E3C()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[6];
  uint64_t v3 = (uint64_t *)(v0[8] + 112);
  swift_beginAccess();
  sub_25E0A6FF0(v3, v2, v1);
  v0[9] = 0;
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E0A6F10()
{
  OUTLINED_FUNCTION_12();
  sub_25E0A96EC(0, &qword_26A6D58C8, MEMORY[0x263F8D310], MEMORY[0x263F8F590]);
  sub_25E0DBA50();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E0A6F94()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0A6FF0(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v30 = a3;
  sub_25E0A96EC(0, &qword_26A6D58E0, MEMORY[0x263F8D310], MEMORY[0x263F8F568]);
  uint64_t v29 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v28 = (char *)&v25 - v7;
  if (a2)
  {
    uint64_t v8 = a2;
  }
  else
  {
    uint64_t v9 = sub_25E0DB3C0();
    uint64_t v8 = sub_25E0A8B2C(v9);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v8[2];
  if (v10)
  {
    uint64_t v27 = (void (**)(char *, uint64_t))(v6 + 8);
    sub_25E0DB3C0();
    uint64_t v25 = v8;
    uint64_t v11 = v8 + 5;
    do
    {
      uint64_t v12 = *a1;
      if (*(void *)(*a1 + 16))
      {
        uint64_t v14 = *(v11 - 1);
        uint64_t v13 = *v11;
        sub_25E0DB3C0();
        unint64_t v15 = sub_25E0BB0AC();
        if (v16)
        {
          sub_25E0A7DFC(*(void *)(v12 + 56) + 8 * v15, (uint64_t)&v32, (void (*)(void))sub_25E074930);
          sub_25E0A8FDC((uint64_t)&v32, (uint64_t)v34, (void (*)(void))sub_25E074930);
          uint64_t Strong = swift_weakLoadStrong();
          swift_release();
          if (!Strong)
          {
            sub_25E0DB3C0();
            sub_25E0DB3C0();
            unint64_t v18 = sub_25E0BB0AC();
            char v20 = v19;
            swift_bridgeObjectRelease();
            if (v20)
            {
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v31 = *a1;
              *a1 = 0x8000000000000000;
              sub_25E0A8C98(0, &qword_26A6D58E8, (uint64_t (*)(uint64_t))sub_25E074930, MEMORY[0x263F8DF18]);
              sub_25E0DC100();
              uint64_t v21 = v31;
              swift_bridgeObjectRelease();
              sub_25E0A8FDC(*(void *)(v21 + 56) + 8 * v18, (uint64_t)&v32, (void (*)(void))sub_25E074930);
              sub_25E074930();
              uint64_t v22 = MEMORY[0x263F8D310];
              sub_25E0DC110();
              *a1 = v21;
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v32 = 0;
              uint64_t v22 = MEMORY[0x263F8D310];
            }
            LOBYTE(v33) = (v20 & 1) == 0;
            swift_bridgeObjectRelease();
            sub_25E0A9630((uint64_t)&v32, sub_25E0A8C30);
            uint64_t v32 = v14;
            uint64_t v33 = v13;
            sub_25E0A96EC(0, &qword_26A6D58C8, v22, MEMORY[0x263F8F590]);
            sub_25E0DB3C0();
            uint64_t v23 = v28;
            sub_25E0DBA40();
            (*v27)(v23, v29);
          }
          sub_25E0A9630((uint64_t)v34, (void (*)(void))sub_25E074930);
        }
        swift_bridgeObjectRelease();
      }
      v11 += 2;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_25E0DB3C0();
    return swift_bridgeObjectRelease();
  }
}

unint64_t *sub_25E0A73C0(unint64_t *result, uint64_t a2, unint64_t a3)
{
  void (*v7)(uint64_t *__return_ptr, void *);
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;
  unsigned char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void v23[2];
  char v24;

  uint64_t v4 = result;
  unint64_t v5 = *v3;
  unint64_t v6 = v3[1];
  uint64_t v8 = v3[2];
  uint64_t v7 = (void (*)(uint64_t *__return_ptr, void *))v3[3];
  uint64_t v9 = v3[4];
  if (!a2)
  {
LABEL_10:
    a3 = 0;
    goto LABEL_15;
  }
  if (!a3)
  {
LABEL_15:
    *uint64_t v4 = v5;
    v4[1] = v6;
    v4[2] = v8;
    v4[3] = a3;
    v4[4] = (unint64_t)v7;
    v4[5] = v9;
    return (unint64_t *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = *(void *)(v8 + 16);
    if (v10)
    {
      char v20 = v6;
      uint64_t v21 = v5;
      uint64_t v12 = 0;
      uint64_t v13 = (unsigned char *)(v8 + 48);
      unint64_t v18 = *(void *)(v8 + 16);
      char v19 = a3;
      uint64_t v14 = a3 - 1;
      unint64_t v15 = v10 - 1;
      while (1)
      {
        char v16 = *((void *)v13 - 1);
        char v17 = *v13;
        v23[0] = *((void *)v13 - 2);
        v23[1] = v16;
        uint64_t v24 = v17;
        swift_retain();
        v7(&v22, v23);
        swift_release();
        *(void *)(a2 + 8 * v12) = v22;
        if (v14 == v12)
        {
          a3 = v19;
          goto LABEL_14;
        }
        if (v15 == v12) {
          break;
        }
        unint64_t v5 = *(void *)(v8 + 16);
        ++v12;
        v13 += 24;
        if (v12 >= v5)
        {
          __break(1u);
          goto LABEL_10;
        }
      }
      a3 = v18;
LABEL_14:
      unint64_t v6 = v20;
      unint64_t v5 = v21;
    }
    else
    {
      a3 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0A74D8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    id v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_25E0A76D4(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    id v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25E0A78D0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    id v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_25E0DB3C0();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_25E0DB3C0();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_25E0A7AD0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_5(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_25E060370;
  return v7(v1);
}

uint64_t sub_25E0A7BA0(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  sub_25E05D328();
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E0A7DFC(a1, (uint64_t)v16, (void (*)(void))sub_25E05D328);
  uint64_t v17 = sub_25E0DBA10();
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
  {
    sub_25E0A9630((uint64_t)v16, (void (*)(void))sub_25E05D328);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v19 = sub_25E0DBA00();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t result = v19;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t sub_25E0A7D24()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E0A7D5C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E060658;
  uint64_t v3 = OUTLINED_FUNCTION_94_0();
  return v4(v3);
}

uint64_t sub_25E0A7DFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_25E0A7E5C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_25E0A7F70(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_25E0400AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_25E0400AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_25E0DB3C0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

unint64_t sub_25E0A7F30()
{
  unint64_t result = qword_26A6D58B0;
  if (!qword_26A6D58B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_26A6D58B0);
  }
  return result;
}

uint64_t sub_25E0A7F70(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_25E0A80C8((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_25E0DBD50();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_25E0A81A0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_25E0DBF70();
    if (!v8)
    {
      uint64_t result = sub_25E0DC130();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_25E0A80C8(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_25E0A81A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_25E0A8238(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_25E0A8490(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_25E0A8490((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_25E0A8238(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_25E0DB650();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_25E0A83AC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_25E0DBE90();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_25E0DC1C0();
  __break(1u);
LABEL_14:
  uint64_t result = sub_25E0DC130();
  __break(1u);
  return result;
}

void *sub_25E0A83AC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_25E0A96EC(0, (unint64_t *)&qword_26A6D4990, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_25E0A8434(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_25E0DB6A0();
    OUTLINED_FUNCTION_61_2(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x2611CDB90](15, a1 >> 16);
    OUTLINED_FUNCTION_61_2(v3);
    return v4 | 8;
  }
}

char *sub_25E0A8490(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_25E0A96EC(0, (unint64_t *)&qword_26A6D4990, MEMORY[0x263F8E778], MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_25E0A8660(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_25E0A8588(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_25E0A8588(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_25E0DC1C0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_25E0A8660(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_25E0DC1C0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_25E0A86F0(uint64_t a1)
{
  return sub_25E0A6BC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25E0A86F8()
{
  sub_25E0A96EC(0, &qword_26A6D58C8, MEMORY[0x263F8D310], MEMORY[0x263F8F590]);
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 48) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_18_10();
  v9(v8);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_25E0A87C0()
{
  OUTLINED_FUNCTION_8_0();
  sub_25E0A96EC(0, &qword_26A6D58C8, MEMORY[0x263F8D310], MEMORY[0x263F8F590]);
  OUTLINED_FUNCTION_32_8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25E060658;
  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_26_5();
  return sub_25E0A6DA4(v4, v5, v6, v7, v8, v9);
}

void sub_25E0A88A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 > 0)
    {
      sub_25E0A96EC(0, &qword_26A6D49A0, (uint64_t)&unk_270AEE180, MEMORY[0x263F8E0F8]);
      uint64_t v7 = (void *)swift_allocObject();
      size_t v8 = _swift_stdlib_malloc_size(v7);
      id v7[2] = v5;
      v7[3] = 2 * ((uint64_t)(v8 - 32) / 88);
    }
    if (v4 != a3)
    {
      sub_25E03BB70();
      return;
    }
    goto LABEL_9;
  }
}

const void *sub_25E0A8988(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  sub_25E0A96EC(0, &qword_26A6D4A30, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = _swift_stdlib_malloc_size(v1);
  OUTLINED_FUNCTION_81_1((2 * ((uint64_t)(v2 - 32) / 8)) | 1);
  sub_25E0A74D8(v3, v4, v5, v6);
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_104_1();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

const void *sub_25E0A8A58(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  sub_25E0A9688(0, &qword_26A6D59A0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, MEMORY[0x263F8E0F8]);
  uint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = _swift_stdlib_malloc_size(v1);
  OUTLINED_FUNCTION_81_1(2 * ((uint64_t)(v2 - 32) / 8));
  sub_25E0A76D4(v3, v4, v5, v6);
  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_104_1();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

void *sub_25E0A8B2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_25E0A96EC(0, &qword_26A6D42F0, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  sqlite3_int64 v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  uint64_t v5 = sub_25E0A78D0((uint64_t)&v7, v3 + 4, v1, a1);
  sub_25E0DB3C0();
  sub_25E040118();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void sub_25E0A8C30(uint64_t a1)
{
}

void sub_25E0A8C64(uint64_t a1)
{
}

void sub_25E0A8C98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, MEMORY[0x263F8D310], v7, MEMORY[0x263F8D320]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_25E0A8D0C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25E0DAD20();
  if (!result || (uint64_t result = sub_25E0DAD50(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_25E0DAD40();
      sub_25E0DB280();
      sub_25E09D130(&qword_26A6D5930, MEMORY[0x263F047F8]);
      return sub_25E0DB240();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0A8DEC()
{
  return sub_25E0DB240();
}

uint64_t sub_25E0A8F14@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_25E0A69A0(a1, *a2, a2[1], a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void sub_25E0A8F50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25E0B3464(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
}

uint64_t sub_25E0A8F84(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25E0A96EC(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E0A8FDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_6_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_25E0A903C()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_6_1();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + ((v2 + 16) & ~v2));
  swift_release();
  uint64_t v4 = OUTLINED_FUNCTION_100_1();

  return MEMORY[0x270FA0238](v4, v5, v3);
}

uint64_t sub_25E0A90D4()
{
  uint64_t v1 = sub_25E0DAEA0();
  OUTLINED_FUNCTION_7(v1);
  OUTLINED_FUNCTION_72_1();
  return sub_25E0A0088(v0 + v2, *(_DWORD *)(v0 + v3), *(unsigned char *)(v0 + v3 + 4), *(void *)(v0 + v4));
}

uint64_t sub_25E0A9144@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E0A8F14(a1, *(uint64_t **)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), a2);
}

uint64_t sub_25E0A9164()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = ((v5 + 40) & ~v5) + *(void *)(v4 + 64);
  uint64_t v7 = v5 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v8 = OUTLINED_FUNCTION_18_10();
  v9(v8);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_25E0A9200()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v0 = OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_32_8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25E060658;
  uint64_t v4 = OUTLINED_FUNCTION_56_3();
  return sub_25E0A0850(v4, v5, v6, v7, v8);
}

uint64_t sub_25E0A92B4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E06BF20(a1, a2);
  }
  return a1;
}

uint64_t sub_25E0A92C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E06B99C(a1, a2);
  }
  return a1;
}

uint64_t sub_25E0A92DC()
{
  sub_25E0DAEA0();
  OUTLINED_FUNCTION_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = v5 | 7;
  unint64_t v7 = ((*(void *)(v4 + 64) + ((v5 + 32) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_18_10();
  v9(v8);

  return MEMORY[0x270FA0238](v0, v7, v6);
}

uint64_t sub_25E0A937C()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v0 = OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_7(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_25E060658;
  uint64_t v4 = OUTLINED_FUNCTION_56_3();
  return sub_25E0A3204(v4, v5, v6, v7, v8);
}

uint64_t sub_25E0A9454()
{
  OUTLINED_FUNCTION_17();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_25E060658;
  uint64_t v3 = OUTLINED_FUNCTION_94_0();
  return sub_25E0A34C4(v3, v4, v5);
}

void sub_25E0A94E8(uint64_t a1)
{
}

uint64_t sub_25E0A951C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v2 = v1;
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_5(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_25E051320;
  return sub_25E0C9870(v2, v3, v4, v5);
}

uint64_t sub_25E0A95C4()
{
  return sub_25E0CA158(v0[2], v0[3], v0[4]);
}

void sub_25E0A95D0()
{
  if (!qword_26A6D5980)
  {
    unint64_t v0 = sub_25E0DB990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5980);
    }
  }
}

uint64_t sub_25E0A9630(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_6_1();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_25E0A9688(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_25E0A96EC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return v0 + v1;
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return sub_25E07DE30(v2, v0 + 80 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_24_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return sub_25E07DE30(v2, v0 + 80 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return sub_25E07DE30(v2, v0 + 80 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  *(void *)(v0 + 16) = v3;
  return sub_25E07DE30(v2, v0 + 80 * v1 + 32);
}

uint64_t OUTLINED_FUNCTION_32_8(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_42_5()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_43_4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  a1[1] = 0xD000000000000025;
  a1[2] = (a2 - 32) | 0x8000000000000000;
  a1[3] = v2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_46_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + 168) + 120);
  uint64_t v5 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_25E0CA8B0((void *)(v4 + 16), v5, a1);
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[84];
  uint64_t v4 = v0[83];
  uint64_t v5 = v0[82];
  char v6 = v0[81] != 0;
  return sub_25E03DEA4(v5, v4, v3, v2, v6);
}

void OUTLINED_FUNCTION_55_4()
{
  JUMPOUT(0x2611CF770);
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_61_2(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return *(void *)(v0 + 368);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_71_1()
{
  return sub_25E0DB3C0();
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return sub_25E0DB630();
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return sub_25E03DF54(v0, v1);
}

void OUTLINED_FUNCTION_77_1(uint64_t a1@<X8>)
{
  *(void *)(v1 + 8) = (a1 - 32) | 0x8000000000000000;
  *(unsigned char *)(v1 + 72) = 0;
}

uint64_t OUTLINED_FUNCTION_78_1@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return 0;
}

void OUTLINED_FUNCTION_81_1(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_83_1()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 288);
  unsigned __int8 v7 = *(unsigned char *)(v0 + 296);
  sub_25E03E6F4(v2, v3, v4, v5, v6, v7);
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  return sub_25E0DAEA0();
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return sub_25E0DAEA0();
}

uint64_t OUTLINED_FUNCTION_91_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_25E05B9AC();
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_95_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_96_1(uint64_t result)
{
  *(void *)(v1 + 192) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return v0;
}

char *OUTLINED_FUNCTION_102_1@<X0>(int *a1@<X8>)
{
  return (char *)a1 + *a1;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return sub_25E040118();
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return sub_25E0DBE80();
}

uint64_t OUTLINED_FUNCTION_106_1()
{
  **(void **)(v0 + 64) = *(void *)(v0 + 112);
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_108_0()
{
  *(void *)(v0 + 64) = *(void *)(*(void *)(v0 + 32) + 16);
}

uint64_t OUTLINED_FUNCTION_110_0(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = v2;
  return swift_willThrow();
}

uint64_t sub_25E0A9D44(sqlite3 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25E0DB540();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1[3];
  v20[0] = v1[2];
  v20[1] = v10;
  sub_25E0DB3C0();
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v11 = sub_25E0DBD90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v13 = v2[4];
  if (v13 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v13 > 0x7FFFFFFF)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v14 = v2[5];
  if (v14) {
    int v15 = 2049;
  }
  else {
    int v15 = 1;
  }
  if (v14) {
    int v16 = 526337;
  }
  else {
    int v16 = 524289;
  }
  if ((v14 & 2) != 0) {
    int v17 = v16;
  }
  else {
    int v17 = v15;
  }
  if (v11) {
    unint64_t v18 = (const char *)(v11 + 32);
  }
  else {
    unint64_t v18 = 0;
  }
  swift_retain();
  function_uint64_t v2 = sqlite3_create_function_v2(a1, v18, v13, v17, v2, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_25E0AA44C, 0, 0, (void (__cdecl *)(void *))sub_25E0AA45C);
  swift_bridgeObjectRelease();
  return function_v2;
}

uint64_t SQLDatabase.ScalarFunctionOptions.rawValue.getter()
{
  return *(void *)v0;
}

uint64_t SQLDatabase.ScalarFunctionOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static SQLDatabase.ScalarFunctionOptions.deterministic.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static SQLDatabase.ScalarFunctionOptions.directOnly.getter(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25E0A9F00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return SQLDatabase.ScalarFunctionOptions.init(rawValue:)(*a1, a2);
}

void sub_25E0A9F0C(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25E0A9F14@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E0A9F20(*a1, *v2, a2);
}

uint64_t sub_25E0A9F20@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_25E0A9F2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E0A9F38(*a1, *v2, a2);
}

uint64_t sub_25E0A9F38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_25E0A9F44@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E0A9F50(*a1, *v2, a2);
}

uint64_t sub_25E0A9F50@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_25E0A9F5C(void *a1, uint64_t *a2)
{
  return sub_25E0A9F64(a1, *a2);
}

BOOL sub_25E0A9F64(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_25E0A9F90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E0A9F98(*a1, a2);
}

uint64_t sub_25E0A9F98@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & result;
  if (v3) {
    *v2 &= ~result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t sub_25E0A9FC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25E0A9FC8(*a1, a2);
}

uint64_t sub_25E0A9FC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  *v2 |= result;
  uint64_t v4 = v3 & result;
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v4 == 0;
  return result;
}

uint64_t sub_25E0A9FE8(uint64_t *a1)
{
  return sub_25E0A9FF0(*a1);
}

uint64_t sub_25E0A9FF0(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_25E0AA000(uint64_t *a1)
{
  return sub_25E0AA008(*a1);
}

uint64_t sub_25E0AA008(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_25E0AA018(uint64_t *a1)
{
  return sub_25E0AA020(*a1);
}

uint64_t sub_25E0AA020(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_25E0AA030@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25E0AA03C(*a1, *v2, a2);
}

uint64_t sub_25E0AA03C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

BOOL sub_25E0AA048(uint64_t *a1)
{
  return sub_25E0AA054(*a1, *v1);
}

BOOL sub_25E0AA054(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_25E0AA060(uint64_t *a1)
{
  return sub_25E0AA06C(*a1, *v1);
}

BOOL sub_25E0AA06C(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_25E0AA078(uint64_t *a1)
{
  return sub_25E0AA084(*a1, *v1);
}

BOOL sub_25E0AA084(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_25E0AA090()
{
  return sub_25E0AA098(*v0);
}

BOOL sub_25E0AA098(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_25E0AA0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

uint64_t sub_25E0AA0BC(uint64_t *a1)
{
  return sub_25E0AA0C4(*a1);
}

uint64_t sub_25E0AA0C4(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t sub_25E0AA0D4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = SQLDatabase.ScalarFunctionOptions.init(rawValue:)(*a1, (void *)a2);
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_25E0AA100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SQLDatabase.ScalarFunctionOptions.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25E0AA12C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void sub_25E0AA184(sqlite3_context *a1, int a2, uint64_t *a3)
{
  void (**v8)(void *__return_ptr, uint64_t, void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  sqlite3_context *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  uint64_t v6 = sub_25E0DB540();
  MEMORY[0x270FA5388](v6);
  if (!a1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = sqlite3_user_data(a1);
  if (v7)
  {
    uint64_t v8 = (void (**)(void *__return_ptr, uint64_t, void))v7;
    uint64_t v9 = swift_retain();
    if ((a2 & 0x80000000) == 0)
    {
      uint64_t v10 = MEMORY[0x263F8EE78];
      if (!a2)
      {
LABEL_13:
        v8[6](&v19, v9, v10);
        swift_bridgeObjectRelease();
        int v16 = v20;
        int v17 = v21;
        __swift_project_boxed_opaque_existential_1(&v19, v20);
        (*(void (**)(sqlite3_context *, uint64_t, uint64_t))(v17 + 16))(a1, v16, v17);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
        return;
      }
      unint64_t v18 = a1;
      uint64_t v11 = a2;
      unsigned __int8 v19 = MEMORY[0x263F8EE78];
      sub_25E03CD7C(0, a2, 0);
      uint64_t v10 = v19;
      int64_t v12 = a3;
      while (v11)
      {
        if (!a3) {
          goto LABEL_16;
        }
        uint64_t v13 = *v12;
        if (!*v12) {
          goto LABEL_17;
        }
        unsigned __int8 v19 = v10;
        int v15 = *(void *)(v10 + 16);
        uint64_t v14 = *(void *)(v10 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_25E03CD7C(v14 > 1, v15 + 1, 1);
          uint64_t v10 = v19;
        }
        *(void *)(v10 + 16) = v15 + 1;
        *(void *)(v10 + 8 * v15 + 32) = v13;
        ++v12;
        if (!--v11)
        {
          a1 = v18;
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_25E0AA450(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25E0AA460()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_25E0AA488()
{
  sub_25E0AA460();

  return swift_deallocClassInstance();
}

uint64_t SQLDatabase.registerFunction(named:argumentCount:options:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  v7[9] = a6;
  v7[10] = v6;
  v7[7] = a3;
  v7[8] = a5;
  v7[5] = a1;
  v7[6] = a2;
  v7[11] = *a4;
  return OUTLINED_FUNCTION_1_16((uint64_t)sub_25E0AA4E4);
}

uint64_t sub_25E0AA4E4()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = v3;
  _s14ScalarFunctionCMa();
  uint64_t v9 = (void *)swift_allocObject();
  v0[12] = v9;
  void v9[2] = v7;
  v9[3] = v5;
  void v9[4] = v6;
  v9[5] = v1;
  void v9[6] = sub_25E0AA9A0;
  v9[7] = v8;
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  v0[13] = v12;
  if (v12)
  {
    swift_retain();
    sub_25E0DB3C0();
    swift_retain();
    swift_retain();
    uint64_t v9 = sub_25E0AA5F4;
    uint64_t v10 = v12;
    uint64_t v11 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E0AA5F4()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E80C(v0[13], v0[12]);
  v0[14] = 0;
  uint64_t v1 = v0[10];
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0AA690, v1, 0);
}

uint64_t sub_25E0AA690()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 56);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB3C0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_11();
  swift_retain();
  sub_25E0AC08C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E0AA7D4()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0AA838(void *a1, uint64_t a2, void (*a3)(void, void))
{
  int64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v3)
  {
    uint64_t v12 = a3;
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_25E03CC74(0, v3, 0);
    uint64_t v4 = v13;
    uint64_t v6 = (const sqlite3_value **)(a2 + 32);
    type metadata accessor for SQLDynamicValue.Box();
    do
    {
      uint64_t v7 = *v6;
      swift_allocObject();
      a1 = sub_25E04024C(v7);
      uint64_t v8 = a1;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        a1 = sub_25E03CC74((char *)(v9 > 1), v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      *(void *)(v13 + 8 * v10 + 32) = v8;
      ++v6;
      --v3;
    }
    while (v3);
    a3 = v12;
  }
  a3(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E0AA968()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E0AA9A0(void *a1, uint64_t a2)
{
  return sub_25E0AA838(a1, a2, *(void (**)(void, void))(v2 + 16));
}

uint64_t _s14ScalarFunctionCMa()
{
  return self;
}

uint64_t SQLDatabase.registerFunction<each A>(named:options:_:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[15] = a8;
  v9[16] = v8;
  v9[13] = a6;
  v9[14] = a7;
  v9[11] = a4;
  v9[12] = a5;
  v9[9] = a1;
  v9[10] = a2;
  v9[17] = *a3;
  return OUTLINED_FUNCTION_1_16((uint64_t)sub_25E0AAA0C);
}

uint64_t sub_25E0AAA0C()
{
  *(void *)(v0 + 64) = 0;
  if (*(void *)(v0 + 104))
  {
    uint64_t v1 = 0;
    unint64_t v2 = *(void *)(v0 + 112) & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      uint64_t v3 = *(void *)(v0 + 104);
      sub_25E0AAF88(*(void *)(v2 + 8 * v1++), (void *)(v0 + 64));
    }
    while (v1 != v3);
    uint64_t v4 = *(void *)(v0 + 104);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  long long v15 = *(_OWORD *)(v0 + 88);
  long long v16 = *(_OWORD *)(v0 + 72);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = swift_allocateMetadataPack();
  *(void *)(v8 + 32) = swift_allocateWitnessTablePack();
  *(_OWORD *)(v8 + 40) = v15;
  _s14ScalarFunctionCMa();
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 144) = v9;
  *(_OWORD *)(v9 + 16) = v16;
  *(void *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = sub_25E0ABEF0;
  *(void *)(v9 + 56) = v8;
  uint64_t v12 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  *(void *)(v0 + 152) = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  uint64_t v13 = *(void *)(v5 + v12);
  *(void *)(v0 + 160) = v13;
  if (v13)
  {
    sub_25E0DB3C0();
    swift_retain();
    swift_retain();
    uint64_t v9 = (uint64_t)sub_25E0AABC4;
    uint64_t v10 = v13;
    uint64_t v11 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E0AABC4()
{
  OUTLINED_FUNCTION_17();
  sub_25E04FE68();
  *(void *)(v0 + 168) = 0;
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0AAC60, v1, 0);
}

uint64_t sub_25E0AAC60()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = *(void *)(v0[16] + v0[19]);
  v0[22] = v4;
  if (v4)
  {
    swift_retain();
    swift_retain();
    uint64_t v1 = OUTLINED_FUNCTION_52();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0AACE0()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[21];
  sub_25E08E80C(v0[22], v0[18]);
  v0[23] = v1;
  if (v1)
  {
    uint64_t v2 = v0[16];
    uint64_t v3 = sub_25E0AAF24;
  }
  else
  {
    uint64_t v4 = v0[16];
    swift_release();
    uint64_t v3 = sub_25E0AAD7C;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_25E0AAD7C()
{
  *(void *)(v0 + 40) = *(void *)(v0 + 64);
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB3C0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_11();
  swift_retain();
  sub_25E0AC08C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E0AAEC0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0AAF24()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0AAF88(uint64_t a1, void *a2)
{
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*a2, 1)) {
    __break(1u);
  }
  else {
    ++*a2;
  }
  return result;
}

uint64_t sub_25E0AAFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v36 = a6;
  uint64_t v37 = a7;
  uint64_t v35 = a2;
  uint64_t v10 = (uint64_t *)(a6 & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v11 = 8 * a5;
  uint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v30 = a8;
  if (a5 == 1)
  {
    uint64_t TupleTypeMetadata = *v10;
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if (a5)
    {
      uint64_t v13 = v10;
      uint64_t v14 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v15 = a5;
      do
      {
        uint64_t v16 = *v13++;
        *v14++ = v16;
        --v15;
      }
      while (v15);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  uint64_t v34 = &v28;
  uint64_t v28 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v17 = MEMORY[0x270FA5388](TupleTypeMetadata);
  unsigned __int8 v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = &v28;
  uint64_t v38 = 0;
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = result;
  if (a5)
  {
    uint64_t v22 = 0;
    unint64_t v23 = v37 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v24 = (_DWORD *)(result + 32);
    while (1)
    {
      int v25 = a5 == 1 ? 0 : *v24;
      uint64_t v26 = &v19[v25];
      uint64_t result = sub_25E0AB288(v10[v22], &v38, v35, a5, v36, v10[v22], v37, *(void *)(v23 + 8 * v22));
      if (v8) {
        break;
      }
      *(void *)&v21[8 * v22++] = v26;
      v24 += 4;
      if (a5 == v22) {
        goto LABEL_14;
      }
    }
    if (v22)
    {
      uint64_t v27 = v21 - 8;
      do
      {
        uint64_t result = (*(uint64_t (**)(void))(*(void *)(v10[v22 - 1] - 8) + 8))(*(void *)&v27[8 * v22]);
        --v22;
      }
      while (v22);
    }
  }
  else
  {
LABEL_14:
    v32(result, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v19, v29);
  }
  return result;
}

uint64_t sub_25E0AB288(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = swift_beginAccess();
  unint64_t v14 = *a2;
  if (*a2 < 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= *(void *)(a3 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(void, uint64_t, uint64_t))(a8 + 16))(*(void *)(a3 + 8 * v14 + 32), a6, a8);
  if (v8)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v15 = *a2 + 1;
    if (!__OFADD__(*a2, 1)) {
      goto LABEL_8;
    }
    __break(1u);
  }
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *a2 + 1;
  if (!__OFADD__(*a2, 1))
  {
LABEL_8:
    *a2 = v15;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t SQLDatabase.unregisterFunction(named:argumentCount:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return OUTLINED_FUNCTION_1_16((uint64_t)sub_25E0AB3A0);
}

uint64_t sub_25E0AB3A0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = v0[8];
  uint64_t v5 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  v0[9] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
  uint64_t v6 = *(void *)(v4 + v5);
  v0[10] = v6;
  if (v6)
  {
    swift_retain();
    uint64_t v1 = OUTLINED_FUNCTION_52();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0AB424()
{
  OUTLINED_FUNCTION_17();
  sub_25E04FE68();
  *(void *)(v0 + 88) = 0;
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0AB4C0, v1, 0);
}

uint64_t sub_25E0AB4C0()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = *(void *)(v0[8] + v0[9]);
  v0[12] = v4;
  if (v4)
  {
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v1 = OUTLINED_FUNCTION_52();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0AB53C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[11];
  sub_25E08E838(v0[12], v0[5], v0[6], v0[7]);
  v0[13] = v1;
  if (v1)
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = sub_25E0AB78C;
  }
  else
  {
    uint64_t v4 = v0[8];
    swift_release();
    uint64_t v3 = sub_25E0AB5DC;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_25E0AB5DC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  v0[2] = v0[7];
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB3C0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_25E0ABCC0(v2, v1, (void (*)(void))sub_25E0AC848, v3, (void (*)(uint64_t))_s14ScalarFunctionCMa);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v4();
}

uint64_t sub_25E0AB734()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0AB78C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0AB7E4(sqlite3 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25E0DB540();
  OUTLINED_FUNCTION_1();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = a2;
  v18[1] = a3;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v14 = sub_25E0DBD90();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (v14) {
    uint64_t v16 = (const char *)(v14 + 32);
  }
  else {
    uint64_t v16 = 0;
  }
  function_uint64_t v2 = sqlite3_create_function_v2(a1, v16, a4, 0, 0, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  return function_v2;
}

void sub_25E0AB930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_14_9();
  uint64_t v11 = v10;
  sub_25E0DB3C0();
  sub_25E0BB110();
  char v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_5_12();
    sub_25E0AC8DC();
    OUTLINED_FUNCTION_13_8();
    sub_25E0DC100();
    swift_bridgeObjectRelease();
    _s9StatementCMa();
    sub_25E0511B8();
    sub_25E0DC110();
    *uint64_t v11 = a10;
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_9_15();
}

void sub_25E0ABA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_14_9();
  uint64_t v11 = v10;
  char v13 = v12;
  sub_25E0DB3C0();
  unint64_t v14 = sub_25E0BB0AC();
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_5_12();
    sub_25E0AC87C();
    OUTLINED_FUNCTION_13_8();
    sub_25E0DC100();
    swift_bridgeObjectRelease();
    sub_25E040108((_OWORD *)(*(void *)(a10 + 56) + 32 * v14), v13);
    sub_25E0DC110();
    *uint64_t v11 = a10;
    OUTLINED_FUNCTION_9_15();
    swift_bridgeObjectRelease();
  }
  else
  {
    *char v13 = 0u;
    v13[1] = 0u;
    OUTLINED_FUNCTION_9_15();
  }
}

uint64_t sub_25E0ABB3C@<X0>(uint64_t a1@<X8>)
{
  sub_25E0DB3C0();
  unint64_t v3 = sub_25E0BB0AC();
  char v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    sub_25E0AC11C(0, &qword_26A6D58E8, 255, (uint64_t (*)(uint64_t))sub_25E074930, MEMORY[0x263F8DF18]);
    OUTLINED_FUNCTION_13_8();
    sub_25E0DC100();
    swift_bridgeObjectRelease();
    sub_25E074998(*(void *)(v7 + 56) + 8 * v3, a1);
    sub_25E074930();
    sub_25E0DC110();
    *uint64_t v1 = v7;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a1 = 0;
  }
  *(unsigned char *)(a1 + 8) = (v5 & 1) == 0;
  return result;
}

uint64_t sub_25E0ABC90(uint64_t a1, uint64_t a2)
{
  return sub_25E0ABCC0(a1, a2, sub_25E0AC810, 0, (void (*)(uint64_t))_s13TableFunctionCMa);
}

uint64_t sub_25E0ABCC0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9 = v5;
  sub_25E0DB3C0();
  unint64_t v10 = sub_25E0BB0AC();
  char v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_5_12();
  a3(0);
  OUTLINED_FUNCTION_13_8();
  sub_25E0DC100();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(*(void *)(v15 + 56) + 8 * v10);
  a5(a4);
  sub_25E0DC110();
  *uint64_t v9 = v15;
  swift_bridgeObjectRelease();
  return v13;
}

#error "25E0ABDF8: call analysis failed (funcsize=19)"

#error "25E0ABE44: call analysis failed (funcsize=19)"

#error "25E0ABE90: call analysis failed (funcsize=19)"

uint64_t sub_25E0ABEB8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_25E0ABEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_25E0AAFD8(a1, a2, *(void (**)(uint64_t, char *))(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

unint64_t sub_25E0ABF18()
{
  unint64_t result = qword_26A6D59C0;
  if (!qword_26A6D59C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D59C0);
  }
  return result;
}

unint64_t sub_25E0ABF68()
{
  unint64_t result = qword_26A6D59C8;
  if (!qword_26A6D59C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D59C8);
  }
  return result;
}

unint64_t sub_25E0ABFB8()
{
  unint64_t result = qword_26A6D59D0;
  if (!qword_26A6D59D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D59D0);
  }
  return result;
}

unint64_t sub_25E0AC008()
{
  unint64_t result = qword_26A6D59D8;
  if (!qword_26A6D59D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D59D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLFunctionContext()
{
  return &type metadata for SQLFunctionContext;
}

ValueMetadata *type metadata accessor for SQLDatabase.ScalarFunctionOptions()
{
  return &type metadata for SQLDatabase.ScalarFunctionOptions;
}

uint64_t sub_25E0AC074()
{
  return sub_25E0AC08C();
}

uint64_t sub_25E0AC08C()
{
  OUTLINED_FUNCTION_14_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  sub_25E0AC554(v8, v6, v4, isUniquelyReferenced_nonNull_native, v2);
  uint64_t *v0 = v12;
  OUTLINED_FUNCTION_9_15();
  return swift_bridgeObjectRelease();
}

void sub_25E0AC11C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, MEMORY[0x263F8D310], v8, MEMORY[0x263F8D320]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_25E0AC190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25E0BB110();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25E0AC8DC();
  if ((sub_25E0DC100() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25E0BB110();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_25E0DC430();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t result = swift_release();
    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_25E0AC68C(v11, a2, a3, a1, v15);
    return sub_25E0DB3C0();
  }
  return result;
}

_OWORD *sub_25E0AC2B4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25E0BB0AC();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25E0AC87C();
  if ((sub_25E0DC100() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25E0BB0AC();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)sub_25E0DC430();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_25E040108(a1, v16);
  }
  else
  {
    sub_25E0AC6D4(v11, a2, a3, a1, v15);
    return (_OWORD *)sub_25E0DB3C0();
  }
}

uint64_t sub_25E0AC3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_25E0BB0AC();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  sub_25E0AC11C(0, &qword_26A6D58E8, 255, (uint64_t (*)(uint64_t))sub_25E074930, MEMORY[0x263F8DF18]);
  if ((sub_25E0DC100() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_25E0BB0AC();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_25E0DC430();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7] + 8 * v11;
    return sub_25E0AC7AC(a1, v16);
  }
  else
  {
    sub_25E0AC740(v11, a2, a3, a1, v15);
    return sub_25E0DB3C0();
  }
}

uint64_t sub_25E0AC554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v7 = (void **)v5;
  unint64_t v11 = (void *)*v5;
  unint64_t v12 = sub_25E0BB0AC();
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  a5(0);
  if ((sub_25E0DC100() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_25E0BB0AC();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    uint64_t result = sub_25E0DC430();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v7;
  if (v15)
  {
    uint64_t v19 = v18[7];
    uint64_t result = swift_release();
    *(void *)(v19 + 8 * v14) = a1;
  }
  else
  {
    sub_25E0AC68C(v14, a2, a3, a1, v18);
    return sub_25E0DB3C0();
  }
  return result;
}

unint64_t sub_25E0AC68C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

_OWORD *sub_25E0AC6D4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25E040108(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25E0AC740(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_25E074998(a4, a5[7] + 8 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_25E0AC7AC(uint64_t a1, uint64_t a2)
{
  sub_25E074930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_25E0AC810(uint64_t a1)
{
}

void sub_25E0AC848(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_25E0AC87C()
{
  if (!qword_26B384A00)
  {
    unint64_t v0 = sub_25E0DC120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B384A00);
    }
  }
}

void sub_25E0AC8DC()
{
  if (!qword_26A6D59F0)
  {
    _s9StatementCMa();
    sub_25E0511B8();
    unint64_t v0 = sub_25E0DC120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D59F0);
    }
  }
}

void sub_25E0AC958()
{
}

void static UnknownKeyCodable._decodeUnknownKeys(from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v28 = v7;
  swift_getAssociatedTypeWitness();
  uint64_t v25 = v4;
  uint64_t v26 = v2;
  swift_getAssociatedConformanceWitness();
  type metadata accessor for UnknownKeys();
  swift_getWitnessTable();
  uint64_t v8 = sub_25E0DC270();
  uint64_t v27 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v23 - v12;
  OUTLINED_FUNCTION_0_3();
  uint64_t v24 = v14;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v23 - v16;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_25E0DC580();
  if (v0)
  {
    MEMORY[0x2611CF510](v0);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v27);
    uint64_t v18 = 0;
    char v19 = 2;
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v8);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v17, v13, v8);
    uint64_t v18 = sub_25E0AD010();
    uint64_t v21 = OUTLINED_FUNCTION_12_11();
    v22(v21);
    char v19 = 0;
  }
  uint64_t v20 = v28;
  uint64_t *v28 = v18;
  *((unsigned char *)v20 + 8) = v19;
  OUTLINED_FUNCTION_4_1();
}

uint64_t type metadata accessor for UnknownKeys()
{
  return __swift_instantiateGenericMetadata();
}

void sub_25E0ACBEC()
{
}

void UnknownKeyCodable._encode(to:with:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v34 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for UnknownKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_25E0DC2B0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v31 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v42 = *v2;
  int v10 = *((unsigned __int8 *)v2 + 8);
  sub_25E0DB430();
  if (v0 || (uint64_t v33 = v5, v34 = v9, v10))
  {
LABEL_29:
    OUTLINED_FUNCTION_4_1();
    return;
  }
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_25E0DB3C0();
  sub_25E0DC5B0();
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(v42 + 64);
  uint64_t v30 = v42 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v38;
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  int64_t v29 = v16 - 1;
  if ((v14 & v12) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  unint64_t v18 = v17 | (v11 << 6);
LABEL_7:
  uint64_t v19 = *(void *)(v42 + 56);
  uint64_t v20 = (void *)(*(void *)(v42 + 48) + 16 * v18);
  uint64_t v21 = v20[1];
  *(void *)&long long v37 = *v20;
  *((void *)&v37 + 1) = v21;
  sub_25E0AD284(v19 + 48 * v18, (uint64_t)v32);
  sub_25E0DB3C0();
  while (1)
  {
    swift_getTupleTypeMetadata2();
    sub_25E0DBCF0();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13_9();
    v24();
    uint64_t v25 = v40;
    if (!v40)
    {
      swift_release();
      OUTLINED_FUNCTION_14_4();
      v28();
      goto LABEL_29;
    }
    uint64_t v26 = v39;
    sub_25E0AD2BC(&v41, &v37);
    uint64_t v35 = v26;
    uint64_t v36 = v25;
    sub_25E0AD2D4();
    sub_25E0DC290();
    sub_25E0AD320((uint64_t)&v37);
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 < v16)
    {
      unint64_t v23 = *(void *)(v30 + 8 * v22);
      if (v23) {
        goto LABEL_11;
      }
      v11 += 2;
      if (v22 + 1 >= v16)
      {
        int64_t v11 = v22;
        goto LABEL_16;
      }
      unint64_t v23 = *(void *)(v30 + 8 * v11);
      if (v23)
      {
        ++v22;
LABEL_11:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v18 = __clz(__rbit64(v23)) + (v22 << 6);
        int64_t v11 = v22;
        goto LABEL_7;
      }
      int64_t v27 = v22 + 2;
      if (v22 + 2 < v16) {
        break;
      }
    }
LABEL_16:
    unint64_t v15 = 0;
    long long v37 = 0u;
    memset(v38, 0, 48);
  }
  unint64_t v23 = *(void *)(v30 + 8 * v27);
  if (v23)
  {
    v22 += 2;
    goto LABEL_11;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v16)
    {
      int64_t v11 = v29;
      goto LABEL_16;
    }
    unint64_t v23 = *(void *)(v30 + 8 * v22);
    ++v27;
    if (v23) {
      goto LABEL_11;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_25E0AD010()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v1 = type metadata accessor for UnknownKeys();
  swift_getWitnessTable();
  uint64_t v2 = (ValueMetadata *)sub_25E0DB350();
  uint64_t v8 = v2;
  swift_getWitnessTable();
  OUTLINED_FUNCTION_11_11();
  sub_25E0DC270();
  uint64_t v3 = sub_25E0DC260();
  uint64_t v7 = sub_25E0DB840();
  if (v7 == MEMORY[0x2611CDE30](v3, v1))
  {
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  else
  {
    uint64_t v2 = &type metadata for AnyCodable;
    while (1)
    {
      char v4 = sub_25E0DB8E0();
      sub_25E0DB880();
      if ((v4 & 1) == 0) {
        break;
      }
      sub_25E0DB3C0();
      sub_25E0DB3C0();
      MEMORY[0x2611CDE40](&v7, v3, v1);
      swift_bridgeObjectRelease();
      sub_25E0AE498();
      sub_25E0DC240();
      if (v0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v2;
      }
      OUTLINED_FUNCTION_11_11();
      sub_25E0DB400();
      sub_25E0DB420();
      uint64_t v5 = v7;
      if (v5 == MEMORY[0x2611CDE30](v3, v1))
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v8;
      }
    }
    uint64_t result = sub_25E0DBF00();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0AD284(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_25E0AD2BC(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_25E0AD2D4()
{
  unint64_t result = qword_26A6D59F8;
  if (!qword_26A6D59F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D59F8);
  }
  return result;
}

uint64_t sub_25E0AD320(uint64_t a1)
{
  return a1;
}

uint64_t static Optional<A>._decodeUnknownKeys(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void Optional<A>._encode(to:with:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v1 = v0;
  long long v3 = v2;
  uint64_t v5 = *(void *)(v4 + 16);
  OUTLINED_FUNCTION_1_5();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_5();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v14;
  char v16 = *((unsigned char *)v14 + 8);
  (*(void (**)(char *, uint64_t))(v17 + 16))(v13, v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v5) == 1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_25E0DC5A0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v20, v22);
    OUTLINED_FUNCTION_15_9();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v5);
    uint64_t v20 = v15;
    char v21 = v16;
    (*(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v1 + 48))(v3, &v20, v5, v1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  }
  OUTLINED_FUNCTION_4_1();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_25E0AD5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Optional<A>._decodeUnknownKeys(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

void sub_25E0AD5C0()
{
}

void static Array<A>._decodeUnknownKeys(from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v8 = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for UnknownKeys();
  swift_getWitnessTable();
  sub_25E0DC270();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v4);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25E0DC560();
  if (v0)
  {
    MEMORY[0x2611CF510](v0);
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_25E0AE624((uint64_t)v9, &qword_26A6D5A00, (void (*)(uint64_t))sub_25E0AD8DC);
    *(void *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 8) = 2;
  }
  else
  {
    sub_25E03DF3C(v9, (uint64_t)v11);
    swift_getWitnessTable();
    sub_25E0DB400();
    *(void *)&v9[0] = sub_25E0DB360();
    __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_25E0DC310();
    if ((v5 & 1) == 0)
    {
      sub_25E0DB940();
      sub_25E0DB890();
    }
    while ((OUTLINED_FUNCTION_8_15() & 1) == 0)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
      sub_25E0DC300();
      sub_25E0AD010();
      sub_25E0DB940();
      sub_25E0DB900();
      uint64_t v6 = OUTLINED_FUNCTION_10_12();
      v7(v6);
    }
    *(void *)uint64_t v8 = *(void *)&v9[0];
    *(unsigned char *)(v8 + 8) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  OUTLINED_FUNCTION_4_1();
}

unint64_t sub_25E0AD8DC()
{
  unint64_t result = qword_26A6D5A08;
  if (!qword_26A6D5A08)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D5A08);
  }
  return result;
}

void Array<A>._encode(to:with:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  swift_getAssociatedTypeWitness();
  uint64_t v63 = v2;
  swift_getAssociatedConformanceWitness();
  uint64_t v11 = type metadata accessor for UnknownKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_11_11();
  uint64_t v60 = v12;
  uint64_t v71 = sub_25E0DC2B0();
  OUTLINED_FUNCTION_0_3();
  int64_t v68 = v13;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_0_3();
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v66 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v72 = v11;
  uint64_t v18 = sub_25E0DB400();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_25E0DBCF0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v20);
  uint64_t v64 = (char *)&v53 - v21;
  if (*((unsigned char *)v8 + 8) != 1) {
    goto LABEL_39;
  }
  uint64_t v22 = *v8;
  sub_25E0DB3C0();
  uint64_t v70 = v6;
  uint64_t v23 = MEMORY[0x2611CDE10](v6, v4);
  if (v23 != MEMORY[0x2611CDE10](v22, v18)) {
    goto LABEL_38;
  }
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_25E0DC590();
  id v77 = v70;
  *(void *)&long long v81 = v22;
  uint64_t v65 = v4;
  uint64_t v24 = sub_25E0DB940();
  OUTLINED_FUNCTION_11_11();
  uint64_t v25 = sub_25E0DB940();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = swift_getWitnessTable();
  sub_25E0DC420();
  uint64_t v28 = WitnessTable;
  swift_bridgeObjectRelease();
  long long v81 = v75;
  id v77 = (long long *)v24;
  uint64_t v78 = v25;
  uint64_t v79 = WitnessTable;
  uint64_t v80 = v27;
  sub_25E0DBEF0();
  sub_25E0DBEC0();
  uint64_t v29 = v27;
  uint64_t v69 = v76;
  uint64_t v70 = (long long *)&v79;
  uint64_t v58 = TupleTypeMetadata2;
  int64_t v59 = v68 + 8;
  uint64_t v61 = v67 + 8;
  uint64_t v62 = v67 + 32;
  uint64_t v56 = v25;
  uint64_t v57 = v24;
  uint64_t v55 = WitnessTable;
LABEL_4:
  id v77 = (long long *)v24;
  uint64_t v78 = v25;
  uint64_t v79 = v28;
  uint64_t v80 = v29;
  uint64_t v30 = v29;
  sub_25E0DBEE0();
  uint64_t v31 = (uint64_t)v64;
  sub_25E0DBED0();
  if (__swift_getEnumTagSinglePayload(v31, 1, TupleTypeMetadata2) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    OUTLINED_FUNCTION_4_1();
    return;
  }
  uint64_t v32 = *(void *)(v31 + *(int *)(TupleTypeMetadata2 + 48));
  OUTLINED_FUNCTION_13_9();
  v33();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v83, v83[3]);
  sub_25E0DC330();
  sub_25E0DB430();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_4();
    v52();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
    goto LABEL_33;
  }
  __swift_project_boxed_opaque_existential_1(&v81, v82);
  sub_25E0DC5B0();
  int64_t v34 = 0;
  uint64_t v35 = *(void *)(v32 + 64);
  uint64_t v67 = v32 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v32 + 32);
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  else {
    uint64_t v37 = -1;
  }
  unint64_t v38 = v37 & v35;
  int64_t v68 = (unint64_t)(v36 + 63) >> 6;
  int64_t v54 = v68 - 1;
  if ((v37 & v35) != 0)
  {
LABEL_10:
    unint64_t v39 = __clz(__rbit64(v38));
    v38 &= v38 - 1;
    unint64_t v40 = v39 | (v34 << 6);
LABEL_11:
    uint64_t v41 = *(void *)(v32 + 56);
    uint64_t v42 = (void *)(*(void *)(v32 + 48) + 16 * v40);
    uint64_t v43 = v42[1];
    *(void *)&long long v75 = *v42;
    *((void *)&v75 + 1) = v43;
    sub_25E0AD284(v41 + 48 * v40, (uint64_t)v69);
    sub_25E0DB3C0();
    uint64_t v29 = v30;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v44 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v29 = v30;
    if (v44 < v68)
    {
      unint64_t v45 = *(void *)(v67 + 8 * v44);
      if (v45) {
        goto LABEL_15;
      }
      v34 += 2;
      if (v44 + 1 >= v68)
      {
        int64_t v34 = v44;
        goto LABEL_20;
      }
      unint64_t v45 = *(void *)(v67 + 8 * v34);
      if (v45)
      {
        ++v44;
LABEL_15:
        unint64_t v38 = (v45 - 1) & v45;
        unint64_t v40 = __clz(__rbit64(v45)) + (v44 << 6);
        int64_t v34 = v44;
        goto LABEL_11;
      }
      int64_t v49 = v44 + 2;
      if (v44 + 2 < v68) {
        break;
      }
    }
LABEL_20:
    unint64_t v38 = 0;
    long long v75 = 0u;
    memset(v76, 0, sizeof(v76));
LABEL_21:
    swift_getTupleTypeMetadata2();
    sub_25E0DBCF0();
    OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13_9();
    v46();
    uint64_t v47 = v78;
    if (!v78)
    {
      swift_release();
      OUTLINED_FUNCTION_14_4();
      v50();
      OUTLINED_FUNCTION_14_4();
      v51();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v81);
      uint64_t v24 = v57;
      TupleTypeMetadata2 = v58;
      uint64_t v28 = v55;
      uint64_t v25 = v56;
      goto LABEL_4;
    }
    id v48 = v77;
    sub_25E0AD2BC(v70, &v75);
    uint64_t v73 = v48;
    uint64_t v74 = v47;
    sub_25E0AD2D4();
    sub_25E0DC290();
    sub_25E0AD320((uint64_t)&v75);
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_10;
    }
  }
  unint64_t v45 = *(void *)(v67 + 8 * v49);
  if (v45)
  {
    v44 += 2;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v44 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v44 >= v68)
    {
      int64_t v34 = v54;
      goto LABEL_20;
    }
    unint64_t v45 = *(void *)(v67 + 8 * v44);
    ++v49;
    if (v45) {
      goto LABEL_15;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  OUTLINED_FUNCTION_7_14();
  __break(1u);
}

void sub_25E0AE0B0()
{
}

void sub_25E0AE0D0()
{
}

void AnyCodable.init(from:)()
{
  OUTLINED_FUNCTION_3_9();
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = v3;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_25E0DC570();
  if (!v0)
  {
    __swift_project_boxed_opaque_existential_1(v32, v33);
    if (sub_25E0DC3B0())
    {
      memset(v34, 0, 48);
    }
    else
    {
      uint64_t v12 = MEMORY[0x263F8D4F8];
      *(void *)&long long v13 = MEMORY[0x263F8D518];
      *((void *)&v13 + 1) = MEMORY[0x263F8D500];
      uint64_t v14 = MEMORY[0x263F8D6C8];
      uint64_t v15 = MEMORY[0x263F8D6F8];
      uint64_t v16 = MEMORY[0x263F8D6D0];
      uint64_t v17 = MEMORY[0x263F8D9D0];
      uint64_t v18 = MEMORY[0x263F8DA00];
      uint64_t v19 = MEMORY[0x263F8D9D8];
      uint64_t v20 = MEMORY[0x263F8D538];
      uint64_t v21 = MEMORY[0x263F8D570];
      uint64_t v22 = MEMORY[0x263F8D548];
      uint64_t v23 = MEMORY[0x263F8D310];
      uint64_t v24 = MEMORY[0x263F8D348];
      uint64_t v25 = MEMORY[0x263F8D318];
      sub_25E0AE44C();
      uint64_t v26 = v5;
      uint64_t v27 = sub_25E0AE4E4(&qword_26A6D5A18, (void (*)(void))sub_25E0AE498);
      uint64_t v28 = sub_25E0AE4E4(&qword_26A6D5A28, (void (*)(void))sub_25E0AD2D4);
      sub_25E0AE550();
      uint64_t v29 = v6;
      uint64_t v30 = sub_25E0AE5AC(&qword_26A6D5A38, (void (*)(void))sub_25E0AE498);
      uint64_t v31 = sub_25E0AE5AC(&qword_26A6D5A40, (void (*)(void))sub_25E0AD2D4);
      uint64_t v7 = v12;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      uint64_t v9 = v7;
      long long v10 = v13;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v8);
      sub_25E0DC3A0();
      sub_25E0AD2BC(&v8, v11);
      sub_25E0AD2BC(v11, v34);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    sub_25E0AD2BC(v34, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(v2);
  OUTLINED_FUNCTION_4_1();
}

void sub_25E0AE44C()
{
  if (!qword_26A6D5A10)
  {
    unint64_t v0 = sub_25E0DB940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5A10);
    }
  }
}

unint64_t sub_25E0AE498()
{
  unint64_t result = qword_26A6D5A20;
  if (!qword_26A6D5A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5A20);
  }
  return result;
}

uint64_t sub_25E0AE4E4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25E0AE44C();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_25E0AE550()
{
  if (!qword_26A6D5A30)
  {
    unint64_t v0 = sub_25E0DB400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5A30);
    }
  }
}

uint64_t sub_25E0AE5AC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_25E0AE550();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E0AE624(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_25E0AE678(0, a2, a3);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_14_4();
  v4();
  return a1;
}

void sub_25E0AE678(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_25E0DBCF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_25E0AE6CC()
{
  unint64_t result = qword_26A6D5A50;
  if (!qword_26A6D5A50)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26A6D5A50);
  }
  return result;
}

uint64_t AnyCodable.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25E0DC5A0();
  sub_25E0AD284(v1, (uint64_t)&v5);
  if (v6)
  {
    sub_25E0AD2BC(&v5, &v3);
    __swift_project_boxed_opaque_existential_1(&v3, v4);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_25E0DC3C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    OUTLINED_FUNCTION_15_9();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

void sub_25E0AE828()
{
}

uint64_t sub_25E0AE840(void *a1)
{
  return AnyCodable.encode(to:)(a1);
}

uint64_t UnknownKeys.stringValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t UnknownKeys.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*UnknownKeys.stringValue.modify())(void)
{
  return nullsub_1;
}

uint64_t UnknownKeys.init(stringValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_25E0DBCF0();
  OUTLINED_FUNCTION_0_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_4();
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v12 - v9;
  sub_25E0DB3C0();
  sub_25E0DC5F0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, a3) != 1)
  {
    swift_bridgeObjectRelease();
    a1 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  return a1;
}

void UnknownKeys.init(intValue:)()
{
}

uint64_t UnknownKeys.intValue.getter()
{
  return 0;
}

uint64_t UnknownKeys.hash(into:)()
{
  sub_25E0DB3C0();
  sub_25E0DB5E0();

  return swift_bridgeObjectRelease();
}

uint64_t static UnknownKeys.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25E0DC380();
  }
}

uint64_t UnknownKeys.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0AEAC0()
{
  uint64_t v1 = *v0;
  sub_25E0DB3C0();
  return v1;
}

uint64_t sub_25E0AEAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = UnknownKeys.init(stringValue:)(a1, a2, *(void *)(a3 + 16));
  *a4 = result;
  a4[1] = v6;
  return result;
}

void sub_25E0AEB20(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_25E0AEB28()
{
  return UnknownKeys.hashValue.getter();
}

uint64_t sub_25E0AEB30()
{
  return UnknownKeys.hash(into:)();
}

uint64_t sub_25E0AEB38()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0AEB78(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25E0AEBCC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_25E0AEC20(uint64_t *a1, uint64_t *a2)
{
  return static UnknownKeys.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t UnknownKeyCoding.init(wrappedValue:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for UnknownKeyCoding() + 36);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_13_9();
  uint64_t result = v2();
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 2;
  return result;
}

uint64_t type metadata accessor for UnknownKeyCoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t UnknownKeyCoding.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_13(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t UnknownKeyCoding.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

double (*UnknownKeyCoding.wrappedValue.modify())(void)
{
  return nullsub_1;
}

uint64_t UnknownKeyCoding.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_5_13(*(uint64_t (**)(uint64_t))(*(void *)(a1 - 8) + 16), a2);
}

uint64_t UnknownKeyCoding.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a4 + *(int *)(type metadata accessor for UnknownKeyCoding() + 36);
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 2;
  sub_25E03DF54(a1, (uint64_t)&v19);
  sub_25E0DBB60();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4, v13, a2);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a3 + 40))(&v19, a1, a2, a3);
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v16 = v19;
    char v17 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = v16;
    *(unsigned char *)(v14 + 8) = v17;
  }
  return result;
}

uint64_t UnknownKeyCoding.encode(to:)(uint64_t a1, uint64_t a2)
{
  long long v3 = (uint64_t *)(v2 + *(int *)(a2 + 36));
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  uint64_t v6 = v4;
  char v7 = (char)v3;
  return (*(uint64_t (**)(uint64_t, uint64_t *, void))(*(void *)(a2 + 24) + 48))(a1, &v6, *(void *)(a2 + 16));
}

uint64_t sub_25E0AEF44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return UnknownKeyCoding.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_25E0AEF64(uint64_t a1, uint64_t a2)
{
  return UnknownKeyCoding.encode(to:)(a1, a2);
}

uint64_t AnyCodingKey.init<A>(_:)()
{
  sub_25E0DC600();
  if (v0) {
    uint64_t v1 = sub_25E0DC5E0();
  }
  else {
    uint64_t v1 = sub_25E0DC2D0();
  }
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_14_4();
  v3();
  return v2;
}

SonicFoundation::AnyCodingKey_optional __swiftcall AnyCodingKey.init(intValue:)(Swift::Int intValue)
{
  uint64_t v2 = sub_25E0DC2D0();
  Swift::Int v4 = intValue;
  Swift::Bool v5 = 0;
  result.value.intValue.value = v4;
  result.value.stringValue._object = v3;
  result.value.stringValue._uint64_t countAndFlagsBits = v2;
  result.value.intValue.is_nil = v5;
  return result;
}

SonicFoundation::AnyCodingKey_optional __swiftcall AnyCodingKey.init(stringValue:)(Swift::String stringValue)
{
  Swift::Int v1 = 0;
  Swift::Bool v2 = 1;
  result.value.stringValue = stringValue;
  result.value.intValue.value = v1;
  result.value.intValue.is_nil = v2;
  return result;
}

uint64_t AnyCodingKey.stringValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t AnyCodingKey.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *Swift::Bool v2 = a1;
  v2[1] = a2;
  return result;
}

double (*AnyCodingKey.stringValue.modify())(void)
{
  return nullsub_1;
}

uint64_t AnyCodingKey.intValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AnyCodingKey.intValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

double (*AnyCodingKey.intValue.modify())(void)
{
  return nullsub_1;
}

uint64_t AnyCodingKey.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return sub_25E0DC4F0();
  }
  sub_25E0DC4F0();
  return sub_25E0DC4E0();
}

uint64_t static AnyCodingKey.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = sub_25E0DC380(), result = 0, (v13 & 1) != 0))
  {
    if (a4)
    {
      if (a8) {
        return 1;
      }
    }
    else if ((a8 & 1) == 0 && a3 == a7)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t AnyCodingKey.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    sub_25E0DC4E0();
  }
  return sub_25E0DC500();
}

uint64_t sub_25E0AF300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)&uint64_t result = (unsigned __int128)AnyCodingKey.init(stringValue:)(*(Swift::String *)&a1);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_25E0AF334()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_25E0AF340@<X0>(Swift::Int a1@<X0>, uint64_t a2@<X8>)
{
  SonicFoundation::AnyCodingKey_optional v4 = AnyCodingKey.init(intValue:)(a1);
  *(void *)a2 = v4.value.stringValue._countAndFlagsBits;
  *(void *)(a2 + 8) = v4.value.stringValue._object;
  *(void *)(a2 + 16) = v4.value.intValue.value;
  *(unsigned char *)(a2 + 24) = 0;
  return v4.value.stringValue._countAndFlagsBits;
}

uint64_t sub_25E0AF370()
{
  return AnyCodingKey.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_25E0AF380(uint64_t a1)
{
  return AnyCodingKey.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_25E0AF390()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_25E0DC4D0();
  sub_25E0DB3C0();
  sub_25E0DB5E0();
  swift_bridgeObjectRelease();
  sub_25E0DC4F0();
  if (v1 != 1) {
    sub_25E0DC4E0();
  }
  return sub_25E0DC500();
}

uint64_t sub_25E0AF428(uint64_t a1)
{
  return sub_25E0AF4A0(a1);
}

uint64_t sub_25E0AF454()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_25E0AF474(uint64_t a1)
{
  return sub_25E0AF4A0(a1);
}

uint64_t sub_25E0AF4A0(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25E0AF510()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E0AF52C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E0AF548()
{
  return swift_getWitnessTable();
}

unint64_t sub_25E0AF568()
{
  unint64_t result = qword_26A6D5A58;
  if (!qword_26A6D5A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5A58);
  }
  return result;
}

unint64_t sub_25E0AF5B8()
{
  unint64_t result = qword_26A6D5A60;
  if (!qword_26A6D5A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5A60);
  }
  return result;
}

unint64_t sub_25E0AF608()
{
  unint64_t result = qword_26A6D5A68[0];
  if (!qword_26A6D5A68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A6D5A68);
  }
  return result;
}

uint64_t sub_25E0AF654(uint64_t a1)
{
  unint64_t v2 = sub_25E0B06AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25E0AF690(uint64_t a1)
{
  unint64_t v2 = sub_25E0B06AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25E0AF6CC(uint64_t a1, uint64_t a2)
{
  return static AnyCodingKey.== infix(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t dispatch thunk of static UnknownKeyCodable._decodeUnknownKeys(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of UnknownKeyCodable._encode(to:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t destroy for AnyCodable(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)(a1 + 24) = v3;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(_OWORD *)(a1 + 32) = a2[2];
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_2((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

uint64_t sub_25E0AFBE8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_25E0AFC00(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for AnyCodable()
{
}

uint64_t sub_25E0AFC3C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  sub_25E0DB3C0();
  return a1;
}

uint64_t sub_25E0AFC74()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E0AFC7C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0AFCC0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0AFCFC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E0AFD3C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25E0AFD80(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_25E0AFD98(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)double result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for _UnknownValues()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E0AFDC8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E0AFE60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v11 = *(void *)v10;
    LOBYTE(v10) = *(unsigned char *)(v10 + 8);
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v12 = v11;
    *(unsigned char *)(v12 + 8) = v10;
    sub_25E0DB3C0();
  }
  return v4;
}

uint64_t sub_25E0AFF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v8) = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v8;
  sub_25E0DB3C0();
  return a1;
}

uint64_t sub_25E0AFFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v8) = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v8;
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0B0080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_25E0B0104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v8) = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E0B0190(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFD) {
    unsigned int v7 = 253;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25E0B02E0);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFD) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 > 2) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_25E0B02F4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFD) {
    unsigned int v8 = 253;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x25E0B04F8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFD)
        {
          unint64_t v20 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFD)
          {
            *(unsigned char *)(v20 + 8) = 0;
            *(void *)unint64_t v20 = (a2 - 254);
          }
          else
          {
            *(unsigned char *)(v20 + 8) = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t initializeWithCopy for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_25E0DB3C0();
  return a1;
}

uint64_t assignWithCopy for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodingKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodingKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for AnyCodingKey()
{
}

unint64_t sub_25E0B06AC()
{
  unint64_t result = qword_26A6D5BF0;
  if (!qword_26A6D5BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5BF0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_14()
{
  return sub_25E0DC140();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return MEMORY[0x270F9F8F0](v0, v1);
}

uint64_t static NanoID.small(size:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    OUTLINED_FUNCTION_3_11();
    OUTLINED_FUNCTION_2_8(0, v1, 64);
    OUTLINED_FUNCTION_5_14();
    sub_25E0B0CAC();
    return OUTLINED_FUNCTION_1_17();
  }
  return result;
}

void sub_25E0B07D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = a1;
    if (a2 >= a1)
    {
      uint64_t v6 = HIBYTE(a4) & 0xF;
      if ((a4 & 0x2000000000000000) == 0) {
        uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v18 = v6;
      uint64_t v7 = MEMORY[0x263F8EE78];
      while (v5 < a2)
      {
        if (v18)
        {
          sub_25E0DB3C0();
          uint64_t v8 = sub_25E0DB5F0();
          if (v8 < 0) {
            goto LABEL_22;
          }
          unint64_t v9 = v8;
          if (!v8) {
            goto LABEL_23;
          }
          uint64_t v19 = 0;
          MEMORY[0x2611CF780](&v19, 8);
          if (v9 > v19 * v9)
          {
            unint64_t v10 = -(uint64_t)v9 % v9;
            while (v10 > v19 * v9)
            {
              uint64_t v19 = 0;
              MEMORY[0x2611CF780](&v19, 8);
            }
          }
          sub_25E0DB610();
          uint64_t v11 = sub_25E0DB6E0();
          uint64_t v13 = v12;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25E056810();
            uint64_t v7 = v16;
          }
          unint64_t v14 = *(void *)(v7 + 16);
          if (v14 >= *(void *)(v7 + 24) >> 1)
          {
            sub_25E056810();
            uint64_t v7 = v17;
          }
          *(void *)(v7 + 16) = v14 + 1;
          uint64_t v15 = v7 + 16 * v14;
          *(void *)(v15 + 32) = v11;
          *(void *)(v15 + 40) = v13;
        }
        if (++v5 == a2)
        {
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_25E0B09B8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a4)
  {
    uint64_t v6 = a3;
    if (a4 >= a3)
    {
      uint64_t v7 = MEMORY[0x263F8EE78];
      while (v6 < a4)
      {
        uint64_t v17 = v6;
        a1(&v15, &v17);
        if (v4)
        {
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v8 = v16;
        if (v16)
        {
          uint64_t v9 = v15;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25E056810();
            uint64_t v7 = v12;
          }
          unint64_t v10 = *(void *)(v7 + 16);
          if (v10 >= *(void *)(v7 + 24) >> 1)
          {
            sub_25E056810();
            uint64_t v7 = v13;
          }
          *(void *)(v7 + 16) = v10 + 1;
          uint64_t v11 = v7 + 16 * v10;
          *(void *)(v11 + 32) = v9;
          *(void *)(v11 + 40) = v8;
        }
        if (a4 == ++v6) {
          return;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

SonicFoundation::NanoID __swiftcall NanoID.init(config:)(SonicFoundation::NanoID::Configuration config)
{
  if (config.size < 0)
  {
    __break(1u);
  }
  else
  {
    sub_25E0B07D0(0, config.size, config.characters._countAndFlagsBits, (unint64_t)config.characters._object);
    OUTLINED_FUNCTION_5_14();
    sub_25E0B0CAC();
    config.characters._uint64_t countAndFlagsBits = OUTLINED_FUNCTION_1_17();
  }
  return (SonicFoundation::NanoID)config.characters;
}

unint64_t static NanoID.Configuration.default.getter()
{
  return OUTLINED_FUNCTION_6_12(64);
}

unint64_t static NanoID.Configuration.noSimilarCharacters.getter()
{
  return OUTLINED_FUNCTION_6_12(49);
}

unint64_t static NanoID.Configuration.taggedPointer.getter()
{
  return 0xD00000000000003BLL;
}

unint64_t static NanoID.Configuration.small.getter()
{
  return 0xD000000000000040;
}

uint64_t NanoID.Configuration.characters.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t NanoID.Configuration.characters.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*NanoID.Configuration.characters.modify())(void)
{
  return nullsub_1;
}

uint64_t NanoID.Configuration.size.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t NanoID.Configuration.size.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

double (*NanoID.Configuration.size.modify())(void)
{
  return nullsub_1;
}

SonicFoundation::NanoID::Configuration __swiftcall NanoID.Configuration.with(size:)(Swift::Int size)
{
  OUTLINED_FUNCTION_7_15();
  uint64_t v2 = OUTLINED_FUNCTION_36();
  Swift::Int v4 = v1;
  result.size = v4;
  result.characters._object = v3;
  result.characters._uint64_t countAndFlagsBits = v2;
  return result;
}

unint64_t sub_25E0B0CAC()
{
  unint64_t result = qword_26A6D47F0;
  if (!qword_26A6D47F0)
  {
    sub_25E053F70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D47F0);
  }
  return result;
}

uint64_t NanoID.init<A>(config:using:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = MEMORY[0x270FA5388](result);
    void v12[2] = v5;
    void v12[3] = v6;
    v12[4] = v4;
    v12[5] = a2;
    uint64_t v12[6] = v7;
    v12[7] = v8;
    sub_25E0B09B8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_25E0B0F90, (uint64_t)v12, 0, v9);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v12[8] = v11;
    sub_25E053F70();
    sub_25E0B0CAC();
    return sub_25E0DB6F0();
  }
  return result;
}

uint64_t static NanoID.small<A>(size:using:)(uint64_t result)
{
  if (result <= 15) {
    return OUTLINED_FUNCTION_0_11(64, 0x800000025E0E3CD0, result);
  }
  __break(1u);
  return result;
}

uint64_t static NanoID.noSimilarCharacters(size:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    OUTLINED_FUNCTION_3_11();
    OUTLINED_FUNCTION_2_8(0, v1, 49);
    OUTLINED_FUNCTION_5_14();
    sub_25E0B0CAC();
    return OUTLINED_FUNCTION_1_17();
  }
  return result;
}

uint64_t static NanoID.noSimilarCharacters<A>(size:using:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_0_11(49, 0x800000025E0E5220, a1);
}

uint64_t static NanoID.taggedPointer(size:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    OUTLINED_FUNCTION_3_11();
    OUTLINED_FUNCTION_2_8(0, v1, 59);
    OUTLINED_FUNCTION_5_14();
    sub_25E0B0CAC();
    return OUTLINED_FUNCTION_1_17();
  }
  return result;
}

uint64_t static NanoID.taggedPointer<A>(size:using:)(uint64_t result)
{
  if (result <= 9) {
    return OUTLINED_FUNCTION_0_11(59, 0x800000025E0E5260, result);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B0F18()
{
  return sub_25E0DBC00();
}

uint64_t sub_25E0B0F90()
{
  return sub_25E0B0F18();
}

uint64_t NanoID.nanoIDString.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t NanoID.description.getter()
{
  return OUTLINED_FUNCTION_36();
}

uint64_t NanoID.hash(into:)()
{
  OUTLINED_FUNCTION_7_15();
  sub_25E0DB5E0();

  return swift_bridgeObjectRelease();
}

uint64_t static NanoID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_25E0DC380();
  }
}

uint64_t NanoID.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0B10C4()
{
  return NanoID.hashValue.getter();
}

uint64_t sub_25E0B10CC()
{
  return NanoID.hash(into:)();
}

uint64_t sub_25E0B10D4()
{
  return sub_25E0DC500();
}

unint64_t sub_25E0B1130()
{
  unint64_t result = qword_26A6D5BF8;
  if (!qword_26A6D5BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5BF8);
  }
  return result;
}

unint64_t sub_25E0B1180()
{
  unint64_t result = qword_26A6D5C00;
  if (!qword_26A6D5C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5C00);
  }
  return result;
}

uint64_t sub_25E0B11CC@<X0>(uint64_t a1@<X0>, SonicFoundation::NanoID *a2@<X8>)
{
  SonicFoundation::NanoID v5 = NanoID.init(_:)(*(Swift::String *)&a1);
  uint64_t result = v5.nanoIDString._countAndFlagsBits;
  *a2 = v5;
  return result;
}

uint64_t sub_25E0B11F4(uint64_t *a1, uint64_t *a2)
{
  return static NanoID.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_25E0B1208()
{
  return NanoID.description.getter();
}

ValueMetadata *type metadata accessor for NanoID()
{
  return &type metadata for NanoID;
}

void *sub_25E0B1224(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_25E0DB3C0();
  return a1;
}

void *assignWithCopy for NanoID.Configuration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for NanoID.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for NanoID.Configuration()
{
  return &type metadata for NanoID.Configuration;
}

void OUTLINED_FUNCTION_2_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  sub_25E0B07D0(a1, a2, v5, v3);
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return sub_25E0DB3C0();
}

double Duration.milliseconds.getter()
{
  double v0 = (double)OUTLINED_FUNCTION_0_12() * 1000.0;
  OUTLINED_FUNCTION_1_18();
  return v0 + (double)v1 / 1.0e15;
}

double Duration.seconds.getter()
{
  double v0 = (double)OUTLINED_FUNCTION_0_12();
  OUTLINED_FUNCTION_1_18();
  return (double)v1 / 1.0e18 + v0;
}

double Duration.microseconds.getter()
{
  double v0 = (double)OUTLINED_FUNCTION_0_12() * 1000000.0;
  OUTLINED_FUNCTION_1_18();
  return v0 + (double)v1 / 1.0e12;
}

double Duration.nanoseconds.getter()
{
  double v0 = (double)OUTLINED_FUNCTION_0_12() * 1000000000.0;
  OUTLINED_FUNCTION_1_18();
  return v0 + (double)v1 / 1000000000.0;
}

uint64_t sub_25E0B1470@<X0>(void *a1@<X8>)
{
  return sub_25E0B168C(a1);
}

uint64_t sub_25E0B1478@<X0>(void *a1@<X8>)
{
  sub_25E0DB630();
  sub_25E0DB630();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_25E0B1510@<X0>(void *a1@<X8>)
{
  sub_25E0DB630();
  sub_25E0DB630();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_25E0B15AC@<X0>(char a1@<W0>, void *a2@<X8>)
{
  sub_25E0B1C20(a1);
  sub_25E0DB630();
  sub_25E0DB630();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 39;
  a2[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_25E0B1640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25E0DC2D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25E0B168C@<X0>(void *a1@<X8>)
{
  sub_25E0DB3C0();
  sub_25E0DB630();
  sub_25E0DB630();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 39;
  a1[1] = 0xE100000000000000;
  return result;
}

uint64_t SQLFunctionResult<>.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 16))(AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
}

uint64_t sub_25E0B1854(Swift::OpaquePointer a1)
{
  return sub_25E0B1870(a1);
}

uint64_t sub_25E0B1870(Swift::OpaquePointer a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t SQLFunctionResult<>.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v15 - v11;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  if (!v3)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 24) + 16) + 16))(a1, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_25E0B1A0C@<X0>(sqlite3_value *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25E0B1A38(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_25E0B1A38(sqlite3_value *a1)
{
  uint64_t v2 = sqlite3_value_text(a1);
  sqlite3_value_bytes(a1);
  return sub_25E08ADB8((uint64_t)v2);
}

uint64_t SQLFunctionArgument<>.init(functionArgument:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v3) {
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 56))(v9, a2, a3);
  }
  return result;
}

uint64_t sub_25E0B1BB4(char a1)
{
  if (!a1) {
    return 99;
  }
  if (a1 == 1) {
    return 117;
  }
  return 27504;
}

uint64_t sub_25E0B1BE8(char a1)
{
  if (a1) {
    return 0x564953554C435845;
  }
  else {
    return 0x4C414D524F4ELL;
  }
}

uint64_t sub_25E0B1C20(char a1)
{
  uint64_t result = 0x4554454C4544;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x455441434E555254;
      break;
    case 2:
      uint64_t result = 0x54534953524550;
      break;
    case 3:
      uint64_t result = 0x59524F4D454DLL;
      break;
    case 4:
      uint64_t result = 4997463;
      break;
    case 5:
      uint64_t result = 4605519;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25E0B1CD0(uint64_t result)
{
  return result;
}

uint64_t sub_25E0B1CD8@<X0>(uint64_t *a1@<X8>)
{
  return sub_25E0B1640(a1);
}

uint64_t sub_25E0B1CE0@<X0>(void *a1@<X8>)
{
  return sub_25E0B1478(a1);
}

const char *sub_25E0B1CE8(sqlite3_stmt *a1, uint64_t a2, uint64_t a3)
{
  return SQLValueObject<>.bind(to:index:)(a1, a2, a3, (uint64_t)&off_270AF1290);
}

const char *SQLValueObject<>.bind(to:index:)(sqlite3_stmt *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 32);
  swift_unknownObjectRetain();
  uint64_t result = (const char *)v10(a3, a4);
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result) {
    return (const char *)sqlite3_bind_pointer(a1, a2, v5, result, (void (__cdecl *)(void *))sub_25E0B21A8);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_25E0B1DDC(sqlite3_context *a1, uint64_t a2)
{
}

void SQLValueObject<>.result(for:)(sqlite3_context *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 32);
  swift_unknownObjectRetain();
  uint64_t v9 = (const char *)v8(a2, a3);
  if (v10)
  {
    __break(1u);
  }
  else if (v9)
  {
    sqlite3_result_pointer(a1, v4, v9, (void (__cdecl *)(void *))sub_25E0B2258);
    return;
  }
  __break(1u);
}

const char *sub_25E0B1EA4@<X0>(sqlite3_value *a1@<X0>, const char **a2@<X8>)
{
  uint64_t result = SQLValueObject<>.init(functionArgument:)(a1, v2, (uint64_t)&off_270AF1290);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

const char *SQLValueObject<>.init(functionArgument:)(sqlite3_value *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (const char *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (sqlite3_value_pointer(a1, result))
  {
    uint64_t v9 = swift_unknownObjectRetain();
    uint64_t result = (const char *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 32))(&v10, &v9, a2);
    if (!v3) {
      return (const char *)v10;
    }
  }
  else
  {
    sub_25E0DBE80();
    sub_25E0DB630();
    uint64_t v9 = (uint64_t)a1;
    sub_25E0DC0D0();
    sub_25E0DB630();
    sub_25E0DBEB0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v8 = 0;
    v8[1] = 0xE000000000000000;
    return (const char *)swift_willThrow();
  }
  return result;
}

uint64_t sub_25E0B2090@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_25E06BF20(a1, a2);
}

uint64_t sub_25E0B2098(uint64_t a1)
{
  return a1;
}

void sub_25E0B20CC(Swift::OpaquePointer a1)
{
}

uint64_t SQLValueObject.nativeValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

void SQLValueObject.debugSQL.getter(void *a1@<X8>)
{
  *a1 = 1280070990;
  a1[1] = 0xE400000000000000;
}

uint64_t SQLValueObject.init(nativeValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
}

uint64_t SQLValueObject.init(raw:)()
{
  OUTLINED_FUNCTION_1_19();
  return v0();
}

uint64_t sub_25E0B21A8(uint64_t a1)
{
  return sub_25E0B21C0(a1);
}

uint64_t sub_25E0B21C0(uint64_t result)
{
  if (result) {
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of _SQLDebugValue.debugSQL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SQLFunctionResult.result(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static SQLValueObject.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SQLFunctionPackedArgument.init(functionArgument:)()
{
  OUTLINED_FUNCTION_1_19();
  return v0();
}

uint64_t sub_25E0B2238@<X0>(void *a1@<X8>)
{
  return sub_25E0B15AC(*v1, a1);
}

uint64_t sub_25E0B2240@<X0>(void *a1@<X8>)
{
  return sub_25E0B1510(a1);
}

uint64_t sub_25E0B2260()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_18_0();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B22FC;
  uint64_t v2 = OUTLINED_FUNCTION_36_7();
  return v3(v2);
}

uint64_t sub_25E0B22FC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0B23DC()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_12();
  v0[8] = sub_25E0B628C;
  v0[9] = 0;
  swift_retain();
  OUTLINED_FUNCTION_49();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_0();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B249C;
  return v3();
}

uint64_t sub_25E0B249C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 122) = v3;
    *(void *)(v7 + 208) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E0B2598()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_21_7();
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_25E0B2608()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_18_0();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B26A4;
  uint64_t v2 = OUTLINED_FUNCTION_36_7();
  return v3(v2);
}

uint64_t sub_25E0B26A4()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *char v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0B2784()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_12();
  v0[8] = sub_25E0B62B4;
  v0[9] = 0;
  swift_retain();
  OUTLINED_FUNCTION_49();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_0();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B2844;
  return v3();
}

uint64_t sub_25E0B2844()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  char v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_3();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v10 = v9;
  *(void *)(v7 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    *(unsigned char *)(v7 + 122) = v3;
    *(void *)(v7 + 208) = v5;
  }
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_25E0B2940()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0B295C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_15();
  return v3(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0B29DC()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_21_7();
  swift_willThrowTypedImpl();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_25E0B2A4C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_15();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0B2ABC(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_26A6D5C80 + dword_26A6D5C80);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_25E0B2B78;
  return v5(v1 + 80, a1);
}

uint64_t sub_25E0B2B78()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_25E0B2C58()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_4_12();
  v0[8] = sub_25E0B6310;
  v0[9] = 0;
  swift_retain();
  OUTLINED_FUNCTION_49();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_0();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B2D18;
  return v3();
}

uint64_t sub_25E0B2D18()
{
  OUTLINED_FUNCTION_17();
  char v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 200) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(unsigned char *)(v5 + 122) = v3;
  }
  OUTLINED_FUNCTION_19();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E0B2E0C()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_14_10();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30();
  swift_release();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_15();
  return v2(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_25E0B2E80()
{
  OUTLINED_FUNCTION_12();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v0;
  *(void *)(v1 + 56) = v3;
  sub_25E03E7AC(v2, v1 + 16);
  long long v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v1 + 96) = v4;
  *(unsigned char *)(v1 + 49) = *(unsigned char *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_25E0B2F04, v0, 0);
}

uint64_t sub_25E0B2F04()
{
  OUTLINED_FUNCTION_12();
  char v1 = *(unsigned char *)(v0 + 49);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 56);
  long long v4 = *(_OWORD *)(v0 + 80);
  long long v5 = *(_OWORD *)(v0 + 96);
  *(void *)uint64_t v3 = *(void *)(*(void *)(v0 + 72) + 128);
  *(_OWORD *)(v3 + 8) = v4;
  *(_OWORD *)(v3 + 24) = v5;
  *(unsigned char *)(v3 + 40) = v1;
  swift_retain();
  sub_25E04A150(v2);
  OUTLINED_FUNCTION_17_0();
  return v6();
}

uint64_t sub_25E0B2F84(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 56) = a1;
  sub_25E03E7AC(a2, v3 + 16);
  long long v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(unsigned char *)(v3 + 49) = *(unsigned char *)(v3 + 48);
  return MEMORY[0x270FA2498](sub_25E0B647C, v2, 0);
}

uint64_t sub_25E0B300C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 56) = a1;
  sub_25E03E7AC(a2, v3 + 16);
  long long v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(unsigned char *)(v3 + 49) = *(unsigned char *)(v3 + 48);
  return MEMORY[0x270FA2498](sub_25E0B645C, v2, 0);
}

uint64_t sub_25E0B3094(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 64) = a2;
  *(void *)(v3 + 72) = v2;
  *(void *)(v3 + 56) = a1;
  sub_25E03E7AC(a2, v3 + 16);
  long long v4 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 96) = v4;
  *(unsigned char *)(v3 + 49) = *(unsigned char *)(v3 + 48);
  return MEMORY[0x270FA2498](sub_25E0B311C, v2, 0);
}

uint64_t sub_25E0B311C()
{
  OUTLINED_FUNCTION_12();
  uint64_t result = *(void *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  if (result)
  {
    char v2 = *(unsigned char *)(v0 + 49);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    long long v5 = *(_OWORD *)(v0 + 80);
    long long v6 = *(_OWORD *)(v0 + 96);
    *(void *)uint64_t v3 = result;
    *(_OWORD *)(v3 + 8) = v5;
    *(_OWORD *)(v3 + 24) = v6;
    *(unsigned char *)(v3 + 40) = v2;
    swift_retain();
    sub_25E04A150(v4);
    OUTLINED_FUNCTION_17_0();
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_25E0B31B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E04F998();
  uint64_t v8 = a2;
  uint64_t v9 = 0;
  uint64_t v7 = a3;
  sub_25E0659E4(a2, &v9, v6, a1, 1, (uint64_t)&v8, a2, (uint64_t)&v7);
}

void sub_25E0B3234(uint64_t a1)
{
  uint64_t v9 = sub_25E04F998();
  char v11 = 0;
  uint64_t v14 = 0;
  char v2 = 1;
  uint64_t v3 = MEMORY[0x263F8D310];
  uint64_t v4 = MEMORY[0x263F8D310];
  while (1)
  {
    sub_25E0B63F0();
    uint64_t v7 = v6;
    v13[0] = v3;
    sub_25E0B633C();
    v13[1] = v8;
    v12[0] = &protocol witness table for String;
    v12[1] = sub_25E0B6388();
    sub_25E0659E4(v4, &v14, v9, a1, 2, (uint64_t)v13, v4, (uint64_t)v12);
    if (v1) {
      break;
    }
    if (v11) {
      return;
    }
    char v2 = 0;
    char v11 = 1;
    sub_25E0B633C();
    uint64_t v4 = v5;
    sub_25E0B6388();
  }
  if ((v2 & 1) == 0) {
    (*(void (**)(char *))(*(void *)(v13[0] - 8) + 8))((char *)&v13[2] + *(int *)(v7 + 32));
  }
}

void sub_25E0B33BC(uint64_t a1)
{
  uint64_t v2 = sub_25E04F998();
  uint64_t v5 = 0;
  uint64_t v4 = MEMORY[0x263F8D4F8];
  uint64_t v3 = &protocol witness table for Bool;
  sub_25E0659E4(MEMORY[0x263F8D4F8], &v5, v2, a1, 1, (uint64_t)&v4, MEMORY[0x263F8D4F8], (uint64_t)&v3);
}

void sub_25E0B3440(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_25E0B3464(uint64_t a1)
{
}

void sub_25E0B348C(uint64_t a1)
{
}

uint64_t sub_25E0B34A4()
{
  OUTLINED_FUNCTION_17();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_25E0B3550;
  return SQLDatabase.transaction(named:)();
}

uint64_t sub_25E0B3550()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 48) = v3;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    char v11 = (void *)swift_task_alloc();
    *(void *)(v5 + 56) = v11;
    *char v11 = v7;
    v11[1] = sub_25E0B369C;
    return sub_25E0A5C74();
  }
}

uint64_t sub_25E0B369C()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  v3[8] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[2];
    return MEMORY[0x270FA2498](sub_25E0B38D4, v7, 0);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v3[9] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_25E0B37D8;
    return SQLDatabase.Transaction.commit()();
  }
}

uint64_t sub_25E0B37D8()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E0B38D4()
{
  OUTLINED_FUNCTION_12();
  v0[11] = v0[8];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B3A54;
  return SQLDatabase.Transaction.rollback()();
}

uint64_t sub_25E0B3968()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t sub_25E0B39C0()
{
  OUTLINED_FUNCTION_12();
  v0[11] = v0[10];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B3A54;
  return SQLDatabase.Transaction.rollback()();
}

uint64_t sub_25E0B3A54()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v9 = sub_25E0B3BBC;
  }
  else {
    uint64_t v9 = sub_25E0B3B4C;
  }
  return MEMORY[0x270FA2498](v9, v5, 0);
}

uint64_t sub_25E0B3B4C()
{
  OUTLINED_FUNCTION_17();
  swift_willThrow();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0B3BBC()
{
  OUTLINED_FUNCTION_12();
  MEMORY[0x2611CF510](*(void *)(v0 + 88));
  swift_release();
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t SQLDatabase.withTransaction<A>(named:_:)()
{
  OUTLINED_FUNCTION_17();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[2] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v1[7] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_25E0B3CD0;
  return SQLDatabase.transaction(named:)();
}

uint64_t sub_25E0B3CD0()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  v5[8] = v3;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(v5[3] + *(int *)v5[3]);
    uint64_t v11 = (void *)swift_task_alloc();
    v5[9] = v11;
    *uint64_t v11 = v7;
    v11[1] = sub_25E0B3E64;
    uint64_t v12 = v5[2];
    return v13(v12, v3);
  }
}

uint64_t sub_25E0B3E64()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    v3[12] = v0;
    uint64_t v7 = (void *)swift_task_alloc();
    v3[13] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_25E0B40D8;
    return SQLDatabase.Transaction.rollback()();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v3[10] = v9;
    *uint64_t v9 = v5;
    v9[1] = sub_25E0B3FDC;
    return SQLDatabase.Transaction.commit()();
  }
}

uint64_t sub_25E0B3FDC()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_40();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_25E0B40D8()
{
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 48);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v7 = v6;
  *(void *)(v8 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v9 = sub_25E0B4304;
  }
  else {
    uint64_t v9 = sub_25E0B41D0;
  }
  return MEMORY[0x270FA2498](v9, v5, 0);
}

uint64_t sub_25E0B41D0()
{
  OUTLINED_FUNCTION_17();
  swift_willThrow();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0B4240()
{
  OUTLINED_FUNCTION_12();
  (*(void (**)(void))(*(void *)(v0[5] - 8) + 8))(v0[2]);
  v0[12] = v0[11];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B40D8;
  return SQLDatabase.Transaction.rollback()();
}

uint64_t sub_25E0B4304()
{
  OUTLINED_FUNCTION_12();
  MEMORY[0x2611CF510](*(void *)(v0 + 96));
  swift_release();
  OUTLINED_FUNCTION_9();
  return v1();
}

uint64_t SQLDatabase.transaction(named:)()
{
  OUTLINED_FUNCTION_17();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  _s10ConnectionCMa();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[5] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_25E0B4430;
  return sub_25E090290();
}

uint64_t sub_25E0B4430()
{
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 48) = v6;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7();
  }
  else
  {
    OUTLINED_FUNCTION_40();
    return MEMORY[0x270FA2498](v9, v10, v11);
  }
}

uint64_t sub_25E0B4548()
{
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_8_0();
  *(unsigned char *)(v0 + 80) = 0;
  type metadata accessor for SQLDatabase.Transaction();
  swift_allocObject();
  swift_retain();
  sub_25E0DB3C0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B4624;
  OUTLINED_FUNCTION_15();
  return sub_25E0B4C84();
}

uint64_t sub_25E0B4624()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v8 = v7;
  *(void *)(v5 + 64) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 72) = v3;
  }
  OUTLINED_FUNCTION_40();
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_25E0B471C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(void *)(v0 + 72);
  return v1(v2);
}

uint64_t sub_25E0B477C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLDatabase.Transaction.commit()()
{
  *(void *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B47F4, v0);
}

uint64_t sub_25E0B47F4()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_27_10();
  if (*(unsigned char *)(v0 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_8();
    OUTLINED_FUNCTION_17_7();
    swift_bridgeObjectRelease();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    *(void *)(v1 + 48) = *(void *)(*(void *)(v1 + 40) + 128);
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B48F4()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E6A4(v0[6]);
  v0[7] = 0;
  uint64_t v1 = v0[5];
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0B498C, v1, 0);
}

uint64_t sub_25E0B498C()
{
  *(unsigned char *)(*(void *)(v0 + 40) + 136) = 1;
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E0B49B0()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLDatabase.Transaction.rollback()()
{
  *(void *)(v1 + 40) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B4A28, v0);
}

uint64_t sub_25E0B4A28()
{
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_27_10();
  if (*(unsigned char *)(v0 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_8();
    OUTLINED_FUNCTION_17_7();
    swift_bridgeObjectRelease();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    *(void *)(v1 + 48) = *(void *)(*(void *)(v1 + 40) + 128);
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B4B28()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E6C4(v0[6]);
  v0[7] = 0;
  uint64_t v1 = v0[5];
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0B6460, v1, 0);
}

uint64_t type metadata accessor for SQLDatabase.Transaction()
{
  return self;
}

BOOL static SQLDatabase.Transaction.Mode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SQLDatabase.Transaction.Mode.hash(into:)()
{
  return sub_25E0DC4E0();
}

uint64_t _s15SonicFoundation11SQLDatabaseC11TransactionC4ModeO9hashValueSivg_0()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0B4C84()
{
  OUTLINED_FUNCTION_17();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = *v0;
  *(unsigned char *)(v1 + 40) = *v8;
  swift_defaultActor_initialize();
  v0[15] = v3;
  v0[16] = v7;
  v0[14] = v5;
  swift_retain();
  return MEMORY[0x270FA2498](sub_25E0B4D44, v7, 0);
}

uint64_t sub_25E0B4D44()
{
  OUTLINED_FUNCTION_8_0();
  sub_25E08E56C(*(void *)(v0 + 16));
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 136) = 0;
  return MEMORY[0x270FA2498](sub_25E0B4E3C, v1, 0);
}

uint64_t sub_25E0B4E3C()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(void *)(v0 + 24);
  return v1(v2);
}

unint64_t sub_25E0B4E9C()
{
  unint64_t result = qword_26A6D5C30;
  if (!qword_26A6D5C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5C30);
  }
  return result;
}

uint64_t sub_25E0B4EE8()
{
  OUTLINED_FUNCTION_8_16();
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  sub_25E0DB580();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_28_10();
  swift_release();
  return v0;
}

uint64_t SQLDatabase.Transaction.deinit()
{
  uint64_t result = OUTLINED_FUNCTION_33_5();
  if (*(unsigned char *)(v0 + 136) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_defaultActor_destroy();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SQLDatabase.Transaction.__deallocating_deinit()
{
  SQLDatabase.Transaction.deinit();

  return MEMORY[0x270FA2418](v0);
}

uint64_t SQLDatabase.Transaction.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_25E0DB3C0();
  return v1;
}

uint64_t SQLDatabase.Transaction.isFinalized.getter()
{
  OUTLINED_FUNCTION_33_5();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t SQLDatabase.Transaction.deferringForeignKeys.getter()
{
  OUTLINED_FUNCTION_17();
  *(void *)(v0 + 16) = 0xD000000000000019;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_26A6D5C40 + dword_26A6D5C40);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = 0x800000025E0E5390;
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_25E0B51A8;
  return v3(v0 + 16);
}

uint64_t sub_25E0B51A8()
{
  OUTLINED_FUNCTION_12();
  char v3 = v2;
  OUTLINED_FUNCTION_3();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (v0) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v3 & 1;
  }
  return v6(v7);
}

uint64_t SQLDatabase.Transaction.deferForeignKeyEnforcement(enabled:)(char a1)
{
  *(void *)(v2 + 336) = v1;
  *(unsigned char *)(v2 + 89) = a1;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B52A8, v1);
}

uint64_t sub_25E0B52A8()
{
  uint64_t v1 = MEMORY[0x263F8EE78];
  sub_25E056BE8();
  uint64_t v3 = v2;
  *(void *)(v0 + 16) = 0xD00000000000001CLL;
  *(void *)(v0 + 24) = 0x800000025E0E53B0;
  *(unsigned char *)(v0 + 88) = 0;
  if (*(void *)(v2 + 16) >= *(void *)(v2 + 24) >> 1)
  {
    OUTLINED_FUNCTION_10_9();
    uint64_t v3 = v11;
  }
  char v4 = *(unsigned char *)(v0 + 89);
  OUTLINED_FUNCTION_34_7();
  sub_25E07DE30(v0 + 16, v5);
  *(void *)(v0 + 280) = MEMORY[0x263F8D4F8];
  *(void *)(v0 + 288) = &protocol witness table for Bool;
  *(unsigned char *)(v0 + 256) = v4;
  sub_25E03DF54(v0 + 256, v0 + 96);
  *(unsigned char *)(v0 + 168) = 1;
  if (*(void *)(v3 + 16) >= *(void *)(v3 + 24) >> 1)
  {
    OUTLINED_FUNCTION_10_9();
    uint64_t v3 = v12;
  }
  OUTLINED_FUNCTION_34_7();
  sub_25E07DE30(v0 + 96, v6);
  __swift_destroy_boxed_opaque_existential_1(v0 + 256);
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0xE000000000000000;
  *(unsigned char *)(v0 + 248) = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25E056BE8();
    uint64_t v3 = v13;
  }
  unint64_t v7 = *(void *)(v3 + 16);
  if (v7 >= *(void *)(v3 + 24) >> 1)
  {
    sub_25E056BE8();
    uint64_t v3 = v14;
  }
  *(void *)(v3 + 16) = v7 + 1;
  sub_25E07DE30(v0 + 176, v3 + 80 * v7 + 32);
  uint64_t v15 = v3;
  uint64_t result = sub_25E0D6330();
  uint64_t v9 = *(void *)(v1 + 16);
  *(void *)(v0 + 344) = v9;
  if (v9)
  {
    *(void *)(v0 + 368) = 0;
    *(void *)(v0 + 376) = v1;
    *(void *)(v0 + 352) = v15;
    *(void *)(v0 + 360) = 0;
    *(void *)(v0 + 296) = v15;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = 0;
    *(void *)(v0 + 320) = v1;
    *(unsigned char *)(v0 + 328) = v9 != 0;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_25E0B552C;
    return SQLDatabase.Transaction.execute(_:)(v0 + 296);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25E0B552C()
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11_0();
  *char v4 = v3;
  uint64_t v6 = v5[47];
  uint64_t v7 = v5[46];
  uint64_t v8 = v5[45];
  uint64_t v9 = v5[44];
  char v10 = v5[43] != 0;
  uint64_t v11 = *v1;
  OUTLINED_FUNCTION_11_0();
  *uint64_t v12 = v11;
  *(void *)(v3 + 392) = v0;
  swift_task_dealloc();
  sub_25E03DEA4(v9, v8, v7, v6, v10);
  if (v0)
  {
    uint64_t v13 = *(void *)(v3 + 336);
    return MEMORY[0x270FA2498](sub_25E0B56D4, v13, 0);
  }
  else
  {
    OUTLINED_FUNCTION_9();
    return v14();
  }
}

uint64_t sub_25E0B56D4()
{
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLDatabase.Transaction.Error.message.getter()
{
  uint64_t v1 = *v0;
  sub_25E0DB3C0();
  return v1;
}

uint64_t SQLDatabase.Transaction.Error.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double (*SQLDatabase.Transaction.Error.message.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLDatabase.Transaction.save(name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B5798, v3);
}

uint64_t sub_25E0B5798()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_19_11();
  if (*(unsigned char *)(v1 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_25_9();
    sub_25E0DB630();
    sub_25E0DB630();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    *(void *)(v0 + 72) = *(void *)(*(void *)(v0 + 64) + 128);
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B58B0()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E91C(v0[9], v0[6], v0[7]);
  v0[10] = 0;
  uint64_t v1 = v0[8];
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0B594C, v1, 0);
}

uint64_t sub_25E0B594C()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  *uint64_t v2 = v0[6];
  v2[1] = v1;
  OUTLINED_FUNCTION_70();
  uint64_t v5 = v3;
  sub_25E0DB3C0();
  return v5();
}

uint64_t sub_25E0B59B8()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t sub_25E0B5A14()
{
  sub_25E0DB630();
  sub_25E0DB580();
  swift_bridgeObjectRelease();
  uint64_t v0 = OUTLINED_FUNCTION_28_10();
  swift_release();
  return v0;
}

uint64_t SQLDatabase.Transaction.release(savepoint:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  v2[5] = v1;
  v2[6] = v3;
  v2[7] = v4;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B5AC8, v1);
}

uint64_t sub_25E0B5AC8()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 40);
  OUTLINED_FUNCTION_19_11();
  if (*(unsigned char *)(v1 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_25_9();
    sub_25E0DB630();
    sub_25E0DB3C0();
    OUTLINED_FUNCTION_17_7();
    swift_bridgeObjectRelease();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    OUTLINED_FUNCTION_37_7();
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B5BE0()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E948(v0[8], v0[6], v0[7]);
  v0[9] = 0;
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t sub_25E0B5C94()
{
  OUTLINED_FUNCTION_12();
  swift_release();
  OUTLINED_FUNCTION_9();
  return v0();
}

uint64_t SQLDatabase.Transaction.rollback(to:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  v2[5] = v1;
  v2[6] = v3;
  v2[7] = v4;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B5D14, v1);
}

uint64_t sub_25E0B5D14()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 40);
  OUTLINED_FUNCTION_19_11();
  if (*(unsigned char *)(v1 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    OUTLINED_FUNCTION_25_9();
    sub_25E0DB630();
    sub_25E0DB3C0();
    OUTLINED_FUNCTION_17_7();
    swift_bridgeObjectRelease();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    OUTLINED_FUNCTION_37_7();
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B5E2C()
{
  OUTLINED_FUNCTION_17();
  sub_25E08E97C(v0[8], v0[6], v0[7]);
  v0[9] = 0;
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v1();
}

uint64_t SQLDatabase.Transaction.lastInsertedRowID.getter()
{
  *(void *)(v1 + 64) = v0;
  return OUTLINED_FUNCTION_5_1((uint64_t)sub_25E0B5EFC, v0);
}

uint64_t sub_25E0B5EFC()
{
  OUTLINED_FUNCTION_8_0();
  uint64_t v1 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_19_11();
  if (*(unsigned char *)(v1 + 136))
  {
    OUTLINED_FUNCTION_8_16();
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_8();
    OUTLINED_FUNCTION_17_7();
    swift_bridgeObjectRelease();
    sub_25E0B4E9C();
    uint64_t v2 = OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_12_12(v2, v3);
    OUTLINED_FUNCTION_9();
    return v4();
  }
  else
  {
    *(void *)(v0 + 72) = *(void *)(*(void *)(v0 + 64) + 128);
    swift_retain();
    uint64_t v6 = OUTLINED_FUNCTION_52();
    return MEMORY[0x270FA2498](v6, v7, v8);
  }
}

uint64_t sub_25E0B6004()
{
  OUTLINED_FUNCTION_12();
  uint64_t v1 = *(void *)(v0 + 72);
  OUTLINED_FUNCTION_19_11();
  sqlite3_int64 insert_rowid = sqlite3_last_insert_rowid(*(sqlite3 **)(v1 + 136));
  swift_release();
  OUTLINED_FUNCTION_70();
  return v3(insert_rowid);
}

void SQLDatabase.Transaction.unownedExecutor.getter()
{
}

void sub_25E0B6084()
{
}

unint64_t sub_25E0B60A4()
{
  unint64_t result = qword_26A6D5C70;
  if (!qword_26A6D5C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5C70);
  }
  return result;
}

unint64_t sub_25E0B60F4()
{
  unint64_t result = qword_26A6D5C78;
  if (!qword_26A6D5C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5C78);
  }
  return result;
}

uint64_t method lookup function for SQLDatabase.Transaction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SQLDatabase.Transaction);
}

void type metadata accessor for SQLDatabase.Transaction.Mode()
{
}

unsigned char *_s11TransactionC4ModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E0B6234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLDatabase.Transaction.State()
{
}

void type metadata accessor for SQLDatabase.Transaction.Error()
{
}

void type metadata accessor for SQLDatabase.Transaction.Savepoint()
{
}

void sub_25E0B628C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_25E0B62B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_25E0B62DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_25E0B3440(a1, a2, a3);
  if (!v4)
  {
    *(void *)a4 = v6;
    *(unsigned char *)(a4 + 8) = v7 & 1;
  }
}

void sub_25E0B6310(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_25E0B348C(a1);
  if (!v2) {
    *a2 = v4;
  }
}

void sub_25E0B633C()
{
  if (!qword_26A6D5C90)
  {
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26A6D5C90);
    }
  }
}

unint64_t sub_25E0B6388()
{
  unint64_t result = qword_26A6D5C98;
  if (!qword_26A6D5C98)
  {
    sub_25E0B633C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5C98);
  }
  return result;
}

void sub_25E0B63F0()
{
  if (!qword_26A6D5CA0)
  {
    sub_25E0B633C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26A6D5CA0);
    }
  }
}

uint64_t OUTLINED_FUNCTION_12_12(uint64_t a1, void *a2)
{
  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_19_11()
{
  return swift_beginAccess();
}

unint64_t OUTLINED_FUNCTION_21_7()
{
  *(void *)(v0 + 128) = *(void *)(v0 + 200);
  return sub_25E04986C();
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_28_10()
{
  return sqlite3_exec(v0, (const char *)(v1 + 32), 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_34_7()
{
  *(void *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_37_7()
{
  uint64_t result = v0[7];
  v0[8] = *(void *)(v0[5] + 128);
  return result;
}

uint64_t LRUDictionary.Container<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  sub_25E0DB450();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 52) + 8) == 1) {
    return sub_25E0DC4F0();
  }
  sub_25E0DC4F0();
  return sub_25E0DC4E0();
}

uint64_t LRUDictionary.Container<>.hashValue.getter(uint64_t a1)
{
  sub_25E0DC4D0();
  LRUDictionary.Container<>.hash(into:)((uint64_t)v3, a1);
  return sub_25E0DC500();
}

uint64_t sub_25E0B665C(uint64_t a1)
{
  return LRUDictionary.Container<>.hashValue.getter(a1);
}

uint64_t sub_25E0B6664(uint64_t a1, uint64_t a2)
{
  return LRUDictionary.Container<>.hash(into:)(a1, a2);
}

uint64_t sub_25E0B666C(uint64_t a1, uint64_t a2)
{
  sub_25E0DC4D0();
  LRUDictionary.Container<>.hash(into:)((uint64_t)v4, a2);
  return sub_25E0DC500();
}

uint64_t LRUDictionary<>.hash(into:)()
{
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    sub_25E0DC4F0();
    sub_25E0DC4F0();
  }
  else
  {
    sub_25E0DC4F0();
    sub_25E0DC4E0();
    sub_25E0DC4F0();
    sub_25E0DC4E0();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  type metadata accessor for LRUDictionary.Container();
  swift_getWitnessTable();
  sub_25E0DB0F0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t LRUDictionary<>.hashValue.getter()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0B6884()
{
  return LRUDictionary<>.hashValue.getter();
}

uint64_t sub_25E0B688C()
{
  return LRUDictionary<>.hash(into:)();
}

uint64_t sub_25E0B6894()
{
  return sub_25E0DC500();
}

uint64_t sub_25E0B68E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_25E0B6930()
{
  return swift_getWitnessTable();
}

uint64_t _sSo8NSBundleC15SonicFoundationE13bundleVersionSSvg_0()
{
  id v1 = objc_msgSend(v0, sel_infoDictionary);
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_25E0DB390();

  uint64_t result = *MEMORY[0x263EFFB70];
  if (*MEMORY[0x263EFFB70])
  {
    sub_25E0DB500();
    sub_25E055560(v3, &v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E0B6C94();
    if (swift_dynamicCast()) {
      return v6;
    }
LABEL_5:
    uint64_t v5 = *(void *)a000;
    sub_25E0DB3C0();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t NSBundle.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_25E0DBCF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - v11;
  id v13 = objc_msgSend(v4, sel_infoDictionary);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_25E0DB390();

    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_25E055560(v15, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25E0B6C94();
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, v12, AssociatedTypeWitness);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
}

void sub_25E0B6C94()
{
  if (!qword_26B384A10[0])
  {
    unint64_t v0 = sub_25E0DBCF0();
    if (!v1) {
      atomic_store(v0, qword_26B384A10);
    }
  }
}

uint64_t dispatch thunk of static BundleInfoKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static BundleInfoKey.infoDictionaryKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_25E0B6D10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_25E03CDAC(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      sub_25E0DB3C0();
      if (v8 >= v7 >> 1) {
        sub_25E03CDAC(v7 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E0B6DE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_25E03CB2C(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = a1 + 48;
    do
    {
      uint64_t v6 = *(void *)(v4 - 16);
      uint64_t v5 = *(void *)(v4 - 8);
      v4 += 24;
      uint64_t v11 = v6;
      uint64_t v12 = v5;
      sub_25E0DB3C0();
      sub_25E0DB630();
      sub_25E0DB630();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v13 + 16);
      unint64_t v7 = *(void *)(v13 + 24);
      if (v8 >= v7 >> 1) {
        sub_25E03CB2C(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v13 + 16) = v8 + 1;
      uint64_t v9 = v13 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25E0B6F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13 = *(void *)(a8 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a5);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v17(v14, v16);
  if (v11) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a11, v16, a8);
  }
  return result;
}

uint64_t SQLVirtualTableIndexResults.init(index:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  *(void *)(a4 + 24) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(unsigned char *)(a4 + 48) = 1;
  *(void *)(a4 + 56) = 25;
  *(unsigned char *)(a4 + 64) = 0;
  return result;
}

uint64_t SQLTableFunctionCursorArguments.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*v4 + 8 * a1);
  if (v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a4 + 8) + 16))(v5, a3);
  }
  sub_25E0DBE80();
  swift_bridgeObjectRelease();
  sub_25E0DC2D0();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E0DB630();
  sub_25E0DC650();
  sub_25E0DB630();
  swift_bridgeObjectRelease();
  sub_25E03E00C();
  swift_allocError();
  *unint64_t v7 = 0xD00000000000002ALL;
  v7[1] = 0x800000025E0E4650;
  return swift_willThrow();
}

uint64_t sub_25E0B71C0(sqlite3 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25E0DB540();
  OUTLINED_FUNCTION_1();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1[3];
  v15[1] = v1[2];
  void v15[2] = v10;
  sub_25E0DB3C0();
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v11 = sub_25E0DBD90();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  swift_bridgeObjectRelease();
  if (qword_26A6D4270 != -1) {
    swift_once();
  }
  if (v11) {
    uint64_t v12 = (const char *)(v11 + 32);
  }
  else {
    uint64_t v12 = 0;
  }
  swift_beginAccess();
  swift_retain();
  module_uint64_t v2 = sqlite3_create_module_v2(a1, v12, (const sqlite3_module *)&dword_26A6DDD08, v2, (void (__cdecl *)(void *))sub_25E0BA728);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return module_v2;
}

SonicFoundation::SQLVirtualTableModuleOption_optional __swiftcall SQLVirtualTableModuleOption.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_109(v1);
  return result;
}

uint64_t SQLVirtualTableModuleOption.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_25E0B736C()
{
  return sub_25E0D9098();
}

uint64_t sub_25E0B7374()
{
  return sub_25E0D9214();
}

uint64_t sub_25E0B737C()
{
  return sub_25E0D9764();
}

SonicFoundation::SQLVirtualTableModuleOption_optional sub_25E0B7384(Swift::Int *a1)
{
  return SQLVirtualTableModuleOption.init(rawValue:)(*a1);
}

uint64_t sub_25E0B738C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SQLVirtualTableModuleOption.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t SQLIndexConstraint.columnName.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

double (*SQLIndexConstraint.columnName.modify())(void)
{
  return nullsub_1;
}

SonicFoundation::SQLIndexConstraint::Operator_optional __swiftcall SQLIndexConstraint.Operator.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_109(v1);
  return result;
}

uint64_t SQLIndexConstraint.Operator.rawValue.getter()
{
  return qword_25E0E10D8[*v0];
}

BOOL sub_25E0B751C(char *a1, char *a2)
{
  return sub_25E082020(*a1, *a2);
}

uint64_t sub_25E0B7528()
{
  return sub_25E0D90D8();
}

uint64_t sub_25E0B7530()
{
  return sub_25E0D9240();
}

uint64_t sub_25E0B7538()
{
  return sub_25E0D9724();
}

SonicFoundation::SQLIndexConstraint::Operator_optional sub_25E0B7540(Swift::Int *a1)
{
  return SQLIndexConstraint.Operator.init(rawValue:)(*a1);
}

uint64_t sub_25E0B7548@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SQLIndexConstraint.Operator.rawValue.getter();
  *a1 = result;
  return result;
}

void SQLIndexConstraint.operator.getter(unsigned char *a1@<X8>)
{
}

unsigned char *SQLIndexConstraint.operator.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

double (*SQLIndexConstraint.operator.modify())(void)
{
  return nullsub_1;
}

sqlite3_value *SQLIndexConstraint.decodeValue<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  ppVal[1] = *(sqlite3_value **)MEMORY[0x263EF8340];
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(unsigned int **)(v3 + 32);
  ppVal[0] = 0;
  if (!v8) {
LABEL_15:
  }
    __break(1u);
  uint64_t v9 = (sqlite3_index_info::sqlite3_index_constraint *)*((void *)v8 + 1);
  uint64_t v10 = v8[4];
  uint64_t v11 = v8[10];
  uint64_t v12 = v8[20];
  sqlite3_uint64 v13 = *((void *)v8 + 11);
  *(void *)&v20.nConstraint = *v8;
  v20.aConstraint = v9;
  *(void *)&v20.nOrderBy = v10;
  *(_OWORD *)&v20.aOrderBy = *(_OWORD *)(v8 + 6);
  *(void *)&v20.idxNum = v11;
  long long v14 = *((_OWORD *)v8 + 4);
  *(_OWORD *)&v20.idxStr = *((_OWORD *)v8 + 3);
  *(_OWORD *)&v20.estimatedCost = v14;
  *(void *)&v20.idxFlags = v12;
  v20.colUsed = v13;
  char v21 = 0;
  if (v7 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v7 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  int v16 = sqlite3_vtab_rhs_value(&v20, v7, ppVal);
  if (v16 == 12)
  {
    uint64_t v18 = 1;
    return (sqlite3_value *)__swift_storeEnumTagSinglePayload(a3, v18, 1, a1);
  }
  if (v16)
  {
    sub_25E0DBE80();
    sub_25E0DB630();
    sub_25E0DC2D0();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    sub_25E03E00C();
    swift_allocError();
    *uint64_t v19 = 0;
    v19[1] = 0xE000000000000000;
    return (sqlite3_value *)swift_willThrow();
  }
  else
  {
    uint64_t result = ppVal[0];
    if (ppVal[0])
    {
      uint64_t result = (sqlite3_value *)(*(uint64_t (**)(sqlite3_value *, uint64_t))(*(void *)(a2 + 8) + 16))(ppVal[0], a1);
      if (!v4)
      {
        uint64_t v18 = 0;
        return (sqlite3_value *)__swift_storeEnumTagSinglePayload(a3, v18, 1, a1);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t SQLIndexConstraint.isUsable.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SQLIndexConstraint.isUsable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

double (*SQLIndexConstraint.isUsable.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLIndexOrderingTerm.columnName.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

double (*SQLIndexOrderingTerm.columnName.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLIndexOrderingTerm.isDescending.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SQLIndexOrderingTerm.isDescending.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

double (*SQLIndexOrderingTerm.isDescending.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.constraints.getter()
{
  return sub_25E0DB3C0();
}

uint64_t SQLVirtualTableIndexQuery.constraints.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

double (*SQLVirtualTableIndexQuery.constraints.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.orderingTerms.getter()
{
  return sub_25E0DB3C0();
}

uint64_t SQLVirtualTableIndexQuery.orderingTerms.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

double (*SQLVirtualTableIndexQuery.orderingTerms.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexQuery.usedColumns.getter()
{
  return sub_25E0DB3C0();
}

uint64_t SQLVirtualTableIndexQuery.usedColumns.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

double (*SQLVirtualTableIndexQuery.usedColumns.modify())(void)
{
  return nullsub_1;
}

void sub_25E0B7974(uint64_t a1@<X0>, int *a2@<X1>, void *a3@<X8>)
{
  int v4 = *a2;
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v48 = a2[4];
  uint64_t v6 = (int *)*((void *)a2 + 3);
  unint64_t v52 = *((void *)a2 + 11);
  sub_25E0573F8();
  uint64_t v57 = v7;
  uint64_t v55 = a1;
  if (v5 && v4)
  {
    uint64_t v8 = v7;
    uint64_t v9 = 0;
    BOOL v51 = (unsigned __int8 *)(v5 + 12 * v4);
    uint64_t v49 = a1 + 32;
    uint64_t v10 = (unsigned __int8 *)(v5 + 4);
    do
    {
      uint64_t v12 = v10 - 4;
      uint64_t v11 = *((int *)v10 - 1);
      if (v10[1])
      {
        SQLIndexConstraint.Operator.init(rawValue:)(*v10);
        if (v56 == 17)
        {
          swift_bridgeObjectRelease();
          sub_25E0DBE80();
          swift_bridgeObjectRelease();
          sub_25E0DC2D0();
          sub_25E0DB630();
          swift_bridgeObjectRelease();
          sub_25E03E00C();
          swift_allocError();
          *uint64_t v46 = 0xD000000000000024;
          v46[1] = 0x800000025E0E5660;
          swift_willThrow();
          swift_bridgeObjectRelease();
          return;
        }
        if ((v11 & 0x80000000) != 0) {
          goto LABEL_40;
        }
        if (*(void *)(a1 + 16) <= v11) {
          goto LABEL_41;
        }
        sqlite3_uint64 v13 = (uint64_t *)(v49 + 16 * v11);
        uint64_t v14 = v13[1];
        uint64_t v53 = *v13;
        unint64_t v16 = *(void *)(v8 + 16);
        unint64_t v15 = *(void *)(v8 + 24);
        sub_25E0DB3C0();
        if (v16 >= v15 >> 1)
        {
          sub_25E0573F8();
          uint64_t v8 = v18;
        }
        *(void *)(v8 + 16) = v16 + 1;
        uint64_t v17 = v8 + 40 * v16;
        a1 = v55;
        *(void *)(v17 + 32) = v53;
        *(void *)(v17 + 40) = v14;
        *(unsigned char *)(v17 + 48) = v56;
        *(unsigned char *)(v17 + 49) = 1;
        *(void *)(v17 + 56) = v9;
        *(void *)(v17 + 64) = a2;
        uint64_t v57 = v8;
      }
      v10 += 12;
      ++v9;
    }
    while (v12 + 12 != v51);
  }
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_25E057334();
  uint64_t v21 = v20;
  uint64_t v58 = v20;
  if (!v6 || !v48)
  {
LABEL_21:
    uint64_t v59 = v19;
    uint64_t v33 = *(void *)(a1 + 16);
    if (!v33)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = MEMORY[0x263F8EE78];
LABEL_35:
      *a3 = v57;
      a3[1] = v21;
      a3[2] = v36;
      return;
    }
    unint64_t v34 = 0;
    uint64_t v54 = a1 + 32;
    uint64_t v35 = (uint64_t *)(a1 + 40);
    uint64_t v36 = MEMORY[0x263F8EE78];
    while (v34 <= 0x3F)
    {
      if ((v52 >> v34)) {
        goto LABEL_27;
      }
LABEL_32:
      ++v34;
      v35 += 2;
      if (v33 == v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v58;
        goto LABEL_35;
      }
    }
    unint64_t v37 = *(void *)(a1 + 16);
    if (v37 < 0x3F) {
      goto LABEL_39;
    }
    unint64_t v38 = (2 * v37) | 1;
    uint64_t v39 = sub_25E0DB3C0();
    sub_25E05B164(v39, v54, 63, v38);
    uint64_t v36 = v59;
LABEL_27:
    uint64_t v40 = *(v35 - 1);
    uint64_t v41 = *v35;
    sub_25E0DB3C0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_25E057098();
      uint64_t v36 = v44;
    }
    unint64_t v42 = *(void *)(v36 + 16);
    if (v42 >= *(void *)(v36 + 24) >> 1)
    {
      sub_25E057098();
      uint64_t v36 = v45;
    }
    *(void *)(v36 + 16) = v42 + 1;
    uint64_t v43 = v36 + 16 * v42;
    *(void *)(v43 + 32) = v40;
    *(void *)(v43 + 40) = v41;
    uint64_t v59 = v36;
    a1 = v55;
    goto LABEL_32;
  }
  uint64_t v22 = &v6[2 * v48];
  uint64_t v23 = a1 + 32;
  while (1)
  {
    uint64_t v24 = *v6;
    if ((v24 & 0x80000000) != 0) {
      break;
    }
    if (*(void *)(a1 + 16) <= v24) {
      goto LABEL_38;
    }
    int v25 = *((unsigned __int8 *)v6 + 4);
    uint64_t v26 = (uint64_t *)(v23 + 16 * v24);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    unint64_t v30 = *(void *)(v21 + 16);
    unint64_t v29 = *(void *)(v21 + 24);
    sub_25E0DB3C0();
    if (v30 >= v29 >> 1)
    {
      sub_25E057334();
      uint64_t v21 = v32;
    }
    *(void *)(v21 + 16) = v30 + 1;
    uint64_t v31 = v21 + 24 * v30;
    *(void *)(v31 + 32) = v27;
    *(void *)(v31 + 40) = v28;
    *(unsigned char *)(v31 + 48) = v25 != 0;
    v6 += 2;
    a1 = v55;
    if (v6 == v22)
    {
      uint64_t v58 = v21;
      uint64_t v19 = MEMORY[0x263F8EE78];
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t SQLVirtualTableIndexResults.index.getter()
{
  uint64_t v1 = *v0;
  sub_25E0DB3C0();
  return v1;
}

uint64_t SQLVirtualTableIndexResults.index.setter(int a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)uint64_t v3 = a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v3 + 8) = a2;
  *(void *)(v3 + 16) = a3;
  return result;
}

double (*SQLVirtualTableIndexResults.index.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.constraint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 17);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  return sub_25E0DB3C0();
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.constraint.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  char v5 = *((unsigned char *)a1 + 17);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  *(unsigned char *)(v1 + 17) = v5;
  *(void *)(v1 + 24) = v6;
  *(void *)(v1 + 32) = v7;
  return result;
}

double (*SQLVirtualTableIndexResults.ConstraintUsage.constraint.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.ConstraintUsage.skipVerification.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.cursorArguments.getter()
{
  return sub_25E0DB3C0();
}

uint64_t SQLVirtualTableIndexResults.cursorArguments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*SQLVirtualTableIndexResults.cursorArguments.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.isAlreadyOrdered.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SQLVirtualTableIndexResults.isAlreadyOrdered.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.isAlreadyOrdered.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.estimatedCost.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t SQLVirtualTableIndexResults.estimatedCost.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

double (*SQLVirtualTableIndexResults.estimatedCost.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.estimatedRows.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t SQLVirtualTableIndexResults.estimatedRows.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.estimatedRows.modify())(void)
{
  return nullsub_1;
}

uint64_t SQLVirtualTableIndexResults.hasAtMostOneRow.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t SQLVirtualTableIndexResults.hasAtMostOneRow.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

double (*SQLVirtualTableIndexResults.hasAtMostOneRow.modify())(void)
{
  return nullsub_1;
}

char *sub_25E0B8044(char *result)
{
  uint64_t v2 = result;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  int v9 = *(unsigned __int8 *)(v1 + 64);
  *((_DWORD *)result + 10) = *(_DWORD *)v1;
  if (v3)
  {
    sub_25E0991EC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_25E0BC1A4();
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v3;
    sub_25E0DB3C0();
    va_list v11 = (va_list)sub_25E0DC660();
    swift_setDeallocating();
    sub_25E0BAFC4();
    uint64_t result = sqlite3_vmprintf("%s", v11);
    *((void *)v2 + 6) = result;
    *((_DWORD *)v2 + 14) = 1;
  }
  uint64_t v12 = *(void *)(v5 + 16);
  if (v12)
  {
    uint64_t v13 = *((void *)v2 + 4);
    if (v13)
    {
      uint64_t v14 = 0;
      unint64_t v15 = (unsigned char *)(v5 + 72);
      uint64_t v16 = v12 - 1;
      while (v14 != 0x7FFFFFFF)
      {
        char v17 = *v15;
        uint64_t v18 = (_DWORD *)(v13 + 8 * *((void *)v15 - 2));
        *uint64_t v18 = v14 + 1;
        uint64_t v19 = (BOOL *)(v18 + 1);
        *uint64_t v19 = (v17 & 1) != 0;
        if (v16 == v14) {
          goto LABEL_12;
        }
        v15 += 48;
        ++v14;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    if ((v7 & 1) == 0) {
      *((void *)v2 + 8) = v6;
    }
    *((void *)v2 + 9) = v8;
    if (v9) {
      *((_DWORD *)v2 + 20) = 1;
    }
  }
  return result;
}

uint64_t sub_25E0B81A8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 36);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_25E0DBCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  uint64_t result = swift_release();
  *(void *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_25E0B8234@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(_DWORD *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  uint64_t v7 = a6 + *(int *)(_s13TableFunctionC13_VirtualTableV8FunctionVMa() + 36);
  uint64_t v8 = sub_25E0DBCF0();
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a5, v8);
}

uint64_t sub_25E0B82D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  v1[5] = 0;
  uint64_t v3 = (uint64_t)v1 + *(int *)(a1 + 44);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_25E0DBCF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, AssociatedTypeWitness);
  v1[4] = 0;
  uint64_t result = swift_release();
  v1[1] = 0;
  return result;
}

uint64_t sub_25E0B8390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4 & 1;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  uint64_t v9 = a8 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa() + 44);
  swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_25E0DBCF0();
  va_list v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);

  return v11(v9, a7, v10);
}

double sub_25E0B845C()
{
  dword_26A6DDD08 = 4;
  qword_26A6DDD10 = 0;
  unk_26A6DDD18 = sub_25E0B86A0;
  qword_26A6DDD20 = (uint64_t)sub_25E0B871C;
  qword_26A6DDD28 = (uint64_t)sub_25E0B8788;
  unk_26A6DDD30 = 0;
  qword_26A6DDD38 = (uint64_t)sub_25E0B8804;
  qword_26A6DDD40 = (uint64_t)sub_25E0B8870;
  qword_26A6DDD48 = (uint64_t)sub_25E0B8944;
  qword_26A6DDD50 = (uint64_t)sub_25E0B89AC;
  qword_26A6DDD58 = (uint64_t)sub_25E0B89C0;
  qword_26A6DDD60 = (uint64_t)sub_25E0B8A4C;
  qword_26A6DDD68 = (uint64_t)sub_25E0B8A84;
  double result = 0.0;
  unk_26A6DDD70 = 0u;
  unk_26A6DDD80 = 0u;
  unk_26A6DDD90 = 0u;
  unk_26A6DDDA0 = 0u;
  unk_26A6DDDB0 = 0u;
  qword_26A6DDDC0 = 0;
  return result;
}

uint64_t sub_25E0B852C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = result;
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 48);
  double result = swift_retain();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (a5)
  {
    swift_retain();
    uint64_t v8 = v7(v6, a5);
    sub_25E04E474((uint64_t)v7);
    swift_release();
    return v8;
  }
LABEL_9:
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_25E0B86A4(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 24);
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 80);
    swift_retain();
    uint64_t v6 = v5(v2, a2);
    swift_release();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_25E0B8720(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      uint64_t v3 = *(void (**)(void *))(v2 + 64);
      swift_retain();
      v3(v1);
      swift_release();
      sqlite3_free(v1);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B878C(uint64_t result, uint64_t a2)
{
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 24);
  if (!v3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 96);
    swift_retain();
    uint64_t v6 = v5(v2, a2);
    swift_release();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_25E0B8808(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2)
    {
      uint64_t v3 = *(void (**)(void *))(v2 + 112);
      swift_retain();
      v3(v1);
      swift_release();
      sqlite3_free(v1);
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B8874(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v8 = result;
  if (a3)
  {
    double result = sub_25E0DB640();
    uint64_t v9 = result;
    uint64_t v11 = v10;
    if (v8) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v9 = 0;
  uint64_t v11 = 0;
  if (!result) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v12 = *(void *)(v8 + 8);
  if (v12)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v12 + 128);
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v14 = v13(v8, a2, v9, v11, a5, a4);
    swift_bridgeObjectRelease_n();
    swift_release();
    return v14;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_25E0B8948(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 8);
    if (v2)
    {
      uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 144);
      swift_retain();
      uint64_t v4 = v3(v1);
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B89B0(uint64_t result)
{
  if (result) {
    return *(unsigned __int8 *)(result + 24);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B89C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 160);
    swift_retain();
    uint64_t v8 = v7(v3, a2, a3);
    swift_release();
    return v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_25E0B8A50(uint64_t result, void *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if (*(unsigned char *)(result + 24)) {
      return 12;
    }
    if (a2)
    {
      double result = 0;
      *a2 = *(void *)(v2 + 16);
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B8A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_25E0B8AF8(a1, a2, a3, a4, a5);
  return v10;
}

void *sub_25E0B8AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5[2] = a2;
  v5[3] = a3;
  v5[4] = a1;
  v5[5] = a5;
  uint64_t v8 = OUTLINED_FUNCTION_3_12();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  v5[8] = sub_25E0BC1F4;
  v5[9] = v8;
  uint64_t v9 = OUTLINED_FUNCTION_3_12();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  v5[10] = sub_25E0BC244;
  v5[11] = v9;
  uint64_t v10 = OUTLINED_FUNCTION_3_12();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  v5[12] = sub_25E0BC250;
  v5[13] = v10;
  uint64_t v11 = OUTLINED_FUNCTION_3_12();
  *(void *)(v11 + 16) = a4;
  *(void *)(v11 + 24) = a5;
  v5[14] = sub_25E0BC25C;
  v5[15] = v11;
  uint64_t v12 = OUTLINED_FUNCTION_3_12();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  v5[16] = sub_25E0BC2AC;
  v5[17] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_3_12();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  v5[18] = sub_25E0BC2B8;
  v5[19] = v13;
  uint64_t v14 = OUTLINED_FUNCTION_3_12();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  v5[20] = sub_25E0BC2C4;
  v5[21] = v14;
  unint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a4;
  v15[3] = a5;
  void v15[4] = v5;
  v5[6] = sub_25E0BC304;
  v5[7] = v15;
  swift_retain();
  sub_25E04E474(0);
  return v5;
}

uint64_t sub_25E0B8C70()
{
  uint64_t v0 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  return sub_25E0B81A8(v0);
}

uint64_t sub_25E0B8CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a2;
  sub_25E0B6F84(v8, 1, (uint64_t)sub_25E0BC4B0, (uint64_t)v11, a1, (uint64_t)&_s13TableFunctionC13_VirtualTableVN, v8, MEMORY[0x263F8E628], MEMORY[0x263F8E548], MEMORY[0x263F8E658], v10);
  return v15;
}

uint64_t sub_25E0B8D50@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X8>)
{
  unint64_t v37 = a5;
  uint64_t v10 = sub_25E0DBCF0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)&v32 - v12;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v14 = sub_25E0B6D10(v13);
  swift_bridgeObjectRelease();
  sub_25E0B7974(v14, a2, &v39);
  uint64_t v36 = a1;
  if (v5)
  {
    sub_25E0991EC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
    uint64_t v39 = (uint64_t)v5;
    id v21 = v5;
    sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
    uint64_t v22 = sub_25E0DB550();
    uint64_t v24 = v23;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_25E0BC1A4();
    *(void *)(inited + 32) = v22;
    *(void *)(inited + 40) = v24;
    va_list v25 = (va_list)sub_25E0DC660();
    swift_setDeallocating();
    sub_25E0BAFC4();
    uint64_t v26 = sqlite3_vmprintf("%s", v25);
    *(void *)(v36 + 16) = v26;
    uint64_t result = MEMORY[0x2611CF510](v5);
    int v27 = 1;
LABEL_5:
    int *v37 = v27;
    return result;
  }
  uint64_t v33 = (char *)a2;
  uint64_t v15 = v39;
  uint64_t v34 = v40;
  uint64_t v16 = v41;
  uint64_t v17 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  uint64_t v18 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v35, a1 + *(int *)(v17 + 36), v10);
  uint64_t result = __swift_getEnumTagSinglePayload(v18, 1, a3);
  if (result != 1)
  {
    v38[0] = v15;
    v38[1] = v34;
    v38[2] = v16;
    (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t))(a4 + 48))(&v39, v38, a3, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(v18, a3);
    uint64_t v28 = v42;
    if (v42)
    {
      uint64_t v35 = v45;
      uint64_t v36 = v44;
      uint64_t v30 = v40;
      uint64_t v29 = v41;
      uint64_t v31 = v39;
      LOBYTE(v43) = v43 & 1;
      LOBYTE(v44) = v44 & 1;
      v46 &= 1u;
      sub_25E0B8044(v33);
      uint64_t result = sub_25E0BC4D4(v31, v30, v29, v28);
      int v27 = 0;
    }
    else
    {
      int v27 = 19;
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B9148(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sqlite3_uint64 v8 = *(void *)(*(void *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa() - 8) + 64);
  if ((v8 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_25E0DC130();
    __break(1u);
  }
  else
  {
    uint64_t v9 = sqlite3_malloc64(v8);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
      uint64_t v12 = MEMORY[0x270FA5388](v11);
      void v15[2] = a3;
      v15[3] = a4;
      void v15[4] = v10;
      void v15[5] = a1;
      sub_25E0B6F84(v12, 1, (uint64_t)sub_25E0BC468, (uint64_t)v15, a1, (uint64_t)&_s13TableFunctionC13_VirtualTableVN, v12, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v14);
      uint64_t result = 0;
      *a2 = v10;
    }
    else
    {
      return 7;
    }
  }
  return result;
}

uint64_t sub_25E0B92B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  uint64_t v16 = a3;
  uint64_t v17 = a1;
  return sub_25E0B955C(v10, 1, (uint64_t)sub_25E0BC48C, (uint64_t)v13, a2, v10, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v12);
}

uint64_t sub_25E0B9374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_25E0DBCF0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v19 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  swift_retain();
  uint64_t v16 = v15(a4, a5);
  uint64_t v17 = sub_25E0B6D10(v16);
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, AssociatedTypeWitness);
  sub_25E0B8390(0, v14, 0, 1, v21, v17, (uint64_t)v10, (uint64_t)v13);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 40))(v22, v13, v19);
}

uint64_t sub_25E0B955C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = *(void *)(a7 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a5);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v13, v15);
  if (v10) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a10, v15, a7);
  }
  return result;
}

uint64_t sub_25E0B962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a4(0);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  return sub_25E0B6F84(v11, 1, a5, (uint64_t)v14, a1, a6, v11, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v13);
}

uint64_t sub_25E0B96C4()
{
  uint64_t v0 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  return sub_25E0B82D4(v0);
}

uint64_t sub_25E0B96F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  int v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  sub_25E0B6F84(v16, 1, (uint64_t)sub_25E0BC410, (uint64_t)v19, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v16, MEMORY[0x263F8E628], MEMORY[0x263F8E548], MEMORY[0x263F8E658], v18);
  return v27;
}

uint64_t sub_25E0B97CC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int *a9@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v40 = a9;
  uint64_t v41 = a6;
  uint64_t v43 = a3;
  unsigned int v42 = a2;
  uint64_t v13 = sub_25E0DBCF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v47 = a1;
  uint64_t v21 = *(void *)(a1 + 32);
  if (!v21)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v22 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v21 + *(int *)(v22 + 36), v13);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, a7);
  if (result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v46[0] = a5;
  v46[1] = v41;
  uint64_t v23 = v45;
  (*(void (**)(void, uint64_t, uint64_t, void *, uint64_t, uint64_t))(a8 + 56))(v42, v43, v44, v46, a7, a8);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(a7 - 8) + 8))(v16, a7);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v33 = v47;
    *(void *)(v47 + 16) = v25;
    *(unsigned char *)(v33 + 24) = v34 & 1;
    uint64_t v35 = v33 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa() + 44);
    uint64_t v36 = sub_25E0DBCF0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    uint64_t v37 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v35, v20, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload(v35, 0, 1, AssociatedTypeWitness);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, AssociatedTypeWitness);
    int v38 = 0;
LABEL_8:
    *uint64_t v40 = v38;
    return result;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(a7 - 8) + 8))(v16, a7);
  uint64_t v26 = *(void *)(v47 + 32);
  if (v26)
  {
    sub_25E0991EC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
    v46[0] = v23;
    id v28 = v23;
    sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
    uint64_t v29 = sub_25E0DB550();
    uint64_t v31 = v30;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_25E0BC1A4();
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 40) = v31;
    va_list v32 = (va_list)sub_25E0DC660();
    swift_setDeallocating();
    sub_25E0BAFC4();
    *(void *)(v26 + 16) = sqlite3_vmprintf("%s", v32);
    uint64_t result = MEMORY[0x2611CF510](v23);
    int v38 = 1;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25E0B9C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  sub_25E0B6F84(v6, 1, (uint64_t)sub_25E0BC3F0, (uint64_t)v9, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v6, MEMORY[0x263F8E628], MEMORY[0x263F8E548], MEMORY[0x263F8E658], v8);
  return v12;
}

uint64_t sub_25E0B9CBC@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  uint64_t v5 = a1 + *(int *)(_s13TableFunctionC19_VirtualTableCursorV6CursorVMa() + 44);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    if (!v2)
    {
      int v17 = 0;
      *(void *)(a1 + 16) = result;
      *(unsigned char *)(a1 + 24) = v9 & 1;
      goto LABEL_6;
    }
    uint64_t v10 = *(void *)(a1 + 32);
    if (v10)
    {
      sub_25E0991EC();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
      id v12 = v2;
      sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
      uint64_t v13 = sub_25E0DB550();
      uint64_t v15 = v14;
      *(void *)(inited + 56) = MEMORY[0x263F8D310];
      *(void *)(inited + 64) = sub_25E0BC1A4();
      *(void *)(inited + 32) = v13;
      *(void *)(inited + 40) = v15;
      va_list v16 = (va_list)sub_25E0DC660();
      swift_setDeallocating();
      sub_25E0BAFC4();
      *(void *)(v10 + 16) = sqlite3_vmprintf("%s", v16);
      uint64_t result = MEMORY[0x2611CF510](v2);
      int v17 = 1;
LABEL_6:
      *a2 = v17;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_25E0B9E7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  int v16 = a3;
  uint64_t v17 = a2;
  sub_25E0B6F84(v10, 1, (uint64_t)sub_25E0BC3C8, (uint64_t)v13, a1, (uint64_t)&_s13TableFunctionC19_VirtualTableCursorVN, v10, MEMORY[0x263F8E628], MEMORY[0x263F8E548], MEMORY[0x263F8E658], v12);
  return v18;
}

uint64_t sub_25E0B9F38@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  void (*v19)(void *__return_ptr, void *, uint64_t, uint64_t);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  va_list v29;
  uint64_t v30;
  _DWORD *v31;
  void v32[2];
  void v33[3];
  uint64_t v34;
  uint64_t v35;
  void *v36;

  uint64_t v30 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_25E0DBCF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13) {
    goto LABEL_12;
  }
  if (a2 < 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(v13 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v31 = a4;
  uint64_t v14 = v13 + 16 * a2;
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 40);
  uint64_t v17 = _s13TableFunctionC19_VirtualTableCursorV6CursorVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1 + *(int *)(v17 + 44), v8);
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v32[0] = v15;
  v32[1] = v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v19 = *(void (**)(void *__return_ptr, void *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16);
  sub_25E0DB3C0();
  uint64_t v20 = v36;
  v19(v33, v32, AssociatedTypeWitness, AssociatedConformanceWitness);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v12, AssociatedTypeWitness);
    uint64_t v21 = v34;
    uint64_t v22 = v35;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v30, v21, v22);
    *uint64_t v31 = 0;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v12, AssociatedTypeWitness);
  uint64_t v23 = *(void *)(a1 + 32);
  if (v23)
  {
    sub_25E0991EC();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_25E0DD9C0;
    v33[0] = v20;
    uint64_t v25 = v20;
    sub_25E03E530(0, (unint64_t *)&qword_26B384A08);
    uint64_t v26 = sub_25E0DB550();
    id v28 = v27;
    *(void *)(inited + 56) = MEMORY[0x263F8D310];
    *(void *)(inited + 64) = sub_25E0BC1A4();
    *(void *)(inited + 32) = v26;
    *(void *)(inited + 40) = v28;
    uint64_t v29 = (va_list)sub_25E0DC660();
    swift_setDeallocating();
    sub_25E0BAFC4();
    *(void *)(v23 + 16) = sqlite3_vmprintf("%s", v29);
    uint64_t result = MEMORY[0x2611CF510](v20);
    *uint64_t v31 = 1;
    return result;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_25E0BA2A8(sqlite3 *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  sqlite3_uint64 v12 = *(void *)(*(void *)(v11 - 8) + 64);
  if ((v12 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_25E0DC130();
    __break(1u);
  }
  else
  {
    uint64_t v13 = sqlite3_malloc64(v12);
    if (!v13) {
      return 7;
    }
    uint64_t v14 = (uint64_t)v13;
    unsigned int v27 = a2;
    uint64_t v28 = v5;
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned __int8 *)(v15 + 32);
      do
      {
        int v18 = *v17++;
        sqlite3_vtab_config_1(a1, v18 + 1);
        --v16;
      }
      while (v16);
    }
    uint64_t v19 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v19);
    void v26[2] = a4;
    v26[3] = a5;
    void v26[4] = a3;
    sub_25E0B955C(v11, 1, (uint64_t)sub_25E0BC340, (uint64_t)v26, v14, v11, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8E658], v25);
    *unsigned int v27 = v14;
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_25E0DBE80();
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD00000000000001CLL;
    unint64_t v31 = 0x800000025E0E5630;
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
    uint64_t v21 = sub_25E0B6DE8(v20);
    swift_bridgeObjectRelease();
    uint64_t v29 = v21;
    sub_25E0BC364();
    sub_25E056704();
    sub_25E0DB480();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    swift_bridgeObjectRelease();
    sub_25E0DB630();
    uint64_t v22 = sub_25E0DB580();
    swift_bridgeObjectRelease();
    uint64_t v23 = sqlite3_declare_vtab(a1, (const char *)(v22 + 32));
    swift_release();
    return v23;
  }
  return result;
}

uint64_t sub_25E0BA594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_25E0DBCF0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = _s13TableFunctionC13_VirtualTableV8FunctionVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(a4 + 40);
  swift_retain();
  v15(a3, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, a3);
  sub_25E0B8234(0, 0, 0, a2, (uint64_t)v10, (uint64_t)v14);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(a1, v14, v11);
}

uint64_t sub_25E0BA72C()
{
  swift_bridgeObjectRelease();
  sub_25E04E474(*(void *)(v0 + 48));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_25E0BA78C()
{
  sub_25E0BA72C();

  return swift_deallocClassInstance();
}

uint64_t SQLDatabase.registerFunction<A>(_:named:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[9] = a5;
  v6[10] = v5;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  return OUTLINED_FUNCTION_1_16((uint64_t)sub_25E0BA7E0);
}

uint64_t sub_25E0BA7E0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v0[11] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  uint64_t v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  sub_25E0DB3C0();
  uint64_t v7 = sub_25E055658(v2, v3, v6);
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = v0[5];
    swift_endAccess();
    uint64_t v9 = *(void *)(v7 + 32);
    swift_release();
    if (v9 == v8)
    {
      OUTLINED_FUNCTION_17_0();
      return v10();
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[10];
  uint64_t v15 = v0[7];
  uint64_t v14 = v0[8];
  uint64_t v17 = v0[5];
  uint64_t v16 = v0[6];
  _s13TableFunctionCMa();
  sub_25E0DB3C0();
  uint64_t v18 = sub_25E0B8A88(v17, v16, v15, v14, v12);
  v0[12] = v18;
  uint64_t v21 = *(void *)(v13 + OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection);
  v0[13] = v21;
  if (v21)
  {
    swift_retain();
    swift_retain();
    uint64_t v18 = OUTLINED_FUNCTION_52();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v18, v19, v20);
}

uint64_t sub_25E0BA978()
{
  OUTLINED_FUNCTION_17();
  sub_25E08EB70(v0[13], v0[12]);
  v0[14] = 0;
  uint64_t v1 = v0[10];
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0BAA14, v1, 0);
}

uint64_t sub_25E0BAA14()
{
  swift_beginAccess();
  sub_25E0DB3C0();
  swift_retain();
  sub_25E0AC074();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v0();
}

uint64_t _s13TableFunctionCMa()
{
  return self;
}

uint64_t SQLDatabase.unregisterFunction(named:)(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return OUTLINED_FUNCTION_1_16((uint64_t)sub_25E0BAB18);
}

uint64_t sub_25E0BAB18()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[7];
  uint64_t v2 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  v0[8] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_tableFunctions;
  uint64_t v3 = v1 + v2;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    sub_25E0DB3C0();
    sub_25E0BB0AC();
    char v5 = v4;
    swift_endAccess();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t v9 = v0[7];
      uint64_t v10 = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
      v0[9] = OBJC_IVAR____TtC15SonicFoundation11SQLDatabase_connection;
      uint64_t v11 = *(void *)(v9 + v10);
      v0[10] = v11;
      if (v11)
      {
        swift_retain();
        uint64_t v6 = OUTLINED_FUNCTION_52();
      }
      else
      {
        __break(1u);
      }
      return MEMORY[0x270FA2498](v6, v7, v8);
    }
  }
  else
  {
    swift_endAccess();
  }
  OUTLINED_FUNCTION_17_0();
  return v12();
}

uint64_t sub_25E0BAC48()
{
  OUTLINED_FUNCTION_17();
  sub_25E04FE68();
  *(void *)(v0 + 88) = 0;
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  return MEMORY[0x270FA2498](sub_25E0BACE4, v1, 0);
}

uint64_t sub_25E0BACE4()
{
  OUTLINED_FUNCTION_12();
  uint64_t v4 = *(void *)(v0[7] + v0[9]);
  v0[12] = v4;
  if (v4)
  {
    sub_25E0DB3C0();
    swift_retain();
    uint64_t v1 = OUTLINED_FUNCTION_52();
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA2498](v1, v2, v3);
}

uint64_t sub_25E0BAD64()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = v0[11];
  sub_25E08ECA0(v0[12], v0[5], v0[6]);
  v0[13] = v1;
  if (v1)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = sub_25E0AB78C;
  }
  else
  {
    uint64_t v4 = v0[7];
    swift_release();
    uint64_t v3 = sub_25E0BAE00;
    uint64_t v2 = v4;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_25E0BAE00()
{
  OUTLINED_FUNCTION_17();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_beginAccess();
  sub_25E0DB3C0();
  sub_25E0ABC90(v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_17_0();
  return v3();
}

uint64_t sub_25E0BAEB0(sqlite3 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E0DB540();
  OUTLINED_FUNCTION_1();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = a2;
  v16[1] = a3;
  sub_25E0DB530();
  sub_25E03FD80();
  uint64_t v12 = sub_25E0DBD90();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  if (v12) {
    uint64_t v13 = (const char *)(v12 + 32);
  }
  else {
    uint64_t v13 = 0;
  }
  module_uint64_t v2 = sqlite3_create_module_v2(a1, v13, 0, 0, 0);
  swift_bridgeObjectRelease();
  return module_v2;
}

uint64_t sub_25E0BAFC4()
{
  sub_25E03E530(0, (unint64_t *)&qword_26A6D56D0);
  swift_arrayDestroy();

  return swift_deallocClassInstance();
}

void sub_25E0BB034(uint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = *(void *)(v3 + 16);
    }
    sub_25E03CB2C(isUniquelyReferenced_nonNull_native, v5, 0);
  }
}

unint64_t sub_25E0BB0AC()
{
  OUTLINED_FUNCTION_10_13();
  sub_25E0DB5E0();
  uint64_t v2 = sub_25E0DC500();

  return sub_25E0749FC(v1, v0, v2);
}

unint64_t sub_25E0BB110()
{
  OUTLINED_FUNCTION_10_13();
  sub_25E0DB3C0();
  sub_25E0DB5E0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_25E0DC500();

  return sub_25E0749FC(v1, v0, v2);
}

unint64_t sub_25E0BB188()
{
  unint64_t result = qword_26A6D5CF0;
  if (!qword_26A6D5CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5CF0);
  }
  return result;
}

unint64_t sub_25E0BB1D8()
{
  unint64_t result = qword_26A6D5CF8;
  if (!qword_26A6D5CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A6D5CF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SQLVirtualTableModuleOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E0BB2F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLVirtualTableModuleOption()
{
}

uint64_t dispatch thunk of static SQLTableFunction.columns.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static SQLTableFunction.options.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SQLTableFunction.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SQLTableFunction.index(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SQLTableFunction.makeCursor(index:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t getEnumTagSinglePayload for SQLTableFunctionCursorArguments(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SQLTableFunctionCursorArguments(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for SQLTableFunctionCursorArguments()
{
}

uint64_t dispatch thunk of SQLTableFunctionCursor.next()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SQLTableFunctionCursor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t initializeWithCopy for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_25E0DB3C0();
  return a1;
}

uint64_t assignWithCopy for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SQLIndexConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLIndexConstraint(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLIndexConstraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SQLIndexConstraint()
{
}

uint64_t getEnumTagSinglePayload for SQLIndexConstraint.Operator(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF0)
  {
    if (a2 + 16 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 16) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 17;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v5 = v6 - 17;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SQLIndexConstraint.Operator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *__n128 result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E0BB75CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 16;
        break;
    }
  }
  return result;
}

void type metadata accessor for SQLIndexConstraint.Operator()
{
}

uint64_t sub_25E0BB794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  sub_25E0DB3C0();
  return a1;
}

uint64_t assignWithCopy for SQLIndexOrderingTerm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_25E0DB3C0();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}